uint64_t type metadata accessor for SubscriptionStoreEntitlementLoadingView.LoadingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubscriptionStoreEntitlementLoadingView.LoadingView);
}

unint64_t sub_221084184()
{
  unint64_t result;

  result = qword_255658FC0;
  if (!qword_255658FC0)
  {
    result = MEMORY[0x22766BAC4](&unk_221305B48, &type metadata for SubscriptionStoreContentUnavailableView);
    atomic_store(result, (unint64_t *)&qword_255658FC0);
  }
  return result;
}

uint64_t sub_2210841C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_22107BD78(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_2210841CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_255658FE8;
  if (!qword_255658FE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658FE0);
    v2 = MEMORY[0x24BEE0D28];
    result = MEMORY[0x22766BAC4](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255658FE8);
  }
  return result;
}

uint64_t sub_221084228()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22108424C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_221085744;
  v2 = OUTLINED_FUNCTION_40_1();
  return OUTLINED_FUNCTION_25_7(v2, v3, v4, v5);
}

uint64_t sub_2210842A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_221085744;
  v2 = OUTLINED_FUNCTION_40_1();
  return OUTLINED_FUNCTION_25_7(v2, v3, v4, v5);
}

uint64_t sub_2210842F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_28_8(a1, a2, a3, a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_22108434C;
  v6 = OUTLINED_FUNCTION_64_1();
  return sub_2210803A4(v6, v7, v8);
}

uint64_t sub_22108434C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_13();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_221084378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_2212F5A54();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_22108441C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  _QWORD *v3;

  v1 = v0[9];
  sub_2212F5A6C();
  sub_221023FE4(&qword_255659070, (void (*)(uint64_t))MEMORY[0x24BEE6E10]);
  sub_2212F5D48();
  sub_221023FE4(&qword_255659078, (void (*)(uint64_t))MEMORY[0x24BEE6DC8]);
  sub_2212F5A78();
  v2 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
  v0[12] = v2;
  OUTLINED_FUNCTION_115(v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[13] = v3;
  *v3 = v0;
  v3[1] = sub_221084524;
  OUTLINED_FUNCTION_82_0(v0[11]);
  return sub_2212F5D54();
}

uint64_t sub_221084524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_77_0();
  v3 = *(void (**)(uint64_t))(v2 + 96);
  OUTLINED_FUNCTION_113(v4);
  *(_QWORD *)(v2 + 112) = v0;
  swift_task_dealloc();
  v5 = OUTLINED_FUNCTION_54_0();
  v3(v5);
  if (v0)
    return OUTLINED_FUNCTION_3_11();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13_13();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_2210845AC()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_13_13();
  return OUTLINED_FUNCTION_42_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for SubscriptionStoreEntitlementLoadingView.TimeoutError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubscriptionStoreEntitlementLoadingView.TimeoutError);
}

uint64_t objectdestroy_15Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_91_0(a1, a2, *(_QWORD *)(v5 + 24), a4);
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_74_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657A28);
  if (OUTLINED_FUNCTION_14_3() == 1)
  {
    v7 = OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_8_4(v7);
  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_48_2();
  OUTLINED_FUNCTION_34_4();
  swift_release();
  v8 = (id *)(v6 + *(int *)(v4 + 60));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658EF0);
  v9 = OUTLINED_FUNCTION_14_3();
  if (v9 == 1)
  {
    v10 = type metadata accessor for Subscription();
    if (!OUTLINED_FUNCTION_78_1(v10))
    {
      v11 = sub_2212F51B4();
      OUTLINED_FUNCTION_8_4(v11);
    }
  }
  else if (!v9)
  {

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659040);
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_66_1();
  swift_release();
  OUTLINED_FUNCTION_12_16();
  return OUTLINED_FUNCTION_0_4();
}

void sub_2210846E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = OUTLINED_FUNCTION_11_12(a1, a2, a3, a4);
  sub_22107F66C(v4, v5, v6, v7);
}

uint64_t sub_221084704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_255656110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22108474C(uint64_t (*a1)(void))
{
  return a1();
}

void sub_221084758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (uint64_t *)OUTLINED_FUNCTION_11_12(a1, a2, a3, a4);
  sub_22107EAC0(v4, v5, v6, v7);
}

void sub_22108477C(id a1, char a2)
{
  if (a2 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a2)
  {

  }
}

uint64_t sub_22108479C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_28_8(a1, a2, a3, a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_221085744;
  v6 = OUTLINED_FUNCTION_64_1();
  return sub_22107D9C0(v6, v7, v8);
}

uint64_t sub_2210847F0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_221084814()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_221084868;
  v2 = OUTLINED_FUNCTION_40_1();
  return sub_2210838D4(v2, v3, v4);
}

uint64_t sub_221084868(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_4_13();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t sub_22108489C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_91_0(a1, a2, *(_QWORD *)(v5 + 40), a4);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_74_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657A28);
  if (OUTLINED_FUNCTION_14_3() == 1)
  {
    v7 = OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_8_4(v7);
  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_48_2();
  OUTLINED_FUNCTION_34_4();
  swift_release();
  v8 = (id *)(v6 + *(int *)(v4 + 60));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658EF0);
  v9 = OUTLINED_FUNCTION_14_3();
  if (v9 == 1)
  {
    v10 = type metadata accessor for Subscription();
    if (!OUTLINED_FUNCTION_78_1(v10))
    {
      v11 = sub_2212F51B4();
      OUTLINED_FUNCTION_8_4(v11);
    }
  }
  else if (!v9)
  {

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659040);
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_66_1();
  swift_release();
  OUTLINED_FUNCTION_12_16();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t sub_221084998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SubscriptionStoreEntitlementLoadingView(0, v7, v8, a4)- 8)+ 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_221084A38;
  return sub_22108345C(a1, v10, v11, v12, v7, v8);
}

uint64_t sub_221084A38()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_13();
  return OUTLINED_FUNCTION_42_2(*(uint64_t (**)(void))(v0 + 8));
}

void sub_221084A60()
{
  sub_22107D778();
}

void sub_221084A7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_24_1(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  OUTLINED_FUNCTION_6_0();
}

void sub_221084AB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_24_1(a1, a2, a3);
  OUTLINED_FUNCTION_5_4(v3);
  OUTLINED_FUNCTION_6_0();
}

void sub_221084AD0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_5_4(v3);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_221084AFC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_221084B70(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
  }
  else
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_221084BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_221084C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_221084C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_221084CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_BYTE *)(*(_QWORD *)(v5 + 64) + a1) = *(_BYTE *)(*(_QWORD *)(v5 + 64) + a2);
  return a1;
}

uint64_t sub_221084D1C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v16;
  int v17;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0xFE)
    v7 = 254;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_21;
  v10 = v8 + 1;
  v11 = 8 * (v8 + 1);
  if ((v8 + 1) > 3)
    goto LABEL_7;
  v13 = ((v9 + ~(-1 << v11)) >> v11) + 1;
  if (HIWORD(v13))
  {
    v12 = *(_DWORD *)(a1 + v10);
    if (v12)
      goto LABEL_14;
    goto LABEL_21;
  }
  if (v13 > 0xFF)
  {
    v12 = *(unsigned __int16 *)(a1 + v10);
    if (*(_WORD *)(a1 + v10))
      goto LABEL_14;
LABEL_21:
    if (v6 >= 0xFE)
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    v16 = *(unsigned __int8 *)(v8 + a1);
    if (v16 < 2)
      return 0;
    v17 = (v16 + 2147483646) & 0x7FFFFFFF;
    return (v17 + 1);
  }
  if (v13 < 2)
    goto LABEL_21;
LABEL_7:
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_21;
LABEL_14:
  v14 = (v12 - 1) << v11;
  if (v10 > 3)
    v14 = 0;
  if (!(_DWORD)v10)
  {
    v17 = v7 + v14;
    return (v17 + 1);
  }
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_221084DDC + 4 * byte_2213005DF[(v10 - 1)]))();
}

void sub_221084E48(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + 1;
  v9 = 8 * (v7 + 1);
  if (a3 > v6)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v6 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v6 < a2)
  {
    v11 = ~v6 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v7 != -1)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v7 + 1);
        if (v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v7 + 1);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_221085018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658F98);
  OUTLINED_FUNCTION_55_1();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658FA0);
  sub_2212F3348();
  OUTLINED_FUNCTION_101_0();
  type metadata accessor for SubscriptionStoreStaticView(v0, v1, v2, v3);
  sub_2212F3A20();
  OUTLINED_FUNCTION_55_1();
  sub_2210173F4();
  OUTLINED_FUNCTION_7_2();
}

void sub_2210850C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_2212F39FC();
  OUTLINED_FUNCTION_26_7();
  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658C00);
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_109();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658FA8);
  OUTLINED_FUNCTION_26_7();
  sub_2212F3348();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_101_0();
  type metadata accessor for SubscriptionStoreEntitlementLoadingView.LoadingView(v14, v15, v16, v17);
  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_109();
  sub_221024548(&qword_255658FB0, &qword_255658F98);
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v18;
  v19 = MEMORY[0x24BDED308];
  v20 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v12, v13 - 120);
  sub_221024548(&qword_255658FB8, &qword_255658FA0);
  *(_QWORD *)(v13 - 136) = v20;
  *(_QWORD *)(v13 - 128) = v21;
  MEMORY[0x22766BAC4](v19, a11, v13 - 136);
  OUTLINED_FUNCTION_8_2();
}

void sub_22108521C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 152) = v9;
  *(_QWORD *)(v10 - 144) = a1;
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], a9, v10 - 152);
  sub_221084184();
  OUTLINED_FUNCTION_93_0();
}

void sub_221085250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = v1;
  *(_QWORD *)(v2 - 160) = a1;
  OUTLINED_FUNCTION_7_2();
}

void sub_221085264(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  v3 = sub_2210481F0();
  *(_QWORD *)(v1 - 184) = a1;
  *(_QWORD *)(v1 - 176) = v3;
  OUTLINED_FUNCTION_18_1();
}

void sub_221085280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_221024548(&qword_255658CB8, &qword_255658C00);
  v42 = v41;
  *(_QWORD *)(v39 - 200) = a1;
  *(_QWORD *)(v39 - 192) = v41;
  v43 = MEMORY[0x22766BAC4](v38, a12, v39 - 200);
  *(_QWORD *)(v39 - 216) = v37;
  *(_QWORD *)(v39 - 208) = v43;
  MEMORY[0x22766BAC4](v36, a10, v39 - 216);
  sub_221024548(&qword_255658FC8, &qword_255658FA8);
  a36 = v44;
  a34 = MEMORY[0x22766BAC4](v38, a14, &a36);
  a32 = MEMORY[0x22766BAC4](v38, a15, &a34);
  a33 = v42;
  v45 = MEMORY[0x22766BAC4](v38, a13, &a32);
  v46 = MEMORY[0x22766BAC4](&unk_221300888, a16);
  a30 = v45;
  a31 = v46;
  MEMORY[0x22766BAC4](v36, a17, &a30);
  OUTLINED_FUNCTION_34_3();
}

void sub_221085360()
{
  sub_2212F4848();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658FD0);
  OUTLINED_FUNCTION_81();
  _s16TaskViewModifierVMa_0();
  sub_2212F3348();
  _s16TaskViewModifierVMa(255);
  sub_2212F3348();
  sub_2212F30FC();
  OUTLINED_FUNCTION_56_1();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658FD8);
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_8_2();
}

void sub_221085404()
{
  uint64_t *v0;

  sub_221024548(&qword_255659000, v0);
  OUTLINED_FUNCTION_34_3();
}

void sub_221085430()
{
  void (*v0)(uint64_t);

  sub_221023FE4(&qword_255659018, v0);
  OUTLINED_FUNCTION_18_1();
}

void sub_22108545C()
{
  sub_221023FE4(&qword_255658528, (void (*)(uint64_t))_s16TaskViewModifierVMa);
  OUTLINED_FUNCTION_7_2();
}

void sub_22108548C()
{
  sub_221023FE4(&qword_255659020, (void (*)(uint64_t))MEMORY[0x24BDEC4E0]);
  OUTLINED_FUNCTION_3_3();
}

uint64_t sub_2210854BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD v7[49];

  sub_221024548(&qword_255659028, v2);
  v7[0] = a1;
  v7[1] = v5;
  return MEMORY[0x22766BAC4](v3, v1, v7);
}

uint64_t sub_22108550C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_221085540()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255659230;
  if (!qword_255659230)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659228);
    sub_221024548(&qword_255659238, &qword_255659220);
    v3 = v2;
    sub_221024548(&qword_255657CE0, &qword_255657CE8);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255659230);
  }
  return result;
}

uint64_t sub_2210855E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_221084054(*(_QWORD *)(v1 + 24), a1);
}

void sub_2210855F0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659228);
  OUTLINED_FUNCTION_55_1();
  sub_2210173F4();
  OUTLINED_FUNCTION_3_3();
}

void sub_22108564C()
{
  sub_2212F39FC();
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_59_1();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658C00);
  OUTLINED_FUNCTION_81();
  sub_221085540();
  OUTLINED_FUNCTION_3_3();
}

void sub_2210856B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  a16 = a1;
  MEMORY[0x22766BAC4](v16, v17, &a15);
  sub_2210481F0();
  OUTLINED_FUNCTION_8_2();
}

uint64_t sub_2210856DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD v7[18];

  sub_221024548(&qword_255658CB8, v2);
  v7[0] = a1;
  v7[1] = v5;
  MEMORY[0x22766BAC4](v1, v3, v7);
  return swift_getOpaqueTypeConformance2();
}

uint64_t OUTLINED_FUNCTION_0_14()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_4_13()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_5_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  return sub_221115C44(a14, a15, &a13);
}

uint64_t OUTLINED_FUNCTION_6_9()
{
  return sub_2212F540C();
}

uint64_t OUTLINED_FUNCTION_7_7()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_11_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for SubscriptionStoreEntitlementLoadingView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return a1;
}

uint64_t OUTLINED_FUNCTION_12_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_221017894(*(_QWORD *)(v2 + *(int *)(v0 + 68)), *(_BYTE *)(v2 + *(int *)(v0 + 68) + 8));
  sub_221017894(*(_QWORD *)(v2 + *(int *)(v0 + 72)), *(_BYTE *)(v2 + *(int *)(v0 + 72) + 8));
  return v1;
}

uint64_t OUTLINED_FUNCTION_13_13()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_14_12(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_15_10()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_16_8()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_17_11()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_18_10()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_20_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_22108477C(*(id *)(v1 + v3), *(_BYTE *)(v1 + v3 + 8));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1 + v3 + *(int *)(v0 + 40), v2);
}

uint64_t OUTLINED_FUNCTION_21_10()
{
  return sub_2212F540C();
}

uint64_t OUTLINED_FUNCTION_24_9()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_25_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_26_7()
{
  return sub_2212F3348();
}

uint64_t OUTLINED_FUNCTION_27_7()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_28_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for SubscriptionStoreEntitlementLoadingView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t OUTLINED_FUNCTION_31_4()
{
  return swift_allocError();
}

void OUTLINED_FUNCTION_34_4()
{
  uint64_t v0;
  uint64_t v1;

  sub_2210817BC(*(void **)(v1 + *(int *)(v0 + 56)), *(_QWORD *)(v1 + *(int *)(v0 + 56) + 8), *(_QWORD *)(v1 + *(int *)(v0 + 56) + 16), *(_BYTE *)(v1 + *(int *)(v0 + 56) + 24));
}

uint64_t OUTLINED_FUNCTION_36_3()
{
  return sub_2212F5898();
}

uint64_t OUTLINED_FUNCTION_40_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_41_2(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_42_2(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_43_2(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_44_2()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_45_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_47_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_48_2()
{
  uint64_t v0;
  uint64_t v1;

  sub_2210817AC(*(id *)(v1 + *(int *)(v0 + 52)), *(_BYTE *)(v1 + *(int *)(v0 + 52) + 8));
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_51()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_52_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_53_0()
{
  return sub_2212F4764();
}

uint64_t OUTLINED_FUNCTION_54_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  return sub_2212F3348();
}

uint64_t OUTLINED_FUNCTION_56_1()
{
  return sub_2212F3348();
}

uint64_t OUTLINED_FUNCTION_57_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_58_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_59_1()
{
  return sub_2212F3348();
}

uint64_t OUTLINED_FUNCTION_60_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_63_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_64_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  return swift_bridgeObjectRelease();
}

__n128 OUTLINED_FUNCTION_67_1@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(__n128 *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_68_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_69_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return sub_221115C44(a1, (a2 - 32) | 0x8000000000000000, (uint64_t *)va);
}

void OUTLINED_FUNCTION_70_1()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2082;
}

uint64_t OUTLINED_FUNCTION_73_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_74_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_75_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 400);
}

void OUTLINED_FUNCTION_77_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_78_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_79()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_80()
{
  return sub_2212F3348();
}

uint64_t OUTLINED_FUNCTION_81()
{
  return sub_2212F3348();
}

uint64_t OUTLINED_FUNCTION_82_0@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_83@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_84_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_85()
{
  return sub_2212F5A60();
}

void OUTLINED_FUNCTION_86_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  return sub_2212F4764();
}

uint64_t OUTLINED_FUNCTION_88_0()
{
  return sub_2212F4758();
}

uint64_t OUTLINED_FUNCTION_91_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for SubscriptionStoreEntitlementLoadingView(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_92_0()
{
  return sub_2212F2B20();
}

void OUTLINED_FUNCTION_93_0()
{
  JUMPOUT(0x22766BAC4);
}

__n128 OUTLINED_FUNCTION_94_0()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

uint64_t OUTLINED_FUNCTION_95_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_96_0()
{
  return sub_2212F2C1C();
}

uint64_t OUTLINED_FUNCTION_97_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_99_0()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_100_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_221084AB0(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_102()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

void OUTLINED_FUNCTION_103(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  sub_22115C810(*(_QWORD *)(v3 + 576), *(_QWORD *)(v3 + 584), a3);
}

uint64_t OUTLINED_FUNCTION_104()
{
  return sub_2212F3348();
}

uint64_t OUTLINED_FUNCTION_109()
{
  return sub_2212F3A20();
}

uint64_t OUTLINED_FUNCTION_110()
{
  return sub_2212F3A20();
}

uint64_t OUTLINED_FUNCTION_111()
{
  return sub_2212F3A20();
}

uint64_t OUTLINED_FUNCTION_112()
{
  uint64_t v0;

  return sub_22107A73C(v0);
}

void OUTLINED_FUNCTION_113(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t OUTLINED_FUNCTION_114()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_115@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void OUTLINED_FUNCTION_117(float a1)
{
  float *v1;

  *v1 = a1;
}

__n128 OUTLINED_FUNCTION_118()
{
  uint64_t v0;

  return *(__n128 *)(v0 - 128);
}

uint64_t OUTLINED_FUNCTION_119()
{
  return sub_22107A004();
}

uint64_t OUTLINED_FUNCTION_120()
{
  return sub_22107A048();
}

uint64_t sub_221085D70(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v13 = a1;
  v14 = a2 & 1;
  v15 = a3;
  v16 = a4 & 1;
  v17 = a5;
  v18 = a6 & 1;
  v19 = a7;
  v20 = a8 & 1;
  v21 = a9;
  v22 = a10;
  return MEMORY[0x227669B20](&v13, a11, &type metadata for CooperativeFrameModifier, a12);
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

ValueMetadata *type metadata accessor for CooperativeFrameModifier()
{
  return &type metadata for CooperativeFrameModifier;
}

uint64_t sub_221085DF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_221085E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_BYTE *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_BYTE *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_BYTE *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  v10 = *(_BYTE *)(v2 + 56);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_BYTE *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v7;
  *(_BYTE *)(a2 + 40) = v8;
  *(_QWORD *)(a2 + 48) = v9;
  *(_BYTE *)(a2 + 56) = v10;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(v2 + 64);
  v11 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255659240) + 44);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659248);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a1, v12);
}

uint64_t sub_221085EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;
  _BYTE v6[80];

  memcpy(v6, v2, sizeof(v6));
  return sub_221085E04(a1, a2);
}

uint64_t getEnumTagSinglePayload for CooperativeFrameLayout(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CooperativeFrameLayout(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 80) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CooperativeFrameLayout()
{
  return &type metadata for CooperativeFrameLayout;
}

unint64_t sub_221085F6C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255659250;
  if (!qword_255659250)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659240);
    v2[0] = sub_221018504(&qword_255659258, &qword_255659260, MEMORY[0x24BDEB9A8]);
    v2[1] = sub_221018504(&qword_255659268, &qword_255659248, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEC550], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255659250);
  }
  return result;
}

double sub_221086008(uint64_t a1, int a2, uint64_t a3, int a4)
{
  _BYTE *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _BYTE *v20;
  unint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _BYTE *v29;
  double v30;
  double v31;
  double v32;
  char v33;
  int v34;
  char v35;
  double v36;
  _BYTE v38[12];
  int v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  int v46;
  int v47;
  uint64_t v48;
  char v49;
  char v50;
  _BYTE v51[25];
  _OWORD v52[2];
  _BYTE v53[25];
  _BYTE v54[16];
  _BYTE v55[16];
  _BYTE v56[25];
  _BYTE v57[16];
  _BYTE v58[16];
  double v59;
  char v60;
  uint64_t v61;
  double v62;
  char v63;
  uint64_t v64;
  double v65;
  char v66;
  uint64_t v67;
  double v68;
  char v69;
  uint64_t v70;

  v46 = a4;
  v47 = a2;
  v48 = a1;
  v6 = type metadata accessor for SKLogger();
  MEMORY[0x24BDAC7A8](v6);
  v45 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659278);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v38[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_2212F3078();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_221225370((uint64_t)v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) != 1)
  {
    v43 = v4;
    v44 = a3;
    v41 = v12;
    v42 = v14;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_2212F3168();
    sub_221087180();
    sub_2212F56D0();
    sub_2212F5724();
    v16 = sub_2212F5718();
    v17 = v11;
    v18 = v46;
    if (v16 != 1)
    {
      v40 = v11;
      if (qword_255655C08 != -1)
        swift_once();
      v19 = __swift_project_value_buffer(v6, (uint64_t)qword_25568CE88);
      v20 = v45;
      sub_22103F99C(v19, (uint64_t)v45);
      *(_QWORD *)v51 = 0;
      *(_QWORD *)&v51[8] = 0xE000000000000000;
      sub_2212F5964();
      sub_2212F540C();
      sub_2212F56D0();
      sub_2212F5724();
      *(_QWORD *)v56 = sub_2212F5718();
      sub_2212F5CA0();
      sub_2212F540C();
      swift_bridgeObjectRelease();
      v22 = *(_QWORD *)v51;
      v21 = *(_QWORD *)&v51[8];
      v23 = sub_2212F57F0();
      swift_bridgeObjectRetain_n();
      v24 = sub_2212F2C1C();
      if (os_log_type_enabled(v24, v23))
      {
        v25 = swift_slowAlloc();
        v39 = v23;
        v26 = v25;
        v27 = swift_slowAlloc();
        *(_QWORD *)v51 = v27;
        *(_DWORD *)v26 = 136446466;
        *(_QWORD *)v56 = sub_221115C44(0, 0xE000000000000000, (uint64_t *)v51);
        sub_2212F5898();
        *(_WORD *)(v26 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)v56 = sub_221115C44(v22, v21, (uint64_t *)v51);
        sub_2212F5898();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_221005000, v24, (os_log_type_t)v39, "%{public}s%{public}s", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22766BBA8](v27, -1, -1);
        MEMORY[0x22766BBA8](v26, -1, -1);
        swift_bridgeObjectRelease();

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v17 = v40;
      sub_22105A598((uint64_t)v20);
    }
    v28 = v47;
    v51[0] = v47 & 1;
    v56[0] = v18 & 1;
    v29 = v42;
    sub_2210866C8((uint64_t)v51);
    *(_OWORD *)v56 = *(_OWORD *)v51;
    *(_OWORD *)&v56[9] = *(_OWORD *)&v51[9];
    sub_2210871C0((uint64_t)v56, (uint64_t)v58);
    sub_2210871C0((uint64_t)v58, (uint64_t)&v61);
    *(_OWORD *)v53 = v52[0];
    *(_OWORD *)&v53[9] = *(_OWORD *)((char *)v52 + 9);
    sub_2210871C0((uint64_t)v53, (uint64_t)v55);
    sub_2210871C0((uint64_t)v55, (uint64_t)&v67);
    sub_2210871C0((uint64_t)&v56[16], (uint64_t)v57);
    sub_2210871C0((uint64_t)v57, (uint64_t)&v64);
    sub_2210871C0((uint64_t)&v53[16], (uint64_t)v54);
    sub_2210871C0((uint64_t)v54, (uint64_t)&v70);
    LOBYTE(v68) = v28 & 1;
    LOBYTE(v65) = v18 & 1;
    sub_2212F3048();
    v15 = v30;
    v32 = v31;
    if ((v28 & 1) != 0)
    {
      sub_2210871C0((uint64_t)v58, (uint64_t)&v59);
      if (((v60 & 1) != 0 || v15 >= v59)
        && ((sub_2210871C0((uint64_t)v55, (uint64_t)&v65), (v66 & 1) != 0) || v65 >= v15))
      {
        v34 = 0;
        v33 = 1;
        if ((v18 & 1) == 0)
          goto LABEL_27;
      }
      else
      {
        v33 = 0;
        v34 = 1;
        if ((v18 & 1) == 0)
          goto LABEL_27;
      }
    }
    else
    {
      v33 = 0;
      v34 = 0;
      if ((v18 & 1) == 0)
        goto LABEL_27;
    }
    sub_2210871C0((uint64_t)v57, (uint64_t)&v62);
    if ((v63 & 1) == 0 && v32 < v62 || (sub_2210871C0((uint64_t)v54, (uint64_t)&v68), (v69 & 1) == 0) && v68 < v32)
    {
      v35 = 0;
      goto LABEL_29;
    }
LABEL_27:
    if (!v34)
    {
LABEL_30:
      (*(void (**)(_BYTE *, uint64_t))(v41 + 8))(v29, v17);
      return v15;
    }
    v35 = v18 & 1;
LABEL_29:
    v50 = v33;
    v49 = v35;
    sub_2212F3048();
    v15 = v36;
    goto LABEL_30;
  }
  sub_221087140((uint64_t)v10);
  if (v4[8])
    return 0.0;
  else
    return *(double *)v4;
}

uint64_t sub_2210866C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  char v5;
  char v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  double v13;
  double v14;
  double v15;
  double v16;
  char v17;
  double v18;
  double v19;
  double v20;
  double v21;
  char v22;
  double v23;
  double v24;
  char v25;
  char v26;
  double v27;
  double v28;
  double v29;
  char v30;
  char v31;
  double v32;
  double v33;
  char v34;

  v3 = sub_2212F33D8();
  v33 = v4;
  v30 = v5;
  v7 = v6 & 1;
  *(double *)&result = COERCE_DOUBLE(sub_2212F33D8());
  v9 = result;
  v11 = v10;
  v31 = v12;
  v32 = v13;
  if ((*(_BYTE *)(v1 + 8) & 1) == 0)
  {
    v14 = *(double *)v1;
    v15 = *(double *)v1;
    *(double *)&result = COERCE_DOUBLE(sub_2212F3048());
    if (v16 <= v14)
      v3 = *(_QWORD *)&v14;
    if (v16 <= v15)
      v7 = 0;
  }
  v34 = v7;
  v17 = v11 & 1;
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v18 = v33;
    v19 = *(double *)&v9;
  }
  else
  {
    v20 = *(double *)(v1 + 16);
    *(double *)&result = COERCE_DOUBLE(sub_2212F3048());
    if (v21 <= v20)
      v19 = v20;
    else
      v19 = *(double *)&v9;
    if (v21 <= v20)
      v17 = 0;
    v18 = v33;
  }
  v22 = v30 & 1;
  if ((*(_BYTE *)(v1 + 40) & 1) == 0)
  {
    v23 = *(double *)(v1 + 32);
    *(double *)&result = COERCE_DOUBLE(sub_2212F3048());
    if (v24 <= v23)
    {
      v18 = v23;
      v22 = 0;
    }
  }
  v25 = v31 & 1;
  if ((*(_BYTE *)(v1 + 56) & 1) != 0)
  {
    v26 = v34;
    v27 = v32;
  }
  else
  {
    v28 = *(double *)(v1 + 48);
    *(double *)&result = COERCE_DOUBLE(sub_2212F3048());
    v27 = v32;
    if (v29 <= v28)
    {
      v27 = v28;
      v25 = 0;
    }
    v26 = v34;
  }
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v26;
  *(double *)(a1 + 16) = v18;
  *(_BYTE *)(a1 + 24) = v22;
  *(double *)(a1 + 32) = v19;
  *(_BYTE *)(a1 + 40) = v17;
  *(double *)(a1 + 48) = v27;
  *(_BYTE *)(a1 + 56) = v25;
  return result;
}

uint64_t sub_22108689C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  os_log_type_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;

  v44 = sub_2212F3288();
  v8 = *(_QWORD *)(v44 - 8);
  v9 = MEMORY[0x24BDAC7A8](v44);
  v42 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v38 - v11;
  v13 = type metadata accessor for SKLogger();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659278);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2212F3078();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221225370((uint64_t)v18);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19) == 1)
    return sub_221087140((uint64_t)v18);
  v40 = v20;
  v41 = v8;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  sub_2212F3168();
  sub_221087180();
  sub_2212F56D0();
  sub_2212F5724();
  if (sub_2212F5718() != 1)
  {
    if (qword_255655C08 != -1)
      swift_once();
    v24 = __swift_project_value_buffer(v13, (uint64_t)qword_25568CE88);
    v25 = (uint64_t)v15;
    sub_22103F99C(v24, (uint64_t)v15);
    v45 = 0;
    v46 = 0xE000000000000000;
    sub_2212F5964();
    sub_2212F540C();
    sub_2212F56D0();
    sub_2212F5724();
    v47 = sub_2212F5718();
    sub_2212F5CA0();
    sub_2212F540C();
    swift_bridgeObjectRelease();
    v26 = v45;
    v27 = v46;
    v28 = sub_2212F57F0();
    swift_bridgeObjectRetain_n();
    v29 = sub_2212F2C1C();
    v30 = v28;
    if (os_log_type_enabled(v29, v28))
    {
      v31 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v45 = v38;
      *(_DWORD *)v31 = 136446466;
      v39 = v25;
      v47 = sub_221115C44(0, 0xE000000000000000, &v45);
      sub_2212F5898();
      *(_WORD *)(v31 + 12) = 2082;
      swift_bridgeObjectRetain();
      v47 = sub_221115C44(v26, v27, &v45);
      v25 = v39;
      sub_2212F5898();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_221005000, v29, v30, "%{public}s%{public}s", (uint8_t *)v31, 0x16u);
      v32 = v38;
      swift_arrayDestroy();
      MEMORY[0x22766BBA8](v32, -1, -1);
      MEMORY[0x22766BBA8](v31, -1, -1);
      swift_bridgeObjectRelease();

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_22105A598(v25);
  }
  LOBYTE(v45) = 0;
  LOBYTE(v47) = 0;
  sub_2212F303C();
  v33 = *(_QWORD *)(v43 + 72);
  MEMORY[0x2276688D8](*(_QWORD *)(v43 + 64));
  sub_2212F3270();
  sub_22113FBE0();
  MEMORY[0x2276688CC](v33);
  sub_2212F327C();
  sub_22113FBE0();
  v48.origin.x = a1;
  v48.origin.y = a2;
  v48.size.width = a3;
  v48.size.height = a4;
  CGRectGetMinX(v48);
  v49.origin.x = a1;
  v49.origin.y = a2;
  v49.size.width = a3;
  v49.size.height = a4;
  CGRectGetWidth(v49);
  v50.origin.x = a1;
  v50.origin.y = a2;
  v50.size.width = a3;
  v50.size.height = a4;
  CGRectGetMinY(v50);
  v51.origin.x = a1;
  v51.origin.y = a2;
  v51.size.width = a3;
  v51.size.height = a4;
  CGRectGetHeight(v51);
  v35 = v41;
  v34 = v42;
  v36 = v44;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v42, v12, v44);
  sub_2212F3270();
  sub_2212F327C();
  v37 = *(void (**)(char *, uint64_t))(v35 + 8);
  v37(v34, v36);
  LOBYTE(v45) = 0;
  LOBYTE(v47) = 0;
  sub_2212F3054();
  v37(v12, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v22, v19);
}

double sub_221086E90(uint64_t a1, char a2, uint64_t a3, char a4)
{
  const void *v4;
  _BYTE __dst[80];

  memcpy(__dst, v4, sizeof(__dst));
  return sub_221086008(a1, a2 & 1, a3, a4 & 1);
}

uint64_t sub_221086F1C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  const void *v4;
  _BYTE __dst[80];

  memcpy(__dst, v4, sizeof(__dst));
  return sub_22108689C(a1, a2, a3, a4);
}

uint64_t sub_221086FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_221087030(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF44F8]);
}

uint64_t sub_221087004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_221087030(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF4500]);
}

uint64_t sub_221087030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

uint64_t sub_22108706C()
{
  const void *v0;
  void *v1;
  _BYTE v3[80];

  v1 = memcpy(v3, v0, sizeof(v3));
  return nullsub_1(v1);
}

void (*sub_2210870A4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2212F2CF4();
  return sub_22101A1EC;
}

unint64_t sub_221087104()
{
  unint64_t result;

  result = qword_255659270;
  if (!qword_255659270)
  {
    result = MEMORY[0x22766BAC4](&unk_2213009B8, &type metadata for CooperativeFrameLayout);
    atomic_store(result, (unint64_t *)&qword_255659270);
  }
  return result;
}

uint64_t sub_221087140(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659278);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_221087180()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255659280;
  if (!qword_255659280)
  {
    v1 = sub_2212F3168();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEC7A0], v1);
    atomic_store(result, (unint64_t *)&qword_255659280);
  }
  return result;
}

uint64_t sub_2210871C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_255658CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_221087210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

void SubscriptionStorePickerOption.init<>(_:)(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  void (**v8)(uint64_t@<X8>);

  OUTLINED_FUNCTION_11_13();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_16_9();
  sub_221015318(v3, v4, v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657410);
  v7 = a1 + *(int *)(v6 + 40);
  *(_QWORD *)v7 = swift_getKeyPath();
  *(_BYTE *)(v7 + 8) = 0;
  OUTLINED_FUNCTION_25_8();
  v8 = (void (**)(uint64_t@<X8>))(a1 + *(int *)(v6 + 36));
  *v8 = sub_2210873A8;
  v8[1] = 0;
  OUTLINED_FUNCTION_14_13();
}

void SubscriptionStorePickerOption.init(_:label:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v10 = type metadata accessor for SubscriptionStorePickerOption(0, a4, a5, a4);
  v11 = a6 + *(int *)(v10 + 40);
  *(_QWORD *)v11 = swift_getKeyPath();
  *(_BYTE *)(v11 + 8) = 0;
  sub_221015318(a1, a6, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  v12 = (_QWORD *)(a6 + *(int *)(v10 + 36));
  *v12 = a2;
  v12[1] = a3;
  OUTLINED_FUNCTION_14_13();
}

void SubscriptionStorePickerOption.init<>(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (**v6)(uint64_t@<X8>);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657410);
  v5 = a2 + *(int *)(v4 + 40);
  *(_QWORD *)v5 = swift_getKeyPath();
  *(_BYTE *)(v5 + 8) = 0;
  sub_221015318(a1, a2, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  v6 = (void (**)(uint64_t@<X8>))(a2 + *(int *)(v4 + 36));
  *v6 = sub_2210873A8;
  v6[1] = 0;
  OUTLINED_FUNCTION_17_0();
}

void sub_2210873A8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for SubscriptionStoreControlStyleConfiguration.PickerOption(0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_16_9();
  sub_221014EB4(v3, v4, v5);
  v6 = type metadata accessor for AutomaticSubscriptionStorePickerOptionLabel();
  v7 = a1 + *(int *)(v6 + 20);
  *(_QWORD *)v7 = swift_getKeyPath();
  *(_QWORD *)(v7 + 8) = 0;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  *(_WORD *)(v7 + 32) = 0;
  v8 = a1 + *(int *)(v6 + 24);
  *(_QWORD *)v8 = swift_getKeyPath();
  *(_BYTE *)(v8 + 8) = 0;
  OUTLINED_FUNCTION_25_8();
  OUTLINED_FUNCTION_14_13();
}

void SubscriptionStorePickerOption.init(_:label:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_33_3();
  v19 = v0;
  v20 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  OUTLINED_FUNCTION_11_13();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221015318(v11, (uint64_t)v16, v17);
  SubscriptionStorePickerOption.init(_:label:)((uint64_t)v16, v9, v7, v5, v3, v13);
}

uint64_t sub_2210874E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;

  v2 = v1 + *(int *)(a1 + 40);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_221017C08(*(_QWORD *)v2, v4);
  sub_22104359C();
  v6 = v5;
  sub_221017894(v3, v4);
  return v6 & 1;
}

uint64_t sub_221087540()
{
  unsigned __int8 v1;

  sub_221088CF4();
  sub_2212F3798();
  return v1;
}

void sub_221087578()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_30_7() & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_221087598()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_30_7() & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_2210875B8()
{
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210875D0()
{
  OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_6_0();
}

uint64_t type metadata accessor for SubscriptionStorePickerOption(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubscriptionStorePickerOption);
}

uint64_t sub_2210875F4()
{
  sub_221088CF4();
  return sub_2212F37A4();
}

void SubscriptionStorePickerOption.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];

  v3 = v2;
  v32 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658AA8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v5);
  v31 = (uint64_t)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v10 = type metadata accessor for SubscriptionStorePickerOption.LabelBuilderContainer(255, v7, v8, v9);
  v26[1] = MEMORY[0x22766BAC4](&unk_221300B98, v10);
  v11 = sub_2212F4830();
  v27 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v26 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556592A0);
  v14 = sub_2212F3348();
  v30 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v26 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556592A8);
  v17 = sub_2212F3348();
  v29 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  v28 = (char *)v26 - v19;
  v36 = v7;
  v37 = v8;
  v38 = v3;
  sub_2212F38E8();
  sub_2212F4824();
  v33 = v7;
  v34 = v8;
  v35 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556592B0);
  v20 = MEMORY[0x22766BAC4](MEMORY[0x24BDF4700], v11);
  sub_221087D14();
  sub_2212F4A10();
  sub_2212F44A0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v11);
  v21 = v31;
  sub_221014EB4(v3, v31, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  v22 = OUTLINED_FUNCTION_11_13();
  __swift_storeEnumTagSinglePayload(v21, 0, 1, v22);
  sub_221017AD4(&qword_2556592C8, &qword_2556592A0, MEMORY[0x24BDEDC10]);
  v41[0] = v20;
  v41[1] = v23;
  v24 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v14, v41);
  sub_221087DB4(v21, v14, v24);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v14);
  sub_221017AD4(qword_2556592D0, &qword_2556592A8, MEMORY[0x24BDF1000]);
  v39 = v24;
  v40 = v25;
  OUTLINED_FUNCTION_32_3();
}

uint64_t sub_22108791C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  void (*v6)(uint64_t, uint64_t);

  v4 = *(_QWORD *)(v2 - 248);
  v3 = *(_QWORD *)(v2 - 240);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v5(v4, v1, v0);
  v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v6(v1, v0);
  v5(*(_QWORD *)(v2 - 216), v4, v0);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(v4, v0);
}

uint64_t type metadata accessor for SubscriptionStorePickerOption.LabelBuilderContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubscriptionStorePickerOption.LabelBuilderContainer);
}

uint64_t sub_22108798C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, uint64_t);
  uint64_t v26;

  v8 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SubscriptionStorePickerOption.LabelBuilderContainer(0, a2, a3, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v26 - v17;
  sub_221014EB4(a1, (uint64_t)v10, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  v20 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SubscriptionStorePickerOption(0, a2, a3, v19) + 36));
  v21 = *v20;
  v22 = v20[1];
  swift_retain();
  sub_221087B1C((uint64_t)v10, v21, v22, a2, a3, (uint64_t)v16);
  MEMORY[0x22766BAC4](&unk_221300B98, v12);
  v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v23(v18, v16, v12);
  v24 = *(void (**)(char *, uint64_t))(v13 + 8);
  v24(v16, v12);
  v23(a4, v18, v12);
  return ((uint64_t (*)(char *, uint64_t))v24)(v18, v12);
}

uint64_t sub_221087B10@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_22108798C(v1[4], v1[2], v1[3], a1);
}

void sub_221087B1C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;

  v12 = type metadata accessor for Subscription();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221014EB4(a1, a6, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  v16 = type metadata accessor for SubscriptionStorePickerOption.LabelBuilderContainer(0, a4, a5, v15);
  v17 = (_QWORD *)(a6 + *(int *)(v16 + 36));
  *v17 = a2;
  v17[1] = a3;
  v18 = a1 + *(int *)(v12 + 20);
  v19 = *(_QWORD *)v18;
  v20 = *(unsigned __int8 *)(v18 + 8);
  sub_221014EB4(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
  if (v20 == 2)
  {
    v19 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
    v22 = v21;
  }
  else
  {
    v22 = v20 & 1;
  }
  sub_221011A28((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
  MEMORY[0x24BDAC7A8](v23);
  *(&v26 - 4) = v19;
  *(&v26 - 3) = v22;
  *((_BYTE *)&v26 - 16) = v20 == 2;
  KeyPath = swift_getKeyPath();
  sub_221011A28(a1, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  v25 = a6 + *(int *)(v16 + 40);
  *(_QWORD *)v25 = KeyPath;
  *(_BYTE *)(v25 + 8) = 0;
}

uint64_t sub_221087C94@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;

  v5 = type metadata accessor for SubscriptionStorePickerOption(0, a1, a2, a3);
  result = sub_2210874E4(v5);
  if ((result & 1) != 0)
  {
    v7 = 0;
    v8 = 0;
    v9 = 1;
  }
  else
  {
    result = sub_2212F4758();
    v8 = v10;
    v9 = v11;
    v7 = 2;
  }
  *a4 = v7;
  a4[1] = v8;
  a4[2] = v9;
  return result;
}

uint64_t sub_221087D08@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_221087C94(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

unint64_t sub_221087D14()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2556592B8;
  if (!qword_2556592B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556592B0);
    v2 = sub_221087D78();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2556592B8);
  }
  return result;
}

unint64_t sub_221087D78()
{
  unint64_t result;

  result = qword_2556592C0;
  if (!qword_2556592C0)
  {
    result = MEMORY[0x22766BAC4](&unk_2212FED6C, &type metadata for UnsupportedViewPlaceholder);
    atomic_store(result, (unint64_t *)&qword_2556592C0);
  }
  return result;
}

uint64_t sub_221087DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *KeyPath;

  KeyPath = (uint64_t *)swift_getKeyPath();
  sub_2211DD760(KeyPath, a1, a2, a3);
  swift_release();
  return sub_221088BC4(a1);
}

uint64_t sub_221087E1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_221087E50(uint64_t a1, uint64_t a2)
{
  return sub_221295FA0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16), *(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_221087E6C(uint64_t a1)
{
  sub_221296710(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_221087E7C@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_2211FBC38(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  *a2 = result & 1;
  return result;
}

uint64_t sub_221087EB4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  void (*v22)(char *);
  char *v23;

  v23 = a2;
  v4 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.PickerOption(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v5);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v22 - v13;
  v22 = *(void (**)(char *))(v2 + *(int *)(a1 + 36));
  sub_221014EB4(v2, (uint64_t)v7, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  v15 = v2 + *(int *)(a1 + 40);
  v16 = *(_QWORD *)v15;
  LOBYTE(a1) = *(_BYTE *)(v15 + 8);
  sub_221017C08(*(_QWORD *)v15, a1);
  sub_22104359C();
  v18 = v17;
  sub_221017894(v16, a1);
  v7[*(int *)(v4 + 20)] = v18 & 1;
  v22(v7);
  sub_221011A28((uint64_t)v7, type metadata accessor for SubscriptionStoreControlStyleConfiguration.PickerOption);
  v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v19(v14, v12, v8);
  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v12, v8);
  v19(v23, v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v20)(v14, v8);
}

uint64_t sub_221088070()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_221088080()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_221088090(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  v4 = type metadata accessor for SubscriptionStorePickerOption.LabelBuilderContainer(255, *a1, a1[1], a4);
  MEMORY[0x22766BAC4](&unk_221300B98, v4);
  v5 = sub_2212F4830();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556592A0);
  v6 = sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556592A8);
  sub_2212F3348();
  v7 = MEMORY[0x22766BAC4](MEMORY[0x24BDF4700], v5);
  sub_221017AD4(&qword_2556592C8, &qword_2556592A0, MEMORY[0x24BDEDC10]);
  v9[0] = v7;
  v9[1] = v8;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v6, v9);
  sub_221017AD4(qword_2556592D0, &qword_2556592A8, MEMORY[0x24BDF1000]);
  OUTLINED_FUNCTION_32_3();
}

uint64_t sub_2210881AC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_22108822C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;
  _OWORD *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_33_3();
  v3 = (uint64_t)v2;
  if ((*(_DWORD *)(*(_QWORD *)(v4 - 8) + 80) & 0x20000) != 0)
  {
    *v1 = *v2;
    swift_retain();
  }
  else
  {
    v5 = sub_2212F51B4();
    OUTLINED_FUNCTION_9_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
    v6 = OUTLINED_FUNCTION_18_0();
    OUTLINED_FUNCTION_0_15(v6);
    v7 = OUTLINED_FUNCTION_1_14();
    if (OUTLINED_FUNCTION_9_14())
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
      OUTLINED_FUNCTION_4_14(v8);
    }
    else
    {
      OUTLINED_FUNCTION_2_13(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
      OUTLINED_FUNCTION_5_12();
    }
    v9 = OUTLINED_FUNCTION_6_10();
    OUTLINED_FUNCTION_18_11();
    if (v12)
      OUTLINED_FUNCTION_31_5(v10);
    else
      *(_OWORD *)v10 = *v11;
    OUTLINED_FUNCTION_7_8();
    swift_retain();
    sub_221017C08(v3, v9);
    *(_QWORD *)v0 = v3;
    *(_BYTE *)(v0 + 8) = v9;
  }
  OUTLINED_FUNCTION_17_5();
}

uint64_t sub_22108831C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_16_0(v2);
  v3 = v0 + *(int *)(type metadata accessor for SubscriptionStoreControlOption(0) + 20);
  v4 = sub_2212F50D0();
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  if (*(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_11_13() + 20)))
    swift_release();
  OUTLINED_FUNCTION_28_9();
  OUTLINED_FUNCTION_28_9();
  return sub_221017894(*(_QWORD *)(v0 + *(int *)(v1 + 40)), *(_BYTE *)(v0 + *(int *)(v1 + 40) + 8));
}

void sub_2210883C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  _OWORD *v8;
  uint64_t v9;

  OUTLINED_FUNCTION_33_3();
  v2 = OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_9_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  v3 = OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_0_15(v3);
  v4 = OUTLINED_FUNCTION_1_14();
  if (OUTLINED_FUNCTION_9_14())
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    OUTLINED_FUNCTION_4_14(v5);
  }
  else
  {
    OUTLINED_FUNCTION_2_13(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
    OUTLINED_FUNCTION_5_12();
  }
  v6 = OUTLINED_FUNCTION_6_10();
  OUTLINED_FUNCTION_18_11();
  if (v9)
    OUTLINED_FUNCTION_31_5(v7);
  else
    *(_OWORD *)v7 = *v8;
  OUTLINED_FUNCTION_7_8();
  swift_retain();
  sub_221017C08(v0, v6);
  *(_QWORD *)v1 = v0;
  *(_BYTE *)(v1 + 8) = v6;
  OUTLINED_FUNCTION_17_5();
}

void sub_221088480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;

  OUTLINED_FUNCTION_33_3();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_9_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  v6 = OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_22_4(*(int *)(v6 + 20));
  OUTLINED_FUNCTION_22_4(*(int *)(v7 + 24));
  type metadata accessor for SubscriptionStoreControlOption(0);
  v8 = OUTLINED_FUNCTION_1_14();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v8);
  v10 = OUTLINED_FUNCTION_9_14();
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      OUTLINED_FUNCTION_2_13(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16));
      OUTLINED_FUNCTION_5_12();
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v11 = *(_QWORD *)(v8 - 8);
  if (v10)
  {
    OUTLINED_FUNCTION_27_8(v11);
LABEL_6:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    OUTLINED_FUNCTION_4_14(v12);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_2_13(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 24));
LABEL_7:
  v13 = OUTLINED_FUNCTION_6_10();
  v14 = *(int *)(v13 + 20);
  v15 = (_QWORD *)(v0 + v14);
  v16 = v1 + v14;
  v17 = *(_QWORD *)(v0 + v14);
  v18 = *(_QWORD *)(v1 + v14);
  if (!v17)
  {
    if (v18)
    {
      v20 = *(_QWORD *)(v16 + 8);
      *v15 = v18;
      v15[1] = v20;
      swift_retain();
      goto LABEL_14;
    }
LABEL_13:
    *(_OWORD *)v15 = *(_OWORD *)v16;
    goto LABEL_14;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_13;
  }
  v19 = *(_QWORD *)(v16 + 8);
  *v15 = v18;
  v15[1] = v19;
  swift_retain();
  swift_release();
LABEL_14:
  OUTLINED_FUNCTION_19_11(*(int *)(v13 + 24));
  swift_release();
  OUTLINED_FUNCTION_19_11(*(int *)(v4 + 36));
  swift_release();
  v21 = *(int *)(v4 + 40);
  v22 = v0 + v21;
  v23 = v1 + v21;
  v24 = *(_QWORD *)v23;
  v25 = *(_BYTE *)(v23 + 8);
  sub_221017C08(*(_QWORD *)v23, v25);
  v26 = *(_QWORD *)v22;
  v27 = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v22 = v24;
  *(_BYTE *)(v22 + 8) = v25;
  sub_221017894(v26, v27);
  OUTLINED_FUNCTION_17_5();
}

void sub_2210885F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_33_3();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_9_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  v5 = OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_0_15(v5);
  v6 = OUTLINED_FUNCTION_1_14();
  if (OUTLINED_FUNCTION_9_14())
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    OUTLINED_FUNCTION_4_14(v7);
  }
  else
  {
    OUTLINED_FUNCTION_2_13(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
    OUTLINED_FUNCTION_5_12();
  }
  OUTLINED_FUNCTION_6_10();
  OUTLINED_FUNCTION_18_11();
  if (v11)
  {
    v12 = *(_QWORD *)(v10 + 8);
    *v9 = v11;
    v9[1] = v12;
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  *(_OWORD *)(v0 + *(int *)(v8 + 24)) = *(_OWORD *)(v1 + *(int *)(v8 + 24));
  *(_OWORD *)(v0 + *(int *)(v3 + 36)) = *(_OWORD *)(v1 + *(int *)(v3 + 36));
  OUTLINED_FUNCTION_18_11();
  *(_QWORD *)v13 = v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v15 + 8);
  OUTLINED_FUNCTION_17_5();
}

void sub_2210886B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumTagSinglePayload;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  OUTLINED_FUNCTION_33_3();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_9_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40));
  v6 = OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_0_15(v6);
  v7 = OUTLINED_FUNCTION_1_14();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v7);
  v9 = OUTLINED_FUNCTION_9_14();
  if (EnumTagSinglePayload)
  {
    if (!v9)
    {
      OUTLINED_FUNCTION_2_13(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
      OUTLINED_FUNCTION_5_12();
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v10 = *(_QWORD *)(v7 - 8);
  if (v9)
  {
    OUTLINED_FUNCTION_27_8(v10);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    OUTLINED_FUNCTION_4_14(v11);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_2_13(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 40));
LABEL_7:
  v12 = OUTLINED_FUNCTION_6_10();
  v13 = *(int *)(v12 + 20);
  v14 = (_QWORD *)(v0 + v13);
  v15 = v1 + v13;
  v16 = *(_QWORD *)(v0 + v13);
  v17 = *(_QWORD *)(v1 + v13);
  if (!v16)
  {
    if (v17)
    {
      v19 = *(_QWORD *)(v15 + 8);
      *v14 = v17;
      v14[1] = v19;
      goto LABEL_14;
    }
LABEL_13:
    *(_OWORD *)v14 = *(_OWORD *)v15;
    goto LABEL_14;
  }
  if (!v17)
  {
    swift_release();
    goto LABEL_13;
  }
  v18 = *(_QWORD *)(v15 + 8);
  *v14 = v17;
  v14[1] = v18;
  swift_release();
LABEL_14:
  OUTLINED_FUNCTION_23_9(*(int *)(v12 + 24));
  OUTLINED_FUNCTION_23_9(*(int *)(v4 + 36));
  v20 = *(int *)(v4 + 40);
  v21 = v0 + v20;
  v22 = (uint64_t *)(v1 + v20);
  v23 = *v22;
  LOBYTE(v22) = *((_BYTE *)v22 + 8);
  v24 = *(_QWORD *)v21;
  v25 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = (_BYTE)v22;
  sub_221017894(v24, v25);
  OUTLINED_FUNCTION_17_5();
}

uint64_t sub_2210887E4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_11_13();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_221088868()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_11_13();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t sub_2210888E0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_221088914(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_22108891C()
{
  return sub_2212F3138();
}

uint64_t sub_221088928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255658AA8);
  __swift_allocate_value_buffer(v0, qword_255659288);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_255659288);
  v2 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
}

uint64_t sub_221088988()
{
  uint64_t v0;

  if (qword_255655BF0 != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255658AA8);
  return __swift_project_value_buffer(v0, (uint64_t)qword_255659288);
}

uint64_t sub_2210889D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_221088988();
  return sub_221088C04(v2, a1);
}

uint64_t sub_2210889F8()
{
  sub_221088B68();
  return sub_2212F32C4();
}

void sub_221088A2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255658AA8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_13_14(v3, v4);
  sub_221088B68();
  sub_2212F32D0();
  sub_221088BC4(a1);
  OUTLINED_FUNCTION_17_0();
}

void sub_221088A90()
{
  sub_2210889F8();
  OUTLINED_FUNCTION_6_0();
}

void sub_221088AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255658AA8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_13_14(v2, v3);
  sub_221088A2C(v0);
  OUTLINED_FUNCTION_17_0();
}

uint64_t sub_221088AF8()
{
  swift_getKeyPath();
  sub_2212F4194();
  return swift_release();
}

unint64_t sub_221088B68()
{
  unint64_t result;

  result = qword_2556593D8;
  if (!qword_2556593D8)
  {
    result = MEMORY[0x22766BAC4](&unk_221300D18, &_s29SubscriptionPickerTagTraitKeyON);
    atomic_store(result, (unint64_t *)&qword_2556593D8);
  }
  return result;
}

void sub_221088BA4()
{
  sub_2210889F8();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_221088BC4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255658AA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_221088C04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255658AA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_221088C50()
{
  return 24;
}

uint64_t sub_221088C5C(uint64_t a1)
{
  return sub_221015344(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_221088C70(uint64_t a1, uint64_t a2)
{
  initializeBufferWithCopyOfBuffer for Subscription.ID(a2, a1);
  return a2;
}

__n128 *sub_221088CB8(__n128 *a1, __n128 *a2)
{
  __swift_memcpy17_8(a2, a1);
  return a2;
}

unint64_t sub_221088CF4()
{
  unint64_t result;

  result = qword_2556593E0;
  if (!qword_2556593E0)
  {
    result = MEMORY[0x22766BAC4](&unk_221300CE0, &_s39SubscriptionPickerOptionAPIIsAllowedKeyON);
    atomic_store(result, (unint64_t *)&qword_2556593E0);
  }
  return result;
}

ValueMetadata *_s39SubscriptionPickerOptionAPIIsAllowedKeyOMa()
{
  return &_s39SubscriptionPickerOptionAPIIsAllowedKeyON;
}

ValueMetadata *_s29SubscriptionPickerTagTraitKeyOMa()
{
  return &_s29SubscriptionPickerTagTraitKeyON;
}

uint64_t sub_221088D60(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t OUTLINED_FUNCTION_0_15(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(int *)(a1 + 20);
  v4 = v1 + v3;
  v5 = v2 + v3;
  *(_QWORD *)v4 = *(_QWORD *)v5;
  *(_BYTE *)(v4 + 8) = *(_BYTE *)(v5 + 8);
  v6 = *(int *)(a1 + 24);
  v7 = v1 + v6;
  v8 = v2 + v6;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  return type metadata accessor for SubscriptionStoreControlOption(0);
}

uint64_t OUTLINED_FUNCTION_1_14()
{
  return sub_2212F50D0();
}

uint64_t OUTLINED_FUNCTION_2_13@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

void *OUTLINED_FUNCTION_4_14(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_5_12()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_6_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + *(int *)(v2 + 24)) = *(_QWORD *)(v1 + *(int *)(v2 + 24));
  return type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
}

uint64_t OUTLINED_FUNCTION_7_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v4 = *(int *)(v3 + 24);
  v5 = (_QWORD *)(v0 + v4);
  v6 = (_QWORD *)(v1 + v4);
  v7 = v6[1];
  *v5 = *v6;
  v5[1] = v7;
  v8 = *(int *)(v2 + 36);
  v9 = (_QWORD *)(v0 + v8);
  v10 = (_QWORD *)(v1 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_9_14()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_11_13()
{
  return type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
}

uint64_t OUTLINED_FUNCTION_13_14@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  return sub_221088C04(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

uint64_t OUTLINED_FUNCTION_16_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_19_11@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = (_QWORD *)(v1 + a1);
  v4 = (_QWORD *)(v2 + a1);
  v5 = v4[1];
  *v3 = *v4;
  v3[1] = v5;
  return swift_retain();
}

void OUTLINED_FUNCTION_22_4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = v1 + a1;
  v4 = v2 + a1;
  v5 = *(_BYTE *)(v4 + 8);
  *(_QWORD *)v3 = *(_QWORD *)v4;
  *(_BYTE *)(v3 + 8) = v5;
}

uint64_t OUTLINED_FUNCTION_23_9@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_OWORD *)(v1 + a1) = *(_OWORD *)(v2 + a1);
  return swift_release();
}

void OUTLINED_FUNCTION_25_8()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_221015318(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_27_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_28_9()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_29_6()
{
  return sub_2210875F4();
}

uint64_t OUTLINED_FUNCTION_30_7()
{
  return sub_221087540();
}

uint64_t OUTLINED_FUNCTION_31_5@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *a1 = v2;
  a1[1] = v3;
  return swift_retain();
}

void OUTLINED_FUNCTION_32_3()
{
  JUMPOUT(0x22766BAC4);
}

BOOL sub_221088F80(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

uint64_t sub_221088F90(uint64_t result)
{
  return result;
}

uint64_t sub_221088F98()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  unsigned __int8 *v24;
  unsigned int v25;
  uint64_t v26;
  char v27;
  _QWORD v28[3];

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_environment);

  v2 = sub_2212F5208();
  v3 = sub_2211A75C0(0x4C676F4C746E696DLL, 0xEC0000006C657665, v2);
  v5 = v4;
  result = swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_58;
  v7 = HIBYTE(v5) & 0xF;
  v8 = v3 & 0xFFFFFFFFFFFFLL;
  if ((v5 & 0x2000000000000000) != 0)
    v9 = HIBYTE(v5) & 0xF;
  else
    v9 = v3 & 0xFFFFFFFFFFFFLL;
  if (!v9)
  {
    result = swift_bridgeObjectRelease();
LABEL_58:
    v23 = 0;
LABEL_59:
    byte_25568CE82 = v23;
    return result;
  }
  if ((v5 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    v11 = (uint64_t)sub_221089540(v3, v5, 10);
    LOBYTE(v3) = v27;
    swift_bridgeObjectRelease_n();
    goto LABEL_45;
  }
  if ((v5 & 0x2000000000000000) == 0)
  {
    if ((v3 & 0x1000000000000000) != 0)
      v10 = (unsigned __int8 *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v10 = (unsigned __int8 *)sub_2212F59D0();
    v11 = (uint64_t)sub_221089624(v10, v8, 10);
    LOBYTE(v3) = v12 & 1;
    goto LABEL_45;
  }
  v28[0] = v3;
  v28[1] = v5 & 0xFFFFFFFFFFFFFFLL;
  if (v3 == 43)
  {
    if (!v7)
      goto LABEL_63;
    if (v7 == 1 || (BYTE1(v3) - 48) > 9u)
      goto LABEL_32;
    v11 = (BYTE1(v3) - 48);
    if (v7 != 2)
    {
      if ((BYTE2(v3) - 48) > 9u)
        goto LABEL_32;
      v11 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
      v13 = v7 - 3;
      if (v13)
      {
        v14 = (unsigned __int8 *)v28 + 3;
        while (1)
        {
          v15 = *v14 - 48;
          if (v15 > 9)
            goto LABEL_32;
          v16 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
            goto LABEL_32;
          v11 = v16 + v15;
          if (__OFADD__(v16, v15))
            goto LABEL_32;
          LOBYTE(v3) = 0;
          ++v14;
          if (!--v13)
            goto LABEL_45;
        }
      }
    }
LABEL_44:
    LOBYTE(v3) = 0;
    goto LABEL_45;
  }
  if (v3 != 45)
  {
    if (!v7 || (v3 - 48) > 9u)
      goto LABEL_32;
    v11 = (v3 - 48);
    if (v7 != 1)
    {
      if ((BYTE1(v3) - 48) > 9u)
        goto LABEL_32;
      v11 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
      v17 = v7 - 2;
      if (v17)
      {
        v18 = (unsigned __int8 *)v28 + 2;
        while (1)
        {
          v19 = *v18 - 48;
          if (v19 > 9)
            goto LABEL_32;
          v20 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
            goto LABEL_32;
          v11 = v20 + v19;
          if (__OFADD__(v20, v19))
            goto LABEL_32;
          LOBYTE(v3) = 0;
          ++v18;
          if (!--v17)
            goto LABEL_45;
        }
      }
    }
    goto LABEL_44;
  }
  if (v7)
  {
    if (v7 != 1 && (BYTE1(v3) - 48) <= 9u)
    {
      if (v7 == 2)
      {
        LOBYTE(v3) = 0;
        v11 = -(uint64_t)(BYTE1(v3) - 48);
LABEL_45:
        result = swift_bridgeObjectRelease();
        if ((unint64_t)v11 < 3 && (v3 & 1) == 0)
          v23 = v11;
        else
          v23 = 0;
        goto LABEL_59;
      }
      if ((BYTE2(v3) - 48) <= 9u)
      {
        v11 = -10 * (BYTE1(v3) - 48) - (BYTE2(v3) - 48);
        v21 = v7 - 3;
        if (!v21)
          goto LABEL_44;
        v24 = (unsigned __int8 *)v28 + 3;
        while (1)
        {
          v25 = *v24 - 48;
          if (v25 > 9)
            break;
          v26 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
            break;
          v11 = v26 - v25;
          if (__OFSUB__(v26, v25))
            break;
          LOBYTE(v3) = 0;
          ++v24;
          if (!--v21)
            goto LABEL_45;
        }
      }
    }
LABEL_32:
    v11 = 0;
    LOBYTE(v3) = 1;
    goto LABEL_45;
  }
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

unint64_t sub_221089328(unint64_t result)
{
  if (result >= 3)
    return 3;
  return result;
}

BOOL sub_221089338(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_221088F80(*a1, *a2);
}

uint64_t sub_221089348(unsigned __int8 a1, os_log_type_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_2212F2C34();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255655BF8 != -1)
    swift_once();
  if (byte_25568CE82 >= a1
    || sub_2212F57E4() == a2
    || (result = sub_2212F57F0(), result == a2))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
    v11 = sub_2212F2C1C();
    v12 = a2;
    if (os_log_type_enabled(v11, a2))
    {
      v13 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      *(_DWORD *)v13 = 136446466;
      v14 = sub_221115C44(0, 0xE000000000000000, &v15);
      OUTLINED_FUNCTION_3_6();
      *(_WORD *)(v13 + 12) = 2082;
      v14 = sub_221115C44(0xD000000000000017, 0x80000002212F8420, &v15);
      OUTLINED_FUNCTION_3_6();
      _os_log_impl(&dword_221005000, v11, v12, "%{public}s%{public}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_2_4();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

unsigned __int8 *sub_221089540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_2212F549C();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_221153AAC();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_2212F59D0();
  }
LABEL_7:
  v11 = sub_221089624(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_221089624(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      v15 = a2 - 1;
      if (a2 != 1)
      {
        v16 = a3 + 48;
        v17 = a3 + 55;
        v18 = a3 + 87;
        if (a3 > 10)
        {
          v16 = 58;
        }
        else
        {
          v18 = 97;
          v17 = 65;
        }
        if (result)
        {
          v9 = 0;
          v19 = result + 1;
          do
          {
            v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                v13 = 0;
                if (v20 < 0x61 || v20 >= v18)
                  return (unsigned __int8 *)v13;
                v21 = -87;
              }
              else
              {
                v21 = -55;
              }
            }
            else
            {
              v21 = -48;
            }
            v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21)))
              return 0;
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        v23 = a3 + 48;
        v24 = a3 + 55;
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v23 = 58;
        }
        else
        {
          v25 = 97;
          v24 = 65;
        }
        if (result)
        {
          v26 = 0;
          do
          {
            v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                v13 = 0;
                if (v27 < 0x61 || v27 >= v25)
                  return (unsigned __int8 *)v13;
                v28 = -87;
              }
              else
              {
                v28 = -55;
              }
            }
            else
            {
              v28 = -48;
            }
            v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
              return 0;
            v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28)))
              return 0;
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      v5 = a2 - 1;
      if (a2 != 1)
      {
        v6 = a3 + 48;
        v7 = a3 + 55;
        v8 = a3 + 87;
        if (a3 > 10)
        {
          v6 = 58;
        }
        else
        {
          v8 = 97;
          v7 = 65;
        }
        if (result)
        {
          v9 = 0;
          for (i = result + 1; ; ++i)
          {
            v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                v13 = 0;
                if (v11 < 0x61 || v11 >= v8)
                  return (unsigned __int8 *)v13;
                v12 = -87;
              }
              else
              {
                v12 = -55;
              }
            }
            else
            {
              v12 = -48;
            }
            v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
              return 0;
            v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12)))
              return 0;
            if (!--v5)
              return (unsigned __int8 *)v9;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2210898A0()
{
  unsigned __int8 v1;

  sub_221089910();
  sub_2212F3798();
  return v1;
}

uint64_t sub_2210898D8()
{
  sub_221089910();
  return sub_2212F37A4();
}

unint64_t sub_221089910()
{
  unint64_t result;

  result = qword_2556593E8;
  if (!qword_2556593E8)
  {
    result = MEMORY[0x22766BAC4](&unk_221300E54, &_s54SubscriptionOfferViewPresentationContextEnvironmentKeyON);
    atomic_store(result, (unint64_t *)&qword_2556593E8);
  }
  return result;
}

ValueMetadata *_s54SubscriptionOfferViewPresentationContextEnvironmentKeyOMa()
{
  return &_s54SubscriptionOfferViewPresentationContextEnvironmentKeyON;
}

uint64_t getEnumTagSinglePayload for SubscriptionOfferViewPresentationContext(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionOfferViewPresentationContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_221089A30 + 4 * byte_221300D55[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_221089A64 + 4 * byte_221300D50[v4]))();
}

uint64_t sub_221089A64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_221089A6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x221089A74);
  return result;
}

uint64_t sub_221089A80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x221089A88);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_221089A8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_221089A94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionOfferViewPresentationContext()
{
  return &type metadata for SubscriptionOfferViewPresentationContext;
}

unint64_t sub_221089AB4()
{
  unint64_t result;

  result = qword_2556593F0;
  if (!qword_2556593F0)
  {
    result = MEMORY[0x22766BAC4](&unk_221300E2C, &type metadata for SubscriptionOfferViewPresentationContext);
    atomic_store(result, (unint64_t *)&qword_2556593F0);
  }
  return result;
}

uint64_t sub_221089AF0()
{
  sub_221089AB4();
  return sub_2212F3138();
}

_QWORD *sub_221089B40(_OWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  void **v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  if (*a2)
  {
    v7 = a2[1];
    *v4 = *a2;
    v4[1] = v7;
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
  }
  v9 = (int *)type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  v10 = v9[5];
  v11 = (_QWORD *)((char *)v4 + v10);
  v12 = (void **)((char *)a2 + v10);
  v13 = type metadata accessor for Product.TaskState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v17 = sub_2212F51B4();
    (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v11, v12, v17);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      goto LABEL_12;
    }
    v15 = *v12;
    v16 = v15;
    *v11 = v15;
  }
  swift_storeEnumTagMultiPayload();
LABEL_12:
  *(_QWORD *)((char *)v4 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
  *(_QWORD *)((char *)v4 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
  *((_BYTE *)v4 + v9[8]) = *((_BYTE *)a2 + v9[8]);
  v18 = *(int *)(a3 + 20);
  v19 = (_QWORD *)((char *)v4 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_2212F33F0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v22 = *(int *)(a3 + 24);
  v23 = (_QWORD *)((char *)v4 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_2212F330C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return v4;
}

uint64_t sub_221089D90(_QWORD *a1, uint64_t a2)
{
  id *v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  if (*a1)
    swift_release();
  v4 = (id *)((char *)a1 + *(int *)(type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration() + 20));
  type metadata accessor for Product.TaskState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v6 = sub_2212F51B4();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else if (!EnumCaseMultiPayload)
  {

  }
  swift_release();
  swift_release();
  v7 = (char *)a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2212F33F0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = (char *)a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v10 = sub_2212F330C();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *sub_221089EE0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  void **v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  if (*a2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = (int *)type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  v8 = v7[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (void **)((char *)a2 + v8);
  v11 = type metadata accessor for Product.TaskState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v15 = sub_2212F51B4();
    (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    v13 = *v10;
    v14 = v13;
    *v9 = v13;
LABEL_8:
    swift_storeEnumTagMultiPayload();
    goto LABEL_10;
  }
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_10:
  *(_QWORD *)((char *)a1 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
  *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
  *((_BYTE *)a1 + v7[8]) = *((_BYTE *)a2 + v7[8]);
  v16 = *(int *)(a3 + 20);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_2212F33F0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v20 = *(int *)(a3 + 24);
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_2212F330C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_22108A104(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  void **v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v9 = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  v10 = (int *)v9;
  if (a1 == a2)
    goto LABEL_15;
  v11 = *(int *)(v9 + 20);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (void **)((char *)a2 + v11);
  sub_221011A28((uint64_t)a1 + v11, type metadata accessor for Product.TaskState);
  v14 = type metadata accessor for Product.TaskState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v18 = sub_2212F51B4();
    (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, v13, v18);
    goto LABEL_13;
  }
  if (!EnumCaseMultiPayload)
  {
    v16 = *v13;
    v17 = v16;
    *v12 = v16;
LABEL_13:
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_15:
  *(_QWORD *)((char *)a1 + v10[6]) = *(_QWORD *)((char *)a2 + v10[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + v10[7]) = *(_QWORD *)((char *)a2 + v10[7]);
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + v10[8]) = *((_BYTE *)a2 + v10[8]);
  if (a1 != a2)
  {
    v19 = *(int *)(a3 + 20);
    v20 = (_QWORD *)((char *)a1 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    sub_221014F5C((uint64_t)a1 + v19, &qword_255656568);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_2212F33F0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v23 = *(int *)(a3 + 24);
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    sub_221014F5C((uint64_t)a1 + v23, &qword_255656570);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_2212F330C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_22108A3A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  if (*a2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = (int *)type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Product.TaskState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2212F51B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  *(_QWORD *)((char *)a1 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
  *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
  *((_BYTE *)a1 + v7[8]) = *((_BYTE *)a2 + v7[8]);
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2212F33F0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = sub_2212F330C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_22108A594(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v9 = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  v10 = (int *)v9;
  if (a1 != a2)
  {
    v11 = *(int *)(v9 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    sub_221011A28((uint64_t)a1 + v11, type metadata accessor for Product.TaskState);
    v14 = type metadata accessor for Product.TaskState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2212F51B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  *(_QWORD *)((char *)a1 + v10[6]) = *(_QWORD *)((char *)a2 + v10[6]);
  swift_release();
  *(_QWORD *)((char *)a1 + v10[7]) = *(_QWORD *)((char *)a2 + v10[7]);
  swift_release();
  *((_BYTE *)a1 + v10[8]) = *((_BYTE *)a2 + v10[8]);
  if (a1 != a2)
  {
    v16 = *(int *)(a3 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_221014F5C((uint64_t)a1 + v16, &qword_255656568);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_2212F33F0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    v21 = *(int *)(a3 + 24);
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    sub_221014F5C((uint64_t)a1 + v21, &qword_255656570);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_2212F330C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22108A7FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22108A808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = OUTLINED_FUNCTION_9_10();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656F80);
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)v3)
    {
      v7 = v9;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656F88);
      v10 = *(int *)(a3 + 24);
    }
    v8 = v4 + v10;
  }
  return __swift_getEnumTagSinglePayload(v8, v3, v7);
}

uint64_t sub_22108A890()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22108A89C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = OUTLINED_FUNCTION_9_10();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656F80);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656F88);
      v12 = *(int *)(a4 + 24);
    }
    v10 = v5 + v12;
  }
  return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

uint64_t type metadata accessor for CompactSubscriptionOfferView()
{
  uint64_t result;

  result = qword_255659450;
  if (!qword_255659450)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22108A964()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  if (v0 <= 0x3F)
  {
    sub_221034354(319, (unint64_t *)&qword_255656FF8, (void (*)(uint64_t))MEMORY[0x24BDED930]);
    if (v1 <= 0x3F)
    {
      sub_221034354(319, (unint64_t *)&qword_255657000, (void (*)(uint64_t))MEMORY[0x24BDECF50]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_22108AA24()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_22108AA34(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _OWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;

  v92 = a1;
  v2 = sub_2212F387C();
  v90 = *(_QWORD *)(v2 - 8);
  v91 = v2;
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_4();
  v89 = v3;
  v88 = sub_2212F3414();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_4();
  v87 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659490);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_3_4();
  v77 = v7;
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659498);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_3_4();
  v78 = v9;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556594A0);
  v84 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  OUTLINED_FUNCTION_3_4();
  v80 = v10;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556594A8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556594B0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556594B8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_3_4();
  v74 = v18;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556594C0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_3_4();
  v79 = v20;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556594C8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_3_4();
  v83 = v22;
  v23 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration() + 24));
  swift_retain();
  sub_2212F4A10();
  sub_2212F2F64();
  v24 = v93;
  v25 = v94;
  v72 = v95;
  v26 = v96;
  v27 = v97;
  v71 = v98;
  v28 = sub_2212F49EC();
  v30 = v29;
  sub_22108B024(v1, (uint64_t)v13);
  v31 = (uint64_t *)&v13[*(int *)(v76 + 36)];
  *v31 = v28;
  v31[1] = v30;
  sub_221036BA4((uint64_t)v13, (uint64_t)&v16[*(int *)(v73 + 36)], &qword_2556594A8);
  *(_QWORD *)v16 = v23;
  *((_QWORD *)v16 + 1) = v24;
  v16[16] = v25;
  *((_QWORD *)v16 + 3) = v72;
  v16[32] = v26;
  v32 = v71;
  *((_QWORD *)v16 + 5) = v27;
  *((_QWORD *)v16 + 6) = v32;
  *((_WORD *)v16 + 28) = 0;
  sub_221014F5C((uint64_t)v13, &qword_2556594A8);
  v76 = sub_2212F49E0();
  v73 = v33;
  v34 = v74;
  v35 = v74 + *(int *)(v75 + 36);
  v36 = sub_2212F37F8();
  v37 = (uint64_t)v77;
  *v77 = v36;
  *(_QWORD *)(v37 + 8) = 0x4008000000000000;
  *(_BYTE *)(v37 + 16) = 0;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556594D0);
  sub_22108B3CC(v1, (uint64_t *)(v37 + *(int *)(v38 + 44)));
  v39 = sub_2212F3FF0();
  KeyPath = swift_getKeyPath();
  v41 = v78;
  sub_221036BA4(v37, v78, &qword_255659490);
  v42 = (uint64_t *)(v41 + *(int *)(v81 + 36));
  *v42 = KeyPath;
  v42[1] = v39;
  sub_221014F5C(v37, &qword_255659490);
  sub_2212F3F84();
  sub_22108B908();
  v43 = v80;
  sub_2212F4140();
  sub_221014F5C(v41, &qword_255659498);
  LOBYTE(v39) = sub_2212F3ED0();
  v44 = v84;
  v45 = v86;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v35, v43, v86);
  v46 = v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556594E8) + 36);
  *(_BYTE *)v46 = v39;
  *(_OWORD *)(v46 + 8) = 0u;
  *(_OWORD *)(v46 + 24) = 0u;
  *(_BYTE *)(v46 + 40) = 1;
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
  v47 = (uint64_t *)(v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556594F0) + 36));
  v48 = v73;
  *v47 = v76;
  v47[1] = v48;
  sub_221036890((uint64_t)v16, v34, &qword_2556594B0);
  v49 = sub_2212F45CC();
  v50 = v79;
  sub_221036BA4(v34, v79, &qword_2556594B8);
  *(_QWORD *)(v50 + *(int *)(v82 + 36)) = v49;
  sub_221014F5C(v34, &qword_2556594B8);
  v52 = v89;
  v51 = v90;
  v53 = v91;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v90 + 104))(v89, *MEMORY[0x24BDEEB68], v91);
  v54 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))((char *)v87 + *(int *)(v88 + 20), v52, v53);
  __asm { FMOV            V0.2D, #10.0 }
  *v54 = _Q0;
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v52, v53);
  v60 = v83;
  v61 = v83 + *(int *)(v85 + 36);
  v62 = MEMORY[0x24BDED998];
  sub_221036990((uint64_t)v54, v61, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v61 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255657098) + 36)) = 256;
  sub_221036BA4(v50, v60, &qword_2556594C0);
  sub_221011A28((uint64_t)v54, (uint64_t (*)(_QWORD))v62);
  sub_221014F5C(v50, &qword_2556594C0);
  v63 = sub_2212F4A10();
  v65 = v64;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556594F8);
  v67 = v92;
  v68 = v92 + *(int *)(v66 + 36);
  sub_22108B78C(v68);
  v69 = (uint64_t *)(v68 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556570F8) + 36));
  *v69 = v63;
  v69[1] = v65;
  sub_221036890(v60, v67, &qword_2556594C8);
}

uint64_t sub_22108B024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  __int128 v49;
  int v50;
  uint64_t v51;
  __int128 v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v62[400];
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  _OWORD v68[25];

  v61 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659518);
  v59 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_2212F38F4();
  sub_2210575E0(a1, (uint64_t)v68);
  v54 = *((_QWORD *)&v68[0] + 1);
  v55 = *(_QWORD *)&v68[0];
  v53 = LOBYTE(v68[1]);
  v52 = *(_OWORD *)((char *)&v68[1] + 8);
  v51 = *((_QWORD *)&v68[2] + 1);
  v50 = LOBYTE(v68[3]);
  v49 = *(_OWORD *)((char *)&v68[3] + 8);
  v48 = *((_QWORD *)&v68[4] + 1);
  v47 = LOBYTE(v68[5]);
  v46 = *((_QWORD *)&v68[5] + 1);
  v6 = sub_2212F4A10();
  v57 = v7;
  v58 = v6;
  v45 = sub_2212F38E8();
  sub_221057C30((uint64_t)v68);
  v44 = *(_QWORD *)&v68[0];
  v43 = *(_OWORD *)((char *)v68 + 8);
  v41 = *(_QWORD *)&v68[2];
  v42 = *((_QWORD *)&v68[1] + 1);
  v39 = *((_QWORD *)&v68[3] + 1);
  v40 = *((_QWORD *)&v68[2] + 1);
  v38 = *((_QWORD *)&v68[4] + 1);
  v37 = *((_QWORD *)&v68[5] + 1);
  v8 = *(_QWORD *)&v68[5];
  v65 = 0;
  v64 = v68[3];
  v63 = v68[4];
  v9 = sub_2212F3ED0();
  sub_2212F2D48();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  LOBYTE(a1) = v65;
  v18 = v64;
  v19 = v63;
  v66 = 0;
  v20 = sub_2212F3F0C();
  sub_2212F2D48();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v29 = v66;
  v67 = 0;
  sub_2212F4ADC();
  v68[0] = (unint64_t)v56;
  LOBYTE(v68[1]) = 1;
  *((_QWORD *)&v68[1] + 1) = v55;
  *(_QWORD *)&v68[2] = v54;
  BYTE8(v68[2]) = v53;
  v68[3] = v52;
  *(_QWORD *)&v68[4] = v51;
  BYTE8(v68[4]) = v50;
  v68[5] = v49;
  *(_QWORD *)&v68[6] = v48;
  BYTE8(v68[6]) = v47;
  *(_QWORD *)&v68[7] = v46;
  *((_QWORD *)&v68[7] + 1) = v45;
  *(_QWORD *)&v68[8] = 0;
  BYTE8(v68[8]) = a1;
  *(_QWORD *)&v68[9] = v44;
  *(_OWORD *)((char *)&v68[9] + 8) = v43;
  *((_QWORD *)&v68[10] + 1) = v42;
  *(_QWORD *)&v68[11] = v41;
  *((_QWORD *)&v68[11] + 1) = v40;
  LOBYTE(v68[12]) = v18;
  *((_QWORD *)&v68[12] + 1) = v39;
  LOBYTE(v68[13]) = v19;
  *((_QWORD *)&v68[13] + 1) = v38;
  *(_QWORD *)&v68[14] = v8;
  *((_QWORD *)&v68[14] + 1) = v37;
  *(_QWORD *)&v68[15] = 0x402E000000000000;
  BYTE8(v68[15]) = v9;
  *(_QWORD *)&v68[16] = v11;
  *((_QWORD *)&v68[16] + 1) = v13;
  *(_QWORD *)&v68[17] = v15;
  *((_QWORD *)&v68[17] + 1) = v17;
  LOBYTE(v68[18]) = v29;
  BYTE8(v68[18]) = v20;
  *(_QWORD *)&v68[19] = v22;
  *((_QWORD *)&v68[19] + 1) = v24;
  *(_QWORD *)&v68[20] = v26;
  *((_QWORD *)&v68[20] + 1) = v28;
  LOBYTE(v68[21]) = 0;
  *((_QWORD *)&v68[21] + 1) = 0;
  v68[22] = xmmword_221300E90;
  *(_QWORD *)&v68[23] = v30;
  *((_QWORD *)&v68[23] + 1) = v31;
  *(_QWORD *)&v68[24] = v58;
  *((_QWORD *)&v68[24] + 1) = v57;
  memcpy(v62, v68, sizeof(v62));
  sub_2212F3F84();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659520);
  sub_22108B9AC();
  sub_2212F4140();
  sub_22108BA48((uint64_t)v68);
  LOBYTE(a1) = sub_2212F3ED0();
  v33 = v59;
  v32 = v60;
  v34 = v61;
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v61, v5, v60);
  v35 = v34 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255659540) + 36);
  *(_BYTE *)v35 = a1;
  *(_OWORD *)(v35 + 8) = 0u;
  *(_OWORD *)(v35 + 24) = 0u;
  *(_BYTE *)(v35 + 40) = 1;
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v5, v32);
}

uint64_t sub_22108B3CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;

  v40 = a2;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659500);
  MEMORY[0x24BDAC7A8](v39);
  v4 = (uint64_t *)((char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = sub_2212F4698();
  v5 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659508);
  v8 = MEMORY[0x24BDAC7A8](v37);
  v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v38 = (uint64_t)&v35 - v11;
  v12 = (int *)type metadata accessor for SubscriptionOfferCopyWriter();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  sub_221036990(a1 + *(int *)(v15 + 20), (uint64_t)v14, type metadata accessor for Product.TaskState);
  v16 = &v14[v12[5]];
  strcpy(v16, "SPECIAL OFFER");
  *((_WORD *)v16 + 7) = -4864;
  v17 = &v14[v12[6]];
  *(_QWORD *)v17 = 0x4C42414C49415641;
  *((_QWORD *)v17 + 1) = 0xE900000000000045;
  v18 = &v14[v12[7]];
  *(_QWORD *)v18 = 0x6F4D206E7261654CLL;
  *((_QWORD *)v18 + 1) = 0xEA00000000006572;
  v19 = &v14[v12[8]];
  *(_QWORD *)v19 = 0x6269726373627553;
  *((_QWORD *)v19 + 1) = 0xE900000000000065;
  sub_221011A28((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOfferCopyWriter);
  v41 = 0x6F4D206E7261654CLL;
  v42 = 0xEA00000000006572;
  sub_221036844();
  v20 = sub_2212F40F8();
  v22 = v21;
  v35 = v23;
  LOBYTE(v14) = v24 & 1;
  v25 = sub_2212F4680();
  v26 = v7;
  v27 = v7;
  v28 = v36;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v27, *MEMORY[0x24BDF40B0], v36);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v4 + *(int *)(v39 + 28), v26, v28);
  *v4 = KeyPath;
  sub_221036BA4((uint64_t)v4, (uint64_t)v10 + *(int *)(v37 + 36), &qword_255659500);
  *v10 = v25;
  swift_retain();
  sub_221014F5C((uint64_t)v4, &qword_255659500);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v26, v28);
  swift_release();
  v30 = v38;
  sub_221036890((uint64_t)v10, v38, &qword_255659508);
  sub_221036BA4(v30, (uint64_t)v10, &qword_255659508);
  v31 = v40;
  *v40 = v20;
  v31[1] = v22;
  *((_BYTE *)v31 + 16) = (_BYTE)v14;
  v31[3] = v35;
  v32 = v31;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659510);
  sub_221036BA4((uint64_t)v10, (uint64_t)v32 + *(int *)(v33 + 48), &qword_255659508);
  sub_221017C14(v20, v22, (char)v14);
  swift_bridgeObjectRetain();
  sub_221014F5C(v30, &qword_255659508);
  sub_221014F5C((uint64_t)v10, &qword_255659508);
  sub_221036880(v20, v22, (char)v14);
  return swift_bridgeObjectRelease();
}

void sub_22108B78C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;

  v2 = sub_2212F3414();
  v3 = MEMORY[0x24BDED998];
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_OWORD *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657038);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (char *)v5 + *(int *)(v2 + 20);
  v10 = *MEMORY[0x24BDEEB68];
  v11 = sub_2212F387C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  __asm { FMOV            V0.2D, #10.0 }
  *v5 = _Q0;
  v17 = sub_2212F45CC();
  sub_221036990((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))v3);
  *(_QWORD *)&v8[*(int *)(v6 + 52)] = v17;
  *(_WORD *)&v8[*(int *)(v6 + 56)] = 256;
  sub_221011A28((uint64_t)v5, (uint64_t (*)(_QWORD))v3);
  v18 = sub_2212F45A8();
  sub_221036BA4((uint64_t)v8, a1, &qword_255657038);
  v19 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556570F0) + 36));
  *v19 = v18;
  v19[1] = 0x4014000000000000;
  v19[2] = 0;
  v19[3] = 0;
  sub_221014F5C((uint64_t)v8, &qword_255657038);
}

unint64_t sub_22108B908()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2556594D8;
  if (!qword_2556594D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659498);
    sub_221017AD4(&qword_2556594E0, &qword_255659490, MEMORY[0x24BDF4498]);
    v3 = v2;
    sub_221017AD4(&qword_255656B78, &qword_255656B80, MEMORY[0x24BDF1028]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2556594D8);
  }
  return result;
}

unint64_t sub_22108B9AC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255659528;
  if (!qword_255659528)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659520);
    sub_221017AD4(&qword_255658298, &qword_2556582A0, MEMORY[0x24BDF4700]);
    v3 = v2;
    sub_221017AD4(&qword_255659530, &qword_255659538, MEMORY[0x24BDEF370]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255659528);
  }
  return result;
}

uint64_t sub_22108BA48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_BYTE *)(a1 + 104);
  sub_221036880(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_221036880(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_221036880(v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_22108BB08()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255659548;
  if (!qword_255659548)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556594F8);
    v2 = sub_22108BB8C();
    sub_221017AD4(&qword_255657200, &qword_2556570F8, MEMORY[0x24BDEF370]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255659548);
  }
  return result;
}

unint64_t sub_22108BB8C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255659550;
  if (!qword_255659550)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556594C8);
    v2 = sub_22108BC10();
    sub_221017AD4(&qword_2556571E0, &qword_255657098, MEMORY[0x24BDEB950]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255659550);
  }
  return result;
}

unint64_t sub_22108BC10()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255659558;
  if (!qword_255659558)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556594C0);
    v2 = sub_22108BC94();
    sub_221017AD4(&qword_255656990, &qword_255656978, MEMORY[0x24BDF0710]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255659558);
  }
  return result;
}

unint64_t sub_22108BC94()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255659560;
  if (!qword_255659560)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556594B8);
    v2 = sub_22108BD18();
    sub_221017AD4(&qword_2556595A8, &qword_2556594F0, MEMORY[0x24BDEDC10]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255659560);
  }
  return result;
}

unint64_t sub_22108BD18()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255659568;
  if (!qword_255659568)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556594B0);
    v2 = sub_22108BD9C();
    sub_221017AD4(&qword_2556595A0, &qword_2556594A8, MEMORY[0x24BDEDC10]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255659568);
  }
  return result;
}

unint64_t sub_22108BD9C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255659570;
  if (!qword_255659570)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659578);
    v2 = sub_22108BE20();
    sub_221017AD4(&qword_2556571D0, &qword_2556571D8, MEMORY[0x24BDEB950]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255659570);
  }
  return result;
}

unint64_t sub_22108BE20()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255659580;
  if (!qword_255659580)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659588);
    v2 = sub_22108BEA4();
    sub_221017AD4(&qword_2556571C0, &qword_2556571C8, (uint64_t)&unk_221308890);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255659580);
  }
  return result;
}

unint64_t sub_22108BEA4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255659590;
  if (!qword_255659590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659598);
    v2[0] = sub_221036808();
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255659590);
  }
  return result;
}

void sub_22108BF10()
{
  off_2556595B0 = &unk_24E6F0B68;
}

uint64_t sub_22108BF24()
{
  uint64_t *v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  void *v34;

  v1 = v0;
  v3 = *v0;
  v2 = v0[1];
  v4 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v5 = objc_msgSend(v4, sel_mainBundle);
  v6 = objc_msgSend(v5, sel_bundleIdentifier);

  if (v6)
  {
    v7 = sub_2212F537C();
    v9 = v8;

    sub_22108CF9C(v7, v9);
    v11 = v10;
    v13 = v12;
    swift_bridgeObjectRelease();
    v14 = sub_2212F2AA8();
    v16 = v15;
    sub_221054AE8(v11, v13);
  }
  else
  {
    v14 = 0;
    v16 = 0xE000000000000000;
  }
  v17 = sub_2212251F8(v14, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    return 0;
  sub_2212B4A98(v3, v2, *((unsigned __int16 *)v1 + 8) | (*((unsigned __int8 *)v1 + 18) << 16));
  if (!v18)
    return 0;
  v19 = v18;
  type metadata accessor for ProductViewPurchaseEvent();
  sub_2212B5338();
  if (!v20)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v21 = v20;
  sub_2212B5594();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v23 = v22;
  v24 = sub_2211D2818(v21, v19, 1);
  v25 = sub_2211D2818(v23, v24, 1);
  if (qword_255655C00 != -1)
    swift_once();
  v26 = (char *)off_2556595B0;
  v27 = *((_QWORD *)off_2556595B0 + 2);
  if (v27)
  {
    swift_bridgeObjectRetain_n();
    v28 = (uint64_t *)(v26 + 40);
    do
    {
      v30 = *(v28 - 1);
      v29 = *v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31 = sub_2211D351C(v30, v29);
      v33 = v32;
      swift_bridgeObjectRelease();
      if ((v33 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255657FF8);
        sub_2212F5AA8();
        swift_bridgeObjectRelease();
        v34 = *(void **)(*(_QWORD *)(v25 + 56) + 8 * v31);
        sub_221054AAC();
        sub_2212F5AC0();
        swift_bridgeObjectRelease();

      }
      swift_bridgeObjectRelease();
      v28 += 2;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease_n();
  }
  return v25;
}

uint64_t type metadata accessor for ProductViewPurchaseEvent()
{
  uint64_t result;

  result = qword_255659618;
  if (!qword_255659618)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_22108C254(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  int *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    v8 = *(int *)(a3 + 20);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_WORD *)(a1 + v8) = *(_WORD *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for ProductViewBaseEvent(0);
    v12 = v11[6];
    v13 = (void *)(v9 + v12);
    v14 = (const void *)(v10 + v12);
    v15 = sub_2212F4E00();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
    *(_BYTE *)(v9 + v11[8]) = *(_BYTE *)(v10 + v11[8]);
    *(_BYTE *)(v9 + v11[9]) = *(_BYTE *)(v10 + v11[9]);
    *(_BYTE *)(v9 + v11[10]) = *(_BYTE *)(v10 + v11[10]);
    v18 = *(int *)(a3 + 24);
    v19 = (char *)v4 + v18;
    v20 = (uint64_t)a2 + v18;
    v21 = sub_2212F2AF0();
    v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    v22(v19, v20, v21);
    v23 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
    v19[v23[5]] = *(_BYTE *)(v20 + v23[5]);
    v22(&v19[v23[6]], v20 + v23[6], v21);
    v19[v23[7]] = *(_BYTE *)(v20 + v23[7]);
    v24 = v23[8];
    v25 = &v19[v24];
    v26 = v20 + v24;
    v25[8] = *(_BYTE *)(v26 + 8);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v27 = v23[9];
    v28 = &v19[v27];
    v29 = (_QWORD *)(v20 + v27);
    v30 = v29[1];
    *(_QWORD *)v28 = *v29;
    *((_QWORD *)v28 + 1) = v30;
    v19[v23[10]] = *(_BYTE *)(v20 + v23[10]);
    v19[v23[11]] = *(_BYTE *)(v20 + v23[11]);
    v19[v23[12]] = *(_BYTE *)(v20 + v23[12]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_22108C474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = v4 + *(int *)(type metadata accessor for ProductViewBaseEvent(0) + 24);
  v6 = sub_2212F4E00();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_2212F2AF0();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v10 = type metadata accessor for MintViewBasePurchaseEvent(0);
  v9(v7 + *(int *)(v10 + 24), v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22108C540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v11 = v10[6];
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_2212F4E00();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  *(_BYTE *)(v8 + v10[7]) = *(_BYTE *)(v9 + v10[7]);
  *(_BYTE *)(v8 + v10[8]) = *(_BYTE *)(v9 + v10[8]);
  *(_BYTE *)(v8 + v10[9]) = *(_BYTE *)(v9 + v10[9]);
  *(_BYTE *)(v8 + v10[10]) = *(_BYTE *)(v9 + v10[10]);
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_2212F2AF0();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  v21 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
  *(_BYTE *)(v17 + v21[5]) = *(_BYTE *)(v18 + v21[5]);
  v20(v17 + v21[6], v18 + v21[6], v19);
  *(_BYTE *)(v17 + v21[7]) = *(_BYTE *)(v18 + v21[7]);
  v22 = v21[8];
  v23 = v17 + v22;
  v24 = v18 + v22;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v25 = v21[9];
  v26 = (_QWORD *)(v17 + v25);
  v27 = (_QWORD *)(v18 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  *(_BYTE *)(v17 + v21[10]) = *(_BYTE *)(v18 + v21[10]);
  *(_BYTE *)(v17 + v21[11]) = *(_BYTE *)(v18 + v21[11]);
  *(_BYTE *)(v17 + v21[12]) = *(_BYTE *)(v18 + v21[12]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22108C734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  const void *v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v6 = *(int *)(a3 + 20);
  v7 = (_BYTE *)(a1 + v6);
  v8 = a2 + v6;
  *v7 = *(_BYTE *)(a2 + v6);
  v7[1] = *(_BYTE *)(a2 + v6 + 1);
  v9 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = (const void *)(v8 + v10);
  v13 = sub_2212F4E00();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    v16 = *(_QWORD *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(_BYTE *, const void *, uint64_t))(v16 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_7:
  v7[v9[7]] = *(_BYTE *)(v8 + v9[7]);
  v7[v9[8]] = *(_BYTE *)(v8 + v9[8]);
  v7[v9[9]] = *(_BYTE *)(v8 + v9[9]);
  v7[v9[10]] = *(_BYTE *)(v8 + v9[10]);
  v18 = *(int *)(a3 + 24);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_2212F2AF0();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24);
  v22(v19, v20, v21);
  v23 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
  *(_BYTE *)(v19 + v23[5]) = *(_BYTE *)(v20 + v23[5]);
  v22(v19 + v23[6], v20 + v23[6], v21);
  *(_BYTE *)(v19 + v23[7]) = *(_BYTE *)(v20 + v23[7]);
  v24 = v23[8];
  v25 = v19 + v24;
  v26 = v20 + v24;
  v27 = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = v27;
  v28 = v23[9];
  v29 = (_QWORD *)(v19 + v28);
  v30 = (_QWORD *)(v20 + v28);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v19 + v23[10]) = *(_BYTE *)(v20 + v23[10]);
  *(_BYTE *)(v19 + v23[11]) = *(_BYTE *)(v20 + v23[11]);
  *(_BYTE *)(v19 + v23[12]) = *(_BYTE *)(v20 + v23[12]);
  return a1;
}

uint64_t sub_22108C9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_WORD *)(a1 + v6) = *(_WORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v10 = v9[6];
  v11 = (void *)(v7 + v10);
  v12 = (const void *)(v8 + v10);
  v13 = sub_2212F4E00();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  *(_BYTE *)(v7 + v9[7]) = *(_BYTE *)(v8 + v9[7]);
  *(_BYTE *)(v7 + v9[8]) = *(_BYTE *)(v8 + v9[8]);
  *(_BYTE *)(v7 + v9[9]) = *(_BYTE *)(v8 + v9[9]);
  *(_BYTE *)(v7 + v9[10]) = *(_BYTE *)(v8 + v9[10]);
  v15 = *(int *)(a3 + 24);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_2212F2AF0();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v20 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
  *(_BYTE *)(v16 + v20[5]) = *(_BYTE *)(v17 + v20[5]);
  v19(v16 + v20[6], v17 + v20[6], v18);
  *(_BYTE *)(v16 + v20[7]) = *(_BYTE *)(v17 + v20[7]);
  v21 = v20[8];
  v22 = v16 + v21;
  v23 = v17 + v21;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_OWORD *)(v16 + v20[9]) = *(_OWORD *)(v17 + v20[9]);
  *(_BYTE *)(v16 + v20[10]) = *(_BYTE *)(v17 + v20[10]);
  *(_BYTE *)(v16 + v20[11]) = *(_BYTE *)(v17 + v20[11]);
  *(_BYTE *)(v16 + v20[12]) = *(_BYTE *)(v17 + v20[12]);
  return a1;
}

uint64_t sub_22108CB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v11 = v10[6];
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_2212F4E00();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!EnumTagSinglePayload)
  {
    v17 = *(_QWORD *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
LABEL_7:
  *(_BYTE *)(v8 + v10[7]) = *(_BYTE *)(v9 + v10[7]);
  *(_BYTE *)(v8 + v10[8]) = *(_BYTE *)(v9 + v10[8]);
  *(_BYTE *)(v8 + v10[9]) = *(_BYTE *)(v9 + v10[9]);
  *(_BYTE *)(v8 + v10[10]) = *(_BYTE *)(v9 + v10[10]);
  v19 = *(int *)(a3 + 24);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_2212F2AF0();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40);
  v23(v20, v21, v22);
  v24 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
  *(_BYTE *)(v20 + v24[5]) = *(_BYTE *)(v21 + v24[5]);
  v23(v20 + v24[6], v21 + v24[6], v22);
  *(_BYTE *)(v20 + v24[7]) = *(_BYTE *)(v21 + v24[7]);
  v25 = v24[8];
  v26 = v20 + v25;
  v27 = v21 + v25;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v28 = v24[9];
  v29 = (_QWORD *)(v20 + v28);
  v30 = (uint64_t *)(v21 + v28);
  v32 = *v30;
  v31 = v30[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + v24[10]) = *(_BYTE *)(v21 + v24[10]);
  *(_BYTE *)(v20 + v24[11]) = *(_BYTE *)(v21 + v24[11]);
  *(_BYTE *)(v20 + v24[12]) = *(_BYTE *)(v21 + v24[12]);
  return a1;
}

uint64_t sub_22108CDBC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22108CDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ProductViewBaseEvent(0);
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
    {
      v10 = v9;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for MintViewBasePurchaseEvent(0);
      v11 = *(int *)(a3 + 24);
    }
    return __swift_getEnumTagSinglePayload(a1 + v11, a2, v10);
  }
}

uint64_t sub_22108CE6C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22108CE78(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = type metadata accessor for ProductViewBaseEvent(0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = type metadata accessor for MintViewBasePurchaseEvent(0);
      v10 = *(int *)(a4 + 24);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_22108CF0C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ProductViewBaseEvent(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MintViewBasePurchaseEvent(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_22108CF9C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_2212F51F0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDC6B90];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_2212F51E4();
  MEMORY[0x24BDAC7A8](v6);
  swift_bridgeObjectRetain();
  sub_22108D1AC(a1, a2);
  v8 = v7;
  sub_22108DF44(&qword_255659658, v5, MEMORY[0x24BDC6B88]);
  sub_2212F51D8();
  __asm { BR              X10 }
}

uint64_t sub_22108D0A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_22108DE38();
  OUTLINED_FUNCTION_0_16();
  sub_2212F51CC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  OUTLINED_FUNCTION_0_16();
  return sub_22108D694(v2);
}

uint64_t sub_22108D1AC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659668);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_22108DF84((uint64_t)v14);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_2212F59D0();
      }
      if (v2)
        v4 = (char *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_QWORD *)v2;
    }
    v6 = MEMORY[0x2276680C8](v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_2212F5424();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = MEMORY[0x2276680B0](v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x24BDAC7A8](*(_QWORD *)&v14[0]);
    sub_22108D84C();
    __asm { BR              X12 }
  }
  sub_22101E4FC(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  sub_2212F2910();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

uint64_t sub_22108D694(uint64_t a1)
{
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7[3];
  uint64_t v8;
  uint64_t v9;

  v2 = sub_2212F51E4();
  v8 = v2;
  v9 = sub_22108DF44(&qword_255659660, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6B58], MEMORY[0x24BDC6B48]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(boxed_opaque_existential_1, a1, v2);
  __swift_project_boxed_opaque_existential_1(v7, v8);
  sub_2212F2910();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v6;
}

id sub_22108D774(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)sub_22108D7A4();

  return v2;
}

uint64_t sub_22108D7A4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v0 = sub_2212F537C();
  sub_22108CF9C(v0, v1);
  v3 = v2;
  v5 = v4;
  swift_bridgeObjectRelease();
  v6 = sub_2212F2A9C();
  sub_221054AE8(v3, v5);
  return v6;
}

_QWORD *sub_22108D804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[3];
  _QWORD v6[2];

  v6[0] = a3;
  v6[1] = a4;
  v5[2] = v6;
  return sub_22108DBE0((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_22108E064, (uint64_t)v5, a1, a2);
}

void sub_22108D84C()
{
  __asm { BR              X11 }
}

_QWORD *sub_22108D8AC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;

  v7 = v4;
  LOWORD(v8) = a1;
  BYTE2(v8) = BYTE2(a1);
  HIBYTE(v8) = BYTE3(a1);
  v9 = BYTE4(a1);
  v10 = BYTE5(a1);
  v11 = BYTE6(a1);
  result = sub_22108DCEC((uint64_t)&v7, v3, v2, BYTE6(a1));
  v6 = v8 | ((unint64_t)v9 << 32) | ((unint64_t)v10 << 40) | ((unint64_t)v11 << 48);
  *v1 = v7;
  v1[1] = v6;
  return result;
}

uint64_t sub_22108DAEC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = sub_2212F2A30();
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = MEMORY[0x227668080]();
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = MEMORY[0x22766808C]();
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_22108DB60(uint64_t result)
{
  char v1;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_2212F5970();
    if ((v1 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_22108DBE0(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  if (a3)
  {
    v6 = a4 - a3;
    v7 = a3;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  result = a1(&v9, v7, v6);
  if (!v4)
    return (_QWORD *)v9;
  return result;
}

char *sub_22108DC40(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_2212F28B0();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_2212F28C8();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_2212F28BC();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

_QWORD *sub_22108DCEC(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  result = a2(&v6, a1, a1 + a4);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_22108DD30(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_2212F28B0();
  if (!result || (result = sub_2212F28C8(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_2212F28BC();
      sub_2212F51F0();
      sub_22108DF44(&qword_255659658, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6B90], MEMORY[0x24BDC6B88]);
      return sub_2212F51C0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_22108DDF4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_22108DE38()
{
  sub_2212F51F0();
  sub_22108DF44(&qword_255659658, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6B90], MEMORY[0x24BDC6B88]);
  return sub_2212F51C0();
}

uint64_t sub_22108DF44(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x22766BAC4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22108DF84(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255659670);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_22108DFC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_22108D804(a1, a2, *a3, a3[1]);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

_QWORD *sub_22108DFF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_22108DFC4(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

uint64_t sub_22108E010(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_221054AE8(a1, a2);
  return a1;
}

uint64_t sub_22108E024@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_22108DB60(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_22108E064@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_22108E024(a1, a2);
}

uint64_t OUTLINED_FUNCTION_0_16()
{
  uint64_t v0;
  unint64_t v1;

  return sub_221054AE8(v0, v1);
}

uint64_t OUTLINED_FUNCTION_1_15(uint64_t a1, uint64_t a2)
{
  return sub_22108DD30(a1, a2);
}

uint64_t OUTLINED_FUNCTION_2_14()
{
  uint64_t v0;
  unint64_t v1;

  return sub_22108DDF4(v0, v1);
}

void sub_22108E0A4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_22105009C(319, &qword_255657C20, type metadata accessor for ProductViewConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_22105009C(319, (unint64_t *)&qword_255656FF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDED930], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *sub_22108E180(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  size_t v37;
  size_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  _QWORD *v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  size_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  void (*v71)(unint64_t, unint64_t, uint64_t);
  unint64_t v72;
  _WORD *v73;
  _WORD *v74;
  unint64_t v75;
  uint64_t v76;
  size_t v77;
  unint64_t v78;
  char v79;
  unint64_t v80;
  unint64_t v81;
  void (*v82)(unint64_t, unint64_t, uint64_t);
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  void (*v87)(unint64_t, unint64_t, uint64_t);
  unint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  unsigned int v92;
  unint64_t v93;
  unint64_t v94;
  void (*v95)(unint64_t, unint64_t, uint64_t);
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  void *v108;
  const void *v109;
  unint64_t v110;
  unint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  unsigned int v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  char v121;
  _QWORD *result;
  char v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(uint64_t, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  size_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  size_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  size_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  size_t v169;
  unint64_t v170;
  uint64_t v172;

  v163 = sub_2212F5124();
  v4 = *(_QWORD *)(v163 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v154 = v5 + 16;
  v162 = v4;
  v6 = *(_QWORD *)(v4 + 64);
  v152 = sub_2212F5058();
  v7 = *(_QWORD *)(v152 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v5 | (unint64_t)v8 | 7;
  v155 = v9 + v6;
  v149 = v8 + 16;
  v158 = v8;
  v150 = v7;
  v151 = *(_QWORD *)(v7 + 64) + v5;
  v159 = v5;
  v10 = v6 + 7;
  v11 = (v6 + 7 + ((v151 + (v149 & ~(unint64_t)v8)) & ~(unint64_t)v5)) & 0xFFFFFFFFFFFFFFF8;
  v12 = v11 + 8;
  v13 = v11 + 9;
  v148 = v12;
  if (v13 <= v12)
    v13 = v12;
  if (v13 <= 2)
    v13 = 2;
  v156 = v6 + 7;
  v157 = v13;
  v14 = v13 + ((v9 + v6 + ((v5 + 16) & ~(unint64_t)v5)) & ~v9);
  if (v14 + 1 > (v10 & 0xFFFFFFFFFFFFFFF8) + 16)
    v15 = v14 + 1;
  else
    v15 = (v10 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v15 <= 0x10)
    v15 = 16;
  v170 = v15;
  v164 = sub_2212F29B8();
  v16 = *(_QWORD *)(v164 - 8);
  v18 = *(_DWORD *)(v16 + 80);
  v17 = *(unsigned int *)(v16 + 84);
  v19 = v17 - 1;
  if (!(_DWORD)v17)
    v19 = 0;
  if (v19 <= 0x7FFFFFFF)
    v20 = 0x7FFFFFFF;
  else
    v20 = v19;
  if (v19 >= 0)
    v21 = 0x7FFFFFFF;
  else
    v21 = v20;
  v167 = v21;
  v22 = *(_DWORD *)(v16 + 80);
  v23 = v9 | v22;
  v153 = *(_QWORD *)(v164 - 8);
  v24 = *(_QWORD *)(v16 + 64);
  if (!(_DWORD)v17)
    ++v24;
  v169 = v24;
  v166 = *(_QWORD *)(a3 + 16);
  v25 = *(_QWORD *)(v166 - 8);
  v26 = *(_DWORD *)(v25 + 80);
  v27 = v26;
  v165 = v25;
  v28 = *(_QWORD *)(v25 + 64);
  v29 = sub_2212F33F0();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(_DWORD *)(v30 + 80);
  v32 = v31 & 0xF8 | 7;
  if (*(_QWORD *)(v30 + 64) <= 8uLL)
    v33 = 8;
  else
    v33 = *(_QWORD *)(v30 + 64);
  v34 = v23 | v26 | v32;
  if (v34 != 7
    || ((v8 | v5 | v18 | v31 | v26) & 0x100000) != 0
    || (v35 = v5 | (unint64_t)v8 | 7,
        v36 = v22 + 16,
        v37 = ((v23 + 32) & ~v23)
            + ((v169 + 7 + ((v22 + 16 + ((v170 + 8 + ((v170 + 1 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8)) & ~v22)) & 0xFFFFFFFFFFFFFFF8)
            + 8,
        v38 = v37 + v26,
        v39 = v33 + 8,
        ((v33 + 8 + ((v28 + v32 + (v38 & ~(unint64_t)v26)) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18))
  {
    v51 = *a2;
    *a1 = *a2;
    v49 = (_QWORD *)(v51 + ((v34 + 16) & ~v34));
    swift_retain();
    return v49;
  }
  v40 = v29;
  v41 = ~v35;
  v42 = ~v23;
  v43 = ~v22;
  v44 = v167;
  v168 = v33;
  v141 = v30;
  v142 = v40;
  v146 = v28 + v32;
  v147 = v33 + 8;
  v144 = ~v32;
  v145 = v38;
  v143 = ~v27;
  if (v44 == 0x7FFFFFFF)
  {
    v45 = a2;
    v46 = a2[1];
    if (v46 >= 0xFFFFFFFF)
    {
      v135 = ~v35;
      v136 = v170 + 1;
      v137 = v5 | (unint64_t)v8 | 7;
      v138 = ~v22;
      v139 = v170 + 8;
      v140 = v169 + 7;
      v134 = v22 + 16;
      v47 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      v48 = (_QWORD *)(((unint64_t)v47 + v23 + 16) & v42);
      v49 = a1;
      v50 = v162;
      goto LABEL_32;
    }
    v52 = a2;
  }
  else
  {
    v140 = v169 + 7;
    v52 = a2;
    v47 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    v53 = ((unint64_t)v47 + v23 + 16) & v42;
    v139 = v170 + 8;
    v54 = v17;
    v138 = v43;
    v55 = v36;
    v56 = v35;
    if (__swift_getEnumTagSinglePayload((v36 + ((v170 + 8 + ((v53 + v35 + v170 + 1) & v41)) & 0xFFFFFFFFFFFFFFF8)) & v43, v54, v164) <= 1)
    {
      v135 = v41;
      v136 = v170 + 1;
      v137 = v56;
      v134 = v55;
      v46 = a2[1];
      v49 = a1;
      v45 = a2;
      v39 = v147;
      v48 = (_QWORD *)v53;
      v50 = v162;
      v42 = ~v23;
LABEL_32:
      *v49 = *v45;
      v49[1] = v46;
      v57 = (_QWORD *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v57 = *v47;
      v57[1] = v47[1];
      v58 = (_QWORD *)(((unint64_t)v57 + v23 + 16) & v42);
      v59 = v170;
      v60 = *((unsigned __int8 *)v48 + v170);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v60 >= 3)
      {
        if (v170 <= 3)
          v61 = v170;
        else
          v61 = 4;
        __asm { BR              X11 }
      }
      v68 = ~v159;
      v172 = ~v158;
      if (v60 == 2)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v50 + 16))(v58, v48, v163);
        *(_OWORD *)(((unint64_t)v58 + v156) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v48 + v156) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v58 + v170) = 2;
      }
      else
      {
        if (v60 == 1)
        {
          *v58 = *v48;
          v58[1] = v48[1];
          v69 = ((unint64_t)v58 + v154) & v68;
          v160 = ~v159;
          v70 = ((unint64_t)v48 + v154) & v68;
          v71 = *(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 16);
          swift_bridgeObjectRetain();
          v71(v69, v70, v163);
          v72 = v135;
          v73 = (_WORD *)((v155 + v69) & v135);
          v74 = (_WORD *)((v155 + v70) & v135);
          v75 = v157;
          switch(*((_BYTE *)v74 + v157))
          {
            case 0:
              v79 = 0;
              *v73 = *v74;
              break;
            case 1:
              *(_BYTE *)v73 = *(_BYTE *)v74;
              v79 = 1;
              break;
            case 2:
              *(_QWORD *)v73 = *(_QWORD *)v74;
              *(_QWORD *)(((v155 + v69) & v135) + 8) = *(_QWORD *)(((v155 + v70) & v135) + 8);
              v80 = ((unint64_t)v73 + v149) & v172;
              v81 = ((unint64_t)v74 + v149) & v172;
              v82 = *(void (**)(unint64_t, unint64_t, uint64_t))(v150 + 16);
              swift_bridgeObjectRetain();
              v82(v80, v81, v152);
              v83 = (v151 + v80) & v160;
              v84 = (v151 + v81) & v160;
              v71(v83, v84, v163);
              v72 = v135;
              v50 = v162;
              v75 = v157;
              *(_QWORD *)((v156 + v83) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v156 + v84) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v73 + v148) = *((_BYTE *)v74 + v148);
              v79 = 2;
              break;
            case 3:
              *(_QWORD *)v73 = *(_QWORD *)v74;
              *(_QWORD *)(((v155 + v69) & v135) + 8) = *(_QWORD *)(((v155 + v70) & v135) + 8);
              v85 = ((unint64_t)v73 + v149) & v172;
              v86 = ((unint64_t)v74 + v149) & v172;
              v87 = *(void (**)(unint64_t, unint64_t, uint64_t))(v150 + 16);
              swift_bridgeObjectRetain();
              v87(v85, v86, v152);
              v88 = (v151 + v85) & v160;
              v89 = (v151 + v86) & v160;
              v71(v88, v89, v163);
              v72 = v135;
              v75 = v157;
              *(_QWORD *)((v156 + v88) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v156 + v89) & 0xFFFFFFFFFFFFF8);
              v79 = 3;
              break;
            default:
              if (v157 <= 3)
                v76 = v157;
              else
                v76 = 4;
              __asm { BR              X12 }
              return result;
          }
          v39 = v147;
          v77 = v136;
          v78 = v137;
          *((_BYTE *)v73 + v75) = v79;
          v59 = v170;
          *((_BYTE *)v58 + v170) = 1;
          v49 = a1;
          v68 = v160;
LABEL_55:
          v90 = (_QWORD *)(((unint64_t)v58 + v78 + v77) & v72);
          v91 = (_QWORD *)(((unint64_t)v48 + v78 + v77) & v72);
          v92 = *((unsigned __int8 *)v91 + v59);
          if (v92 > 2)
          {
            memcpy(v90, v91, v77);
          }
          else if (v92 == 2)
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v50 + 16))(v90, v91, v163);
            *(_OWORD *)(((unint64_t)v90 + v156) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v91 + v156) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v90 + v59) = 2;
          }
          else
          {
            if (v92 == 1)
            {
              *v90 = *v91;
              v90[1] = v91[1];
              v93 = ((unint64_t)v90 + v154) & v68;
              v161 = v68;
              v94 = ((unint64_t)v91 + v154) & v68;
              v95 = *(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 16);
              v96 = v72;
              swift_bridgeObjectRetain();
              v95(v93, v94, v163);
              v97 = v157;
              v98 = (v155 + v93) & v96;
              v99 = (v155 + v94) & v96;
              switch(*(_BYTE *)(v99 + v157))
              {
                case 0:
                  v123 = 0;
                  *(_WORD *)v98 = *(_WORD *)v99;
                  break;
                case 1:
                  *(_BYTE *)v98 = *(_BYTE *)v99;
                  v123 = 1;
                  break;
                case 2:
                  *(_QWORD *)v98 = *(_QWORD *)v99;
                  *(_QWORD *)(v98 + 8) = *(_QWORD *)(v99 + 8);
                  v124 = (v149 + v98) & v172;
                  v125 = (v149 + v99) & v172;
                  v126 = *(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 16);
                  swift_bridgeObjectRetain();
                  v126(v124, v125, v152);
                  v59 = v170;
                  v127 = (v151 + v124) & v161;
                  v128 = (v151 + v125) & v161;
                  v95(v127, v128, v163);
                  v97 = v157;
                  *(_QWORD *)((v156 + v127) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v156 + v128) & 0xFFFFFFFFFFFFF8);
                  *(_BYTE *)(v98 + v148) = *(_BYTE *)(v99 + v148);
                  v123 = 2;
                  break;
                case 3:
                  *(_QWORD *)v98 = *(_QWORD *)v99;
                  *(_QWORD *)(v98 + 8) = *(_QWORD *)(v99 + 8);
                  v129 = (v149 + v98) & v172;
                  v130 = (v149 + v99) & v172;
                  v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 16);
                  swift_bridgeObjectRetain();
                  v131(v129, v130, v152);
                  v59 = v170;
                  v132 = (v151 + v129) & v161;
                  v133 = (v151 + v130) & v161;
                  v95(v132, v133, v163);
                  v97 = v157;
                  *(_QWORD *)((v156 + v132) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v156 + v133) & 0xFFFFFFFFFFFFF8);
                  v123 = 3;
                  break;
                default:
                  if (v157 <= 3)
                    v100 = v157;
                  else
                    v100 = 4;
                  __asm { BR              X12 }
                  return result;
              }
              v39 = v147;
              v104 = v164;
              v101 = v134;
              v103 = v138;
              v102 = v139;
              *(_BYTE *)(v98 + v97) = v123;
              *((_BYTE *)v90 + v59) = 1;
              goto LABEL_67;
            }
            *v90 = *v91;
            v90[1] = v91[1];
            *((_BYTE *)v90 + v59) = 0;
            swift_bridgeObjectRetain();
          }
          v101 = v134;
          v103 = v138;
          v102 = v139;
          v104 = v164;
LABEL_67:
          v105 = (_QWORD *)(((unint64_t)v90 + v102) & 0xFFFFFFFFFFFFFFF8);
          v106 = (_QWORD *)(((unint64_t)v91 + v102) & 0xFFFFFFFFFFFFFFF8);
          v107 = v106[1];
          *v105 = *v106;
          v105[1] = v107;
          v108 = (void *)(((unint64_t)v105 + v101) & v103);
          v109 = (const void *)(((unint64_t)v106 + v101) & v103);
          swift_retain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v104))
          {
            memcpy(v108, v109, v169);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v153 + 16))(v108, v109, v104);
            __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v104);
          }
          v63 = v165;
          v62 = v166;
          v64 = v145;
          v65 = v146;
          v66 = v143;
          v67 = v144;
          *(_QWORD *)(((unint64_t)v108 + v140) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v109 + v140) & 0xFFFFFFFFFFFFF8);
          goto LABEL_71;
        }
        *v58 = *v48;
        v58[1] = v48[1];
        *((_BYTE *)v58 + v170) = 0;
        swift_bridgeObjectRetain();
      }
      v77 = v136;
      v78 = v137;
      v72 = v135;
      goto LABEL_55;
    }
  }
  v49 = a1;
  memcpy(a1, v52, v37);
  v63 = v165;
  v62 = v166;
  v64 = v145;
  v65 = v146;
  v66 = v143;
  v67 = v144;
  v45 = v52;
  v39 = v147;
LABEL_71:
  v110 = ((unint64_t)v49 + v64) & v66;
  v111 = ((unint64_t)v45 + v64) & v66;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v63 + 16))(v110, v111, v62);
  v112 = (_QWORD *)((v65 + v110) & v67);
  v113 = (_QWORD *)((v65 + v111) & v67);
  v114 = *((unsigned __int8 *)v113 + v168);
  if (v114 >= 2)
  {
    if (v168 <= 3)
      v115 = v168;
    else
      v115 = 4;
    __asm { BR              X12 }
  }
  if (v114 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v141 + 16))(v112, v113, v142);
    v116 = v168;
    v117 = 1;
  }
  else
  {
    *v112 = *v113;
    swift_retain();
    v116 = v168;
    v117 = 0;
  }
  *((_BYTE *)v112 + v116) = v117;
  v118 = ((unint64_t)v112 + v39) & 0xFFFFFFFFFFFFFFF8;
  v119 = ((unint64_t)v113 + v39) & 0xFFFFFFFFFFFFFFF8;
  v120 = *(_QWORD *)v119;
  v121 = *(_BYTE *)(v119 + 8);
  sub_221017C08(*(_QWORD *)v119, v121);
  *(_QWORD *)v118 = v120;
  *(_BYTE *)(v118 + 8) = v121;
  return v49;
}

uint64_t sub_22108ED9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(unint64_t, uint64_t);
  unint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unsigned int v49;
  void (*v50)(unint64_t, uint64_t);
  uint64_t v51;
  unint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v4 = sub_2212F5124();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v81 = v6 + 16;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = sub_2212F5058();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v6 | v10 | 7;
  v80 = v11 + v7;
  v75 = v10 + 16;
  v77 = v9;
  v76 = *(_QWORD *)(v9 + 64) + v6;
  v12 = (v7 + 7 + ((v76 + ((v10 + 16) & ~v10)) & ~v6)) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;
  v14 = v12 + 9;
  if (v14 <= v13)
    v14 = v13;
  if (v14 <= 2)
    v15 = 2;
  else
    v15 = v14;
  v16 = v15 + ((v11 + v7 + ((v6 + 16) & ~v6)) & ~v11);
  if (v16 + 1 > ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v17 = v16 + 1;
  else
    v17 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v17 <= 0x10)
    v18 = 16;
  else
    v18 = v17;
  v19 = sub_2212F29B8();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int *)(v20 + 84);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = v11 | v22;
  v24 = ~(v11 | v22);
  v25 = ((v11 | v22) + 32) & v24;
  v26 = v18 + 1;
  v27 = (v18 + 1 + v11) & ~v11;
  v28 = ~v22;
  v29 = *(_QWORD *)(v20 + 64);
  if (v21 < 0x80000001)
  {
    v79 = v6 | v10 | 7;
    v30 = ~v11;
    if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    {
      v35 = v18 + 8;
      v36 = v22 + 16;
      goto LABEL_52;
    }
    v82 = v18 + 1;
    v83 = v27;
    v78 = v5;
    v71 = v8;
    v72 = *(_QWORD *)(v19 - 8);
    v74 = *(unsigned __int8 *)(v20 + 80);
    v31 = v19;
    v88 = ~v22;
    v84 = *(_QWORD *)(v20 + 64);
    v85 = *(_DWORD *)(v20 + 84);
    v86 = v25;
    v87 = a2;
    v73 = a1;
    v32 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v23 + 16) & v24;
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = *(unsigned __int8 *)(v32 + v18);
    if (v38 >= 3)
    {
      if (v18 <= 3)
        v39 = v18;
      else
        v39 = 4;
      __asm { BR              X12 }
    }
    v40 = v30;
    v89 = ~v6;
    v41 = ~v10;
    if (v38 == 2)
    {
      (*(void (**)(unint64_t, uint64_t))(v78 + 8))(v32, v4);
    }
    else if (v38 == 1)
    {
      swift_bridgeObjectRelease();
      v42 = *(void (**)(unint64_t, uint64_t))(v78 + 8);
      v42((v81 + v32) & v89, v4);
      v43 = (v80 + ((v81 + v32) & v89)) & v40;
      v44 = *(unsigned __int8 *)(v43 + v15);
      if (v44 >= 4)
      {
        if (v15 <= 3)
          v45 = v15;
        else
          v45 = 4;
        __asm { BR              X12 }
      }
      v46 = v82;
      if (v44 < 2)
        goto LABEL_36;
      swift_bridgeObjectRelease();
      v47 = (v75 + v43) & v41;
      (*(void (**)(unint64_t, uint64_t))(v77 + 8))(v47, v71);
      v42((v76 + v47) & v89, v4);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v46 = v82;
LABEL_36:
    v48 = (v32 + v79 + v46) & v40;
    v49 = *(unsigned __int8 *)(v48 + v18);
    if (v49 <= 2)
    {
      if (v49 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v78 + 8))(v48, v4);
      }
      else if (v49 == 1)
      {
        swift_bridgeObjectRelease();
        v50 = *(void (**)(unint64_t, uint64_t))(v78 + 8);
        v50((v81 + v48) & v89, v4);
        v51 = v15;
        v52 = (v80 + ((v81 + v48) & v89)) & v40;
        v53 = *(unsigned __int8 *)(v52 + v51);
        if (v53 >= 4)
        {
          if (v51 <= 3)
            v54 = v51;
          else
            v54 = 4;
          __asm { BR              X12 }
        }
        if (v53 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v77 + 8))((v75 + v52) & v41, v71);
          v50((v76 + ((v75 + v52) & v41)) & v89, v4);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v35 = v18 + 8;
    swift_release();
    v36 = v74 + 16;
    v55 = (v74 + 16 + ((v35 + v48) & 0xFFFFFFFFFFFFFFF8)) & v88;
    if (!__swift_getEnumTagSinglePayload(v55, 1, v31))
      (*(void (**)(unint64_t, uint64_t))(v72 + 8))(v55, v31);
    a1 = v73;
    goto LABEL_51;
  }
  v68 = v10;
  v69 = v15;
  v78 = v5;
  v71 = v8;
  v72 = *(_QWORD *)(v19 - 8);
  v70 = v4;
  v83 = (v18 + 1 + v11) & ~v11;
  v84 = *(_QWORD *)(v20 + 64);
  v86 = ((v11 | v22) + 32) & ~(v11 | v22);
  v87 = a2;
  v33 = a1;
  v32 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v23 + 16) & v24;
  v34 = v18;
  v35 = v18 + 8;
  v36 = v22 + 16;
  v88 = ~v22;
  v85 = *(_DWORD *)(v20 + 84);
  v31 = v19;
  v82 = v26;
  v37 = *(unsigned __int8 *)(v20 + 80);
  if (__swift_getEnumTagSinglePayload((v22 + 16 + ((v35 + ((v32 + v11 + v26) & ~v11)) & 0xFFFFFFFFFFFFFFF8)) & v28, v21, v19) <= 1)
  {
    v79 = v11;
    v30 = ~v11;
    v73 = v33;
    v74 = v37;
    v18 = v34;
    v15 = v69;
    v4 = v70;
    v10 = v68;
    goto LABEL_17;
  }
  a1 = v33;
LABEL_51:
  v25 = v86;
  a2 = v87;
  LODWORD(v21) = v85;
  v27 = v83;
  v29 = v84;
  v28 = v88;
LABEL_52:
  v56 = 7;
  if (!(_DWORD)v21)
    v56 = 8;
  v57 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v58 = (a1
       + v25
       + *(unsigned __int8 *)(v57 + 80)
       + ((v56 + v29 + ((v36 + ((v35 + v27) & 0xFFFFFFFFFFFFFFF8)) & v28)) & 0xFFFFFFFFFFFFFFF8)
       + 8) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  (*(void (**)(unint64_t))(v57 + 8))(v58);
  v59 = *(_QWORD *)(v57 + 64);
  v60 = sub_2212F33F0();
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(_DWORD *)(v61 + 80) & 0xF8 | 7;
  v63 = (v58 + v59 + v62) & ~v62;
  if (*(_QWORD *)(v61 + 64) <= 8uLL)
    v64 = 8;
  else
    v64 = *(_QWORD *)(v61 + 64);
  v65 = *(unsigned __int8 *)(v63 + v64);
  if (v65 >= 2)
  {
    if (v64 <= 3)
      v66 = v64;
    else
      v66 = 4;
    __asm { BR              X13 }
  }
  if (v65 == 1)
    (*(void (**)(unint64_t, uint64_t))(v61 + 8))(v63, v60);
  else
    swift_release();
  return sub_221017894(*(_QWORD *)((v64 + v63 + 8) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v64 + v63 + 8) & 0xFFFFFFFFFFFFFFF8) + 8));
}

_QWORD *sub_22108F4AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  unsigned int v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  size_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(unint64_t, unint64_t, uint64_t);
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _WORD *v58;
  _WORD *v59;
  uint64_t v60;
  uint64_t v61;
  size_t v62;
  char v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void (*v67)(unint64_t, unint64_t, uint64_t);
  _WORD *v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  void (*v74)(unint64_t, unint64_t, uint64_t);
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  unsigned int v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(unint64_t, unint64_t, uint64_t);
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  size_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  const void *v98;
  size_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  unsigned int v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  char v120;
  _QWORD *result;
  char v122;
  unint64_t v123;
  unint64_t v124;
  void (*v125)(unint64_t, unint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  void (*v131)(unint64_t, unint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _WORD *v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(unint64_t, unint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  size_t __n;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  size_t v168;
  uint64_t v169;

  v5 = sub_2212F5124();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v158 = v7 + 16;
  v165 = v6;
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_2212F5058();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v7 | v11 | 7;
  v169 = ~v12;
  v159 = v12 + v8;
  v13 = (v12 + v8 + ((v7 + 16) & ~v7)) & ~v12;
  v152 = v11 + 16;
  v153 = v10;
  v154 = *(_QWORD *)(v10 + 64) + v7;
  v14 = v8 + 7;
  v15 = (v14 + ((v154 + ((v11 + 16) & ~v11)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v16 = v15 + 8;
  v17 = v15 + 9;
  v150 = v16;
  if (v17 <= v16)
    v17 = v16;
  if (v17 <= 2)
    v17 = 2;
  v160 = v17;
  v18 = v17 + v13;
  if (v18 + 1 > (v14 & 0xFFFFFFFFFFFFFFF8) + 16)
    v19 = v18 + 1;
  else
    v19 = (v14 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= 0x10)
    v20 = 16;
  else
    v20 = v19;
  v21 = sub_2212F29B8();
  v22 = v7 | v11 | 7;
  v23 = v21;
  v24 = *(_QWORD *)(v21 - 8);
  v25 = *(unsigned int *)(v24 + 84);
  v26 = *(unsigned __int8 *)(v24 + 80);
  v27 = v22 | v26;
  v28 = ~(v22 | v26);
  v29 = ((v22 | v26) + 32) & v28;
  v30 = v20 + 1;
  v31 = (v20 + 1 + v22) & ~v22;
  v32 = ~v26;
  v168 = *(_QWORD *)(v24 + 64);
  if (v25 >= 0x80000001)
  {
    v155 = v11;
    v140 = v5;
    v143 = v9;
    v151 = v14;
    v144 = *(_QWORD *)(v21 - 8);
    v161 = (v20 + 1 + v22) & ~v22;
    v163 = ((v22 | v26) + 32) & ~(v22 | v26);
    v166 = a1;
    v34 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    v35 = (_QWORD *)(((unint64_t)v34 + v27 + 16) & v28);
    v36 = v20 + 8;
    v37 = (v20 + 8 + (((unint64_t)v35 + v22 + v30) & v169)) & 0xFFFFFFFFFFFFFFF8;
    v137 = v20;
    v38 = v26 + 16;
    v164 = ~v26;
    v162 = *(_DWORD *)(v24 + 84);
    v39 = v21;
    __n = v30;
    v40 = v26;
    v41 = v22;
    v134 = ~(v22 | v26);
    if (__swift_getEnumTagSinglePayload((v26 + 16 + v37) & v32, v25, v21) <= 1)
    {
      v147 = v40;
      v148 = v41;
      v149 = v39;
      v33 = a2[1];
      v24 = v144;
      v20 = v137;
      v5 = v140;
      v28 = v134;
LABEL_16:
      v42 = a2;
      *v166 = *a2;
      v166[1] = v33;
      v43 = (_QWORD *)(((unint64_t)v166 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v43 = *v34;
      v43[1] = v34[1];
      v44 = (_QWORD *)(((unint64_t)v43 + v27 + 16) & v28);
      v45 = *((unsigned __int8 *)v35 + v20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v46 = v35;
      if (v45 >= 3)
      {
        if (v20 <= 3)
          v47 = v20;
        else
          v47 = 4;
        __asm { BR              X11 }
      }
      v51 = ~v7;
      v156 = ~v155;
      if (v45 == 2)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v165 + 16))(v44, v35, v5);
        *(_OWORD *)(((unint64_t)v44 + v151) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v35 + v151) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v44 + v20) = 2;
        v57 = v169;
      }
      else
      {
        if (v45 == 1)
        {
          *v44 = *v35;
          v44[1] = v35[1];
          v52 = ((unint64_t)v44 + v158) & v51;
          v145 = v35;
          v135 = v51;
          v53 = ((unint64_t)v35 + v158) & v51;
          v54 = *(void (**)(unint64_t, unint64_t, uint64_t))(v165 + 16);
          swift_bridgeObjectRetain();
          v55 = v5;
          v141 = v54;
          v54(v52, v53, v5);
          v56 = v160;
          v57 = v169;
          v58 = (_WORD *)((v159 + v52) & v169);
          v59 = (_WORD *)((v159 + v53) & v169);
          switch(*((_BYTE *)v59 + v160))
          {
            case 0:
              v63 = 0;
              *v58 = *v59;
              break;
            case 1:
              *(_BYTE *)v58 = *(_BYTE *)v59;
              v63 = 1;
              break;
            case 2:
              *(_QWORD *)v58 = *(_QWORD *)v59;
              *(_QWORD *)(((v159 + v52) & v169) + 8) = *(_QWORD *)(((v159 + v53) & v169) + 8);
              v64 = ((unint64_t)v58 + v152) & v156;
              v65 = ((unint64_t)v59 + v152) & v156;
              v66 = v20;
              v67 = *(void (**)(unint64_t, unint64_t, uint64_t))(v153 + 16);
              v68 = v58;
              swift_bridgeObjectRetain();
              v67(v64, v65, v143);
              v20 = v66;
              v69 = (v154 + v64) & v135;
              v70 = (v154 + v65) & v135;
              v141(v69, v70, v55);
              v58 = v68;
              v56 = v160;
              *(_QWORD *)((v151 + v69) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v151 + v70) & 0xFFFFFFFFFFFFF8);
              v5 = v55;
              v57 = v169;
              *((_BYTE *)v58 + v150) = *((_BYTE *)v59 + v150);
              v63 = 2;
              break;
            case 3:
              *(_QWORD *)v58 = *(_QWORD *)v59;
              *(_QWORD *)(((v159 + v52) & v169) + 8) = *(_QWORD *)(((v159 + v53) & v169) + 8);
              v71 = ((unint64_t)v58 + v152) & v156;
              v72 = ((unint64_t)v59 + v152) & v156;
              v73 = v20;
              v74 = *(void (**)(unint64_t, unint64_t, uint64_t))(v153 + 16);
              v138 = v58;
              swift_bridgeObjectRetain();
              v74(v71, v72, v143);
              v20 = v73;
              v75 = (v154 + v71) & v135;
              v76 = (v154 + v72) & v135;
              v141(v75, v76, v5);
              v58 = v138;
              v56 = v160;
              *(_QWORD *)((v151 + v75) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v151 + v76) & 0xFFFFFFFFFFFFF8);
              v63 = 3;
              break;
            default:
              if (v160 <= 3)
                v60 = v160;
              else
                v60 = 4;
              __asm { BR              X12 }
              return result;
          }
          v61 = v148;
          v62 = __n;
          *((_BYTE *)v58 + v56) = v63;
          *((_BYTE *)v44 + v20) = 1;
          v51 = v135;
          v46 = v145;
LABEL_43:
          v77 = (_QWORD *)(((unint64_t)v44 + v61 + v62) & v57);
          v78 = (_QWORD *)(((unint64_t)v46 + v61 + v62) & v57);
          v79 = *((unsigned __int8 *)v78 + v20);
          if (v79 > 2)
          {
            memcpy(v77, (const void *)(((unint64_t)v46 + v61 + v62) & v57), v62);
          }
          else
          {
            if (v79 != 2)
            {
              a2 = v42;
              if (v79 == 1)
              {
                v146 = v24;
                *v77 = *v78;
                v77[1] = v78[1];
                v80 = ((unint64_t)v77 + v158) & v51;
                v136 = v51;
                v81 = ((unint64_t)v78 + v158) & v51;
                v82 = v57;
                v83 = *(void (**)(unint64_t, unint64_t, uint64_t))(v165 + 16);
                swift_bridgeObjectRetain();
                v142 = v5;
                v83(v80, v81, v5);
                v84 = v160;
                v85 = (v159 + v80) & v82;
                v86 = (v159 + v81) & v82;
                v87 = v168;
                switch(*(_BYTE *)(v86 + v160))
                {
                  case 0:
                    v122 = 0;
                    *(_WORD *)v85 = *(_WORD *)v86;
                    break;
                  case 1:
                    *(_BYTE *)v85 = *(_BYTE *)v86;
                    v122 = 1;
                    break;
                  case 2:
                    *(_QWORD *)v85 = *(_QWORD *)v86;
                    *(_QWORD *)(v85 + 8) = *(_QWORD *)(v86 + 8);
                    v123 = (v152 + v85) & v156;
                    v124 = (v152 + v86) & v156;
                    v139 = v20;
                    v125 = *(void (**)(unint64_t, unint64_t, uint64_t))(v153 + 16);
                    swift_bridgeObjectRetain();
                    v125(v123, v124, v143);
                    v20 = v139;
                    v126 = (v154 + v123) & v136;
                    v127 = (v154 + v124) & v136;
                    v83(v126, v127, v142);
                    v84 = v160;
                    *(_QWORD *)((v151 + v126) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v151 + v127) & 0xFFFFFFFFFFFFF8);
                    *(_BYTE *)(v85 + v150) = *(_BYTE *)(v86 + v150);
                    v122 = 2;
                    break;
                  case 3:
                    *(_QWORD *)v85 = *(_QWORD *)v86;
                    *(_QWORD *)(v85 + 8) = *(_QWORD *)(v86 + 8);
                    v128 = (v152 + v85) & v156;
                    v129 = (v152 + v86) & v156;
                    v130 = v20;
                    v131 = *(void (**)(unint64_t, unint64_t, uint64_t))(v153 + 16);
                    swift_bridgeObjectRetain();
                    v131(v128, v129, v143);
                    v20 = v130;
                    v132 = (v154 + v128) & v136;
                    v133 = (v154 + v129) & v136;
                    v83(v132, v133, v142);
                    v84 = v160;
                    *(_QWORD *)((v151 + v132) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v151 + v133) & 0xFFFFFFFFFFFFF8);
                    v122 = 3;
                    break;
                  default:
                    if (v160 <= 3)
                      v88 = v160;
                    else
                      v88 = 4;
                    __asm { BR              X12 }
                    return result;
                }
                v89 = v164;
                v24 = v146;
                v90 = v147;
                *(_BYTE *)(v85 + v84) = v122;
                *((_BYTE *)v77 + v20) = 1;
                goto LABEL_56;
              }
              v87 = v168;
              *v77 = *v78;
              v77[1] = v78[1];
              *((_BYTE *)v77 + v20) = 0;
              swift_bridgeObjectRetain();
LABEL_55:
              v89 = v164;
              v90 = v147;
LABEL_56:
              v91 = v20 + 8;
              v92 = (_QWORD *)(((unint64_t)v77 + v91) & 0xFFFFFFFFFFFFFFF8);
              v93 = (_QWORD *)(((unint64_t)v78 + v91) & 0xFFFFFFFFFFFFFFF8);
              v94 = v93[1];
              *v92 = *v93;
              v92[1] = v94;
              v95 = v90 + 16;
              v96 = (void *)(((unint64_t)v92 + v90 + 16) & v89);
              v97 = v89;
              v98 = (const void *)(((unint64_t)v93 + v90 + 16) & v89);
              swift_retain();
              if (__swift_getEnumTagSinglePayload((uint64_t)v98, 1, v149))
              {
                if (v162)
                  v99 = v87;
                else
                  v99 = v87 + 1;
                memcpy(v96, v98, v99);
                v100 = v162;
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v96, v98, v149);
                __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v149);
                v100 = v162;
                if (v162)
                  v99 = v87;
                else
                  v99 = v87 + 1;
              }
              a1 = v166;
              v48 = a3;
              *(_QWORD *)(((unint64_t)v96 + v99 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v98
                                                                                               + v99
                                                                                               + 7) & 0xFFFFFFFFFFFFF8);
              v101 = 7;
              if (!v100)
                v101 = 8;
              v50 = v163
                  + ((v101 + v87 + ((v95 + ((v91 + v161) & 0xFFFFFFFFFFFFFFF8)) & v97)) & 0xFFFFFFFFFFFFFFF8)
                  + 8;
              goto LABEL_67;
            }
            (*(void (**)(_QWORD *, unint64_t, uint64_t))(v165 + 16))(v77, ((unint64_t)v46 + v61 + v62) & v57, v5);
            *(_OWORD *)(((unint64_t)v77 + v151) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v78 + v151) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v77 + v20) = 2;
          }
          a2 = v42;
          v87 = v168;
          goto LABEL_55;
        }
        v57 = v169;
        *v44 = *v35;
        v44[1] = v35[1];
        *((_BYTE *)v44 + v20) = 0;
        swift_bridgeObjectRetain();
      }
      v61 = v148;
      v62 = __n;
      goto LABEL_43;
    }
    a1 = v166;
    v48 = a3;
    v29 = v163;
    v32 = v164;
    LODWORD(v25) = v162;
    v31 = v161;
  }
  else
  {
    v33 = a2[1];
    if (v33 >= 0xFFFFFFFF)
    {
      v155 = v11;
      __n = v20 + 1;
      v147 = *(unsigned __int8 *)(v24 + 80);
      v148 = v7 | v11 | 7;
      v143 = v9;
      v151 = v14;
      v149 = v23;
      v161 = (v20 + 1 + v22) & ~v22;
      v163 = ((v22 | v26) + 32) & ~(v22 | v26);
      v164 = ~v26;
      v162 = *(_DWORD *)(v24 + 84);
      v166 = a1;
      v34 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      v35 = (_QWORD *)(((unint64_t)v34 + v27 + 16) & v28);
      goto LABEL_16;
    }
    v36 = v20 + 8;
    v38 = v26 + 16;
    v48 = a3;
  }
  v49 = 7;
  if (!(_DWORD)v25)
    v49 = 8;
  v50 = v29 + ((v49 + v168 + ((v38 + ((v36 + v31) & 0xFFFFFFFFFFFFFFF8)) & v32)) & 0xFFFFFFFFFFFFFFF8) + 8;
  memcpy(a1, a2, v50);
LABEL_67:
  v102 = *(_QWORD *)(*(_QWORD *)(v48 + 16) - 8);
  v103 = *(unsigned __int8 *)(v102 + 80);
  v104 = ((unint64_t)a1 + v50 + v103) & ~v103;
  v105 = ((unint64_t)a2 + v50 + v103) & ~v103;
  (*(void (**)(unint64_t, unint64_t))(v102 + 16))(v104, v105);
  v106 = *(_QWORD *)(v102 + 64);
  v107 = sub_2212F33F0();
  v108 = *(_QWORD *)(v107 - 8);
  v109 = *(_DWORD *)(v108 + 80) & 0xF8 | 7;
  v110 = (_QWORD *)((v106 + v109 + v104) & ~v109);
  v111 = (_QWORD *)((v106 + v109 + v105) & ~v109);
  if (*(_QWORD *)(v108 + 64) <= 8uLL)
    v112 = 8;
  else
    v112 = *(_QWORD *)(v108 + 64);
  v113 = *((unsigned __int8 *)v111 + v112);
  if (v113 >= 2)
  {
    if (v112 <= 3)
      v114 = v112;
    else
      v114 = 4;
    __asm { BR              X13 }
  }
  if (v113 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v108 + 16))(v110, v111, v107);
    v115 = 1;
  }
  else
  {
    *v110 = *v111;
    swift_retain();
    v115 = 0;
  }
  *((_BYTE *)v110 + v112) = v115;
  v116 = v112 + 8;
  v117 = ((unint64_t)v110 + v112 + 8) & 0xFFFFFFFFFFFFFFF8;
  v118 = ((unint64_t)v111 + v116) & 0xFFFFFFFFFFFFFFF8;
  v119 = *(_QWORD *)v118;
  v120 = *(_BYTE *)(v118 + 8);
  sub_221017C08(*(_QWORD *)v118, v120);
  *(_QWORD *)v117 = v119;
  *(_BYTE *)(v117 + 8) = v120;
  return a1;
}

_QWORD *sub_2210900C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  _QWORD *v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  size_t v64;
  void *v65;
  const void *v66;
  size_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  void (*v73)(unint64_t, unint64_t, uint64_t);
  _WORD *v74;
  _WORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  void (*v80)(unint64_t, uint64_t);
  unint64_t v81;
  unsigned int v82;
  uint64_t v83;
  void (*v84)(unint64_t, uint64_t);
  unint64_t v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  void (*v96)(unint64_t, unint64_t, uint64_t);
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  void (*v105)(unint64_t, unint64_t, uint64_t);
  _WORD *v106;
  _WORD *v107;
  uint64_t v108;
  unint64_t v109;
  unsigned int v110;
  unint64_t v111;
  unsigned int v112;
  unint64_t v113;
  unsigned int v114;
  uint64_t v115;
  unint64_t v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  void (*v122)(unint64_t, unint64_t, uint64_t);
  _WORD *v123;
  _WORD *v124;
  uint64_t v125;
  char v126;
  unint64_t v127;
  unint64_t v128;
  void (*v129)(unint64_t, unint64_t, uint64_t);
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  void (*v134)(unint64_t, unint64_t, uint64_t);
  unint64_t v135;
  unint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  unsigned int v139;
  unsigned int v140;
  void (*v141)(unint64_t, uint64_t);
  unint64_t v142;
  unsigned int v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  void (*v147)(unint64_t, unint64_t, uint64_t);
  _WORD *v148;
  _WORD *v149;
  uint64_t v150;
  void (*v151)(unint64_t, uint64_t);
  unint64_t v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  unint64_t v157;
  unint64_t v158;
  void (*v159)(unint64_t, unint64_t, uint64_t);
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  void (*v164)(unint64_t, unint64_t, uint64_t);
  unint64_t v165;
  unint64_t v166;
  _QWORD *v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  const void *v172;
  size_t v173;
  size_t v174;
  _QWORD *v175;
  size_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  char v180;
  unint64_t v181;
  unint64_t v182;
  void (*v183)(unint64_t, unint64_t, uint64_t);
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  void (*v188)(unint64_t, unint64_t, uint64_t);
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  unint64_t v192;
  unsigned int v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t v196;
  void (*v197)(unint64_t, unint64_t, uint64_t);
  _WORD *v198;
  uint64_t v199;
  char v200;
  unint64_t v201;
  unint64_t v202;
  void (*v203)(unint64_t, unint64_t, uint64_t);
  unint64_t v204;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  void (*v208)(unint64_t, unint64_t, uint64_t);
  unint64_t v209;
  unint64_t v210;
  _QWORD *v211;
  _QWORD *v212;
  uint64_t v213;
  void *v214;
  const void *v215;
  int v216;
  int v217;
  size_t v218;
  size_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unsigned int v235;
  uint64_t v236;
  unsigned int v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  unint64_t v241;
  uint64_t v242;
  char v243;
  uint64_t v244;
  char v245;
  _QWORD *result;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  unint64_t v250;
  unsigned int EnumTagSinglePayload;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD *v268;
  uint64_t v269;
  void (*v270)(unint64_t, unint64_t, uint64_t);
  uint64_t v271;
  uint64_t v272;
  size_t __n;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  unint64_t v278;
  void (*v279)(unint64_t, uint64_t);
  _QWORD *v280;
  size_t v281;
  uint64_t v282;
  uint64_t v283;

  v283 = sub_2212F5124();
  v5 = *(_QWORD *)(v283 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v267 = ~v6;
  v263 = v6 + 16;
  v276 = v5;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = sub_2212F5058();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v6 | v10 | 7;
  v12 = ~v11;
  v264 = v11 + v7;
  v254 = ~v10;
  v253 = v10 + 16;
  v255 = v9;
  v256 = v8;
  v257 = *(_QWORD *)(v9 + 64) + v6;
  v13 = v7 + 7;
  v14 = (v7 + 7 + ((v257 + ((v10 + 16) & ~v10)) & ~v6)) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;
  v16 = v14 + 9;
  v252 = v15;
  if (v16 <= v15)
    v16 = v15;
  if (v16 <= 2)
    v16 = 2;
  v278 = v16;
  v17 = v16 + ((v11 + v7 + ((v6 + 16) & ~v6)) & ~v11);
  v262 = v7 + 7;
  if (v17 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
    v18 = v17 + 1;
  else
    v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 <= 0x10)
    v19 = 16;
  else
    v19 = v18;
  v20 = sub_2212F29B8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_DWORD *)(v21 + 84);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v24 = v11 | v23;
  v25 = ~(v11 | v23);
  v26 = ((v11 | v23) + 32) & v25;
  v27 = v19 + 1;
  v28 = (v19 + 1 + v11) & ~v11;
  v29 = ~v23;
  v30 = *(_QWORD *)(v21 + 64);
  v280 = a1;
  v281 = v30;
  v277 = v28;
  v274 = v20;
  v282 = v19;
  v272 = ~v11;
  __n = v19 + 1;
  v275 = v11;
  if (v22 < 0x80000001)
  {
    v31 = a2;
    v32 = a2[1];
    v33 = a1;
    if (a1[1] > 0xFFFFFFFEuLL)
    {
      v265 = ~v23;
      v266 = v25;
      v34 = *(unsigned __int8 *)(v21 + 80);
      v258 = *(_QWORD *)(v20 - 8);
      v269 = v26;
      v271 = a3;
      if (v32 >= 0xFFFFFFFF)
      {
        v35 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
        v36 = (_QWORD *)(((unint64_t)v35 + v24 + 16) & v25);
        goto LABEL_17;
      }
      goto LABEL_31;
    }
    if (v32 >= 0xFFFFFFFF)
    {
      v258 = *(_QWORD *)(v20 - 8);
      v259 = *(unsigned __int8 *)(v21 + 80);
      v269 = v26;
      v271 = a3;
      v54 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      v268 = (_QWORD *)(((unint64_t)v54 + v24 + 16) & v25);
      goto LABEL_26;
    }
    v39 = v19 + 8;
    v41 = v23 + 16;
    goto LABEL_38;
  }
  v37 = v20;
  v258 = *(_QWORD *)(v20 - 8);
  v259 = *(unsigned __int8 *)(v21 + 80);
  v269 = ((v11 | v23) + 32) & ~(v11 | v23);
  v271 = a3;
  v38 = *(unsigned int *)(v21 + 84);
  v39 = v19 + 8;
  v40 = (v39 + (((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v24 + 16) & v25) + v11 + v27) & v12)) & 0xFFFFFFFFFFFFFFF8;
  v41 = v23 + 16;
  v42 = v27;
  v43 = ~(v11 | v23);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v23 + 16 + v40) & v29, v38, v20);
  v250 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v265 = v29;
  v266 = v43;
  v268 = (_QWORD *)((v250 + v24 + 16) & v43);
  v44 = (v41 + ((v39 + (((unint64_t)v268 + v11 + v42) & v12)) & 0xFFFFFFFFFFFFFFF8)) & v29;
  v22 = v38;
  v45 = __swift_getEnumTagSinglePayload(v44, v38, v37);
  if (EnumTagSinglePayload >= 2)
  {
    v33 = v280;
    v30 = v281;
    v25 = v43;
    v54 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    if (v45 < 2)
    {
LABEL_26:
      *v33 = *a2;
      v33[1] = a2[1];
      v55 = (_QWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v55 = *v54;
      v55[1] = v54[1];
      v56 = (_QWORD *)(((unint64_t)v55 + v24 + 16) & v25);
      v57 = v282;
      v58 = *((unsigned __int8 *)v268 + v282);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v58 >= 3)
      {
        if (v282 <= 3)
          v59 = v282;
        else
          v59 = 4;
        __asm { BR              X11 }
      }
      v26 = v269;
      if (v58 == 2)
      {
        v77 = v29;
        v78 = v268;
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v276 + 16))(v56, v268, v283);
        *(_OWORD *)(((unint64_t)v56 + v262) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v268 + v262) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v56 + v282) = 2;
      }
      else
      {
        if (v58 == 1)
        {
          v247 = v22;
          v70 = v269;
          *v56 = *v268;
          v56[1] = v268[1];
          v71 = ((unint64_t)v56 + v263) & v267;
          v72 = ((unint64_t)v268 + v263) & v267;
          v73 = *(void (**)(unint64_t, unint64_t, uint64_t))(v276 + 16);
          swift_bridgeObjectRetain();
          v73(v71, v72, v283);
          v74 = (_WORD *)((v264 + v71) & v272);
          v75 = (_WORD *)((v264 + v72) & v272);
          switch(*((_BYTE *)v75 + v278))
          {
            case 0:
              v89 = 0;
              *v74 = *v75;
              break;
            case 1:
              *(_BYTE *)v74 = *(_BYTE *)v75;
              v89 = 1;
              break;
            case 2:
              *(_QWORD *)v74 = *(_QWORD *)v75;
              *(_QWORD *)(((v264 + v71) & v272) + 8) = *(_QWORD *)(((v264 + v72) & v272) + 8);
              v90 = ((unint64_t)v74 + v253) & v254;
              v91 = ((unint64_t)v75 + v253) & v254;
              v270 = *(void (**)(unint64_t, unint64_t, uint64_t))(v255 + 16);
              swift_bridgeObjectRetain();
              v270(v90, v91, v256);
              v92 = (v257 + v90) & v267;
              v93 = (v257 + v91) & v267;
              v73(v92, v93, v283);
              *(_QWORD *)((v262 + v92) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v262 + v93) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v74 + v252) = *((_BYTE *)v75 + v252);
              v89 = 2;
              break;
            case 3:
              *(_QWORD *)v74 = *(_QWORD *)v75;
              *(_QWORD *)(((v264 + v71) & v272) + 8) = *(_QWORD *)(((v264 + v72) & v272) + 8);
              v94 = ((unint64_t)v74 + v253) & v254;
              v95 = ((unint64_t)v75 + v253) & v254;
              v96 = *(void (**)(unint64_t, unint64_t, uint64_t))(v255 + 16);
              swift_bridgeObjectRetain();
              v96(v94, v95, v256);
              v97 = (v257 + v94) & v267;
              v98 = (v257 + v95) & v267;
              v73(v97, v98, v283);
              *(_QWORD *)((v262 + v97) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v262 + v98) & 0xFFFFFFFFFFFFF8);
              v89 = 3;
              break;
            default:
              if (v278 <= 3)
                v76 = v278;
              else
                v76 = 4;
              __asm { BR              X12 }
              return result;
          }
          v26 = v70;
          v79 = v259;
          v77 = v29;
          *((_BYTE *)v74 + v278) = v89;
          *((_BYTE *)v56 + v282) = 1;
          v22 = v247;
          v78 = v268;
          goto LABEL_78;
        }
        v77 = v29;
        v78 = v268;
        *v56 = *v268;
        v56[1] = v268[1];
        *((_BYTE *)v56 + v282) = 0;
        swift_bridgeObjectRetain();
      }
      v79 = v259;
LABEL_78:
      v99 = (_QWORD *)(((unint64_t)v56 + v275 + __n) & v272);
      v100 = (_QWORD *)(((unint64_t)v78 + v275 + __n) & v272);
      v101 = *((unsigned __int8 *)v100 + v282);
      if (v101 > 2)
      {
        memcpy(v99, (const void *)(((unint64_t)v78 + v275 + __n) & v272), __n);
      }
      else if (v101 == 2)
      {
        (*(void (**)(_QWORD *, unint64_t, uint64_t))(v276 + 16))(v99, ((unint64_t)v78 + v275 + __n) & v272, v283);
        *(_OWORD *)(((unint64_t)v99 + v262) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v100 + v262) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v99 + v282) = 2;
      }
      else if (v101 == 1)
      {
        v260 = v79;
        v248 = v22;
        v102 = v26;
        *v99 = *v100;
        v99[1] = *(_QWORD *)((((unint64_t)v78 + v275 + __n) & v272) + 8);
        v103 = ((unint64_t)v99 + v263) & v267;
        v104 = ((unint64_t)v100 + v263) & v267;
        v105 = *(void (**)(unint64_t, unint64_t, uint64_t))(v276 + 16);
        swift_bridgeObjectRetain();
        v105(v103, v104, v283);
        v106 = (_WORD *)((v264 + v103) & v272);
        v107 = (_WORD *)((v264 + v104) & v272);
        switch(*((_BYTE *)v107 + v278))
        {
          case 0:
            v156 = 0;
            *v106 = *v107;
            break;
          case 1:
            *(_BYTE *)v106 = *(_BYTE *)v107;
            v156 = 1;
            break;
          case 2:
            *(_QWORD *)v106 = *(_QWORD *)v107;
            *(_QWORD *)(((v264 + v103) & v272) + 8) = *(_QWORD *)(((v264 + v104) & v272) + 8);
            v157 = ((unint64_t)v106 + v253) & v254;
            v158 = ((unint64_t)v107 + v253) & v254;
            v159 = *(void (**)(unint64_t, unint64_t, uint64_t))(v255 + 16);
            swift_bridgeObjectRetain();
            v159(v157, v158, v256);
            v160 = (v257 + v157) & v267;
            v161 = (v257 + v158) & v267;
            v105(v160, v161, v283);
            *(_QWORD *)((v262 + v160) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v262 + v161) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v106 + v252) = *((_BYTE *)v107 + v252);
            v156 = 2;
            break;
          case 3:
            *(_QWORD *)v106 = *(_QWORD *)v107;
            *(_QWORD *)(((v264 + v103) & v272) + 8) = *(_QWORD *)(((v264 + v104) & v272) + 8);
            v162 = ((unint64_t)v106 + v253) & v254;
            v163 = ((unint64_t)v107 + v253) & v254;
            v164 = *(void (**)(unint64_t, unint64_t, uint64_t))(v255 + 16);
            swift_bridgeObjectRetain();
            v164(v162, v163, v256);
            v165 = (v257 + v162) & v267;
            v166 = (v257 + v163) & v267;
            v105(v165, v166, v283);
            *(_QWORD *)((v262 + v165) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v262 + v166) & 0xFFFFFFFFFFFFF8);
            v156 = 3;
            break;
          default:
            if (v278 <= 3)
              v108 = v278;
            else
              v108 = 4;
            __asm { BR              X12 }
            return result;
        }
        v26 = v102;
        v79 = v260;
        *((_BYTE *)v106 + v278) = v156;
        v57 = v282;
        *((_BYTE *)v99 + v282) = 1;
        v22 = v248;
      }
      else
      {
        *v99 = *v100;
        v99[1] = *(_QWORD *)((((unint64_t)v78 + v275 + __n) & v272) + 8);
        *((_BYTE *)v99 + v282) = 0;
        swift_bridgeObjectRetain();
      }
      v39 = v57 + 8;
      v167 = (_QWORD *)(((unint64_t)v99 + v57 + 8) & 0xFFFFFFFFFFFFFFF8);
      v168 = (_QWORD *)(((unint64_t)v100 + v57 + 8) & 0xFFFFFFFFFFFFFFF8);
      v169 = v168[1];
      *v167 = *v168;
      v167[1] = v169;
      v41 = v79 + 16;
      v170 = v77;
      v171 = (void *)(((unint64_t)v167 + v41) & v77);
      v172 = (const void *)(((unint64_t)v168 + v41) & v170);
      swift_retain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v172, 1, v274))
      {
        v173 = v281;
        v174 = v281;
        if (!v22)
          v173 = v281 + 1;
        memcpy(v171, v172, v173);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v258 + 16))(v171, v172, v274);
        __swift_storeEnumTagSinglePayload((uint64_t)v171, 0, 1, v274);
        v173 = v281;
        v174 = v281;
        if (!v22)
          v173 = v281 + 1;
      }
      v33 = v280;
      v175 = a2;
      *(_QWORD *)(((unint64_t)v171 + v173 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v172
                                                                                         + v173
                                                                                         + 7) & 0xFFFFFFFFFFFFF8);
      v176 = v174;
      v29 = v170;
      v177 = v277;
      a3 = v271;
      goto LABEL_224;
    }
    v31 = a2;
    v26 = v269;
    a3 = v271;
    v28 = v277;
LABEL_38:
    v63 = 7;
    if (!v22)
      v63 = 8;
    v64 = v26 + ((v63 + v30 + ((v41 + ((v39 + v28) & 0xFFFFFFFFFFFFFFF8)) & v29)) & 0xFFFFFFFFFFFFFFF8) + 8;
    v65 = v33;
    v66 = v31;
    v67 = v30;
    v68 = v28;
    goto LABEL_174;
  }
  v33 = v280;
  v34 = v259;
  v36 = (_QWORD *)((v250 + v24 + 16) & v43);
  v35 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (v45 >= 2)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v60 = ((((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8) + v24 + 16) & v266;
    v61 = *(unsigned __int8 *)(v60 + v282);
    if (v61 >= 3)
    {
      if (v282 <= 3)
        v62 = v282;
      else
        v62 = 4;
      __asm { BR              X12 }
    }
    v69 = v278;
    if (v61 == 2)
    {
      (*(void (**)(unint64_t, uint64_t))(v276 + 8))(v60, v283);
    }
    else if (v61 == 1)
    {
      swift_bridgeObjectRelease();
      v80 = *(void (**)(unint64_t, uint64_t))(v276 + 8);
      v80((v263 + v60) & v267, v283);
      v81 = (v264 + ((v263 + v60) & v267)) & v272;
      v82 = *(unsigned __int8 *)(v81 + v278);
      if (v82 >= 4)
      {
        if (v278 <= 3)
          v83 = v278;
        else
          v83 = 4;
        __asm { BR              X12 }
      }
      if (v82 >= 2)
      {
        swift_bridgeObjectRelease();
        v109 = (v253 + v81) & v254;
        (*(void (**)(unint64_t, uint64_t))(v255 + 8))(v109, v256);
        v80((v257 + v109) & v267, v283);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v110 = v22;
    v111 = (v60 + v275 + __n) & v272;
    v112 = *(unsigned __int8 *)(v111 + v282);
    a3 = v271;
    v29 = v265;
    if (v112 <= 2)
    {
      if (v112 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v276 + 8))(v111, v283);
      }
      else if (v112 == 1)
      {
        swift_bridgeObjectRelease();
        v279 = *(void (**)(unint64_t, uint64_t))(v276 + 8);
        v279((v263 + v111) & v267, v283);
        v113 = (v264 + ((v263 + v111) & v267)) & v272;
        v114 = *(unsigned __int8 *)(v113 + v69);
        if (v114 >= 4)
        {
          if (v69 <= 3)
            v115 = v69;
          else
            v115 = 4;
          __asm { BR              X12 }
        }
        if (v114 >= 2)
        {
          swift_bridgeObjectRelease();
          v178 = (v253 + v113) & v254;
          (*(void (**)(unint64_t, uint64_t))(v255 + 8))(v178, v256);
          v279((v257 + v178) & v267, v283);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v39 = v282 + 8;
    swift_release();
    v41 = v34 + 16;
    if (!__swift_getEnumTagSinglePayload((v41 + ((v282 + 8 + v111) & 0xFFFFFFFFFFFFFFF8)) & v265, 1, v274))(*(void (**)(unint64_t, uint64_t))(v258 + 8))((v41 + ((v282 + 8 + v111) & 0xFFFFFFFFFFFFFFF8)) & v265, v274);
    v68 = v277;
    v22 = v110;
    v179 = 7;
    if (!v110)
      v179 = 8;
    v67 = v281;
    v26 = v269;
    v64 = v269 + ((v179 + v281 + ((v41 + ((v39 + v277) & 0xFFFFFFFFFFFFFFF8)) & v265)) & 0xFFFFFFFFFFFFFFF8) + 8;
    v65 = v33;
    v31 = a2;
    v66 = a2;
LABEL_174:
    memcpy(v65, v66, v64);
    v177 = v68;
    v176 = v67;
    goto LABEL_225;
  }
LABEL_17:
  *v33 = *a2;
  v33[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = (_QWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v46 = *v35;
  v46[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = (_QWORD *)(((unint64_t)v46 + v24 + 16) & v266);
  v48 = v282;
  v49 = v278;
  v50 = v272;
  v51 = v275;
  if (v47 == v36)
    goto LABEL_124;
  v52 = *((unsigned __int8 *)v47 + v282);
  if (v52 >= 3)
  {
    if (v282 <= 3)
      v53 = v282;
    else
      v53 = 4;
    __asm { BR              X12 }
  }
  if (v52 == 2)
  {
    (*(void (**)(_QWORD *, uint64_t))(v276 + 8))(v47, v283);
  }
  else if (v52 == 1)
  {
    swift_bridgeObjectRelease();
    v84 = *(void (**)(unint64_t, uint64_t))(v276 + 8);
    v84(((unint64_t)v47 + v263) & v267, v283);
    v85 = (v264 + (((unint64_t)v47 + v263) & v267)) & v272;
    v86 = *(unsigned __int8 *)(v85 + v278);
    if (v86 >= 4)
    {
      if (v278 <= 3)
        v87 = v278;
      else
        v87 = 4;
      __asm { BR              X12 }
    }
    v88 = v34;
    if (v86 < 2)
      goto LABEL_104;
    swift_bridgeObjectRelease();
    v116 = (v253 + v85) & v254;
    (*(void (**)(unint64_t, uint64_t))(v255 + 8))(v116, v256);
    v84((v257 + v116) & v267, v283);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v88 = v34;
LABEL_104:
  v117 = *((unsigned __int8 *)v36 + v282);
  if (v117 >= 3)
  {
    if (v282 <= 3)
      v118 = v282;
    else
      v118 = 4;
    __asm { BR              X12 }
  }
  if (v117 == 2)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v276 + 16))(v47, v36, v283);
    *(_OWORD *)(((unint64_t)v47 + v262) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v36 + v262) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)v47 + v282) = 2;
  }
  else if (v117 == 1)
  {
    v119 = v88;
    *v47 = *v36;
    v47[1] = v36[1];
    v120 = ((unint64_t)v47 + v263) & v267;
    v121 = ((unint64_t)v36 + v263) & v267;
    v122 = *(void (**)(unint64_t, unint64_t, uint64_t))(v276 + 16);
    swift_bridgeObjectRetain();
    v122(v120, v121, v283);
    v123 = (_WORD *)((v264 + v120) & v272);
    v124 = (_WORD *)((v264 + v121) & v272);
    switch(*((_BYTE *)v124 + v278))
    {
      case 0:
        v126 = 0;
        *v123 = *v124;
        break;
      case 1:
        *(_BYTE *)v123 = *(_BYTE *)v124;
        v126 = 1;
        break;
      case 2:
        *(_QWORD *)v123 = *(_QWORD *)v124;
        *(_QWORD *)(((v264 + v120) & v272) + 8) = *(_QWORD *)(((v264 + v121) & v272) + 8);
        v127 = ((unint64_t)v123 + v253) & v254;
        v128 = ((unint64_t)v124 + v253) & v254;
        v129 = *(void (**)(unint64_t, unint64_t, uint64_t))(v255 + 16);
        swift_bridgeObjectRetain();
        v129(v127, v128, v256);
        v130 = (v257 + v127) & v267;
        v131 = (v257 + v128) & v267;
        v122(v130, v131, v283);
        *(_QWORD *)((v262 + v130) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v262 + v131) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v123 + v252) = *((_BYTE *)v124 + v252);
        v126 = 2;
        break;
      case 3:
        *(_QWORD *)v123 = *(_QWORD *)v124;
        *(_QWORD *)(((v264 + v120) & v272) + 8) = *(_QWORD *)(((v264 + v121) & v272) + 8);
        v132 = ((unint64_t)v123 + v253) & v254;
        v133 = ((unint64_t)v124 + v253) & v254;
        v134 = *(void (**)(unint64_t, unint64_t, uint64_t))(v255 + 16);
        swift_bridgeObjectRetain();
        v134(v132, v133, v256);
        v135 = (v257 + v132) & v267;
        v136 = (v257 + v133) & v267;
        v122(v135, v136, v283);
        *(_QWORD *)((v262 + v135) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v262 + v136) & 0xFFFFFFFFFFFFF8);
        v126 = 3;
        break;
      default:
        if (v278 <= 3)
          v125 = v278;
        else
          v125 = 4;
        __asm { BR              X12 }
        return result;
    }
    v34 = v119;
    v49 = v278;
    *((_BYTE *)v123 + v278) = v126;
    v48 = v282;
    *((_BYTE *)v47 + v282) = 1;
    v50 = v272;
    v51 = v275;
  }
  else
  {
    *v47 = *v36;
    v47[1] = v36[1];
    *((_BYTE *)v47 + v282) = 0;
    swift_bridgeObjectRetain();
  }
LABEL_124:
  v137 = (_QWORD *)(((unint64_t)v47 + v51 + __n) & v50);
  v138 = (_QWORD *)(((unint64_t)v36 + v51 + __n) & v50);
  v139 = *((unsigned __int8 *)v137 + v48);
  v140 = *((unsigned __int8 *)v138 + v48);
  v249 = v22;
  if (v139 <= 2)
  {
    if (v140 <= 2)
    {
      if (v137 == v138)
        goto LABEL_209;
      if (v139 == 2)
      {
        (*(void (**)(_QWORD *, uint64_t))(v276 + 8))(v137, v283);
      }
      else if (v139 == 1)
      {
        swift_bridgeObjectRelease();
        v141 = *(void (**)(unint64_t, uint64_t))(v276 + 8);
        v141(((unint64_t)v137 + v263) & v267, v283);
        v142 = (v264 + (((unint64_t)v137 + v263) & v267)) & v50;
        v143 = *(unsigned __int8 *)(v142 + v49);
        if (v143 >= 4)
        {
          if (v49 <= 3)
            v144 = v49;
          else
            v144 = 4;
          __asm { BR              X12 }
        }
        v155 = v34;
        if (v143 < 2)
        {
LABEL_187:
          v193 = *((unsigned __int8 *)v138 + v48);
          if (v193 >= 3)
          {
            if (v48 <= 3)
              v194 = v48;
            else
              v194 = 4;
            __asm { BR              X12 }
          }
          if (v193 != 2)
          {
            if (v193 == 1)
            {
              *v137 = *v138;
              v137[1] = v138[1];
              v195 = ((unint64_t)v137 + v263) & v267;
              v196 = ((unint64_t)v138 + v263) & v267;
              v197 = *(void (**)(unint64_t, unint64_t, uint64_t))(v276 + 16);
              swift_bridgeObjectRetain();
              v197(v195, v196, v283);
              v148 = (_WORD *)((v264 + v195) & v50);
              v198 = (_WORD *)((v264 + v196) & v50);
              switch(*((_BYTE *)v198 + v49))
              {
                case 0:
                  v180 = 0;
                  *v148 = *v198;
                  break;
                case 1:
                  *(_BYTE *)v148 = *(_BYTE *)v198;
                  v180 = 1;
                  break;
                case 2:
                  *(_QWORD *)v148 = *(_QWORD *)v198;
                  *(_QWORD *)(((v264 + v195) & v50) + 8) = *(_QWORD *)(((v264 + v196) & v50) + 8);
                  v201 = ((unint64_t)v148 + v253) & v254;
                  v202 = ((unint64_t)v198 + v253) & v254;
                  v203 = *(void (**)(unint64_t, unint64_t, uint64_t))(v255 + 16);
                  swift_bridgeObjectRetain();
                  v203(v201, v202, v256);
                  v49 = v278;
                  v204 = (v257 + v201) & v267;
                  v205 = (v257 + v202) & v267;
                  v197(v204, v205, v283);
                  *(_QWORD *)((v262 + v204) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v262 + v205) & 0xFFFFFFFFFFFFF8);
                  *((_BYTE *)v148 + v252) = *((_BYTE *)v198 + v252);
                  v180 = 2;
                  break;
                case 3:
                  *(_QWORD *)v148 = *(_QWORD *)v198;
                  *(_QWORD *)(((v264 + v195) & v50) + 8) = *(_QWORD *)(((v264 + v196) & v50) + 8);
                  v206 = ((unint64_t)v148 + v253) & v254;
                  v207 = ((unint64_t)v198 + v253) & v254;
                  v208 = *(void (**)(unint64_t, unint64_t, uint64_t))(v255 + 16);
                  swift_bridgeObjectRetain();
                  v208(v206, v207, v256);
                  v209 = (v257 + v206) & v267;
                  v210 = (v257 + v207) & v267;
                  v197(v209, v210, v283);
                  *(_QWORD *)((v262 + v209) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v262 + v210) & 0xFFFFFFFFFFFFF8);
                  v180 = 3;
                  break;
                default:
                  if (v49 <= 3)
                    v199 = v49;
                  else
                    v199 = 4;
                  __asm { BR              X12 }
                  return result;
              }
              v34 = v155;
LABEL_207:
              *((_BYTE *)v148 + v49) = v180;
              v200 = 1;
              v48 = v282;
              goto LABEL_208;
            }
            goto LABEL_200;
          }
          goto LABEL_199;
        }
        swift_bridgeObjectRelease();
        v192 = (v253 + v142) & v254;
        (*(void (**)(unint64_t, uint64_t))(v255 + 8))(v192, v256);
        v141((v257 + v192) & v267, v283);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v155 = v34;
      goto LABEL_187;
    }
    if (v139 == 2)
    {
      (*(void (**)(_QWORD *, uint64_t))(v276 + 8))(v137, v283);
    }
    else if (v139 == 1)
    {
      swift_bridgeObjectRelease();
      v151 = *(void (**)(unint64_t, uint64_t))(v276 + 8);
      v151(((unint64_t)v137 + v263) & v267, v283);
      v152 = (v264 + (((unint64_t)v137 + v263) & v267)) & v50;
      v153 = *(unsigned __int8 *)(v152 + v49);
      if (v153 >= 4)
      {
        if (v49 <= 3)
          v154 = v49;
        else
          v154 = 4;
        __asm { BR              X12 }
      }
      if (v153 >= 2)
      {
        swift_bridgeObjectRelease();
        v191 = (v253 + v152) & v254;
        (*(void (**)(unint64_t, uint64_t))(v255 + 8))(v191, v256);
        v151((v257 + v191) & v267, v283);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_183:
    memcpy(v137, v138, __n);
    goto LABEL_209;
  }
  if (v140 > 2)
    goto LABEL_183;
  if (v140 != 2)
  {
    if (v140 == 1)
    {
      v261 = v34;
      *v137 = *v138;
      v137[1] = v138[1];
      v145 = ((unint64_t)v137 + v263) & v267;
      v146 = ((unint64_t)v138 + v263) & v267;
      v147 = *(void (**)(unint64_t, unint64_t, uint64_t))(v276 + 16);
      swift_bridgeObjectRetain();
      v147(v145, v146, v283);
      v148 = (_WORD *)((v264 + v145) & v50);
      v149 = (_WORD *)((v264 + v146) & v50);
      switch(*((_BYTE *)v149 + v49))
      {
        case 0:
          v180 = 0;
          *v148 = *v149;
          break;
        case 1:
          *(_BYTE *)v148 = *(_BYTE *)v149;
          v180 = 1;
          break;
        case 2:
          *(_QWORD *)v148 = *(_QWORD *)v149;
          *(_QWORD *)(((v264 + v145) & v50) + 8) = *(_QWORD *)(((v264 + v146) & v50) + 8);
          v181 = ((unint64_t)v148 + v253) & v254;
          v182 = ((unint64_t)v149 + v253) & v254;
          v183 = *(void (**)(unint64_t, unint64_t, uint64_t))(v255 + 16);
          swift_bridgeObjectRetain();
          v183(v181, v182, v256);
          v49 = v278;
          v184 = (v257 + v181) & v267;
          v185 = (v257 + v182) & v267;
          v147(v184, v185, v283);
          *(_QWORD *)((v262 + v184) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v262 + v185) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v148 + v252) = *((_BYTE *)v149 + v252);
          v180 = 2;
          break;
        case 3:
          *(_QWORD *)v148 = *(_QWORD *)v149;
          *(_QWORD *)(((v264 + v145) & v50) + 8) = *(_QWORD *)(((v264 + v146) & v50) + 8);
          v186 = ((unint64_t)v148 + v253) & v254;
          v187 = ((unint64_t)v149 + v253) & v254;
          v188 = *(void (**)(unint64_t, unint64_t, uint64_t))(v255 + 16);
          swift_bridgeObjectRetain();
          v188(v186, v187, v256);
          v189 = (v257 + v186) & v267;
          v190 = (v257 + v187) & v267;
          v147(v189, v190, v283);
          *(_QWORD *)((v262 + v189) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v262 + v190) & 0xFFFFFFFFFFFFF8);
          v180 = 3;
          break;
        default:
          if (v49 <= 3)
            v150 = v49;
          else
            v150 = 4;
          __asm { BR              X12 }
          return result;
      }
      v34 = v261;
      goto LABEL_207;
    }
LABEL_200:
    *v137 = *v138;
    v137[1] = v138[1];
    *((_BYTE *)v137 + v48) = 0;
    swift_bridgeObjectRetain();
    goto LABEL_209;
  }
LABEL_199:
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v276 + 16))(v137, v138, v283);
  *(_OWORD *)(((unint64_t)v137 + v262) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v138 + v262) & 0xFFFFFFFFFFFFF8);
  v200 = 2;
LABEL_208:
  *((_BYTE *)v137 + v48) = v200;
LABEL_209:
  v39 = v48 + 8;
  v211 = (_QWORD *)(((unint64_t)v137 + v48 + 8) & 0xFFFFFFFFFFFFFFF8);
  v212 = (_QWORD *)(((unint64_t)v138 + v48 + 8) & 0xFFFFFFFFFFFFFFF8);
  v213 = v212[1];
  *v211 = *v212;
  v211[1] = v213;
  swift_retain();
  swift_release();
  v41 = v34 + 16;
  v29 = v265;
  v214 = (void *)(((unint64_t)v211 + v41) & v265);
  v215 = (const void *)(((unint64_t)v212 + v41) & v265);
  v216 = __swift_getEnumTagSinglePayload((uint64_t)v214, 1, v274);
  v217 = __swift_getEnumTagSinglePayload((uint64_t)v215, 1, v274);
  if (!v216)
  {
    if (!v217)
    {
      (*(void (**)(void *, const void *, uint64_t))(v258 + 24))(v214, v215, v274);
      goto LABEL_219;
    }
    (*(void (**)(void *, uint64_t))(v258 + 8))(v214, v274);
LABEL_214:
    v22 = v249;
    if (v249)
      v218 = v281;
    else
      v218 = v281 + 1;
    memcpy(v214, v215, v218);
    v176 = v281;
    v33 = v280;
    v175 = a2;
    v26 = v269;
    goto LABEL_220;
  }
  if (v217)
    goto LABEL_214;
  (*(void (**)(void *, const void *, uint64_t))(v258 + 16))(v214, v215, v274);
  __swift_storeEnumTagSinglePayload((uint64_t)v214, 0, 1, v274);
LABEL_219:
  v33 = v280;
  v176 = v281;
  v175 = a2;
  v26 = v269;
  v22 = v249;
LABEL_220:
  a3 = v271;
  v177 = v277;
  if (v22)
    v219 = v176;
  else
    v219 = v176 + 1;
  *(_QWORD *)(((unint64_t)v214 + v219 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v215 + v219 + 7) & 0xFFFFFFFFFFFFF8);
LABEL_224:
  v31 = v175;
LABEL_225:
  v220 = 7;
  if (!v22)
    v220 = 8;
  v221 = (v220 + v176 + ((v41 + ((v39 + v177) & 0xFFFFFFFFFFFFFFF8)) & v29)) & 0xFFFFFFFFFFFFFFF8;
  v222 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v223 = *(unsigned __int8 *)(v222 + 80);
  v224 = v26 + v223 + v221 + 8;
  v225 = ((unint64_t)v33 + v224) & ~v223;
  v226 = ((unint64_t)v31 + v224) & ~v223;
  (*(void (**)(unint64_t, uint64_t))(v222 + 24))(v225, v226);
  v227 = *(_QWORD *)(v222 + 64);
  v228 = sub_2212F33F0();
  v229 = *(_QWORD *)(v228 - 8);
  v230 = *(_DWORD *)(v229 + 80) & 0xF8 | 7;
  v231 = (v227 + v230 + v225) & ~v230;
  v232 = (v227 + v230 + v226) & ~v230;
  if (*(_QWORD *)(v229 + 64) <= 8uLL)
    v233 = 8;
  else
    v233 = *(_QWORD *)(v229 + 64);
  if (v231 != v232)
  {
    v234 = v228;
    v235 = *(unsigned __int8 *)(v231 + v233);
    if (v235 >= 2)
    {
      if (v233 <= 3)
        v236 = v233;
      else
        v236 = 4;
      __asm { BR              X12 }
    }
    if (v235 == 1)
      (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v231, v228);
    else
      swift_release();
    v237 = *(unsigned __int8 *)(v232 + v233);
    if (v237 >= 2)
    {
      if (v233 <= 3)
        v238 = v233;
      else
        v238 = 4;
      __asm { BR              X12 }
    }
    if (v237 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v229 + 16))(v231, v232, v234);
      *(_BYTE *)(v231 + v233) = 1;
    }
    else
    {
      *(_QWORD *)v231 = *(_QWORD *)v232;
      *(_BYTE *)(v231 + v233) = 0;
      swift_retain();
    }
  }
  v239 = v233 + 1;
  v240 = ((v231 | 7) + v233 + 1) & 0xFFFFFFFFFFFFFFF8;
  v241 = ((v232 | 7) + v239) & 0xFFFFFFFFFFFFFFF8;
  v242 = *(_QWORD *)v241;
  v243 = *(_BYTE *)(v241 + 8);
  sub_221017C08(*(_QWORD *)v241, v243);
  v244 = *(_QWORD *)v240;
  v245 = *(_BYTE *)(v240 + 8);
  *(_QWORD *)v240 = v242;
  *(_BYTE *)(v240 + 8) = v243;
  sub_221017894(v244, v245);
  return v33;
}

_OWORD *sub_22109209C(_OWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  _OWORD *v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  size_t v49;
  _OWORD *v50;
  _OWORD *v51;
  unint64_t v52;
  void (*v53)(unint64_t, unint64_t);
  uint64_t v54;
  _WORD *v55;
  _WORD *v56;
  uint64_t v57;
  _OWORD *v58;
  uint64_t v59;
  _OWORD *v60;
  char v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _OWORD *v71;
  _OWORD *v72;
  unsigned int v73;
  _OWORD *v74;
  uint64_t v75;
  _WORD *v76;
  uint64_t v77;
  _WORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD *v82;
  _OWORD *v83;
  uint64_t v84;
  void *v85;
  const void *v86;
  size_t v87;
  size_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  size_t v93;
  size_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  unsigned int v102;
  uint64_t v103;
  char v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  _OWORD *result;
  _OWORD *v109;
  char v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _OWORD *v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  unint64_t v122;
  size_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(unint64_t, unint64_t, uint64_t);
  size_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _OWORD *v146;

  v5 = sub_2212F5124();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v132 = v7 + 16;
  v139 = v6;
  v8 = *(_QWORD *)(v6 + 64);
  v130 = sub_2212F5058();
  v9 = *(_QWORD *)(v130 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 | v10 | 7;
  v143 = ~v11;
  v131 = v11 + v8;
  v12 = (v11 + v8 + ((v7 + 16) & ~v7)) & ~v11;
  v127 = v10 + 16;
  v128 = v9;
  v136 = v10;
  v129 = *(_QWORD *)(v9 + 64) + v7;
  v13 = v8 + 7;
  v14 = (v8 + 7 + ((v129 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;
  v16 = v14 + 9;
  v122 = v15;
  if (v16 <= v15)
    v16 = v15;
  if (v16 <= 2)
    v17 = 2;
  else
    v17 = v16;
  v18 = v17 + v12;
  if (v18 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
    v19 = v18 + 1;
  else
    v19 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= 0x10)
    v20 = 16;
  else
    v20 = v19;
  v21 = sub_2212F29B8();
  v22 = v11;
  v145 = v21;
  v146 = a2;
  v23 = *(_QWORD *)(v21 - 8);
  v24 = *(unsigned int *)(v23 + 84);
  v25 = *(unsigned __int8 *)(v23 + 80);
  v26 = v11 | v25;
  v27 = ~(v11 | v25);
  v28 = ((v11 | v25) + 32) & v27;
  v29 = v20 + 1;
  v30 = (v20 + 1 + v22) & ~v22;
  v31 = ~v25;
  v142 = *(_QWORD *)(v23 + 64);
  v138 = v25;
  if (v24 >= 0x80000001)
  {
    v124 = v5;
    v126 = v13;
    v116 = *(_QWORD *)(v21 - 8);
    v117 = v17;
    v134 = (v20 + 1 + v22) & ~v22;
    v135 = v28;
    v33 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    v37 = v20 + 8;
    v38 = v25 + 16;
    v133 = ~v25;
    v39 = (v25
         + 16
         + ((v20 + 8 + (((((unint64_t)v33 + v26 + 16) & v27) + v22 + v29) & v143)) & 0xFFFFFFFFFFFFFFF8)) & v31;
    v40 = *(_DWORD *)(v23 + 84);
    v41 = v22;
    if (__swift_getEnumTagSinglePayload(v39, v24, v145) < 2)
    {
      v120 = v41;
      v35 = a1;
      v32 = v146;
      LODWORD(v24) = v40;
      v17 = v117;
      v29 = v20 + 1;
      v36 = v124;
      v34 = (_OWORD *)(((unint64_t)v33 + v26 + 16) & v27);
LABEL_17:
      v42 = v136;
      *v35 = *v32;
      v43 = (_OWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v43 = *v33;
      v44 = (_OWORD *)(((unint64_t)v43 + v26 + 16) & v27);
      v45 = *((unsigned __int8 *)v34 + v20);
      v121 = v24;
      if (v45 >= 3)
      {
        if (v20 <= 3)
          v46 = v20;
        else
          v46 = 4;
        __asm { BR              X12 }
      }
      v137 = ~v7;
      v115 = ~v42;
      if (v45 == 2)
      {
        v58 = v35;
        v59 = v36;
        v60 = v34;
        (*(void (**)(_OWORD *, _OWORD *))(v139 + 32))(v44, v34);
        v34 = v60;
        v35 = v58;
        *(_OWORD *)(((unint64_t)v44 + v126) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v60 + v126) & 0xFFFFFFFFFFFFF8);
        v61 = 2;
      }
      else
      {
        if (v45 == 1)
        {
          v123 = v29;
          *v44 = *v34;
          v118 = v34;
          v52 = ((unint64_t)v34 + v132) & v137;
          v53 = *(void (**)(unint64_t, unint64_t))(v139 + 32);
          v125 = v36;
          v53(((unint64_t)v44 + v132) & v137, v52);
          v54 = v143;
          v55 = (_WORD *)((v131 + (((unint64_t)v44 + v132) & v137)) & v143);
          v56 = (_WORD *)((v131 + v52) & v143);
          switch(*((_BYTE *)v56 + v17))
          {
            case 0:
              v62 = 0;
              *v55 = *v56;
              goto LABEL_40;
            case 1:
              *(_BYTE *)v55 = *(_BYTE *)v56;
              v62 = 1;
LABEL_40:
              v35 = a1;
              v29 = v123;
              v63 = v125;
              goto LABEL_44;
            case 2:
              *(_OWORD *)v55 = *(_OWORD *)v56;
              v64 = ((unint64_t)v55 + v127) & v115;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 32))(v64, ((unint64_t)v56 + v127) & v115, v130);
              v65 = (v129 + v64) & v137;
              v66 = (v129 + (((unint64_t)v56 + v127) & v115)) & v137;
              v63 = v125;
              ((void (*)(unint64_t, unint64_t, uint64_t))v53)(v65, v66, v125);
              v55 = (_WORD *)((v131 + (((unint64_t)v44 + v132) & v137)) & v143);
              v54 = v143;
              *(_QWORD *)((v126 + v65) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v126 + v66) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v55 + v122) = *((_BYTE *)v56 + v122);
              v62 = 2;
              goto LABEL_43;
            case 3:
              *(_OWORD *)v55 = *(_OWORD *)v56;
              v67 = ((unint64_t)v56 + v127) & v115;
              v68 = ((unint64_t)v55 + v127) & v115;
              (*(void (**)(void))(v128 + 32))();
              v69 = (v129 + v68) & v137;
              v70 = (v129 + v67) & v137;
              v63 = v125;
              ((void (*)(unint64_t, unint64_t, uint64_t))v53)(v69, v70, v125);
              v55 = (_WORD *)((v131 + (((unint64_t)v44 + v132) & v137)) & v143);
              v54 = v143;
              *(_QWORD *)((v126 + v69) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v126 + v70) & 0xFFFFFFFFFFFFF8);
              v62 = 3;
LABEL_43:
              v35 = a1;
              v29 = v123;
LABEL_44:
              v34 = v118;
              v59 = v63;
              *((_BYTE *)v55 + v17) = v62;
              v61 = 1;
              break;
            default:
              if (v17 <= 3)
                v57 = v17;
              else
                v57 = 4;
              __asm { BR              X12 }
              return result;
          }
LABEL_45:
          *((_BYTE *)v44 + v20) = v61;
          v71 = (_OWORD *)(((unint64_t)v44 + v120 + v29) & v54);
          v72 = (_OWORD *)(((unint64_t)v34 + v120 + v29) & v54);
          v73 = *((unsigned __int8 *)v72 + v20);
          if (v73 > 2)
          {
            v109 = v35;
            memcpy(v71, (const void *)(((unint64_t)v34 + v120 + v29) & v54), v29);
          }
          else if (v73 == 2)
          {
            v109 = v35;
            (*(void (**)(_OWORD *, unint64_t, uint64_t))(v139 + 32))(v71, ((unint64_t)v34 + v120 + v29) & v54, v59);
            *(_OWORD *)(((unint64_t)v71 + v126) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v72 + v126) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v71 + v20) = 2;
          }
          else
          {
            if (v73 == 1)
            {
              v74 = v35;
              v144 = v20;
              *v71 = *v72;
              v119 = v17;
              v75 = v54;
              v140 = *(void (**)(unint64_t, unint64_t, uint64_t))(v139 + 32);
              v140(((unint64_t)v71 + v132) & v137, ((unint64_t)v72 + v132) & v137, v59);
              v76 = (_WORD *)((v131 + (((unint64_t)v71 + v132) & v137)) & v75);
              v77 = v119;
              v78 = (_WORD *)((v131 + (((unint64_t)v72 + v132) & v137)) & v75);
              v109 = v74;
              switch(*((_BYTE *)v78 + v119))
              {
                case 0:
                  v110 = 0;
                  *v76 = *v78;
                  break;
                case 1:
                  *(_BYTE *)v76 = *(_BYTE *)v78;
                  v110 = 1;
                  break;
                case 2:
                  *(_OWORD *)v76 = *(_OWORD *)v78;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 32))(((unint64_t)v76 + v127) & v115, ((unint64_t)v78 + v127) & v115, v130);
                  v111 = (v129 + (((unint64_t)v76 + v127) & v115)) & v137;
                  v112 = (v129 + (((unint64_t)v78 + v127) & v115)) & v137;
                  v140(v111, v112, v59);
                  v77 = v119;
                  *(_QWORD *)((v126 + v111) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v126 + v112) & 0xFFFFFFFFFFFFF8);
                  *((_BYTE *)v76 + v122) = *((_BYTE *)v78 + v122);
                  v110 = 2;
                  break;
                case 3:
                  *(_OWORD *)v76 = *(_OWORD *)v78;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 32))(((unint64_t)v76 + v127) & v115, ((unint64_t)v78 + v127) & v115, v130);
                  v113 = (v129 + (((unint64_t)v76 + v127) & v115)) & v137;
                  v114 = (v129 + (((unint64_t)v78 + v127) & v115)) & v137;
                  v140(v113, v114, v59);
                  v77 = v119;
                  *(_QWORD *)((v126 + v113) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v126 + v114) & 0xFFFFFFFFFFFFF8);
                  v110 = 3;
                  break;
                default:
                  if (v119 <= 3)
                    v79 = v119;
                  else
                    v79 = 4;
                  __asm { BR              X12 }
                  return result;
              }
              v80 = v138;
              *((_BYTE *)v76 + v77) = v110;
              v20 = v144;
              *((_BYTE *)v71 + v144) = 1;
              goto LABEL_57;
            }
            v109 = v35;
            *v71 = *v72;
            *((_BYTE *)v71 + v20) = 0;
          }
          v80 = v138;
LABEL_57:
          v81 = v20 + 8;
          v82 = (_OWORD *)(((unint64_t)v71 + v20 + 8) & 0xFFFFFFFFFFFFFFF8);
          v83 = (_OWORD *)(((unint64_t)v72 + v20 + 8) & 0xFFFFFFFFFFFFFFF8);
          *v82 = *v83;
          v84 = v80 + 16;
          v85 = (void *)(((unint64_t)v82 + v80 + 16) & v133);
          v86 = (const void *)(((unint64_t)v83 + v80 + 16) & v133);
          if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v145))
          {
            v87 = v142;
            if (v121)
              v88 = v142;
            else
              v88 = v142 + 1;
            memcpy(v85, v86, v88);
            v89 = v121;
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v116 + 32))(v85, v86, v145);
            __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v145);
            v89 = v121;
            v87 = v142;
            if (v121)
              v88 = v142;
            else
              v88 = v142 + 1;
          }
          v51 = v146;
          v47 = a3;
          *(_QWORD *)(((unint64_t)v85 + v88 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v86
                                                                                           + v88
                                                                                           + 7) & 0xFFFFFFFFFFFFF8);
          v90 = 7;
          if (!v89)
            v90 = 8;
          v49 = v135 + ((v90 + v87 + ((v84 + ((v81 + v134) & 0xFFFFFFFFFFFFFFF8)) & v133)) & 0xFFFFFFFFFFFFFFF8) + 8;
          v50 = v109;
          goto LABEL_68;
        }
        v59 = v36;
        v61 = 0;
        *v44 = *v34;
      }
      v54 = v143;
      goto LABEL_45;
    }
    v47 = a3;
    v30 = v134;
    v28 = v135;
    LODWORD(v24) = v40;
    v31 = v133;
  }
  else
  {
    if (a2[1] >= 0xFFFFFFFFuLL)
    {
      v32 = a2;
      v133 = ~v25;
      v134 = (v20 + 1 + v22) & ~v22;
      v120 = v22;
      v126 = v13;
      v116 = *(_QWORD *)(v21 - 8);
      v135 = v28;
      v33 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      v34 = (_OWORD *)(((unint64_t)v33 + v26 + 16) & v27);
      v35 = a1;
      v36 = v5;
      goto LABEL_17;
    }
    v37 = v20 + 8;
    v38 = v25 + 16;
    v47 = a3;
  }
  v48 = 7;
  if (!(_DWORD)v24)
    v48 = 8;
  v49 = v28 + ((v48 + v142 + ((v38 + ((v37 + v30) & 0xFFFFFFFFFFFFFFF8)) & v31)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v50 = a1;
  v51 = v146;
  memcpy(a1, v146, v49);
LABEL_68:
  v91 = *(_QWORD *)(*(_QWORD *)(v47 + 16) - 8);
  v92 = *(unsigned __int8 *)(v91 + 80);
  v93 = ((unint64_t)v50 + v49 + v92) & ~v92;
  v94 = ((unint64_t)v51 + v49 + v92) & ~v92;
  (*(void (**)(size_t, size_t))(v91 + 32))(v93, v94);
  v95 = *(_QWORD *)(v91 + 64);
  v96 = sub_2212F33F0();
  v97 = *(_QWORD *)(v96 - 8);
  v98 = *(_DWORD *)(v97 + 80) & 0xF8 | 7;
  v99 = (_QWORD *)((v95 + v98 + v93) & ~v98);
  v100 = (_QWORD *)((v95 + v98 + v94) & ~v98);
  if (*(_QWORD *)(v97 + 64) <= 8uLL)
    v101 = 8;
  else
    v101 = *(_QWORD *)(v97 + 64);
  v102 = *((unsigned __int8 *)v100 + v101);
  if (v102 >= 2)
  {
    if (v101 <= 3)
      v103 = v101;
    else
      v103 = 4;
    __asm { BR              X13 }
  }
  if (v102 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v97 + 32))(v99, v100, v96);
    v104 = 1;
  }
  else
  {
    v104 = 0;
    *v99 = *v100;
  }
  *((_BYTE *)v99 + v101) = v104;
  v105 = ((unint64_t)v100 + v101 + 8) & 0xFFFFFFFFFFFFFFF8;
  v106 = *(_QWORD *)v105;
  v107 = ((unint64_t)v99 + v101 + 8) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v107 + 8) = *(_BYTE *)(v105 + 8);
  *(_QWORD *)v107 = v106;
  return v50;
}

_QWORD *sub_221092C28(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  const void *v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  _QWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  unint64_t v44;
  _OWORD *v45;
  unsigned int v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  unsigned int v52;
  uint64_t v53;
  unint64_t v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  size_t v61;
  size_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  unint64_t v66;
  void (*v67)(unint64_t, unint64_t, uint64_t);
  _WORD *v68;
  unint64_t v69;
  _WORD *v70;
  uint64_t v71;
  _OWORD *v72;
  char v73;
  uint64_t v74;
  size_t v75;
  void (*v76)(unint64_t, uint64_t);
  unint64_t v77;
  unsigned int v78;
  uint64_t v79;
  void (*v80)(unint64_t, uint64_t);
  unint64_t v81;
  unsigned int v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  _OWORD *v89;
  _OWORD *v90;
  unsigned int v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  void (*v95)(unint64_t, unint64_t, uint64_t);
  _WORD *v96;
  unint64_t v97;
  _WORD *v98;
  uint64_t v99;
  char v100;
  unint64_t v101;
  unint64_t v102;
  unsigned int v103;
  void (*v104)(unint64_t, uint64_t);
  unint64_t v105;
  unsigned int v106;
  uint64_t v107;
  unint64_t v108;
  unsigned int v109;
  uint64_t v110;
  unint64_t v111;
  void (*v112)(unint64_t, unint64_t, uint64_t);
  _WORD *v113;
  uint64_t v114;
  _WORD *v115;
  uint64_t v116;
  char v117;
  char v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  _OWORD *v125;
  _OWORD *v126;
  unsigned int v127;
  unsigned int v128;
  void (*v129)(unint64_t, uint64_t);
  unint64_t v130;
  unsigned int v131;
  uint64_t v132;
  void (*v133)(unint64_t, unint64_t, uint64_t);
  _WORD *v134;
  unint64_t v135;
  _WORD *v136;
  uint64_t v137;
  void (*v138)(unint64_t, uint64_t);
  unint64_t v139;
  unsigned int v140;
  uint64_t v141;
  char v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  _OWORD *v147;
  _OWORD *v148;
  void *v149;
  const void *v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  char v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  char v159;
  unint64_t v160;
  unint64_t v161;
  unsigned int v162;
  uint64_t v163;
  void (*v164)(unint64_t, unint64_t, uint64_t);
  _WORD *v165;
  unint64_t v166;
  _WORD *v167;
  uint64_t v168;
  char v169;
  unint64_t v170;
  unint64_t v171;
  unint64_t v172;
  unint64_t v173;
  _OWORD *v174;
  _OWORD *v175;
  void *v176;
  const void *v177;
  int v178;
  size_t v179;
  _QWORD *v180;
  size_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unsigned int v197;
  uint64_t v198;
  unsigned int v199;
  uint64_t v200;
  char v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  _QWORD *result;
  unint64_t v208;
  unsigned int EnumTagSinglePayload;
  unint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  size_t __n;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  size_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;

  v233 = sub_2212F5124();
  v4 = *(_QWORD *)(v233 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v220 = ~v5;
  v218 = v5 + 16;
  v226 = v4;
  v6 = *(_QWORD *)(v4 + 64);
  v7 = sub_2212F5058();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v5 | v9 | 7;
  v11 = ~v10;
  v219 = v10 + v6;
  v212 = ~v9;
  v211 = v9 + 16;
  v213 = v8;
  v214 = v7;
  v215 = *(_QWORD *)(v8 + 64) + v5;
  v12 = v6 + 7;
  v13 = (v6 + 7 + ((v215 + ((v9 + 16) & ~v9)) & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  v14 = v13 + 8;
  v15 = v13 + 9;
  v210 = v14;
  if (v15 <= v14)
    v15 = v14;
  if (v15 <= 2)
    v15 = 2;
  v227 = v15;
  v16 = v15 + ((v10 + v6 + ((v5 + 16) & ~v5)) & ~v10);
  v217 = v6 + 7;
  if (v16 + 1 > (v12 & 0xFFFFFFFFFFFFFFF8) + 16)
    v17 = v16 + 1;
  else
    v17 = (v12 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v17 <= 0x10)
    v18 = 16;
  else
    v18 = v17;
  v19 = sub_2212F29B8();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int *)(v20 + 84);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = v10 | v22;
  v24 = ~(v10 | v22);
  v25 = ((v10 | v22) + 32) & v24;
  v228 = (v18 + 1 + v10) & ~v10;
  v229 = v25;
  v26 = ~v22;
  v27 = *(_QWORD *)(v20 + 64);
  v230 = a1;
  v231 = v27;
  v232 = ~v22;
  v223 = v19;
  v224 = v22;
  v234 = v18;
  v225 = ~v10;
  v221 = v10;
  __n = v18 + 1;
  if (v21 >= 0x80000001)
  {
    v35 = v19;
    v216 = *(_QWORD *)(v19 - 8);
    v36 = (v18 + 8 + (((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v23 + 16) & v24) + v10 + v18 + 1) & v11)) & 0xFFFFFFFFFFFFFFF8;
    v37 = v22 + 16;
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v22 + 16 + v36) & v26, v21, v19);
    v208 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
    v38 = (((v208 + v23 + 16) & v24) + v10 + v18 + 1) & v11;
    v39 = v18 + 8;
    v40 = __swift_getEnumTagSinglePayload((v37 + ((v18 + 8 + v38) & 0xFFFFFFFFFFFFFFF8)) & v26, v21, v35);
    if (EnumTagSinglePayload < 2)
    {
      v30 = v230;
      if (v40 <= 1)
      {
        v31 = a2;
        v29 = a2[1];
        v34 = v225;
        v32 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
        v33 = (v208 + v23 + 16) & v24;
LABEL_18:
        *v30 = *v31;
        v30[1] = v29;
        swift_bridgeObjectRelease();
        v41 = (_QWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v41 = *v32;
        v41[1] = v32[1];
        swift_bridgeObjectRelease();
        v42 = (_OWORD *)(((unint64_t)v41 + v23 + 16) & v24);
        v43 = v234;
        v44 = v227;
        v45 = (_OWORD *)v33;
        if (v42 == (_OWORD *)v33)
          goto LABEL_126;
        v46 = *((unsigned __int8 *)v42 + v234);
        if (v46 >= 3)
        {
          if (v234 <= 3)
            v47 = v234;
          else
            v47 = 4;
          __asm { BR              X12 }
        }
        if (v46 == 2)
        {
          (*(void (**)(_OWORD *, uint64_t))(v226 + 8))(v42, v233);
        }
        else if (v46 == 1)
        {
          swift_bridgeObjectRelease();
          v80 = *(void (**)(unint64_t, uint64_t))(v226 + 8);
          v80(((unint64_t)v42 + v218) & v220, v233);
          v81 = (v219 + (((unint64_t)v42 + v218) & v220)) & v34;
          v82 = *(unsigned __int8 *)(v81 + v227);
          if (v82 >= 4)
          {
            if (v227 <= 3)
              v83 = v227;
            else
              v83 = 4;
            __asm { BR              X12 }
          }
          v45 = (_OWORD *)v33;
          if (v82 < 2)
            goto LABEL_105;
          swift_bridgeObjectRelease();
          v108 = (v211 + v81) & v212;
          (*(void (**)(unint64_t, uint64_t))(v213 + 8))(v108, v214);
          v80((v215 + v108) & v220, v233);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v45 = (_OWORD *)v33;
LABEL_105:
        v109 = *((unsigned __int8 *)v45 + v234);
        if (v109 >= 3)
        {
          if (v234 <= 3)
            v110 = v234;
          else
            v110 = 4;
          __asm { BR              X12 }
        }
        if (v109 == 2)
        {
          (*(void (**)(_OWORD *, uint64_t, uint64_t))(v226 + 32))(v42, v33, v233);
          v45 = (_OWORD *)v33;
          *(_OWORD *)(((unint64_t)v42 + v217) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v217 + v33) & 0xFFFFFFFFFFFFF8);
          v117 = 2;
        }
        else if (v109 == 1)
        {
          *v42 = *v45;
          v111 = ((unint64_t)v45 + v218) & v220;
          v112 = *(void (**)(unint64_t, unint64_t, uint64_t))(v226 + 32);
          v112(((unint64_t)v42 + v218) & v220, v111, v233);
          v113 = (_WORD *)((v219 + (((unint64_t)v42 + v218) & v220)) & v34);
          v114 = v219 + v111;
          v44 = v227;
          v115 = (_WORD *)(v114 & v34);
          switch(*(_BYTE *)((v114 & v34) + v227))
          {
            case 0:
              v118 = 0;
              *v113 = *v115;
              break;
            case 1:
              *(_BYTE *)v113 = *(_BYTE *)v115;
              v118 = 1;
              break;
            case 2:
              *(_OWORD *)v113 = *(_OWORD *)v115;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 32))(((unint64_t)v113 + v211) & v212, ((unint64_t)v115 + v211) & v212, v214);
              v119 = (v215 + (((unint64_t)v113 + v211) & v212)) & v220;
              v120 = (v215 + (((unint64_t)v115 + v211) & v212)) & v220;
              v112(v119, v120, v233);
              v121 = v217 + v120;
              v44 = v227;
              *(_QWORD *)((v217 + v119) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(v121 & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v113 + v210) = *((_BYTE *)v115 + v210);
              v118 = 2;
              break;
            case 3:
              *(_OWORD *)v113 = *(_OWORD *)v115;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 32))(((unint64_t)v113 + v211) & v212, ((unint64_t)v115 + v211) & v212, v214);
              v122 = (v215 + (((unint64_t)v113 + v211) & v212)) & v220;
              v123 = (v215 + (((unint64_t)v115 + v211) & v212)) & v220;
              v112(v122, v123, v233);
              v124 = v217 + v123;
              v44 = v227;
              *(_QWORD *)((v217 + v122) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(v124 & 0xFFFFFFFFFFFFF8);
              v118 = 3;
              break;
            default:
              if (v227 <= 3)
                v116 = v227;
              else
                v116 = 4;
              __asm { BR              X12 }
              return result;
          }
          v45 = (_OWORD *)v33;
          *((_BYTE *)v113 + v44) = v118;
          v117 = 1;
          v43 = v234;
        }
        else
        {
          v117 = 0;
          *v42 = *v45;
        }
        *((_BYTE *)v42 + v43) = v117;
LABEL_126:
        v125 = (_OWORD *)(((unint64_t)v42 + v221 + __n) & v34);
        v126 = (_OWORD *)(((unint64_t)v45 + v221 + __n) & v34);
        v127 = *((unsigned __int8 *)v125 + v43);
        v128 = *((unsigned __int8 *)v126 + v43);
        if (v127 > 2)
        {
          if (v128 <= 2)
          {
            if (v128 != 2)
            {
              if (v128 != 1)
                goto LABEL_203;
              *v125 = *v126;
              v133 = *(void (**)(unint64_t, unint64_t, uint64_t))(v226 + 32);
              v133(((unint64_t)v125 + v218) & v220, ((unint64_t)v126 + v218) & v220, v233);
              v134 = (_WORD *)((v219 + (((unint64_t)v125 + v218) & v220)) & v34);
              v135 = v227;
              v136 = (_WORD *)((v219 + (((unint64_t)v126 + v218) & v220)) & v34);
              switch(*((_BYTE *)v136 + v227))
              {
                case 0:
                  v154 = 0;
                  *v134 = *v136;
                  break;
                case 1:
                  *(_BYTE *)v134 = *(_BYTE *)v136;
                  v154 = 1;
                  break;
                case 2:
                  *(_OWORD *)v134 = *(_OWORD *)v136;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 32))(((unint64_t)v134 + v211) & v212, ((unint64_t)v136 + v211) & v212, v214);
                  v155 = (v215 + (((unint64_t)v134 + v211) & v212)) & v220;
                  v156 = (v215 + (((unint64_t)v136 + v211) & v212)) & v220;
                  v133(v155, v156, v233);
                  v135 = v227;
                  *(_QWORD *)((v217 + v155) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v217 + v156) & 0xFFFFFFFFFFFFF8);
                  *((_BYTE *)v134 + v210) = *((_BYTE *)v136 + v210);
                  v154 = 2;
                  break;
                case 3:
                  *(_OWORD *)v134 = *(_OWORD *)v136;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 32))(((unint64_t)v134 + v211) & v212, ((unint64_t)v136 + v211) & v212, v214);
                  v157 = (v215 + (((unint64_t)v134 + v211) & v212)) & v220;
                  v158 = (v215 + (((unint64_t)v136 + v211) & v212)) & v220;
                  v133(v157, v158, v233);
                  v135 = v227;
                  *(_QWORD *)((v217 + v157) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v217 + v158) & 0xFFFFFFFFFFFFF8);
                  v154 = 3;
                  break;
                default:
                  if (v227 <= 3)
                    v137 = v227;
                  else
                    v137 = 4;
                  __asm { BR              X12 }
                  return result;
              }
              *((_BYTE *)v134 + v135) = v154;
              v159 = 1;
              v43 = v234;
LABEL_202:
              *((_BYTE *)v125 + v43) = v159;
              goto LABEL_210;
            }
LABEL_201:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v226 + 32))(v125, v126, v233);
            *(_OWORD *)(((unint64_t)v125 + v217) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v126
                                                                                           + v217) & 0xFFFFFFFFFFFFF8);
            v159 = 2;
            goto LABEL_202;
          }
        }
        else
        {
          if (v128 <= 2)
          {
            if (v125 == v126)
              goto LABEL_210;
            if (v127 == 2)
            {
              (*(void (**)(_OWORD *, uint64_t))(v226 + 8))(v125, v233);
            }
            else if (v127 == 1)
            {
              swift_bridgeObjectRelease();
              v129 = *(void (**)(unint64_t, uint64_t))(v226 + 8);
              v129(((unint64_t)v125 + v218) & v220, v233);
              v130 = (v219 + (((unint64_t)v125 + v218) & v220)) & v34;
              v131 = *(unsigned __int8 *)(v130 + v44);
              if (v131 >= 4)
              {
                if (v44 <= 3)
                  v132 = v44;
                else
                  v132 = 4;
                __asm { BR              X12 }
              }
              if (v131 >= 2)
              {
                swift_bridgeObjectRelease();
                v161 = (v211 + v130) & v212;
                (*(void (**)(unint64_t, uint64_t))(v213 + 8))(v161, v214);
                v129((v215 + v161) & v220, v233);
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            v162 = *((unsigned __int8 *)v126 + v43);
            if (v162 >= 3)
            {
              if (v43 <= 3)
                v163 = v43;
              else
                v163 = 4;
              __asm { BR              X12 }
            }
            if (v162 != 2)
            {
              if (v162 == 1)
              {
                *v125 = *v126;
                v164 = *(void (**)(unint64_t, unint64_t, uint64_t))(v226 + 32);
                v164(((unint64_t)v125 + v218) & v220, ((unint64_t)v126 + v218) & v220, v233);
                v165 = (_WORD *)((v219 + (((unint64_t)v125 + v218) & v220)) & v34);
                v166 = v227;
                v167 = (_WORD *)((v219 + (((unint64_t)v126 + v218) & v220)) & v34);
                switch(*((_BYTE *)v167 + v227))
                {
                  case 0:
                    v169 = 0;
                    *v165 = *v167;
                    break;
                  case 1:
                    *(_BYTE *)v165 = *(_BYTE *)v167;
                    v169 = 1;
                    break;
                  case 2:
                    *(_OWORD *)v165 = *(_OWORD *)v167;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 32))(((unint64_t)v165 + v211) & v212, ((unint64_t)v167 + v211) & v212, v214);
                    v170 = (v215 + (((unint64_t)v165 + v211) & v212)) & v220;
                    v171 = (v215 + (((unint64_t)v167 + v211) & v212)) & v220;
                    v164(v170, v171, v233);
                    v166 = v227;
                    *(_QWORD *)((v217 + v170) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v217 + v171) & 0xFFFFFFFFFFFFF8);
                    *((_BYTE *)v165 + v210) = *((_BYTE *)v167 + v210);
                    v169 = 2;
                    break;
                  case 3:
                    *(_OWORD *)v165 = *(_OWORD *)v167;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 32))(((unint64_t)v165 + v211) & v212, ((unint64_t)v167 + v211) & v212, v214);
                    v172 = (v215 + (((unint64_t)v165 + v211) & v212)) & v220;
                    v173 = (v215 + (((unint64_t)v167 + v211) & v212)) & v220;
                    v164(v172, v173, v233);
                    v166 = v227;
                    *(_QWORD *)((v217 + v172) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v217 + v173) & 0xFFFFFFFFFFFFF8);
                    v169 = 3;
                    break;
                  default:
                    if (v227 <= 3)
                      v168 = v227;
                    else
                      v168 = 4;
                    __asm { BR              X12 }
                    return result;
                }
                *((_BYTE *)v165 + v166) = v169;
                *((_BYTE *)v125 + v43) = 1;
LABEL_210:
                v174 = (_OWORD *)(((unint64_t)v125 + v43 + 8) & 0xFFFFFFFFFFFFFFF8);
                v235 = v43 + 8;
                v175 = (_OWORD *)(((unint64_t)v126 + v43 + 8) & 0xFFFFFFFFFFFFFFF8);
                *v174 = *v175;
                swift_release();
                v176 = (void *)(((unint64_t)v174 + v224 + 16) & v232);
                v37 = v224 + 16;
                v177 = (const void *)(((unint64_t)v175 + v224 + 16) & v232);
                LODWORD(v175) = __swift_getEnumTagSinglePayload((uint64_t)v176, 1, v223);
                v178 = __swift_getEnumTagSinglePayload((uint64_t)v177, 1, v223);
                if ((_DWORD)v175)
                {
                  if (!v178)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v216 + 32))(v176, v177, v223);
                    __swift_storeEnumTagSinglePayload((uint64_t)v176, 0, 1, v223);
LABEL_220:
                    v25 = v229;
                    v30 = v230;
                    v180 = a2;
                    v62 = v231;
LABEL_221:
                    v58 = v232;
                    v28 = v180;
                    v59 = v228;
                    if ((_DWORD)v21)
                      v181 = v62;
                    else
                      v181 = v62 + 1;
                    *(_QWORD *)(((unint64_t)v176 + v181 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v177 + v181 + 7) & 0xFFFFFFFFFFFFF8);
                    v39 = v235;
                    v63 = a3;
                    goto LABEL_225;
                  }
                }
                else
                {
                  if (!v178)
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v216 + 40))(v176, v177, v223);
                    goto LABEL_220;
                  }
                  (*(void (**)(void *, uint64_t))(v216 + 8))(v176, v223);
                }
                if ((_DWORD)v21)
                  v179 = v231;
                else
                  v179 = v231 + 1;
                memcpy(v176, v177, v179);
                v62 = v231;
                v25 = v229;
                v30 = v230;
                v180 = a2;
                goto LABEL_221;
              }
LABEL_203:
              *v125 = *v126;
              *((_BYTE *)v125 + v43) = 0;
              goto LABEL_210;
            }
            goto LABEL_201;
          }
          if (v127 == 2)
          {
            (*(void (**)(_OWORD *, uint64_t))(v226 + 8))(v125, v233);
          }
          else if (v127 == 1)
          {
            swift_bridgeObjectRelease();
            v138 = *(void (**)(unint64_t, uint64_t))(v226 + 8);
            v138(((unint64_t)v125 + v218) & v220, v233);
            v139 = (v219 + (((unint64_t)v125 + v218) & v220)) & v34;
            v140 = *(unsigned __int8 *)(v139 + v44);
            if (v140 >= 4)
            {
              if (v44 <= 3)
                v141 = v44;
              else
                v141 = 4;
              __asm { BR              X12 }
            }
            if (v140 >= 2)
            {
              swift_bridgeObjectRelease();
              v160 = (v211 + v139) & v212;
              (*(void (**)(unint64_t, uint64_t))(v213 + 8))(v160, v214);
              v138((v215 + v160) & v220, v233);
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        memcpy(v125, v126, __n);
        goto LABEL_210;
      }
      goto LABEL_32;
    }
    v30 = v230;
    v27 = v231;
    v49 = (_OWORD *)((v208 + v23 + 16) & v24);
    v48 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    if (v40 < 2)
    {
LABEL_27:
      *(_OWORD *)v30 = *(_OWORD *)a2;
      v50 = (_OWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v50 = *v48;
      v51 = (_OWORD *)(((unint64_t)v50 + v23 + 16) & v24);
      v52 = *((unsigned __int8 *)v49 + v18);
      if (v52 >= 3)
      {
        if (v18 <= 3)
          v53 = v18;
        else
          v53 = 4;
        __asm { BR              X12 }
      }
      v58 = v232;
      v64 = v225;
      if (v52 == 2)
      {
        v72 = v49;
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v226 + 32))(v51, v49, v233);
        v49 = v72;
        *(_OWORD *)(((unint64_t)v51 + v217) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v72 + v217) & 0xFFFFFFFFFFFFF8);
        v73 = 2;
      }
      else
      {
        if (v52 == 1)
        {
          *v51 = *v49;
          v65 = v49;
          v66 = ((unint64_t)v49 + v218) & v220;
          v67 = *(void (**)(unint64_t, unint64_t, uint64_t))(v226 + 32);
          v67(((unint64_t)v51 + v218) & v220, v66, v233);
          v68 = (_WORD *)((v219 + (((unint64_t)v51 + v218) & v220)) & v225);
          v69 = v227;
          v70 = (_WORD *)((v219 + v66) & v225);
          switch(*((_BYTE *)v70 + v227))
          {
            case 0:
              v84 = 0;
              *v68 = *v70;
              break;
            case 1:
              *(_BYTE *)v68 = *(_BYTE *)v70;
              v84 = 1;
              break;
            case 2:
              *(_OWORD *)v68 = *(_OWORD *)v70;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 32))(((unint64_t)v68 + v211) & v212, ((unint64_t)v70 + v211) & v212, v214);
              v85 = (v215 + (((unint64_t)v68 + v211) & v212)) & v220;
              v86 = (v215 + (((unint64_t)v70 + v211) & v212)) & v220;
              v67(v85, v86, v233);
              v69 = v227;
              *(_QWORD *)((v217 + v85) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v217 + v86) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v68 + v210) = *((_BYTE *)v70 + v210);
              v84 = 2;
              break;
            case 3:
              *(_OWORD *)v68 = *(_OWORD *)v70;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 32))(((unint64_t)v68 + v211) & v212, ((unint64_t)v70 + v211) & v212, v214);
              v87 = (v215 + (((unint64_t)v68 + v211) & v212)) & v220;
              v88 = (v215 + (((unint64_t)v70 + v211) & v212)) & v220;
              v67(v87, v88, v233);
              v69 = v227;
              *(_QWORD *)((v217 + v87) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v217 + v88) & 0xFFFFFFFFFFFFF8);
              v84 = 3;
              break;
            default:
              if (v227 <= 3)
                v71 = v227;
              else
                v71 = 4;
              __asm { BR              X12 }
              return result;
          }
          v58 = v232;
          v75 = __n;
          v49 = v65;
          *((_BYTE *)v68 + v69) = v84;
          v73 = 1;
          v74 = v224;
          v18 = v234;
          v64 = v225;
LABEL_79:
          *((_BYTE *)v51 + v18) = v73;
          v89 = (_OWORD *)(((unint64_t)v51 + v221 + v75) & v64);
          v90 = (_OWORD *)(((unint64_t)v49 + v221 + v75) & v64);
          v91 = *((unsigned __int8 *)v90 + v18);
          if (v91 > 2)
          {
            v93 = v21;
            memcpy(v89, (const void *)(((unint64_t)v49 + v221 + v75) & v64), v75);
          }
          else
          {
            if (v91 == 2)
            {
              v93 = v21;
              (*(void (**)(_OWORD *, unint64_t, uint64_t))(v226 + 32))(v89, ((unint64_t)v49 + v221 + v75) & v64, v233);
              *(_OWORD *)(((unint64_t)v89 + v217) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v90
                                                                                            + v217) & 0xFFFFFFFFFFFFF8);
              v100 = 2;
LABEL_161:
              *((_BYTE *)v89 + v18) = v100;
              goto LABEL_162;
            }
            if (v91 == 1)
            {
              v92 = v64;
              v93 = v21;
              v94 = v58;
              *v89 = *v90;
              v95 = *(void (**)(unint64_t, unint64_t, uint64_t))(v226 + 32);
              v95(((unint64_t)v89 + v218) & v220, ((unint64_t)v90 + v218) & v220, v233);
              v96 = (_WORD *)((v219 + (((unint64_t)v89 + v218) & v220)) & v92);
              v97 = v227;
              v98 = (_WORD *)((v219 + (((unint64_t)v90 + v218) & v220)) & v92);
              v25 = v229;
              switch(*((_BYTE *)v98 + v227))
              {
                case 0:
                  v142 = 0;
                  *v96 = *v98;
                  break;
                case 1:
                  *(_BYTE *)v96 = *(_BYTE *)v98;
                  v142 = 1;
                  break;
                case 2:
                  *(_OWORD *)v96 = *(_OWORD *)v98;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 32))(((unint64_t)v96 + v211) & v212, ((unint64_t)v98 + v211) & v212, v214);
                  v143 = (v215 + (((unint64_t)v96 + v211) & v212)) & v220;
                  v144 = (v215 + (((unint64_t)v98 + v211) & v212)) & v220;
                  v95(v143, v144, v233);
                  v97 = v227;
                  *(_QWORD *)((v217 + v143) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v217 + v144) & 0xFFFFFFFFFFFFF8);
                  *((_BYTE *)v96 + v210) = *((_BYTE *)v98 + v210);
                  v142 = 2;
                  break;
                case 3:
                  *(_OWORD *)v96 = *(_OWORD *)v98;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v213 + 32))(((unint64_t)v96 + v211) & v212, ((unint64_t)v98 + v211) & v212, v214);
                  v145 = (v215 + (((unint64_t)v96 + v211) & v212)) & v220;
                  v146 = (v215 + (((unint64_t)v98 + v211) & v212)) & v220;
                  v95(v145, v146, v233);
                  v97 = v227;
                  *(_QWORD *)((v217 + v145) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v217 + v146) & 0xFFFFFFFFFFFFF8);
                  v142 = 3;
                  break;
                default:
                  if (v227 <= 3)
                    v99 = v227;
                  else
                    v99 = 4;
                  __asm { BR              X12 }
                  return result;
              }
              v58 = v94;
              v74 = v224;
              *((_BYTE *)v96 + v97) = v142;
              v100 = 1;
              v18 = v234;
              goto LABEL_161;
            }
            v93 = v21;
            *v89 = *v90;
            *((_BYTE *)v89 + v18) = 0;
          }
LABEL_162:
          v147 = (_OWORD *)(((unint64_t)v89 + v18 + 8) & 0xFFFFFFFFFFFFFFF8);
          v148 = (_OWORD *)(((unint64_t)v90 + v18 + 8) & 0xFFFFFFFFFFFFFFF8);
          *v147 = *v148;
          v37 = v74 + 16;
          v149 = (void *)(((unint64_t)v147 + v37) & v58);
          v150 = (const void *)(((unint64_t)v148 + v37) & v58);
          if (__swift_getEnumTagSinglePayload((uint64_t)v150, 1, v223))
          {
            if (v93)
              v21 = v231;
            else
              v21 = v231 + 1;
            memcpy(v149, v150, v21);
            v62 = v231;
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v216 + 32))(v149, v150, v223);
            __swift_storeEnumTagSinglePayload((uint64_t)v149, 0, 1, v223);
            v62 = v231;
            if (v93)
              v21 = v231;
            else
              v21 = v231 + 1;
          }
          v30 = v230;
          v63 = a3;
          v59 = v228;
          *(_QWORD *)(((unint64_t)v149 + v21 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v150
                                                                                            + v21
                                                                                            + 7) & 0xFFFFFFFFFFFFF8);
          LODWORD(v21) = v93;
          v28 = a2;
          v39 = v18 + 8;
          goto LABEL_225;
        }
        v73 = 0;
        *v51 = *v49;
      }
      v74 = v224;
      v75 = v18 + 1;
      goto LABEL_79;
    }
    v57 = a3;
    v28 = a2;
    v58 = v232;
    v59 = v228;
  }
  else
  {
    v28 = a2;
    v29 = a2[1];
    v30 = a1;
    if (a1[1] > 0xFFFFFFFEuLL)
    {
      v216 = *(_QWORD *)(v19 - 8);
      if (v29 >= 0xFFFFFFFF)
      {
        v31 = a2;
        v32 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
        v33 = ((unint64_t)v32 + v23 + 16) & v24;
        v34 = v225;
        goto LABEL_18;
      }
LABEL_32:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v54 = ((((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8) + v23 + 16) & v24;
      v55 = *(unsigned __int8 *)(v54 + v18);
      if (v55 >= 3)
      {
        if (v18 <= 3)
          v56 = v18;
        else
          v56 = 4;
        __asm { BR              X12 }
      }
      if (v55 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v226 + 8))(v54, v233);
      }
      else if (v55 == 1)
      {
        swift_bridgeObjectRelease();
        v76 = *(void (**)(unint64_t, uint64_t))(v226 + 8);
        v76((v218 + v54) & v220, v233);
        v77 = (v219 + ((v218 + v54) & v220)) & v225;
        v78 = *(unsigned __int8 *)(v77 + v227);
        if (v78 >= 4)
        {
          if (v227 <= 3)
            v79 = v227;
          else
            v79 = 4;
          __asm { BR              X12 }
        }
        if (v78 >= 2)
        {
          swift_bridgeObjectRelease();
          v101 = (v211 + v77) & v212;
          (*(void (**)(unint64_t, uint64_t))(v213 + 8))(v101, v214);
          v76((v215 + v101) & v220, v233);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v102 = (v54 + v221 + __n) & v225;
      v103 = *(unsigned __int8 *)(v102 + v234);
      v59 = v228;
      if (v103 <= 2)
      {
        if (v103 == 2)
        {
          (*(void (**)(unint64_t, uint64_t))(v226 + 8))(v102, v233);
        }
        else if (v103 == 1)
        {
          swift_bridgeObjectRelease();
          v104 = *(void (**)(unint64_t, uint64_t))(v226 + 8);
          v104((v218 + v102) & v220, v233);
          v105 = (v219 + ((v218 + v102) & v220)) & v225;
          v106 = *(unsigned __int8 *)(v105 + v227);
          if (v106 >= 4)
          {
            if (v227 <= 3)
              v107 = v227;
            else
              v107 = 4;
            __asm { BR              X12 }
          }
          if (v106 >= 2)
          {
            swift_bridgeObjectRelease();
            v151 = (v211 + v105) & v212;
            (*(void (**)(unint64_t, uint64_t))(v213 + 8))(v151, v214);
            v104((v215 + v151) & v220, v233);
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      swift_release();
      v58 = v232;
      v152 = (v224 + 16 + ((v234 + 8 + v102) & 0xFFFFFFFFFFFFFFF8)) & v232;
      if (!__swift_getEnumTagSinglePayload(v152, 1, v223))
        (*(void (**)(unint64_t, uint64_t))(v216 + 8))(v152, v223);
      v153 = 7;
      if (!(_DWORD)v21)
        v153 = 8;
      v25 = v229;
      v28 = a2;
      memcpy(v30, a2, v229+ ((v153 + v231 + ((v224 + 16 + ((v234 + 8 + v228) & 0xFFFFFFFFFFFFFFF8)) & v232)) & 0xFFFFFFFFFFFFFFF8)+ 8);
      v62 = v231;
      v63 = a3;
      v39 = v234 + 8;
      v37 = v224 + 16;
      goto LABEL_225;
    }
    if (v29 >= 0xFFFFFFFF)
    {
      v216 = *(_QWORD *)(v19 - 8);
      v48 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      v49 = (_OWORD *)(((unint64_t)v48 + v23 + 16) & v24);
      goto LABEL_27;
    }
    v57 = a3;
    v39 = v18 + 8;
    v37 = v22 + 16;
    v58 = ~v22;
    v59 = v228;
  }
  v60 = 7;
  if (!(_DWORD)v21)
    v60 = 8;
  v61 = v27;
  memcpy(v30, v28, v25 + ((v60 + v27 + ((v37 + ((v39 + v59) & 0xFFFFFFFFFFFFFFF8)) & v58)) & 0xFFFFFFFFFFFFFFF8) + 8);
  v62 = v61;
  v63 = v57;
LABEL_225:
  v182 = 7;
  if (!(_DWORD)v21)
    v182 = 8;
  v183 = (v182 + v62 + ((v37 + ((v39 + v59) & 0xFFFFFFFFFFFFFFF8)) & v58)) & 0xFFFFFFFFFFFFFFF8;
  v184 = *(_QWORD *)(*(_QWORD *)(v63 + 16) - 8);
  v185 = *(unsigned __int8 *)(v184 + 80);
  v186 = v25 + v185 + v183 + 8;
  v187 = ((unint64_t)v30 + v186) & ~v185;
  v188 = ((unint64_t)v28 + v186) & ~v185;
  (*(void (**)(unint64_t, unint64_t))(v184 + 40))(v187, v188);
  v189 = *(_QWORD *)(v184 + 64);
  v190 = sub_2212F33F0();
  v191 = *(_QWORD *)(v190 - 8);
  v192 = *(_DWORD *)(v191 + 80) & 0xF8 | 7;
  v193 = (v189 + v192 + v187) & ~v192;
  v194 = (v189 + v192 + v188) & ~v192;
  if (*(_QWORD *)(v191 + 64) <= 8uLL)
    v195 = 8;
  else
    v195 = *(_QWORD *)(v191 + 64);
  if (v193 != v194)
  {
    v196 = v190;
    v197 = *(unsigned __int8 *)(v193 + v195);
    if (v197 >= 2)
    {
      if (v195 <= 3)
        v198 = v195;
      else
        v198 = 4;
      __asm { BR              X12 }
    }
    if (v197 == 1)
      (*(void (**)(uint64_t, uint64_t))(v191 + 8))(v193, v190);
    else
      swift_release();
    v199 = *(unsigned __int8 *)(v194 + v195);
    if (v199 >= 2)
    {
      if (v195 <= 3)
        v200 = v195;
      else
        v200 = 4;
      __asm { BR              X12 }
    }
    if (v199 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v191 + 32))(v193, v194, v196);
      v201 = 1;
    }
    else
    {
      v201 = 0;
      *(_QWORD *)v193 = *(_QWORD *)v194;
    }
    *(_BYTE *)(v193 + v195) = v201;
  }
  v202 = ((v193 | 7) + v195 + 1) & 0xFFFFFFFFFFFFFFF8;
  v203 = ((v194 | 7) + v195 + 1) & 0xFFFFFFFFFFFFFFF8;
  v204 = *(_QWORD *)v203;
  LOBYTE(v203) = *(_BYTE *)(v203 + 8);
  v205 = *(_QWORD *)v202;
  v206 = *(_BYTE *)(v202 + 8);
  *(_QWORD *)v202 = v204;
  *(_BYTE *)(v202 + 8) = v203;
  sub_221017894(v205, v206);
  return v30;
}

uint64_t sub_221094AD8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v39;
  unsigned int v40;
  unsigned int EnumTagSinglePayload;
  uint64_t v42;
  uint64_t v43;

  v5 = *(_QWORD *)(sub_2212F5124() - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_2212F5058() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 | v9 | 7;
  v11 = (v7 + 7 + ((*(_QWORD *)(v8 + 64) + v6 + ((v9 + 16) & ~v9)) & ~v6)) & 0xFFFFFFFFFFFFFFF8;
  v12 = v11 + 8;
  v13 = v11 + 9;
  if (v13 <= v12)
    v13 = v12;
  if (v13 <= 2)
    v13 = 2;
  v14 = v13 + ((((v6 + 16) & ~v6) + v7 + v10) & ~v10);
  if (v14 + 1 > ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v15 = v14 + 1;
  else
    v15 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v15 <= 0x10)
    v16 = 16;
  else
    v16 = v15;
  v17 = sub_2212F29B8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int *)(v18 + 84);
  v20 = v19 - 1;
  if (!(_DWORD)v19)
    v20 = 0;
  if (v20 <= 0x7FFFFFFF)
    v21 = 0x7FFFFFFF;
  else
    v21 = v20;
  if (v20 >= 0)
    v22 = 0x7FFFFFFF;
  else
    v22 = v21;
  v42 = v17;
  v43 = *(_QWORD *)(a3 + 16);
  v23 = *(_QWORD *)(v43 - 8);
  v24 = *(unsigned int *)(v23 + 84);
  if (v24 <= v22 - 1)
    v25 = v22 - 1;
  else
    v25 = *(_DWORD *)(v23 + 84);
  v26 = *(_QWORD *)(sub_2212F33F0() - 8);
  if (*(_QWORD *)(v26 + 64) <= 8uLL)
    v27 = 8;
  else
    v27 = *(_QWORD *)(v26 + 64);
  if ((_DWORD)v19)
    v28 = 7;
  else
    v28 = 8;
  if (!a2)
    return 0;
  v29 = *(unsigned __int8 *)(v18 + 80);
  v30 = (v28
       + *(_QWORD *)(v18 + 64)
       + ((v29 + 16 + ((v16 + 8 + ((v16 + 1 + v10) & ~v10)) & 0xFFFFFFFFFFFFFFF8)) & ~v29)) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(unsigned __int8 *)(v23 + 80);
  v32 = (((v10 | v29) + 32) & ~(v10 | v29)) + v31 + v30 + 8;
  if (v25 < a2)
  {
    v33 = *(_DWORD *)(v26 + 80) & 0xF8 | 7;
    v34 = ((v27 + ((*(_QWORD *)(v23 + 64) + v33 + (v32 & ~v31)) & ~v33) + 8) & 0xFFFFFFFFFFFFFFF8) + 9;
    if (v34 < 4)
      v35 = ((a2 - v25 + 255) >> (8 * v34)) + 1;
    else
      v35 = 2;
    if (v35 >= 0x10000)
      v36 = 4;
    else
      v36 = 2;
    if (v35 < 0x100)
      v36 = 1;
    if (v35 >= 2)
      v37 = v36;
    else
      v37 = 0;
    __asm { BR              X1 }
  }
  if (v22 - 1 < v24)
    return __swift_getEnumTagSinglePayload((v32 + a1) & ~v31, v24, v43);
  if (v22 == 0x7FFFFFFF)
  {
    v39 = *(_QWORD *)(a1 + 8);
    if (v39 >= 0xFFFFFFFF)
      LODWORD(v39) = -1;
    v40 = v39 + 1;
  }
  else
  {
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v29+ 16+ ((v16+ 8+ ((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + (v10 | v29) + 16) & ~(v10 | v29))+ v10+ v16+ 1) & ~v10)) & 0xFFFFFFFFFFFFFFF8)) & ~v29, v19, v42);
    v40 = EnumTagSinglePayload - 1;
    if (EnumTagSinglePayload < 2)
      v40 = 0;
  }
  if (v40 >= 2)
    return v40 - 1;
  else
    return 0;
}

void sub_221094E38(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  size_t v33;
  unsigned int v34;
  int v35;
  int v36;

  v6 = *(_QWORD *)(sub_2212F5124() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(sub_2212F5058() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 | v10 | 7;
  v12 = (v8 + 7 + ((*(_QWORD *)(v9 + 64) + v7 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;
  v14 = v12 + 9;
  if (v14 <= v13)
    v14 = v13;
  if (v14 <= 2)
    v14 = 2;
  v15 = v14 + ((((v7 + 16) & ~v7) + v8 + v11) & ~v11);
  if (v15 + 1 > ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v16 = v15 + 1;
  else
    v16 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v16 <= 0x10)
    v17 = 16;
  else
    v17 = v16;
  v18 = *(_QWORD *)(sub_2212F29B8() - 8);
  v19 = *(_DWORD *)(v18 + 84);
  if (v19)
    v20 = v19 - 1;
  else
    v20 = 0;
  if (v20 <= 0x7FFFFFFF)
    v21 = 0x7FFFFFFF;
  else
    v21 = v20;
  if (v20 >= 0)
    v22 = 0x7FFFFFFF;
  else
    v22 = v21;
  v23 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v23 + 84) <= (v22 - 1))
    v24 = v22 - 1;
  else
    v24 = *(_DWORD *)(v23 + 84);
  v25 = sub_2212F33F0();
  v26 = v19;
  v27 = 0;
  v28 = *(_QWORD *)(v25 - 8);
  if (*(_QWORD *)(v28 + 64) <= 8uLL)
    v29 = 8;
  else
    v29 = *(_QWORD *)(v28 + 64);
  if (v26)
    v31 = *(_QWORD *)(v18 + 64);
  else
    v31 = *(_QWORD *)(v18 + 64) + 1;
  v32 = *(_DWORD *)(v28 + 80) & 0xF8 | 7;
  v30 = *(unsigned __int8 *)(v18 + 80);
  v33 = ((v29
        + ((*(_QWORD *)(v23 + 64)
          + v32
          + (((((v11 | v30) + 32) & ~(v11 | v30))
            + 8
            + *(unsigned __int8 *)(v23 + 80)
            + ((v31 + ((v30 + 16 + ((v17 + 8 + ((v17 + 1 + v11) & ~v11)) & 0xFFFFFFFFFFFFFFF8)) & ~v30) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))) & ~v32)
        + 8) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  if (v24 < a3)
  {
    if (v33 <= 3)
      v34 = ((a3 - v24 + 255) >> (8 * v33)) + 1;
    else
      v34 = 2;
    if (v34 >= 0x10000)
      v35 = 4;
    else
      v35 = 2;
    if (v34 < 0x100)
      v35 = 1;
    if (v34 >= 2)
      v27 = v35;
    else
      v27 = 0;
  }
  if (v24 < a2)
  {
    if (v33 >= 4)
      v36 = ~v24 + a2;
    else
      v36 = (~(_BYTE)v24 + a2);
    bzero(a1, v33);
    if ((_DWORD)v33 == 1)
      *a1 = v36;
    else
      *(_DWORD *)a1 = v36;
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

void sub_2210950F0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x221095268);
}

void sub_2210950F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_DWORD *)(v7 + v8) = 0;
  if (a7)
    JUMPOUT(0x221095100);
  JUMPOUT(0x221095268);
}

void sub_22109517C()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x221095268);
}

void sub_221095184()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x221095268);
}

uint64_t sub_22109518C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, int a3@<W8>)
{
  size_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;

  *(_WORD *)((char *)v9 + v11) = 0;
  if (!(_DWORD)a2)
    goto LABEL_8;
  if (v8 >= v10)
  {
    v4 = v6 + (a3 & 0xFFFFFFF8);
    if (v8 >= a2 && (int)a2 + 1 <= v13)
      JUMPOUT(0x221095198);
    if ((_DWORD)v4)
    {
      v5 = a2 - v13;
      bzero(v9, v4);
      *v9 = v5;
    }
LABEL_8:
    JUMPOUT(0x221095268);
  }
  return __swift_storeEnumTagSinglePayload(((unint64_t)v9 + v7) & a1, a2, v10, v12);
}

void sub_221095244()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x221095268);
}

void sub_221095288()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x221095268);
}

void sub_221095290()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x221095268);
}

void sub_2210952A0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x221095268);
}

uint64_t type metadata accessor for LargeProductView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LargeProductView);
}

uint64_t sub_2210952B8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2210952EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ProductViewIconWrapper(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  OUTLINED_FUNCTION_5_2();
}

void sub_221095330(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = v1;
  *(_QWORD *)(v2 - 88) = a1;
  OUTLINED_FUNCTION_12_11();
}

uint64_t sub_221095344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t);
  _BYTE v17[96];

  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_4_15();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657D10);
  OUTLINED_FUNCTION_14_2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556596F8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657D58);
  OUTLINED_FUNCTION_6_11();
  v1 = OUTLINED_FUNCTION_10_10();
  MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v1);
  v2 = sub_2212F4830();
  *(_QWORD *)(v0 - 160) = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v17[-v3];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657CE8);
  v5 = sub_2212F3348();
  *(_QWORD *)(v0 - 152) = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = &v17[-v10];
  if (qword_255655C38 != -1)
    v9 = swift_once();
  MEMORY[0x24BDAC7A8](v9);
  v12 = *(_QWORD *)(v0 - 144);
  *(_QWORD *)&v17[-32] = *(_QWORD *)(v0 - 136);
  *(_QWORD *)&v17[-24] = v12;
  *(_QWORD *)&v17[-16] = *(_QWORD *)(v0 - 128);
  sub_221074860();
  sub_2212F4824();
  v13 = MEMORY[0x22766BAC4](MEMORY[0x24BDF4700], v2);
  sub_2212F4374();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v0 - 160) + 8))(v4, v2);
  sub_221017AD4(&qword_255657CE0, &qword_255657CE8, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v0 - 112) = v13;
  *(_QWORD *)(v0 - 104) = v14;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v5, v0 - 112);
  sub_221088D68((uint64_t)v8, v5, (uint64_t)v11);
  v15 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v0 - 152) + 8);
  v15(v8, v5);
  sub_221087210((uint64_t)v11, v5, *(_QWORD *)(v0 - 120));
  return ((uint64_t (*)(_BYTE *, uint64_t))v15)(v11, v5);
}

uint64_t sub_2210955EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t OpaqueTypeConformance2;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(_QWORD, _QWORD);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t (*v87)(char *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  void (*v99)(_QWORD, _QWORD);
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[3];
  uint64_t v134;
  char *v135;
  uint64_t v136;
  _QWORD v137[2];
  _QWORD v138[2];
  _QWORD v139[2];
  _OWORD v140[5];
  uint64_t v141;
  __int16 v142;

  v120 = a1;
  v112 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657D50);
  MEMORY[0x24BDAC7A8](v6);
  v118 = (uint64_t)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657D58);
  v8 = MEMORY[0x24BDAC7A8](v115);
  v117 = (uint64_t)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v111 = (uint64_t *)((char *)&v89 - v11);
  MEMORY[0x24BDAC7A8](v10);
  v116 = (uint64_t)&v89 - v12;
  v13 = sub_2212F3D2C();
  v107 = *(_QWORD *)(v13 - 8);
  v108 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v106 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659700);
  MEMORY[0x24BDAC7A8](v121);
  v105 = (uint64_t *)((char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556596F8);
  v123 = *(_QWORD *)(v114 - 8);
  v16 = MEMORY[0x24BDAC7A8](v114);
  v113 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v102 = (char *)&v89 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v122 = (char *)&v89 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657C88);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v104 = (uint64_t)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v89 - v24;
  v100 = sub_2212F33F0();
  v92 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v27 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for ProductViewIconWrapper(0, a2, a3, v28);
  v89 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v89 - v30;
  v32 = MEMORY[0x22766BAC4](&unk_221304C28, v29);
  *(_QWORD *)&v140[0] = v29;
  *((_QWORD *)&v140[0] + 1) = v32;
  v90 = v32;
  v33 = MEMORY[0x22766BA58](0, v140, MEMORY[0x24BDF3948], 0);
  v93 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v91 = (char *)&v89 - v34;
  v35 = sub_2212F3348();
  v96 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v94 = (char *)&v89 - v36;
  v37 = sub_2212F3348();
  v98 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v95 = (char *)&v89 - v38;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657D10);
  v99 = (void (*)(_QWORD, _QWORD))v37;
  v119 = sub_2212F3348();
  v101 = *(_QWORD *)(v119 - 8);
  v39 = MEMORY[0x24BDAC7A8](v119);
  v103 = (char *)&v89 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v97 = (char *)&v89 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v124 = (uint64_t)&v89 - v43;
  v125 = a2;
  v126 = a3;
  v44 = v120;
  v127 = v120;
  v109 = a2;
  v110 = a3;
  sub_2210DD8B4((uint64_t (*)(uint64_t))sub_221096560, a2, a3, (uint64_t)v31);
  sub_221084AD0(v44, (uint64_t)v25, &qword_255657C88);
  v45 = type metadata accessor for ProductViewConfiguration(0);
  LODWORD(a3) = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, v45);
  sub_221014F5C((uint64_t)v25, &qword_255657C88);
  if ((_DWORD)a3 == 1)
  {
    sub_2212F33E4();
    v46 = v100;
  }
  else
  {
    *(_QWORD *)&v140[0] = MEMORY[0x24BEE4AF8];
    sub_2210965B4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255657D40);
    sub_221017AD4(&qword_255657D48, &qword_255657D40, MEMORY[0x24BEE12C8]);
    v47 = v100;
    sub_2212F58E0();
    v46 = v47;
  }
  v100 = v45;
  v48 = v90;
  v49 = v91;
  sub_2212F4524();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v27, v46);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v31, v29);
  v140[0] = xmmword_2212FD660;
  v140[1] = xmmword_2212FD660;
  v140[2] = xmmword_2212FD660;
  v140[3] = xmmword_221301260;
  v140[4] = xmmword_221301270;
  v141 = 0x4061800000000000;
  v142 = 0;
  v134 = v29;
  v135 = (char *)v48;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v51 = sub_221052CB4(v33, OpaqueTypeConformance2);
  v52 = v94;
  sub_2210C1E00((uint64_t)v140, v51, v53, v33, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v49, v33);
  v54 = v101;
  if (qword_255655B30 != -1)
    swift_once();
  v55 = sub_221052360();
  v139[0] = OpaqueTypeConformance2;
  v139[1] = v55;
  v56 = MEMORY[0x24BDED308];
  v57 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v35, v139);
  v58 = v95;
  sub_2212F4170();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v52, v35);
  v138[0] = v57;
  v138[1] = MEMORY[0x24BDEEC40];
  v59 = v99;
  v60 = MEMORY[0x22766BAC4](v56, v99, v138);
  v61 = (uint64_t)v97;
  sub_2212F4248();
  (*(void (**)(char *, _QWORD))(v98 + 8))(v58, v59);
  sub_221017AD4(&qword_255657D08, &qword_255657D10, MEMORY[0x24BDEFB48]);
  v137[0] = v60;
  v137[1] = v62;
  v63 = v119;
  v98 = MEMORY[0x22766BAC4](v56, v119, v137);
  sub_221088D68(v61, v63, v124);
  v99 = *(void (**)(_QWORD, _QWORD))(v54 + 8);
  v99(v61, v63);
  v64 = sub_2212F38E8();
  v65 = (uint64_t)v105;
  *v105 = v64;
  *(_QWORD *)(v65 + 8) = 0x4010000000000000;
  *(_BYTE *)(v65 + 16) = 0;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659708);
  v67 = v120;
  sub_2210960A8(v120, v109, v110, v65 + *(int *)(v66 + 44));
  v68 = v106;
  sub_2212F3D14();
  sub_221017AD4(&qword_255659710, &qword_255659700, MEMORY[0x24BDF4700]);
  v69 = v102;
  v110 = v70;
  sub_2212F4308();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v68, v108);
  sub_221014F5C(v65, &qword_255659700);
  v71 = v114;
  (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v122, v69, v114);
  v72 = v104;
  sub_221084AD0(v67, v104, &qword_255657C88);
  v73 = v100;
  if (__swift_getEnumTagSinglePayload(v72, 1, v100) == 1)
  {
    sub_221014F5C(v72, &qword_255657C88);
    v74 = 1;
  }
  else
  {
    sub_221036990(v72 + *(int *)(v73 + 24), v118, type metadata accessor for ProductViewButtonConfiguration);
    sub_221011A28(v72, type metadata accessor for ProductViewConfiguration);
    v74 = 0;
  }
  v75 = type metadata accessor for ProductViewButtonConfiguration(0);
  v76 = v118;
  __swift_storeEnumTagSinglePayload(v118, v74, 1, v75);
  v77 = v111;
  sub_221130FBC(v76, v111);
  v78 = v116;
  sub_22109656C((uint64_t)v77, v116);
  v79 = v103;
  v80 = v119;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v103, v124, v119);
  v134 = (uint64_t)v79;
  v81 = v122;
  v82 = v123;
  v83 = v113;
  (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v113, v122, v71);
  v135 = v83;
  v84 = v117;
  sub_221084AD0(v78, v117, &qword_255657D58);
  v136 = v84;
  v133[0] = v80;
  v133[1] = v71;
  v133[2] = v115;
  v128 = v121;
  v129 = v110;
  v130 = v98;
  v131 = swift_getOpaqueTypeConformance2();
  sub_221017AD4(&qword_255659718, &qword_255657D58, (uint64_t)&unk_221308AF8);
  v132 = v85;
  sub_22122F0B4((uint64_t)&v134, 3, (uint64_t)v133);
  sub_221014F5C(v78, &qword_255657D58);
  v86 = *(void (**)(char *, uint64_t))(v82 + 8);
  v86(v81, v71);
  v87 = (uint64_t (*)(char *, uint64_t))v99;
  v99(v124, v80);
  sub_221014F5C(v84, &qword_255657D58);
  v86(v83, v71);
  return v87(v79, v80);
}

uint64_t sub_221095FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LargeProductView(0, v9, v10, v11);
  sub_221088D68(a1 + *(int *)(v12 + 36), a2, (uint64_t)v8);
  sub_221087210((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

void sub_2210960A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE v59[89];
  char v60;

  v54 = a2;
  v55 = a3;
  v57 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657D78);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v58 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v51 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657C88);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v53 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v51 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (uint64_t *)((char *)&v51 - v16);
  v56 = type metadata accessor for ProductViewText(0);
  v18 = MEMORY[0x24BDAC7A8](v56);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v52 = (uint64_t)&v51 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v51 = (uint64_t)&v51 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v51 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v51 - v28;
  sub_221084AD0(a1, (uint64_t)v17, &qword_255657C88);
  v30 = type metadata accessor for ProductViewConfiguration(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v30) == 1)
  {
    sub_221014F5C((uint64_t)v17, &qword_255657C88);
    v31 = 0;
    v32 = 0;
  }
  else
  {
    v31 = *v17;
    v32 = v17[1];
    swift_bridgeObjectRetain();
    sub_221011A28((uint64_t)v17, type metadata accessor for ProductViewConfiguration);
  }
  memset(v59, 0, sizeof(v59));
  v33 = 1;
  v60 = 1;
  sub_22110A34C(v31, v32, 0, 1, 0, (uint64_t)v59, 0, 0, (uint64_t)v27);
  sub_2210529C8((uint64_t)v27, (uint64_t)v29);
  v35 = a1 + *(int *)(type metadata accessor for LargeProductView(0, v54, v55, v34) + 44);
  v36 = *(_QWORD *)v35;
  v37 = *(_BYTE *)(v35 + 8);
  sub_221017C08(*(_QWORD *)v35, v37);
  sub_22104359C();
  v39 = v38;
  sub_221017894(v36, v37);
  if ((v39 & 1) != 0)
  {
    sub_221084AD0(a1, (uint64_t)v15, &qword_255657C88);
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v30) == 1)
    {
      sub_221014F5C((uint64_t)v15, &qword_255657C88);
    }
    else
    {
      v40 = *((_QWORD *)v15 + 2);
      v41 = *((_QWORD *)v15 + 3);
      swift_bridgeObjectRetain();
      sub_221011A28((uint64_t)v15, type metadata accessor for ProductViewConfiguration);
      LOBYTE(v40) = sub_2212251F8(v40, v41);
      swift_bridgeObjectRelease();
      if ((v40 & 1) != 0)
        goto LABEL_12;
    }
    v42 = a1;
    v43 = v53;
    sub_221084AD0(v42, v53, &qword_255657C88);
    if (__swift_getEnumTagSinglePayload(v43, 1, v30) == 1)
    {
      sub_221014F5C(v43, &qword_255657C88);
      v44 = 0;
      v45 = 0;
    }
    else
    {
      v44 = *(_QWORD *)(v43 + 16);
      v45 = *(_QWORD *)(v43 + 24);
      swift_bridgeObjectRetain();
      sub_221011A28(v43, type metadata accessor for ProductViewConfiguration);
    }
    v46 = v52;
    sub_22110A34C(v44, v45, 1, 1, 0, (uint64_t)v59, 0, 0, v52);
    v47 = v51;
    sub_2210529C8(v46, v51);
    sub_2210529C8(v47, (uint64_t)v9);
    v33 = 0;
  }
LABEL_12:
  __swift_storeEnumTagSinglePayload((uint64_t)v9, v33, 1, v56);
  sub_221036990((uint64_t)v29, (uint64_t)v20, type metadata accessor for ProductViewText);
  v48 = v58;
  sub_221084AD0((uint64_t)v9, v58, &qword_255657D78);
  v49 = v57;
  sub_221036990((uint64_t)v20, v57, type metadata accessor for ProductViewText);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659720);
  sub_221084AD0(v48, v49 + *(int *)(v50 + 48), &qword_255657D78);
  sub_221014F5C((uint64_t)v9, &qword_255657D78);
  sub_221011A28((uint64_t)v29, type metadata accessor for ProductViewText);
  sub_221014F5C(v48, &qword_255657D78);
  sub_221011A28((uint64_t)v20, type metadata accessor for ProductViewText);
}

uint64_t sub_221096554@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2210955EC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_221096560@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_221095FFC(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_22109656C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657D58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2210965B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255657D38;
  if (!qword_255657D38)
  {
    v1 = sub_2212F33F0();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED950], v1);
    atomic_store(result, (unint64_t *)&qword_255657D38);
  }
  return result;
}

void sub_2210965F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ProductViewIconWrapper(255, *a1, a1[1], a4);
  OUTLINED_FUNCTION_5_2();
}

void sub_221096624()
{
  OUTLINED_FUNCTION_12_11();
}

void sub_221096638()
{
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_4_15();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657D10);
  OUTLINED_FUNCTION_14_2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556596F8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657D58);
  OUTLINED_FUNCTION_6_11();
  OUTLINED_FUNCTION_10_10();
  OUTLINED_FUNCTION_5_2();
}

void sub_2210966B4()
{
  sub_2212F4830();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657CE8);
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_5_2();
}

uint64_t sub_2210966EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD v6[10];

  sub_221017AD4(&qword_255657CE0, v1, MEMORY[0x24BDF1028]);
  v6[0] = a1;
  v6[1] = v4;
  return MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v2, v6);
}

uint64_t OUTLINED_FUNCTION_4_15()
{
  return sub_2212F3348();
}

uint64_t OUTLINED_FUNCTION_6_11()
{
  return swift_getTupleTypeMetadata3();
}

void SubscriptionStoreButton.init(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = (int *)OUTLINED_FUNCTION_7_9();
  v5 = a2 + v4[5];
  *(_BYTE *)(v5 + 48) = 0;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)v5 = 0u;
  v6 = a2 + v4[6];
  *(_QWORD *)v6 = swift_getKeyPath();
  *(_QWORD *)(v6 + 8) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_WORD *)(v6 + 32) = 0;
  v7 = a2 + v4[7];
  *(_QWORD *)v7 = swift_getKeyPath();
  *(_OWORD *)(v7 + 8) = 0u;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_WORD *)(v7 + 72) = 0;
  v8 = a2 + v4[8];
  *(_QWORD *)v8 = swift_getKeyPath();
  *(_BYTE *)(v8 + 8) = 0;
  v9 = a2 + v4[9];
  *(_QWORD *)v9 = swift_getKeyPath();
  *(_BYTE *)(v9 + 8) = 0;
  sub_221015318(a1, a2, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  OUTLINED_FUNCTION_17_0();
}

uint64_t type metadata accessor for SubscriptionStoreButton()
{
  uint64_t result;

  result = qword_2556597A0;
  if (!qword_2556597A0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_221096864(uint64_t a1@<X8>)
{
  char v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  char v7;

  sub_2212BCA20();
  *(_BYTE *)a1 = v2;
  *(_OWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 72) = v7;
  OUTLINED_FUNCTION_13_15();
}

void sub_2210968C0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BYTE v10[8];
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v2 = *(_QWORD *)(a1 + 8);
  v1 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_BYTE *)(a1 + 72);
  v10[0] = *(_BYTE *)a1;
  v11 = v2;
  v12 = v1;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = v7;
  v18 = v8;
  v19 = v9;
  sub_221046F24(v2, v1, v3, v4, v5, v6);
  sub_2212BCA54((uint64_t)v10);
  OUTLINED_FUNCTION_13_15();
}

void sub_221096920()
{
  _BOOL8 v0;

  v0 = OUTLINED_FUNCTION_16_10();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_22109693C()
{
  _BOOL8 v0;

  v0 = OUTLINED_FUNCTION_16_10();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_221096958()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_17_12();
  OUTLINED_FUNCTION_6_0();
}

void sub_221096974()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_17_12();
  OUTLINED_FUNCTION_6_0();
}

void sub_221096990()
{
  swift_bridgeObjectRetain();
  sub_2211FBDD0();
  OUTLINED_FUNCTION_6_0();
}

double sub_2210969B8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  BOOL v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int *v25;
  uint64_t v26;
  double result;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38[5];
  uint64_t v39[5];
  _BYTE v40[16];
  uint64_t v41;
  _QWORD v42[2];
  unint64_t v43;
  _BYTE __dst[80];
  _OWORD v45[2];
  __int16 v46;
  _BYTE v47[40];

  v2 = v1;
  v4 = type metadata accessor for SubscriptionStoreControlOption(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221014EB4(v1, (uint64_t)v6, type metadata accessor for SubscriptionStoreControlOption);
  v10 = type metadata accessor for SubscriptionStoreButton();
  v11 = v1 + *(int *)(v10 + 24);
  v46 = *(_WORD *)(v11 + 32);
  v12 = *(_OWORD *)(v11 + 16);
  v45[0] = *(_OWORD *)v11;
  v45[1] = v12;
  sub_221015090((uint64_t)v45, (uint64_t)v47, &qword_255657978);
  sub_22109ACAC((uint64_t)v47);
  sub_221043DC4();
  sub_22109ACAC((uint64_t)v45);
  sub_221276FC0();
  sub_22109ACAC((uint64_t)v47);
  sub_221043DC4();
  sub_22109ACAC((uint64_t)v45);
  sub_221015090((uint64_t)v38, (uint64_t)v42, &qword_2556573F8);
  v13 = v43;
  if (v43 == 1)
    v14 = 0;
  else
    v14 = v42[1];
  v15 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
  if (v13 >= 2)
  {
    if (v14 == v15 && v13 == v16)
    {
      swift_bridgeObjectRelease();
      sub_221043EC0(v38);
      v17 = 1;
    }
    else
    {
      v17 = sub_2212F5CDC();
      swift_bridgeObjectRelease();
      sub_221043EC0(v38);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = 0;
  }
  sub_22109ACAC((uint64_t)v47);
  sub_221043DC4();
  sub_22109ACAC((uint64_t)v45);
  sub_221015090((uint64_t)v39, (uint64_t)v40, &qword_2556573F8);
  if (v41 == 1)
  {
    v19 = 0;
  }
  else
  {
    v20 = v40[0];
    sub_221043EC0(v39);
    v19 = (v20 & 1) == 0;
  }
  memcpy(__dst, (const void *)(v2 + *(int *)(v10 + 28)), 0x4AuLL);
  sub_22109A9EC((uint64_t)__dst);
  sub_2210452E8();
  sub_22109A9EC((uint64_t)__dst);
  v21 = v31;
  v29 = v33;
  v30 = v32;
  v28 = v34;
  v22 = v35;
  v23 = v36;
  v24 = v37;
  sub_221015318((uint64_t)v9, a1, type metadata accessor for SubscriptionStoreCopyWriter);
  v25 = (int *)type metadata accessor for SubscriptionOptionButtonModel();
  *(_BYTE *)(a1 + v25[5]) = v17 & 1;
  *(_BYTE *)(a1 + v25[6]) = v19;
  v26 = a1 + v25[7];
  *(_BYTE *)v26 = v21;
  *(_OWORD *)(v26 + 8) = v30;
  *(_OWORD *)(v26 + 24) = v29;
  result = *(double *)&v28;
  *(_OWORD *)(v26 + 40) = v28;
  *(_QWORD *)(v26 + 56) = v22;
  *(_QWORD *)(v26 + 64) = v23;
  *(_BYTE *)(v26 + 72) = v24;
  return result;
}

uint64_t sub_221096CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  char v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  os_log_type_t v164;
  NSObject *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  int *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t *v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  int *v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  char *v209;
  uint64_t v210;
  BOOL v211;
  char v212;
  void (*v213)(char *, uint64_t);
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char v218;
  uint64_t v219;
  void (*v220)(char *, uint64_t);
  uint64_t v221;
  char v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  void (*v242)(char *, uint64_t);
  char *v243;
  uint64_t v244;
  _QWORD *v245;
  void (*v246)(char *, uint64_t, uint64_t);
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  int v261;
  uint64_t v262;
  uint64_t v263;
  _QWORD *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  void (*v270)(char *, uint64_t, uint64_t);
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _QWORD *v288;
  uint64_t *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  void (*v297)(char *, uint64_t);
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char v306;
  char v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  uint64_t v316;
  uint64_t v317;
  _QWORD *v318;
  uint64_t *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  void (*v327)(char *, uint64_t);
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  int EnumTagSinglePayload;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  void (*v356)(char *, uint64_t);
  char *v357;
  uint64_t v358;
  _QWORD *v359;
  void (*v360)(char *, uint64_t, uint64_t);
  char *v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  char *v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  int v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  _QWORD *v377;
  uint64_t v378;
  uint64_t v379;
  void (*v380)(char *, uint64_t, uint64_t);
  char *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  int *v389;
  char *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  char *v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t *v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  char *v416;
  uint64_t v417;
  uint64_t v418;
  int v419;
  uint64_t v420;
  char *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  _QWORD *v425;
  uint64_t *v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  unint64_t v442;
  unint64_t v443;
  char v445;
  _QWORD v446[2];
  char *v447;
  unint64_t v448;
  unint64_t v449;
  char *v450;
  unint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  char *v457;
  uint64_t v458;
  _QWORD *v459;
  char *v460;
  uint64_t v461;
  uint64_t v462;
  char *v463;
  unint64_t v464;
  uint64_t *v465;
  uint64_t v466;
  uint64_t v467;
  char *v468;
  _QWORD *v469;
  char *v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  char *v476;
  uint64_t v477;
  _QWORD *v478;
  char *v479;
  char *v480;
  uint64_t v481;
  unint64_t v482;
  __int128 v483;
  uint64_t v484;
  uint64_t v485;
  char *v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  char *v490;
  char *v491;
  uint64_t v492;
  char *v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  char *v497;
  char *v498;
  char *v499;
  char *v500;
  uint64_t v501;
  char *v502;
  uint64_t v503;
  char *v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  char *v509;
  char *v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  char *v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  char *v524;
  char *v525;
  char *v526;
  char *v527;
  uint64_t v528;
  char *v529;
  uint64_t *v530;
  char *v531;
  uint64_t v532;
  uint64_t v533;
  char *v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  int *v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  char v551;
  uint64_t v552;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659808);
  MEMORY[0x24BDAC7A8](v1);
  v528 = (uint64_t)v446 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v492 = sub_2212F5058();
  v487 = *(_QWORD *)(v492 - 8);
  v3 = MEMORY[0x24BDAC7A8](v492);
  v491 = (char *)v446 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v490 = (char *)v446 - v5;
  v6 = sub_2212F3840();
  MEMORY[0x24BDAC7A8](v6);
  v480 = (char *)v446 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v511 = _s22LocalizedPriceResourceV6FormatOMa(0);
  MEMORY[0x24BDAC7A8](v511);
  v465 = (_QWORD *)((char *)v446 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v532 = _s11PriceStringOMa(0);
  v9 = MEMORY[0x24BDAC7A8](v532);
  v500 = (char *)v446 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v501 = (uint64_t)v446 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v497 = (char *)v446 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v496 = (uint64_t)v446 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v476 = (char *)v446 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v477 = (uint64_t)v446 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v470 = (char *)v446 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v475 = (uint64_t)v446 - v23;
  v24 = sub_2212F5124();
  v512 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v486 = (char *)v446 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v479 = (char *)v446 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v463 = (char *)v446 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v460 = (char *)v446 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v498 = (char *)v446 - v33;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v510 = (char *)v446 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v485 = (uint64_t)v446 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v495 = (uint64_t)v446 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v466 = (uint64_t)v446 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v484 = (uint64_t)v446 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v493 = (char *)v446 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v462 = (uint64_t)v446 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v474 = (uint64_t)v446 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v453 = (uint64_t)v446 - v52;
  MEMORY[0x24BDAC7A8](v51);
  v461 = (uint64_t)v446 - v53;
  v543 = sub_2212F50D0();
  v536 = *(_QWORD *)(v543 - 8);
  v54 = MEMORY[0x24BDAC7A8](v543);
  v531 = (char *)v446 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x24BDAC7A8](v54);
  v58 = (char *)v446 - v57;
  v59 = MEMORY[0x24BDAC7A8](v56);
  v61 = (char *)v446 - v60;
  v62 = MEMORY[0x24BDAC7A8](v59);
  v502 = (char *)v446 - v63;
  v64 = MEMORY[0x24BDAC7A8](v62);
  v529 = (char *)v446 - v65;
  v66 = MEMORY[0x24BDAC7A8](v64);
  v468 = (char *)v446 - v67;
  MEMORY[0x24BDAC7A8](v66);
  v499 = (char *)v446 - v68;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659818);
  v70 = MEMORY[0x24BDAC7A8](v69);
  v527 = (char *)v446 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = MEMORY[0x24BDAC7A8](v70);
  v478 = (_QWORD *)((char *)v446 - v73);
  v74 = MEMORY[0x24BDAC7A8](v72);
  v509 = (char *)v446 - v75;
  v76 = MEMORY[0x24BDAC7A8](v74);
  v525 = (char *)v446 - v77;
  v78 = MEMORY[0x24BDAC7A8](v76);
  v459 = (_QWORD *)((char *)v446 - v79);
  MEMORY[0x24BDAC7A8](v78);
  v469 = (_QWORD *)((char *)v446 - v80);
  v533 = _s22LocalizedPriceResourceVMa(0);
  v81 = MEMORY[0x24BDAC7A8](v533);
  v473 = (uint64_t)v446 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = MEMORY[0x24BDAC7A8](v81);
  v458 = (uint64_t)v446 - v84;
  v85 = MEMORY[0x24BDAC7A8](v83);
  v472 = (uint64_t)v446 - v86;
  v87 = MEMORY[0x24BDAC7A8](v85);
  v456 = (uint64_t)v446 - v88;
  v89 = MEMORY[0x24BDAC7A8](v87);
  v452 = (uint64_t)v446 - v90;
  MEMORY[0x24BDAC7A8](v89);
  v455 = (uint64_t)v446 - v91;
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
  v93 = MEMORY[0x24BDAC7A8](v92);
  v526 = (char *)v446 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = MEMORY[0x24BDAC7A8](v93);
  v471 = (uint64_t)v446 - v96;
  v97 = MEMORY[0x24BDAC7A8](v95);
  v494 = (uint64_t)v446 - v98;
  v99 = MEMORY[0x24BDAC7A8](v97);
  v508 = (uint64_t)v446 - v100;
  v101 = MEMORY[0x24BDAC7A8](v99);
  v507 = (uint64_t)v446 - v102;
  v103 = MEMORY[0x24BDAC7A8](v101);
  v503 = (uint64_t)v446 - v104;
  v105 = MEMORY[0x24BDAC7A8](v103);
  v524 = (char *)v446 - v106;
  v107 = MEMORY[0x24BDAC7A8](v105);
  v454 = (uint64_t)v446 - v108;
  v109 = MEMORY[0x24BDAC7A8](v107);
  v467 = (uint64_t)v446 - v110;
  v111 = MEMORY[0x24BDAC7A8](v109);
  v489 = (uint64_t)v446 - v112;
  MEMORY[0x24BDAC7A8](v111);
  v488 = (uint64_t)v446 - v113;
  v506 = sub_2212F3774();
  v505 = *(_QWORD *)(v506 - 8);
  MEMORY[0x24BDAC7A8](v506);
  v504 = (char *)v446 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0);
  v523 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  MEMORY[0x24BDAC7A8](v523);
  v530 = (_QWORD *)((char *)v446 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0));
  v539 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  v116 = *((_QWORD *)v539 - 1);
  MEMORY[0x24BDAC7A8](v539);
  v541 = (uint64_t)v446 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0);
  v522 = type metadata accessor for SubscriptionPickerSubscribeButtonModel();
  v118 = MEMORY[0x24BDAC7A8](v522);
  v542 = (uint64_t)v446 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v118);
  v540 = (uint64_t)v446 - v120;
  v521 = __swift_instantiateConcreteTypeFromMangledName(&qword_255658AE8);
  v520 = *(_QWORD *)(v521 - 8);
  MEMORY[0x24BDAC7A8](v521);
  v534 = (char *)v446 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for SubscriptionStoreButton();
  v123 = MEMORY[0x24BDAC7A8](v122);
  v125 = (char *)v446 - ((v124 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = v0 + *(int *)(v123 + 32);
  v127 = *(_QWORD *)v126;
  v128 = *(_BYTE *)(v126 + 8);
  sub_221017C08(*(_QWORD *)v126, v128);
  sub_22104359C();
  v130 = v129;
  sub_221017894(v127, v128);
  v131 = MEMORY[0x24BEE4AF8];
  if ((v130 & 1) != 0)
  {
    v132 = v0 + *(int *)(v122 + 36);
    v133 = *(_QWORD *)v132;
    v134 = *(_BYTE *)(v132 + 8);
    sub_221066D38(*(_QWORD *)v132, v134);
    sub_221045458();
    v135 = v134;
    v137 = v136;
    sub_2210470E0(v133, v135);
    sub_221014EB4(v0, (uint64_t)v125, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionStoreButton);
    v138 = *(_QWORD *)(v137 + 16);
    if (v138)
    {
      v535 = v24;
      v552 = v131;
      v538 = v138;
      sub_221149D08(0, v138, 0);
      v139 = *(int *)(v122 + 28);
      v447 = v125;
      v519 = &v125[v139];
      v140 = (*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
      v446[1] = v137;
      v141 = v137 + v140;
      v518 = *(_QWORD *)(v116 + 72);
      v448 = 0x80000002212F84C0;
      v451 = 0x80000002212F84A0;
      v464 = 0x80000002212F84E0;
      v449 = 0x80000002212F8480;
      *(_QWORD *)&v142 = 136315138;
      v483 = v142;
      v482 = 0x80000002212F79A0;
      v481 = MEMORY[0x24BEE4AD8] + 8;
      v457 = v61;
      v143 = (uint64_t)v534;
      v450 = v58;
      while (1)
      {
        v537 = v141;
        v144 = v541;
        sub_221014EB4(v141, v541, type metadata accessor for SubscriptionStoreCopyWriter);
        sub_221014EB4(v144, v540, type metadata accessor for SubscriptionStoreCopyWriter);
        v146 = *(_QWORD *)v519;
        v145 = *((_QWORD *)v519 + 1);
        v148 = *((_QWORD *)v519 + 2);
        v147 = *((_QWORD *)v519 + 3);
        v150 = *((_QWORD *)v519 + 4);
        v149 = *((_QWORD *)v519 + 5);
        v151 = *((_QWORD *)v519 + 6);
        v152 = *((_QWORD *)v519 + 7);
        v153 = *((_QWORD *)v519 + 8);
        v154 = v519[72];
        if (v519[73] == 1)
        {
          LOBYTE(v546) = *(_QWORD *)v519;
          *(_QWORD *)&v547 = v145;
          *((_QWORD *)&v547 + 1) = v148;
          *(_QWORD *)&v548 = v147;
          *((_QWORD *)&v548 + 1) = v150;
          *(_QWORD *)&v549 = v149;
          *((_QWORD *)&v549 + 1) = v151;
          *(_QWORD *)&v550 = v152;
          *((_QWORD *)&v550 + 1) = v153;
          v551 = v154 & 1;
          sub_221046EF0(v146, v145, v148, v147, v150, v149, v151, v152, v153, v154, 1);
        }
        else
        {
          v155 = *((_QWORD *)v519 + 6);
          sub_221046EF0(v146, v145, v148, v147, v150, v149, v151, v152, v153, v154, 0);
          v516 = v153;
          v514 = v145;
          v156 = v145;
          v157 = v148;
          v158 = v148;
          v159 = v147;
          v515 = v150;
          v160 = v150;
          v161 = v149;
          v162 = v149;
          v163 = v155;
          v517 = v152;
          sub_221046EF0(v146, v156, v158, v147, v160, v162, v155, v152, v153, v154, 0);
          v164 = sub_2212F57F0();
          v165 = sub_2212F3E88();
          if (os_log_type_enabled(v165, v164))
          {
            v166 = swift_slowAlloc();
            v167 = swift_slowAlloc();
            v546 = v167;
            *(_DWORD *)v166 = v483;
            *(_QWORD *)(v166 + 4) = sub_221115C44(0xD00000000000001CLL, v482, &v546);
            _os_log_impl(&dword_221005000, v165, v164, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v166, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x22766BBA8](v167, -1, -1);
            MEMORY[0x22766BBA8](v166, -1, -1);
          }

          v168 = v504;
          sub_2212F3768();
          swift_getAtKeyPath();
          v445 = v154;
          LODWORD(v513) = v154;
          v169 = v516;
          v170 = v514;
          v171 = v515;
          v172 = v517;
          sub_221047014(v146, v514, v157, v159, v515, v161, v163, v517, v516, v445, 0);
          (*(void (**)(char *, uint64_t))(v505 + 8))(v168, v506);
          sub_221047014(v146, v170, v157, v159, v171, v161, v163, v172, v169, v513, 0);
          v143 = (uint64_t)v534;
        }
        v173 = v551;
        v174 = v522;
        v176 = v540;
        v175 = v541;
        v177 = v540 + *(int *)(v522 + 20);
        *(_BYTE *)v177 = v546;
        *(_OWORD *)(v177 + 8) = v547;
        *(_OWORD *)(v177 + 24) = v548;
        *(_OWORD *)(v177 + 40) = v549;
        *(_OWORD *)(v177 + 56) = v550;
        *(_BYTE *)(v177 + 72) = v173;
        sub_221011A28(v175, type metadata accessor for SubscriptionStoreCopyWriter);
        v178 = v542;
        sub_221015318(v176, v542, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionPickerSubscribeButtonModel);
        v179 = v178 + *(int *)(v174 + 20);
        v180 = *(_QWORD *)(v179 + 16);
        v181 = v536;
        v182 = v529;
        v183 = v525;
        v184 = (uint64_t)v524;
        v185 = v539;
        switch(v180)
        {
          case 0:
          case 2:
            v186 = v503;
            sub_221014FC0(v178 + v539[10], v503, &qword_255656240);
            v187 = v543;
            if (__swift_getEnumTagSinglePayload(v186, 1, v543) == 1)
            {
              sub_221014F5C(v186, &qword_255656240);
              v188 = (uint64_t)v526;
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v181 + 32))(v502, v186, v187);
              v208 = v490;
              sub_2212F5064();
              v209 = v491;
              sub_2212F504C();
              sub_22109C01C();
              v210 = v492;
              sub_2212F5520();
              sub_2212F5520();
              v211 = v546 == v544 && (_QWORD)v547 == v545;
              v188 = (uint64_t)v526;
              if (v211)
              {
                swift_bridgeObjectRelease_n();
                v220 = *(void (**)(char *, uint64_t))(v487 + 8);
                v220(v209, v210);
                v220(v208, v210);
                v214 = v543;
                v215 = v534;
LABEL_29:
                v303 = sub_2212F384C();
                v305 = v221;
                v307 = v222;
                v309 = v223;
                (*(void (**)(char *, uint64_t))(v536 + 8))(v502, v214);
                v143 = (uint64_t)v215;
                goto LABEL_54;
              }
              v212 = sub_2212F5CDC();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v213 = *(void (**)(char *, uint64_t))(v487 + 8);
              v213(v209, v210);
              v213(v208, v210);
              v214 = v543;
              v215 = v534;
              if ((v212 & 1) != 0)
                goto LABEL_29;
              (*(void (**)(char *, uint64_t))(v536 + 8))(v502, v543);
              v143 = (uint64_t)v215;
            }
            v303 = sub_2212F384C();
            v305 = v304;
            v307 = v306;
            v309 = v308;
LABEL_54:
            v310 = v530;
            *v530 = v303;
            v310[1] = v305;
            v196 = v310;
            *((_BYTE *)v310 + 16) = v307 & 1;
            v310[3] = v309;
            v197 = v531;
            v198 = v527;
LABEL_63:
            swift_storeEnumTagMultiPayload();
            sub_221015318((uint64_t)v196, v143, type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
            if (*(_QWORD *)(v179 + 16) != 3)
            {
              v332 = v178 + v185[10];
              v333 = v507;
              sub_221014FC0(v332, v507, &qword_255656240);
              EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v333, 1, v543);
              sub_221014F5C(v333, &qword_255656240);
              v211 = EnumTagSinglePayload == 1;
              v330 = v528;
              v335 = (uint64_t)v510;
              if (v211)
                goto LABEL_73;
              sub_221014FC0(v332, v188, &qword_255656240);
              v336 = v543;
              if (__swift_getEnumTagSinglePayload(v188, 1, v543) == 1)
              {
                v337 = v533;
                __swift_storeEnumTagSinglePayload((uint64_t)v198, 1, 1, v533);
              }
              else
              {
                v338 = v188;
                v339 = v536;
                (*(void (**)(char *, uint64_t, uint64_t))(v536 + 32))(v197, v338, v336);
                v340 = v485;
                sub_221014FC0(v178 + v185[8], v485, &qword_255659810);
                v341 = 1;
                v342 = v340;
                v343 = v535;
                if (__swift_getEnumTagSinglePayload(v342, 1, v535) != 1)
                {
                  v344 = v512;
                  v345 = v498;
                  (*(void (**)(char *, uint64_t, uint64_t))(v512 + 32))(v498, v485, v343);
                  v517 = *(_QWORD *)(v542 + 56);
                  v346 = *(_QWORD *)(v542 + 64);
                  v516 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255657208) + 48);
                  swift_bridgeObjectRetain();
                  v347 = sub_2212F507C();
                  v349 = v348;
                  v350 = _s15PricePropertiesVMa(0);
                  v351 = v465;
                  sub_2212F5064();
                  sub_2212F50B8();
                  v352 = sub_2212F5070();
                  *v351 = v347;
                  v351[1] = v349;
                  v198 = v527;
                  v197 = v531;
                  v353 = *(int *)(v350 + 28);
                  v336 = v543;
                  *(uint64_t *)((char *)v351 + v353) = v352;
                  *((_BYTE *)v351 + v516) = 0;
                  swift_storeEnumTagMultiPayload();
                  *(_QWORD *)v198 = v517;
                  *((_QWORD *)v198 + 1) = v346;
                  v354 = v533;
                  (*(void (**)(char *, char *, uint64_t))(v344 + 16))(&v198[*(int *)(v533 + 20)], v345, v535);
                  v355 = v535;
                  sub_221015318((uint64_t)v351, (uint64_t)&v198[*(int *)(v354 + 24)], _s22LocalizedPriceResourceV6FormatOMa);
                  v356 = *(void (**)(char *, uint64_t))(v344 + 8);
                  v185 = v539;
                  v339 = v536;
                  v357 = v345;
                  v178 = v542;
                  v356(v357, v355);
                  v341 = 0;
                }
                v337 = v533;
                __swift_storeEnumTagSinglePayload((uint64_t)v198, v341, 1, v533);
                (*(void (**)(char *, uint64_t))(v339 + 8))(v197, v336);
                v335 = (uint64_t)v510;
              }
              if (__swift_getEnumTagSinglePayload((uint64_t)v198, 1, v337) == 1)
              {
                sub_221014F5C((uint64_t)v198, &qword_255659818);
LABEL_73:
                sub_221014FC0(v178 + v185[8], v335, &qword_255659810);
                v358 = v535;
                if (__swift_getEnumTagSinglePayload(v335, 1, v535) == 1)
                {
                  sub_221014F5C(v335, &qword_255659810);
                  v359 = v500;
                  sub_221278848();
                }
                else
                {
                  v360 = *(void (**)(char *, uint64_t, uint64_t))(v512 + 32);
                  v361 = v486;
                  v360(v486, v335, v358);
                  v363 = *(_QWORD *)(v178 + 56);
                  v362 = *(_QWORD *)(v178 + 64);
                  v364 = v533;
                  v359 = v500;
                  v365 = v361;
                  v185 = v539;
                  v360(&v500[*(int *)(v533 + 20)], (uint64_t)v365, v358);
                  *((_BYTE *)v359 + *(int *)(v364 + 24)) = 0;
                  swift_storeEnumTagMultiPayload();
                  *v359 = v363;
                  v359[1] = v362;
                  swift_storeEnumTagMultiPayload();
                  swift_bridgeObjectRetain();
                }
                v366 = v509;
                v367 = v501;
                sub_221015318((uint64_t)v359, v501, _s11PriceStringOMa);
                sub_221015318(v367, v330, _s11PriceStringOMa);
              }
              else
              {
                v368 = v473;
                sub_221015318((uint64_t)v198, v473, _s22LocalizedPriceResourceVMa);
                sub_221015318(v368, v330, _s22LocalizedPriceResourceVMa);
                swift_storeEnumTagMultiPayload();
                v366 = v509;
              }
              v369 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
              v370 = v330 + *(int *)(v369 + 20);
              v371 = v508;
              sub_221014FC0(v332, v508, &qword_255656240);
              v372 = v543;
              v373 = __swift_getEnumTagSinglePayload(v371, 1, v543);
              sub_221014F5C(v371, &qword_255656240);
              if (v373 == 1)
              {
LABEL_79:
                v374 = v542;
                v375 = v495;
                sub_221014FC0(v542 + v185[8], v495, &qword_255659810);
                v376 = v535;
                if (__swift_getEnumTagSinglePayload(v375, 1, v535) == 1)
                {
                  sub_221014F5C(v375, &qword_255659810);
                  v377 = v497;
                  sub_221278848();
                  v331 = v537;
                  v143 = (uint64_t)v534;
                }
                else
                {
                  v380 = *(void (**)(char *, uint64_t, uint64_t))(v512 + 32);
                  v381 = v479;
                  v380(v479, v375, v376);
                  v383 = *(_QWORD *)(v374 + 56);
                  v382 = *(_QWORD *)(v374 + 64);
                  v384 = v376;
                  v385 = v533;
                  v377 = v497;
                  v380(&v497[*(int *)(v533 + 20)], (uint64_t)v381, v384);
                  v143 = (uint64_t)v534;
                  *((_BYTE *)v377 + *(int *)(v385 + 24)) = 1;
                  swift_storeEnumTagMultiPayload();
                  *v377 = v383;
                  v377[1] = v382;
                  swift_storeEnumTagMultiPayload();
                  swift_bridgeObjectRetain();
                  v331 = v537;
                }
                v386 = v496;
                sub_221015318((uint64_t)v377, v496, _s11PriceStringOMa);
                sub_221015318(v386, v370, _s11PriceStringOMa);
                v387 = v532;
              }
              else
              {
                v378 = v494;
                sub_221014FC0(v332, v494, &qword_255656240);
                if (__swift_getEnumTagSinglePayload(v378, 1, v372) == 1)
                {
                  v379 = v533;
                  __swift_storeEnumTagSinglePayload((uint64_t)v366, 1, 1, v533);
                }
                else
                {
                  v517 = v369;
                  v388 = v536;
                  v389 = v185;
                  v390 = v457;
                  (*(void (**)(char *, uint64_t, uint64_t))(v536 + 32))(v457, v378, v372);
                  v391 = v542 + v389[8];
                  v392 = v484;
                  sub_221014FC0(v391, v484, &qword_255659810);
                  v393 = 1;
                  if (__swift_getEnumTagSinglePayload(v392, 1, v535) != 1)
                  {
                    v394 = v512;
                    v395 = v498;
                    v396 = v535;
                    (*(void (**)(char *, uint64_t, uint64_t))(v512 + 32))(v498, v484, v535);
                    v397 = *(_QWORD *)(v542 + 64);
                    v516 = *(_QWORD *)(v542 + 56);
                    v515 = v397;
                    v398 = v533;
                    (*(void (**)(char *, char *, uint64_t))(v394 + 16))(&v366[*(int *)(v533 + 20)], v395, v396);
                    v399 = (uint64_t *)&v509[*(int *)(v398 + 24)];
                    v514 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255657208) + 48);
                    swift_bridgeObjectRetain();
                    v400 = sub_2212F507C();
                    v402 = v401;
                    v403 = _s15PricePropertiesVMa(0);
                    sub_2212F5064();
                    sub_2212F50B8();
                    v404 = sub_2212F5070();
                    *v399 = v400;
                    v399[1] = v402;
                    v388 = v536;
                    v405 = *(int *)(v403 + 28);
                    v330 = v528;
                    *(uint64_t *)((char *)v399 + v405) = v404;
                    *((_BYTE *)v399 + v514) = 1;
                    v366 = v509;
                    swift_storeEnumTagMultiPayload();
                    v406 = v515;
                    *(_QWORD *)v366 = v516;
                    *((_QWORD *)v366 + 1) = v406;
                    v372 = v543;
                    (*(void (**)(char *, uint64_t))(v394 + 8))(v498, v535);
                    v393 = 0;
                  }
                  v407 = v393;
                  v379 = v533;
                  __swift_storeEnumTagSinglePayload((uint64_t)v366, v407, 1, v533);
                  (*(void (**)(char *, uint64_t))(v388 + 8))(v390, v372);
                  v185 = v539;
                  v369 = v517;
                }
                if (__swift_getEnumTagSinglePayload((uint64_t)v366, 1, v379) == 1)
                {
                  sub_221014F5C((uint64_t)v366, &qword_255659818);
                  v408 = v471;
                  sub_221014FC0(v332, v471, &qword_255656240);
                  v409 = v543;
                  if (__swift_getEnumTagSinglePayload(v408, 1, v543) == 1)
                  {
                    v410 = (uint64_t)v478;
                    v411 = v533;
                    __swift_storeEnumTagSinglePayload((uint64_t)v478, 1, 1, v533);
                    v412 = v411;
                    v143 = (uint64_t)v534;
                  }
                  else
                  {
                    v517 = v369;
                    v415 = v536;
                    v416 = v450;
                    (*(void (**)(char *, uint64_t, uint64_t))(v536 + 32))(v450, v408, v409);
                    v417 = v466;
                    sub_221014FC0(v542 + v185[8], v466, &qword_255659810);
                    v418 = 1;
                    v419 = __swift_getEnumTagSinglePayload(v417, 1, v535);
                    v143 = (uint64_t)v534;
                    if (v419 != 1)
                    {
                      v420 = v512;
                      v421 = v498;
                      v422 = v535;
                      (*(void (**)(char *, uint64_t, uint64_t))(v512 + 32))(v498, v466, v535);
                      v423 = *(_QWORD *)(v542 + 64);
                      v516 = *(_QWORD *)(v542 + 56);
                      v515 = v423;
                      v424 = v533;
                      v425 = v478;
                      (*(void (**)(uint64_t, char *, uint64_t))(v420 + 16))((uint64_t)v478 + *(int *)(v533 + 20), v421, v422);
                      v426 = (_QWORD *)((char *)v425 + *(int *)(v424 + 24));
                      v427 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255657208) + 48);
                      swift_bridgeObjectRetain();
                      v428 = sub_2212F507C();
                      v430 = v429;
                      v431 = _s15PricePropertiesVMa(0);
                      sub_2212F5064();
                      sub_2212F50B8();
                      v432 = sub_2212F5070();
                      *v426 = v428;
                      v426[1] = v430;
                      v143 = (uint64_t)v534;
                      v433 = v543;
                      v434 = *(int *)(v431 + 28);
                      v185 = v539;
                      v415 = v536;
                      *(uint64_t *)((char *)v426 + v434) = v432;
                      *((_BYTE *)v426 + v427) = 0;
                      v409 = v433;
                      swift_storeEnumTagMultiPayload();
                      v330 = v528;
                      v435 = v515;
                      *v425 = v516;
                      v425[1] = v435;
                      (*(void (**)(char *, uint64_t))(v512 + 8))(v498, v535);
                      v418 = 0;
                    }
                    v436 = (uint64_t)v478;
                    v437 = v418;
                    v438 = v533;
                    __swift_storeEnumTagSinglePayload((uint64_t)v478, v437, 1, v533);
                    (*(void (**)(char *, uint64_t))(v415 + 8))(v416, v409);
                    v412 = v438;
                    v410 = v436;
                    v369 = v517;
                  }
                  if (__swift_getEnumTagSinglePayload(v410, 1, v412) == 1)
                  {
                    sub_221014F5C(v410, &qword_255659818);
                    goto LABEL_79;
                  }
                  v439 = v410;
                  v440 = v458;
                  sub_221015318(v439, v458, _s22LocalizedPriceResourceVMa);
                  sub_221015318(v440, v370, _s22LocalizedPriceResourceVMa);
                  v441 = v532;
                  swift_storeEnumTagMultiPayload();
                  v387 = v441;
                  v331 = v537;
                }
                else
                {
                  v413 = v472;
                  sub_221015318((uint64_t)v366, v472, _s22LocalizedPriceResourceVMa);
                  sub_221015318(v413, v370, _s22LocalizedPriceResourceVMa);
                  v414 = v532;
                  swift_storeEnumTagMultiPayload();
                  v387 = v414;
                  v331 = v537;
                  v143 = (uint64_t)v534;
                }
              }
              __swift_storeEnumTagSinglePayload(v370, 0, 1, v387);
              __swift_storeEnumTagSinglePayload(v330, 0, 1, v369);
              v178 = v542;
              goto LABEL_99;
            }
            v329 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
            v330 = v528;
            __swift_storeEnumTagSinglePayload(v528, 1, 1, v329);
            v331 = v537;
LABEL_99:
            sub_221015090(v330, v143 + *(int *)(v521 + 48), &qword_255659808);
            sub_221011A28(v178, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionPickerSubscribeButtonModel);
            v131 = v552;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_221149D08(0, *(_QWORD *)(v131 + 16) + 1, 1);
              v131 = v552;
            }
            v443 = *(_QWORD *)(v131 + 16);
            v442 = *(_QWORD *)(v131 + 24);
            if (v443 >= v442 >> 1)
            {
              sub_221149D08(v442 > 1, v443 + 1, 1);
              v131 = v552;
            }
            *(_QWORD *)(v131 + 16) = v443 + 1;
            sub_221015090(v143, v131+ ((*(unsigned __int8 *)(v520 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v520 + 80))+ *(_QWORD *)(v520 + 72) * v443, &qword_255658AE8);
            v141 = v331 + v518;
            if (!--v538)
            {
              swift_bridgeObjectRelease();
              v125 = v447;
              goto LABEL_106;
            }
            break;
          case 1:
            v199 = *(_QWORD *)(v178 + v539[9]);
            if ((v199 & 8) != 0 || (v199 & 6) != 0)
            {
              sub_2212F3834();
              sub_2212F3828();
              sub_2212F381C();
              sub_2212F3828();
              v216 = sub_2212F3858();
            }
            else
            {
              swift_bridgeObjectRetain();
              v216 = sub_2212F384C();
            }
            v197 = v531;
            v198 = v527;
            v188 = (uint64_t)v526;
            v196 = v530;
            *v530 = v216;
            v196[1] = v217;
            *((_BYTE *)v196 + 16) = v218 & 1;
            v196[3] = v219;
            goto LABEL_63;
          case 3:
            v517 = v178 + v539[10];
            v200 = v178;
            v201 = v539;
            v202 = v488;
            sub_221014FC0(v517, v488, &qword_255656240);
            v203 = __swift_getEnumTagSinglePayload(v202, 1, v543);
            sub_221014F5C(v202, &qword_255656240);
            v211 = v203 == 1;
            v204 = (uint64_t)v493;
            if (v211)
              goto LABEL_35;
            sub_221014FC0(v517, v184, &qword_255656240);
            v205 = v543;
            if (__swift_getEnumTagSinglePayload(v184, 1, v543) == 1)
            {
              v206 = v533;
              __swift_storeEnumTagSinglePayload((uint64_t)v183, 1, 1, v533);
              v207 = v499;
              v185 = v539;
              v178 = v542;
            }
            else
            {
              v224 = v536;
              (*(void (**)(char *, uint64_t, uint64_t))(v536 + 32))(v182, v184, v205);
              v185 = v539;
              v178 = v542;
              v225 = v462;
              sub_221014FC0(v542 + v539[8], v462, &qword_255659810);
              v226 = 1;
              v227 = v225;
              v228 = v535;
              if (__swift_getEnumTagSinglePayload(v227, 1, v535) != 1)
              {
                v229 = v512;
                v230 = v498;
                (*(void (**)(char *, uint64_t, uint64_t))(v512 + 32))(v498, v462, v228);
                v231 = *(_QWORD *)(v542 + 56);
                v232 = *(_QWORD *)(v542 + 64);
                v516 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255657208) + 48);
                swift_bridgeObjectRetain();
                v233 = sub_2212F507C();
                v235 = v234;
                v236 = _s15PricePropertiesVMa(0);
                v237 = v465;
                sub_2212F5064();
                sub_2212F50B8();
                v238 = sub_2212F5070();
                *v237 = v233;
                v237[1] = v235;
                v183 = v525;
                v182 = v529;
                v239 = *(int *)(v236 + 28);
                v205 = v543;
                *(uint64_t *)((char *)v237 + v239) = v238;
                *((_BYTE *)v237 + v516) = 0;
                swift_storeEnumTagMultiPayload();
                *(_QWORD *)v183 = v231;
                *((_QWORD *)v183 + 1) = v232;
                v240 = v533;
                (*(void (**)(char *, char *, uint64_t))(v229 + 16))(&v183[*(int *)(v533 + 20)], v230, v535);
                v241 = v535;
                sub_221015318((uint64_t)v237, (uint64_t)&v183[*(int *)(v240 + 24)], _s22LocalizedPriceResourceV6FormatOMa);
                v242 = *(void (**)(char *, uint64_t))(v229 + 8);
                v185 = v539;
                v224 = v536;
                v243 = v230;
                v178 = v542;
                v242(v243, v241);
                v226 = 0;
              }
              v206 = v533;
              __swift_storeEnumTagSinglePayload((uint64_t)v183, v226, 1, v533);
              (*(void (**)(char *, uint64_t))(v224 + 8))(v182, v205);
              v204 = (uint64_t)v493;
              v207 = v499;
            }
            if (__swift_getEnumTagSinglePayload((uint64_t)v183, 1, v206) == 1)
            {
              sub_221014F5C((uint64_t)v183, &qword_255659818);
              v200 = v178;
              v201 = v185;
              v143 = (uint64_t)v534;
LABEL_35:
              sub_221014FC0(v200 + v201[8], v204, &qword_255659810);
              v244 = v535;
              if (__swift_getEnumTagSinglePayload(v204, 1, v535) == 1)
              {
                v185 = v201;
                sub_221014F5C(v204, &qword_255659810);
                v245 = v476;
                sub_221278848();
              }
              else
              {
                v246 = *(void (**)(char *, uint64_t, uint64_t))(v512 + 32);
                v247 = v463;
                v246(v463, v204, v244);
                v249 = *(_QWORD *)(v200 + 56);
                v248 = *(_QWORD *)(v200 + 64);
                v250 = v533;
                v251 = v476;
                v252 = v247;
                v185 = v539;
                v246(&v476[*(int *)(v533 + 20)], (uint64_t)v252, v244);
                *(_WORD *)((char *)v251 + *(int *)(v250 + 24)) = 257;
                swift_storeEnumTagMultiPayload();
                *v251 = v249;
                v251[1] = v248;
                swift_storeEnumTagMultiPayload();
                v245 = v251;
                swift_bridgeObjectRetain();
              }
              v207 = v499;
              v188 = (uint64_t)v526;
              v178 = v200;
              v253 = v517;
              v254 = (uint64_t)v245;
              v255 = v477;
              sub_221015318(v254, v477, _s11PriceStringOMa);
              v256 = v255;
              v257 = v530;
              sub_221015318(v256, (uint64_t)v530, _s11PriceStringOMa);
            }
            else
            {
              v258 = v456;
              sub_221015318((uint64_t)v183, v456, _s22LocalizedPriceResourceVMa);
              v259 = v258;
              v257 = v530;
              sub_221015318(v259, (uint64_t)v530, _s22LocalizedPriceResourceVMa);
              swift_storeEnumTagMultiPayload();
              v188 = (uint64_t)v526;
              v143 = (uint64_t)v534;
              v253 = v517;
            }
            v516 = (uint64_t)v257
                 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
            v260 = v489;
            sub_221014FC0(v253, v489, &qword_255656240);
            v261 = __swift_getEnumTagSinglePayload(v260, 1, v543);
            sub_221014F5C(v260, &qword_255656240);
            if (v261 == 1)
              goto LABEL_41;
            v265 = (char *)v143;
            v266 = v467;
            sub_221014FC0(v253, v467, &qword_255656240);
            v267 = v543;
            if (__swift_getEnumTagSinglePayload(v266, 1, v543) == 1)
            {
              v268 = (uint64_t)v469;
              v269 = v533;
              __swift_storeEnumTagSinglePayload((uint64_t)v469, 1, 1, v533);
            }
            else
            {
              v280 = v536;
              (*(void (**)(char *, uint64_t, uint64_t))(v536 + 32))(v207, v266, v267);
              v281 = v461;
              sub_221014FC0(v178 + v185[8], v461, &qword_255659810);
              v282 = 1;
              if (__swift_getEnumTagSinglePayload(v281, 1, v535) != 1)
              {
                v283 = v512;
                v284 = v498;
                v285 = v535;
                (*(void (**)(char *, uint64_t, uint64_t))(v512 + 32))(v498, v461, v535);
                v286 = *(_QWORD *)(v178 + 64);
                v515 = *(_QWORD *)(v178 + 56);
                v514 = v286;
                v287 = v533;
                v288 = v469;
                (*(void (**)(uint64_t, char *, uint64_t))(v283 + 16))((uint64_t)v469 + *(int *)(v533 + 20), v284, v285);
                v289 = (_QWORD *)((char *)v288 + *(int *)(v287 + 24));
                v513 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255657208) + 48);
                swift_bridgeObjectRetain();
                v290 = sub_2212F507C();
                v292 = v291;
                v293 = _s15PricePropertiesVMa(0);
                sub_2212F5064();
                sub_2212F50B8();
                v294 = sub_2212F5070();
                *v289 = v290;
                v289[1] = v292;
                v265 = v534;
                v188 = (uint64_t)v526;
                v295 = *(int *)(v293 + 28);
                v178 = v542;
                v267 = v543;
                *(uint64_t *)((char *)v289 + v295) = v294;
                *((_BYTE *)v289 + v513) = 1;
                v207 = v499;
                swift_storeEnumTagMultiPayload();
                v296 = v514;
                *v288 = v515;
                v288[1] = v296;
                v297 = *(void (**)(char *, uint64_t))(v283 + 8);
                v280 = v536;
                v297(v284, v535);
                v282 = 0;
              }
              v268 = (uint64_t)v469;
              v269 = v533;
              __swift_storeEnumTagSinglePayload((uint64_t)v469, v282, 1, v533);
              (*(void (**)(char *, uint64_t))(v280 + 8))(v207, v267);
              v253 = v517;
            }
            if (__swift_getEnumTagSinglePayload(v268, 1, v269) == 1)
            {
              sub_221014F5C(v268, &qword_255659818);
              v298 = v454;
              sub_221014FC0(v253, v454, &qword_255656240);
              v299 = v543;
              if (__swift_getEnumTagSinglePayload(v298, 1, v543) == 1)
              {
                v300 = (uint64_t)v459;
                v301 = v533;
                __swift_storeEnumTagSinglePayload((uint64_t)v459, 1, 1, v533);
                v185 = v539;
              }
              else
              {
                v311 = v536;
                (*(void (**)(char *, uint64_t, uint64_t))(v536 + 32))(v468, v298, v299);
                v185 = v539;
                v312 = v453;
                sub_221014FC0(v178 + v539[8], v453, &qword_255659810);
                v313 = 1;
                if (__swift_getEnumTagSinglePayload(v312, 1, v535) != 1)
                {
                  v314 = v512;
                  v315 = v498;
                  v316 = v535;
                  (*(void (**)(char *, uint64_t, uint64_t))(v512 + 32))(v498, v453, v535);
                  v517 = *(_QWORD *)(v542 + 56);
                  v515 = *(_QWORD *)(v542 + 64);
                  v317 = v533;
                  v318 = v459;
                  (*(void (**)(uint64_t, char *, uint64_t))(v314 + 16))((uint64_t)v459 + *(int *)(v533 + 20), v315, v316);
                  v319 = (_QWORD *)((char *)v318 + *(int *)(v317 + 24));
                  v514 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255657208) + 48);
                  swift_bridgeObjectRetain();
                  v320 = sub_2212F507C();
                  v322 = v321;
                  v323 = _s15PricePropertiesVMa(0);
                  sub_2212F5064();
                  sub_2212F50B8();
                  v324 = sub_2212F5070();
                  *v319 = v320;
                  v319[1] = v322;
                  v265 = v534;
                  v299 = v543;
                  v325 = *(int *)(v323 + 28);
                  v185 = v539;
                  v311 = v536;
                  *(uint64_t *)((char *)v319 + v325) = v324;
                  *((_BYTE *)v319 + v514) = 0;
                  v188 = (uint64_t)v526;
                  swift_storeEnumTagMultiPayload();
                  v326 = v515;
                  *v318 = v517;
                  v318[1] = v326;
                  v327 = *(void (**)(char *, uint64_t))(v314 + 8);
                  v178 = v542;
                  v327(v498, v535);
                  v313 = 0;
                }
                v300 = (uint64_t)v459;
                v301 = v533;
                __swift_storeEnumTagSinglePayload((uint64_t)v459, v313, 1, v533);
                (*(void (**)(char *, uint64_t))(v311 + 8))(v468, v299);
              }
              v143 = (uint64_t)v265;
              if (__swift_getEnumTagSinglePayload(v300, 1, v301) == 1)
              {
                sub_221014F5C(v300, &qword_255659818);
LABEL_41:
                v262 = v474;
                sub_221014FC0(v178 + v185[8], v474, &qword_255659810);
                v263 = v535;
                if (__swift_getEnumTagSinglePayload(v262, 1, v535) == 1)
                {
                  sub_221014F5C(v262, &qword_255659810);
                  v264 = v470;
                  sub_221278848();
                }
                else
                {
                  v270 = *(void (**)(char *, uint64_t, uint64_t))(v512 + 32);
                  v271 = v460;
                  v270(v460, v262, v263);
                  v273 = *(_QWORD *)(v178 + 56);
                  v272 = *(_QWORD *)(v178 + 64);
                  v274 = v533;
                  v264 = v470;
                  v275 = v271;
                  v185 = v539;
                  v270(&v470[*(int *)(v533 + 20)], (uint64_t)v275, v263);
                  v276 = *(int *)(v274 + 24);
                  v178 = v542;
                  *(_WORD *)((char *)v264 + v276) = 257;
                  swift_storeEnumTagMultiPayload();
                  *v264 = v273;
                  v264[1] = v272;
                  swift_storeEnumTagMultiPayload();
                  swift_bridgeObjectRetain();
                }
                v277 = v516;
                v278 = v475;
                sub_221015318((uint64_t)v264, v475, _s11PriceStringOMa);
                sub_221015318(v278, v277, _s11PriceStringOMa);
                v279 = v532;
              }
              else
              {
                v328 = v452;
                sub_221015318(v300, v452, _s22LocalizedPriceResourceVMa);
                v277 = v516;
                sub_221015318(v328, v516, _s22LocalizedPriceResourceVMa);
                v279 = v532;
                swift_storeEnumTagMultiPayload();
              }
            }
            else
            {
              v302 = v455;
              sub_221015318(v268, v455, _s22LocalizedPriceResourceVMa);
              v277 = v516;
              sub_221015318(v302, v516, _s22LocalizedPriceResourceVMa);
              v279 = v532;
              swift_storeEnumTagMultiPayload();
              v185 = v539;
              v143 = (uint64_t)v265;
            }
            __swift_storeEnumTagSinglePayload(v277, 0, 1, v279);
            v197 = v531;
            v198 = v527;
            v196 = v530;
            goto LABEL_63;
          default:
            v190 = *(_QWORD *)(v179 + 40);
            v189 = *(_QWORD *)(v179 + 48);
            v191 = *(_QWORD *)(v179 + 32);
            v192 = *(_BYTE *)(v179 + 24);
            v193 = *(_QWORD *)(v179 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_221046F8C(v190, v189);
            v194 = v190;
            v143 = (uint64_t)v534;
            sub_2210470B0(v194, v189);
            v195 = v530;
            *v530 = v193;
            v195[1] = v180;
            v196 = v195;
            LOBYTE(v195) = v192 & 1;
            v178 = v542;
            *((_BYTE *)v196 + 16) = (_BYTE)v195;
            v196[3] = v191;
            v185 = v539;
            v197 = v531;
            v198 = v527;
            v188 = (uint64_t)v526;
            goto LABEL_63;
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_106:
    sub_221011A28((uint64_t)v125, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionStoreButton);
  }
  return v131;
}

void sub_221099B54(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  char v20;
  char *v21;
  uint64_t (*v22)();
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char v30;
  _BYTE v31[80];
  _OWORD v32[2];
  __int16 v33;
  _BYTE v34[56];

  v2 = v1;
  v24 = a1;
  v3 = type metadata accessor for SubscriptionOptionButtonModel();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SubscriptionStoreControlOption(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SubscriptionPickerSubscribeButtonModel();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for SubscriptionStoreButton();
  v13 = v1 + v12[8];
  v14 = *(_QWORD *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  sub_221017C08(*(_QWORD *)v13, v15);
  sub_22104359C();
  v17 = v16;
  sub_221017894(v14, v15);
  if ((v17 & 1) != 0)
  {
    sub_221014EB4(v2, (uint64_t)v8, type metadata accessor for SubscriptionStoreControlOption);
    v18 = v2 + v12[6];
    v33 = *(_WORD *)(v18 + 32);
    v19 = *(_OWORD *)(v18 + 16);
    v32[0] = *(_OWORD *)v18;
    v32[1] = v19;
    sub_221015090((uint64_t)v32, (uint64_t)v34, &qword_255657978);
    sub_22109ACAC((uint64_t)v34);
    sub_221043DC4();
    sub_22109ACAC((uint64_t)v32);
    sub_221276FC0();
    memcpy(v31, (const void *)(v2 + v12[7]), 0x4AuLL);
    sub_22109A9EC((uint64_t)v31);
    sub_2210452E8();
    sub_22109A9EC((uint64_t)v31);
    v20 = v30;
    v21 = &v11[*(int *)(v9 + 20)];
    *v21 = v25;
    *(_OWORD *)(v21 + 8) = v26;
    *(_OWORD *)(v21 + 24) = v27;
    *(_OWORD *)(v21 + 40) = v28;
    *(_OWORD *)(v21 + 56) = v29;
    v21[72] = v20;
    sub_2210E8F34(v24);
    v22 = type metadata accessor for SubscriptionPickerSubscribeButtonModel;
    v23 = (uint64_t)v11;
  }
  else
  {
    sub_2210969B8((uint64_t)v5);
    sub_22127CCA0(v24);
    v22 = type metadata accessor for SubscriptionOptionButtonModel;
    v23 = (uint64_t)v5;
  }
  sub_221011A28(v23, (uint64_t (*)(_QWORD))v22);
}

void sub_221099DC0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  char v59;
  _BYTE v60[80];
  _OWORD v61[2];
  __int16 v62;
  _BYTE v63[56];

  v2 = v1;
  v52 = a1;
  v3 = type metadata accessor for SubscriptionOptionButtonModel();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  MEMORY[0x24BDAC7A8](v51);
  v50 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659808);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v49 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v48 = (char *)&v46 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v47 = (char *)&v46 - v12;
  v13 = type metadata accessor for SubscriptionStoreControlOption(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SubscriptionPickerSubscribeButtonModel();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (int *)type metadata accessor for SubscriptionStoreButton();
  v20 = v1 + v19[8];
  v21 = *(_QWORD *)v20;
  v22 = *(_BYTE *)(v20 + 8);
  sub_221017C08(*(_QWORD *)v20, v22);
  sub_22104359C();
  v24 = v23;
  sub_221017894(v21, v22);
  if ((v24 & 1) != 0)
  {
    sub_221014EB4(v2, (uint64_t)v15, type metadata accessor for SubscriptionStoreControlOption);
    v25 = v2 + v19[6];
    v62 = *(_WORD *)(v25 + 32);
    v26 = *(_OWORD *)(v25 + 16);
    v61[0] = *(_OWORD *)v25;
    v61[1] = v26;
    sub_221015090((uint64_t)v61, (uint64_t)v63, &qword_255657978);
    sub_22109ACAC((uint64_t)v63);
    sub_221043DC4();
    sub_22109ACAC((uint64_t)v61);
    sub_221276FC0();
    memcpy(v60, (const void *)(v2 + v19[7]), 0x4AuLL);
    sub_22109A9EC((uint64_t)v60);
    sub_2210452E8();
    sub_22109A9EC((uint64_t)v60);
    v27 = v54;
    v28 = v58;
    v29 = v59;
    v30 = &v18[*(int *)(v16 + 20)];
    *v30 = v53;
    *((_QWORD *)v30 + 1) = v27;
    v31 = v55;
    v32 = v56;
    *((_OWORD *)v30 + 1) = v55;
    *((_OWORD *)v30 + 2) = v32;
    *((_OWORD *)v30 + 3) = v57;
    *((_QWORD *)v30 + 8) = v28;
    v30[72] = v29;
    v34 = v51;
    v33 = v52;
    v36 = (uint64_t)v49;
    v35 = (uint64_t)v50;
    v37 = (uint64_t)v47;
    v38 = (uint64_t)v48;
    if (v31 == 3)
    {
      v39 = 1;
    }
    else
    {
      sub_221277918();
      v40 = v38 + *(int *)(v34 + 20);
      sub_221277918();
      v41 = _s11PriceStringOMa(0);
      __swift_storeEnumTagSinglePayload(v40, 0, 1, v41);
      v39 = 0;
    }
    __swift_storeEnumTagSinglePayload(v38, v39, 1, v34);
    sub_221015090(v38, v37, &qword_255659808);
    sub_221011A28((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionPickerSubscribeButtonModel);
    sub_221014FC0(v37, v36, &qword_255659808);
    if (__swift_getEnumTagSinglePayload(v36, 1, v34) == 1)
    {
      v42 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
      v43 = v33;
      v44 = 1;
    }
    else
    {
      sub_221015318(v36, v35, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
      sub_221014EB4(v35, v33, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
      v45 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
      swift_storeEnumTagMultiPayload();
      sub_221011A28(v35, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
      v43 = v33;
      v44 = 0;
      v42 = v45;
    }
    __swift_storeEnumTagSinglePayload(v43, v44, 1, v42);
    sub_221014F5C(v37, &qword_255659808);
  }
  else
  {
    sub_2210969B8((uint64_t)v5);
    sub_22127CF10(v52);
    sub_221011A28((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionButtonModel);
  }
}

uint64_t sub_22109A234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19[5];
  _BYTE v20[8];
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  __int16 v24;
  _BYTE v25[40];

  v1 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0 + *(int *)(type metadata accessor for SubscriptionStoreButton() + 24);
  v24 = *(_WORD *)(v7 + 32);
  v8 = *(_OWORD *)(v7 + 16);
  v23[0] = *(_OWORD *)v7;
  v23[1] = v8;
  sub_221015090((uint64_t)v23, (uint64_t)v25, &qword_255657978);
  sub_22109ACAC((uint64_t)v25);
  sub_221043DC4();
  sub_22109ACAC((uint64_t)v23);
  sub_221015090((uint64_t)v19, (uint64_t)v20, &qword_2556573F8);
  v9 = v22;
  if (v22 == 1)
    goto LABEL_2;
  v11 = v21;
  v12 = type metadata accessor for SubscriptionStoreControlOption(0);
  sub_221014FC0(v0 + *(int *)(v12 + 20), (uint64_t)v6, &qword_255656240);
  v13 = sub_2212F50D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v13) != 1)
  {
    sub_221043EC0(v19);
    sub_221014F5C((uint64_t)v6, &qword_255656240);
LABEL_12:
    v10 = 0;
    return v10 & 1;
  }
  sub_221014F5C((uint64_t)v6, &qword_255656240);
  sub_221014EB4(v0, (uint64_t)v3, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  v14 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
  v16 = v15;
  sub_221011A28((uint64_t)v3, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v11 != v14 || v9 != v16)
  {
    v10 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    sub_221043EC0(v19);
    return v10 & 1;
  }
  swift_bridgeObjectRelease();
  sub_221043EC0(v19);
LABEL_2:
  v10 = 1;
  return v10 & 1;
}

void SubscriptionStoreButton.body.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)();
  uint64_t v38;
  char v39;
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  unsigned __int8 v67;
  uint64_t v68;
  char v69[8];
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[5];
  _QWORD v77[5];
  _OWORD v78[2];
  __int16 v79;
  _BYTE __dst[96];

  v2 = v1;
  v58 = a1;
  v3 = OUTLINED_FUNCTION_7_9();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659728);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_13_0();
  v9 = v8 - v7;
  type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_13_0();
  v13 = v12 - v11;
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_255659730);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_13_0();
  v18 = v17 - v16;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659738);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_3_4();
  v65 = v20;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659740);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_3_4();
  v57 = v22;
  v61 = v13;
  sub_221099B54(v13);
  v62 = v9;
  sub_221099DC0(v9);
  v23 = sub_221096CDC();
  v64 = v3;
  memcpy(__dst, (const void *)(v2 + *(int *)(v3 + 28)), 0x4AuLL);
  sub_22109A9EC((uint64_t)__dst);
  sub_2210452E8();
  sub_22109A9EC((uint64_t)__dst);
  v60 = v69[0];
  sub_221047048(v70, v71, v72, v73, v74, v75);
  sub_221014EB4(v2, (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionStoreButton);
  v24 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v59 = swift_allocObject();
  sub_221015318((uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v59 + v24, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionStoreButton);
  v25 = *(uint64_t (**)(void))(v2 + *(int *)(OUTLINED_FUNCTION_11_13() + 20));
  if (v25)
  {
    v26 = sub_221014CAC();
    v28 = v27;
    v55 = v2;
    v29 = v23;
    v31 = v30 & 1;
    v32 = v25();
    v33 = v31;
    v23 = v29;
    v2 = v55;
    sub_221015344(v26, v28, v33);
  }
  else
  {
    v32 = 0;
  }
  v34 = v18 + v14[14];
  *(_QWORD *)v34 = swift_getKeyPath();
  *(_BYTE *)(v34 + 8) = 0;
  v35 = v18 + v14[15];
  *(_QWORD *)v35 = swift_getKeyPath();
  *(_BYTE *)(v35 + 40) = 0;
  v36 = v18 + v14[16];
  *(_QWORD *)v36 = swift_getKeyPath();
  *(_BYTE *)(v36 + 8) = 0;
  sub_221015318(v61, v18, type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
  sub_221015090(v62, v18 + v14[9], &qword_255659728);
  v37 = (uint64_t (**)())(v18 + v14[10]);
  v38 = v59;
  *v37 = sub_22109ABD0;
  v37[1] = (uint64_t (*)())v38;
  *(_QWORD *)(v18 + v14[11]) = v32;
  *(_BYTE *)(v18 + v14[12]) = v60;
  *(_QWORD *)(v18 + v14[13]) = v23;
  v39 = sub_22109A234();
  KeyPath = swift_getKeyPath();
  v41 = swift_allocObject();
  *(_BYTE *)(v41 + 16) = v39 & 1;
  v42 = v65;
  sub_221014FC0(v18, v65, &qword_255659730);
  v43 = (uint64_t *)(v42 + *(int *)(v63 + 36));
  *v43 = KeyPath;
  v43[1] = (uint64_t)sub_22109AC94;
  v43[2] = v41;
  sub_221014F5C(v18, &qword_255659730);
  v44 = sub_2212F4A10();
  v46 = v45;
  v47 = v2 + *(int *)(v64 + 24);
  v48 = *(_OWORD *)v47;
  v78[1] = *(_OWORD *)(v47 + 16);
  v79 = *(_WORD *)(v47 + 32);
  v78[0] = v48;
  sub_221015090((uint64_t)v78, (uint64_t)v69, &qword_255657978);
  sub_22109ACAC((uint64_t)v69);
  sub_221043DC4();
  sub_22109ACAC((uint64_t)v78);
  sub_221043EC0(v76);
  sub_221015090((uint64_t)v76, (uint64_t)v77, &qword_2556573F8);
  if (v77[2] == 1)
  {
    v66 = 0;
    sub_2212F4758();
    v49 = v67;
    v50 = v68;
  }
  else
  {
    v49 = 0;
    v50 = 1;
  }
  v52 = v57;
  v51 = v58;
  v53 = v56;
  sub_221014FC0(v42, v57, &qword_255659738);
  v54 = (_QWORD *)(v52 + *(int *)(v53 + 36));
  *v54 = 0;
  v54[1] = v49;
  v54[2] = v50;
  v54[3] = v44;
  v54[4] = v46;
  sub_221014F5C(v42, &qword_255659738);
  sub_221015090(v52, v51, &qword_255659740);
}

uint64_t sub_22109A934(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[56];

  v2 = type metadata accessor for SubscriptionStoreButton();
  sub_221015090(a1 + *(int *)(v2 + 20), (uint64_t)v5, &qword_255659800);
  v3 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  return (*(uint64_t (**)(uint64_t, _BYTE *))(a1 + *(int *)(v3 + 24)))(a1, v5);
}

void sub_22109A99C(uint64_t a1@<X8>)
{
  sub_2211482EC(a1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_22109A9B8(uint64_t a1)
{
  __int128 v2[2];

  sub_22106040C(a1, (uint64_t)v2);
  return sub_221148344(v2);
}

uint64_t sub_22109A9EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v2 = OUTLINED_FUNCTION_10_14(a1);
  v3(v2);
  return v1;
}

uint64_t sub_22109AA38()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)OUTLINED_FUNCTION_7_9();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + *(int *)(type metadata accessor for SubscriptionStoreControlOption(0) + 20);
  v6 = sub_2212F50D0();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(v3 + *(int *)(OUTLINED_FUNCTION_11_13() + 20)))
    swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v7 = v3 + v1[6];
  sub_22109ABC4(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(unsigned __int8 *)(v7 + 32), *(_BYTE *)(v7 + 33));
  v8 = v3 + v1[7];
  sub_221047014(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_BYTE *)(v8 + 72), *(_BYTE *)(v8 + 73));
  sub_221017894(*(_QWORD *)(v3 + v1[8]), *(_BYTE *)(v3 + v1[8] + 8));
  sub_2210470E0(*(_QWORD *)(v3 + v1[9]), *(_BYTE *)(v3 + v1[9] + 8));
  return swift_deallocObject();
}

uint64_t sub_22109ABC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
    return sub_221043E1C(a1, a2, a3);
  else
    return swift_release();
}

uint64_t sub_22109ABD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_7_9() - 8) + 80);
  return sub_22109A934(v0 + ((v1 + 16) & ~v1));
}

void sub_22109AC00(uint64_t a1@<X8>)
{
  sub_2211482EC(a1);
  OUTLINED_FUNCTION_6_0();
}

void sub_22109AC20()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_22109AC3C()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_22109AC58()
{
  OUTLINED_FUNCTION_4_8();
  OUTLINED_FUNCTION_6_0();
}

_BYTE *sub_22109AC70(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_22109AC84()
{
  return swift_deallocObject();
}

_BYTE *sub_22109AC94(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

void sub_22109ACAC(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = OUTLINED_FUNCTION_10_14(a1);
  v2(v1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_22109ACD8()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for SubscriptionStoreButton(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v65;
  char v66;
  char v67;
  _QWORD *v68;
  int *v69;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2212F51B4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for Subscription();
    v9 = *(int *)(v8 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = *(int *)(v8 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v13[8] = v14[8];
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v15 = type metadata accessor for SubscriptionStoreControlOption(0);
    v16 = *(int *)(v15 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_2212F50D0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
    }
    *(_QWORD *)((char *)a1 + *(int *)(v15 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(v15 + 24));
    v22 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
    v23 = *(int *)(v22 + 20);
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    if (*v25)
    {
      v26 = v25[1];
      *v24 = *v25;
      v24[1] = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
    }
    v27 = *(int *)(v22 + 24);
    v28 = (_QWORD *)((char *)a1 + v27);
    v29 = (_QWORD *)((char *)a2 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = a3[5];
    v32 = a3[6];
    v33 = (char *)a1 + v31;
    v34 = (char *)a2 + v31;
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    v36 = *((_OWORD *)v34 + 2);
    *((_OWORD *)v33 + 1) = *((_OWORD *)v34 + 1);
    *((_OWORD *)v33 + 2) = v36;
    v33[48] = v34[48];
    v69 = a3;
    v37 = (char *)a1 + v32;
    v38 = *(_QWORD *)((char *)a2 + v32);
    v39 = *(_QWORD *)((char *)a2 + v32 + 8);
    v40 = *(_QWORD *)((char *)a2 + v32 + 16);
    v41 = *(_QWORD *)((char *)a2 + v32 + 24);
    v42 = *((_BYTE *)a2 + v32 + 33);
    v43 = *((unsigned __int8 *)a2 + v32 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_221043DEC(v38, v39, v40, v41, v43, v42);
    *(_QWORD *)v37 = v38;
    *((_QWORD *)v37 + 1) = v39;
    *((_QWORD *)v37 + 2) = v40;
    *((_QWORD *)v37 + 3) = v41;
    v37[32] = v43;
    v37[33] = v42;
    v44 = v69[7];
    v45 = a2;
    v68 = a2;
    v46 = (char *)a1 + v44;
    v47 = (char *)v45 + v44;
    v48 = *(_QWORD *)v47;
    v49 = *((_QWORD *)v47 + 1);
    v50 = *((_QWORD *)v47 + 2);
    v51 = *((_QWORD *)v47 + 3);
    v52 = *((_QWORD *)v47 + 4);
    v53 = *((_QWORD *)v47 + 5);
    v55 = *((_QWORD *)v47 + 6);
    v54 = *((_QWORD *)v47 + 7);
    v65 = *((_QWORD *)v47 + 8);
    v66 = v47[72];
    v67 = v47[73];
    sub_221046EF0(*(_QWORD *)v47, v49, v50, v51, v52, v53, v55, v54, v65, v66, v67);
    *(_QWORD *)v46 = v48;
    *((_QWORD *)v46 + 1) = v49;
    *((_QWORD *)v46 + 2) = v50;
    *((_QWORD *)v46 + 3) = v51;
    *((_QWORD *)v46 + 4) = v52;
    *((_QWORD *)v46 + 5) = v53;
    *((_QWORD *)v46 + 6) = v55;
    *((_QWORD *)v46 + 7) = v54;
    *((_QWORD *)v46 + 8) = v65;
    v46[72] = v66;
    v46[73] = v67;
    v56 = v69[8];
    v57 = (char *)a1 + v56;
    v58 = (char *)v68 + v56;
    v59 = *(_QWORD *)v58;
    LOBYTE(v48) = v58[8];
    sub_221017C08(*(_QWORD *)v58, v48);
    *(_QWORD *)v57 = v59;
    v57[8] = v48;
    v60 = v69[9];
    v61 = (char *)a1 + v60;
    v62 = (char *)v68 + v60;
    v63 = *(_QWORD *)v62;
    LOBYTE(v59) = v62[8];
    sub_221066D38(*(_QWORD *)v62, v59);
    *(_QWORD *)v61 = v63;
    v61[8] = v59;
  }
  return a1;
}

uint64_t destroy for SubscriptionStoreButton(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(type metadata accessor for SubscriptionStoreControlOption(0) + 20);
  v6 = sub_2212F50D0();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0) + 20)))
    swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v7 = a1 + a2[6];
  sub_22109ABC4(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(unsigned __int8 *)(v7 + 32), *(_BYTE *)(v7 + 33));
  v8 = a1 + a2[7];
  sub_221047014(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_BYTE *)(v8 + 72), *(_BYTE *)(v8 + 73));
  sub_221017894(*(_QWORD *)(a1 + a2[8]), *(_BYTE *)(a1 + a2[8] + 8));
  return sub_2210470E0(*(_QWORD *)(a1 + a2[9]), *(_BYTE *)(a1 + a2[9] + 8));
}

uint64_t initializeWithCopy for SubscriptionStoreButton(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Subscription();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(int *)(v7 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  v15 = *(int *)(v14 + 20);
  v16 = a1;
  v17 = (void *)(a1 + v15);
  v18 = (const void *)(a2 + v15);
  v19 = sub_2212F50D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
  }
  *(_QWORD *)(a1 + *(int *)(v14 + 24)) = *(_QWORD *)(a2 + *(int *)(v14 + 24));
  v21 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  v22 = *(int *)(v21 + 20);
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  if (*v24)
  {
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
  }
  v26 = *(int *)(v21 + 24);
  v68 = a1;
  v27 = (_QWORD *)(a1 + v26);
  v28 = a2;
  v29 = (_QWORD *)(a2 + v26);
  v30 = v29[1];
  *v27 = *v29;
  v27[1] = v30;
  v31 = a3[5];
  v32 = a3[6];
  v33 = v16 + v31;
  v34 = a2 + v31;
  v35 = *(_QWORD *)(v34 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_QWORD *)(v33 + 8) = v35;
  v36 = *(_OWORD *)(v34 + 32);
  *(_OWORD *)(v33 + 16) = *(_OWORD *)(v34 + 16);
  *(_OWORD *)(v33 + 32) = v36;
  *(_BYTE *)(v33 + 48) = *(_BYTE *)(v34 + 48);
  v70 = a3;
  v37 = v16 + v32;
  v38 = a2 + v32;
  v39 = *(_QWORD *)(a2 + v32);
  v40 = *(_QWORD *)(a2 + v32 + 8);
  v41 = *(_QWORD *)(a2 + v32 + 16);
  v42 = *(_QWORD *)(a2 + v32 + 24);
  v43 = *(_BYTE *)(a2 + v32 + 33);
  v44 = *(unsigned __int8 *)(v38 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_221043DEC(v39, v40, v41, v42, v44, v43);
  *(_QWORD *)v37 = v39;
  *(_QWORD *)(v37 + 8) = v40;
  *(_QWORD *)(v37 + 16) = v41;
  *(_QWORD *)(v37 + 24) = v42;
  *(_BYTE *)(v37 + 32) = v44;
  *(_BYTE *)(v37 + 33) = v43;
  v45 = v70[7];
  v69 = v28;
  v46 = v16 + v45;
  v47 = v28 + v45;
  v48 = *(_QWORD *)v47;
  v49 = *(_QWORD *)(v47 + 8);
  v50 = *(_QWORD *)(v47 + 16);
  v51 = *(_QWORD *)(v47 + 24);
  v53 = *(_QWORD *)(v47 + 32);
  v52 = *(_QWORD *)(v47 + 40);
  v55 = *(_QWORD *)(v47 + 48);
  v54 = *(_QWORD *)(v47 + 56);
  v56 = *(_QWORD *)(v47 + 64);
  v66 = *(_BYTE *)(v47 + 72);
  v67 = *(_BYTE *)(v47 + 73);
  sub_221046EF0(*(_QWORD *)v47, v49, v50, v51, v53, v52, v55, v54, v56, v66, v67);
  *(_QWORD *)v46 = v48;
  *(_QWORD *)(v46 + 8) = v49;
  *(_QWORD *)(v46 + 16) = v50;
  *(_QWORD *)(v46 + 24) = v51;
  *(_QWORD *)(v46 + 32) = v53;
  *(_QWORD *)(v46 + 40) = v52;
  *(_QWORD *)(v46 + 48) = v55;
  *(_QWORD *)(v46 + 56) = v54;
  *(_QWORD *)(v46 + 64) = v56;
  *(_BYTE *)(v46 + 72) = v66;
  *(_BYTE *)(v46 + 73) = v67;
  v57 = v70[8];
  v58 = v68 + v57;
  v59 = v69 + v57;
  v60 = *(_QWORD *)v59;
  LOBYTE(v48) = *(_BYTE *)(v59 + 8);
  sub_221017C08(*(_QWORD *)v59, v48);
  *(_QWORD *)v58 = v60;
  *(_BYTE *)(v58 + 8) = v48;
  v61 = v70[9];
  v62 = v68 + v61;
  v63 = v69 + v61;
  v64 = *(_QWORD *)v63;
  LOBYTE(v60) = *(_BYTE *)(v63 + 8);
  sub_221066D38(*(_QWORD *)v63, v60);
  *(_QWORD *)v62 = v64;
  *(_BYTE *)(v62 + 8) = v60;
  return v68;
}

uint64_t assignWithCopy for SubscriptionStoreButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  int EnumTagSinglePayload;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for Subscription();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = v15;
  v16 = type metadata accessor for SubscriptionStoreControlOption(0);
  v17 = *(int *)(v16 + 20);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_2212F50D0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20);
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20);
  if (EnumTagSinglePayload)
  {
    if (!v22)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v23 = *(_QWORD *)(v20 - 8);
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v18, v20);
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v23 + 24))(v18, v19, v20);
LABEL_7:
  *(_QWORD *)(a1 + *(int *)(v16 + 24)) = *(_QWORD *)(a2 + *(int *)(v16 + 24));
  v25 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  v26 = *(int *)(v25 + 20);
  v27 = (_QWORD *)(a1 + v26);
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a1 + v26);
  v30 = *(_QWORD *)(a2 + v26);
  if (!v29)
  {
    if (v30)
    {
      v32 = *(_QWORD *)(v28 + 8);
      *v27 = v30;
      v27[1] = v32;
      swift_retain();
      goto LABEL_14;
    }
LABEL_13:
    *(_OWORD *)v27 = *(_OWORD *)v28;
    goto LABEL_14;
  }
  if (!v30)
  {
    swift_release();
    goto LABEL_13;
  }
  v31 = *(_QWORD *)(v28 + 8);
  *v27 = v30;
  v27[1] = v31;
  swift_retain();
  swift_release();
LABEL_14:
  v33 = *(int *)(v25 + 24);
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  swift_retain();
  swift_release();
  v37 = *(int *)(a3 + 20);
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_QWORD *)v38 = *(_QWORD *)(a2 + v37);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(a2 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v38 + 16) = *(_DWORD *)(v39 + 16);
  *(_DWORD *)(v38 + 20) = *(_DWORD *)(v39 + 20);
  *(_DWORD *)(v38 + 24) = *(_DWORD *)(v39 + 24);
  *(_DWORD *)(v38 + 28) = *(_DWORD *)(v39 + 28);
  *(_DWORD *)(v38 + 32) = *(_DWORD *)(v39 + 32);
  *(_DWORD *)(v38 + 36) = *(_DWORD *)(v39 + 36);
  *(_DWORD *)(v38 + 40) = *(_DWORD *)(v39 + 40);
  *(_DWORD *)(v38 + 44) = *(_DWORD *)(v39 + 44);
  *(_BYTE *)(v38 + 48) = *(_BYTE *)(v39 + 48);
  v40 = *(int *)(a3 + 24);
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = *(_QWORD *)v42;
  v44 = *(_QWORD *)(v42 + 8);
  v45 = *(_QWORD *)(v42 + 16);
  v46 = *(_QWORD *)(v42 + 24);
  v47 = *(_BYTE *)(v42 + 33);
  v48 = a3;
  v97 = a3;
  v49 = *(_BYTE *)(v42 + 32);
  sub_221043DEC(*(_QWORD *)v42, v44, v45, v46, v49, v47);
  v50 = *(_QWORD *)v41;
  v51 = *(_QWORD *)(v41 + 8);
  v52 = *(_QWORD *)(v41 + 16);
  v53 = *(_QWORD *)(v41 + 24);
  v54 = *(_BYTE *)(v41 + 33);
  *(_QWORD *)v41 = v43;
  *(_QWORD *)(v41 + 8) = v44;
  *(_QWORD *)(v41 + 16) = v45;
  *(_QWORD *)(v41 + 24) = v46;
  v55 = *(unsigned __int8 *)(v41 + 32);
  *(_BYTE *)(v41 + 32) = v49;
  *(_BYTE *)(v41 + 33) = v47;
  sub_22109ABC4(v50, v51, v52, v53, v55, v54);
  v56 = *(int *)(v48 + 28);
  v57 = a2;
  v95 = a1;
  v96 = a2;
  v58 = a1 + v56;
  v59 = v57 + v56;
  v60 = *(_QWORD *)v59;
  v61 = *(_QWORD *)(v59 + 8);
  v62 = *(_QWORD *)(v59 + 16);
  v63 = *(_QWORD *)(v59 + 24);
  v64 = *(_QWORD *)(v59 + 32);
  v65 = *(_QWORD *)(v59 + 40);
  v67 = *(_QWORD *)(v59 + 48);
  v66 = *(_QWORD *)(v59 + 56);
  v68 = *(_QWORD *)(v59 + 64);
  v93 = *(_BYTE *)(v59 + 72);
  v94 = *(_BYTE *)(v59 + 73);
  sub_221046EF0(*(_QWORD *)v59, v61, v62, v63, v64, v65, v67, v66, v68, v93, v94);
  v69 = *(_QWORD *)v58;
  v70 = *(_QWORD *)(v58 + 8);
  v71 = *(_QWORD *)(v58 + 16);
  v72 = *(_QWORD *)(v58 + 24);
  v73 = *(_QWORD *)(v58 + 32);
  v74 = *(_QWORD *)(v58 + 40);
  v75 = *(_QWORD *)(v58 + 48);
  v76 = *(_QWORD *)(v58 + 56);
  v77 = *(_QWORD *)(v58 + 64);
  v78 = *(_BYTE *)(v58 + 72);
  v79 = *(_BYTE *)(v58 + 73);
  *(_QWORD *)v58 = v60;
  *(_QWORD *)(v58 + 8) = v61;
  *(_QWORD *)(v58 + 16) = v62;
  *(_QWORD *)(v58 + 24) = v63;
  *(_QWORD *)(v58 + 32) = v64;
  *(_QWORD *)(v58 + 40) = v65;
  *(_QWORD *)(v58 + 48) = v67;
  *(_QWORD *)(v58 + 56) = v66;
  *(_QWORD *)(v58 + 64) = v68;
  *(_BYTE *)(v58 + 72) = v93;
  *(_BYTE *)(v58 + 73) = v94;
  sub_221047014(v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79);
  v80 = *(int *)(v97 + 32);
  v81 = v95 + v80;
  v82 = v96 + v80;
  v83 = *(_QWORD *)v82;
  LOBYTE(v60) = *(_BYTE *)(v82 + 8);
  sub_221017C08(*(_QWORD *)v82, v60);
  v84 = *(_QWORD *)v81;
  v85 = *(_BYTE *)(v81 + 8);
  *(_QWORD *)v81 = v83;
  *(_BYTE *)(v81 + 8) = v60;
  sub_221017894(v84, v85);
  v86 = *(int *)(v97 + 36);
  v87 = v95 + v86;
  v88 = v96 + v86;
  v89 = *(_QWORD *)v88;
  LOBYTE(v83) = *(_BYTE *)(v88 + 8);
  sub_221066D38(*(_QWORD *)v88, v83);
  v90 = *(_QWORD *)v87;
  v91 = *(_BYTE *)(v87 + 8);
  *(_QWORD *)v87 = v89;
  *(_BYTE *)(v87 + 8) = v83;
  sub_2210470E0(v90, v91);
  return v95;
}

uint64_t initializeWithTake for SubscriptionStoreButton(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Subscription();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(int *)(v7 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  v15 = *(int *)(v14 + 20);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_2212F50D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  *(_QWORD *)(a1 + *(int *)(v14 + 24)) = *(_QWORD *)(a2 + *(int *)(v14 + 24));
  v20 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  v21 = *(int *)(v20 + 20);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v24 = *v23;
  if (*v23)
  {
    v25 = v23[1];
    *v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  *(_OWORD *)(a1 + *(int *)(v20 + 24)) = *(_OWORD *)(a2 + *(int *)(v20 + 24));
  v26 = a3[5];
  v27 = a3[6];
  v28 = a1 + v26;
  v29 = (__int128 *)(a2 + v26);
  v30 = *v29;
  v31 = v29[1];
  v32 = v29[2];
  *(_BYTE *)(v28 + 48) = *((_BYTE *)v29 + 48);
  *(_OWORD *)v28 = v30;
  *(_OWORD *)(v28 + 16) = v31;
  *(_OWORD *)(v28 + 32) = v32;
  v33 = a1 + v27;
  v34 = a2 + v27;
  v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  *(_WORD *)(v33 + 32) = *(_WORD *)(v34 + 32);
  memcpy((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), 0x4AuLL);
  v36 = a3[8];
  v37 = a3[9];
  v38 = a1 + v36;
  v39 = a2 + v36;
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
  v40 = a1 + v37;
  v41 = a2 + v37;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
  return a1;
}

uint64_t assignWithTake for SubscriptionStoreButton(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  int EnumTagSinglePayload;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Subscription();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(int *)(v7 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  v15 = *(int *)(v14 + 20);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_2212F50D0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (EnumTagSinglePayload)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v21 = *(_QWORD *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v16, v18);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v21 + 40))(v16, v17, v18);
LABEL_7:
  *(_QWORD *)(a1 + *(int *)(v14 + 24)) = *(_QWORD *)(a2 + *(int *)(v14 + 24));
  v23 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  v24 = *(int *)(v23 + 20);
  v25 = (_QWORD *)(a1 + v24);
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a1 + v24);
  v28 = *(_QWORD *)(a2 + v24);
  if (!v27)
  {
    if (v28)
    {
      v30 = *(_QWORD *)(v26 + 8);
      *v25 = v28;
      v25[1] = v30;
      goto LABEL_14;
    }
LABEL_13:
    *(_OWORD *)v25 = *(_OWORD *)v26;
    goto LABEL_14;
  }
  if (!v28)
  {
    swift_release();
    goto LABEL_13;
  }
  v29 = *(_QWORD *)(v26 + 8);
  *v25 = v28;
  v25[1] = v29;
  swift_release();
LABEL_14:
  *(_OWORD *)(a1 + *(int *)(v23 + 24)) = *(_OWORD *)(a2 + *(int *)(v23 + 24));
  swift_release();
  v31 = a3[5];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a2 + v31 + 8);
  *(_QWORD *)v32 = *(_QWORD *)(a2 + v31);
  *(_QWORD *)(v32 + 8) = v34;
  swift_bridgeObjectRelease();
  v35 = *(_OWORD *)(v33 + 32);
  *(_OWORD *)(v32 + 16) = *(_OWORD *)(v33 + 16);
  *(_OWORD *)(v32 + 32) = v35;
  *(_BYTE *)(v32 + 48) = *(_BYTE *)(v33 + 48);
  v36 = a3[6];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(_BYTE *)(v38 + 32);
  v40 = *(_BYTE *)(v38 + 33);
  v41 = *(_QWORD *)v37;
  v42 = *(_QWORD *)(v37 + 8);
  v43 = *(_QWORD *)(v37 + 16);
  v44 = *(_QWORD *)(v37 + 24);
  v45 = *(_BYTE *)(v37 + 33);
  v46 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v46;
  v47 = *(unsigned __int8 *)(v37 + 32);
  *(_BYTE *)(v37 + 32) = v39;
  *(_BYTE *)(v37 + 33) = v40;
  sub_22109ABC4(v41, v42, v43, v44, v47, v45);
  v48 = a3[7];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(_QWORD *)(v50 + 64);
  v52 = *(_BYTE *)(v50 + 72);
  v53 = *(_BYTE *)(v50 + 73);
  v54 = *(_QWORD *)v49;
  v55 = *(_QWORD *)(v49 + 8);
  v56 = *(_QWORD *)(v49 + 16);
  v57 = *(_QWORD *)(v49 + 24);
  v58 = *(_QWORD *)(v49 + 32);
  v59 = *(_QWORD *)(v49 + 40);
  v60 = *(_QWORD *)(v49 + 48);
  v61 = *(_QWORD *)(v49 + 56);
  v62 = *(_QWORD *)(v49 + 64);
  v63 = *(_BYTE *)(v49 + 72);
  v64 = *(_BYTE *)(v49 + 73);
  v65 = *(_OWORD *)(v50 + 16);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *(_OWORD *)(v49 + 16) = v65;
  v66 = *(_OWORD *)(v50 + 48);
  *(_OWORD *)(v49 + 32) = *(_OWORD *)(v50 + 32);
  *(_OWORD *)(v49 + 48) = v66;
  *(_QWORD *)(v49 + 64) = v51;
  *(_BYTE *)(v49 + 72) = v52;
  *(_BYTE *)(v49 + 73) = v53;
  sub_221047014(v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64);
  v67 = a3[8];
  v68 = a1 + v67;
  v69 = (uint64_t *)(a2 + v67);
  v70 = *v69;
  LOBYTE(v69) = *((_BYTE *)v69 + 8);
  v71 = *(_QWORD *)v68;
  v72 = *(_BYTE *)(v68 + 8);
  *(_QWORD *)v68 = v70;
  *(_BYTE *)(v68 + 8) = (_BYTE)v69;
  sub_221017894(v71, v72);
  v73 = a3[9];
  v74 = a1 + v73;
  v75 = (uint64_t *)(a2 + v73);
  v76 = *v75;
  LOBYTE(v75) = *((_BYTE *)v75 + 8);
  v77 = *(_QWORD *)v74;
  v78 = *(_BYTE *)(v74 + 8);
  *(_QWORD *)v74 = v76;
  *(_BYTE *)(v74 + 8) = (_BYTE)v75;
  sub_2210470E0(v77, v78);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStoreButton()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22109BD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = OUTLINED_FUNCTION_11_13();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStoreButton()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22109BDFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_11_13();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t sub_22109BE68()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_22109BEFC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2556597E8;
  if (!qword_2556597E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659740);
    v2 = sub_22109BF80();
    sub_221017AD4(&qword_2556592C8, &qword_2556592A0, MEMORY[0x24BDEDC10]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2556597E8);
  }
  return result;
}

unint64_t sub_22109BF80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2556597F0;
  if (!qword_2556597F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659738);
    sub_221017AD4(&qword_2556597F8, &qword_255659730, (uint64_t)&unk_221316938);
    v3 = v2;
    sub_221017AD4((unint64_t *)&qword_255656B08, &qword_255656B10, MEMORY[0x24BDF1248]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2556597F0);
  }
  return result;
}

unint64_t sub_22109C01C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255657A50;
  if (!qword_255657A50)
  {
    v1 = sub_2212F5058();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEA530], v1);
    atomic_store(result, (unint64_t *)&qword_255657A50);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_7_9()
{
  return type metadata accessor for SubscriptionStoreButton();
}

uint64_t OUTLINED_FUNCTION_10_14(uint64_t a1)
{
  return *(_QWORD *)a1;
}

BOOL OUTLINED_FUNCTION_16_10()
{
  return sub_2211FBD40();
}

uint64_t OUTLINED_FUNCTION_17_12()
{
  return sub_2211FBD9C();
}

uint64_t sub_22109C09C(char a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  _BYTE v9[8];
  double v10;
  double v11;
  uint64_t v12;
  char v13;

  v9[0] = a1;
  v9[1] = a2 & 1;
  v10 = a7;
  v11 = a8;
  v12 = a3;
  v13 = a4;
  return MEMORY[0x227669B20](v9, a5, &type metadata for ContainerRelativeCommonUIGridModifier, a6);
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ContainerRelativeCommonUIGridModifier(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 1);
      v4 = v3 >= 2;
      v2 = v3 - 2;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContainerRelativeCommonUIGridModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 1) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContainerRelativeCommonUIGridModifier()
{
  return &type metadata for ContainerRelativeCommonUIGridModifier;
}

uint64_t sub_22109C18C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_22109C19C()
{
  OUTLINED_FUNCTION_0_17();
  sub_2212F5DE4();
  sub_2212F5E08();
  OUTLINED_FUNCTION_13_15();
}

void sub_22109C1CC()
{
  sub_22109C19C();
}

uint64_t sub_22109C1D4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_22109C1F0 + 4 * byte_2213014C0[a2]))();
}

uint64_t sub_22109C1F0(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1;
  if (a1 <= 5uLL)
    v1 = 5;
  v2 = v1 - 2;
  if (a1 == 3)
    v2 = 2;
  if (a1 >= 3u)
    return v2;
  else
    return 1;
}

uint64_t sub_22109C29C(uint64_t result)
{
  uint64_t v1;

  if (result <= 1uLL)
    v1 = 1;
  else
    v1 = result;
  if (result <= 2u)
    return v1 + 1;
  else
    return result;
}

double sub_22109C2BC(uint64_t a1, unsigned __int8 a2)
{
  double result;
  uint64_t v3;
  double *v4;

  switch(a2)
  {
    case 0u:
      result = 1.5;
      if (a1 != 2)
        goto LABEL_12;
      return result;
    case 3u:
      LOBYTE(v3) = a1 - 1;
      if ((a1 - 1) >= 7u || ((0x71u >> v3) & 1) == 0)
        goto LABEL_12;
      v3 = (char)v3;
      v4 = (double *)&unk_2213016A0;
      goto LABEL_11;
    case 4u:
      if (a1 >= 2u)
        goto LABEL_12;
      result = 3.33333333;
      break;
    case 5u:
      if (a1 >= 3u)
        goto LABEL_12;
      v3 = (char)a1;
      v4 = (double *)&unk_221301688;
LABEL_11:
      result = v4[v3];
      break;
    default:
LABEL_12:
      result = (double)sub_22109C1D4(a1, a2);
      break;
  }
  return result;
}

void sub_22109C374()
{
  OUTLINED_FUNCTION_0_17();
  sub_2212F5DE4();
  sub_2212F5E08();
  OUTLINED_FUNCTION_13_15();
}

void sub_22109C3A4()
{
  sub_22109C374();
}

uint64_t sub_22109C3AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659820);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
    sub_2212F3E94();
  else
    sub_2212F3EA0();
  sub_2212F37F8();
  v7 = swift_allocObject();
  v8 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v7 + 32) = v8;
  *(_BYTE *)(v7 + 48) = *(_BYTE *)(v1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659828);
  sub_22109C634();
  sub_2212F4368();
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v6, v3);
}

double sub_22109C4D8(double a1, uint64_t a2, uint64_t a3)
{
  double v5;
  double v6;
  uint64_t KeyPath;
  uint64_t v8;
  unsigned __int8 v9;
  int v10;
  double v11;
  double v12;
  double v13;

  v5 = *(double *)(a3 + 8);
  v6 = v5 + a1;
  v8 = (uint64_t)sub_22122117C();
  KeyPath = swift_getKeyPath();
  LODWORD(v8) = sub_22129CB8C(v6, KeyPath, v8);
  swift_release();
  if (v8 == 8)
    v8 = 7;
  else
    v8 = v8;
  v9 = *(_BYTE *)a3;
  v10 = *(unsigned __int8 *)(a3 + 1);
  if ((v10 & 1) != 0)
    v11 = sub_22109C2BC(v8, v9);
  else
    v11 = (double)sub_22109C1D4(v8, v9);
  v12 = 0.0;
  if (v10)
  {
    v13 = 60.0;
    if ((v8 & 0xFE) == 0)
      v13 = 36.0;
    v12 = v13 + dbl_2213016D8[(char)v8] + v5 * -0.5;
  }
  return (a1 - v12 - (v11 * *(double *)(a3 + 16) + -1.0) * dbl_2213016D8[(char)v8]) / (v11 * *(double *)(a3 + 16));
}

uint64_t sub_22109C5E0@<X0>(uint64_t a1@<X8>)
{
  return sub_22109C3AC(a1);
}

uint64_t sub_22109C618()
{
  return swift_deallocObject();
}

double sub_22109C628(char a1, double a2)
{
  uint64_t v2;

  return sub_22109C4D8(a2, a1 & 1, v2 + 16);
}

unint64_t sub_22109C634()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255659830;
  if (!qword_255659830)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659828);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEFB78], v1);
    atomic_store(result, (unint64_t *)&qword_255659830);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CommonUIGrid.Variant(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_22109C6C8 + 4 * byte_2213014D1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_22109C6FC + 4 * byte_2213014CC[v4]))();
}

uint64_t sub_22109C6FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22109C704(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22109C70CLL);
  return result;
}

uint64_t sub_22109C718(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22109C720);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22109C724(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22109C72C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CommonUIGrid.Variant()
{
  return &type metadata for CommonUIGrid.Variant;
}

uint64_t _s20LocalizationResourceV5StyleOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CommonUIGrid(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_22109C81C + 4 * byte_2213014DB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_22109C850 + 4 * byte_2213014D6[v4]))();
}

uint64_t sub_22109C850(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22109C858(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22109C860);
  return result;
}

uint64_t sub_22109C86C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22109C874);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_22109C878(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22109C880(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CommonUIGrid()
{
  return &type metadata for CommonUIGrid;
}

uint64_t sub_22109C89C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659828);
  sub_22109C634();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22109C8EC()
{
  unint64_t result;

  result = qword_255659838;
  if (!qword_255659838)
  {
    result = MEMORY[0x22766BAC4](&unk_2213015F4, &type metadata for CommonUIGrid);
    atomic_store(result, (unint64_t *)&qword_255659838);
  }
  return result;
}

unint64_t sub_22109C92C()
{
  unint64_t result;

  result = qword_255659840;
  if (!qword_255659840)
  {
    result = MEMORY[0x22766BAC4](&unk_22130165C, &type metadata for CommonUIGrid.Variant);
    atomic_store(result, (unint64_t *)&qword_255659840);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_17()
{
  return sub_2212F5DD8();
}

uint64_t View.refundRequestSheet(for:isPresented:onDismiss:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *KeyPath;
  uint64_t v17;
  uint64_t v18;
  void *v20;
  char v21;
  uint64_t (*v22)();
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  KeyPath = (void *)swift_getKeyPath();
  v20 = KeyPath;
  v21 = 0;
  v22 = sub_22109CA88;
  v23 = 0;
  v24 = 0;
  v25 = a1;
  v26 = a2;
  v27 = a3;
  v28 = a4;
  v29 = a5;
  v30 = a6;
  swift_retain();
  swift_retain();
  v17 = OUTLINED_FUNCTION_35_5();
  sub_221014FA0(v17);
  MEMORY[0x227669B20](&v20, a7, &type metadata for RefundRequestSheetModifier, a8);
  sub_221046ED4(KeyPath, 0);
  sub_22109D3A4();
  swift_release();
  swift_release();
  v18 = OUTLINED_FUNCTION_35_5();
  return sub_221014FB0(v18);
}

uint64_t sub_22109CA88()
{
  type metadata accessor for RefundRequestCoordinator();
  swift_allocObject();
  return sub_22109E7D8();
}

uint64_t sub_22109CABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;
  const void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
  sub_2212F4884();
  v6 = swift_allocObject();
  memcpy((void *)(v6 + 16), v3, 0x58uLL);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659908);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  v8 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255659910) + 36);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  *(_QWORD *)(v8 + 24) = sub_22109E894;
  *(_QWORD *)(v8 + 32) = v6;
  return sub_22109E89C((uint64_t)v3);
}

void sub_22109CBAC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int v10;
  id v11;
  char v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  _BYTE v29[16];
  __int128 v30;
  char v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for SKLogger();
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *a1;
  v11 = *(id *)a2;
  v12 = *(_BYTE *)(a2 + 8);
  sub_22109E3EC(*(id *)a2, v12);
  sub_221045554();
  v14 = v13;
  sub_221046ED4(v11, v12);
  if (v14)
  {
    v15 = objc_msgSend(v14, sel_scene);

    if (v15)
    {
      objc_opt_self();
      v16 = swift_dynamicCastObjCClass();
      if (v16)
      {
        if (v10)
        {
          v17 = v16;
          v18 = sub_2212F5640();
          __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v18);
          sub_2212F55F8();
          sub_22109E89C(a2);
          v19 = v15;
          v20 = sub_2212F55EC();
          v21 = (_QWORD *)swift_allocObject();
          v22 = MEMORY[0x24BEE6930];
          v21[2] = v20;
          v21[3] = v22;
          memcpy(v21 + 4, (const void *)a2, 0x58uLL);
          v21[15] = v17;
          sub_2211DFBD4((uint64_t)v6, (uint64_t)&unk_255659920, (uint64_t)v21);

          swift_release();
          sub_22101763C((uint64_t)v6, &qword_255656B20);
        }
        else
        {

        }
        goto LABEL_12;
      }

    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565ABC0);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_2212FF8E0;
  *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v23 + 32) = 0xD00000000000004BLL;
  *(_QWORD *)(v23 + 40) = 0x80000002212F8560;
  sub_2212F5DC0();
  swift_bridgeObjectRelease();
  if (qword_255655C08 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v7, (uint64_t)qword_25568CE88);
  sub_22103F99C(v24, (uint64_t)v9);
  v25 = sub_2212F2C1C();
  v26 = sub_2212F2C34();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v9, v26);
  v27 = sub_2212F57E4();
  if (os_log_type_enabled(v25, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_221005000, v25, v27, "Attempting to present an refundRequestSheet without being in the hierarchy.", v28, 2u);
    MEMORY[0x22766BBA8](v28, -1, -1);
  }

  v30 = *(_OWORD *)(a2 + 48);
  v31 = *(_BYTE *)(a2 + 64);
  v29[15] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
  sub_2212F486C();
LABEL_12:
  sub_22109CF04((const void *)a2);
}

void sub_22109CF04(const void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2212F5640();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
  sub_2212F55F8();
  sub_22109E89C((uint64_t)a1);
  v6 = sub_2212F55EC();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x24BEE6930];
  v7[2] = v6;
  v7[3] = v8;
  memcpy(v7 + 4, a1, 0x58uLL);
  sub_2211DFBD4((uint64_t)v4, (uint64_t)&unk_255659960, (uint64_t)v7);
  swift_release();
  sub_22101763C((uint64_t)v4, &qword_255656B20);
}

uint64_t sub_22109D000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[2] = a4;
  v5[3] = a5;
  sub_2212F55F8();
  v5[4] = sub_2212F55EC();
  v5[5] = sub_2212F55D4();
  v5[6] = v6;
  return swift_task_switch();
}

uint64_t sub_22109D06C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(v0 + 136) = *(_BYTE *)(v1 + 32);
  *(_QWORD *)(v0 + 72) = type metadata accessor for RefundRequestCoordinator();
  *(_QWORD *)(v0 + 80) = sub_22109EB80();
  *(_QWORD *)(v0 + 88) = sub_2212F2E38();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_22109D0F4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = MEMORY[0x22766BC44](*(_QWORD *)(v0 + 88) + 136);
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_22109D12C()
{
  uint64_t v0;
  void *v1;
  _QWORD *v3;

  v1 = *(void **)(v0 + 96);
  swift_release();

  if (v1)
  {
    swift_release();
    return OUTLINED_FUNCTION_42_2(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v3 = *(_QWORD **)(v0 + 16);
    *(_QWORD *)(v0 + 104) = sub_2212F2E38();
    *(_QWORD *)(v0 + 112) = v3[5];
    *(_QWORD *)(v0 + 120) = v3[9];
    *(_QWORD *)(v0 + 128) = v3[10];
    return OUTLINED_FUNCTION_0_14();
  }
}

uint64_t sub_22109D1AC()
{
  uint64_t v0;

  sub_22109D214(*(_QWORD *)(v0 + 112), *(void **)(v0 + 24), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  swift_release();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_22109D1EC()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_42_2(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22109D214(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2212F5640();
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v13);
  sub_2212F55F8();
  swift_retain();
  v14 = a2;
  sub_221014FA0(a3);
  v15 = sub_2212F55EC();
  v16 = (_QWORD *)swift_allocObject();
  v17 = MEMORY[0x24BEE6930];
  v16[2] = v15;
  v16[3] = v17;
  v16[4] = v5;
  v16[5] = a1;
  v16[6] = v14;
  v16[7] = a3;
  v16[8] = a4;
  sub_2211DFBD4((uint64_t)v12, (uint64_t)&unk_255659938, (uint64_t)v16);
  swift_release();
  sub_22101763C((uint64_t)v12, &qword_255656B20);
}

void sub_22109D340()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_42_3();
  OUTLINED_FUNCTION_6_0();
}

void sub_22109D35C()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_42_3();
  OUTLINED_FUNCTION_6_0();
}

void sub_22109D378(id *a1)
{
  id v1;

  v1 = *a1;
  sub_2212F357C();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_22109D3A4()
{
  return swift_release();
}

uint64_t sub_22109D3AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;
  _BYTE __dst[88];

  memcpy(__dst, v2, sizeof(__dst));
  return sub_22109CABC(a1, a2);
}

uint64_t sub_22109D3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v13;

  v8[2] = sub_2212F55F8();
  v8[3] = sub_2212F55EC();
  v13 = (_QWORD *)swift_task_alloc();
  v8[4] = v13;
  *v13 = v8;
  v13[1] = sub_22109D490;
  return sub_22109D514(a5, a6, a7, a8);
}

uint64_t sub_22109D490()
{
  OUTLINED_FUNCTION_24_10();
  sub_2212F55D4();
  OUTLINED_FUNCTION_36_4();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_22109D4EC()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_42_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22109D514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[24] = a4;
  v5[25] = v4;
  v5[22] = a2;
  v5[23] = a3;
  v5[21] = a1;
  v6 = sub_2212F4CBC();
  v5[26] = v6;
  v5[27] = *(_QWORD *)(v6 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = __swift_instantiateConcreteTypeFromMangledName(&qword_255659948);
  v5[33] = swift_task_alloc();
  v7 = sub_2212F4CEC();
  v5[34] = v7;
  v5[35] = *(_QWORD *)(v7 - 8);
  v5[36] = swift_task_alloc();
  v8 = sub_2212F2C34();
  v5[37] = v8;
  v5[38] = *(_QWORD *)(v8 - 8);
  v5[39] = swift_task_alloc();
  v5[40] = swift_task_alloc();
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v5[43] = type metadata accessor for SKLogger();
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  v5[46] = swift_task_alloc();
  v5[47] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22109D690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  _QWORD *v18;

  v1 = *(_QWORD *)(v0 + 200);
  swift_unknownObjectWeakAssign();
  v2 = *(_QWORD *)(v1 + 120);
  if (v2)
  {
    v3 = *(_BYTE *)(v1 + 128) & 1;
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 112);
    *(_QWORD *)(v0 + 24) = v2;
    *(_BYTE *)(v0 + 32) = v3;
    *(_BYTE *)(v0 + 33) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
    OUTLINED_FUNCTION_6_12();
  }
  if (qword_255655C08 != -1)
    swift_once();
  v4 = *(_QWORD *)(v0 + 376);
  v5 = *(_QWORD *)(v0 + 336);
  v6 = *(_QWORD *)(v0 + 296);
  v7 = *(_QWORD *)(v0 + 304);
  v8 = __swift_project_value_buffer(*(_QWORD *)(v0 + 344), (uint64_t)qword_25568CE88);
  *(_QWORD *)(v0 + 384) = v8;
  sub_22103F99C(v8, v4);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  *(_QWORD *)(v0 + 392) = v9;
  v9(v5, v4, v6);
  v10 = sub_2212F2C1C();
  v11 = sub_2212F57FC();
  if (OUTLINED_FUNCTION_28_10(v11))
  {
    v12 = *(_QWORD *)(v0 + 168);
    v13 = (uint8_t *)OUTLINED_FUNCTION_6_4();
    *(_DWORD *)v13 = 134349056;
    *(_QWORD *)(v0 + 152) = v12;
    sub_2212F5898();
    _os_log_impl(&dword_221005000, v10, (os_log_type_t)v5, "Presenting overlay for transactionID %{public}llu.", v13, 0xCu);
    OUTLINED_FUNCTION_2_4();
  }
  v14 = *(_QWORD *)(v0 + 336);
  v15 = *(_QWORD *)(v0 + 296);
  v16 = *(_QWORD *)(v0 + 304);

  v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  *(_QWORD *)(v0 + 400) = v17;
  v17(v14, v15);
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v18;
  *v18 = v0;
  v18[1] = sub_22109D844;
  return sub_2212F4CC8();
}

uint64_t sub_22109D844()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_22109D8A4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_8_10();
  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 296);
  sub_22103F99C(*(_QWORD *)(v0 + 384), v2);
  v1(v3, v2, v4);
  v5 = sub_2212F2C1C();
  v6 = sub_2212F57FC();
  if (OUTLINED_FUNCTION_28_10(v6))
  {
    v7 = *(_QWORD *)(v0 + 168);
    v8 = (uint8_t *)OUTLINED_FUNCTION_6_4();
    *(_DWORD *)v8 = 134349056;
    *(_QWORD *)(v0 + 144) = v7;
    sub_2212F5898();
    _os_log_impl(&dword_221005000, v5, (os_log_type_t)v3, "Presenting overlay completed for transactionID %{public}llu.", v8, 0xCu);
    OUTLINED_FUNCTION_2_4();
  }
  v9 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
  v10 = *(_QWORD *)(v0 + 328);
  v11 = *(_QWORD *)(v0 + 296);
  v12 = *(_QWORD *)(v0 + 200);

  v9(v10, v11);
  if (*(_QWORD *)(v12 + 120))
  {
    OUTLINED_FUNCTION_9_15();
    *(_QWORD *)(v0 + 40) = v14;
    *(_QWORD *)(v0 + 48) = v13;
    *(_BYTE *)(v0 + 56) = v15;
    *(_BYTE *)(v0 + 34) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
    OUTLINED_FUNCTION_6_12();
  }
  v16 = *(_QWORD *)(v0 + 184);
  OUTLINED_FUNCTION_32_4();
  v17 = *(_QWORD *)(v0 + 280);
  if (v16)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v17 + 16))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_39_3();
    *(_QWORD *)(v0 + 424) = OUTLINED_FUNCTION_14_14();
    OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_36_4();
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v17 + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_13_13();
    OUTLINED_FUNCTION_24_9();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_52_1();
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_19_12();
    OUTLINED_FUNCTION_31_6();
    OUTLINED_FUNCTION_29_7();
    OUTLINED_FUNCTION_27_9();
    OUTLINED_FUNCTION_26_8();
    return OUTLINED_FUNCTION_1_16(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_22109DA8C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_10();
  v0 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_38_3(v0, &qword_255659948);
  OUTLINED_FUNCTION_33_4();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_22109DAD8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_10();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 280) + 8))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 272));
  OUTLINED_FUNCTION_0_18();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_45_2();
  OUTLINED_FUNCTION_19_12();
  OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_27_9();
  OUTLINED_FUNCTION_26_8();
  return OUTLINED_FUNCTION_1_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22109DB44()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;
  void *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  void (*v40)(_QWORD, _QWORD);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = *(void **)(v0 + 416);
  *(_QWORD *)(v0 + 136) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255661380);
  v3 = swift_dynamicCast();
  v4 = *(void **)(v0 + 416);
  v5 = *(_QWORD *)(v0 + 384);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
  v7 = *(_QWORD *)(v0 + 296);
  if ((v3 & 1) != 0)
  {
    v8 = *(_QWORD *)(v0 + 360);
    v55 = *(_QWORD *)(v0 + 320);
    v10 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 248);
    v56 = *(_QWORD *)(v0 + 232);
    v12 = *(_QWORD *)(v0 + 208);
    v11 = *(_QWORD *)(v0 + 216);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v10, v9, v12);
    sub_22103F99C(v5, v8);
    v6(v55, v8, v7);
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v13(v56, v10, v12);
    v14 = sub_2212F2C1C();
    v15 = sub_2212F57E4();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
    v18 = *(_QWORD *)(v0 + 320);
    v19 = *(_QWORD *)(v0 + 296);
    v20 = *(_QWORD *)(v0 + 232);
    if (v16)
    {
      v21 = *(_QWORD *)(v0 + 168);
      v22 = *(_QWORD *)(v0 + 216);
      v23 = *(_QWORD *)(v0 + 224);
      v54 = *(_QWORD *)(v0 + 208);
      v24 = OUTLINED_FUNCTION_6_4();
      v57 = OUTLINED_FUNCTION_6_4();
      *(_DWORD *)v24 = 134349314;
      *(_QWORD *)(v0 + 112) = v21;
      sub_2212F5898();
      *(_WORD *)(v24 + 12) = 2082;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 104))(v23, *MEMORY[0x24BDEA128], v54);
      v25 = sub_2212F4CB0();
      v26 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v26(v23, v54);
      if ((v25 & 1) != 0)
        v27 = 0xD000000000000028;
      else
        v27 = 0x64656C696166;
      if ((v25 & 1) != 0)
        v28 = 0x80000002212F85B0;
      else
        v28 = 0xE600000000000000;
      *(_QWORD *)(v0 + 160) = sub_221115C44(v27, v28, &v57);
      sub_2212F5898();
      swift_bridgeObjectRelease();
      v26(v20, v54);
      _os_log_impl(&dword_221005000, v14, v15, "Refund request for transactionID %{public}llu %{public}s.", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_2_4();
    }
    v40 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 8);
    v40(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 208));

    v17(v18, v19);
    *(_QWORD *)(v0 + 432) = v40;
    v41 = *(_QWORD *)(v0 + 200);
    OUTLINED_FUNCTION_32_4();
    if (*(_QWORD *)(v41 + 120))
    {
      OUTLINED_FUNCTION_9_15();
      *(_QWORD *)(v0 + 64) = v43;
      *(_QWORD *)(v0 + 72) = v42;
      *(_BYTE *)(v0 + 80) = v44;
      *(_BYTE *)(v0 + 35) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
      OUTLINED_FUNCTION_6_12();
    }
    if (*(_QWORD *)(v0 + 184))
    {
      v13(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208));
      OUTLINED_FUNCTION_25_9();
      OUTLINED_FUNCTION_39_3();
      *(_QWORD *)(v0 + 440) = OUTLINED_FUNCTION_14_14();
      OUTLINED_FUNCTION_23_10();
      OUTLINED_FUNCTION_36_4();
      return swift_task_switch();
    }
    OUTLINED_FUNCTION_30_8();
    v53 = *(void **)(v0 + 136);
  }
  else
  {
    v29 = *(_QWORD *)(v0 + 352);
    v30 = *(_QWORD *)(v0 + 312);

    sub_22103F99C(v5, v29);
    v6(v30, v29, v7);
    v31 = v4;
    v32 = sub_2212F2C1C();
    v33 = sub_2212F57E4();
    v34 = os_log_type_enabled(v32, v33);
    v35 = *(void **)(v0 + 416);
    if (v34)
    {
      v36 = *(_QWORD *)(v0 + 168);
      v37 = OUTLINED_FUNCTION_6_4();
      v38 = (_QWORD *)OUTLINED_FUNCTION_6_4();
      *(_DWORD *)v37 = 134349314;
      *(_QWORD *)(v0 + 120) = v36;
      sub_2212F5898();
      *(_WORD *)(v37 + 12) = 2114;
      v39 = sub_2212F2970();
      *(_QWORD *)(v0 + 128) = v39;
      OUTLINED_FUNCTION_35_5();
      sub_2212F5898();
      *v38 = v39;

      _os_log_impl(&dword_221005000, v32, v33, "Refund request for transactionID %{public}llu failed due to error %{public}@.", (uint8_t *)v37, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255659950);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_2_4();
    }

    v45 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
    v46 = *(_QWORD *)(v0 + 312);
    v47 = *(_QWORD *)(v0 + 296);
    v48 = *(_QWORD *)(v0 + 200);

    v45(v46, v47);
    OUTLINED_FUNCTION_32_4();
    if (*(_QWORD *)(v48 + 120))
    {
      OUTLINED_FUNCTION_9_15();
      *(_QWORD *)(v0 + 88) = v50;
      *(_QWORD *)(v0 + 96) = v49;
      *(_BYTE *)(v0 + 104) = v51;
      *(_BYTE *)(v0 + 36) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
      OUTLINED_FUNCTION_6_12();
    }
    if (*(_QWORD *)(v0 + 184))
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 104))(*(_QWORD *)(v0 + 264), *MEMORY[0x24BDEA138], *(_QWORD *)(v0 + 208));
      OUTLINED_FUNCTION_25_9();
      OUTLINED_FUNCTION_39_3();
      *(_QWORD *)(v0 + 448) = OUTLINED_FUNCTION_14_14();
      OUTLINED_FUNCTION_23_10();
      OUTLINED_FUNCTION_36_4();
      return swift_task_switch();
    }
    v53 = *(void **)(v0 + 416);
  }

  swift_task_dealloc();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_45_2();
  OUTLINED_FUNCTION_19_12();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22109E154()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_10();
  v0 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_38_3(v0, &qword_255659948);
  OUTLINED_FUNCTION_33_4();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_22109E1A0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_10();
  OUTLINED_FUNCTION_30_8();

  OUTLINED_FUNCTION_0_18();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_45_2();
  OUTLINED_FUNCTION_19_12();
  OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_27_9();
  OUTLINED_FUNCTION_26_8();
  return OUTLINED_FUNCTION_1_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22109E208()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_10();
  v0 = OUTLINED_FUNCTION_37_3();
  OUTLINED_FUNCTION_38_3(v0, &qword_255659948);
  OUTLINED_FUNCTION_33_4();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_22109E254()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_10();

  OUTLINED_FUNCTION_0_18();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_45_2();
  OUTLINED_FUNCTION_19_12();
  OUTLINED_FUNCTION_31_6();
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_27_9();
  OUTLINED_FUNCTION_26_8();
  return OUTLINED_FUNCTION_1_16(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22109E2B8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v3 + 112);
  v5 = *(_QWORD *)(v3 + 120);
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = a2;
  *(_BYTE *)(v3 + 128) = a3;
  sub_22109EE28(a1, a2);
  return sub_22109EE54(v4, v5);
}

uint64_t sub_22109E2F8()
{
  uint64_t v0;

  sub_22109EE54(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  swift_unknownObjectWeakDestroy();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_22109E328()
{
  sub_22109E2F8();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for RefundRequestCoordinator()
{
  return objc_opt_self();
}

uint64_t sub_22109E35C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2212F3348();
  v4[0] = v1;
  v4[1] = sub_22109E3B0();
  return MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_22109E3B0()
{
  unint64_t result;

  result = qword_2556598F8;
  if (!qword_2556598F8)
  {
    result = MEMORY[0x22766BAC4](&unk_2213017CC, &type metadata for RefundRequestSheetModifier);
    atomic_store(result, (unint64_t *)&qword_2556598F8);
  }
  return result;
}

id sub_22109E3EC(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain();
}

uint64_t sub_22109E3F8()
{
  return swift_retain();
}

uint64_t destroy for RefundRequestSheetModifier(uint64_t a1)
{
  uint64_t result;

  sub_221046ED4(*(id *)a1, *(_BYTE *)(a1 + 8));
  sub_22109D3A4();
  swift_release();
  result = swift_release();
  if (*(_QWORD *)(a1 + 72))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for RefundRequestSheetModifier(uint64_t a1, uint64_t a2)
{
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_22109E3EC(*(id *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_22109E3F8();
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_retain();
  swift_retain();
  if (v9)
  {
    v11 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v9;
    *(_QWORD *)(a1 + 80) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithCopy for RefundRequestSheetModifier(uint64_t a1, uint64_t a2)
{
  id v4;
  char v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_22109E3EC(*(id *)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_221046ED4(v6, v7);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  sub_22109E3F8();
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  sub_22109D3A4();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  v11 = *(_QWORD *)(a1 + 72);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  if (!v11)
  {
    if (v12)
    {
      v14 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v12;
      *(_QWORD *)(a1 + 80) = v14;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    return a1;
  }
  if (!v12)
  {
    swift_release();
    goto LABEL_7;
  }
  v13 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v13;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy88_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for RefundRequestSheetModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_221046ED4(v6, v7);
  v8 = *((_BYTE *)a2 + 32);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_BYTE *)(a1 + 32) = v8;
  sub_22109D3A4();
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_release();
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
  swift_release();
  v9 = a2[9];
  v10 = *(_QWORD *)(a1 + 72);
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  if (!v10)
  {
    if (v9)
    {
      v12 = a2[10];
      *(_QWORD *)(a1 + 72) = v9;
      *(_QWORD *)(a1 + 80) = v12;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    return a1;
  }
  if (!v9)
  {
    swift_release();
    goto LABEL_7;
  }
  v11 = a2[10];
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RefundRequestSheetModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RefundRequestSheetModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RefundRequestSheetModifier()
{
  return &type metadata for RefundRequestSheetModifier;
}

uint64_t sub_22109E7BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22109E7CC()
{
  return MEMORY[0x24BDB9D70];
}

uint64_t sub_22109E7D8()
{
  uint64_t v0;

  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = 0;
  *(_BYTE *)(v0 + 128) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

uint64_t sub_22109E808()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_22109E818@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2212F2C94();
  *a1 = result;
  return result;
}

uint64_t sub_22109E840()
{
  uint64_t v0;

  sub_221046ED4(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  sub_22109D3A4();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  return swift_deallocObject();
}

void sub_22109E894(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_22109CBAC(a1, v1 + 16);
}

uint64_t sub_22109E89C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 72);
  sub_22109E3EC(*(id *)a1, *(_BYTE *)(a1 + 8));
  sub_22109E3F8();
  swift_retain();
  swift_retain();
  sub_221014FA0(v2);
  return a1;
}

uint64_t sub_22109E91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a4;
  sub_2212F55F8();
  v4[9] = sub_2212F55EC();
  v4[10] = sub_2212F55D4();
  v4[11] = v5;
  return swift_task_switch();
}

uint64_t sub_22109E988()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  type metadata accessor for RefundRequestCoordinator();
  sub_22109EB80();
  *(_QWORD *)(v0 + 96) = sub_2212F2E38();
  v2 = *(_BYTE *)(v1 + 64);
  *(_OWORD *)(v0 + 40) = *(_OWORD *)(v1 + 48);
  *(_BYTE *)(v0 + 56) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
  sub_2212F4884();
  v3 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 112) = v3;
  *(_BYTE *)(v0 + 33) = *(_BYTE *)(v0 + 32);
  OUTLINED_FUNCTION_33_4();
  return swift_task_switch();
}

uint64_t sub_22109EA48()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v0 = OUTLINED_FUNCTION_35_5();
  sub_22109E2B8(v0, v1, v2);
  swift_release();
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_22109EAAC()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_42_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_22109EAD4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_10_15();
  swift_release();
  if (*(_QWORD *)(v0 + 104))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_22109EB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 120);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = OUTLINED_FUNCTION_12_17(v3);
  return sub_22109D000(v4, v5, v6, v7, v2);
}

unint64_t sub_22109EB80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255659928;
  if (!qword_255659928)
  {
    v1 = type metadata accessor for RefundRequestCoordinator();
    result = MEMORY[0x22766BAC4](&unk_22130181C, v1);
    atomic_store(result, &qword_255659928);
  }
  return result;
}

uint64_t sub_22109EBC0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_5();
  swift_release();

  if (*(_QWORD *)(v0 + 56))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_22109EC00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[5];
  v3 = v0[6];
  v4 = v0[7];
  v5 = v0[8];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  v7 = OUTLINED_FUNCTION_12_17(v6);
  return sub_22109D3FC(v7, v8, v9, v10, v2, v3, v4, v5);
}

uint64_t sub_22109EC80()
{
  uint64_t v0;

  OUTLINED_FUNCTION_24_10();
  return OUTLINED_FUNCTION_42_2(*(uint64_t (**)(void))(v0 + 8));
}

void sub_22109ECB4(void (*a1)(void))
{
  a1();
  OUTLINED_FUNCTION_6_0();
}

void sub_22109ECD0(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_2212F5898();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_22109ED80()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_10_15();
  swift_release();
  if (*(_QWORD *)(v0 + 104))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_22109EDBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_22109EF24;
  return sub_22109E91C(a1, v4, v5, v1 + 32);
}

uint64_t sub_22109EE28(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_22109EE54(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_22109EE88()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255659968;
  if (!qword_255659968)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659910);
    sub_221017AD4(&qword_255659970, &qword_255659908, MEMORY[0x24BDEFB78]);
    v3 = v2;
    sub_221017AD4(&qword_25565ABE0, qword_255659978, MEMORY[0x24BDEFF40]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255659968);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_18()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_1_16(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_3_12()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_6_12()
{
  return sub_2212F486C();
}

uint64_t OUTLINED_FUNCTION_7_10()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_10_15()
{
  uint64_t v0;

  sub_221046ED4(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  sub_22109D3A4();
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_12_17(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_14_14()
{
  return sub_2212F55EC();
}

uint64_t OUTLINED_FUNCTION_19_12()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_23_10()
{
  return sub_2212F55D4();
}

uint64_t OUTLINED_FUNCTION_24_10()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_25_9()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_26_8()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_27_9()
{
  return swift_task_dealloc();
}

BOOL OUTLINED_FUNCTION_28_10(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_29_7()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_30_8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 432))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208));
}

uint64_t OUTLINED_FUNCTION_31_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_32_4()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t OUTLINED_FUNCTION_34_5()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_35_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_37_3()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  return v1(v0);
}

void OUTLINED_FUNCTION_38_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_22101763C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_39_3()
{
  return sub_2212F55F8();
}

uint64_t OUTLINED_FUNCTION_42_3()
{
  return sub_2212F3570();
}

uint64_t sub_22109F0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2212F2C34();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_22109F124(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2212F2C34();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_22109F158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2212F2C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_22109F19C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2212F2C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_22109F1E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2212F2C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_22109F224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2212F2C34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_22109F268()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22109F274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_19();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_22109F29C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22109F2A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_19();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t type metadata accessor for SKLogger()
{
  uint64_t result;

  result = qword_2556599D8;
  if (!qword_2556599D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22109F30C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F2C34();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_22109F374()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;

  v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v0 = 8;
  sub_221149CEC();
  v1 = v16;
  do
  {
    v14 = 0;
    MEMORY[0x22766BBB4](&v14, 8);
    v14 >>= 60;
    sub_22109F590();
    v2 = sub_2212F5478();
    v4 = v3;
    v16 = v1;
    v5 = v1[2];
    if (v5 >= v1[3] >> 1)
    {
      sub_221149CEC();
      v1 = v16;
    }
    v1[2] = v5 + 1;
    v6 = &v1[2 * v5];
    v6[4] = v2;
    v6[5] = v4;
    --v0;
  }
  while (v0);
  swift_retain();
  v7 = 0;
  v8 = v5 + 1;
  v9 = v1 + 5;
  v10 = 0xE000000000000000;
  do
  {
    v11 = *v9;
    v16 = (_QWORD *)*(v9 - 1);
    v17 = v11;
    v14 = v7;
    v15 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_2212F549C();
    v15 = v12;
    sub_2212F5400();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v14;
    v10 = v15;
    v9 += 2;
    --v8;
  }
  while (v8);
  swift_release_n();
  return v7;
}

uint64_t sub_22109F51C()
{
  uint64_t v0;

  v0 = type metadata accessor for SKLogger();
  __swift_allocate_value_buffer(v0, qword_25568CE88);
  __swift_project_value_buffer(v0, (uint64_t)qword_25568CE88);
  return sub_2212F2C28();
}

unint64_t sub_22109F590()
{
  unint64_t result;

  result = qword_255659A10;
  if (!qword_255659A10)
  {
    result = MEMORY[0x22766BAC4](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_255659A10);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_19()
{
  return sub_2212F2C34();
}

void sub_22109F5DC()
{
  type metadata accessor for SubscriptionStoreMainContainerContent.Kind();
}

uint64_t sub_22109F620(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[96];

  *(_QWORD *)(v6 - 136) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v6 - 128) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v6 - 144) = &v18[-v7];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659A18);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for SubscriptionStoreContentConfiguration(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2210A57B8(v1, (uint64_t)v10, &qword_255659A18);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
  {
    sub_2210A577C((uint64_t)v10, &qword_255659A18);
    *(_QWORD *)(v6 - 112) = v5;
    *(_QWORD *)(v6 - 104) = v2;
    *(_QWORD *)(v6 - 96) = v3;
    *(_QWORD *)(v6 - 88) = v4;
    type metadata accessor for SubscriptionStoreContainerContext();
  }
  sub_2210A567C((uint64_t)v10, (uint64_t)v13);
  if ((v13[*(int *)(v11 + 28) + 8] & 1) == 0)
  {
    *(_QWORD *)(v6 - 112) = v5;
    *(_QWORD *)(v6 - 104) = v2;
    *(_QWORD *)(v6 - 96) = v3;
    *(_QWORD *)(v6 - 88) = v4;
    type metadata accessor for SubscriptionStoreContainerContext();
  }
  v14 = *(_QWORD *)(v6 - 144);
  sub_2210A567C((uint64_t)v13, v14);
  v16 = *(_QWORD *)(v6 - 128);
  v15 = *(_QWORD *)(v6 - 120);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 136) + 32))(v15, v14, v16);
}

uint64_t sub_22109F848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v3 = v2;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = sub_2212F5844();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - v9;
  sub_22109F934(v3, v6, (uint64_t)&v12 - v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, v10, v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v3 + *(int *)(a1 + 52), v6);
}

uint64_t sub_22109F934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  int v13;
  _QWORD v16[6];
  uint64_t v17;
  _QWORD v18[42];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659A18);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2210A57B8(a1, (uint64_t)v8, &qword_255659A18);
  v9 = type metadata accessor for SubscriptionStoreContentConfiguration(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    v10 = &qword_255659A18;
    v11 = (uint64_t *)v8;
LABEL_6:
    sub_2210A577C((uint64_t)v11, v10);
    v12 = 0;
    goto LABEL_7;
  }
  sub_2210A57B8((uint64_t)&v8[*(int *)(v9 + 24)], (uint64_t)&v17, &qword_255659AC0);
  sub_2210A5740((uint64_t)v8);
  if (!v18[0])
  {
    v10 = &qword_255659AC0;
    v11 = &v17;
    goto LABEL_6;
  }
  sub_2210A57FC(v18, (uint64_t)v16);
  sub_221069B54(&v17);
  v12 = v16[0];
  swift_retain();
  sub_2210A5838((uint64_t)v16);
LABEL_7:
  v17 = v12;
  __swift_instantiateConcreteTypeFromMangledName(qword_255659AC8);
  v13 = swift_dynamicCast();
  return __swift_storeEnumTagSinglePayload(a3, v13 ^ 1u, 1, a2);
}

void sub_22109FAA4()
{
  OUTLINED_FUNCTION_4_16();
  type metadata accessor for SubscriptionStoreContainerContext();
}

void sub_22109FAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9[14] = a1;
  v9[11] = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v12);
  v9[12] = (char *)&a9 - v13;
  v9[32] = v11;
  v9[33] = v10;
  OUTLINED_FUNCTION_4_16();
  type metadata accessor for NestedSubscriptionOptionContentView();
}

void sub_22109FB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v9[29] = a1;
  v9[15] = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_29();
  v9[19] = v15;
  OUTLINED_FUNCTION_14_4();
  MEMORY[0x24BDAC7A8](v16);
  v9[18] = (char *)&a9 - v17;
  v9[7] = type metadata accessor for SubscriptionStoreContentConfiguration(0);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_29();
  v9[4] = v19;
  OUTLINED_FUNCTION_14_4();
  MEMORY[0x24BDAC7A8](v20);
  v9[24] = (char *)&a9 - v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659A18);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_3_4();
  v9[6] = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656338);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_3_4();
  v9[3] = v25;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_3_4();
  v9[1] = v27;
  v9[5] = *(_QWORD *)(type metadata accessor for SubscriptionStoreControl(0, v13, v10, v28) - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v29);
  v9[2] = (char *)&a9 - v30;
  v9[20] = v31;
  v9[13] = *(_QWORD *)(sub_2212F3348() - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_29();
  v9[10] = v33;
  OUTLINED_FUNCTION_14_4();
  MEMORY[0x24BDAC7A8](v34);
  v9[9] = (char *)&a9 - v35;
  OUTLINED_FUNCTION_14_4();
  MEMORY[0x24BDAC7A8](v36);
  v9[8] = (char *)&a9 - v37;
  v39 = type metadata accessor for SubscriptionStoreControlConfiguration(0, v11, v12, v38);
  MEMORY[0x24BDAC7A8](v39);
  v9[23] = v13;
  v9[32] = v13;
  v9[33] = v11;
  v9[16] = v12;
  v9[17] = v11;
  v9[25] = v10;
  OUTLINED_FUNCTION_4_16();
  type metadata accessor for SubscriptionStoreMainContainerContent.Kind();
}

void sub_22109FD28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v2);
  v0[22] = v1;
  v3 = sub_2212F3A20();
  v0[26] = *(_QWORD *)(v3 - 8);
  v0[27] = v3;
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v4);
  sub_22109F5DC();
}

void sub_22109FD98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumTagSinglePayload;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = v0[24];
    sub_2210A567C(v1, v8);
    v9 = v0[4];
    sub_2210A56C0(v8, v9);
    (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[11] + 16))(v0[12], v2 + *(int *)(v7 + 52), v0[14]);
    sub_221189B38(v9, v0[19]);
  }
  v0[19] = v5;
  v0[24] = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v6, v1, v3);
  v10 = v2;
  sub_22109F848(v7, v0[1]);
  v11 = v0[3];
  sub_221013BA4();
  sub_2211E6104(v11, v0[23], v0[25], v0[2]);
  v12 = v10;
  v13 = v0[6];
  sub_2210A57B8(v12, v13, &qword_255659A18);
  v14 = v0[7];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v13, 1, v14);
  *v0 = v6;
  if (EnumTagSinglePayload == 1)
  {
    sub_2210A577C(v13, &qword_255659A18);
    bzero(v0 + 32, 0x157uLL);
  }
  else
  {
    sub_2210A57B8(v13 + *(int *)(v14 + 24), (uint64_t)(v0 + 32), &qword_255659AC0);
    sub_2210A5740(v13);
  }
  OUTLINED_FUNCTION_8_2();
}

void sub_22109FFC0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;

  sub_2210CD98C((uint64_t)(v1 + 32), v2, a1);
  sub_2210A577C((uint64_t)(v1 + 32), &qword_255659AC0);
  (*(void (**)(uint64_t, uint64_t))(v1[5] + 8))(v3, v2);
  v5 = sub_2210A5704();
  v1[30] = a1;
  v1[31] = v5;
  OUTLINED_FUNCTION_34_3();
}

void sub_2210A001C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + 72);
  sub_221088D68(v1, v2, v3);
  sub_221087210(v3, v2, *(_QWORD *)(v0 + 80));
  OUTLINED_FUNCTION_93_0();
}

void sub_2210A005C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_22113B0A4();
  OUTLINED_FUNCTION_9_16(v1);
  OUTLINED_FUNCTION_9_16(v2);
  OUTLINED_FUNCTION_9_16(v4);
  (*(void (**)(_QWORD, uint64_t))(v0[24] + 8))(*v0, v3);
  JUMPOUT(0x2210A00B0);
}

void sub_2210A00BC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  v3 = sub_2210A5704();
  *(_QWORD *)(v1 - 120) = a1;
  *(_QWORD *)(v1 - 112) = v3;
  OUTLINED_FUNCTION_34_3();
}

void sub_2210A00D8()
{
  OUTLINED_FUNCTION_93_0();
}

uint64_t sub_2210A00E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 - 136) = v2;
  *(_QWORD *)(v4 - 128) = a1;
  v5 = v1[27];
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v5, v4 - 136);
  sub_221087210(v3, v5, v1[28]);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1[26] + 8))(v3, v5);
}

void sub_2210A014C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2210A01CC(a1, a2);
  OUTLINED_FUNCTION_11_14();
  type metadata accessor for SubscriptionStoreMainContainerContent();
}

void sub_2210A018C()
{
  OUTLINED_FUNCTION_11_14();
  type metadata accessor for SubscriptionStoreContainerContext();
}

uint64_t sub_2210A019C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t sub_2210A01CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659A18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void type metadata accessor for SubscriptionStoreMainContainerContent()
{
  JUMPOUT(0x22766BA10);
}

void sub_2210A0220()
{
  unint64_t v0;

  sub_2210A55E4();
  if (v0 <= 0x3F)
    type metadata accessor for SubscriptionStoreContainerContext();
}

_QWORD *sub_2210A02B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  _BYTE *v35;
  size_t v36;
  unint64_t v37;
  int v38;
  int v39;
  void *v40;
  _BYTE *v41;
  int EnumTagSinglePayload;
  uint64_t v43;
  int v44;
  int v45;
  unint64_t v46;
  _BYTE *v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  unsigned int v52;
  _OWORD *v53;
  __int128 *v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  _OWORD *v58;
  __int128 *v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  _OWORD *v63;
  __int128 *v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  _OWORD *v68;
  __int128 *v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  _OWORD *v73;
  __int128 *v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  _OWORD *v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  int v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  void *v104;
  const void *v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unsigned int v111;
  BOOL v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  char v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  size_t __n;
  uint64_t v135;
  unsigned int v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;

  v4 = sub_2212F4944();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v136 = *(_DWORD *)(v5 + 84);
  v7 = v6;
  v139 = *(_QWORD *)(v5 + 64);
  v140 = v4;
  if (v136)
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v135 = v8 + v6;
  v137 = v135 & ~(unint64_t)v6;
  v138 = (*(_DWORD *)(v5 + 80) + 40) & ~(unint64_t)*(_DWORD *)(v5 + 80);
  v9 = ((((v137 + v8 + v138 + 7) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8) + 10;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = sub_2212F51B4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = v15 & 0xF8 | 7;
  v17 = v16 | v12;
  v18 = *(_QWORD *)(v14 + 64);
  v19 = *(_QWORD *)(v11 + 64) + v16;
  v20 = ((v18 + 23) & 0xFFFFFFFFFFFFFFF8) + 9 + (((v15 & 0xF8) + 87) & ~v16) + 1;
  v21 = (v12 | v6 | v15) & 0x100000;
  if ((v17 | v6) == 7 && v21 == 0 && ((v9 + v17) & ~v17) + (v19 & ~v16) + v20 + 2 <= 0x18)
  {
    v26 = v11;
    v121 = v137 + v8;
    v122 = v5;
    __n = v8;
    v27 = v138;
    v126 = v10;
    v133 = ((v18 + 23) & 0xFFFFFFFFFFFFFFF8) + 9;
    v28 = ~(unint64_t)v6;
    v29 = ~v17;
    v131 = v13;
    v132 = v20;
    v129 = *(_QWORD *)(v14 + 64);
    v130 = *(_QWORD *)(v13 - 8);
    v128 = *(_DWORD *)(v14 + 84);
    v127 = ~v16;
    v124 = v26;
    v125 = v16;
    v123 = v19;
    if (v136 >= 0x80000001)
    {
      v30 = a2;
      v33 = (_BYTE *)(((unint64_t)a2 + v6 + 40) & v28);
      v32 = v139;
      if (__swift_getEnumTagSinglePayload((uint64_t)v33, v136, v140) <= 1)
      {
        v31 = a2[3];
LABEL_18:
        v34 = v30[4];
        a1[3] = v31;
        a1[4] = v34;
        (**(void (***)(_QWORD *, _QWORD *))(v31 - 8))(a1, v30);
        v35 = (_BYTE *)(((unint64_t)a1 + v7 + 40) & v28);
        v119 = 8 * v32;
        if (v136)
        {
          v36 = v8;
          if (!__swift_getEnumTagSinglePayload((uint64_t)v33, v136, v140))
          {
LABEL_32:
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v122 + 16))(v35, v33, v140);
            if (!v136)
              v35[v32] = 0;
LABEL_34:
            v40 = (void *)((unint64_t)&v35[v135] & v28);
            v41 = (_BYTE *)((unint64_t)&v33[v135] & v28);
            v120 = ~v7;
            if (v136)
            {
              EnumTagSinglePayload = __swift_getEnumTagSinglePayload((unint64_t)&v33[v135] & v28, v136, v140);
            }
            else
            {
              v43 = v122;
              if (!v41[v32])
                goto LABEL_47;
              v44 = (v41[v32] - 1) << v119;
              if (v32 > 3)
                v44 = 0;
              if ((_DWORD)v32)
              {
                if (v32 <= 3)
                  v45 = v32;
                else
                  v45 = 4;
                __asm { BR              X11 }
              }
              EnumTagSinglePayload = v44 + 1;
            }
            v43 = v122;
            if (EnumTagSinglePayload)
            {
              memcpy(v40, v41, v36);
              v27 = v138;
              goto LABEL_49;
            }
LABEL_47:
            (*(void (**)(void *, _BYTE *, uint64_t))(v43 + 16))(v40, v41, v140);
            v27 = v138;
            if (!v136)
              *((_BYTE *)v40 + v32) = 0;
LABEL_49:
            v46 = (unint64_t)&v35[v121 + 7] & 0xFFFFFFFFFFFFFFF8;
            v47 = (_BYTE *)((unint64_t)&v33[v121 + 7] & 0xFFFFFFFFFFFFFFF8);
            if (*((_QWORD *)v47 + 1) < 0xFFFFFFFFuLL)
            {
              v51 = v7;
              v52 = v136;
              memcpy((void *)((unint64_t)&v35[v121 + 7] & 0xFFFFFFFFFFFFFFF8), v47, 0x157uLL);
LABEL_76:
              v84 = (v46 + 350) & 0xFFFFFFFFFFFFFFF8;
              v85 = (unint64_t)(v47 + 350) & 0xFFFFFFFFFFFFFFF8;
              v86 = *(_QWORD *)v85;
              v87 = *(_BYTE *)(v85 + 8);
              j__swift_bridgeObjectRetain(*(_QWORD *)v85, v87);
              *(_QWORD *)v84 = v86;
              *(_BYTE *)(v84 + 8) = v87;
              *(_BYTE *)(v84 + 9) = *(_BYTE *)(v85 + 9);
              v29 = ~v17;
              v37 = v137;
              if (v52)
                v37 = (v139 + v51) & v120;
              v30 = a2;
              v25 = a1;
LABEL_79:
              v88 = ((((v27 + __n + v37 + 7) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8) + 10;
              v89 = ((unint64_t)v25 + v17 + v88) & v29;
              v90 = ((unint64_t)v30 + v17 + v88) & v29;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v124 + 16))(v89, v90, v126);
              v91 = (v123 + v89) & v127;
              v92 = (v123 + v90) & v127;
              *(_BYTE *)v91 = *(_BYTE *)v92;
              *(_QWORD *)(v91 + 8) = *(_QWORD *)(v92 + 8);
              v93 = (_QWORD *)((v91 + 23) & 0xFFFFFFFFFFFFFFF8);
              v94 = (_QWORD *)((v92 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v93 = *v94;
              v95 = ((unint64_t)v93 + 15) & 0xFFFFFFFFFFFFFFF8;
              v96 = ((unint64_t)v94 + 15) & 0xFFFFFFFFFFFFFFF8;
              v97 = *(_QWORD *)(v96 + 8);
              *(_QWORD *)v95 = *(_QWORD *)v96;
              *(_QWORD *)(v95 + 8) = v97;
              *(_BYTE *)(v95 + 16) = *(_BYTE *)(v96 + 16);
              v98 = ((unint64_t)v93 + 39) & 0xFFFFFFFFFFFFFFF8;
              v99 = (unint64_t *)(((unint64_t)v94 + 39) & 0xFFFFFFFFFFFFFFF8);
              v100 = *v99;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              if (v100 < 0xFFFFFFFF)
              {
                *(_OWORD *)v98 = *(_OWORD *)v99;
              }
              else
              {
                v101 = v99[1];
                *(_QWORD *)v98 = v100;
                *(_QWORD *)(v98 + 8) = v101;
                swift_retain();
              }
              v102 = (_QWORD *)((v98 + 23) & 0xFFFFFFFFFFFFFFF8);
              v103 = (_QWORD *)(((unint64_t)v99 + 23) & 0xFFFFFFFFFFFFFFF8);
              *v102 = *v103;
              v102[1] = v103[1];
              v104 = (void *)(((unint64_t)v102 + v125 + 16) & v127);
              v105 = (const void *)(((unint64_t)v103 + v125 + 16) & v127);
              swift_bridgeObjectRetain();
              if (v128 <= 0xFC)
              {
                v109 = v129;
                v111 = *(unsigned __int8 *)((((unint64_t)v105 + v129 + 7) & 0xFFFFFFFFFFFFF8) + 8);
                v112 = v111 < 2 || v111 == 2;
                v108 = v130;
                v106 = v131;
                if (!v112)
                  goto LABEL_84;
              }
              else
              {
                v106 = v131;
                v107 = __swift_getEnumTagSinglePayload((uint64_t)v105, v128, v131);
                v109 = v129;
                v108 = v130;
                if (v107)
                {
LABEL_84:
                  v110 = v133;
                  memcpy(v104, v105, v133);
LABEL_91:
                  *((_BYTE *)v104 + v110) = *((_BYTE *)v105 + v110);
                  *(_BYTE *)(v91 + v132) = *(_BYTE *)(v92 + v132);
                  *(_BYTE *)((v91 + v132) | 1) = *(_BYTE *)((v92 + v132) | 1);
                  return v25;
                }
              }
              (*(void (**)(void *, const void *, uint64_t))(v108 + 16))(v104, v105, v106);
              v113 = ((unint64_t)v104 + v109 + 7) & 0xFFFFFFFFFFFFFFF8;
              v114 = ((unint64_t)v105 + v109 + 7) & 0xFFFFFFFFFFFFFFF8;
              v115 = *(_QWORD *)v114;
              *(_BYTE *)(v113 + 8) = *(_BYTE *)(v114 + 8);
              *(_QWORD *)v113 = v115;
              v116 = ((unint64_t)v104 + v109 + 23) & 0xFFFFFFFFFFFFFFF8;
              v117 = ((unint64_t)v105 + v109 + 23) & 0xFFFFFFFFFFFFFFF8;
              LOBYTE(v113) = *(_BYTE *)(v117 + 8);
              *(_QWORD *)v116 = *(_QWORD *)v117;
              *(_BYTE *)(v116 + 8) = v113;
              v110 = v133;
              goto LABEL_91;
            }
            *(_BYTE *)v46 = *v47;
            *(_QWORD *)(v46 + 8) = *((_QWORD *)v47 + 1);
            v48 = *((_QWORD *)v47 + 5);
            swift_retain();
            if (v48 >= 6)
            {
              *(_QWORD *)(v46 + 40) = v48;
              *(_QWORD *)(v46 + 48) = *((_QWORD *)v47 + 6);
              (**(void (***)(uint64_t, uint64_t, unint64_t))(v48 - 8))(v46 + 16, (uint64_t)(v47 + 16), v48);
            }
            else
            {
              v49 = *((_OWORD *)v47 + 1);
              v50 = *((_OWORD *)v47 + 2);
              *(_QWORD *)(v46 + 48) = *((_QWORD *)v47 + 6);
              *(_OWORD *)(v46 + 16) = v49;
              *(_OWORD *)(v46 + 32) = v50;
            }
            v53 = (_OWORD *)(v46 + 56);
            v54 = (__int128 *)(v47 + 56);
            v55 = *((_QWORD *)v47 + 10);
            if (v55)
            {
              *(_QWORD *)(v46 + 80) = v55;
              *(_QWORD *)(v46 + 88) = *((_QWORD *)v47 + 11);
              (**(void (***)(_OWORD *, __int128 *))(v55 - 8))(v53, v54);
            }
            else
            {
              v56 = *v54;
              v57 = *(_OWORD *)(v47 + 72);
              *(_QWORD *)(v46 + 88) = *((_QWORD *)v47 + 11);
              *v53 = v56;
              *(_OWORD *)(v46 + 72) = v57;
            }
            v58 = (_OWORD *)(v46 + 96);
            v59 = (__int128 *)(v47 + 96);
            v60 = *((_QWORD *)v47 + 15);
            if (v60)
            {
              *(_QWORD *)(v46 + 120) = v60;
              *(_QWORD *)(v46 + 128) = *((_QWORD *)v47 + 16);
              (**(void (***)(_OWORD *, __int128 *))(v60 - 8))(v58, v59);
            }
            else
            {
              v61 = *v59;
              v62 = *((_OWORD *)v47 + 7);
              *(_QWORD *)(v46 + 128) = *((_QWORD *)v47 + 16);
              *v58 = v61;
              *(_OWORD *)(v46 + 112) = v62;
            }
            v63 = (_OWORD *)(v46 + 136);
            v64 = (__int128 *)(v47 + 136);
            v65 = *((_QWORD *)v47 + 20);
            if (v65)
            {
              *(_QWORD *)(v46 + 160) = v65;
              *(_QWORD *)(v46 + 168) = *((_QWORD *)v47 + 21);
              (**(void (***)(_OWORD *, __int128 *))(v65 - 8))(v63, v64);
            }
            else
            {
              v66 = *v64;
              v67 = *(_OWORD *)(v47 + 152);
              *(_QWORD *)(v46 + 168) = *((_QWORD *)v47 + 21);
              *v63 = v66;
              *(_OWORD *)(v46 + 152) = v67;
            }
            v68 = (_OWORD *)(v46 + 176);
            v69 = (__int128 *)(v47 + 176);
            v70 = *((_QWORD *)v47 + 25);
            if (v70)
            {
              *(_QWORD *)(v46 + 200) = v70;
              *(_QWORD *)(v46 + 208) = *((_QWORD *)v47 + 26);
              (**(void (***)(_OWORD *, __int128 *))(v70 - 8))(v68, v69);
              *(_QWORD *)(v46 + 216) = *((_QWORD *)v47 + 27);
            }
            else
            {
              v71 = *v69;
              v72 = *((_OWORD *)v47 + 13);
              *(_OWORD *)(v46 + 192) = *((_OWORD *)v47 + 12);
              *(_OWORD *)(v46 + 208) = v72;
              *v68 = v71;
            }
            v73 = (_OWORD *)(v46 + 224);
            v74 = (__int128 *)(v47 + 224);
            v75 = *((_QWORD *)v47 + 31);
            if (v75 >= 3)
            {
              *(_QWORD *)(v46 + 248) = v75;
              *(_QWORD *)(v46 + 256) = *((_QWORD *)v47 + 32);
              (**(void (***)(_OWORD *, __int128 *))(v75 - 8))(v73, v74);
            }
            else
            {
              v76 = *v74;
              v77 = *((_OWORD *)v47 + 15);
              *(_QWORD *)(v46 + 256) = *((_QWORD *)v47 + 32);
              *v73 = v76;
              *(_OWORD *)(v46 + 240) = v77;
            }
            *(_BYTE *)(v46 + 264) = v47[264];
            v51 = v7;
            if (*((_QWORD *)v47 + 35) >= 4uLL)
            {
              *(_QWORD *)(v46 + 272) = *((_QWORD *)v47 + 34);
              *(_QWORD *)(v46 + 280) = *((_QWORD *)v47 + 35);
              *(_BYTE *)(v46 + 288) = v47[288];
              *(_QWORD *)(v46 + 296) = *((_QWORD *)v47 + 37);
              v82 = *((_QWORD *)v47 + 39);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v82)
              {
                *(_QWORD *)(v46 + 304) = *((_QWORD *)v47 + 38);
                *(_QWORD *)(v46 + 312) = *((_QWORD *)v47 + 39);
                *(_BYTE *)(v46 + 320) = v47[320];
                *(_QWORD *)(v46 + 328) = *((_QWORD *)v47 + 41);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
LABEL_75:
                v52 = v136;
                *(_BYTE *)(v46 + 336) = v47[336];
                *(_BYTE *)(v46 + 337) = v47[337];
                v83 = *(_DWORD *)(v47 + 338);
                *(_BYTE *)(v46 + 342) = v47[342];
                *(_DWORD *)(v46 + 338) = v83;
                goto LABEL_76;
              }
              v78 = (_OWORD *)(v46 + 304);
              v79 = *((_OWORD *)v47 + 19);
              v80 = *((_OWORD *)v47 + 20);
            }
            else
            {
              v78 = (_OWORD *)(v46 + 272);
              v79 = *((_OWORD *)v47 + 17);
              v80 = *((_OWORD *)v47 + 18);
              v81 = *((_OWORD *)v47 + 20);
              *(_OWORD *)(v46 + 304) = *((_OWORD *)v47 + 19);
              *(_OWORD *)(v46 + 320) = v81;
            }
            *v78 = v79;
            v78[1] = v80;
            goto LABEL_75;
          }
        }
        else
        {
          v36 = v8;
          if (!v33[v32])
            goto LABEL_32;
          v38 = (v33[v32] - 1) << v119;
          if (v32 > 3)
            v38 = 0;
          if ((_DWORD)v32)
          {
            if (v32 <= 3)
              v39 = v32;
            else
              v39 = 4;
            __asm { BR              X11 }
          }
          if (v38 == -1)
            goto LABEL_32;
        }
        memcpy(v35, v33, v36);
        goto LABEL_34;
      }
    }
    else
    {
      v30 = a2;
      v31 = a2[3];
      v32 = v139;
      if (v31 > 0xFFFFFFFE)
      {
        v33 = (_BYTE *)(((unint64_t)a2 + v6 + 40) & v28);
        goto LABEL_18;
      }
    }
    v25 = a1;
    memcpy(a1, v30, v9);
    v37 = v135 & ~v7;
    goto LABEL_79;
  }
  v24 = *a2;
  *a1 = *a2;
  v25 = (_QWORD *)(v24 + (((v17 | v6) + 16) & ~(v17 | v6)));
  swift_retain();
  return v25;
}

uint64_t sub_2210A0BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t result;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unsigned int v36;
  char v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_2212F4944();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = ~v7;
  v9 = (v7 + 40) & ~v7;
  v10 = *(_QWORD *)(v5 + 64);
  if (v6 >= 0x80000001)
  {
    v11 = (a1 + v7 + 40) & v8;
    if (__swift_getEnumTagSinglePayload(v11, *(unsigned int *)(v5 + 84), v4) >= 2)
      goto LABEL_51;
  }
  else
  {
    if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
      goto LABEL_51;
    v11 = (a1 + v7 + 40) & v8;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  v38 = 8 * v10;
  if ((_DWORD)v6)
  {
    if (__swift_getEnumTagSinglePayload(v11, v6, v4))
      goto LABEL_18;
    goto LABEL_17;
  }
  if (!*(_BYTE *)(v11 + v10))
    goto LABEL_17;
  v12 = (*(unsigned __int8 *)(v11 + v10) - 1) << v38;
  if (v10 > 3)
    v12 = 0;
  if ((_DWORD)v10)
  {
    if (v10 <= 3)
      v13 = v10;
    else
      v13 = 4;
    __asm { BR              X11 }
  }
  if (v12 == -1)
LABEL_17:
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v4);
LABEL_18:
  v39 = a2;
  v40 = a1;
  if ((_DWORD)v6)
    v14 = v10;
  else
    v14 = v10 + 1;
  v15 = v14 + v7 + v11;
  v16 = v15 & v8;
  if (!(_DWORD)v6)
  {
    if (*(_BYTE *)(v16 + v10))
    {
      v17 = (*(unsigned __int8 *)(v16 + v10) - 1) << v38;
      if (v10 > 3)
        v17 = 0;
      if ((_DWORD)v10)
      {
        if (v10 <= 3)
          v18 = v10;
        else
          v18 = 4;
        __asm { BR              X11 }
      }
      if (v17 != -1)
        goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (!__swift_getEnumTagSinglePayload(v15 & v8, v6, v4))
LABEL_33:
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v16, v4);
LABEL_34:
  v19 = (_QWORD *)((v14 + v11 + ((v14 + v7) & v8) + 7) & 0xFFFFFFFFFFFFFFF8);
  a2 = v39;
  a1 = v40;
  v9 = (v7 + 40) & ~v7;
  if (v19[1] >= 0xFFFFFFFFuLL)
  {
    swift_release();
    if (v19[5] >= 6uLL)
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v19 + 2));
    if (v19[10])
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v19 + 7));
    if (v19[15])
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v19 + 12));
    if (v19[20])
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v19 + 17));
    if (v19[25])
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v19 + 22));
    if (v19[31] >= 3uLL)
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v19 + 28));
    if (v19[35] >= 4uLL)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v19[39])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  j__swift_bridgeObjectRelease(*(_QWORD *)(((unint64_t)v19 + 350) & 0xFFFFFFFFFFFFFFF8), *(unsigned __int8 *)((((unint64_t)v19 + 350) & 0xFFFFFFFFFFFFFFF8) + 8));
LABEL_51:
  if ((_DWORD)v6)
    v20 = v10;
  else
    v20 = v10 + 1;
  v21 = (((v20 + v9 + ((v20 + v7) & v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = sub_2212F51B4();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_DWORD *)(v26 + 80) & 0xF8 | 7;
  v28 = *(_DWORD *)(v26 + 80) & 0xF8 | 7 | v24;
  v29 = (a1 + v28 + v21 + 10) & ~v28;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v29, v22);
  v30 = (*(_QWORD *)(v23 + 64) + v27 + v29) & ~v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v31 = (_QWORD *)((((v30 + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
  if (*v31 >= 0xFFFFFFFFuLL)
    swift_release();
  result = swift_bridgeObjectRelease();
  v33 = v27 + (((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v34 = v33 & ~v27;
  v35 = *(unsigned int *)(v26 + 84);
  if (v35 > 0xFC)
  {
    result = __swift_getEnumTagSinglePayload(v33 & ~v27, v35, v25);
    if ((_DWORD)result)
      return result;
    return (*(uint64_t (**)(unint64_t, uint64_t))(v26 + 8))(v34, v25);
  }
  v36 = *(unsigned __int8 *)((((v34 | 7) + *(_QWORD *)(v26 + 64)) & 0xFFFFFFFFFFFFF8) + 8);
  if (v36 < 2 || v36 == 2)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v26 + 8))(v34, v25);
  return result;
}

_QWORD *sub_2210A1060(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  size_t v17;
  size_t v18;
  int v19;
  int v20;
  size_t v21;
  size_t v22;
  _BYTE *v23;
  unint64_t v24;
  _BYTE *v25;
  int v26;
  int v27;
  size_t v28;
  _BYTE *v29;
  _BYTE *v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  _OWORD *v34;
  __int128 *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  _OWORD *v39;
  __int128 *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  _OWORD *v44;
  __int128 *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  _OWORD *v49;
  __int128 *v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  _OWORD *v54;
  __int128 *v55;
  unint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  int v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  size_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t *v91;
  unint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  void *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  size_t v100;
  char *v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  size_t v107;
  unint64_t v108;
  unint64_t v109;
  char v111;
  uint64_t v112;
  size_t v113;
  _QWORD *v114;
  _QWORD *v115;
  size_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v6 = sub_2212F4944();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = ~v9;
  v11 = (v9 + 40) & ~v9;
  v116 = *(_QWORD *)(v7 + 64);
  v118 = ~v9;
  v115 = a1;
  if (v8 >= 0x80000001)
  {
    v13 = (_BYTE *)(((unint64_t)a2 + v9 + 40) & v10);
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, v8, v6) <= 1)
    {
      v12 = a2[3];
      v10 = ~v9;
LABEL_6:
      v14 = a2[4];
      a1[3] = v12;
      a1[4] = v14;
      v114 = a2;
      (**(void (***)(_QWORD *, _QWORD *))(v12 - 8))(a1, a2);
      v15 = (_BYTE *)(((unint64_t)a1 + v9 + 40) & v10);
      v111 = 8 * v116;
      v112 = a3;
      if ((_DWORD)v8)
      {
        if (!__swift_getEnumTagSinglePayload((uint64_t)v13, v8, v6))
        {
LABEL_26:
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v15, v13, v6);
          if (!(_DWORD)v8)
            v15[v116] = 0;
LABEL_28:
          if ((_DWORD)v8)
            v22 = v116;
          else
            v22 = v116 + 1;
          v23 = (_BYTE *)((unint64_t)&v15[v22 + v9] & v118);
          v24 = (unint64_t)&v13[v22 + v9];
          v25 = (_BYTE *)(v24 & v118);
          if ((_DWORD)v8)
          {
            if (!__swift_getEnumTagSinglePayload(v24 & v118, v8, v6))
            {
LABEL_44:
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v23, v25, v6);
              if (!(_DWORD)v8)
                v23[v116] = 0;
LABEL_46:
              v28 = ((v22 + v9) & v118) + v22;
              v29 = (_BYTE *)((unint64_t)&v15[v28 + 7] & 0xFFFFFFFFFFFFFFF8);
              v30 = (_BYTE *)((unint64_t)&v13[v28 + 7] & 0xFFFFFFFFFFFFFFF8);
              v113 = v22;
              if (*((_QWORD *)v30 + 1) < 0xFFFFFFFFuLL)
              {
                memcpy(v29, v30, 0x157uLL);
                a2 = v114;
                a1 = v115;
                a3 = v112;
                v17 = v116;
              }
              else
              {
                *v29 = *v30;
                *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
                v31 = *((_QWORD *)v30 + 5);
                swift_retain();
                if (v31 >= 6)
                {
                  *((_QWORD *)v29 + 5) = v31;
                  *((_QWORD *)v29 + 6) = *((_QWORD *)v30 + 6);
                  (**(void (***)(uint64_t, uint64_t, unint64_t))(v31 - 8))((uint64_t)(v29 + 16), (uint64_t)(v30 + 16), v31);
                }
                else
                {
                  v32 = *((_OWORD *)v30 + 1);
                  v33 = *((_OWORD *)v30 + 2);
                  *((_QWORD *)v29 + 6) = *((_QWORD *)v30 + 6);
                  *((_OWORD *)v29 + 1) = v32;
                  *((_OWORD *)v29 + 2) = v33;
                }
                a2 = v114;
                a1 = v115;
                a3 = v112;
                v17 = v116;
                v34 = v29 + 56;
                v35 = (__int128 *)(v30 + 56);
                v36 = *((_QWORD *)v30 + 10);
                if (v36)
                {
                  *((_QWORD *)v29 + 10) = v36;
                  *((_QWORD *)v29 + 11) = *((_QWORD *)v30 + 11);
                  (**(void (***)(_OWORD *, __int128 *))(v36 - 8))(v34, v35);
                }
                else
                {
                  v37 = *v35;
                  v38 = *(_OWORD *)(v30 + 72);
                  *((_QWORD *)v29 + 11) = *((_QWORD *)v30 + 11);
                  *v34 = v37;
                  *(_OWORD *)(v29 + 72) = v38;
                }
                v39 = v29 + 96;
                v40 = (__int128 *)(v30 + 96);
                v41 = *((_QWORD *)v30 + 15);
                if (v41)
                {
                  *((_QWORD *)v29 + 15) = v41;
                  *((_QWORD *)v29 + 16) = *((_QWORD *)v30 + 16);
                  (**(void (***)(_OWORD *, __int128 *))(v41 - 8))(v39, v40);
                }
                else
                {
                  v42 = *v40;
                  v43 = *((_OWORD *)v30 + 7);
                  *((_QWORD *)v29 + 16) = *((_QWORD *)v30 + 16);
                  *v39 = v42;
                  *((_OWORD *)v29 + 7) = v43;
                }
                v44 = v29 + 136;
                v45 = (__int128 *)(v30 + 136);
                v46 = *((_QWORD *)v30 + 20);
                if (v46)
                {
                  *((_QWORD *)v29 + 20) = v46;
                  *((_QWORD *)v29 + 21) = *((_QWORD *)v30 + 21);
                  (**(void (***)(_OWORD *, __int128 *))(v46 - 8))(v44, v45);
                }
                else
                {
                  v47 = *v45;
                  v48 = *(_OWORD *)(v30 + 152);
                  *((_QWORD *)v29 + 21) = *((_QWORD *)v30 + 21);
                  *v44 = v47;
                  *(_OWORD *)(v29 + 152) = v48;
                }
                v49 = v29 + 176;
                v50 = (__int128 *)(v30 + 176);
                v51 = *((_QWORD *)v30 + 25);
                if (v51)
                {
                  *((_QWORD *)v29 + 25) = v51;
                  *((_QWORD *)v29 + 26) = *((_QWORD *)v30 + 26);
                  (**(void (***)(_OWORD *, __int128 *))(v51 - 8))(v49, v50);
                  *((_QWORD *)v29 + 27) = *((_QWORD *)v30 + 27);
                }
                else
                {
                  v52 = *v50;
                  v53 = *((_OWORD *)v30 + 13);
                  *((_OWORD *)v29 + 12) = *((_OWORD *)v30 + 12);
                  *((_OWORD *)v29 + 13) = v53;
                  *v49 = v52;
                }
                v54 = v29 + 224;
                v55 = (__int128 *)(v30 + 224);
                v56 = *((_QWORD *)v30 + 31);
                if (v56 >= 3)
                {
                  *((_QWORD *)v29 + 31) = v56;
                  *((_QWORD *)v29 + 32) = *((_QWORD *)v30 + 32);
                  (**(void (***)(_OWORD *, __int128 *))(v56 - 8))(v54, v55);
                }
                else
                {
                  v57 = *v55;
                  v58 = *((_OWORD *)v30 + 15);
                  *((_QWORD *)v29 + 32) = *((_QWORD *)v30 + 32);
                  *v54 = v57;
                  *((_OWORD *)v29 + 15) = v58;
                }
                v29[264] = v30[264];
                if (*((_QWORD *)v30 + 35) >= 4uLL)
                {
                  *((_QWORD *)v29 + 34) = *((_QWORD *)v30 + 34);
                  *((_QWORD *)v29 + 35) = *((_QWORD *)v30 + 35);
                  v29[288] = v30[288];
                  *((_QWORD *)v29 + 37) = *((_QWORD *)v30 + 37);
                  v62 = *((_QWORD *)v30 + 39);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v62)
                  {
                    *((_QWORD *)v29 + 38) = *((_QWORD *)v30 + 38);
                    *((_QWORD *)v29 + 39) = *((_QWORD *)v30 + 39);
                    v29[320] = v30[320];
                    *((_QWORD *)v29 + 41) = *((_QWORD *)v30 + 41);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    v63 = *((_OWORD *)v30 + 20);
                    *((_OWORD *)v29 + 19) = *((_OWORD *)v30 + 19);
                    *((_OWORD *)v29 + 20) = v63;
                  }
                  a2 = v114;
                }
                else
                {
                  v59 = *((_OWORD *)v30 + 17);
                  v60 = *((_OWORD *)v30 + 18);
                  v61 = *((_OWORD *)v30 + 20);
                  *((_OWORD *)v29 + 19) = *((_OWORD *)v30 + 19);
                  *((_OWORD *)v29 + 20) = v61;
                  *((_OWORD *)v29 + 17) = v59;
                  *((_OWORD *)v29 + 18) = v60;
                }
                v29[336] = v30[336];
                v29[337] = v30[337];
                v64 = *(_DWORD *)(v30 + 338);
                v29[342] = v30[342];
                *(_DWORD *)(v29 + 338) = v64;
              }
              v65 = (unint64_t)(v29 + 350) & 0xFFFFFFFFFFFFFFF8;
              v66 = (unint64_t)(v30 + 350) & 0xFFFFFFFFFFFFFFF8;
              v67 = *(_QWORD *)v66;
              v68 = *(_BYTE *)(v66 + 8);
              j__swift_bridgeObjectRetain(*(_QWORD *)v66, v68);
              *(_QWORD *)v65 = v67;
              *(_BYTE *)(v65 + 8) = v68;
              *(_BYTE *)(v65 + 9) = *(_BYTE *)(v66 + 9);
              v69 = v17;
              v18 = v113;
              v11 = (v9 + 40) & ~v9;
              v16 = ~v9;
              if ((_DWORD)v8)
                goto LABEL_75;
              goto LABEL_74;
            }
          }
          else
          {
            if (!v25[v116])
              goto LABEL_44;
            v26 = (v25[v116] - 1) << v111;
            if (v116 > 3)
              v26 = 0;
            if ((_DWORD)v116)
            {
              if (v116 <= 3)
                v27 = v116;
              else
                v27 = 4;
              __asm { BR              X11 }
            }
            if (v26 == -1)
              goto LABEL_44;
          }
          memcpy(v23, v25, v22);
          goto LABEL_46;
        }
      }
      else
      {
        if (!v13[v116])
          goto LABEL_26;
        v19 = (v13[v116] - 1) << v111;
        if (v116 > 3)
          v19 = 0;
        if ((_DWORD)v116)
        {
          if (v116 <= 3)
            v20 = v116;
          else
            v20 = 4;
          __asm { BR              X11 }
        }
        if (v19 == -1)
          goto LABEL_26;
      }
      if ((_DWORD)v8)
        v21 = v116;
      else
        v21 = v116 + 1;
      memcpy(v15, v13, v21);
      goto LABEL_28;
    }
  }
  else
  {
    v12 = a2[3];
    if (v12 > 0xFFFFFFFE)
    {
      v13 = (_BYTE *)(((unint64_t)a2 + v9 + 40) & v10);
      goto LABEL_6;
    }
  }
  v17 = v116;
  v16 = ~v9;
  if ((_DWORD)v8)
    v18 = v116;
  else
    v18 = v116 + 1;
  memcpy(a1, a2, ((((v18 + v11 + ((v18 + v9) & v118) + 7) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8) + 10);
LABEL_74:
  v69 = v18;
LABEL_75:
  v70 = (v69 + v9) & v16;
  v71 = 7;
  if (!(_DWORD)v8)
    v71 = 8;
  v72 = (((v71 + v17 + v11 + v70) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8;
  v73 = *(_QWORD *)(a3 + 16);
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(unsigned __int8 *)(v74 + 80);
  v117 = sub_2212F51B4();
  v76 = *(_QWORD *)(v117 - 8);
  v77 = *(_DWORD *)(v76 + 80) & 0xF8 | 7;
  v78 = *(_DWORD *)(v76 + 80) & 0xF8 | 7 | v75;
  v79 = v72 + v78 + 10;
  v80 = ((unint64_t)a1 + v79) & ~v78;
  v81 = ((unint64_t)a2 + v79) & ~v78;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v74 + 16))(v80, v81, v73);
  v82 = *(_QWORD *)(v74 + 64) + v77;
  v83 = (v82 + v80) & ~v77;
  v84 = (v82 + v81) & ~v77;
  *(_BYTE *)v83 = *(_BYTE *)v84;
  *(_QWORD *)(v83 + 8) = *(_QWORD *)(v84 + 8);
  v85 = (_QWORD *)((v83 + 23) & 0xFFFFFFFFFFFFFFF8);
  v86 = (_QWORD *)((v84 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v85 = *v86;
  v119 = ~v77;
  v87 = ((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8;
  v88 = ((unint64_t)v86 + 15) & 0xFFFFFFFFFFFFFFF8;
  v89 = *(_QWORD *)(v88 + 8);
  *(_QWORD *)v87 = *(_QWORD *)v88;
  *(_QWORD *)(v87 + 8) = v89;
  *(_BYTE *)(v87 + 16) = *(_BYTE *)(v88 + 16);
  v90 = ((unint64_t)v85 + 39) & 0xFFFFFFFFFFFFFFF8;
  v91 = (unint64_t *)(((unint64_t)v86 + 39) & 0xFFFFFFFFFFFFFFF8);
  v92 = *v91;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v92 < 0xFFFFFFFF)
  {
    *(_OWORD *)v90 = *(_OWORD *)v91;
  }
  else
  {
    v93 = v91[1];
    *(_QWORD *)v90 = v92;
    *(_QWORD *)(v90 + 8) = v93;
    swift_retain();
  }
  v94 = (_QWORD *)((v90 + 23) & 0xFFFFFFFFFFFFFFF8);
  v95 = (_QWORD *)(((unint64_t)v91 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v94 = *v95;
  v94[1] = v95[1];
  v96 = (void *)(((unint64_t)v94 + v77 + 16) & v119);
  v97 = (char *)(((unint64_t)v95 + v77 + 16) & v119);
  v98 = *(unsigned int *)(v76 + 84);
  v99 = *(_QWORD *)(v76 + 64);
  v100 = ((v99 + 23) & 0xFFFFFFFFFFFFFFF8) + 9;
  swift_bridgeObjectRetain();
  if (v98 <= 0xFC)
  {
    v101 = &v97[v99];
    v102 = (unint64_t)&v97[v99 + 7] & 0xFFFFFFFFFFFFFFF8;
    if (*(unsigned __int8 *)(v102 + 8) <= 2u)
      goto LABEL_85;
  }
  else if (!__swift_getEnumTagSinglePayload((uint64_t)v97, v98, v117))
  {
    v101 = &v97[v99];
    v102 = (unint64_t)&v97[v99 + 7] & 0xFFFFFFFFFFFFFFF8;
LABEL_85:
    (*(void (**)(void *, char *, uint64_t))(v76 + 16))(v96, v97, v117);
    v103 = ((unint64_t)v96 + v99 + 7) & 0xFFFFFFFFFFFFFFF8;
    v104 = *(_QWORD *)v102;
    *(_BYTE *)(v103 + 8) = *(_BYTE *)(v102 + 8);
    *(_QWORD *)v103 = v104;
    v105 = ((unint64_t)v96 + v99 + 23) & 0xFFFFFFFFFFFFFFF8;
    v106 = (unint64_t)(v101 + 23) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v104) = *(_BYTE *)(v106 + 8);
    *(_QWORD *)v105 = *(_QWORD *)v106;
    *(_BYTE *)(v105 + 8) = v104;
    goto LABEL_86;
  }
  memcpy(v96, v97, v100);
LABEL_86:
  *((_BYTE *)v96 + v100) = v97[v100];
  v107 = ((v77 + 80) & v119 | 1) + v100;
  v108 = v107 + v83;
  v109 = v107 + v84;
  *(_BYTE *)v108 = *(_BYTE *)v109;
  *(_BYTE *)(v108 | 1) = *(_BYTE *)(v109 | 1);
  return v115;
}

_QWORD *sub_2210A18FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  size_t v11;
  unint64_t v12;
  unsigned int EnumTagSinglePayload;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  unsigned int v17;
  _BYTE *v18;
  int v19;
  int v20;
  size_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  size_t v37;
  _BYTE *v38;
  size_t v39;
  _BYTE *v40;
  unint64_t v41;
  _BYTE *v42;
  int v43;
  int v44;
  size_t v45;
  unint64_t v46;
  uint64_t v47;
  size_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  int v52;
  size_t v53;
  _BYTE *v54;
  _BYTE *v55;
  unint64_t v56;
  __int128 v57;
  __int128 v58;
  _OWORD *v59;
  __int128 *v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  _OWORD *v64;
  __int128 *v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  _OWORD *v69;
  __int128 *v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  _OWORD *v74;
  __int128 *v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  _OWORD *v79;
  __int128 *v80;
  unint64_t v81;
  __int128 v82;
  __int128 v83;
  _OWORD *v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  int v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unsigned __int8 v93;
  size_t v94;
  uint64_t v95;
  size_t v96;
  _QWORD *v97;
  size_t v98;
  _BYTE *v99;
  unint64_t v100;
  _BYTE *v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  size_t v108;
  _BYTE *v109;
  _BYTE *v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  _OWORD *v119;
  __int128 *v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  _OWORD *v124;
  __int128 *v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  _OWORD *v129;
  __int128 *v130;
  uint64_t v131;
  __int128 v132;
  __int128 v133;
  _OWORD *v134;
  __int128 *v135;
  uint64_t v136;
  __int128 v137;
  __int128 v138;
  _OWORD *v139;
  __int128 *v140;
  unint64_t v141;
  __int128 v142;
  __int128 v143;
  _OWORD *v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  __int128 v151;
  uint64_t v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  _OWORD *v158;
  _OWORD *v159;
  uint64_t v160;
  __int128 v161;
  __int128 v162;
  int v163;
  __int128 v164;
  __int128 v165;
  unint64_t v166;
  __int128 v167;
  __int128 v168;
  __int128 *v169;
  __int128 *v170;
  unint64_t v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  uint64_t v178;
  __int128 v179;
  __int128 *v180;
  uint64_t v181;
  __int128 v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  unsigned __int8 v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  _QWORD *v206;
  unint64_t v207;
  unint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  unint64_t *v211;
  unint64_t v212;
  unint64_t v213;
  unint64_t v214;
  _QWORD *v215;
  _QWORD *v216;
  void *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  size_t v221;
  int v222;
  int v223;
  char *v224;
  unint64_t v225;
  unsigned int v226;
  unint64_t v228;
  uint64_t v229;
  unint64_t v230;
  unint64_t v231;
  _QWORD *result;
  size_t v233;
  unint64_t v234;
  unint64_t v235;
  int v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char v240;
  size_t v241;
  size_t v242;
  size_t v243;
  _BYTE *__dst;
  unint64_t __dsta;
  _QWORD *v247;
  size_t v248;
  _QWORD *v249;
  size_t v250;
  uint64_t v251;

  v5 = sub_2212F4944();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ~v8;
  v10 = (v8 + 40) & ~v8;
  v11 = *(_QWORD *)(v6 + 64);
  v248 = v11;
  v249 = a1;
  v240 = 8 * v11;
  v250 = v11;
  v247 = a2;
  if (v7 < 0x80000001)
  {
    v12 = a2[3];
    if (a1[3] > 0xFFFFFFFEuLL)
    {
      if (v12 >= 0xFFFFFFFF)
      {
        __dst = (_BYTE *)(((unint64_t)a1 + v8 + 40) & v9);
        goto LABEL_7;
      }
LABEL_20:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      v24 = (uint64_t)a1 + v8 + 40;
      v25 = v24 & v9;
      if ((_DWORD)v7)
      {
        if (__swift_getEnumTagSinglePayload(v24 & v9, v7, v5))
          goto LABEL_92;
      }
      else if (*(_BYTE *)(v25 + v248))
      {
        v32 = (*(unsigned __int8 *)(v25 + v248) - 1) << v240;
        if (v11 > 3)
          v32 = 0;
        if ((_DWORD)v11)
        {
          if (v11 <= 3)
            v33 = v11;
          else
            v33 = 4;
          __asm { BR              X11 }
        }
        if (v32 != -1)
        {
LABEL_92:
          if ((_DWORD)v7)
            v45 = v11;
          else
            v45 = v11 + 1;
          v46 = v9;
          v47 = v8;
          v241 = v45;
          __dsta = v46;
          v48 = v45 + v8;
          v49 = v45 + v8 + v25;
          v50 = v49 & v46;
          if ((_DWORD)v7)
          {
            if (__swift_getEnumTagSinglePayload(v49 & v46, v7, v5))
            {
LABEL_142:
              v95 = v10;
              v96 = (v48 & __dsta) + v241;
              v97 = (_QWORD *)((v25 + v96 + 7) & 0xFFFFFFFFFFFFFFF8);
              v11 = v250;
              v27 = v47;
              if (v97[1] >= 0xFFFFFFFFuLL)
              {
                swift_release();
                if (v97[5] >= 6uLL)
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v97 + 2));
                if (v97[10])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v97 + 7));
                if (v97[15])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v97 + 12));
                if (v97[20])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v97 + 17));
                if (v97[25])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v97 + 22));
                if (v97[31] >= 3uLL)
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v97 + 28));
                if (v97[35] >= 4uLL)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v97[39])
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                }
              }
              j__swift_bridgeObjectRelease(*(_QWORD *)(((unint64_t)v97 + 350) & 0xFFFFFFFFFFFFFFF8), *(unsigned __int8 *)((((unint64_t)v97 + 350) & 0xFFFFFFFFFFFFFFF8) + 8));
              v10 = v95;
              memcpy(a1, a2, ((((v95 + v96 + 7) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8) + 10);
              v26 = v241;
              v9 = __dsta;
              goto LABEL_303;
            }
          }
          else if (*(_BYTE *)(v50 + v248))
          {
            v51 = (*(unsigned __int8 *)(v50 + v248) - 1) << v240;
            if (v250 > 3)
              v51 = 0;
            if ((_DWORD)v250)
            {
              if (v250 <= 3)
                v52 = v250;
              else
                v52 = 4;
              __asm { BR              X11 }
            }
            if (v51 != -1)
              goto LABEL_142;
          }
          (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v50, v5);
          goto LABEL_142;
        }
      }
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v25, v5);
      goto LABEL_92;
    }
    v16 = *(unsigned int *)(v6 + 84);
    v7 = *(unsigned __int8 *)(v6 + 80);
    if (v12 >= 0xFFFFFFFF)
    {
      __dst = (_BYTE *)(((unint64_t)a1 + v8 + 40) & v9);
      v15 = (_BYTE *)(((unint64_t)a2 + v8 + 40) & v9);
      goto LABEL_17;
    }
    goto LABEL_23;
  }
  __dst = (_BYTE *)(((unint64_t)a1 + v8 + 40) & v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)__dst, v7, v5);
  v14 = v7;
  v7 = v8;
  v15 = (_BYTE *)(((unint64_t)a2 + v8 + 40) & v9);
  v16 = v14;
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v15, v14, v5);
  if (EnumTagSinglePayload >= 2)
  {
    v11 = v250;
    if (v17 < 2)
    {
LABEL_17:
      v23 = a2[3];
      a1[3] = v23;
      a1[4] = a2[4];
      (**(void (***)(_QWORD *, _QWORD *))(v23 - 8))(a1, a2);
      v239 = v10;
      if ((_DWORD)v16)
      {
        if (!__swift_getEnumTagSinglePayload((uint64_t)v15, v16, v5))
        {
LABEL_73:
          v38 = __dst;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(__dst, v15, v5);
          v36 = v16;
          if (!(_DWORD)v16)
            __dst[v248] = 0;
LABEL_75:
          if ((_DWORD)v36)
            v39 = v11;
          else
            v39 = v11 + 1;
          v40 = (_BYTE *)((unint64_t)&v38[v39 + v7] & v9);
          v41 = v9;
          v42 = (_BYTE *)((unint64_t)&v15[v39 + v7] & v9);
          v236 = v36;
          if ((_DWORD)v36)
          {
            if (!__swift_getEnumTagSinglePayload((uint64_t)v42, v36, v5))
            {
LABEL_109:
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v40, v42, v5);
              v10 = v239;
              v9 = v41;
              if (!v236)
                v40[v248] = 0;
LABEL_111:
              v242 = v39;
              v53 = ((v39 + v7) & v9) + v39;
              v54 = (_BYTE *)((unint64_t)&__dst[v53 + 7] & 0xFFFFFFFFFFFFFFF8);
              v55 = (_BYTE *)((unint64_t)&v15[v53 + 7] & 0xFFFFFFFFFFFFFFF8);
              if (*((_QWORD *)v55 + 1) < 0xFFFFFFFFuLL)
              {
                memcpy(v54, v55, 0x157uLL);
                a1 = v249;
                v27 = v7;
                LODWORD(v7) = v236;
                goto LABEL_138;
              }
              *v54 = *v55;
              *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
              v56 = *((_QWORD *)v55 + 5);
              swift_retain();
              if (v56 >= 6)
              {
                *((_QWORD *)v54 + 5) = v56;
                *((_QWORD *)v54 + 6) = *((_QWORD *)v55 + 6);
                (**(void (***)(uint64_t, uint64_t, unint64_t))(v56 - 8))((uint64_t)(v54 + 16), (uint64_t)(v55 + 16), v56);
              }
              else
              {
                v57 = *((_OWORD *)v55 + 1);
                v58 = *((_OWORD *)v55 + 2);
                *((_QWORD *)v54 + 6) = *((_QWORD *)v55 + 6);
                *((_OWORD *)v54 + 1) = v57;
                *((_OWORD *)v54 + 2) = v58;
              }
              a1 = v249;
              v27 = v7;
              v9 = v41;
              LODWORD(v7) = v236;
              v59 = v54 + 56;
              v60 = (__int128 *)(v55 + 56);
              v61 = *((_QWORD *)v55 + 10);
              if (v61)
              {
                *((_QWORD *)v54 + 10) = v61;
                *((_QWORD *)v54 + 11) = *((_QWORD *)v55 + 11);
                (**(void (***)(_OWORD *, __int128 *))(v61 - 8))(v59, v60);
              }
              else
              {
                v62 = *v60;
                v63 = *(_OWORD *)(v55 + 72);
                *((_QWORD *)v54 + 11) = *((_QWORD *)v55 + 11);
                *v59 = v62;
                *(_OWORD *)(v54 + 72) = v63;
              }
              v64 = v54 + 96;
              v65 = (__int128 *)(v55 + 96);
              v66 = *((_QWORD *)v55 + 15);
              if (v66)
              {
                *((_QWORD *)v54 + 15) = v66;
                *((_QWORD *)v54 + 16) = *((_QWORD *)v55 + 16);
                (**(void (***)(_OWORD *, __int128 *))(v66 - 8))(v64, v65);
              }
              else
              {
                v67 = *v65;
                v68 = *((_OWORD *)v55 + 7);
                *((_QWORD *)v54 + 16) = *((_QWORD *)v55 + 16);
                *v64 = v67;
                *((_OWORD *)v54 + 7) = v68;
              }
              v69 = v54 + 136;
              v70 = (__int128 *)(v55 + 136);
              v71 = *((_QWORD *)v55 + 20);
              if (v71)
              {
                *((_QWORD *)v54 + 20) = v71;
                *((_QWORD *)v54 + 21) = *((_QWORD *)v55 + 21);
                (**(void (***)(_OWORD *, __int128 *))(v71 - 8))(v69, v70);
              }
              else
              {
                v72 = *v70;
                v73 = *(_OWORD *)(v55 + 152);
                *((_QWORD *)v54 + 21) = *((_QWORD *)v55 + 21);
                *v69 = v72;
                *(_OWORD *)(v54 + 152) = v73;
              }
              v74 = v54 + 176;
              v75 = (__int128 *)(v55 + 176);
              v76 = *((_QWORD *)v55 + 25);
              if (v76)
              {
                *((_QWORD *)v54 + 25) = v76;
                *((_QWORD *)v54 + 26) = *((_QWORD *)v55 + 26);
                (**(void (***)(_OWORD *, __int128 *))(v76 - 8))(v74, v75);
                *((_QWORD *)v54 + 27) = *((_QWORD *)v55 + 27);
              }
              else
              {
                v77 = *v75;
                v78 = *((_OWORD *)v55 + 13);
                *((_OWORD *)v54 + 12) = *((_OWORD *)v55 + 12);
                *((_OWORD *)v54 + 13) = v78;
                *v74 = v77;
              }
              v79 = v54 + 224;
              v80 = (__int128 *)(v55 + 224);
              v81 = *((_QWORD *)v55 + 31);
              if (v81 >= 3)
              {
                *((_QWORD *)v54 + 31) = v81;
                *((_QWORD *)v54 + 32) = *((_QWORD *)v55 + 32);
                (**(void (***)(_OWORD *, __int128 *))(v81 - 8))(v79, v80);
              }
              else
              {
                v82 = *v80;
                v83 = *((_OWORD *)v55 + 15);
                *((_QWORD *)v54 + 32) = *((_QWORD *)v55 + 32);
                *v79 = v82;
                *((_OWORD *)v54 + 15) = v83;
              }
              v54[264] = v55[264];
              if (*((_QWORD *)v55 + 35) >= 4uLL)
              {
                *((_QWORD *)v54 + 34) = *((_QWORD *)v55 + 34);
                *((_QWORD *)v54 + 35) = *((_QWORD *)v55 + 35);
                v54[288] = v55[288];
                *((_QWORD *)v54 + 37) = *((_QWORD *)v55 + 37);
                v88 = *((_QWORD *)v55 + 39);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v88)
                {
                  *((_QWORD *)v54 + 38) = *((_QWORD *)v55 + 38);
                  *((_QWORD *)v54 + 39) = *((_QWORD *)v55 + 39);
                  v54[320] = v55[320];
                  *((_QWORD *)v54 + 41) = *((_QWORD *)v55 + 41);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
LABEL_137:
                  v54[336] = v55[336];
                  v54[337] = v55[337];
                  v89 = *(_DWORD *)(v55 + 338);
                  v54[342] = v55[342];
                  *(_DWORD *)(v54 + 338) = v89;
LABEL_138:
                  v90 = (unint64_t)(v54 + 350) & 0xFFFFFFFFFFFFFFF8;
                  v91 = (unint64_t)(v55 + 350) & 0xFFFFFFFFFFFFFFF8;
                  v92 = *(_QWORD *)v91;
                  v93 = *(_BYTE *)(v91 + 8);
                  j__swift_bridgeObjectRetain(*(_QWORD *)v91, v93);
                  *(_QWORD *)v90 = v92;
                  *(_BYTE *)(v90 + 8) = v93;
                  *(_BYTE *)(v90 + 9) = *(_BYTE *)(v91 + 9);
                  v11 = v250;
                  v26 = v242;
                  v94 = v248;
                  if ((_DWORD)v7)
                    goto LABEL_304;
                  goto LABEL_303;
                }
                v84 = v54 + 304;
                v85 = *((_OWORD *)v55 + 19);
                v86 = *((_OWORD *)v55 + 20);
              }
              else
              {
                v84 = v54 + 272;
                v85 = *((_OWORD *)v55 + 17);
                v86 = *((_OWORD *)v55 + 18);
                v87 = *((_OWORD *)v55 + 20);
                *((_OWORD *)v54 + 19) = *((_OWORD *)v55 + 19);
                *((_OWORD *)v54 + 20) = v87;
              }
              *v84 = v85;
              v84[1] = v86;
              goto LABEL_137;
            }
          }
          else
          {
            if (!v42[v248])
              goto LABEL_109;
            v43 = (v42[v248] - 1) << v240;
            if (v250 > 3)
              v43 = 0;
            if ((_DWORD)v250)
            {
              if (v250 <= 3)
                v44 = v250;
              else
                v44 = 4;
              __asm { BR              X11 }
            }
            if (v43 == -1)
              goto LABEL_109;
          }
          memcpy(v40, v42, v39);
          v10 = v239;
          v9 = v41;
          goto LABEL_111;
        }
      }
      else
      {
        if (!v15[v248])
          goto LABEL_73;
        v30 = (v15[v248] - 1) << v240;
        if (v11 > 3)
          v30 = 0;
        if ((_DWORD)v11)
        {
          if (v11 <= 3)
            v31 = v11;
          else
            v31 = 4;
          __asm { BR              X11 }
        }
        if (v30 == -1)
          goto LABEL_73;
      }
      v36 = v16;
      if ((_DWORD)v16)
        v37 = v11;
      else
        v37 = v11 + 1;
      v38 = __dst;
      memcpy(__dst, v15, v37);
      goto LABEL_75;
    }
LABEL_23:
    if ((_DWORD)v16)
      v26 = v11;
    else
      v26 = v11 + 1;
    v27 = v7;
    LODWORD(v7) = v16;
    memcpy(a1, a2, ((((v26 + v10 + ((v26 + v27) & v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8) + 10);
    goto LABEL_303;
  }
  v11 = v250;
  v8 = v7;
  v7 = v16;
  if (v17 >= 2)
    goto LABEL_20;
LABEL_7:
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v237 = v8;
  v238 = v10;
  v18 = (_BYTE *)(((unint64_t)a2 + v8 + 40) & v9);
  if ((_DWORD)v7)
  {
    v19 = __swift_getEnumTagSinglePayload((uint64_t)__dst, v7, v5);
    v20 = __swift_getEnumTagSinglePayload((uint64_t)v18, v7, v5);
    if (v19)
      goto LABEL_9;
    goto LABEL_159;
  }
  if (!__dst[v248])
    goto LABEL_59;
  v28 = (__dst[v248] - 1) << v240;
  if (v11 > 3)
    v28 = 0;
  if ((_DWORD)v11)
  {
    if (v11 <= 3)
      v29 = v11;
    else
      v29 = 4;
    __asm { BR              X11 }
  }
  if (v28 == -1)
  {
LABEL_59:
    if (!v18[v248])
    {
LABEL_164:
      v22 = __dst;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 24))(__dst, v18, v5);
      goto LABEL_165;
    }
    v34 = (v18[v248] - 1) << v240;
    if (v11 > 3)
      v34 = 0;
    if ((_DWORD)v11)
    {
      if (v11 <= 3)
        v35 = v11;
      else
        v35 = 4;
      __asm { BR              X11 }
    }
    v20 = v34 + 1;
LABEL_159:
    v11 = v250;
    if (v20)
    {
      v22 = __dst;
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(__dst, v5);
      if ((_DWORD)v7)
        v21 = v250;
      else
        v21 = v250 + 1;
LABEL_163:
      memcpy(v22, v18, v21);
      goto LABEL_165;
    }
    goto LABEL_164;
  }
  if (v18[v248])
  {
    v20 = ((v18[v248] - 1) << v240) + 1;
LABEL_9:
    v11 = v250;
    if (v20)
    {
      if ((_DWORD)v7)
        v21 = v250;
      else
        v21 = v250 + 1;
      v22 = __dst;
      goto LABEL_163;
    }
  }
  v22 = __dst;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(__dst, v18, v5);
  if (!(_DWORD)v7)
    __dst[v248] = 0;
LABEL_165:
  if ((_DWORD)v7)
    v98 = v11;
  else
    v98 = v11 + 1;
  v99 = (_BYTE *)(((unint64_t)v22 + v98 + v237) & v9);
  v100 = v9;
  v101 = (_BYTE *)((unint64_t)&v18[v98 + v237] & v9);
  if ((_DWORD)v7)
  {
    v102 = __swift_getEnumTagSinglePayload((uint64_t)v99, v7, v5);
    v103 = __swift_getEnumTagSinglePayload((uint64_t)v101, v7, v5);
    if (v102)
      goto LABEL_170;
    goto LABEL_194;
  }
  if (!v99[v248])
    goto LABEL_185;
  v104 = (v99[v248] - 1) << v240;
  if (v250 > 3)
    v104 = 0;
  if ((_DWORD)v250)
  {
    if (v250 <= 3)
      v105 = v250;
    else
      v105 = 4;
    __asm { BR              X11 }
  }
  if (v104 == -1)
  {
LABEL_185:
    if (!v101[v248])
      goto LABEL_197;
    v106 = (v101[v248] - 1) << v240;
    if (v250 > 3)
      v106 = 0;
    if ((_DWORD)v250)
    {
      if (v250 <= 3)
        v107 = v250;
      else
        v107 = 4;
      __asm { BR              X11 }
    }
    v103 = v106 + 1;
LABEL_194:
    v22 = __dst;
    if (v103)
    {
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v99, v5);
      goto LABEL_196;
    }
LABEL_197:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 24))(v99, v101, v5);
    goto LABEL_198;
  }
  if (!v101[v248])
    goto LABEL_183;
  v103 = ((v101[v248] - 1) << v240) + 1;
LABEL_170:
  v22 = __dst;
  if (v103)
  {
LABEL_196:
    memcpy(v99, v101, v98);
LABEL_198:
    v9 = v100;
    goto LABEL_199;
  }
LABEL_183:
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v99, v101, v5);
  v9 = v100;
  if (!(_DWORD)v7)
    v99[v248] = 0;
LABEL_199:
  v243 = v98;
  v108 = ((v98 + v237) & v9) + v98;
  v109 = (_BYTE *)(((unint64_t)v22 + v108 + 7) & 0xFFFFFFFFFFFFFFF8);
  v110 = (_BYTE *)((unint64_t)&v18[v108 + 7] & 0xFFFFFFFFFFFFFFF8);
  v111 = *((_QWORD *)v110 + 1);
  if (*((_QWORD *)v109 + 1) >= 0xFFFFFFFFuLL)
  {
    if (v111 < 0xFFFFFFFF)
    {
      swift_release();
      a1 = v249;
      if (*((_QWORD *)v109 + 5) >= 6uLL)
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v109 + 16));
      v27 = v237;
      v116 = v238;
      if (*((_QWORD *)v109 + 10))
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v109 + 56));
      if (*((_QWORD *)v109 + 15))
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v109 + 96));
      if (*((_QWORD *)v109 + 20))
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v109 + 136));
      if (*((_QWORD *)v109 + 25))
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v109 + 176));
      if (*((_QWORD *)v109 + 31) >= 3uLL)
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v109 + 224));
      if (*((_QWORD *)v109 + 35) >= 4uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((_QWORD *)v109 + 39))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      memcpy(v109, v110, 0x157uLL);
      goto LABEL_302;
    }
    *v109 = *v110;
    *((_QWORD *)v109 + 1) = *((_QWORD *)v110 + 1);
    swift_retain();
    swift_release();
    v112 = *((_QWORD *)v110 + 5);
    if (*((_QWORD *)v109 + 5) >= 6uLL)
    {
      if (v112 >= 6)
      {
        __swift_assign_boxed_opaque_existential_1((uint64_t *)v109 + 2, (uint64_t *)v110 + 2);
LABEL_248:
        v116 = v238;
        v149 = *((_QWORD *)v110 + 10);
        if (*((_QWORD *)v109 + 10))
        {
          if (v149)
          {
            __swift_assign_boxed_opaque_existential_1((uint64_t *)v109 + 7, (uint64_t *)v110 + 7);
            goto LABEL_255;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v109 + 56));
        }
        else if (v149)
        {
          *((_QWORD *)v109 + 10) = v149;
          *((_QWORD *)v109 + 11) = *((_QWORD *)v110 + 11);
          (**(void (***)(uint64_t, uint64_t))(v149 - 8))((uint64_t)(v109 + 56), (uint64_t)(v110 + 56));
          goto LABEL_255;
        }
        v150 = *(_OWORD *)(v110 + 56);
        v151 = *(_OWORD *)(v110 + 72);
        *((_QWORD *)v109 + 11) = *((_QWORD *)v110 + 11);
        *(_OWORD *)(v109 + 56) = v150;
        *(_OWORD *)(v109 + 72) = v151;
LABEL_255:
        v152 = *((_QWORD *)v110 + 15);
        if (*((_QWORD *)v109 + 15))
        {
          if (v152)
          {
            __swift_assign_boxed_opaque_existential_1((uint64_t *)v109 + 12, (uint64_t *)v110 + 12);
            goto LABEL_262;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v109 + 96));
        }
        else if (v152)
        {
          *((_QWORD *)v109 + 15) = v152;
          *((_QWORD *)v109 + 16) = *((_QWORD *)v110 + 16);
          (**(void (***)(uint64_t, uint64_t))(v152 - 8))((uint64_t)(v109 + 96), (uint64_t)(v110 + 96));
          goto LABEL_262;
        }
        v153 = *((_OWORD *)v110 + 6);
        v154 = *((_OWORD *)v110 + 7);
        *((_QWORD *)v109 + 16) = *((_QWORD *)v110 + 16);
        *((_OWORD *)v109 + 6) = v153;
        *((_OWORD *)v109 + 7) = v154;
LABEL_262:
        v155 = *((_QWORD *)v110 + 20);
        if (*((_QWORD *)v109 + 20))
        {
          if (v155)
          {
            __swift_assign_boxed_opaque_existential_1((uint64_t *)v109 + 17, (uint64_t *)v110 + 17);
            goto LABEL_269;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v109 + 136));
        }
        else if (v155)
        {
          *((_QWORD *)v109 + 20) = v155;
          *((_QWORD *)v109 + 21) = *((_QWORD *)v110 + 21);
          (**(void (***)(uint64_t, uint64_t))(v155 - 8))((uint64_t)(v109 + 136), (uint64_t)(v110 + 136));
          goto LABEL_269;
        }
        v156 = *(_OWORD *)(v110 + 136);
        v157 = *(_OWORD *)(v110 + 152);
        *((_QWORD *)v109 + 21) = *((_QWORD *)v110 + 21);
        *(_OWORD *)(v109 + 136) = v156;
        *(_OWORD *)(v109 + 152) = v157;
LABEL_269:
        v158 = v109 + 176;
        v159 = v110 + 176;
        v160 = *((_QWORD *)v110 + 25);
        if (*((_QWORD *)v109 + 25))
        {
          if (v160)
          {
            __swift_assign_boxed_opaque_existential_1((uint64_t *)v109 + 22, (uint64_t *)v110 + 22);
            *((_QWORD *)v109 + 27) = *((_QWORD *)v110 + 27);
          }
          else
          {
            sub_2210A577C((uint64_t)(v109 + 176), &qword_255659A20);
            v162 = *((_OWORD *)v110 + 12);
            v161 = *((_OWORD *)v110 + 13);
            *v158 = *v159;
            *((_OWORD *)v109 + 12) = v162;
            *((_OWORD *)v109 + 13) = v161;
          }
        }
        else if (v160)
        {
          *((_QWORD *)v109 + 25) = v160;
          *((_QWORD *)v109 + 26) = *((_QWORD *)v110 + 26);
          (**(void (***)(uint64_t, uint64_t))(v160 - 8))((uint64_t)(v109 + 176), (uint64_t)(v110 + 176));
          *((_QWORD *)v109 + 27) = *((_QWORD *)v110 + 27);
        }
        else
        {
          v164 = *v159;
          v165 = *((_OWORD *)v110 + 13);
          *((_OWORD *)v109 + 12) = *((_OWORD *)v110 + 12);
          *((_OWORD *)v109 + 13) = v165;
          *v158 = v164;
        }
        v166 = *((_QWORD *)v110 + 31);
        if (*((_QWORD *)v109 + 31) >= 3uLL)
        {
          if (v166 >= 3)
          {
            __swift_assign_boxed_opaque_existential_1((uint64_t *)v109 + 28, (uint64_t *)v110 + 28);
LABEL_286:
            v109[264] = v110[264];
            v169 = (__int128 *)(v109 + 272);
            v170 = (__int128 *)(v110 + 272);
            v171 = *((_QWORD *)v110 + 35);
            if (*((_QWORD *)v109 + 35) < 4uLL)
            {
              a1 = v249;
              if (v171 < 4)
              {
                v172 = *v170;
                v173 = *((_OWORD *)v110 + 18);
                v174 = *((_OWORD *)v110 + 20);
                *((_OWORD *)v109 + 19) = *((_OWORD *)v110 + 19);
                *((_OWORD *)v109 + 20) = v174;
LABEL_289:
                *v169 = v172;
                v169[1] = v173;
LABEL_301:
                v27 = v237;
                v109[336] = v110[336];
                v109[337] = v110[337];
                v109[338] = v110[338];
                v109[339] = v110[339];
                v109[340] = v110[340];
                v109[341] = v110[341];
                v109[342] = v110[342];
                goto LABEL_302;
              }
              *((_QWORD *)v109 + 34) = *((_QWORD *)v110 + 34);
              *((_QWORD *)v109 + 35) = *((_QWORD *)v110 + 35);
              v109[288] = v110[288];
              *((_QWORD *)v109 + 37) = *((_QWORD *)v110 + 37);
              v178 = *((_QWORD *)v110 + 39);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (!v178)
              {
                v179 = *((_OWORD *)v110 + 20);
                *((_OWORD *)v109 + 19) = *((_OWORD *)v110 + 19);
                *((_OWORD *)v109 + 20) = v179;
                goto LABEL_301;
              }
              goto LABEL_298;
            }
            if (v171 >= 4)
            {
              *((_QWORD *)v109 + 34) = *((_QWORD *)v110 + 34);
              *((_QWORD *)v109 + 35) = *((_QWORD *)v110 + 35);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v109[288] = v110[288];
              *((_QWORD *)v109 + 37) = *((_QWORD *)v110 + 37);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v169 = (__int128 *)(v109 + 304);
              v180 = (__int128 *)(v110 + 304);
              v181 = *((_QWORD *)v110 + 39);
              if (!*((_QWORD *)v109 + 39))
              {
                a1 = v249;
                if (!v181)
                {
                  v172 = *v180;
                  v173 = *((_OWORD *)v110 + 20);
                  goto LABEL_289;
                }
LABEL_298:
                *((_QWORD *)v109 + 38) = *((_QWORD *)v110 + 38);
                *((_QWORD *)v109 + 39) = *((_QWORD *)v110 + 39);
                v109[320] = v110[320];
                *((_QWORD *)v109 + 41) = *((_QWORD *)v110 + 41);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_301;
              }
              if (v181)
              {
                *((_QWORD *)v109 + 38) = *((_QWORD *)v110 + 38);
                *((_QWORD *)v109 + 39) = *((_QWORD *)v110 + 39);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v109[320] = v110[320];
                *((_QWORD *)v109 + 41) = *((_QWORD *)v110 + 41);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
              }
              else
              {
                sub_2210A3354((uint64_t)(v109 + 304));
                v182 = *((_OWORD *)v110 + 20);
                *v169 = *v180;
                *((_OWORD *)v109 + 20) = v182;
              }
            }
            else
            {
              sub_2210A577C((uint64_t)(v109 + 272), qword_255659A28);
              v175 = *((_OWORD *)v110 + 20);
              v177 = *v170;
              v176 = *((_OWORD *)v110 + 18);
              *((_OWORD *)v109 + 19) = *((_OWORD *)v110 + 19);
              *((_OWORD *)v109 + 20) = v175;
              *v169 = v177;
              *((_OWORD *)v109 + 18) = v176;
            }
            a1 = v249;
            goto LABEL_301;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v109 + 224));
        }
        else if (v166 >= 3)
        {
          *((_QWORD *)v109 + 31) = v166;
          *((_QWORD *)v109 + 32) = *((_QWORD *)v110 + 32);
          (**(void (***)(uint64_t, uint64_t))(v166 - 8))((uint64_t)(v109 + 224), (uint64_t)(v110 + 224));
          goto LABEL_286;
        }
        v167 = *((_OWORD *)v110 + 14);
        v168 = *((_OWORD *)v110 + 15);
        *((_QWORD *)v109 + 32) = *((_QWORD *)v110 + 32);
        *((_OWORD *)v109 + 14) = v167;
        *((_OWORD *)v109 + 15) = v168;
        goto LABEL_286;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v109 + 16));
    }
    else if (v112 >= 6)
    {
      *((_QWORD *)v109 + 5) = v112;
      *((_QWORD *)v109 + 6) = *((_QWORD *)v110 + 6);
      (**(void (***)(uint64_t, uint64_t))(v112 - 8))((uint64_t)(v109 + 16), (uint64_t)(v110 + 16));
      goto LABEL_248;
    }
    v117 = *((_OWORD *)v110 + 1);
    v118 = *((_OWORD *)v110 + 2);
    *((_QWORD *)v109 + 6) = *((_QWORD *)v110 + 6);
    *((_OWORD *)v109 + 1) = v117;
    *((_OWORD *)v109 + 2) = v118;
    goto LABEL_248;
  }
  if (v111 >= 0xFFFFFFFF)
  {
    *v109 = *v110;
    *((_QWORD *)v109 + 1) = *((_QWORD *)v110 + 1);
    v113 = *((_QWORD *)v110 + 5);
    swift_retain();
    if (v113 >= 6)
    {
      *((_QWORD *)v109 + 5) = v113;
      *((_QWORD *)v109 + 6) = *((_QWORD *)v110 + 6);
      (**(void (***)(uint64_t, uint64_t, unint64_t))(v113 - 8))((uint64_t)(v109 + 16), (uint64_t)(v110 + 16), v113);
    }
    else
    {
      v114 = *((_OWORD *)v110 + 1);
      v115 = *((_OWORD *)v110 + 2);
      *((_QWORD *)v109 + 6) = *((_QWORD *)v110 + 6);
      *((_OWORD *)v109 + 1) = v114;
      *((_OWORD *)v109 + 2) = v115;
    }
    a1 = v249;
    v27 = v237;
    v116 = v238;
    v9 = v100;
    v119 = v109 + 56;
    v120 = (__int128 *)(v110 + 56);
    v121 = *((_QWORD *)v110 + 10);
    if (v121)
    {
      *((_QWORD *)v109 + 10) = v121;
      *((_QWORD *)v109 + 11) = *((_QWORD *)v110 + 11);
      (**(void (***)(_OWORD *, __int128 *))(v121 - 8))(v119, v120);
    }
    else
    {
      v122 = *v120;
      v123 = *(_OWORD *)(v110 + 72);
      *((_QWORD *)v109 + 11) = *((_QWORD *)v110 + 11);
      *v119 = v122;
      *(_OWORD *)(v109 + 72) = v123;
    }
    v124 = v109 + 96;
    v125 = (__int128 *)(v110 + 96);
    v126 = *((_QWORD *)v110 + 15);
    if (v126)
    {
      *((_QWORD *)v109 + 15) = v126;
      *((_QWORD *)v109 + 16) = *((_QWORD *)v110 + 16);
      (**(void (***)(_OWORD *, __int128 *))(v126 - 8))(v124, v125);
    }
    else
    {
      v127 = *v125;
      v128 = *((_OWORD *)v110 + 7);
      *((_QWORD *)v109 + 16) = *((_QWORD *)v110 + 16);
      *v124 = v127;
      *((_OWORD *)v109 + 7) = v128;
    }
    v129 = v109 + 136;
    v130 = (__int128 *)(v110 + 136);
    v131 = *((_QWORD *)v110 + 20);
    if (v131)
    {
      *((_QWORD *)v109 + 20) = v131;
      *((_QWORD *)v109 + 21) = *((_QWORD *)v110 + 21);
      (**(void (***)(_OWORD *, __int128 *))(v131 - 8))(v129, v130);
    }
    else
    {
      v132 = *v130;
      v133 = *(_OWORD *)(v110 + 152);
      *((_QWORD *)v109 + 21) = *((_QWORD *)v110 + 21);
      *v129 = v132;
      *(_OWORD *)(v109 + 152) = v133;
    }
    v134 = v109 + 176;
    v135 = (__int128 *)(v110 + 176);
    v136 = *((_QWORD *)v110 + 25);
    if (v136)
    {
      *((_QWORD *)v109 + 25) = v136;
      *((_QWORD *)v109 + 26) = *((_QWORD *)v110 + 26);
      (**(void (***)(_OWORD *, __int128 *))(v136 - 8))(v134, v135);
      *((_QWORD *)v109 + 27) = *((_QWORD *)v110 + 27);
    }
    else
    {
      v137 = *v135;
      v138 = *((_OWORD *)v110 + 13);
      *((_OWORD *)v109 + 12) = *((_OWORD *)v110 + 12);
      *((_OWORD *)v109 + 13) = v138;
      *v134 = v137;
    }
    v139 = v109 + 224;
    v140 = (__int128 *)(v110 + 224);
    v141 = *((_QWORD *)v110 + 31);
    if (v141 >= 3)
    {
      *((_QWORD *)v109 + 31) = v141;
      *((_QWORD *)v109 + 32) = *((_QWORD *)v110 + 32);
      (**(void (***)(_OWORD *, __int128 *))(v141 - 8))(v139, v140);
    }
    else
    {
      v142 = *v140;
      v143 = *((_OWORD *)v110 + 15);
      *((_QWORD *)v109 + 32) = *((_QWORD *)v110 + 32);
      *v139 = v142;
      *((_OWORD *)v109 + 15) = v143;
    }
    v109[264] = v110[264];
    if (*((_QWORD *)v110 + 35) >= 4uLL)
    {
      *((_QWORD *)v109 + 34) = *((_QWORD *)v110 + 34);
      *((_QWORD *)v109 + 35) = *((_QWORD *)v110 + 35);
      v109[288] = v110[288];
      *((_QWORD *)v109 + 37) = *((_QWORD *)v110 + 37);
      v148 = *((_QWORD *)v110 + 39);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v148)
      {
        *((_QWORD *)v109 + 38) = *((_QWORD *)v110 + 38);
        *((_QWORD *)v109 + 39) = *((_QWORD *)v110 + 39);
        v109[320] = v110[320];
        *((_QWORD *)v109 + 41) = *((_QWORD *)v110 + 41);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_277:
        v109[336] = v110[336];
        v109[337] = v110[337];
        v163 = *(_DWORD *)(v110 + 338);
        v109[342] = v110[342];
        *(_DWORD *)(v109 + 338) = v163;
        goto LABEL_302;
      }
      v144 = v109 + 304;
      v145 = *((_OWORD *)v110 + 19);
      v146 = *((_OWORD *)v110 + 20);
    }
    else
    {
      v144 = v109 + 272;
      v145 = *((_OWORD *)v110 + 17);
      v146 = *((_OWORD *)v110 + 18);
      v147 = *((_OWORD *)v110 + 20);
      *((_OWORD *)v109 + 19) = *((_OWORD *)v110 + 19);
      *((_OWORD *)v109 + 20) = v147;
    }
    *v144 = v145;
    v144[1] = v146;
    goto LABEL_277;
  }
  v116 = v238;
  memcpy(v109, v110, 0x157uLL);
  a1 = v249;
  v27 = v237;
LABEL_302:
  v183 = (unint64_t)(v109 + 350) & 0xFFFFFFFFFFFFFFF8;
  v184 = (unint64_t)(v110 + 350) & 0xFFFFFFFFFFFFFFF8;
  v185 = *(_QWORD *)v184;
  v186 = *(_BYTE *)(v184 + 8);
  j__swift_bridgeObjectRetain(*(_QWORD *)v184, v186);
  v187 = *(_QWORD *)v183;
  v188 = *(unsigned __int8 *)(v183 + 8);
  *(_QWORD *)v183 = v185;
  *(_BYTE *)(v183 + 8) = v186;
  j__swift_bridgeObjectRelease(v187, v188);
  *(_BYTE *)(v183 + 9) = *(_BYTE *)(v184 + 9);
  v10 = v116;
  v11 = v250;
  v26 = v243;
LABEL_303:
  v94 = v26;
LABEL_304:
  v189 = (v94 + v27) & v9;
  v190 = 7;
  if (!(_DWORD)v7)
    v190 = 8;
  v191 = (((v190 + v11 + v10 + v189) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8;
  v192 = *(_QWORD *)(a3 + 16);
  v193 = *(_QWORD *)(v192 - 8);
  v194 = *(unsigned __int8 *)(v193 + 80);
  v251 = sub_2212F51B4();
  v195 = *(_QWORD *)(v251 - 8);
  v196 = *(_DWORD *)(v195 + 80) & 0xF8 | 7;
  v197 = *(_DWORD *)(v195 + 80) & 0xF8 | 7 | v194;
  v198 = v191 + v197 + 10;
  v199 = ((unint64_t)a1 + v198) & ~v197;
  v200 = ((unint64_t)v247 + v198) & ~v197;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v193 + 24))(v199, v200, v192);
  v201 = *(_QWORD *)(v193 + 64) + v196;
  v202 = ~v196;
  v203 = (v201 + v199) & ~v196;
  v204 = (v201 + v200) & ~v196;
  *(_BYTE *)v203 = *(_BYTE *)v204;
  *(_QWORD *)(v203 + 8) = *(_QWORD *)(v204 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v205 = (_QWORD *)((v204 + 23) & 0xFFFFFFFFFFFFFFF8);
  v206 = (_QWORD *)((v203 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v206 = *v205;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v207 = ((unint64_t)v206 + 15) & 0xFFFFFFFFFFFFFFF8;
  v208 = ((unint64_t)v205 + 15) & 0xFFFFFFFFFFFFFFF8;
  v209 = *(_QWORD *)(v208 + 8);
  *(_QWORD *)v207 = *(_QWORD *)v208;
  *(_QWORD *)(v207 + 8) = v209;
  swift_retain();
  swift_release();
  *(_BYTE *)(v207 + 16) = *(_BYTE *)(v208 + 16);
  v210 = (_QWORD *)(((unint64_t)v206 + 39) & 0xFFFFFFFFFFFFFFF8);
  v211 = (unint64_t *)(((unint64_t)v205 + 39) & 0xFFFFFFFFFFFFFFF8);
  v212 = *v211;
  if (*v210 < 0xFFFFFFFFuLL)
  {
    if (v212 >= 0xFFFFFFFF)
    {
      v214 = v211[1];
      *v210 = v212;
      v210[1] = v214;
      swift_retain();
      goto LABEL_313;
    }
  }
  else
  {
    if (v212 >= 0xFFFFFFFF)
    {
      v213 = v211[1];
      *v210 = v212;
      v210[1] = v213;
      swift_retain();
      swift_release();
      goto LABEL_313;
    }
    swift_release();
  }
  *(_OWORD *)v210 = *(_OWORD *)v211;
LABEL_313:
  v215 = (_QWORD *)(((unint64_t)v210 + 23) & 0xFFFFFFFFFFFFFFF8);
  v216 = (_QWORD *)(((unint64_t)v211 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v215 = *v216;
  v215[1] = v216[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v217 = (void *)(((unint64_t)v215 + v196 + 16) & v202);
  v218 = (char *)(((unint64_t)v216 + v196 + 16) & v202);
  v219 = *(unsigned int *)(v195 + 84);
  v220 = *(_QWORD *)(v195 + 64);
  v221 = ((v220 + 23) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v219 <= 0xFC)
  {
    v226 = *(unsigned __int8 *)((((unint64_t)v217 + v220 + 7) & 0xFFFFFFFFFFFFF8) + 8);
    v224 = &v218[v220];
    if (v226 >= 2 && v226 != 2)
    {
      v225 = (unint64_t)(v224 + 7) & 0xFFFFFFFFFFFFFFF8;
      if (*(unsigned __int8 *)(v225 + 8) <= 2u)
        goto LABEL_328;
      goto LABEL_326;
    }
    v225 = (unint64_t)(v224 + 7) & 0xFFFFFFFFFFFFFFF8;
    if (*(unsigned __int8 *)(v225 + 8) > 2u)
    {
LABEL_325:
      (*(void (**)(void *, uint64_t))(v195 + 8))(v217, v251);
      goto LABEL_326;
    }
LABEL_330:
    (*(void (**)(void *, char *, uint64_t))(v195 + 24))(v217, v218, v251);
    goto LABEL_331;
  }
  v222 = __swift_getEnumTagSinglePayload((uint64_t)v217, v219, v251);
  v223 = __swift_getEnumTagSinglePayload((uint64_t)v218, v219, v251);
  if (!v222)
  {
    if (v223)
      goto LABEL_325;
    v224 = &v218[v220];
    v225 = (unint64_t)&v218[v220 + 7] & 0xFFFFFFFFFFFFFFF8;
    goto LABEL_330;
  }
  if (!v223)
  {
    v224 = &v218[v220];
    v225 = (unint64_t)&v218[v220 + 7] & 0xFFFFFFFFFFFFFFF8;
LABEL_328:
    (*(void (**)(void *, char *, uint64_t))(v195 + 16))(v217, v218, v251);
LABEL_331:
    v228 = ((unint64_t)v217 + v220 + 7) & 0xFFFFFFFFFFFFFFF8;
    v229 = *(_QWORD *)v225;
    *(_BYTE *)(v228 + 8) = *(_BYTE *)(v225 + 8);
    *(_QWORD *)v228 = v229;
    v230 = ((unint64_t)v217 + v220 + 23) & 0xFFFFFFFFFFFFFFF8;
    v231 = (unint64_t)(v224 + 23) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v229) = *(_BYTE *)(v231 + 8);
    *(_QWORD *)v230 = *(_QWORD *)v231;
    *(_BYTE *)(v230 + 8) = v229;
    goto LABEL_332;
  }
LABEL_326:
  memcpy(v217, v218, v221);
LABEL_332:
  result = v249;
  *((_BYTE *)v217 + v221) = v218[v221];
  v233 = ((v196 + 80) & ~v196 | 1) + v221;
  v234 = v233 + v203;
  v235 = v233 + v204;
  *(_BYTE *)v234 = *(_BYTE *)v235;
  *(_BYTE *)(v234 | 1) = *(_BYTE *)(v235 | 1);
  return result;
}

uint64_t sub_2210A3354(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDEEA88] - 8) + 8))();
  return a1;
}

_OWORD *sub_2210A3388(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  _BYTE *v12;
  __int128 v13;
  _BYTE *v14;
  size_t v15;
  uint64_t v16;
  int v17;
  int v18;
  size_t v19;
  _BYTE *v20;
  size_t v21;
  void *v22;
  size_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  _OWORD *v28;
  uint64_t v29;
  void *v30;
  int EnumTagSinglePayload;
  int v32;
  int v33;
  uint64_t v34;
  _BYTE *v35;
  size_t v36;
  void *v37;
  const void *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  size_t v42;
  size_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  _OWORD *v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  size_t v73;
  char *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  _OWORD *result;
  size_t v81;
  unint64_t v82;
  unint64_t v83;
  char v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  size_t v88;
  uint64_t v89;
  _OWORD *v90;

  v6 = sub_2212F4944();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = ~v9;
  v90 = a1;
  v11 = *(_QWORD *)(v7 + 64);
  if (v8 >= 0x80000001)
  {
    v12 = (_BYTE *)(((unint64_t)a2 + v9 + 40) & v10);
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, v8, v6) < 2)
    {
LABEL_5:
      v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      v14 = (_BYTE *)(((unint64_t)a1 + v9 + 40) & v10);
      v84 = 8 * v11;
      v87 = a3;
      v88 = v11;
      if ((_DWORD)v8)
      {
        if (!__swift_getEnumTagSinglePayload((uint64_t)v12, v8, v6))
        {
LABEL_25:
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v14, v12, v6);
          v20 = v12;
          if (!(_DWORD)v8)
            v14[v11] = 0;
LABEL_27:
          if ((_DWORD)v8)
            v15 = v11;
          else
            v15 = v11 + 1;
          v21 = v15 + v9;
          v85 = v14;
          v86 = v20;
          v22 = (void *)((unint64_t)&v14[v15 + v9] & v10);
          v23 = (size_t)&v20[v15 + v9];
          v24 = (_BYTE *)(v23 & v10);
          if ((_DWORD)v8)
          {
            v25 = v23 & v10;
            v26 = v6;
            v27 = v11;
            v28 = a2;
            v29 = v6;
            v30 = v22;
            EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v25, v8, v26);
            v24 = (_BYTE *)v25;
            v10 = ~v9;
            v21 = v15 + v9;
            v22 = v30;
            v6 = v29;
            a2 = v28;
            v11 = v27;
            if (!EnumTagSinglePayload)
            {
LABEL_43:
              v34 = v6;
              v35 = v22;
              (*(void (**)(void *, _BYTE *, uint64_t))(v7 + 32))(v22, v24, v34);
              v16 = (v9 + 40) & ~v9;
              if (!(_DWORD)v8)
                v35[v88] = 0;
LABEL_45:
              v36 = (v21 & v10) + v15;
              v37 = (void *)((unint64_t)&v85[v36 + 7] & 0xFFFFFFFFFFFFFFF8);
              v38 = (const void *)((unint64_t)&v86[v36 + 7] & 0xFFFFFFFFFFFFFFF8);
              memcpy(v37, v38, 0x157uLL);
              v39 = ((unint64_t)v37 + 350) & 0xFFFFFFFFFFFFFFF8;
              v40 = ((unint64_t)v38 + 350) & 0xFFFFFFFFFFFFFFF8;
              v41 = *(_QWORD *)v40;
              *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
              *(_QWORD *)v39 = v41;
              *(_BYTE *)(v39 + 9) = *(_BYTE *)(v40 + 9);
              a1 = v90;
              a3 = v87;
              v42 = v88;
              if ((_DWORD)v8)
                goto LABEL_47;
              goto LABEL_46;
            }
          }
          else
          {
            if (!v24[v11])
              goto LABEL_43;
            v32 = (v24[v11] - 1) << v84;
            if (v11 > 3)
              v32 = 0;
            if ((_DWORD)v11)
            {
              if (v11 <= 3)
                v33 = v11;
              else
                v33 = 4;
              __asm { BR              X11 }
            }
            if (v32 == -1)
              goto LABEL_43;
          }
          memcpy(v22, v24, v15);
          v16 = (v9 + 40) & ~v9;
          goto LABEL_45;
        }
      }
      else
      {
        if (!v12[v11])
          goto LABEL_25;
        v17 = (v12[v11] - 1) << v84;
        if (v11 > 3)
          v17 = 0;
        if ((_DWORD)v11)
        {
          if (v11 <= 3)
            v18 = v11;
          else
            v18 = 4;
          __asm { BR              X11 }
        }
        if (v17 == -1)
          goto LABEL_25;
      }
      if ((_DWORD)v8)
        v19 = v11;
      else
        v19 = v11 + 1;
      memcpy(v14, v12, v19);
      v20 = v12;
      goto LABEL_27;
    }
  }
  else if (*((_QWORD *)a2 + 3) >= 0xFFFFFFFFuLL)
  {
    v12 = (_BYTE *)(((unint64_t)a2 + v9 + 40) & v10);
    goto LABEL_5;
  }
  if ((_DWORD)v8)
    v15 = v11;
  else
    v15 = v11 + 1;
  v16 = (v9 + 40) & ~v9;
  memcpy(a1, a2, ((((v15 + v16 + ((v15 + v9) & v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8) + 10);
LABEL_46:
  v42 = v15;
LABEL_47:
  v43 = (v42 + v9) & v10;
  v44 = 7;
  if (!(_DWORD)v8)
    v44 = 8;
  v45 = (((v44 + v11 + v16 + v43) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8;
  v46 = *(_QWORD *)(a3 + 16);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = sub_2212F51B4();
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(_DWORD *)(v50 + 80) & 0xF8 | 7;
  v52 = *(_DWORD *)(v50 + 80) & 0xF8 | 7 | v48;
  v53 = v45 + v52 + 10;
  v54 = ((unint64_t)a1 + v53) & ~v52;
  v55 = ((unint64_t)a2 + v53) & ~v52;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v47 + 32))(v54, v55, v46);
  v56 = *(_QWORD *)(v47 + 64) + v51;
  v57 = (v56 + v54) & ~v51;
  v58 = (v56 + v55) & ~v51;
  *(_BYTE *)v57 = *(_BYTE *)v58;
  *(_QWORD *)(v57 + 8) = *(_QWORD *)(v58 + 8);
  v59 = (_QWORD *)((v57 + 23) & 0xFFFFFFFFFFFFFFF8);
  v60 = (_QWORD *)((v58 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v59 = *v60;
  v61 = ~v51;
  v62 = ((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8;
  v63 = ((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v62 = *(_OWORD *)v63;
  *(_BYTE *)(v62 + 16) = *(_BYTE *)(v63 + 16);
  v64 = ((unint64_t)v59 + 39) & 0xFFFFFFFFFFFFFFF8;
  v65 = ((unint64_t)v60 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v65 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v64 = *(_OWORD *)v65;
  }
  else
  {
    v66 = *(_QWORD *)(v65 + 8);
    *(_QWORD *)v64 = *(_QWORD *)v65;
    *(_QWORD *)(v64 + 8) = v66;
  }
  v67 = (_OWORD *)((v64 + 23) & 0xFFFFFFFFFFFFFFF8);
  v68 = (_OWORD *)((v65 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v67 = *v68;
  v69 = (void *)(((unint64_t)v67 + v51 + 16) & v61);
  v70 = (char *)(((unint64_t)v68 + v51 + 16) & v61);
  v71 = *(unsigned int *)(v50 + 84);
  v72 = *(_QWORD *)(v50 + 64);
  v73 = ((v72 + 23) & 0xFFFFFFFFFFFFFFF8) + 9;
  v89 = v49;
  if (v71 <= 0xFC)
  {
    v74 = &v70[v72];
    v75 = (unint64_t)&v70[v72 + 7] & 0xFFFFFFFFFFFFFFF8;
    if (*(unsigned __int8 *)(v75 + 8) <= 2u)
      goto LABEL_57;
  }
  else if (!__swift_getEnumTagSinglePayload(((unint64_t)v68 + v51 + 16) & v61, v71, v49))
  {
    v74 = &v70[v72];
    v75 = (unint64_t)&v70[v72 + 7] & 0xFFFFFFFFFFFFFFF8;
LABEL_57:
    (*(void (**)(void *, char *, uint64_t))(v50 + 32))(v69, v70, v89);
    v76 = ((unint64_t)v69 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    v77 = *(_QWORD *)v75;
    *(_BYTE *)(v76 + 8) = *(_BYTE *)(v75 + 8);
    *(_QWORD *)v76 = v77;
    v78 = ((unint64_t)v69 + v72 + 23) & 0xFFFFFFFFFFFFFFF8;
    v79 = (unint64_t)(v74 + 23) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v77) = *(_BYTE *)(v79 + 8);
    *(_QWORD *)v78 = *(_QWORD *)v79;
    *(_BYTE *)(v78 + 8) = v77;
    goto LABEL_58;
  }
  memcpy(v69, v70, v73);
LABEL_58:
  *((_BYTE *)v69 + v73) = v70[v73];
  result = v90;
  v81 = ((v51 + 80) & ~v51 | 1) + v73;
  v82 = v81 + v57;
  v83 = v81 + v58;
  *(_BYTE *)v82 = *(_BYTE *)v83;
  *(_BYTE *)(v82 | 1) = *(_BYTE *)(v83 | 1);
  return result;
}

_OWORD *sub_2210A397C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  unint64_t v12;
  _BYTE *v13;
  unsigned int EnumTagSinglePayload;
  _BYTE *v15;
  unsigned int v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  size_t v23;
  unsigned __int8 *v24;
  __int128 v25;
  int v26;
  int v27;
  __int128 v28;
  size_t v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  size_t v33;
  size_t v34;
  uint64_t v35;
  size_t v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  size_t v44;
  size_t v45;
  int v46;
  int v47;
  size_t v48;
  _QWORD *v49;
  size_t v50;
  _BYTE *v51;
  _BYTE *v52;
  unint64_t v53;
  _BYTE *v54;
  int v55;
  int v56;
  size_t v57;
  void *v58;
  const void *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  size_t v63;
  size_t v64;
  _BYTE *v65;
  size_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  void *v75;
  size_t v76;
  int v77;
  int v78;
  int v79;
  int v80;
  size_t v81;
  _BYTE *v82;
  __int128 *v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 *v92;
  __int128 *v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  _OWORD *v103;
  __int128 *v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  _OWORD *v111;
  __int128 v112;
  unint64_t v113;
  unint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  size_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  unint64_t v136;
  unint64_t v137;
  _QWORD *v138;
  unint64_t *v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  void *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  size_t v149;
  int v150;
  int v151;
  char *v152;
  unint64_t v153;
  unsigned int v154;
  unint64_t v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  _OWORD *result;
  size_t v161;
  unint64_t v162;
  unint64_t v163;
  _BYTE *v164;
  unsigned __int8 *__dst;
  _BYTE *__src;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  _OWORD *v172;
  size_t v173;
  _OWORD *v174;
  size_t v175;
  uint64_t v176;
  uint64_t v177;

  v6 = sub_2212F4944();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = ~v9;
  v171 = (v9 + 40) & ~v9;
  v172 = a2;
  v11 = *(_QWORD *)(v7 + 64);
  v173 = v11;
  v174 = a1;
  v170 = 8 * v11;
  v175 = v11;
  v176 = ~v9;
  if (v8 < 0x80000001)
  {
    v12 = *((_QWORD *)a2 + 3);
    if (*((_QWORD *)a1 + 3) > 0xFFFFFFFEuLL)
    {
      if (v12 >= 0xFFFFFFFF)
      {
        v13 = (_BYTE *)(((unint64_t)a1 + v9 + 40) & v10);
        goto LABEL_7;
      }
LABEL_31:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      v31 = (uint64_t)a1 + v9 + 40;
      v32 = v31 & v10;
      if ((_DWORD)v8)
      {
        if (__swift_getEnumTagSinglePayload(v31 & v10, v8, v6))
          goto LABEL_71;
      }
      else if (*(_BYTE *)(v32 + v173))
      {
        v39 = (*(unsigned __int8 *)(v32 + v173) - 1) << v170;
        if (v11 > 3)
          v39 = 0;
        if ((_DWORD)v11)
        {
          if (v11 <= 3)
            v40 = v11;
          else
            v40 = 4;
          __asm { BR              X11 }
        }
        if (v39 != -1)
        {
LABEL_71:
          v168 = a3;
          v43 = v10;
          if ((_DWORD)v8)
            v34 = v11;
          else
            v34 = v11 + 1;
          v44 = v34 + v9 + v32;
          v45 = v44 & v43;
          if ((_DWORD)v8)
          {
            if (__swift_getEnumTagSinglePayload(v44 & v43, v8, v6))
            {
LABEL_87:
              v33 = v175;
              v48 = ((v34 + v9) & v176) + v34;
              v49 = (_QWORD *)((v32 + v48 + 7) & 0xFFFFFFFFFFFFFFF8);
              if (v49[1] >= 0xFFFFFFFFuLL)
              {
                swift_release();
                if (v49[5] >= 6uLL)
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v49 + 2));
                if (v49[10])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v49 + 7));
                if (v49[15])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v49 + 12));
                if (v49[20])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v49 + 17));
                if (v49[25])
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v49 + 22));
                if (v49[31] >= 3uLL)
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v49 + 28));
                if (v49[35] >= 4uLL)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v49[39])
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                }
              }
              j__swift_bridgeObjectRelease(*(_QWORD *)(((unint64_t)v49 + 350) & 0xFFFFFFFFFFFFFFF8), *(unsigned __int8 *)((((unint64_t)v49 + 350) & 0xFFFFFFFFFFFFFFF8) + 8));
              v50 = v171 + v48;
              v35 = (v9 + 40) & ~v9;
              memcpy(a1, a2, ((((v50 + 7) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8) + 10);
              a3 = v168;
              goto LABEL_216;
            }
          }
          else if (*(_BYTE *)(v45 + v173))
          {
            v46 = (*(unsigned __int8 *)(v45 + v173) - 1) << v170;
            if (v175 > 3)
              v46 = 0;
            if ((_DWORD)v175)
            {
              if (v175 <= 3)
                v47 = v175;
              else
                v47 = 4;
              __asm { BR              X11 }
            }
            if (v46 != -1)
              goto LABEL_87;
          }
          (*(void (**)(size_t, uint64_t))(v7 + 8))(v45, v6);
          goto LABEL_87;
        }
      }
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v32, v6);
      goto LABEL_71;
    }
    if (v12 >= 0xFFFFFFFF)
    {
      v13 = (_BYTE *)(((unint64_t)a1 + v9 + 40) & v176);
      v15 = (_BYTE *)(((unint64_t)a2 + v9 + 40) & v176);
      v25 = a2[1];
      *a1 = *a2;
      a1[1] = v25;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      if (!(_DWORD)v8)
      {
        if (!v15[v173])
          goto LABEL_111;
        v26 = (v15[v173] - 1) << v170;
        if (v175 > 3)
          v26 = 0;
        if ((_DWORD)v175)
        {
          if (v175 <= 3)
            v27 = v175;
          else
            v27 = 4;
          __asm { BR              X11 }
        }
        if (v26 == -1)
          goto LABEL_111;
        goto LABEL_27;
      }
LABEL_26:
      if (!__swift_getEnumTagSinglePayload((uint64_t)v15, v8, v6))
      {
LABEL_111:
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v13, v15, v6);
        v167 = a3;
        if (!(_DWORD)v8)
          v13[v173] = 0;
        v29 = v175;
LABEL_114:
        if ((_DWORD)v8)
          v34 = v29;
        else
          v34 = v29 + 1;
        v52 = (_BYTE *)((unint64_t)&v13[v34 + v9] & v176);
        v53 = (unint64_t)&v15[v34 + v9];
        v54 = (_BYTE *)(v53 & v176);
        if ((_DWORD)v8)
        {
          if (!__swift_getEnumTagSinglePayload(v53 & v176, v8, v6))
          {
LABEL_130:
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v52, v54, v6);
            v35 = (v9 + 40) & ~v9;
            if (!(_DWORD)v8)
              v52[v173] = 0;
LABEL_132:
            v57 = ((v34 + v9) & v176) + v34;
            v58 = (void *)((unint64_t)&v13[v57 + 7] & 0xFFFFFFFFFFFFFFF8);
            v59 = (const void *)((unint64_t)&v15[v57 + 7] & 0xFFFFFFFFFFFFFFF8);
            memcpy(v58, v59, 0x157uLL);
            v60 = ((unint64_t)v58 + 350) & 0xFFFFFFFFFFFFFFF8;
            v61 = ((unint64_t)v59 + 350) & 0xFFFFFFFFFFFFFFF8;
            v62 = *(_QWORD *)v61;
            *(_BYTE *)(v60 + 8) = *(_BYTE *)(v61 + 8);
            *(_QWORD *)v60 = v62;
            *(_BYTE *)(v60 + 9) = *(_BYTE *)(v61 + 9);
            a1 = v174;
            v33 = v175;
            a3 = v167;
            v63 = v173;
            if ((_DWORD)v8)
              goto LABEL_217;
            goto LABEL_216;
          }
        }
        else
        {
          if (!v54[v173])
            goto LABEL_130;
          v55 = (v54[v173] - 1) << v170;
          if (v175 > 3)
            v55 = 0;
          if ((_DWORD)v175)
          {
            if (v175 <= 3)
              v56 = v175;
            else
              v56 = 4;
            __asm { BR              X11 }
          }
          if (v55 == -1)
            goto LABEL_130;
        }
        memcpy(v52, v54, v34);
        v35 = (v9 + 40) & ~v9;
        goto LABEL_132;
      }
LABEL_27:
      v167 = a3;
      v29 = v175;
      if ((_DWORD)v8)
        v30 = v175;
      else
        v30 = v175 + 1;
      memcpy(v13, v15, v30);
      goto LABEL_114;
    }
    goto LABEL_34;
  }
  v13 = (_BYTE *)(((unint64_t)a1 + v9 + 40) & v10);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, v8, v6);
  v15 = (_BYTE *)(((unint64_t)a2 + v9 + 40) & ~v9);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v15, v8, v6);
  if (EnumTagSinglePayload >= 2)
  {
    if (v16 <= 1)
    {
      v28 = a2[1];
      *a1 = *a2;
      a1[1] = v28;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      goto LABEL_26;
    }
LABEL_34:
    v33 = v175;
    if ((_DWORD)v8)
      v34 = v175;
    else
      v34 = v175 + 1;
    v35 = (v9 + 40) & ~v9;
    memcpy(a1, a2, ((((v34 + v171 + ((v34 + v9) & v176) + 7) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8) + 10);
    goto LABEL_216;
  }
  v11 = v175;
  v10 = ~v9;
  if (v16 >= 2)
    goto LABEL_31;
LABEL_7:
  __dst = v13;
  v17 = a3;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = a2[1];
  *a1 = *a2;
  a1[1] = v18;
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  v19 = ((unint64_t)a2 + v9 + 40) & v10;
  __src = (_BYTE *)v19;
  if (!(_DWORD)v8)
  {
    v36 = v173;
    v22 = v17;
    if (__dst[v173])
    {
      v37 = (__dst[v173] - 1) << v170;
      if (v11 > 3)
        v37 = 0;
      if ((_DWORD)v11)
      {
        if (v11 <= 3)
          v38 = v11;
        else
          v38 = 4;
        __asm { BR              X11 }
      }
      v36 = v173;
      if (v37 != -1)
      {
        if (__src[v173] && (__src[v173] - 1) << v170 != -1)
        {
LABEL_10:
          if ((_DWORD)v8)
            v23 = v11;
          else
            v23 = v11 + 1;
          v24 = __dst;
          goto LABEL_108;
        }
        goto LABEL_135;
      }
    }
    if (!__src[v36])
    {
LABEL_109:
      v24 = __dst;
      v51 = __src;
      (*(void (**)(unsigned __int8 *, _BYTE *, uint64_t))(v7 + 40))(__dst, __src, v6);
      goto LABEL_137;
    }
    v41 = (__src[v36] - 1) << v170;
    if (v11 > 3)
      v41 = 0;
    if ((_DWORD)v11)
    {
      if (v11 <= 3)
        v42 = v11;
      else
        v42 = 4;
      __asm { BR              X11 }
    }
    v21 = v41 + 1;
LABEL_104:
    if (v21)
    {
      v24 = __dst;
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(__dst, v6);
      if ((_DWORD)v8)
        v23 = v11;
      else
        v23 = v11 + 1;
LABEL_108:
      v51 = __src;
      memcpy(v24, __src, v23);
      goto LABEL_137;
    }
    goto LABEL_109;
  }
  v20 = __swift_getEnumTagSinglePayload((uint64_t)__dst, v8, v6);
  v21 = __swift_getEnumTagSinglePayload(v19, v8, v6);
  v22 = v17;
  if (!v20)
    goto LABEL_104;
  if (v21)
    goto LABEL_10;
LABEL_135:
  v24 = __dst;
  v51 = __src;
  (*(void (**)(unsigned __int8 *, _BYTE *, uint64_t))(v7 + 32))(__dst, __src, v6);
  if (!(_DWORD)v8)
    __dst[v173] = 0;
LABEL_137:
  if ((_DWORD)v8)
    v34 = v11;
  else
    v34 = v11 + 1;
  v64 = v34 + v9;
  v65 = (_BYTE *)((unint64_t)&v24[v34 + v9] & v176);
  v66 = (size_t)&v51[v34 + v9];
  v67 = (_BYTE *)(v66 & v176);
  v164 = (_BYTE *)(v66 & v176);
  if ((_DWORD)v8)
  {
    v169 = v22;
    v68 = (unint64_t)&v24[v34 + v9] & v176;
    v69 = v68;
    v70 = v24;
    v71 = v66 & v176;
    v72 = __swift_getEnumTagSinglePayload(v68, v8, v6);
    v73 = v71;
    v24 = v70;
    v65 = (_BYTE *)v69;
    v64 = v34 + v9;
    v74 = __swift_getEnumTagSinglePayload(v73, v8, v6);
    if (v72)
      goto LABEL_142;
    goto LABEL_166;
  }
  v76 = v173;
  if (!v65[v173])
    goto LABEL_157;
  v77 = (v65[v173] - 1) << v170;
  if (v175 > 3)
    v77 = 0;
  if ((_DWORD)v175)
  {
    if (v175 <= 3)
      v78 = v175;
    else
      v78 = 4;
    __asm { BR              X11 }
  }
  v76 = v173;
  if (v77 == -1)
  {
LABEL_157:
    if (!v67[v76])
    {
LABEL_169:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 40))(v65, v164, v6);
      goto LABEL_170;
    }
    v79 = (v67[v76] - 1) << v170;
    if (v175 > 3)
      v79 = 0;
    v169 = v22;
    if ((_DWORD)v175)
    {
      if (v175 <= 3)
        v80 = v175;
      else
        v80 = 4;
      __asm { BR              X11 }
    }
    v74 = v79 + 1;
LABEL_166:
    v51 = __src;
    v22 = v169;
    if (v74)
    {
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v65, v6);
      v75 = v65;
      v67 = v164;
      goto LABEL_168;
    }
    goto LABEL_169;
  }
  if (v67[v173])
  {
    v169 = v22;
    v74 = ((v67[v173] - 1) << v170) + 1;
LABEL_142:
    v51 = __src;
    v22 = v169;
    v67 = v164;
    if (v74)
    {
      v75 = v65;
LABEL_168:
      memcpy(v75, v67, v34);
      goto LABEL_170;
    }
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v65, v67, v6);
  if (!(_DWORD)v8)
    v65[v173] = 0;
LABEL_170:
  v81 = (v64 & v176) + v34;
  v82 = (_BYTE *)((unint64_t)&v24[v81 + 7] & 0xFFFFFFFFFFFFFFF8);
  v83 = (__int128 *)((unint64_t)&v51[v81 + 7] & 0xFFFFFFFFFFFFFFF8);
  if (*((_QWORD *)v82 + 1) >= 0xFFFFFFFFuLL)
  {
    if (*((_QWORD *)v83 + 1) < 0xFFFFFFFFuLL)
    {
      swift_release();
      if (*((_QWORD *)v82 + 5) >= 6uLL)
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v82 + 16));
      if (*((_QWORD *)v82 + 10))
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v82 + 56));
      v33 = v175;
      if (*((_QWORD *)v82 + 15))
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v82 + 96));
      a1 = v174;
      if (*((_QWORD *)v82 + 20))
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v82 + 136));
      if (*((_QWORD *)v82 + 25))
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v82 + 176));
      if (*((_QWORD *)v82 + 31) >= 3uLL)
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v82 + 224));
      v96 = v22;
      if (*((_QWORD *)v82 + 35) >= 4uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((_QWORD *)v82 + 39))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      memcpy(v82, v83, 0x157uLL);
      goto LABEL_215;
    }
    *v82 = *(_BYTE *)v83;
    *((_QWORD *)v82 + 1) = *((_QWORD *)v83 + 1);
    swift_release();
    if (*((_QWORD *)v82 + 5) >= 6uLL)
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v82 + 16));
    v84 = v83[1];
    v85 = v83[2];
    *((_QWORD *)v82 + 6) = *((_QWORD *)v83 + 6);
    *((_OWORD *)v82 + 1) = v84;
    *((_OWORD *)v82 + 2) = v85;
    if (*((_QWORD *)v82 + 10))
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v82 + 56));
    v86 = *(__int128 *)((char *)v83 + 56);
    v87 = *(__int128 *)((char *)v83 + 72);
    *((_QWORD *)v82 + 11) = *((_QWORD *)v83 + 11);
    *(_OWORD *)(v82 + 56) = v86;
    *(_OWORD *)(v82 + 72) = v87;
    if (*((_QWORD *)v82 + 15))
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v82 + 96));
    v88 = v83[6];
    v89 = v83[7];
    *((_QWORD *)v82 + 16) = *((_QWORD *)v83 + 16);
    *((_OWORD *)v82 + 6) = v88;
    *((_OWORD *)v82 + 7) = v89;
    a1 = v174;
    if (*((_QWORD *)v82 + 20))
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v82 + 136));
    v90 = *(__int128 *)((char *)v83 + 136);
    v91 = *(__int128 *)((char *)v83 + 152);
    *((_QWORD *)v82 + 21) = *((_QWORD *)v83 + 21);
    *(_OWORD *)(v82 + 136) = v90;
    *(_OWORD *)(v82 + 152) = v91;
    v92 = (__int128 *)(v82 + 176);
    v93 = v83 + 11;
    if (*((_QWORD *)v82 + 25))
    {
      if (*((_QWORD *)v83 + 25))
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v82 + 176));
        v94 = *v93;
        v95 = v83[12];
        *((_QWORD *)v82 + 26) = *((_QWORD *)v83 + 26);
        *v92 = v94;
        *((_OWORD *)v82 + 12) = v95;
        *((_QWORD *)v82 + 27) = *((_QWORD *)v83 + 27);
      }
      else
      {
        sub_2210A577C((uint64_t)(v82 + 176), &qword_255659A20);
        v100 = v83[12];
        v99 = v83[13];
        *v92 = *v93;
        *((_OWORD *)v82 + 12) = v100;
        *((_OWORD *)v82 + 13) = v99;
      }
    }
    else
    {
      v97 = *v93;
      v98 = v83[13];
      *((_OWORD *)v82 + 12) = v83[12];
      *((_OWORD *)v82 + 13) = v98;
      *v92 = v97;
    }
    if (*((_QWORD *)v82 + 31) >= 3uLL)
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v82 + 224));
    v101 = v83[14];
    v102 = v83[15];
    *((_QWORD *)v82 + 32) = *((_QWORD *)v83 + 32);
    *((_OWORD *)v82 + 14) = v101;
    *((_OWORD *)v82 + 15) = v102;
    v82[264] = *((_BYTE *)v83 + 264);
    v103 = v82 + 272;
    v104 = v83 + 17;
    if (*((_QWORD *)v82 + 35) >= 4uLL)
    {
      if (*((_QWORD *)v83 + 35) < 4uLL)
      {
        v96 = v22;
        sub_2210A577C((uint64_t)(v82 + 272), qword_255659A28);
        v108 = v83[20];
        v110 = *v104;
        v109 = v83[18];
        *((_OWORD *)v82 + 19) = v83[19];
        *((_OWORD *)v82 + 20) = v108;
        *v103 = v110;
        *((_OWORD *)v82 + 18) = v109;
        goto LABEL_214;
      }
      *((_QWORD *)v82 + 34) = *((_QWORD *)v83 + 34);
      *((_QWORD *)v82 + 35) = *((_QWORD *)v83 + 35);
      swift_bridgeObjectRelease();
      v82[288] = *((_BYTE *)v83 + 288);
      *((_QWORD *)v82 + 37) = *((_QWORD *)v83 + 37);
      swift_bridgeObjectRelease();
      v103 = v82 + 304;
      v111 = v83 + 19;
      if (*((_QWORD *)v82 + 39))
      {
        v96 = v22;
        if (*((_QWORD *)v83 + 39))
        {
          *((_QWORD *)v82 + 38) = *((_QWORD *)v83 + 38);
          *((_QWORD *)v82 + 39) = *((_QWORD *)v83 + 39);
          swift_bridgeObjectRelease();
          v82[320] = *((_BYTE *)v83 + 320);
          *((_QWORD *)v82 + 41) = *((_QWORD *)v83 + 41);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_2210A3354((uint64_t)(v82 + 304));
          v112 = v83[20];
          *v103 = *v111;
          *((_OWORD *)v82 + 20) = v112;
        }
        goto LABEL_214;
      }
      v96 = v22;
      v105 = *v111;
      v106 = v83[20];
    }
    else
    {
      v96 = v22;
      v105 = *v104;
      v106 = v83[18];
      v107 = v83[20];
      *((_OWORD *)v82 + 19) = v83[19];
      *((_OWORD *)v82 + 20) = v107;
    }
    *v103 = v105;
    v103[1] = v106;
LABEL_214:
    v33 = v175;
    v82[336] = *((_BYTE *)v83 + 336);
    v82[337] = *((_BYTE *)v83 + 337);
    v82[338] = *((_BYTE *)v83 + 338);
    v82[339] = *((_BYTE *)v83 + 339);
    v82[340] = *((_BYTE *)v83 + 340);
    v82[341] = *((_BYTE *)v83 + 341);
    v82[342] = *((_BYTE *)v83 + 342);
    goto LABEL_215;
  }
  v96 = v22;
  memcpy(v82, v83, 0x157uLL);
  a1 = v174;
  v33 = v175;
LABEL_215:
  v113 = (unint64_t)(v82 + 350) & 0xFFFFFFFFFFFFFFF8;
  v114 = ((unint64_t)v83 + 350) & 0xFFFFFFFFFFFFFFF8;
  v115 = *(_BYTE *)(v114 + 8);
  v116 = *(_QWORD *)v113;
  v117 = *(unsigned __int8 *)(v113 + 8);
  *(_QWORD *)v113 = *(_QWORD *)v114;
  *(_BYTE *)(v113 + 8) = v115;
  j__swift_bridgeObjectRelease(v116, v117);
  *(_BYTE *)(v113 + 9) = *(_BYTE *)(v114 + 9);
  a3 = v96;
  v35 = (v9 + 40) & ~v9;
LABEL_216:
  v63 = v34;
LABEL_217:
  v118 = (v63 + v9) & v176;
  v119 = 7;
  if (!(_DWORD)v8)
    v119 = 8;
  v120 = (((v119 + v33 + v35 + v118) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8;
  v121 = *(_QWORD *)(a3 + 16);
  v122 = *(_QWORD *)(v121 - 8);
  v123 = *(unsigned __int8 *)(v122 + 80);
  v177 = sub_2212F51B4();
  v124 = *(_QWORD *)(v177 - 8);
  v125 = *(_DWORD *)(v124 + 80) & 0xF8 | 7;
  v126 = *(_DWORD *)(v124 + 80) & 0xF8 | 7 | v123;
  v127 = v120 + v126 + 10;
  v128 = ((unint64_t)a1 + v127) & ~v126;
  v129 = ((unint64_t)v172 + v127) & ~v126;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v122 + 40))(v128, v129, v121);
  v130 = *(_QWORD *)(v122 + 64) + v125;
  v131 = ~v125;
  v132 = (v130 + v128) & ~v125;
  v133 = (v130 + v129) & ~v125;
  *(_BYTE *)v132 = *(_BYTE *)v133;
  *(_QWORD *)(v132 + 8) = *(_QWORD *)(v133 + 8);
  swift_bridgeObjectRelease();
  v134 = (_QWORD *)((v133 + 23) & 0xFFFFFFFFFFFFFFF8);
  v135 = (_QWORD *)((v132 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v135 = *v134;
  swift_bridgeObjectRelease();
  v136 = ((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFFFF8;
  v137 = ((unint64_t)v134 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v136 = *(_OWORD *)v137;
  swift_release();
  *(_BYTE *)(v136 + 16) = *(_BYTE *)(v137 + 16);
  v138 = (_QWORD *)(((unint64_t)v135 + 39) & 0xFFFFFFFFFFFFFFF8);
  v139 = (unint64_t *)(((unint64_t)v134 + 39) & 0xFFFFFFFFFFFFFFF8);
  v140 = *v139;
  if (*v138 < 0xFFFFFFFFuLL)
  {
    if (v140 >= 0xFFFFFFFF)
    {
      v142 = v139[1];
      *v138 = v140;
      v138[1] = v142;
      goto LABEL_226;
    }
  }
  else
  {
    if (v140 >= 0xFFFFFFFF)
    {
      v141 = v139[1];
      *v138 = v140;
      v138[1] = v141;
      swift_release();
      goto LABEL_226;
    }
    swift_release();
  }
  *(_OWORD *)v138 = *(_OWORD *)v139;
LABEL_226:
  v143 = (_QWORD *)(((unint64_t)v138 + 23) & 0xFFFFFFFFFFFFFFF8);
  v144 = (_QWORD *)(((unint64_t)v139 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v143 = *v144;
  v143[1] = v144[1];
  swift_bridgeObjectRelease();
  v145 = (void *)(((unint64_t)v143 + v125 + 16) & v131);
  v146 = (char *)(((unint64_t)v144 + v125 + 16) & v131);
  v147 = *(unsigned int *)(v124 + 84);
  v148 = *(_QWORD *)(v124 + 64);
  v149 = ((v148 + 23) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v147 <= 0xFC)
  {
    v154 = *(unsigned __int8 *)((((unint64_t)v145 + v148 + 7) & 0xFFFFFFFFFFFFF8) + 8);
    v152 = &v146[v148];
    if (v154 >= 2 && v154 != 2)
    {
      v153 = (unint64_t)(v152 + 7) & 0xFFFFFFFFFFFFFFF8;
      if (*(unsigned __int8 *)(v153 + 8) <= 2u)
        goto LABEL_241;
      goto LABEL_239;
    }
    v153 = (unint64_t)(v152 + 7) & 0xFFFFFFFFFFFFFFF8;
    if (*(unsigned __int8 *)(v153 + 8) > 2u)
    {
LABEL_238:
      (*(void (**)(void *, uint64_t))(v124 + 8))(v145, v177);
      goto LABEL_239;
    }
LABEL_243:
    (*(void (**)(void *, char *, uint64_t))(v124 + 40))(v145, v146, v177);
    goto LABEL_244;
  }
  v150 = __swift_getEnumTagSinglePayload((uint64_t)v145, v147, v177);
  v151 = __swift_getEnumTagSinglePayload((uint64_t)v146, v147, v177);
  if (!v150)
  {
    if (v151)
      goto LABEL_238;
    v152 = &v146[v148];
    v153 = (unint64_t)&v146[v148 + 7] & 0xFFFFFFFFFFFFFFF8;
    goto LABEL_243;
  }
  if (!v151)
  {
    v152 = &v146[v148];
    v153 = (unint64_t)&v146[v148 + 7] & 0xFFFFFFFFFFFFFFF8;
LABEL_241:
    (*(void (**)(void *, char *, uint64_t))(v124 + 32))(v145, v146, v177);
LABEL_244:
    v156 = ((unint64_t)v145 + v148 + 7) & 0xFFFFFFFFFFFFFFF8;
    v157 = *(_QWORD *)v153;
    *(_BYTE *)(v156 + 8) = *(_BYTE *)(v153 + 8);
    *(_QWORD *)v156 = v157;
    v158 = ((unint64_t)v145 + v148 + 23) & 0xFFFFFFFFFFFFFFF8;
    v159 = (unint64_t)(v152 + 23) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v157) = *(_BYTE *)(v159 + 8);
    *(_QWORD *)v158 = *(_QWORD *)v159;
    *(_BYTE *)(v158 + 8) = v157;
    goto LABEL_245;
  }
LABEL_239:
  memcpy(v145, v146, v149);
LABEL_245:
  result = v174;
  *((_BYTE *)v145 + v149) = v146[v149];
  v161 = ((v125 + 80) & ~v125 | 1) + v149;
  v162 = v161 + v132;
  v163 = v161 + v133;
  *(_BYTE *)v162 = *(_BYTE *)v163;
  *(_BYTE *)(v162 | 1) = *(_BYTE *)(v163 | 1);
  return result;
}

uint64_t sub_2210A4C60(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  unsigned int v43;
  unsigned int v44;
  unint64_t v45;
  unsigned int EnumTagSinglePayload;
  uint64_t result;
  unsigned int v48;
  int v49;
  uint64_t v50;

  v50 = sub_2212F4944();
  v6 = *(_QWORD *)(v50 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  if (v8 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  else
    v9 = v8;
  v10 = v9 - 1;
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int *)(v12 + 84);
  v14 = sub_2212F51B4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int *)(v15 + 84);
  if (v16 <= 0xFD)
    v17 = 253;
  else
    v17 = *(_DWORD *)(v15 + 84);
  v18 = v17 - 1;
  if ((v17 - 1) <= 0x7FFFFFFF)
    v19 = 0x7FFFFFFF;
  else
    v19 = v17 - 1;
  if (v19 <= v13)
    v20 = v13;
  else
    v20 = v19;
  if (v20 <= v10)
    v21 = v10;
  else
    v21 = v20;
  if ((_DWORD)v7)
    v22 = *(_QWORD *)(v6 + 64);
  else
    v22 = *(_QWORD *)(v6 + 64) + 1;
  if (!a2)
    return 0;
  v23 = v14;
  v24 = *(unsigned __int8 *)(v6 + 80);
  v25 = (((v22 + ((v24 + 40) & ~v24) + ((v22 + v24) & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_DWORD *)(v15 + 80) & 0xF8;
  v27 = v26 | 7;
  v28 = *(_DWORD *)(v15 + 80) & 0xF8 | 7 | *(unsigned __int8 *)(v12 + 80);
  v29 = v25 + v28;
  v30 = *(_QWORD *)(v15 + 64);
  v31 = *(_QWORD *)(v12 + 64) + (v26 | 7);
  v32 = v29 + 10;
  if (a2 <= v21)
    goto LABEL_41;
  v33 = ((v30 + 23) & 0xFFFFFFFFFFFFFFF8) + ((v26 + 87) & ~v27) + (v31 & ~v27) + (v32 & ~v28) + 12;
  v34 = 8 * v33;
  if (v33 <= 3)
  {
    v36 = ((a2 - v21 + ~(-1 << v34)) >> v34) + 1;
    if (HIWORD(v36))
    {
      v35 = *(_DWORD *)(a1 + v33);
      if (!v35)
        goto LABEL_41;
      goto LABEL_32;
    }
    if (v36 > 0xFF)
    {
      v35 = *(unsigned __int16 *)(a1 + v33);
      if (!*(_WORD *)(a1 + v33))
        goto LABEL_41;
      goto LABEL_32;
    }
    if (v36 < 2)
    {
LABEL_41:
      if (v10 < v20)
      {
        v39 = (v32 + a1) & ~v28;
        if (v13 >= v19)
          return __swift_getEnumTagSinglePayload(v39, v13, v11);
        v40 = (uint64_t *)((((v31 + v39) & ~v27) + 23) & 0xFFFFFFFFFFFFFFF8);
        if (v18 < 0)
        {
          v45 = (v27 + (((((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v27;
          if (v16 < 0xFD)
          {
            v48 = *(unsigned __int8 *)(((v30 + v45 + 7) & 0xFFFFFFFFFFFFF8) + 8);
            if (v48 >= 2)
              v49 = (v48 + 2147483646) & 0x7FFFFFFF;
            else
              v49 = -1;
            if ((v49 + 1) >= 2)
              EnumTagSinglePayload = v49;
            else
              EnumTagSinglePayload = 0;
          }
          else
          {
            EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v45, v16, v23);
          }
          if (EnumTagSinglePayload >= 2)
            return EnumTagSinglePayload - 1;
          else
            return 0;
        }
        else
        {
          v41 = *v40;
          if ((unint64_t)*v40 >= 0xFFFFFFFF)
            LODWORD(v41) = -1;
          return (v41 + 1);
        }
      }
      if ((v8 & 0x80000000) != 0)
      {
        if (!(_DWORD)v7)
          return 0;
        v44 = __swift_getEnumTagSinglePayload((a1 + v24 + 40) & ~v24, v7, v50);
        if (v44 < 2)
          return 0;
        v43 = v44 - 1;
      }
      else
      {
        v42 = *(_QWORD *)(a1 + 24);
        if (v42 >= 0xFFFFFFFF)
          LODWORD(v42) = -1;
        v43 = v42 + 1;
      }
      result = v43 - 1;
      if (v43 > 1)
        return result;
      return 0;
    }
  }
  v35 = *(unsigned __int8 *)(a1 + v33);
  if (!*(_BYTE *)(a1 + v33))
    goto LABEL_41;
LABEL_32:
  v37 = (v35 - 1) << v34;
  if (v33 > 3)
    v37 = 0;
  if ((_DWORD)v33)
  {
    if (v33 <= 3)
      v38 = v33;
    else
      v38 = 4;
    __asm { BR              X12 }
  }
  return v21 + v37 + 1;
}

unint64_t sub_2210A4FC8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t result;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  size_t v25;
  char v26;
  BOOL v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  int v31;

  v7 = *(_QWORD *)(sub_2212F4944() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = v10 - 1;
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = 0;
  v15 = *(_QWORD *)(sub_2212F51B4() - 8);
  if (*(_DWORD *)(v15 + 84) <= 0xFDu)
    v16 = 253;
  else
    v16 = *(_DWORD *)(v15 + 84);
  if ((v16 - 1) <= 0x7FFFFFFF)
    v17 = 0x7FFFFFFF;
  else
    v17 = v16 - 1;
  if (v17 <= v13)
    v18 = v13;
  else
    v18 = v17;
  if (v18 <= v11)
    v19 = v11;
  else
    v19 = v18;
  if (v8)
    v20 = *(_QWORD *)(v7 + 64);
  else
    v20 = *(_QWORD *)(v7 + 64) + 1;
  result = ((v20 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
         + v20
         + ((*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v22 = *(_DWORD *)(v15 + 80) & 0xF8;
  v23 = v22 | 7 | *(unsigned __int8 *)(v12 + 80);
  v24 = ((v22 + 87) & ~(v22 | 7))
      + ((*(_QWORD *)(v15 + 64) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 9
      + ((*(_QWORD *)(v12 + 64) + (v22 | 7)) & ~(v22 | 7))
      + 1
      + ((((((result + 7) & 0xFFFFFFFFFFFFFFF8) + 350) & 0xFFFFFFFFFFFFFFF8) + v23 + 10) & ~v23);
  v25 = v24 + 2;
  v26 = 8 * (v24 + 2);
  v27 = a3 >= v19;
  v28 = a3 - v19;
  if (v28 != 0 && v27)
  {
    if (v25 <= 3)
    {
      v29 = ((v28 + ~(-1 << v26)) >> v26) + 1;
      if (HIWORD(v29))
      {
        v14 = 4u;
      }
      else if (v29 >= 0x100)
      {
        v14 = 2;
      }
      else
      {
        v14 = v29 > 1;
      }
    }
    else
    {
      v14 = 1u;
    }
  }
  if (v19 < a2)
  {
    v30 = ~v19 + a2;
    if (v25 < 4)
    {
      if ((_DWORD)v24 != -2)
      {
        v31 = v30 & ~(-1 << v26);
        bzero(a1, v25);
        if ((_DWORD)v24 == 1)
        {
          *(_WORD *)a1 = v31;
          a1[2] = BYTE2(v31);
        }
        else if ((_DWORD)v24)
        {
          *a1 = v31;
        }
        else
        {
          *(_WORD *)a1 = v31;
        }
      }
    }
    else
    {
      bzero(a1, v25);
      *(_DWORD *)a1 = v30;
    }
    __asm { BR              X10 }
  }
  return result;
}

void sub_2210A5394()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x2210A5560);
}

void sub_2210A539C()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x2210A5560);
}

void sub_2210A53A4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x2210A5560);
}

void sub_2210A55E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255659AB0)
  {
    type metadata accessor for SubscriptionStoreContentConfiguration(255);
    v0 = sub_2212F5844();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255659AB0);
  }
}

uint64_t sub_2210A5638()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata accessor for SubscriptionStoreMainContainerContent.Kind()
{
  JUMPOUT(0x22766BA10);
}

uint64_t sub_2210A567C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscriptionStoreContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2210A56C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscriptionStoreContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2210A5704()
{
  unint64_t result;

  result = qword_255659AB8;
  if (!qword_255659AB8)
  {
    result = MEMORY[0x22766BAC4](&unk_2213042C0, &type metadata for ApplyEnvironmentBridgeModifier);
    atomic_store(result, (unint64_t *)&qword_255659AB8);
  }
  return result;
}

uint64_t sub_2210A5740(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SubscriptionStoreContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2210A577C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2210A57B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2210A57FC(_QWORD *a1, uint64_t a2)
{
  sub_22114F378(a2, a1);
  return a2;
}

uint64_t sub_2210A5838(uint64_t a1)
{
  sub_22114F338(a1);
  return a1;
}

uint64_t sub_2210A586C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  result = type metadata accessor for SubscriptionStoreControlConfiguration(319, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 40), a4);
  if (v5 <= 0x3F)
  {
    result = type metadata accessor for SubscriptionStoreContentConfiguration(319);
    if (v6 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2210A58F4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _OWORD *v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  _OWORD *v51;
  _OWORD *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  _OWORD *v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  _OWORD *v61;
  _OWORD *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  _OWORD *v66;
  _OWORD *v67;
  unint64_t v68;
  __int128 v69;
  uint64_t v70;
  unint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  unsigned __int8 v80;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v7;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
      v8 = (int *)type metadata accessor for SubscriptionStoreContentConfiguration(0);
      v9 = v8[5];
      v10 = (char *)(a1 + v9);
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v19 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v10, v11, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      }
      v20 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
      v21 = &v10[v20];
      v22 = &v11[v20];
      if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v12))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v31 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v21, v22, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v12);
      }
      v32 = v8[6];
      v33 = a1 + v32;
      v34 = (uint64_t)a2 + v32;
      v35 = *(uint64_t *)((char *)a2 + v32 + 8);
      if (v35)
      {
        *(_BYTE *)v33 = *(_BYTE *)v34;
        *(_QWORD *)(v33 + 8) = v35;
        v36 = *(_QWORD *)(v34 + 40);
        swift_retain();
        if (v36 >= 6)
        {
          v45 = *(_QWORD *)(v34 + 48);
          *(_QWORD *)(v33 + 40) = v36;
          *(_QWORD *)(v33 + 48) = v45;
          (**(void (***)(uint64_t, uint64_t, unint64_t))(v36 - 8))(v33 + 16, v34 + 16, v36);
        }
        else
        {
          v37 = *(_OWORD *)(v34 + 32);
          *(_OWORD *)(v33 + 16) = *(_OWORD *)(v34 + 16);
          *(_OWORD *)(v33 + 32) = v37;
          *(_QWORD *)(v33 + 48) = *(_QWORD *)(v34 + 48);
        }
        v46 = (_OWORD *)(v33 + 56);
        v47 = (_OWORD *)(v34 + 56);
        v48 = *(_QWORD *)(v34 + 80);
        if (v48)
        {
          v49 = *(_QWORD *)(v34 + 88);
          *(_QWORD *)(v33 + 80) = v48;
          *(_QWORD *)(v33 + 88) = v49;
          (**(void (***)(_OWORD *, _OWORD *))(v48 - 8))(v46, v47);
        }
        else
        {
          v50 = *(_OWORD *)(v34 + 72);
          *v46 = *v47;
          *(_OWORD *)(v33 + 72) = v50;
          *(_QWORD *)(v33 + 88) = *(_QWORD *)(v34 + 88);
        }
        v51 = (_OWORD *)(v33 + 96);
        v52 = (_OWORD *)(v34 + 96);
        v53 = *(_QWORD *)(v34 + 120);
        if (v53)
        {
          v54 = *(_QWORD *)(v34 + 128);
          *(_QWORD *)(v33 + 120) = v53;
          *(_QWORD *)(v33 + 128) = v54;
          (**(void (***)(_OWORD *, _OWORD *))(v53 - 8))(v51, v52);
        }
        else
        {
          v55 = *(_OWORD *)(v34 + 112);
          *v51 = *v52;
          *(_OWORD *)(v33 + 112) = v55;
          *(_QWORD *)(v33 + 128) = *(_QWORD *)(v34 + 128);
        }
        v56 = (_OWORD *)(v33 + 136);
        v57 = (_OWORD *)(v34 + 136);
        v58 = *(_QWORD *)(v34 + 160);
        if (v58)
        {
          v59 = *(_QWORD *)(v34 + 168);
          *(_QWORD *)(v33 + 160) = v58;
          *(_QWORD *)(v33 + 168) = v59;
          (**(void (***)(_OWORD *, _OWORD *))(v58 - 8))(v56, v57);
        }
        else
        {
          v60 = *(_OWORD *)(v34 + 152);
          *v56 = *v57;
          *(_OWORD *)(v33 + 152) = v60;
          *(_QWORD *)(v33 + 168) = *(_QWORD *)(v34 + 168);
        }
        v61 = (_OWORD *)(v33 + 176);
        v62 = (_OWORD *)(v34 + 176);
        v63 = *(_QWORD *)(v34 + 200);
        if (v63)
        {
          v64 = *(_QWORD *)(v34 + 208);
          *(_QWORD *)(v33 + 200) = v63;
          *(_QWORD *)(v33 + 208) = v64;
          (**(void (***)(_OWORD *, _OWORD *))(v63 - 8))(v61, v62);
          *(_QWORD *)(v33 + 216) = *(_QWORD *)(v34 + 216);
        }
        else
        {
          v65 = *(_OWORD *)(v34 + 192);
          *v61 = *v62;
          *(_OWORD *)(v33 + 192) = v65;
          *(_OWORD *)(v33 + 208) = *(_OWORD *)(v34 + 208);
        }
        v66 = (_OWORD *)(v33 + 224);
        v67 = (_OWORD *)(v34 + 224);
        v68 = *(_QWORD *)(v34 + 248);
        if (v68 >= 3)
        {
          v70 = *(_QWORD *)(v34 + 256);
          *(_QWORD *)(v33 + 248) = v68;
          *(_QWORD *)(v33 + 256) = v70;
          (**(void (***)(_OWORD *, _OWORD *))(v68 - 8))(v66, v67);
        }
        else
        {
          v69 = *(_OWORD *)(v34 + 240);
          *v66 = *v67;
          *(_OWORD *)(v33 + 240) = v69;
          *(_QWORD *)(v33 + 256) = *(_QWORD *)(v34 + 256);
        }
        *(_BYTE *)(v33 + 264) = *(_BYTE *)(v34 + 264);
        v71 = *(_QWORD *)(v34 + 280);
        if (v71 >= 4)
        {
          *(_QWORD *)(v33 + 272) = *(_QWORD *)(v34 + 272);
          *(_QWORD *)(v33 + 280) = v71;
          *(_BYTE *)(v33 + 288) = *(_BYTE *)(v34 + 288);
          *(_QWORD *)(v33 + 296) = *(_QWORD *)(v34 + 296);
          v74 = *(_QWORD *)(v34 + 312);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v74)
          {
            *(_QWORD *)(v33 + 304) = *(_QWORD *)(v34 + 304);
            *(_QWORD *)(v33 + 312) = v74;
            *(_BYTE *)(v33 + 320) = *(_BYTE *)(v34 + 320);
            *(_QWORD *)(v33 + 328) = *(_QWORD *)(v34 + 328);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v75 = *(_OWORD *)(v34 + 320);
            *(_OWORD *)(v33 + 304) = *(_OWORD *)(v34 + 304);
            *(_OWORD *)(v33 + 320) = v75;
          }
        }
        else
        {
          v72 = *(_OWORD *)(v34 + 288);
          *(_OWORD *)(v33 + 272) = *(_OWORD *)(v34 + 272);
          *(_OWORD *)(v33 + 288) = v72;
          v73 = *(_OWORD *)(v34 + 320);
          *(_OWORD *)(v33 + 304) = *(_OWORD *)(v34 + 304);
          *(_OWORD *)(v33 + 320) = v73;
        }
        *(_WORD *)(v33 + 336) = *(_WORD *)(v34 + 336);
        *(_BYTE *)(v33 + 342) = *(_BYTE *)(v34 + 342);
        *(_DWORD *)(v33 + 338) = *(_DWORD *)(v34 + 338);
      }
      else
      {
        memcpy((void *)(a1 + v32), (char *)a2 + v32, 0x157uLL);
      }
      v76 = v8[7];
      v77 = a1 + v76;
      v78 = (uint64_t *)((char *)a2 + v76);
      v79 = *v78;
      v80 = *((_BYTE *)v78 + 8);
      j__swift_bridgeObjectRetain(*v78, v80);
      *(_QWORD *)v77 = v79;
      *(_BYTE *)(v77 + 8) = v80;
      *(_BYTE *)(a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = a2[1];
      v15 = a2[4];
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_QWORD *)(a1 + 32) = v15;
      *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
      v16 = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v16)
      {
        v18 = a2[7];
        *(_QWORD *)(a1 + 48) = v16;
        *(_QWORD *)(a1 + 56) = v18;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      }
      v24 = a2[9];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = v24;
      v25 = type metadata accessor for SubscriptionStoreControlConfiguration(0, *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 40), v17);
      v26 = *(int *)(v25 + 60);
      v27 = (char *)(a1 + v26);
      v28 = (char *)a2 + v26;
      v29 = type metadata accessor for Subscription();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(qword_255656110);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v38 = sub_2212F51B4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v27, v28, v38);
        v39 = *(int *)(v29 + 20);
        v40 = &v27[v39];
        v41 = &v28[v39];
        *(_QWORD *)v40 = *(_QWORD *)v41;
        v40[8] = v41[8];
        v42 = *(int *)(v29 + 24);
        v43 = &v27[v42];
        v44 = &v28[v42];
        *(_QWORD *)v43 = *(_QWORD *)v44;
        v43[8] = v44[8];
        __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
      }
      *(_BYTE *)(a1 + *(int *)(v25 + 64)) = *((_BYTE *)a2 + *(int *)(v25 + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2210A5EBC(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v4 = (int *)type metadata accessor for SubscriptionStoreContentConfiguration(0);
    v5 = a1 + v4[5];
    v6 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
    if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    {
      v7 = sub_2212F4944();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
    }
    v8 = v5 + *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
    if (!__swift_getEnumTagSinglePayload(v8, 1, v6))
    {
      v9 = sub_2212F4944();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
    v10 = (_QWORD *)(a1 + v4[6]);
    if (v10[1])
    {
      swift_release();
      if (v10[5] >= 6uLL)
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 2));
      if (v10[10])
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 7));
      if (v10[15])
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 12));
      if (v10[20])
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 17));
      if (v10[25])
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 22));
      if (v10[31] >= 3uLL)
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 28));
      if (v10[35] >= 4uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v10[39])
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
    }
    return j__swift_bridgeObjectRelease(*(_QWORD *)(a1 + v4[7]), *(unsigned __int8 *)(a1 + v4[7] + 8));
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(a1 + 48))
      swift_release();
    swift_bridgeObjectRelease();
    v13 = a1
        + *(int *)(type metadata accessor for SubscriptionStoreControlConfiguration(0, *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 40), v12)+ 60);
    v14 = type metadata accessor for Subscription();
    result = __swift_getEnumTagSinglePayload(v13, 1, v14);
    if (!(_DWORD)result)
    {
      v15 = sub_2212F51B4();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
    }
  }
  return result;
}

uint64_t sub_2210A60DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  _OWORD *v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  _OWORD *v54;
  _OWORD *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  _OWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  _OWORD *v64;
  _OWORD *v65;
  unint64_t v66;
  __int128 v67;
  uint64_t v68;
  unint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  unsigned __int8 v78;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    v7 = (int *)type metadata accessor for SubscriptionStoreContentConfiguration(0);
    v8 = v7[5];
    v9 = (char *)(a1 + v8);
    v10 = (char *)(a2 + v8);
    v11 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v17 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v9, v10, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v18 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
    v19 = &v9[v18];
    v20 = &v10[v18];
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v11))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v29 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v19, v20, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v11);
    }
    v30 = v7[6];
    v31 = a1 + v30;
    v32 = a2 + v30;
    v33 = *(_QWORD *)(a2 + v30 + 8);
    if (v33)
    {
      *(_BYTE *)v31 = *(_BYTE *)v32;
      *(_QWORD *)(v31 + 8) = v33;
      v34 = *(_QWORD *)(v32 + 40);
      swift_retain();
      if (v34 >= 6)
      {
        v43 = *(_QWORD *)(v32 + 48);
        *(_QWORD *)(v31 + 40) = v34;
        *(_QWORD *)(v31 + 48) = v43;
        (**(void (***)(uint64_t, uint64_t, unint64_t))(v34 - 8))(v31 + 16, v32 + 16, v34);
      }
      else
      {
        v35 = *(_OWORD *)(v32 + 32);
        *(_OWORD *)(v31 + 16) = *(_OWORD *)(v32 + 16);
        *(_OWORD *)(v31 + 32) = v35;
        *(_QWORD *)(v31 + 48) = *(_QWORD *)(v32 + 48);
      }
      v44 = (_OWORD *)(v31 + 56);
      v45 = (_OWORD *)(v32 + 56);
      v46 = *(_QWORD *)(v32 + 80);
      if (v46)
      {
        v47 = *(_QWORD *)(v32 + 88);
        *(_QWORD *)(v31 + 80) = v46;
        *(_QWORD *)(v31 + 88) = v47;
        (**(void (***)(_OWORD *, _OWORD *))(v46 - 8))(v44, v45);
      }
      else
      {
        v48 = *(_OWORD *)(v32 + 72);
        *v44 = *v45;
        *(_OWORD *)(v31 + 72) = v48;
        *(_QWORD *)(v31 + 88) = *(_QWORD *)(v32 + 88);
      }
      v49 = (_OWORD *)(v31 + 96);
      v50 = (_OWORD *)(v32 + 96);
      v51 = *(_QWORD *)(v32 + 120);
      if (v51)
      {
        v52 = *(_QWORD *)(v32 + 128);
        *(_QWORD *)(v31 + 120) = v51;
        *(_QWORD *)(v31 + 128) = v52;
        (**(void (***)(_OWORD *, _OWORD *))(v51 - 8))(v49, v50);
      }
      else
      {
        v53 = *(_OWORD *)(v32 + 112);
        *v49 = *v50;
        *(_OWORD *)(v31 + 112) = v53;
        *(_QWORD *)(v31 + 128) = *(_QWORD *)(v32 + 128);
      }
      v54 = (_OWORD *)(v31 + 136);
      v55 = (_OWORD *)(v32 + 136);
      v56 = *(_QWORD *)(v32 + 160);
      if (v56)
      {
        v57 = *(_QWORD *)(v32 + 168);
        *(_QWORD *)(v31 + 160) = v56;
        *(_QWORD *)(v31 + 168) = v57;
        (**(void (***)(_OWORD *, _OWORD *))(v56 - 8))(v54, v55);
      }
      else
      {
        v58 = *(_OWORD *)(v32 + 152);
        *v54 = *v55;
        *(_OWORD *)(v31 + 152) = v58;
        *(_QWORD *)(v31 + 168) = *(_QWORD *)(v32 + 168);
      }
      v59 = (_OWORD *)(v31 + 176);
      v60 = (_OWORD *)(v32 + 176);
      v61 = *(_QWORD *)(v32 + 200);
      if (v61)
      {
        v62 = *(_QWORD *)(v32 + 208);
        *(_QWORD *)(v31 + 200) = v61;
        *(_QWORD *)(v31 + 208) = v62;
        (**(void (***)(_OWORD *, _OWORD *))(v61 - 8))(v59, v60);
        *(_QWORD *)(v31 + 216) = *(_QWORD *)(v32 + 216);
      }
      else
      {
        v63 = *(_OWORD *)(v32 + 192);
        *v59 = *v60;
        *(_OWORD *)(v31 + 192) = v63;
        *(_OWORD *)(v31 + 208) = *(_OWORD *)(v32 + 208);
      }
      v64 = (_OWORD *)(v31 + 224);
      v65 = (_OWORD *)(v32 + 224);
      v66 = *(_QWORD *)(v32 + 248);
      if (v66 >= 3)
      {
        v68 = *(_QWORD *)(v32 + 256);
        *(_QWORD *)(v31 + 248) = v66;
        *(_QWORD *)(v31 + 256) = v68;
        (**(void (***)(_OWORD *, _OWORD *))(v66 - 8))(v64, v65);
      }
      else
      {
        v67 = *(_OWORD *)(v32 + 240);
        *v64 = *v65;
        *(_OWORD *)(v31 + 240) = v67;
        *(_QWORD *)(v31 + 256) = *(_QWORD *)(v32 + 256);
      }
      *(_BYTE *)(v31 + 264) = *(_BYTE *)(v32 + 264);
      v69 = *(_QWORD *)(v32 + 280);
      if (v69 >= 4)
      {
        *(_QWORD *)(v31 + 272) = *(_QWORD *)(v32 + 272);
        *(_QWORD *)(v31 + 280) = v69;
        *(_BYTE *)(v31 + 288) = *(_BYTE *)(v32 + 288);
        *(_QWORD *)(v31 + 296) = *(_QWORD *)(v32 + 296);
        v72 = *(_QWORD *)(v32 + 312);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v72)
        {
          *(_QWORD *)(v31 + 304) = *(_QWORD *)(v32 + 304);
          *(_QWORD *)(v31 + 312) = v72;
          *(_BYTE *)(v31 + 320) = *(_BYTE *)(v32 + 320);
          *(_QWORD *)(v31 + 328) = *(_QWORD *)(v32 + 328);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v73 = *(_OWORD *)(v32 + 320);
          *(_OWORD *)(v31 + 304) = *(_OWORD *)(v32 + 304);
          *(_OWORD *)(v31 + 320) = v73;
        }
      }
      else
      {
        v70 = *(_OWORD *)(v32 + 288);
        *(_OWORD *)(v31 + 272) = *(_OWORD *)(v32 + 272);
        *(_OWORD *)(v31 + 288) = v70;
        v71 = *(_OWORD *)(v32 + 320);
        *(_OWORD *)(v31 + 304) = *(_OWORD *)(v32 + 304);
        *(_OWORD *)(v31 + 320) = v71;
      }
      *(_WORD *)(v31 + 336) = *(_WORD *)(v32 + 336);
      *(_BYTE *)(v31 + 342) = *(_BYTE *)(v32 + 342);
      *(_DWORD *)(v31 + 338) = *(_DWORD *)(v32 + 338);
    }
    else
    {
      memcpy((void *)(a1 + v30), (const void *)(a2 + v30), 0x157uLL);
    }
    v74 = v7[7];
    v75 = a1 + v74;
    v76 = (uint64_t *)(a2 + v74);
    v77 = *v76;
    v78 = *((_BYTE *)v76 + 8);
    j__swift_bridgeObjectRetain(*v76, v78);
    *(_QWORD *)v75 = v77;
    *(_BYTE *)(v75 + 8) = v78;
    *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    v13 = *(_QWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = v13;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v14 = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14)
    {
      v16 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v14;
      *(_QWORD *)(a1 + 56) = v16;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    }
    v22 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v22;
    v23 = type metadata accessor for SubscriptionStoreControlConfiguration(0, *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 40), v15);
    v24 = *(int *)(v23 + 60);
    v25 = (char *)(a1 + v24);
    v26 = (char *)(a2 + v24);
    v27 = type metadata accessor for Subscription();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(qword_255656110);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v36 = sub_2212F51B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v25, v26, v36);
      v37 = *(int *)(v27 + 20);
      v38 = &v25[v37];
      v39 = &v26[v37];
      *(_QWORD *)v38 = *(_QWORD *)v39;
      v38[8] = v39[8];
      v40 = *(int *)(v27 + 24);
      v41 = &v25[v40];
      v42 = &v26[v40];
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v41[8] = v42[8];
      __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
    }
    *(_BYTE *)(a1 + *(int *)(v23 + 64)) = *(_BYTE *)(a2 + *(int *)(v23 + 64));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2210A6678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  unint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char v43;
  int *v44;
  _OWORD *v45;
  __int128 *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  _OWORD *v50;
  __int128 *v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  _OWORD *v55;
  __int128 *v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  _OWORD *v60;
  __int128 *v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  _OWORD *v65;
  __int128 *v66;
  unint64_t v67;
  __int128 v68;
  __int128 v69;
  _OWORD *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  unsigned __int8 v80;

  if (a1 != a2)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v13;
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      v14 = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v14)
      {
        v16 = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 48) = v14;
        *(_QWORD *)(a1 + 56) = v16;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      }
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      v22 = type metadata accessor for SubscriptionStoreControlConfiguration(0, *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 40), v15);
      v23 = *(int *)(v22 + 60);
      v24 = (char *)(a1 + v23);
      v25 = (char *)(a2 + v23);
      v26 = type metadata accessor for Subscription();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(qword_255656110);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        v35 = sub_2212F51B4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v24, v25, v35);
        v36 = *(int *)(v26 + 20);
        v37 = &v24[v36];
        v38 = &v25[v36];
        v39 = v38[8];
        *(_QWORD *)v37 = *(_QWORD *)v38;
        v37[8] = v39;
        v40 = *(int *)(v26 + 24);
        v41 = &v24[v40];
        v42 = &v25[v40];
        v43 = v42[8];
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v41[8] = v43;
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      v44 = (int *)(v22 + 64);
      goto LABEL_44;
    }
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    v7 = (int *)type metadata accessor for SubscriptionStoreContentConfiguration(0);
    v8 = v7[5];
    v9 = (char *)(a1 + v8);
    v10 = (char *)(a2 + v8);
    v11 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v17 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v9, v10, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v18 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
    v19 = &v9[v18];
    v20 = &v10[v18];
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v11))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v28 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v19, v20, v28);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v11);
    }
    v29 = v7[6];
    v30 = (_BYTE *)(a1 + v29);
    v31 = (_BYTE *)(a2 + v29);
    if (!*(_QWORD *)(a2 + v29 + 8))
    {
      memcpy(v30, v31, 0x157uLL);
LABEL_43:
      v76 = v7[7];
      v77 = a1 + v76;
      v78 = (uint64_t *)(a2 + v76);
      v79 = *v78;
      v80 = *((_BYTE *)v78 + 8);
      j__swift_bridgeObjectRetain(*v78, v80);
      *(_QWORD *)v77 = v79;
      *(_BYTE *)(v77 + 8) = v80;
      v44 = v7 + 8;
LABEL_44:
      *(_BYTE *)(a1 + *v44) = *(_BYTE *)(a2 + *v44);
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    *v30 = *v31;
    *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
    v32 = *((_QWORD *)v31 + 5);
    swift_retain();
    if (v32 >= 6)
    {
      *((_QWORD *)v30 + 5) = v32;
      *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
      (**(void (***)(uint64_t, uint64_t, unint64_t))(v32 - 8))((uint64_t)(v30 + 16), (uint64_t)(v31 + 16), v32);
    }
    else
    {
      v33 = *((_OWORD *)v31 + 1);
      v34 = *((_OWORD *)v31 + 2);
      *((_QWORD *)v30 + 6) = *((_QWORD *)v31 + 6);
      *((_OWORD *)v30 + 1) = v33;
      *((_OWORD *)v30 + 2) = v34;
    }
    v45 = v30 + 56;
    v46 = (__int128 *)(v31 + 56);
    v47 = *((_QWORD *)v31 + 10);
    if (v47)
    {
      *((_QWORD *)v30 + 10) = v47;
      *((_QWORD *)v30 + 11) = *((_QWORD *)v31 + 11);
      (**(void (***)(_OWORD *, __int128 *))(v47 - 8))(v45, v46);
    }
    else
    {
      v48 = *v46;
      v49 = *(_OWORD *)(v31 + 72);
      *((_QWORD *)v30 + 11) = *((_QWORD *)v31 + 11);
      *v45 = v48;
      *(_OWORD *)(v30 + 72) = v49;
    }
    v50 = v30 + 96;
    v51 = (__int128 *)(v31 + 96);
    v52 = *((_QWORD *)v31 + 15);
    if (v52)
    {
      *((_QWORD *)v30 + 15) = v52;
      *((_QWORD *)v30 + 16) = *((_QWORD *)v31 + 16);
      (**(void (***)(_OWORD *, __int128 *))(v52 - 8))(v50, v51);
    }
    else
    {
      v53 = *v51;
      v54 = *((_OWORD *)v31 + 7);
      *((_QWORD *)v30 + 16) = *((_QWORD *)v31 + 16);
      *v50 = v53;
      *((_OWORD *)v30 + 7) = v54;
    }
    v55 = v30 + 136;
    v56 = (__int128 *)(v31 + 136);
    v57 = *((_QWORD *)v31 + 20);
    if (v57)
    {
      *((_QWORD *)v30 + 20) = v57;
      *((_QWORD *)v30 + 21) = *((_QWORD *)v31 + 21);
      (**(void (***)(_OWORD *, __int128 *))(v57 - 8))(v55, v56);
    }
    else
    {
      v58 = *v56;
      v59 = *(_OWORD *)(v31 + 152);
      *((_QWORD *)v30 + 21) = *((_QWORD *)v31 + 21);
      *v55 = v58;
      *(_OWORD *)(v30 + 152) = v59;
    }
    v60 = v30 + 176;
    v61 = (__int128 *)(v31 + 176);
    v62 = *((_QWORD *)v31 + 25);
    if (v62)
    {
      *((_QWORD *)v30 + 25) = v62;
      *((_QWORD *)v30 + 26) = *((_QWORD *)v31 + 26);
      (**(void (***)(_OWORD *, __int128 *))(v62 - 8))(v60, v61);
      *((_QWORD *)v30 + 27) = *((_QWORD *)v31 + 27);
    }
    else
    {
      v63 = *v61;
      v64 = *((_OWORD *)v31 + 13);
      *((_OWORD *)v30 + 12) = *((_OWORD *)v31 + 12);
      *((_OWORD *)v30 + 13) = v64;
      *v60 = v63;
    }
    v65 = v30 + 224;
    v66 = (__int128 *)(v31 + 224);
    v67 = *((_QWORD *)v31 + 31);
    if (v67 >= 3)
    {
      *((_QWORD *)v30 + 31) = v67;
      *((_QWORD *)v30 + 32) = *((_QWORD *)v31 + 32);
      (**(void (***)(_OWORD *, __int128 *))(v67 - 8))(v65, v66);
    }
    else
    {
      v68 = *v66;
      v69 = *((_OWORD *)v31 + 15);
      *((_QWORD *)v30 + 32) = *((_QWORD *)v31 + 32);
      *v65 = v68;
      *((_OWORD *)v30 + 15) = v69;
    }
    v30[264] = v31[264];
    if (*((_QWORD *)v31 + 35) >= 4uLL)
    {
      *((_QWORD *)v30 + 34) = *((_QWORD *)v31 + 34);
      *((_QWORD *)v30 + 35) = *((_QWORD *)v31 + 35);
      v30[288] = v31[288];
      *((_QWORD *)v30 + 37) = *((_QWORD *)v31 + 37);
      v74 = *((_QWORD *)v31 + 39);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v74)
      {
        *((_QWORD *)v30 + 38) = *((_QWORD *)v31 + 38);
        *((_QWORD *)v30 + 39) = *((_QWORD *)v31 + 39);
        v30[320] = v31[320];
        *((_QWORD *)v30 + 41) = *((_QWORD *)v31 + 41);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_42:
        v30[336] = v31[336];
        v30[337] = v31[337];
        v75 = *(_DWORD *)(v31 + 338);
        v30[342] = v31[342];
        *(_DWORD *)(v30 + 338) = v75;
        goto LABEL_43;
      }
      v70 = v30 + 304;
      v71 = *((_OWORD *)v31 + 19);
      v72 = *((_OWORD *)v31 + 20);
    }
    else
    {
      v70 = v30 + 272;
      v71 = *((_OWORD *)v31 + 17);
      v72 = *((_OWORD *)v31 + 18);
      v73 = *((_OWORD *)v31 + 20);
      *((_OWORD *)v30 + 19) = *((_OWORD *)v31 + 19);
      *((_OWORD *)v30 + 20) = v73;
    }
    *v70 = v71;
    v70[1] = v72;
    goto LABEL_42;
  }
  return a1;
}

uint64_t sub_2210A6C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    v8 = (int *)type metadata accessor for SubscriptionStoreContentConfiguration(0);
    v9 = v8[5];
    v10 = (char *)(a1 + v9);
    v11 = (char *)(a2 + v9);
    v12 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v17 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    v18 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
    v19 = &v10[v18];
    v20 = &v11[v18];
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v12))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v28 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v19, v20, v28);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v12);
    }
    memcpy((void *)(a1 + v8[6]), (const void *)(a2 + v8[6]), 0x157uLL);
    v29 = v8[7];
    v30 = a1 + v29;
    v31 = a2 + v29;
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
    *(_BYTE *)(a1 + v8[8]) = *(_BYTE *)(a2 + v8[8]);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v14 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v14;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v15 = *(_QWORD *)(a2 + 48);
    if (v15)
    {
      v16 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v15;
      *(_QWORD *)(a1 + 56) = v16;
    }
    else
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    }
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v22 = type metadata accessor for SubscriptionStoreControlConfiguration(0, *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 40), v6);
    v23 = *(int *)(v22 + 60);
    v24 = (char *)(a1 + v23);
    v25 = (char *)(a2 + v23);
    v26 = type metadata accessor for Subscription();
    if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(qword_255656110);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v32 = sub_2212F51B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v24, v25, v32);
      v33 = *(int *)(v26 + 20);
      v34 = &v24[v33];
      v35 = &v25[v33];
      *(_QWORD *)v34 = *(_QWORD *)v35;
      v34[8] = v35[8];
      v36 = *(int *)(v26 + 24);
      v37 = &v24[v36];
      v38 = &v25[v36];
      *(_QWORD *)v37 = *(_QWORD *)v38;
      v37[8] = v38[8];
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
    }
    *(_BYTE *)(a1 + *(int *)(v22 + 64)) = *(_BYTE *)(a2 + *(int *)(v22 + 64));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2210A6F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;

  if (a1 != a2)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v8 = (int *)type metadata accessor for SubscriptionStoreContentConfiguration(0);
      v9 = v8[5];
      v10 = (char *)(a1 + v9);
      v11 = (char *)(a2 + v9);
      v12 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v17 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      }
      v18 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
      v19 = &v10[v18];
      v20 = &v11[v18];
      if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v12))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v28 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v19, v20, v28);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v12);
      }
      memcpy((void *)(a1 + v8[6]), (const void *)(a2 + v8[6]), 0x157uLL);
      v29 = v8[7];
      v30 = a1 + v29;
      v31 = a2 + v29;
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
      v32 = v8 + 8;
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v14 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v14;
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      v15 = *(_QWORD *)(a2 + 48);
      if (v15)
      {
        v16 = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 48) = v15;
        *(_QWORD *)(a1 + 56) = v16;
      }
      else
      {
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      }
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      v22 = type metadata accessor for SubscriptionStoreControlConfiguration(0, *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 40), v6);
      v23 = *(int *)(v22 + 60);
      v24 = (char *)(a1 + v23);
      v25 = (char *)(a2 + v23);
      v26 = type metadata accessor for Subscription();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(qword_255656110);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        v33 = sub_2212F51B4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v24, v25, v33);
        v34 = *(int *)(v26 + 20);
        v35 = &v24[v34];
        v36 = &v25[v34];
        *(_QWORD *)v35 = *(_QWORD *)v36;
        v35[8] = v36[8];
        v37 = *(int *)(v26 + 24);
        v38 = &v24[v37];
        v39 = &v25[v37];
        *(_QWORD *)v38 = *(_QWORD *)v39;
        v38[8] = v39[8];
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      v32 = (int *)(v22 + 64);
    }
    *(_BYTE *)(a1 + *v32) = *(_BYTE *)(a2 + *v32);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2210A7258()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_2210A7268(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SubscriptionStoreControl(255, *a1, a1[2], a4);
  sub_2212F3348();
  type metadata accessor for NestedSubscriptionOptionContentView();
}

void sub_2210A72C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;

  sub_2212F3A20();
  v19 = MEMORY[0x22766BAC4](&unk_221310750, v16);
  v20 = sub_2210A5704();
  a15 = v19;
  a16 = v20;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v17, &a15);
  MEMORY[0x22766BAC4](&unk_22130C5AC, a1);
  OUTLINED_FUNCTION_8_2();
}

uint64_t OUTLINED_FUNCTION_4_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 272) = v1;
  *(_QWORD *)(v0 + 280) = v2;
  return 0;
}

uint64_t OUTLINED_FUNCTION_7_11()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_9_16(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_11_14()
{
  return 0;
}

void EntitlementTaskState.value.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_13_0();
  v7 = v6 - v5;
  (*(void (**)(uint64_t))(v4 + 16))(v6 - v5);
  OUTLINED_FUNCTION_97_1();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, v7, v8);
    v9 = a2;
    v10 = 0;
    v11 = v8;
  }
  else
  {
    v12 = OUTLINED_FUNCTION_97_1();
    v13(v12);
    v11 = *(_QWORD *)(a1 + 16);
    v9 = a2;
    v10 = 1;
  }
  __swift_storeEnumTagSinglePayload(v9, v10, 1, v11);
  OUTLINED_FUNCTION_17_0();
}

uint64_t sub_2210A7440(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[6] = a1;
  v2[7] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556590D0);
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = OUTLINED_FUNCTION_5_13();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659098);
  v2[11] = OUTLINED_FUNCTION_5_13();
  v4 = sub_2212F4FD4();
  v2[12] = v4;
  v2[13] = *(_QWORD *)(v4 - 8);
  v2[14] = OUTLINED_FUNCTION_5_13();
  OUTLINED_FUNCTION_26_9();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210A74C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = OUTLINED_FUNCTION_82_1();
  OUTLINED_FUNCTION_69_2(v1);
  sub_221023FE4(&qword_255659D70, (void (*)(uint64_t))MEMORY[0x24BDEA458]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v2;
  OUTLINED_FUNCTION_65_1(v2);
  return OUTLINED_FUNCTION_4_17();
}

uint64_t sub_2210A7530()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_8_11();
  *v3 = *v2;
  *(_QWORD *)(v0 + 136) = v1;
  swift_task_dealloc();
  if (!v1)
    (*(void (**)(uint64_t, _QWORD))(v0 + 120))(v0 + 16, 0);
  OUTLINED_FUNCTION_26_9();
  return OUTLINED_FUNCTION_0_20();
}

uint64_t sub_2210A7590()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t (*v18)(void);

  v2 = v0[11];
  v1 = v0[12];
  v3 = OUTLINED_FUNCTION_17_13();
  if (v4)
  {
    OUTLINED_FUNCTION_10_16(v3, &qword_255659098);
    v5 = OUTLINED_FUNCTION_101_1();
    __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
    OUTLINED_FUNCTION_13_13();
    OUTLINED_FUNCTION_24_9();
    OUTLINED_FUNCTION_58_1();
    v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
    return v7();
  }
  else
  {
    v8 = v0[14];
    v10 = v0[9];
    v9 = v0[10];
    v12 = v0[7];
    v11 = v0[8];
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[13] + 32);
    v0[18] = v13;
    v13(v8, v2, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
    sub_2212F5B38();
    v0[19] = v14;
    OUTLINED_FUNCTION_98_0(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v15 = (_QWORD *)OUTLINED_FUNCTION_22_5();
    v0[20] = v15;
    *v15 = v0;
    v15[1] = sub_2210A76D0;
    v16 = OUTLINED_FUNCTION_87_1(v0[14]);
    return OUTLINED_FUNCTION_40_2(v16, v18);
  }
}

uint64_t sub_2210A768C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_0(v0 + 16, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 120));
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  return OUTLINED_FUNCTION_3_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2210A76D0(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 168) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_95_0();
  OUTLINED_FUNCTION_26_9();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210A7724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;
  _QWORD *v6;

  if (*(_BYTE *)(v0 + 168) == 1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 144))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    v1 = OUTLINED_FUNCTION_101_1();
    __swift_storeEnumTagSinglePayload(v1, 0, 1, v2);
    OUTLINED_FUNCTION_13_13();
    OUTLINED_FUNCTION_24_9();
    OUTLINED_FUNCTION_58_1();
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
    return OUTLINED_FUNCTION_3_13(v3);
  }
  else
  {
    OUTLINED_FUNCTION_71_1(*(_QWORD *)(v0 + 104));
    v5 = OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_69_2(v5);
    sub_221023FE4(&qword_255659D70, (void (*)(uint64_t))MEMORY[0x24BDEA458]);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v6;
    OUTLINED_FUNCTION_65_1(v6);
    return OUTLINED_FUNCTION_4_17();
  }
}

uint64_t sub_2210A77F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[6] = a1;
  v2[7] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659D00);
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659B70);
  v2[11] = swift_task_alloc();
  v2[12] = __swift_instantiateConcreteTypeFromMangledName(&qword_255659088);
  v2[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2210A78A0()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 112) = OUTLINED_FUNCTION_82_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659CE8);
  sub_221024548(&qword_255659D48, &qword_255659CE8);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v1;
  OUTLINED_FUNCTION_64_2(v1);
  return OUTLINED_FUNCTION_4_17();
}

uint64_t sub_2210A7920()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_8_11();
  *v3 = *v2;
  *(_QWORD *)(v0 + 128) = v1;
  swift_task_dealloc();
  if (!v1)
    (*(void (**)(uint64_t, _QWORD))(v0 + 112))(v0 + 16, 0);
  OUTLINED_FUNCTION_26_9();
  return OUTLINED_FUNCTION_0_20();
}

uint64_t sub_2210A7980()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t EnumTagSinglePayload;
  uint64_t (*v3)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  v1 = v0[11];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v0[12]);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_10_16(EnumTagSinglePayload, &qword_255659B70);
    __swift_storeEnumTagSinglePayload(v0[6], 1, 1, v0[12]);
    OUTLINED_FUNCTION_13_13();
    OUTLINED_FUNCTION_24_9();
    OUTLINED_FUNCTION_58_1();
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
    return v3();
  }
  else
  {
    v6 = v0[9];
    v5 = v0[10];
    v8 = v0[7];
    v7 = v0[8];
    sub_221036890(v1, v0[13], &qword_255659088);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
    sub_2212F5B38();
    v0[17] = v9;
    OUTLINED_FUNCTION_91_1(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    v10 = (_QWORD *)OUTLINED_FUNCTION_51_0();
    v0[18] = (uint64_t)v10;
    *v10 = v0;
    v10[1] = sub_2210A7AD4;
    v11 = OUTLINED_FUNCTION_87_1(v0[13]);
    return OUTLINED_FUNCTION_12_18(v11, v12);
  }
}

uint64_t sub_2210A7A90()
{
  uint64_t v0;

  OUTLINED_FUNCTION_83_0(v0 + 16, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 112));
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  return OUTLINED_FUNCTION_3_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2210A7AD4(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 152) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_95_0();
  OUTLINED_FUNCTION_26_9();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210A7B28()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  _QWORD *v3;

  if (*(_BYTE *)(v0 + 152) == 1)
  {
    sub_221036890(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 48), &qword_255659088);
    __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 48), 0, 1, *(_QWORD *)(v0 + 96));
    OUTLINED_FUNCTION_13_13();
    OUTLINED_FUNCTION_24_9();
    OUTLINED_FUNCTION_58_1();
    v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
    return OUTLINED_FUNCTION_3_13(v1);
  }
  else
  {
    sub_2210ABD44(*(_QWORD *)(v0 + 104), &qword_255659088);
    *(_QWORD *)(v0 + 112) = OUTLINED_FUNCTION_81_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255659CE8);
    sub_221024548(&qword_255659D48, &qword_255659CE8);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v3;
    OUTLINED_FUNCTION_64_2(v3);
    return OUTLINED_FUNCTION_4_17();
  }
}

void EntitlementTaskState<A>.transaction.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659B68);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_13_0();
  v3 = OUTLINED_FUNCTION_97_1();
  sub_221036BA4(v3, v4, &qword_255659B68);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v6 = OUTLINED_FUNCTION_102_0();
    sub_221036890(v6, v7, v8);
  }
  else
  {
    OUTLINED_FUNCTION_10_16(EnumCaseMultiPayload, &qword_255659B68);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659088);
    OUTLINED_FUNCTION_85_0(a1, v10, v11, v9);
  }
}

void EntitlementTaskState.map<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_35_6();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_24_11(v10, v15);
  v11 = OUTLINED_FUNCTION_96_1();
  if (!(_DWORD)v11)
  {
    *a3 = *v5;
    OUTLINED_FUNCTION_43_3(v11, v12, v13, v14);
LABEL_7:
    swift_storeEnumTagMultiPayload();
    goto LABEL_8;
  }
  if ((_DWORD)v11 != 1
    || ((*(void (**)(uint64_t, _QWORD *, uint64_t))(v8 + 32))(v4, v5, v7),
        OUTLINED_FUNCTION_88_1(),
        v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7),
        !v3))
  {
    OUTLINED_FUNCTION_43_3(v11, v12, v13, v14);
    goto LABEL_7;
  }
LABEL_8:
  OUTLINED_FUNCTION_46_2();
}

uint64_t type metadata accessor for EntitlementTaskState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EntitlementTaskState);
}

uint64_t EntitlementTaskState.map<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v8 = *(_QWORD *)(a4 + 16);
  v6[8] = v8;
  v6[9] = *(_QWORD *)(v8 - 8);
  v6[10] = OUTLINED_FUNCTION_5_13();
  v6[11] = *(_QWORD *)(a4 - 8);
  v6[12] = OUTLINED_FUNCTION_5_13();
  OUTLINED_FUNCTION_26_9();
  return OUTLINED_FUNCTION_0_20();
}

uint64_t sub_2210A7E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_32_5();
  v0 = OUTLINED_FUNCTION_103_0();
  if ((_DWORD)v0)
  {
    if ((_DWORD)v0 == 1)
    {
      OUTLINED_FUNCTION_44_3();
      v4 = (_QWORD *)OUTLINED_FUNCTION_22_5();
      v5 = OUTLINED_FUNCTION_38_4(v4);
      return OUTLINED_FUNCTION_39_4(v5, v6, v7);
    }
    OUTLINED_FUNCTION_63_2(v0, v1, v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_31_7(v0, v1, v2, v3);
  }
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_29_8();
  OUTLINED_FUNCTION_13_13();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
  return OUTLINED_FUNCTION_3_13(v9);
}

uint64_t sub_2210A7EA0()
{
  OUTLINED_FUNCTION_25_10();
  OUTLINED_FUNCTION_26_9();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210A7EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = *(_QWORD *)(v0 + 48);
  OUTLINED_FUNCTION_71_1(*(_QWORD *)(v0 + 72));
  type metadata accessor for EntitlementTaskState(0, v1, v2, v3);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_29_8();
  OUTLINED_FUNCTION_13_13();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
  return OUTLINED_FUNCTION_37_4(v4);
}

uint64_t sub_2210A7F34()
{
  uint64_t v0;

  OUTLINED_FUNCTION_53_1(*(_QWORD *)(v0 + 72));
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  return OUTLINED_FUNCTION_37_4(*(uint64_t (**)(void))(v0 + 8));
}

void EntitlementTaskState.flatMap<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_35_6();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_24_11(v11, v15);
  v12 = OUTLINED_FUNCTION_96_1();
  if (!v12)
  {
    *a4 = *v5;
    type metadata accessor for EntitlementTaskState(0, a3, v13, v14);
LABEL_6:
    swift_storeEnumTagMultiPayload();
    goto LABEL_7;
  }
  if (v12 != 1)
  {
    type metadata accessor for EntitlementTaskState(0, a3, v13, v14);
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v9 + 32))(v4, v5, v8);
  OUTLINED_FUNCTION_88_1();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v8);
LABEL_7:
  OUTLINED_FUNCTION_46_2();
}

uint64_t EntitlementTaskState.flatMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v8 = *(_QWORD *)(a4 + 16);
  v6[8] = v8;
  v6[9] = *(_QWORD *)(v8 - 8);
  v6[10] = OUTLINED_FUNCTION_5_13();
  v6[11] = *(_QWORD *)(a4 - 8);
  v6[12] = OUTLINED_FUNCTION_5_13();
  OUTLINED_FUNCTION_26_9();
  return OUTLINED_FUNCTION_0_20();
}

uint64_t sub_2210A80D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_32_5();
  v0 = OUTLINED_FUNCTION_103_0();
  if ((_DWORD)v0)
  {
    if ((_DWORD)v0 == 1)
    {
      OUTLINED_FUNCTION_44_3();
      v4 = (_QWORD *)OUTLINED_FUNCTION_22_5();
      v5 = OUTLINED_FUNCTION_38_4(v4);
      return OUTLINED_FUNCTION_39_4(v5, v6, v7);
    }
    OUTLINED_FUNCTION_63_2(v0, v1, v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_31_7(v0, v1, v2, v3);
  }
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_29_8();
  OUTLINED_FUNCTION_13_13();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
  return OUTLINED_FUNCTION_3_13(v9);
}

uint64_t sub_2210A8148()
{
  OUTLINED_FUNCTION_25_10();
  OUTLINED_FUNCTION_26_9();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210A8184()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_71_1(*(_QWORD *)(v0 + 72));
  OUTLINED_FUNCTION_29_8();
  OUTLINED_FUNCTION_13_13();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
  return OUTLINED_FUNCTION_42_2(v1);
}

void View.currentEntitlementTask(for:priority:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  v14 = OUTLINED_FUNCTION_42_4();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_13_0();
  v17 = v16 - v15;
  v18 = OUTLINED_FUNCTION_72_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, a3, v18);
  v19 = (_QWORD *)(v17 + *(int *)(v14 + 20));
  *v19 = a1;
  v19[1] = a2;
  v20 = (_QWORD *)(v17 + *(int *)(v14 + 24));
  *v20 = a4;
  v20[1] = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  MEMORY[0x227669B20](v17, a6, v14, a7);
  sub_2210ABD14(v17, (uint64_t (*)(_QWORD))type metadata accessor for CurrentEntitlementViewModifier);
}

uint64_t type metadata accessor for CurrentEntitlementViewModifier()
{
  uint64_t result;

  result = qword_255659C68;
  if (!qword_255659C68)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2210A82F0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id *sub_2210A8364(id *__dst, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X14 }
    }
    if (v9 == 1)
    {
      (*(void (**)(id *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      v11 = *a2;
      v12 = *a2;
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

void sub_2210A849C(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      (*(void (**)(void))(v2 + 8))();
    else

  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    ((void (*)(void))((char *)&loc_2210A84E4 + 4 * byte_221301A15[v5]))();
  }
}

_BYTE *sub_2210A8544(_BYTE *__dst, id *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  id v8;
  id v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_BYTE *))(v4 + 16))(__dst);
    __dst[v5] = 1;
  }
  else
  {
    v8 = *a2;
    v9 = *a2;
    *(_QWORD *)__dst = v8;
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_2210A863C(id *__dst, void **__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    else

    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      v12 = *__src;
      v13 = v12;
      *__dst = v12;
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

_BYTE *sub_2210A87E8(_BYTE *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_BYTE *))(v4 + 32))(__dst);
    __dst[v5] = 1;
  }
  else
  {
    *(_QWORD *)__dst = *a2;
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_2210A88D0(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    else

    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      *__dst = *__src;
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

uint64_t sub_2210A8A74(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2210A8B38 + 4 * byte_221301A38[(v4 - 1)]))();
}

void sub_2210A8B84(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    v8 = 0;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v9 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_2210A8D28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2210A8D70 + 4 * byte_221301A46[v3]))();
}

void sub_2210A8DB8(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_2210A8E80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for CurrentEntitlementViewModifier();
  v2 = sub_2212F3348();
  sub_221023FE4(&qword_255659C08, (void (*)(uint64_t))type metadata accessor for CurrentEntitlementViewModifier);
  v5[0] = v1;
  v5[1] = v3;
  return MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v2, v5);
}

uint64_t *sub_2210A8F00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_2212F5640();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)v4 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)v4 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_2210A8FA8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2212F5640();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2210A9000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_2212F5640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_2210A9080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v6 = sub_2212F5640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2210A9120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2212F5640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_2210A9184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_2212F5640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_2210A9208()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210A9214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_72_0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_2210A928C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2210A9298(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_72_0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t sub_2210A9304()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F5640();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2210A9384()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210A9394()
{
  uint64_t v0;

  v0 = type metadata accessor for SKLogger();
  __swift_allocate_value_buffer(v0, qword_255659B50);
  __swift_project_value_buffer(v0, (uint64_t)qword_255659B50);
  return sub_2212F2C28();
}

uint64_t sub_2210A9410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v25 = a2;
  v26 = a1;
  v4 = type metadata accessor for CurrentEntitlementViewModifier();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = sub_2212F5640();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)(v2 + *(int *)(v4 + 20));
  v12 = *v11;
  v13 = v11[1];
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v14(v10, v3, v7);
  sub_221036990(v3, (uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for CurrentEntitlementViewModifier);
  v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v16 = swift_allocObject();
  sub_2210ABB38((uint64_t)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659CB8);
  v18 = v25;
  v19 = (char *)(v25 + *(int *)(v17 + 36));
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659CC0);
  v14(&v19[*(int *)(v20 + 36)], (uint64_t)v10, v7);
  v21 = &v19[*(int *)(v20 + 40)];
  *(_QWORD *)v21 = v12;
  *((_QWORD *)v21 + 1) = v13;
  *(_QWORD *)v19 = &unk_255659CB0;
  *((_QWORD *)v19 + 1) = v16;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v18, v26, v22);
  v23 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  return v23(v10, v7);
}

uint64_t sub_2210A95BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1[98] = a1;
  v1[99] = __swift_instantiateConcreteTypeFromMangledName(&qword_255659088);
  v1[100] = swift_task_alloc();
  v1[101] = __swift_instantiateConcreteTypeFromMangledName(&qword_255659CD0);
  v1[102] = swift_task_alloc();
  v1[103] = __swift_instantiateConcreteTypeFromMangledName(&qword_255659CD8);
  v1[104] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&dword_255659CE0);
  v1[105] = swift_task_alloc();
  v1[106] = swift_task_alloc();
  v1[107] = swift_task_alloc();
  v1[108] = swift_task_alloc();
  v1[109] = __swift_instantiateConcreteTypeFromMangledName(&qword_255659B70);
  v1[110] = swift_task_alloc();
  v1[111] = swift_task_alloc();
  v1[112] = swift_task_alloc();
  v1[113] = swift_task_alloc();
  v1[114] = swift_task_alloc();
  v1[115] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659CE8);
  v1[116] = swift_task_alloc();
  v2 = type metadata accessor for CurrentEntitlementViewModifier();
  v1[117] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[118] = v3;
  v1[119] = *(_QWORD *)(v3 + 64);
  v1[120] = swift_task_alloc();
  v1[121] = __swift_instantiateConcreteTypeFromMangledName(&qword_255659CF0);
  v1[122] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659CF8);
  v1[123] = v4;
  v1[124] = *(_QWORD *)(v4 - 8);
  v1[125] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659D00);
  v1[126] = v5;
  v1[127] = *(_QWORD *)(v5 - 8);
  v1[128] = swift_task_alloc();
  v1[129] = __swift_instantiateConcreteTypeFromMangledName(&qword_255659B68);
  v1[130] = swift_task_alloc();
  v1[131] = type metadata accessor for SKLogger();
  v1[132] = swift_task_alloc();
  v1[133] = swift_task_alloc();
  v1[134] = swift_task_alloc();
  v6 = sub_2212F4E00();
  v1[135] = v6;
  v1[136] = *(_QWORD *)(v6 - 8);
  v1[137] = swift_task_alloc();
  v1[138] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657180);
  v1[139] = swift_task_alloc();
  v7 = sub_2212F51B4();
  v1[140] = v7;
  v1[141] = *(_QWORD *)(v7 - 8);
  v1[142] = swift_task_alloc();
  sub_2212F55F8();
  v1[143] = sub_2212F55EC();
  v1[144] = sub_2212F55D4();
  v1[145] = v8;
  return swift_task_switch();
}

uint64_t sub_2210A9914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  _QWORD *v6;

  if (qword_255655C10 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 936);
  v2 = *(_QWORD *)(v0 + 784);
  *(_QWORD *)(v0 + 1168) = __swift_project_value_buffer(*(_QWORD *)(v0 + 1048), (uint64_t)qword_255659B50);
  *(_QWORD *)(v0 + 1176) = sub_22109F374();
  *(_QWORD *)(v0 + 1184) = v3;
  sub_2212F4BFC();
  v4 = (void (*)(uint64_t))MEMORY[0x24BDEA038];
  *(_QWORD *)(v0 + 1192) = sub_2212F4BCC();
  v5 = *(int *)(v1 + 20);
  *(_DWORD *)(v0 + 1360) = v5;
  v6 = (_QWORD *)(v2 + v5);
  *(_QWORD *)(v0 + 1200) = *v6;
  *(_QWORD *)(v0 + 1208) = v6[1];
  sub_221023FE4(&qword_255659D08, v4);
  sub_2212F55D4();
  return OUTLINED_FUNCTION_11_15();
}

uint64_t sub_2210A9A10()
{
  sub_2212F4B48();
  OUTLINED_FUNCTION_95_0();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210A9A54()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  char v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;

  v1 = OUTLINED_FUNCTION_17_13();
  if (v2)
  {
    OUTLINED_FUNCTION_10_16(v1, &qword_255657180);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 1104);
    v4 = *(_QWORD *)(v0 + 1096);
    v5 = *(_QWORD *)(v0 + 1088);
    v6 = *(_QWORD *)(v0 + 1080);
    v7 = OUTLINED_FUNCTION_97_1();
    v8(v7);
    sub_2212F513C();
    sub_2212F4DC4();
    v9 = sub_221042D38(v3, v4);
    v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v10(v4, v6);
    v10(v3, v6);
    if ((v9 & 1) != 0)
    {
      v12 = *(void **)(v0 + 1072);
      OUTLINED_FUNCTION_90_1(*(_QWORD *)(v0 + 1168), v11, (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
      sub_2212F5964();
      swift_bridgeObjectRelease();
      v40 = 0xD00000000000002CLL;
      v41 = 0x80000002212F8660;
      OUTLINED_FUNCTION_93_1();
      OUTLINED_FUNCTION_58_2();
      OUTLINED_FUNCTION_79_0();
      sub_2212F57CC();
      OUTLINED_FUNCTION_27_7();
      OUTLINED_FUNCTION_27_7();
      v13 = OUTLINED_FUNCTION_94_1();
      if (OUTLINED_FUNCTION_68_2(v13))
      {
        OUTLINED_FUNCTION_6_4();
        v14 = OUTLINED_FUNCTION_36_5();
        MEMORY[0xD00000000000002C] = 136446466;
        v39 = v14;
        v40 = 91;
        v41 = 0xE100000000000000;
        OUTLINED_FUNCTION_100_1();
        OUTLINED_FUNCTION_54_1();
        *(_QWORD *)(v0 + 768) = sub_221115C44(91, 0xE100000000000000, &v39);
        sub_2212F5898();
        OUTLINED_FUNCTION_46_0();
        OUTLINED_FUNCTION_44_2();
        OUTLINED_FUNCTION_19_13();
        *(_QWORD *)(v0 + 776) = OUTLINED_FUNCTION_80_0(0xD00000000000002CLL, v15, &v39);
        OUTLINED_FUNCTION_36_3();
        OUTLINED_FUNCTION_15_11();
        OUTLINED_FUNCTION_20_10(&dword_221005000, v16, v17, "%{public}s%{public}s");
        OUTLINED_FUNCTION_30_9();
        OUTLINED_FUNCTION_2_4();
      }
      OUTLINED_FUNCTION_18_10();
      OUTLINED_FUNCTION_15_11();

      v28 = *(_QWORD *)(v0 + 1040);
      v29 = *(_QWORD *)(v0 + 936);
      v30 = *(_QWORD *)(v0 + 792);
      v31 = *(_QWORD *)(v0 + 784);
      sub_2210ABD14(*(_QWORD *)(v0 + 1072), (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
      v32 = *(int **)(v31 + *(int *)(v29 + 24));
      __swift_storeEnumTagSinglePayload(v28, 1, 1, v30);
      OUTLINED_FUNCTION_28_11();
      v38 = (uint64_t (*)(uint64_t))((char *)v32 + *v32);
      v33 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1216) = v33;
      *v33 = v0;
      v33[1] = sub_2210A9F50;
      v34 = OUTLINED_FUNCTION_87_1(*(_QWORD *)(v0 + 1040));
      return v38(v34);
    }
    OUTLINED_FUNCTION_71_1(*(_QWORD *)(v0 + 1128));
  }
  v18 = *(_QWORD *)(v0 + 1000);
  v19 = *(_QWORD *)(v0 + 984);
  v20 = *(_QWORD *)(v0 + 960);
  v21 = *(_QWORD *)(v0 + 944);
  v37 = *(_QWORD *)(v0 + 864);
  v22 = *(_QWORD *)(v0 + 784);
  v35 = *(_QWORD *)(v0 + 992);
  v36 = v22;
  sub_2212F4C74();
  sub_221036990(v22, v20, (uint64_t (*)(_QWORD))type metadata accessor for CurrentEntitlementViewModifier);
  v23 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v24 = swift_allocObject();
  sub_2210ABB38(v20, v24 + v23);
  sub_221024548(&qword_255659D20, &qword_255659CF0);
  sub_2212F5B74();
  sub_2212F5B44();
  sub_2212F5670();
  sub_2212F5B38();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v18, v19);
  sub_2212F5B68();
  v25 = swift_task_alloc();
  *(_QWORD *)(v0 + 1224) = v25;
  *(_QWORD *)(v25 + 16) = v36;
  swift_asyncLet_begin();
  OUTLINED_FUNCTION_56_2(v37, 1);
  if (qword_255655D28 != -1)
    swift_once();
  v26 = (_QWORD *)(*(_QWORD *)(v0 + 784) + *(int *)(v0 + 1360));
  *(_QWORD *)(v0 + 1232) = qword_25568D000;
  *(_QWORD *)(v0 + 1240) = *v26;
  *(_QWORD *)(v0 + 1248) = v26[1];
  return swift_task_switch();
}

uint64_t sub_2210A9F50()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_8_11();
  v1 = OUTLINED_FUNCTION_6_13(v0);
  OUTLINED_FUNCTION_10_16(v1, &qword_255659B68);
  OUTLINED_FUNCTION_33_5();
  return OUTLINED_FUNCTION_0_20();
}

uint64_t sub_2210A9F94()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  swift_release();
  v1 = OUTLINED_FUNCTION_102_0();
  v2(v1);
  OUTLINED_FUNCTION_2_15();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_16_11(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2210AA0A4()
{
  uint64_t v0;

  sub_22115C864(*(_QWORD *)(v0 + 1240), *(_QWORD *)(v0 + 856));
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210AA0E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t EnumTagSinglePayload;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v9)(void);

  v1 = v0[107];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v0[109]);
  v3 = v0[130];
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_59_2(EnumTagSinglePayload, &dword_255659CE0);
    swift_storeEnumTagMultiPayload();
    v4 = (_QWORD *)OUTLINED_FUNCTION_51_0();
    v0[157] = v4;
    v5 = sub_2210AA1FC;
  }
  else
  {
    v6 = v0[114];
    sub_221036890(v1, v6, &qword_255659B70);
    sub_221036BA4(v6, v3, &qword_255659B70);
    OUTLINED_FUNCTION_28_11();
    v4 = (_QWORD *)OUTLINED_FUNCTION_51_0();
    v0[158] = v4;
    v5 = sub_2210AA268;
  }
  *v4 = v0;
  v4[1] = v5;
  v7 = OUTLINED_FUNCTION_87_1(v0[130]);
  return OUTLINED_FUNCTION_40_2(v7, v9);
}

uint64_t sub_2210AA1FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = OUTLINED_FUNCTION_6_13(&v3);
  OUTLINED_FUNCTION_59_2(v1, &qword_255659B68);
  return swift_asyncLet_get();
}

uint64_t sub_2210AA268()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_8_11();
  v1 = OUTLINED_FUNCTION_6_13(v0);
  OUTLINED_FUNCTION_10_16(v1, &qword_255659B68);
  OUTLINED_FUNCTION_33_5();
  return OUTLINED_FUNCTION_0_20();
}

uint64_t sub_2210AA2AC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v1 = v0[146];
  v2 = (void *)v0[133];
  v3 = v0[114];
  v4 = v0[109];
  v5 = v0[108];
  sub_2210ABD44(v5, &dword_255659CE0);
  sub_221036BA4(v3, v5, &qword_255659B70);
  __swift_storeEnumTagSinglePayload(v5, 0, 1, v4);
  OUTLINED_FUNCTION_90_1(v1, v6, (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
  sub_2212F5964();
  swift_bridgeObjectRelease();
  v24 = 0xD00000000000002FLL;
  v25 = 0x80000002212F8630;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_58_2();
  OUTLINED_FUNCTION_79_0();
  swift_bridgeObjectRetain();
  sub_2212F57CC();
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_27_7();
  v7 = OUTLINED_FUNCTION_94_1();
  if (OUTLINED_FUNCTION_68_2(v7))
  {
    OUTLINED_FUNCTION_6_4();
    OUTLINED_FUNCTION_36_5();
    MEMORY[0xD00000000000002F] = 136446466;
    OUTLINED_FUNCTION_73_2();
    sub_2212F540C();
    v8 = OUTLINED_FUNCTION_54_1();
    v0[94] = OUTLINED_FUNCTION_5_11(v8, v9, v10, v11, v12, v13, v14, v15, v21, (uint64_t)(v0 + 94), (uint64_t)(v0 + 95), 0xD00000000000002FLL, v23, v24, v25);
    sub_2212F5898();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_44_2();
    OUTLINED_FUNCTION_19_13();
    v0[95] = OUTLINED_FUNCTION_80_0(v22, v16, &v23);
    OUTLINED_FUNCTION_36_3();
    OUTLINED_FUNCTION_15_11();
    OUTLINED_FUNCTION_20_10(&dword_221005000, v17, v18, "%{public}s%{public}s");
    OUTLINED_FUNCTION_30_9();
    OUTLINED_FUNCTION_2_4();
  }
  OUTLINED_FUNCTION_18_10();
  OUTLINED_FUNCTION_15_11();

  sub_2210ABD14(v0[133], (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
  OUTLINED_FUNCTION_59_2(v19, &qword_255659B70);
  return swift_asyncLet_get();
}

uint64_t sub_2210AA508()
{
  return swift_task_switch();
}

uint64_t sub_2210AA51C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;

  v3 = v2[113];
  v4 = v2[108];
  OUTLINED_FUNCTION_57_2(v2[115], a2, &qword_255659B70);
  if ((sub_2210AB364(v4, v3) & 1) != 0)
  {
    OUTLINED_FUNCTION_99_1();
    OUTLINED_FUNCTION_57_2(v5, v6, &qword_255659B70);
    OUTLINED_FUNCTION_28_11();
    v7 = (_QWORD *)OUTLINED_FUNCTION_50_1();
    v2[159] = (uint64_t)v7;
    v8 = OUTLINED_FUNCTION_75_2(v7, (uint64_t)sub_2210AA60C);
    return OUTLINED_FUNCTION_12_18(v8, v9);
  }
  else
  {
    sub_2210ABD44(v2[108], &dword_255659CE0);
    OUTLINED_FUNCTION_46_0();
    v11 = OUTLINED_FUNCTION_61_0();
    sub_221036BA4(v11, v4, &qword_255659B70);
    v12 = OUTLINED_FUNCTION_56_2(v4, 0);
    OUTLINED_FUNCTION_62_1(v12, qword_25568D000);
    return OUTLINED_FUNCTION_11_15();
  }
}

uint64_t sub_2210AA60C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_8_11();
  v1 = OUTLINED_FUNCTION_6_13(v0);
  OUTLINED_FUNCTION_10_16(v1, &qword_255659B68);
  OUTLINED_FUNCTION_33_5();
  return OUTLINED_FUNCTION_0_20();
}

uint64_t sub_2210AA650()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumTagSinglePayload;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v2 = v0[109];
  v3 = v0[108];
  v4 = v0[106];
  v5 = v0[104];
  v6 = v0[103];
  OUTLINED_FUNCTION_55_2(v4, 1);
  v7 = v5 + *(int *)(v6 + 48);
  sub_221036BA4(v3, v5, &dword_255659CE0);
  sub_221036BA4(v4, v7, &dword_255659CE0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v5, 1, v2);
  v9 = v0[109];
  if (EnumTagSinglePayload == 1)
  {
    sub_2210ABD44(v0[106], &dword_255659CE0);
    OUTLINED_FUNCTION_17_13();
    if (!v10)
      goto LABEL_8;
    goto LABEL_12;
  }
  sub_221036BA4(v0[104], v0[105], &dword_255659CE0);
  OUTLINED_FUNCTION_17_13();
  if (!v10)
  {
    v14 = v0[102];
    v15 = v0[99];
    v16 = v14 + *(int *)(v0[101] + 48);
    sub_221036BA4(v0[105], v14, &qword_255659B70);
    v17 = OUTLINED_FUNCTION_102_0();
    sub_221036890(v17, v18, &qword_255659B70);
    v19 = __swift_getEnumTagSinglePayload(v14, 1, v15);
    if (v19 == 1)
    {
      sub_2210ABD44(v0[106], &dword_255659CE0);
      if (OUTLINED_FUNCTION_76_1() == 1)
      {
        v9 = (unint64_t)&qword_255659B70;
        sub_2210ABD44(v0[102], &qword_255659B70);
        v20 = OUTLINED_FUNCTION_102_0();
        sub_2210ABD44(v20, v21);
LABEL_12:
        sub_2210ABD44(v0[104], &dword_255659CE0);
        goto LABEL_13;
      }
    }
    else
    {
      sub_221036BA4(v0[102], v0[112], &qword_255659B70);
      v22 = OUTLINED_FUNCTION_76_1();
      v23 = v0[112];
      v24 = v0[106];
      if (v22 != 1)
      {
        v46 = v0[105];
        v47 = v0[104];
        v48 = v0[102];
        v49 = v0[100];
        sub_221036890(v16, v49, &qword_255659088);
        sub_2212F4D10();
        sub_221023FE4(&qword_255659D40, (void (*)(uint64_t))MEMORY[0x24BDEA198]);
        v9 = sub_2212F4D4C();
        sub_2210ABD44(v49, &qword_255659088);
        v1 = &dword_255659CE0;
        sub_2210ABD44(v24, &dword_255659CE0);
        sub_2210ABD44(v23, &qword_255659088);
        sub_2210ABD44(v48, &qword_255659B70);
        sub_2210ABD44(v46, &qword_255659B70);
        sub_2210ABD44(v47, &dword_255659CE0);
        if ((v9 & 1) == 0)
          goto LABEL_18;
LABEL_13:
        sub_2210ABD44(v0[108], &dword_255659CE0);
        OUTLINED_FUNCTION_46_0();
        goto LABEL_21;
      }
      sub_2210ABD44(v0[106], &dword_255659CE0);
      OUTLINED_FUNCTION_10_16(v25, &qword_255659088);
    }
    v26 = v0[104];
    sub_2210ABD44(v0[102], &qword_255659CD0);
    OUTLINED_FUNCTION_10_16(v27, &qword_255659B70);
    v13 = &dword_255659CE0;
    v12 = v26;
    goto LABEL_17;
  }
  sub_2210ABD44(v0[106], &dword_255659CE0);
  OUTLINED_FUNCTION_10_16(v11, &qword_255659B70);
LABEL_8:
  v12 = v0[104];
  v13 = (uint64_t *)&unk_255659CD8;
LABEL_17:
  sub_2210ABD44(v12, v13);
LABEL_18:
  OUTLINED_FUNCTION_90_1(v0[146], v28, (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
  v53 = 0;
  v54 = 0xE000000000000000;
  sub_2212F5964();
  sub_2212F540C();
  OUTLINED_FUNCTION_93_1();
  OUTLINED_FUNCTION_58_2();
  OUTLINED_FUNCTION_79_0();
  sub_2212F540C();
  v9 = 0xE000000000000000;
  v29 = sub_2212F57CC();
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_27_7();
  v30 = OUTLINED_FUNCTION_94_1();
  if (os_log_type_enabled(v30, v29))
  {
    OUTLINED_FUNCTION_6_4();
    OUTLINED_FUNCTION_36_5();
    *(_DWORD *)v1 = 136446466;
    OUTLINED_FUNCTION_73_2();
    OUTLINED_FUNCTION_100_1();
    v31 = OUTLINED_FUNCTION_54_1();
    v0[87] = OUTLINED_FUNCTION_5_11(v31, v32, v33, v34, v35, v36, v37, v38, v50, (uint64_t)(v0 + 87), 0, (uint64_t)(v0 + 93), v52, v53, v54);
    sub_2212F5898();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_44_2();
    OUTLINED_FUNCTION_19_13();
    v0[93] = OUTLINED_FUNCTION_80_0(v51, v39, &v52);
    OUTLINED_FUNCTION_36_3();
    OUTLINED_FUNCTION_15_11();
    OUTLINED_FUNCTION_20_10(&dword_221005000, v40, v41, "%{public}s%{public}s");
    OUTLINED_FUNCTION_30_9();
    OUTLINED_FUNCTION_2_4();
  }
  OUTLINED_FUNCTION_18_10();
  OUTLINED_FUNCTION_15_11();

  sub_2210ABD14(v0[132], (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
  OUTLINED_FUNCTION_10_16(v42, &dword_255659CE0);
LABEL_21:
  v43 = OUTLINED_FUNCTION_61_0();
  sub_221036BA4(v43, v9, &qword_255659B70);
  v44 = OUTLINED_FUNCTION_56_2(v9, 0);
  OUTLINED_FUNCTION_62_1(v44, qword_25568D000);
  return swift_task_switch();
}

uint64_t sub_2210AAB74()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_22115C938(v0[161], v0[162], v0[113]);
  v1 = (_QWORD *)OUTLINED_FUNCTION_51_0();
  v0[163] = (uint64_t)v1;
  v2 = OUTLINED_FUNCTION_66_2(v1);
  return OUTLINED_FUNCTION_41_2(v2, v3);
}

uint64_t sub_2210AABD0()
{
  void *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_8_11();
  OUTLINED_FUNCTION_6_13(v1);
  if (v0)

  OUTLINED_FUNCTION_33_5();
  return OUTLINED_FUNCTION_0_20();
}

uint64_t sub_2210AAC20()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t EnumTagSinglePayload;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;

  v1 = v0[111];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v0[99]);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    v3 = v0[113];
    v4 = v0[108];
    sub_2210ABD44(v1, &qword_255659B70);
    sub_2210ABD44(v3, &qword_255659B70);
    sub_2210ABD44(v4, &dword_255659CE0);
    return swift_asyncLet_finish();
  }
  else
  {
    OUTLINED_FUNCTION_10_16(EnumTagSinglePayload, &qword_255659B70);
    v6 = (_QWORD *)swift_task_alloc();
    v0[164] = (uint64_t)v6;
    *v6 = v0;
    v6[1] = sub_2210AAD28;
    return OUTLINED_FUNCTION_52_2();
  }
}

uint64_t sub_2210AAD28()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_6_13(&v2);
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210AAD68()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1[98];
  if ((sub_2210AB364(v1[108], v1[110]) & 1) != 0)
  {
    OUTLINED_FUNCTION_99_1();
    OUTLINED_FUNCTION_57_2(v3, v4, &qword_255659B70);
    OUTLINED_FUNCTION_28_11();
    v5 = (_QWORD *)OUTLINED_FUNCTION_50_1();
    v1[165] = v5;
    v6 = OUTLINED_FUNCTION_75_2(v5, (uint64_t)sub_2210AAE34);
    return OUTLINED_FUNCTION_12_18(v6, v7);
  }
  else
  {
    OUTLINED_FUNCTION_60_2();
    OUTLINED_FUNCTION_59_2(v9, &dword_255659CE0);
    OUTLINED_FUNCTION_57_2(v2, v10, &qword_255659B70);
    v11 = OUTLINED_FUNCTION_55_2(v0, 0);
    OUTLINED_FUNCTION_67_2(v11, qword_25568D000);
    return OUTLINED_FUNCTION_11_15();
  }
}

uint64_t sub_2210AAE34()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_8_11();
  v1 = OUTLINED_FUNCTION_6_13(v0);
  OUTLINED_FUNCTION_10_16(v1, &qword_255659B68);
  OUTLINED_FUNCTION_33_5();
  return OUTLINED_FUNCTION_0_20();
}

uint64_t sub_2210AAE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_60_2();
  OUTLINED_FUNCTION_59_2(v2, &dword_255659CE0);
  OUTLINED_FUNCTION_57_2(v0, v3, &qword_255659B70);
  v4 = OUTLINED_FUNCTION_55_2(v1, 0);
  OUTLINED_FUNCTION_67_2(v4, qword_25568D000);
  return swift_task_switch();
}

uint64_t sub_2210AAEE8()
{
  uint64_t *v0;

  sub_22115C938(v0[167], v0[168], v0[110]);
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210AAF28()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_2210ABD44(*(_QWORD *)(v0 + 880), &qword_255659B70);
  v1 = (_QWORD *)OUTLINED_FUNCTION_51_0();
  *(_QWORD *)(v0 + 1352) = v1;
  v2 = OUTLINED_FUNCTION_66_2(v1);
  return OUTLINED_FUNCTION_41_2(v2, v3);
}

uint64_t sub_2210AAF80()
{
  void *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_8_11();
  OUTLINED_FUNCTION_6_13(v1);
  if (v0)

  OUTLINED_FUNCTION_33_5();
  return OUTLINED_FUNCTION_0_20();
}

uint64_t sub_2210AAFD0()
{
  return swift_task_switch();
}

uint64_t sub_2210AAFE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1016);
  swift_release();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_91_1(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_2_15();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_16_11(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2210AB0F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_85_0(v3[111], a2, a3, v3[99]);
  v4 = v3[113];
  v5 = v3[108];
  sub_2210ABD44(v3[111], &qword_255659B70);
  sub_2210ABD44(v4, &qword_255659B70);
  sub_2210ABD44(v5, &dword_255659CE0);
  return swift_asyncLet_finish();
}

uint64_t sub_2210AB18C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_2212F4D10();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2210AB1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659088);
  sub_2212F4D40();
  v3 = sub_2212F4D04();
  v5 = v4;
  OUTLINED_FUNCTION_98_0(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v6 = (_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_42_4() + 20));
  if (v3 == *v6 && v5 == v6[1])
    v8 = 1;
  else
    v8 = sub_2212F5CDC();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_58_1();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v8 & 1);
}

uint64_t sub_2210AB2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_2210AB2BC()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_42_4();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_2210AB324;
  return OUTLINED_FUNCTION_52_2();
}

uint64_t sub_2210AB324()
{
  uint64_t (*v0)(void);

  swift_task_dealloc();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
  return OUTLINED_FUNCTION_42_2(v0);
}

uint64_t sub_2210AB364(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int EnumCaseMultiPayload;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  char *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;

  v83 = (char *)a2;
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659CD0);
  MEMORY[0x24BDAC7A8](v82);
  v4 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659D50);
  MEMORY[0x24BDAC7A8](v76);
  v78 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_2212F4D10();
  v77 = *(_QWORD *)(v79 - 8);
  v6 = MEMORY[0x24BDAC7A8](v79);
  v74 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v73 = (char *)&v70 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659088);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v75 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v72 = (uint64_t)&v70 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v71 = (uint64_t)&v70 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v80 = (uint64_t)&v70 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v81 = (uint64_t)&v70 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&dword_255659CE0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659B70);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v70 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)&v70 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v70 - v32;
  sub_221036BA4(a1, (uint64_t)v21, &dword_255659CE0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22) == 1)
  {
    v34 = &dword_255659CE0;
    v35 = (uint64_t)v21;
LABEL_21:
    sub_2210ABD44(v35, v34);
    v39 = 1;
    return v39 & 1;
  }
  sub_221036890((uint64_t)v21, (uint64_t)v33, &qword_255659B70);
  sub_221036BA4((uint64_t)v33, (uint64_t)v31, &qword_255659B70);
  if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v9) == 1)
  {
    v28 = v31;
    v36 = (uint64_t)v83;
    goto LABEL_7;
  }
  v37 = v81;
  sub_221036890((uint64_t)v31, v81, &qword_255659088);
  v36 = (uint64_t)v83;
  sub_221036BA4((uint64_t)v83, (uint64_t)v28, &qword_255659B70);
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v9) != 1)
  {
    v83 = v33;
    v40 = v80;
    sub_221036890((uint64_t)v28, v80, &qword_255659088);
    v41 = v78;
    v42 = v78 + *(int *)(v76 + 48);
    sub_221036BA4(v37, v78, &qword_255659088);
    sub_221036BA4(v40, v42, &qword_255659088);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v43 = v71;
      sub_221036BA4(v41, v71, &qword_255659088);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v45 = v79;
      v46 = v77;
      if (EnumCaseMultiPayload == 1)
      {
        v47 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 32);
        v48 = v73;
        v47(v73, v43, v79);
        v49 = v74;
        v47(v74, v42, v45);
LABEL_24:
        sub_2210ABD44(v41, &qword_255659088);
        v63 = sub_2212F4CE0();
        v65 = v64;
        v66 = *(void (**)(char *, uint64_t))(v46 + 8);
        v66(v48, v45);
        v67 = sub_2212F4CE0();
        v69 = v68;
        v66(v49, v45);
        LOBYTE(v66) = MEMORY[0x2276680EC](v63, v65, v67, v69);
        sub_221054AE8(v67, v69);
        sub_221054AE8(v63, v65);
        sub_2210ABD44(v80, &qword_255659088);
        sub_2210ABD44(v37, &qword_255659088);
        sub_2210ABD44((uint64_t)v83, &qword_255659B70);
        v39 = v66 ^ 1;
        return v39 & 1;
      }
      sub_2210ABD44(v80, &qword_255659088);
      sub_2210ABD44(v37, &qword_255659088);
      sub_2210ABD44((uint64_t)v83, &qword_255659B70);
    }
    else
    {
      v52 = v72;
      sub_221036BA4(v41, v72, &qword_255659088);
      v53 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255659D58) + 48);
      v54 = v52 + v53;
      v55 = swift_getEnumCaseMultiPayload();
      v45 = v79;
      v46 = v77;
      if (v55 != 1)
      {
        v58 = v42 + v53;
        v59 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 32);
        v60 = v52;
        v48 = v73;
        v59(v73, v60, v79);
        v49 = v74;
        v59(v74, v42, v45);
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659D60);
        v62 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8);
        v62(v58, v61);
        v62(v54, v61);
        goto LABEL_24;
      }
      sub_2210ABD44(v80, &qword_255659088);
      sub_2210ABD44(v37, &qword_255659088);
      sub_2210ABD44((uint64_t)v83, &qword_255659B70);
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659D60);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v52 + v53, v56);
      v43 = v52;
    }
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v43, v45);
    v34 = &qword_255659D50;
    v35 = v41;
    goto LABEL_21;
  }
  sub_2210ABD44(v37, &qword_255659088);
LABEL_7:
  sub_2210ABD44((uint64_t)v28, &qword_255659B70);
  v38 = (uint64_t)&v4[*(int *)(v82 + 48)];
  sub_221036BA4((uint64_t)v33, (uint64_t)v4, &qword_255659B70);
  sub_221036BA4(v36, v38, &qword_255659B70);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v9) != 1)
  {
    sub_221036BA4((uint64_t)v4, (uint64_t)v25, &qword_255659B70);
    if (__swift_getEnumTagSinglePayload(v38, 1, v9) != 1)
    {
      v50 = v75;
      sub_221036890(v38, v75, &qword_255659088);
      sub_221023FE4(&qword_255659D40, (void (*)(uint64_t))MEMORY[0x24BDEA198]);
      v51 = sub_2212F4D4C();
      sub_2210ABD44(v50, &qword_255659088);
      sub_2210ABD44((uint64_t)v33, &qword_255659B70);
      sub_2210ABD44((uint64_t)v25, &qword_255659088);
      sub_2210ABD44((uint64_t)v4, &qword_255659B70);
      v39 = v51 ^ 1;
      return v39 & 1;
    }
    sub_2210ABD44((uint64_t)v33, &qword_255659B70);
    sub_2210ABD44((uint64_t)v25, &qword_255659088);
LABEL_12:
    v34 = &qword_255659CD0;
    v35 = (uint64_t)v4;
    goto LABEL_21;
  }
  sub_2210ABD44((uint64_t)v33, &qword_255659B70);
  if (__swift_getEnumTagSinglePayload(v38, 1, v9) != 1)
    goto LABEL_12;
  sub_2210ABD44((uint64_t)v4, &qword_255659B70);
  v39 = 0;
  return v39 & 1;
}

uint64_t sub_2210ABB38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CurrentEntitlementViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2210ABB7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_42_4();
  OUTLINED_FUNCTION_74_2();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_22108434C;
  return sub_2210A95BC(v0);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_42_4() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = OUTLINED_FUNCTION_72_0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2210ABC64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  OUTLINED_FUNCTION_42_4();
  OUTLINED_FUNCTION_74_2();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_221084868;
  return sub_2210AB18C(a1, v1);
}

uint64_t sub_2210ABCBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_221084A38;
  return sub_2210AB2A4(a1, v4);
}

void sub_2210ABD14(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  OUTLINED_FUNCTION_53_1(*(_QWORD *)(v2 - 8));
  OUTLINED_FUNCTION_6_0();
}

void sub_2210ABD44(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_53_1(*(_QWORD *)(v2 - 8));
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_2210ABD78()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255659D78;
  if (!qword_255659D78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255659CB8);
    sub_221024548(&qword_255659D80, &qword_255659CC8);
    v3 = v2;
    sub_221024548(qword_255659D88, &qword_255659CC0);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255659D78);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_20()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_2_15()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[102];
  *(_QWORD *)(v1 - 96) = v0[104];
  *(_QWORD *)(v1 - 88) = v2;
  *(_QWORD *)(v1 - 80) = v0[100];
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_3_13(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_4_17()
{
  return sub_2212F55E0();
}

uint64_t OUTLINED_FUNCTION_5_13()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_6_13@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_8_11()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void OUTLINED_FUNCTION_10_16(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2210ABD44(v2, a2);
}

uint64_t OUTLINED_FUNCTION_11_15()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_12_18(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_15_11()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_16_11(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_17_13()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_19_13()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2082;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_20_10(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0x16u);
}

uint64_t OUTLINED_FUNCTION_22_5()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_24_11@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
}

uint64_t OUTLINED_FUNCTION_25_10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_27_10()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_28_11()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_29_8()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_30_9()
{
  return swift_arrayDestroy();
}

_QWORD *OUTLINED_FUNCTION_31_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v4 + 48);
  v6 = *(_QWORD **)(v4 + 16);
  *v6 = **(_QWORD **)(v4 + 96);
  type metadata accessor for EntitlementTaskState(0, v5, a3, a4);
  return v6;
}

uint64_t OUTLINED_FUNCTION_32_5()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[11] + 16))(v0[12], v0[7], v0[5]);
}

uint64_t OUTLINED_FUNCTION_36_5()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_37_4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_38_4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_39_4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_40_2(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_42_4()
{
  return type metadata accessor for CurrentEntitlementViewModifier();
}

uint64_t OUTLINED_FUNCTION_43_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for EntitlementTaskState(0, v5, a3, a4);
  return v4;
}

uint64_t OUTLINED_FUNCTION_44_3()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[9] + 32))(v0[10], v0[12], v0[8]);
}

uint64_t OUTLINED_FUNCTION_50_1()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_51_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_52_2()
{
  return sub_2212F4CD4();
}

uint64_t OUTLINED_FUNCTION_53_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_54_1()
{
  return sub_2212F540C();
}

uint64_t OUTLINED_FUNCTION_55_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_56_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_57_2(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_221036BA4(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_58_2()
{
  return sub_2212F540C();
}

void OUTLINED_FUNCTION_59_2(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2210ABD44(v2, a2);
}

uint64_t OUTLINED_FUNCTION_61_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 904);
}

void OUTLINED_FUNCTION_62_1(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[160] = a2;
  v3[161] = *v2;
  v3[162] = v2[1];
}

uint64_t OUTLINED_FUNCTION_63_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v4 + 16);
  type metadata accessor for EntitlementTaskState(0, *(_QWORD *)(v4 + 48), a3, a4);
  return v5;
}

uint64_t OUTLINED_FUNCTION_64_2(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 88);
}

uint64_t OUTLINED_FUNCTION_65_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 88);
}

uint64_t OUTLINED_FUNCTION_66_2(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 888);
}

void OUTLINED_FUNCTION_67_2(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v2[166] = a2;
  v2[167] = *v3;
  v2[168] = v3[1];
}

BOOL OUTLINED_FUNCTION_68_2(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t OUTLINED_FUNCTION_69_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = a1;
  return sub_2212F4FBC();
}

uint64_t OUTLINED_FUNCTION_71_1@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t OUTLINED_FUNCTION_72_0()
{
  return sub_2212F5640();
}

uint64_t OUTLINED_FUNCTION_75_2@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 1040);
}

uint64_t OUTLINED_FUNCTION_76_1()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_79_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_80_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_221115C44(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_81_0()
{
  return sub_2212F5B50();
}

uint64_t OUTLINED_FUNCTION_82_1()
{
  return sub_2212F5B50();
}

uint64_t OUTLINED_FUNCTION_83_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  return a2(a1, 1);
}

uint64_t OUTLINED_FUNCTION_85_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_87_1@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_88_1()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 72))();
}

void OUTLINED_FUNCTION_90_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_221036990(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_91_1@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_93_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_94_1()
{
  return sub_2212F2C1C();
}

uint64_t OUTLINED_FUNCTION_96_1()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_97_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_98_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_100_1()
{
  return sub_2212F540C();
}

uint64_t OUTLINED_FUNCTION_101_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t OUTLINED_FUNCTION_102_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_103_0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_2210AC410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x22766BAC4](&unk_221301BC8, a1, &v4);
}

double sub_2210AC448@<D0>(_OWORD *a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 1;
  *a1 = xmmword_2212FF8E0;
  return result;
}

void sub_2210AC45C(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_2210AC46C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = *(_QWORD *)(a2 + 16);
  v19 = *(_QWORD *)(v20 - 8);
  v3 = MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2212F2DF0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212F351C();
  v15 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
  v16 = *MEMORY[0x24BDEB3F0];
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v15 == v16)
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v21 + *(int *)(a2 + 52), v7);
  else
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v5, v21, v20);
  return sub_2212F2F70();
}

uint64_t sub_2210AC5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_2210AC46C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2210AC610@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  uint64_t v13;

  v3 = v2;
  v6 = sub_2212F2DF0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212F351C();
  v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  v11 = *MEMORY[0x24BDEB3F0];
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v10 == v11)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v3 + *(int *)(a1 + 36));
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v3);
}

uint64_t sub_2210AC700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;

  if ((sub_2212F52D4() & 1) == 0)
    return 0;
  type metadata accessor for ColorSchemeAdaptiveShapeStyleSameType(0, a3, a5, v7);
  return sub_2212F52D4() & 1;
}

uint64_t sub_2210AC778()
{
  sub_2212F5238();
  return sub_2212F5238();
}

uint64_t sub_2210AC7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2210AC700(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8), *(_QWORD *)(a3 + 24));
}

void sub_2210AC7E4(uint64_t a1, uint64_t a2)
{
  sub_2210ACB48(a1, *(_QWORD *)(a2 - 8), (void (*)(_BYTE *, uint64_t, uint64_t))sub_2210AC778);
}

uint64_t sub_2210AC804()
{
  return sub_2210AC778();
}

void sub_2210AC80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210ACBC4(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))sub_2210AC778);
}

float sub_2210AC818(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  float v15;

  v2 = sub_2212F2DF0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = sub_2212F3774();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  sub_2212F351C();
  v13 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v13 == *MEMORY[0x24BDEB400])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v8, *MEMORY[0x24BDEB3F0], v2);
  }
  else if (v13 == *MEMORY[0x24BDEB3F0])
  {
    (*(void (**)(char *))(v3 + 104))(v8);
  }
  else
  {
    sub_2212F351C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  sub_2212F3528();
  sub_2212F2D78();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v15;
}

uint64_t sub_2210AC9C0()
{
  return sub_2212F52D4() & 1;
}

uint64_t sub_2210AC9E4()
{
  return sub_2212F5238();
}

void sub_2210AC9EC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  int v4;
  int v5;

  *(float *)a2 = sub_2210AC818(a1);
  *(_DWORD *)(a2 + 4) = v3;
  *(_DWORD *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 12) = v5;
}

uint64_t sub_2210ACA14()
{
  return sub_2210AC9C0();
}

void sub_2210ACA24(uint64_t a1, uint64_t a2)
{
  sub_2210ACB48(a1, *(_QWORD *)(a2 - 8), (void (*)(_BYTE *, uint64_t, uint64_t))sub_2210AC9E4);
}

uint64_t sub_2210ACA44()
{
  return sub_2210AC9E4();
}

void sub_2210ACA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210ACBC4(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))sub_2210AC9E4);
}

uint64_t sub_2210ACA58()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v3 = (char *)&v5 - v2;
  sub_2212F2D78();
  swift_getAssociatedConformanceWitness();
  sub_2212F2D78();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
}

void sub_2210ACB48(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t))
{
  _BYTE v6[72];

  sub_2212F5DD8();
  a3(v6, a1, a2);
  sub_2212F5E08();
  OUTLINED_FUNCTION_0_21();
}

void sub_2210ACB98(uint64_t a1, uint64_t a2)
{
  sub_2210ACB48(a1, *(_QWORD *)(a2 - 8), (void (*)(_BYTE *, uint64_t, uint64_t))sub_2210ADDA8);
}

void sub_2210ACBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210ACBC4(a1, a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))sub_2210ADDA8);
}

void sub_2210ACBC4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t, uint64_t))
{
  uint64_t v6;
  _BYTE v7[72];

  v6 = *(_QWORD *)(a3 - 8);
  sub_2212F5DD8();
  a4(v7, a2, v6);
  sub_2212F5E08();
  OUTLINED_FUNCTION_0_21();
}

uint64_t sub_2210ACC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x22766BAC4](&unk_221301C48, a1, &v4);
}

uint64_t sub_2210ACC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x22766BAC4](&unk_221301CC8, a1, &v4);
}

uint64_t type metadata accessor for ColorSchemeAdaptiveShapeStyleSameType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ColorSchemeAdaptiveShapeStyleSameType);
}

uint64_t sub_2210ACC88()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2210ACD14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_DWORD *)(v6 + 80) | v8;
  v12 = v11;
  v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v5);
  }
  return v4;
}

uint64_t sub_2210ACDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_2210ACE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2210ACEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2210ACF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2210ACF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2210ACFEC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2210AD0C8 + 4 * byte_221301B50[v21 - 1]))();
}

void sub_2210AD13C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void type metadata accessor for ColorSchemeAdaptiveShapeStyle()
{
  JUMPOUT(0x22766BA10);
}

ValueMetadata *type metadata accessor for AlternateTertiaryBackgroundStyle()
{
  return &type metadata for AlternateTertiaryBackgroundStyle;
}

ValueMetadata *type metadata accessor for StoreKitPlaceholderStyle()
{
  return &type metadata for StoreKitPlaceholderStyle;
}

uint64_t sub_2210AD35C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2210AD3C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t *, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = ~(unint64_t)v8;
  v11 = v7 + v8;
  v12 = (v11 & v10) + v7;
  v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || v12 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    v17 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v17(a1, a2, *(_QWORD *)(a3 + 16));
    v17((uint64_t *)(((unint64_t)v4 + v11) & v10), (uint64_t *)(((unint64_t)a2 + v11) & v10), v5);
  }
  return v4;
}

uint64_t sub_2210AD47C(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v6(a1, v3);
  return v6((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
}

unint64_t sub_2210AD4E4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_2210AD550(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_2210AD5BC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_2210AD628(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

uint64_t sub_2210AD694(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2210AD754 + 4 * byte_221301B5E[(v8 - 1)]))();
}

void sub_2210AD7A0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for InvertedColorSchemeColor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InvertedColorSchemeColor);
}

uint64_t sub_2210AD974()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2210AD9E0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2210ADA90 + 4 * byte_221301B6C[(v8 - 1)]))();
}

void sub_2210ADADC(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        OUTLINED_FUNCTION_1_17();
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v15;
          *(_BYTE *)(a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      OUTLINED_FUNCTION_1_17();
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for ShapeStyleUnwrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ShapeStyleUnwrapper);
}

uint64_t sub_2210ADC80(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_2210ADC88()
{
  return MEMORY[0x24BDEBF68];
}

uint64_t sub_2210ADC94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210ADCA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210ADCB4()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_2210ADD3C()
{
  return sub_221018504(&qword_255658240, &qword_255658238, MEMORY[0x24BDF0F90]);
}

uint64_t sub_2210ADD68()
{
  return sub_221018504(&qword_255659F90, qword_255659F98, (uint64_t)&unk_221301E88);
}

void OUTLINED_FUNCTION_1_17()
{
  void *v0;
  size_t v1;

  bzero(v0, v1);
}

uint64_t sub_2210ADDD0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2210ADE80 + 4 * byte_221302020[(v8 - 1)]))();
}

void sub_2210ADECC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for ErrorView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ErrorView);
}

uint64_t sub_2210AE080()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210AE0B4@<X0>(uint64_t a1@<X0>, void (**a2)(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(char *);
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void (**v12)(uint64_t@<X8>);
  uint64_t v13;
  void (**v14)(uint64_t@<X8>);

  v14 = a2;
  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v5 = *(void (**)(char *))(v3 + 16);
  v5((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = OUTLINED_FUNCTION_2_16();
  v9 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v7 + 16) = v9;
  *(_QWORD *)(v7 + 24) = v8;
  OUTLINED_FUNCTION_4_18(v7 + v6);
  ((void (*)(char *, uint64_t, uint64_t))v5)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v13, a1);
  v10 = OUTLINED_FUNCTION_2_16();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  result = OUTLINED_FUNCTION_4_18(v10 + v6);
  v12 = v14;
  *v14 = sub_2210AE384;
  v12[1] = (void (*)(uint64_t@<X8>))v7;
  v12[2] = sub_2210AE41C;
  v12[3] = (void (*)(uint64_t@<X8>))v10;
  return result;
}

void sub_2210AE1BC(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t (*a5)(uint64_t, uint64_t)@<X6>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  char v20;
  id v21;
  __int128 v23[2];
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v12 + 16))((char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A020);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_22101E4FC(v23, (uint64_t)v25);
    v13 = v26;
    v14 = v27;
    v15 = __swift_project_boxed_opaque_existential_1(v25, v26);
    v16 = a2(v13, v14);
    if (v17)
    {
      *(_QWORD *)&v23[0] = v16;
      *((_QWORD *)&v23[0] + 1) = v17;
      sub_221036844();
      sub_2212F40F8();
      OUTLINED_FUNCTION_3_14();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      goto LABEL_9;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  else
  {
    v24 = 0;
    memset(v23, 0, sizeof(v23));
    sub_2210AE4C0((uint64_t)v23);
  }
  v15 = (_QWORD *)a5(a3, a4);
  a5 = v18;
  a3 = v19;
  LOBYTE(a4) = v20;
  if (qword_255655B20 != -1)
    swift_once();
  v21 = (id)qword_25568CA90;
  sub_2212F40D4();
  OUTLINED_FUNCTION_3_14();
LABEL_9:
  *(_QWORD *)a6 = v15;
  *(_QWORD *)(a6 + 8) = a5;
  *(_BYTE *)(a6 + 16) = a4 & 1;
  *(_QWORD *)(a6 + 24) = a3;
  OUTLINED_FUNCTION_17_5();
}

void sub_2210AE384(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_1_18(MEMORY[0x24BDCBE48], 19, 0x80000002212F86D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEEA50], a1);
}

uint64_t objectdestroyTm_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ErrorView(0, v5, *(_QWORD *)(v4 + 24), a4) - 8)
                          + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + ((v6 + 32) & ~v6), v5);
  return swift_deallocObject();
}

void sub_2210AE41C(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_1_18((uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDCBE40], 21, 0x80000002212F86B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEEAA0], a1);
}

void sub_2210AE444(uint64_t (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ErrorView(0, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), (uint64_t)a4)- 8)+ 80);
  sub_2210AE1BC(v5 + ((v11 + 32) & ~v11), a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_17_5();
}

uint64_t sub_2210AE4C0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A028);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2210AE504()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25565A030;
  if (!qword_25565A030)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_25565A038);
    result = MEMORY[0x22766BAC4](&unk_221311780, v1);
    atomic_store(result, (unint64_t *)&qword_25565A030);
  }
  return result;
}

void OUTLINED_FUNCTION_1_18(uint64_t (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  sub_2210AE444(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_2_16()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_4_18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

void sub_2210AE57C()
{
  qword_25568CEA0 = (uint64_t)&unk_24E6F0C68;
}

uint64_t sub_2210AE590()
{
  uint64_t *v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  void *v36;

  v1 = v0;
  v3 = *v0;
  v2 = v0[1];
  v4 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v5 = objc_msgSend(v4, sel_mainBundle);
  v6 = objc_msgSend(v5, sel_bundleIdentifier);

  if (v6)
  {
    v7 = sub_2212F537C();
    v9 = v8;

    sub_22108CF9C(v7, v9);
    v11 = v10;
    v13 = v12;
    swift_bridgeObjectRelease();
    v14 = sub_2212F2AA8();
    v16 = v15;
    sub_221054AE8(v11, v13);
  }
  else
  {
    v14 = 0;
    v16 = 0xE000000000000000;
  }
  v17 = sub_2212251F8(v14, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    return 0;
  sub_2212B4A98(v3, v2, *((unsigned __int16 *)v1 + 8) | (*((unsigned __int8 *)v1 + 18) << 16));
  if (!v18)
    return 0;
  v19 = v18;
  v20 = sub_2212B4D14();
  if (!v20)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  v21 = (uint64_t)v20;
  type metadata accessor for StoreViewPurchaseEvent();
  sub_2212B5338();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v23 = v22;
  sub_2212B5594();
  if (!v24)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v25 = v24;
  v26 = sub_2211D2818(v21, v19, 1);
  v27 = sub_2211D2818(v23, v26, 0);
  v28 = sub_2211D2818(v25, v27, 1);
  if (qword_255655C18 != -1)
    swift_once();
  v29 = *(_QWORD *)(qword_25568CEA0 + 16);
  if (v29)
  {
    v30 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      v32 = *(v30 - 1);
      v31 = *v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33 = sub_2211D351C(v32, v31);
      v35 = v34;
      swift_bridgeObjectRelease();
      if ((v35 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255657FF8);
        sub_2212F5AA8();
        swift_bridgeObjectRelease();
        v36 = *(void **)(*(_QWORD *)(v28 + 56) + 8 * v33);
        sub_221054AAC();
        sub_2212F5AC0();
        swift_bridgeObjectRelease();

      }
      swift_bridgeObjectRelease();
      v30 += 2;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
  }
  return v28;
}

uint64_t type metadata accessor for StoreViewPurchaseEvent()
{
  uint64_t result;

  result = qword_25565A098;
  if (!qword_25565A098)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_2210AE900(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _BYTE *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  int *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_DWORD *)(a1 + 55) = *(_DWORD *)((char *)a2 + 55);
    v8 = *(int *)(a3 + 24);
    v9 = (_BYTE *)(a1 + v8);
    v10 = (uint64_t)a2 + v8;
    *v9 = *((_BYTE *)a2 + v8);
    v9[1] = *((_BYTE *)a2 + v8 + 1);
    v11 = (int *)type metadata accessor for ProductViewBaseEvent(0);
    v12 = v11[6];
    v13 = &v9[v12];
    v14 = (const void *)(v10 + v12);
    v15 = sub_2212F4E00();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    v9[v11[7]] = *(_BYTE *)(v10 + v11[7]);
    v9[v11[8]] = *(_BYTE *)(v10 + v11[8]);
    v9[v11[9]] = *(_BYTE *)(v10 + v11[9]);
    v9[v11[10]] = *(_BYTE *)(v10 + v11[10]);
    v18 = *(int *)(a3 + 28);
    v19 = (char *)v4 + v18;
    v20 = (uint64_t)a2 + v18;
    v21 = sub_2212F2AF0();
    v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    v22(v19, v20, v21);
    v23 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
    v19[v23[5]] = *(_BYTE *)(v20 + v23[5]);
    v22(&v19[v23[6]], v20 + v23[6], v21);
    v19[v23[7]] = *(_BYTE *)(v20 + v23[7]);
    v24 = v23[8];
    v25 = &v19[v24];
    v26 = v20 + v24;
    v25[8] = *(_BYTE *)(v26 + 8);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v27 = v23[9];
    v28 = &v19[v27];
    v29 = (_QWORD *)(v20 + v27);
    v30 = v29[1];
    *(_QWORD *)v28 = *v29;
    *((_QWORD *)v28 + 1) = v30;
    v19[v23[10]] = *(_BYTE *)(v20 + v23[10]);
    v19[v23[11]] = *(_BYTE *)(v20 + v23[11]);
    v19[v23[12]] = *(_BYTE *)(v20 + v23[12]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2210AEB40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = v4 + *(int *)(type metadata accessor for ProductViewBaseEvent(0) + 24);
  v6 = sub_2212F4E00();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_2212F2AF0();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v10 = type metadata accessor for MintViewBasePurchaseEvent(0);
  v9(v7 + *(int *)(v10 + 24), v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2210AEC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _BYTE *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 55) = *(_DWORD *)(a2 + 55);
  v7 = *(int *)(a3 + 24);
  v8 = (_BYTE *)(a1 + v7);
  v9 = a2 + v7;
  *v8 = *(_BYTE *)(a2 + v7);
  v8[1] = *(_BYTE *)(a2 + v7 + 1);
  v10 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v11 = v10[6];
  v12 = &v8[v11];
  v13 = (const void *)(v9 + v11);
  v14 = sub_2212F4E00();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  v8[v10[7]] = *(_BYTE *)(v9 + v10[7]);
  v8[v10[8]] = *(_BYTE *)(v9 + v10[8]);
  v8[v10[9]] = *(_BYTE *)(v9 + v10[9]);
  v8[v10[10]] = *(_BYTE *)(v9 + v10[10]);
  v16 = *(int *)(a3 + 28);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_2212F2AF0();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  v21 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
  *(_BYTE *)(v17 + v21[5]) = *(_BYTE *)(v18 + v21[5]);
  v20(v17 + v21[6], v18 + v21[6], v19);
  *(_BYTE *)(v17 + v21[7]) = *(_BYTE *)(v18 + v21[7]);
  v22 = v21[8];
  v23 = v17 + v22;
  v24 = v18 + v22;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v25 = v21[9];
  v26 = (_QWORD *)(v17 + v25);
  v27 = (_QWORD *)(v18 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  *(_BYTE *)(v17 + v21[10]) = *(_BYTE *)(v18 + v21[10]);
  *(_BYTE *)(v17 + v21[11]) = *(_BYTE *)(v18 + v21[11]);
  *(_BYTE *)(v17 + v21[12]) = *(_BYTE *)(v18 + v21[12]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2210AEE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _BYTE *v12;
  const void *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v6 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v7 = *(int *)(a3 + 24);
  v8 = (_BYTE *)(a1 + v7);
  v9 = a2 + v7;
  *v8 = *(_BYTE *)(a2 + v7);
  v8[1] = *(_BYTE *)(a2 + v7 + 1);
  v10 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v11 = v10[6];
  v12 = &v8[v11];
  v13 = (const void *)(v9 + v11);
  v14 = sub_2212F4E00();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!EnumTagSinglePayload)
  {
    v17 = *(_QWORD *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(_BYTE *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
LABEL_7:
  v8[v10[7]] = *(_BYTE *)(v9 + v10[7]);
  v8[v10[8]] = *(_BYTE *)(v9 + v10[8]);
  v8[v10[9]] = *(_BYTE *)(v9 + v10[9]);
  v8[v10[10]] = *(_BYTE *)(v9 + v10[10]);
  v19 = *(int *)(a3 + 28);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_2212F2AF0();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24);
  v23(v20, v21, v22);
  v24 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
  *(_BYTE *)(v20 + v24[5]) = *(_BYTE *)(v21 + v24[5]);
  v23(v20 + v24[6], v21 + v24[6], v22);
  *(_BYTE *)(v20 + v24[7]) = *(_BYTE *)(v21 + v24[7]);
  v25 = v24[8];
  v26 = v20 + v25;
  v27 = v21 + v25;
  v28 = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = v28;
  v29 = v24[9];
  v30 = (_QWORD *)(v20 + v29);
  v31 = (_QWORD *)(v21 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + v24[10]) = *(_BYTE *)(v21 + v24[10]);
  *(_BYTE *)(v20 + v24[11]) = *(_BYTE *)(v21 + v24[11]);
  *(_BYTE *)(v20 + v24[12]) = *(_BYTE *)(v21 + v24[12]);
  return a1;
}

uint64_t sub_2210AF0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 55) = *(_DWORD *)(a2 + 55);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_WORD *)(a1 + v6) = *(_WORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v10 = v9[6];
  v11 = (void *)(v7 + v10);
  v12 = (const void *)(v8 + v10);
  v13 = sub_2212F4E00();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  *(_BYTE *)(v7 + v9[7]) = *(_BYTE *)(v8 + v9[7]);
  *(_BYTE *)(v7 + v9[8]) = *(_BYTE *)(v8 + v9[8]);
  *(_BYTE *)(v7 + v9[9]) = *(_BYTE *)(v8 + v9[9]);
  *(_BYTE *)(v7 + v9[10]) = *(_BYTE *)(v8 + v9[10]);
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_2212F2AF0();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v20 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
  *(_BYTE *)(v16 + v20[5]) = *(_BYTE *)(v17 + v20[5]);
  v19(v16 + v20[6], v17 + v20[6], v18);
  *(_BYTE *)(v16 + v20[7]) = *(_BYTE *)(v17 + v20[7]);
  v21 = v20[8];
  v22 = v16 + v21;
  v23 = v17 + v21;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_OWORD *)(v16 + v20[9]) = *(_OWORD *)(v17 + v20[9]);
  *(_BYTE *)(v16 + v20[10]) = *(_BYTE *)(v17 + v20[10]);
  *(_BYTE *)(v16 + v20[11]) = *(_BYTE *)(v17 + v20[11]);
  *(_BYTE *)(v16 + v20[12]) = *(_BYTE *)(v17 + v20[12]);
  return a1;
}

uint64_t sub_2210AF2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v11 = v10[6];
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_2212F4E00();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!EnumTagSinglePayload)
  {
    v17 = *(_QWORD *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
LABEL_7:
  *(_BYTE *)(v8 + v10[7]) = *(_BYTE *)(v9 + v10[7]);
  *(_BYTE *)(v8 + v10[8]) = *(_BYTE *)(v9 + v10[8]);
  *(_BYTE *)(v8 + v10[9]) = *(_BYTE *)(v9 + v10[9]);
  *(_BYTE *)(v8 + v10[10]) = *(_BYTE *)(v9 + v10[10]);
  v19 = *(int *)(a3 + 28);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_2212F2AF0();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40);
  v23(v20, v21, v22);
  v24 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
  *(_BYTE *)(v20 + v24[5]) = *(_BYTE *)(v21 + v24[5]);
  v23(v20 + v24[6], v21 + v24[6], v22);
  *(_BYTE *)(v20 + v24[7]) = *(_BYTE *)(v21 + v24[7]);
  v25 = v24[8];
  v26 = v20 + v25;
  v27 = v21 + v25;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v28 = v24[9];
  v29 = (_QWORD *)(v20 + v28);
  v30 = (uint64_t *)(v21 + v28);
  v32 = *v30;
  v31 = v30[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v20 + v24[10]) = *(_BYTE *)(v21 + v24[10]);
  *(_BYTE *)(v20 + v24[11]) = *(_BYTE *)(v21 + v24[11]);
  *(_BYTE *)(v20 + v24[12]) = *(_BYTE *)(v21 + v24[12]);
  return a1;
}

uint64_t sub_2210AF548()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210AF554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ProductViewBaseEvent(0);
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
    {
      v10 = v9;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = type metadata accessor for MintViewBasePurchaseEvent(0);
      v11 = *(int *)(a3 + 28);
    }
    return __swift_getEnumTagSinglePayload(a1 + v11, a2, v10);
  }
}

uint64_t sub_2210AF5F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210AF604(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = type metadata accessor for ProductViewBaseEvent(0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 24);
    }
    else
    {
      v9 = type metadata accessor for MintViewBasePurchaseEvent(0);
      v10 = *(int *)(a4 + 28);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2210AF698()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ProductViewBaseEvent(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MintViewBasePurchaseEvent(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for HighlightLabelOnHoverButton()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for HighlightLabelOnHoverButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for HighlightLabelOnHoverButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HighlightLabelOnHoverButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for HighlightLabelOnHoverButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HighlightLabelOnHoverButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HighlightLabelOnHoverButton()
{
  return &type metadata for HighlightLabelOnHoverButton;
}

uint64_t sub_2210AF954()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210AF964@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD v14[6];
  char v15;
  uint64_t v16;

  v14[1] = a1;
  v2 = sub_2212F3A38();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656A90);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1 + 8);
  v11 = *(_BYTE *)(v1 + 16);
  v12 = *(_QWORD *)(v1 + 24);
  v14[4] = *(_QWORD *)v1;
  v14[5] = v10;
  v15 = v11;
  v16 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2212F4794();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2212F34C8();
  sub_2210AFAF8();
  sub_2210AFB3C();
  sub_2212F41A0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_2210AFAE8@<X0>(uint64_t a1@<X8>)
{
  return sub_22123B28C(a1);
}

unint64_t sub_2210AFAF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255656AC0;
  if (!qword_255656AC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255656A90);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDF43B0], v1);
    atomic_store(result, (unint64_t *)&qword_255656AC0);
  }
  return result;
}

unint64_t sub_2210AFB3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255656728;
  if (!qword_255656728)
  {
    v1 = sub_2212F3A38();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEF4D0], v1);
    atomic_store(result, (unint64_t *)&qword_255656728);
  }
  return result;
}

uint64_t sub_2210AFB7C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255656A90);
  sub_2212F3A38();
  sub_2210AFAF8();
  sub_2210AFB3C();
  return swift_getOpaqueTypeConformance2();
}

void View.manageSubscriptionsSheet(isPresented:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_28_12();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v14[*(int *)(v12 + 20)];
  v16 = *MEMORY[0x24BDEA1F0];
  v17 = OUTLINED_FUNCTION_5_14();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  *(_QWORD *)v14 = a1;
  *((_QWORD *)v14 + 1) = a2;
  v14[16] = a3;
  v18 = &v14[*(int *)(v5 + 24)];
  *(_QWORD *)v18 = swift_getKeyPath();
  v18[8] = 0;
  v19 = &v14[*(int *)(v5 + 28)];
  *(_QWORD *)v19 = sub_2210AFE54;
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 0;
  swift_retain();
  swift_retain();
  MEMORY[0x227669B20](v14, a4, v5, a5);
  sub_2210AFE88((uint64_t)v14);
  OUTLINED_FUNCTION_19();
}

uint64_t type metadata accessor for ManageSubscriptionsSheetModifier()
{
  uint64_t result;

  result = qword_25565A1E8;
  if (!qword_25565A1E8)
    return swift_getSingletonMetadata();
  return result;
}

void View.manageSubscriptionsSheet(isPresented:subscriptionGroupID:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v23 = a7;
  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_28_12();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v17[*(int *)(v15 + 20)];
  *(_QWORD *)v18 = a4;
  *((_QWORD *)v18 + 1) = a5;
  v19 = *MEMORY[0x24BDEA1F8];
  v20 = OUTLINED_FUNCTION_5_14();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v18, v19, v20);
  *(_QWORD *)v17 = a1;
  *((_QWORD *)v17 + 1) = a2;
  v17[16] = a3;
  v21 = &v17[*(int *)(v7 + 24)];
  *(_QWORD *)v21 = swift_getKeyPath();
  v21[8] = 0;
  v22 = &v17[*(int *)(v7 + 28)];
  *(_QWORD *)v22 = sub_2210AFE54;
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 0;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  MEMORY[0x227669B20](v17, a6, v7, v23);
  sub_2210AFE88((uint64_t)v17);
  OUTLINED_FUNCTION_19();
}

uint64_t sub_2210AFE54()
{
  type metadata accessor for ManageSubscriptionsCoordinator();
  swift_allocObject();
  return sub_22109E7D8();
}

uint64_t sub_2210AFE88(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ManageSubscriptionsSheetModifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2210AFEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD v18[2];
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v5 = type metadata accessor for ManageSubscriptionsSheetModifier();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = *(_QWORD *)(v2 + 8);
  v9 = *(_BYTE *)(v2 + 16);
  v18[0] = *(_QWORD *)v2;
  v18[1] = v8;
  v19 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
  sub_2212F4884();
  v10 = v20;
  v11 = v21;
  v12 = v22;
  sub_2210B170C(v2, (uint64_t)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ManageSubscriptionsSheetModifier);
  v13 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = swift_allocObject();
  sub_2210B169C((uint64_t)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a2, a1, v15);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A230);
  v17 = a2 + *(int *)(result + 36);
  *(_QWORD *)v17 = v10;
  *(_QWORD *)(v17 + 8) = v11;
  *(_BYTE *)(v17 + 16) = v12;
  *(_QWORD *)(v17 + 24) = sub_2210B16E0;
  *(_QWORD *)(v17 + 32) = v14;
  return result;
}

uint64_t sub_2210B0004(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  id v14;
  char v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  char v34;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v4 = type metadata accessor for ManageSubscriptionsSheetModifier();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SKLogger();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = a2 + *(int *)(v4 + 24);
  v14 = *(id *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  sub_22109E3EC(*(id *)v13, v15);
  sub_221045554();
  v17 = v16;
  sub_221046ED4(v14, v15);
  if (v17)
  {
    v18 = objc_msgSend(v17, sel_scene);

    if (v18)
    {
      objc_opt_self();
      v19 = swift_dynamicCastObjCClass();
      if (v19)
      {
        if (v12)
        {
          v20 = v19;
          v21 = sub_2212F5640();
          v22 = v37;
          __swift_storeEnumTagSinglePayload(v37, 1, 1, v21);
          sub_2210B170C(a2, (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ManageSubscriptionsSheetModifier);
          v23 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
          v24 = swift_allocObject();
          sub_2210B169C((uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23);
          *(_QWORD *)(v24 + ((v6 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = v20;
          v25 = (_QWORD *)swift_allocObject();
          v25[2] = 0;
          v25[3] = 0;
          v25[4] = &unk_25565A240;
          v25[5] = v24;
          v26 = v18;
          sub_2211DFBD4(v22, (uint64_t)&unk_25565A250, (uint64_t)v25);

          swift_release();
          sub_2210B1B38(v22);
        }
        else
        {

        }
        return sub_2210B03D8(a2);
      }

    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565ABC0);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_2212FF8E0;
  *(_QWORD *)(v27 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v27 + 32) = 0xD000000000000051;
  *(_QWORD *)(v27 + 40) = 0x80000002212F8750;
  sub_2212F5DC0();
  swift_bridgeObjectRelease();
  if (qword_255655C08 != -1)
    swift_once();
  v28 = __swift_project_value_buffer(v9, (uint64_t)qword_25568CE88);
  sub_2210B170C(v28, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
  v29 = sub_2212F2C1C();
  v30 = sub_2212F2C34();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v11, v30);
  v31 = sub_2212F57E4();
  if (os_log_type_enabled(v29, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v32 = 0;
    _os_log_impl(&dword_221005000, v29, v31, "Attempting to present an manageSubscriptionsSheet without being in the hierarchy.", v32, 2u);
    MEMORY[0x22766BBA8](v32, -1, -1);
  }

  v33 = *(_QWORD *)(a2 + 8);
  v34 = *(_BYTE *)(a2 + 16);
  v39 = *(_QWORD *)a2;
  v40 = v33;
  v41 = v34;
  v38 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
  sub_2212F486C();
  return sub_2210B03D8(a2);
}

uint64_t sub_2210B03D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v2 = type metadata accessor for ManageSubscriptionsSheetModifier();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2212F5640();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
  sub_2210B170C(a1, (uint64_t)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for ManageSubscriptionsSheetModifier);
  v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = swift_allocObject();
  sub_2210B169C((uint64_t)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = &unk_25565A288;
  v11[5] = v10;
  sub_2211DFBD4((uint64_t)v7, (uint64_t)&unk_25565A290, (uint64_t)v11);
  swift_release();
  return sub_2210B1B38((uint64_t)v7);
}

uint64_t sub_2210B051C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[2] = a2;
  v3[3] = a3;
  v4 = sub_2212F4D58();
  v3[4] = v4;
  v3[5] = *(_QWORD *)(v4 - 8);
  v3[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2210B057C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = sub_2212F55F8();
  *(_QWORD *)(v0 + 64) = sub_2212F55EC();
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_33_6();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210B05D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = OUTLINED_FUNCTION_4_19();
  *(_QWORD *)(v0 + 72) = v1;
  *(_DWORD *)(v0 + 128) = *(_DWORD *)(v1 + 28);
  *(_QWORD *)(v0 + 80) = OUTLINED_FUNCTION_15_12();
  sub_221023FE4(&qword_25565A258, (void (*)(uint64_t))type metadata accessor for ManageSubscriptionsCoordinator);
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 96) = OUTLINED_FUNCTION_13_16();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210B0660()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 104) = MEMORY[0x22766BC44](*(_QWORD *)(v0 + 96) + 136);
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210B069C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 104);
  swift_release();

  if (v1)
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_3_15(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    *(_QWORD *)(v0 + 112) = sub_2212F55EC();
    OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_36_4();
    OUTLINED_FUNCTION_33_6();
    return OUTLINED_FUNCTION_3_12();
  }
}

uint64_t sub_2210B0710()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 120) = sub_2212F2E38();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210B0778()
{
  _QWORD *v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[5] + 16))(v0[6], v0[2] + *(int *)(v0[9] + 20), v0[4]);
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210B07C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_2210B0820(*(void **)(v0 + 24), *(_QWORD *)(v0 + 48));
  swift_release();
  OUTLINED_FUNCTION_91_1(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_15(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2210B0820(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v17;

  v5 = sub_2212F4D58();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2212F5640();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v2;
  *(_QWORD *)(v13 + 24) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = &unk_25565A268;
  v14[5] = v13;
  swift_retain();
  v15 = a1;
  sub_2211DFBD4((uint64_t)v10, (uint64_t)&unk_25565A270, (uint64_t)v14);
  swift_release();
  return sub_2210B1B38((uint64_t)v10);
}

uint64_t sub_2210B0998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_22103FC6C;
  return sub_2210B09FC(a3, a4);
}

uint64_t sub_2210B09FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  v4 = sub_2212F2C34();
  v3[15] = v4;
  v3[16] = *(_QWORD *)(v4 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = type metadata accessor for SKLogger();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2210B0AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 112);
  swift_unknownObjectWeakAssign();
  v2 = *(_QWORD *)(v1 + 120);
  if (v2)
  {
    v3 = *(_BYTE *)(v1 + 128) & 1;
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 112);
    *(_QWORD *)(v0 + 24) = v2;
    *(_BYTE *)(v0 + 32) = v3;
    *(_BYTE *)(v0 + 34) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
    OUTLINED_FUNCTION_6_12();
  }
  if (qword_255655C08 != -1)
    swift_once();
  v4 = *(_QWORD *)(v0 + 128);
  v5 = __swift_project_value_buffer(*(_QWORD *)(v0 + 144), (uint64_t)qword_25568CE88);
  *(_QWORD *)(v0 + 176) = v5;
  OUTLINED_FUNCTION_32_6(v5, v6, (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
  v7 = (void *)sub_2212F2C1C();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v0 + 184) = v8;
  OUTLINED_FUNCTION_91_1(v8);
  v9 = sub_2212F57FC();
  if (OUTLINED_FUNCTION_28_10(v9))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_4() = 0;
    OUTLINED_FUNCTION_16_12(&dword_221005000, v10, v11, "Presenting manage subscriptions.");
    OUTLINED_FUNCTION_2_4();
  }

  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v12;
  *v12 = v0;
  v12[1] = sub_2210B0BE8;
  return sub_2212F4B18();
}

uint64_t sub_2210B0BE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210B0C48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  OUTLINED_FUNCTION_32_6(*(_QWORD *)(v2 + 176), a2, (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
  v3 = (void *)sub_2212F2C1C();
  OUTLINED_FUNCTION_23_11();
  v4 = sub_2212F57FC();
  if (OUTLINED_FUNCTION_28_10(v4))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_4() = 0;
    OUTLINED_FUNCTION_16_12(&dword_221005000, v5, v6, "Presenting manage subscriptions completed.");
    OUTLINED_FUNCTION_2_4();
  }
  v7 = *(_QWORD *)(v2 + 112);

  v8 = *(_QWORD *)(v7 + 120);
  if (v8)
  {
    v9 = *(_QWORD *)(v2 + 112);
    v10 = *(_BYTE *)(v9 + 128);
    *(_QWORD *)(v2 + 40) = *(_QWORD *)(v9 + 112);
    *(_QWORD *)(v2 + 48) = v8;
    *(_BYTE *)(v2 + 56) = v10 & 1;
    *(_BYTE *)(v2 + 35) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
    OUTLINED_FUNCTION_6_12();
  }
  swift_unknownObjectWeakAssign();
  OUTLINED_FUNCTION_20_11();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_15(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_2210B0D44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  void *v11;
  uint8_t *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char v19;

  v3 = *(void **)(v2 + 200);
  v4 = *(_QWORD *)(v2 + 152);
  v6 = *(_QWORD *)(v2 + 128);
  v5 = *(_QWORD *)(v2 + 136);
  v7 = *(_QWORD *)(v2 + 120);
  OUTLINED_FUNCTION_32_6(*(_QWORD *)(v2 + 176), a2, (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v4, v7);
  v8 = v3;
  v9 = sub_2212F2C1C();
  v10 = sub_2212F57E4();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = *(void **)(v2 + 200);
    v12 = (uint8_t *)OUTLINED_FUNCTION_6_4();
    v13 = (_QWORD *)OUTLINED_FUNCTION_6_4();
    *(_DWORD *)v12 = 138543362;
    v14 = sub_2212F2970();
    *(_QWORD *)(v2 + 88) = v14;
    sub_2212F5898();
    *v13 = v14;

    _os_log_impl(&dword_221005000, v9, v10, "Presenting manage subscriptions failed due to %{public}@.", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255659950);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_2_4();
  }

  v15 = *(_QWORD *)(v2 + 112);
  OUTLINED_FUNCTION_23_11();
  swift_unknownObjectWeakAssign();
  v16 = *(_QWORD *)(v15 + 120);
  v17 = *(void **)(v2 + 200);
  if (v16)
  {
    v18 = *(_QWORD *)(v2 + 112);
    v19 = *(_BYTE *)(v18 + 128);
    *(_QWORD *)(v2 + 64) = *(_QWORD *)(v18 + 112);
    *(_QWORD *)(v2 + 72) = v16;
    *(_BYTE *)(v2 + 80) = v19 & 1;
    *(_BYTE *)(v2 + 33) = 0;
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
    sub_2212F486C();

    swift_release();
    swift_release();
  }
  else
  {

  }
  OUTLINED_FUNCTION_20_11();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_15(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t type metadata accessor for ManageSubscriptionsCoordinator()
{
  return objc_opt_self();
}

uint64_t sub_2210B0F7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for ManageSubscriptionsSheetModifier();
  v2 = sub_2212F3348();
  sub_221023FE4(&qword_25565A188, (void (*)(uint64_t))type metadata accessor for ManageSubscriptionsSheetModifier);
  v5[0] = v1;
  v5[1] = v3;
  return MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v2, v5);
}

uint64_t sub_2210B0FFC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a3[5];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_2212F4D58();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    swift_retain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = v7 + v13;
    v15 = (uint64_t)a2 + v13;
    v16 = *(id *)v15;
    v17 = *(_BYTE *)(v15 + 8);
    sub_22109E3EC(*(id *)v15, v17);
    *(_QWORD *)v14 = v16;
    *(_BYTE *)(v14 + 8) = v17;
    v18 = a3[7];
    v19 = v7 + v18;
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = *v20;
    v22 = v20[1];
    LOBYTE(v16) = *((_BYTE *)v20 + 16);
    sub_22109E3F8();
    *(_QWORD *)v19 = v21;
    *(_QWORD *)(v19 + 8) = v22;
    *(_BYTE *)(v19 + 16) = (_BYTE)v16;
  }
  return v7;
}

uint64_t sub_2210B1118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2212F4D58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_221046ED4(*(id *)(a1 + *(int *)(a2 + 24)), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 8));
  return sub_22109D3A4();
}

uint64_t sub_2210B1198(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2212F4D58();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(id *)v14;
  LOBYTE(v6) = *(_BYTE *)(v14 + 8);
  sub_22109E3EC(*(id *)v14, v6);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v6;
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = (uint64_t *)(a2 + v16);
  v19 = *v18;
  v20 = v18[1];
  LOBYTE(v15) = *((_BYTE *)v18 + 16);
  sub_22109E3F8();
  *(_QWORD *)v17 = v19;
  *(_QWORD *)(v17 + 8) = v20;
  *(_BYTE *)(v17 + 16) = (_BYTE)v15;
  return a1;
}

uint64_t sub_2210B1284(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2212F4D58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(id *)v12;
  LOBYTE(v8) = *(_BYTE *)(v12 + 8);
  sub_22109E3EC(*(id *)v12, v8);
  v14 = *(void **)v11;
  v15 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = v8;
  sub_221046ED4(v14, v15);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = (uint64_t *)(a2 + v16);
  v19 = *v18;
  v20 = v18[1];
  LOBYTE(v13) = *((_BYTE *)v18 + 16);
  sub_22109E3F8();
  *(_QWORD *)v17 = v19;
  *(_QWORD *)(v17 + 8) = v20;
  *(_BYTE *)(v17 + 16) = (_BYTE)v13;
  sub_22109D3A4();
  return a1;
}

uint64_t sub_2210B138C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2212F4D58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  return a1;
}

uint64_t sub_2210B1434(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2212F4D58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = (uint64_t *)(a2 + v10);
  v13 = *v12;
  LOBYTE(v12) = *((_BYTE *)v12 + 8);
  v14 = *(void **)v11;
  v15 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = (_BYTE)v12;
  sub_221046ED4(v14, v15);
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_BYTE *)(v18 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_BYTE *)(v17 + 16) = v19;
  sub_22109D3A4();
  return a1;
}

uint64_t sub_2210B1510()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210B151C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_5_14();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_2210B158C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210B1598(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_5_14();
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2210B1600()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F4D58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2210B1688()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210B169C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ManageSubscriptionsSheetModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2210B16E0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_27_11();
  return sub_2210B0004(a1, v1 + v3);
}

void sub_2210B170C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210B174C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a2;
  return swift_task_switch();
}

uint64_t sub_2210B1764()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 72) = sub_2212F55F8();
  *(_QWORD *)(v0 + 80) = sub_2212F55EC();
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_33_6();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210B17BC()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_15_12();
  sub_221023FE4(&qword_25565A258, (void (*)(uint64_t))type metadata accessor for ManageSubscriptionsCoordinator);
  *(_QWORD *)(v0 + 88) = OUTLINED_FUNCTION_13_16();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210B1838()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = sub_2212F55EC();
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_33_6();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210B1884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release();
  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 48) = v2;
  *(_BYTE *)(v0 + 56) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
  sub_2212F4884();
  v4 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 112) = v4;
  *(_BYTE *)(v0 + 33) = *(_BYTE *)(v0 + 32);
  return swift_task_switch();
}

uint64_t sub_2210B190C()
{
  uint64_t v0;

  sub_22109E2B8(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 33));
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2210B196C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_11_16();
  v4 = (v2 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v1 + v3;
  swift_release();
  swift_release();
  v6 = OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_5_3(v6);
  sub_221046ED4(*(id *)(v5 + *(int *)(v0 + 24)), *(_BYTE *)(v5 + *(int *)(v0 + 24) + 8));
  OUTLINED_FUNCTION_21_11();

  return swift_deallocObject();
}

uint64_t sub_2210B1A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OUTLINED_FUNCTION_4_19();
  v2 = *(_QWORD *)(v0
                 + ((*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFF8));
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_19_6(v3);
  v5 = OUTLINED_FUNCTION_26_10(v4);
  return sub_2210B051C(v5, v6, v2);
}

uint64_t sub_2210B1A8C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_22103FC6C;
  return v8(a1);
}

uint64_t sub_2210B1AF4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_18_12();
  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_19_6(v0);
  v2 = OUTLINED_FUNCTION_1_19(v1);
  return OUTLINED_FUNCTION_11_8(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_2210B1B38(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2210B1B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_5_14();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return OUTLINED_FUNCTION_7_12();
}

uint64_t sub_2210B1BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_5_14() - 8) + 80);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v0 + ((v1 + 32) & ~v1);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_19_6(v4);
  v6 = OUTLINED_FUNCTION_26_10(v5);
  return sub_2210B0998(v6, v7, v2, v3);
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_11_16();
  v3 = v1 + v2;
  swift_release();
  swift_release();
  v4 = OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_5_3(v4);
  sub_221046ED4(*(id *)(v3 + *(int *)(v0 + 24)), *(_BYTE *)(v3 + *(int *)(v0 + 24) + 8));
  OUTLINED_FUNCTION_21_11();
  return OUTLINED_FUNCTION_7_12();
}

uint64_t sub_2210B1CD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_27_11();
  v5 = v1 + v4;
  v6 = swift_task_alloc();
  v7 = (_QWORD *)OUTLINED_FUNCTION_19_6(v6);
  *v7 = v2;
  v7[1] = sub_22103FC6C;
  return sub_2210B174C(a1, v5);
}

uint64_t objectdestroy_8Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_2210B1D68()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_25565A298;
  if (!qword_25565A298)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A230);
    sub_221024548(&qword_25565A2A0, &qword_25565A228);
    v3 = v2;
    sub_221024548(&qword_25565ABE0, qword_255659978);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25565A298);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_19(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_3_15(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_4_19()
{
  return type metadata accessor for ManageSubscriptionsSheetModifier();
}

uint64_t OUTLINED_FUNCTION_5_14()
{
  return sub_2212F4D58();
}

uint64_t OUTLINED_FUNCTION_7_12()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_13_16()
{
  return sub_2212F2E38();
}

uint64_t OUTLINED_FUNCTION_15_12()
{
  return type metadata accessor for ManageSubscriptionsCoordinator();
}

void OUTLINED_FUNCTION_16_12(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  NSObject *v5;
  uint8_t *v6;

  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_20_11()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_21_11()
{
  return sub_22109D3A4();
}

uint64_t OUTLINED_FUNCTION_23_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_26_10(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

void OUTLINED_FUNCTION_32_6(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_2210B170C(a1, v3, a3);
}

uint64_t initializeBufferWithCopyOfBuffer for DynamicCloseButtonModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_221017C08(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithCopy for DynamicCloseButtonModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_221017C08(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_221017894(v5, v6);
  return a1;
}

uint64_t assignWithTake for DynamicCloseButtonModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_221017894(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStoreContentConfiguration.Content(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStoreContentConfiguration.Content(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DynamicCloseButtonModifier()
{
  return &type metadata for DynamicCloseButtonModifier;
}

uint64_t sub_2210B2098()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210B20A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a4;
  v34 = a1;
  v6 = type metadata accessor for LinkCheckedEnvironmentActionDismissButton(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v31 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A2D8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A2E0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A2E8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_2212F3900();
  v31 = sub_2212F37E0();
  a3 &= 1u;
  sub_221017C08(a2, a3);
  sub_22104359C();
  v22 = v21;
  sub_221017894(a2, a3);
  if ((v22 & 1) != 0)
  {
    *v9 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255657A68);
    swift_storeEnumTagMultiPayload();
    sub_22103FA34((uint64_t)v9, (uint64_t)v11, type metadata accessor for LinkCheckedEnvironmentActionDismissButton);
    sub_2210B3DA0((uint64_t)v11, (uint64_t)v14);
    sub_221011A28((uint64_t)v11, type metadata accessor for LinkCheckedEnvironmentActionDismissButton);
    sub_2210B3DE4();
    sub_2212F43BC();
    sub_221014F5C((uint64_t)v14, &qword_25565A2D8);
    sub_2210B4D74((uint64_t)v17, (uint64_t)v20, &qword_25565A2E0);
    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v20, v23, 1, v15);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A2F0);
  v25 = v33;
  v26 = v33 + *(int *)(v24 + 36);
  sub_2210B4D74((uint64_t)v20, v26, &qword_25565A2E8);
  v27 = (uint64_t *)(v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25565A2F8) + 36));
  v28 = v31;
  *v27 = v32;
  v27[1] = v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A300);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v25, v34, v29);
}

uint64_t sub_2210B2360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2210B20A8(a1, *(_QWORD *)v2, *(_BYTE *)(v2 + 8), a2);
}

uint64_t type metadata accessor for LinkCheckedEnvironmentActionDismissButton(uint64_t a1)
{
  return sub_22100CA0C(a1, (uint64_t *)&unk_25565A380);
}

uint64_t sub_2210B2380(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  char v6;

  KeyPath = swift_getKeyPath();
  v6 = 0;
  MEMORY[0x227669B20](&KeyPath, a1, &type metadata for DynamicCloseButtonModifier, a2);
  return swift_release();
}

uint64_t sub_2210B23FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  char v16;

  v4 = type metadata accessor for DismissButtonStyle(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v12 - v8;
  v10 = qword_255655C28;
  swift_retain();
  if (v10 != -1)
    swift_once();
  v13 = a1;
  v14 = a2;
  v12 = xmmword_25565A2C0;
  v15 = xmmword_25565A2C0;
  v16 = byte_25565A2D0;
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(qword_255656688);
  swift_storeEnumTagMultiPayload();
  sub_22103FA34((uint64_t)v7, (uint64_t)v9, type metadata accessor for DismissButtonStyle);
  sub_2210B4384();
  sub_2210B43C0((uint64_t)&unk_25565A430);
  swift_retain();
  sub_2212F4188();
  sub_221011A28((uint64_t)v9, type metadata accessor for DismissButtonStyle);
  swift_release();
  return swift_release();
}

uint64_t sub_2210B259C()
{
  _QWORD *v0;

  return sub_2210B23F8(*v0, v0[1]);
}

double sub_2210B25A4@<D0>(uint64_t a1@<X8>)
{
  char v2;
  double result;
  __int128 v4;
  char v5;

  sub_2210B25E0((uint64_t)&v4);
  v2 = v5;
  result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(_BYTE *)(a1 + 16) = v2;
  return result;
}

double sub_2210B25E0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  double result;
  char v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t v17;
  char v18;
  __int128 v19;
  char v20;

  v2 = sub_2212F2FAC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - v7;
  if (qword_255655D48 != -1)
    swift_once();
  if (byte_255661B80 != 2)
  {
    if ((byte_255661B80 & 1) == 0)
      goto LABEL_5;
LABEL_7:
    sub_221045690();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v11 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v12 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v12 + v11, v6, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    v16 = sub_2210B40B4;
    v17 = v12;
    v18 = 0;
    goto LABEL_8;
  }
  storekit_dyld_fall_2024_os_versions();
  if ((dyld_program_sdk_at_least() & 1) != 0)
    goto LABEL_7;
LABEL_5:
  sub_221045690();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v10 + v9, v6, v2);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  v16 = sub_2210B40B4;
  v17 = v10;
  v18 = 1;
LABEL_8:
  sub_2210B40B8();
  sub_2210B40F4();
  sub_2212F3A14();
  result = *(double *)&v19;
  v14 = v20;
  *(_OWORD *)a1 = v19;
  *(_BYTE *)(a1 + 16) = v14;
  return result;
}

uint64_t sub_2210B27EC()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A518);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A520);
  sub_2212F3810();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A528);
  sub_2210B4BB0();
  swift_getOpaqueTypeConformance2();
  sub_2210B43C0((uint64_t)&unk_25565A548);
  swift_getOpaqueTypeConformance2();
  return sub_2212F4794();
}

uint64_t sub_2210B28F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t *v19;
  void (*v20)(char *, uint64_t);
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v31 = a2;
  v3 = sub_2212F3810();
  v4 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  v30 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A540);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A528);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A520);
  v14 = *(_QWORD *)(v13 - 8);
  v26 = v13;
  v27 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212F46C8();
  v17 = *(_QWORD *)(a1 + 16);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
  v19 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *v19 = KeyPath;
  v19[1] = v17;
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  swift_retain();
  v20(v9, v6);
  v21 = sub_2210B4BB0();
  sub_2212F4140();
  sub_221014F5C((uint64_t)v12, &qword_25565A528);
  v22 = v28;
  sub_2212F3804();
  v32 = v10;
  v33 = v21;
  swift_getOpaqueTypeConformance2();
  sub_2210B43C0((uint64_t)&unk_25565A548);
  v23 = v26;
  v24 = v29;
  sub_2212F414C();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v16, v23);
}

uint64_t sub_2210B2B84@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_2212F384C();
  if (qword_255655B20 != -1)
    swift_once();
  v2 = (id)qword_25568CA90;
  result = sub_2212F40D4();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_2210B2C60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2212F4680();
  *a1 = result;
  return result;
}

uint64_t sub_2210B2C94()
{
  uint64_t result;

  result = sub_2212F3F30();
  xmmword_25565A2A8 = (unint64_t)result;
  byte_25565A2B8 = 1;
  return result;
}

uint64_t sub_2210B2CBC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  v0 = sub_2212F3F3C();
  result = sub_2212F3F78();
  *(_QWORD *)&xmmword_25565A2C0 = v0;
  *((_QWORD *)&xmmword_25565A2C0 + 1) = v2;
  byte_25565A2D0 = 0;
  return result;
}

uint64_t sub_2210B2CF4()
{
  return sub_2210B27EC();
}

uint64_t sub_2210B2D2C@<X0>(ValueMetadata *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  ValueMetadata *v37;
  uint64_t v38;
  __int128 v39;
  char v40;

  v36 = a3;
  v5 = sub_2212F3240();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - v9;
  v11 = sub_2212F33CC();
  v30 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A438);
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A440);
  v17 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = qword_255655C20;
  swift_retain();
  if (v20 != -1)
    swift_once();
  v37 = a1;
  v38 = a2;
  v39 = xmmword_25565A2A8;
  v40 = byte_25565A2B8;
  swift_retain();
  sub_2212F33C0();
  v21 = sub_2210B4384();
  sub_2210B43C0((uint64_t)&unk_25565A448);
  v23 = v22;
  sub_2212F417C();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v11);
  swift_release();
  swift_release();
  sub_2212F3234();
  sub_2212F321C();
  v24 = *(void (**)(char *, uint64_t))(v34 + 8);
  v25 = v10;
  v26 = v35;
  v24(v25, v35);
  v37 = &type metadata for UnstyledDismissButton;
  v38 = v11;
  *(_QWORD *)&v39 = v21;
  *((_QWORD *)&v39 + 1) = v23;
  swift_getOpaqueTypeConformance2();
  v27 = v33;
  sub_2212F4218();
  v24(v8, v26);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v27);
  v28 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v36, v19, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v28);
}

uint64_t sub_2210B3000@<X0>(uint64_t *a1@<X8>)
{
  return sub_2210B302C((SEL *)&selRef_systemGray6Color, (SEL *)&selRef_systemGray2Color, a1);
}

uint64_t sub_2210B302C@<X0>(SEL *a1@<X1>, SEL *a2@<X2>, uint64_t *a3@<X8>)
{
  void *v6;
  uint64_t v7;
  uint64_t result;

  v6 = (void *)objc_opt_self();
  MEMORY[0x227669B98](objc_msgSend(v6, *a1));
  MEMORY[0x227669B98](objc_msgSend(v6, *a2));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656A60);
  sub_2210B4EB0((uint64_t)&qword_255656A68);
  sub_2210B50B0((uint64_t)&qword_255656A88);
  sub_2212F4644();
  v7 = sub_2212F45E4();
  result = swift_release();
  *a3 = v7;
  return result;
}

uint64_t sub_2210B3130@<X0>(uint64_t *a1@<X8>)
{
  return sub_2210B302C((SEL *)&selRef_systemGray2Color, (SEL *)&selRef_systemGray5Color, a1);
}

uint64_t sub_2210B3158@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2210B2D2C(*(ValueMetadata **)v1, *(_QWORD *)(v1 + 8), a1);
}

void sub_2210B3160(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A3E8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A3F0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A3F8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, a1, v10);
  v11 = sub_2212F3EDC();
  v12 = sub_2212F3F0C();
  v13 = sub_2212F3F00();
  sub_2212F3F00();
  if (sub_2212F3F00() != v11)
    v13 = sub_2212F3F00();
  sub_2212F3F00();
  if (sub_2212F3F00() != v12)
    v13 = sub_2212F3F00();
  if (qword_255655C60 != -1)
    swift_once();
  v14 = byte_25568CEE0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  if ((byte_25568CEE0 & 1) == 0)
  {
    sub_2212F2D48();
    v15 = v19;
    v16 = v20;
    v17 = v21;
    v18 = v22;
  }
  sub_2210B4E7C((uint64_t)v6, (uint64_t)v9, &qword_25565A3E8);
  v23 = &v9[*(int *)(v7 + 36)];
  *v23 = v13;
  *((_QWORD *)v23 + 1) = v15;
  *((_QWORD *)v23 + 2) = v16;
  *((_QWORD *)v23 + 3) = v17;
  *((_QWORD *)v23 + 4) = v18;
  v23[40] = v14;
  sub_221014F5C((uint64_t)v6, &qword_25565A3E8);
  sub_2210B4D74((uint64_t)v9, a2, &qword_25565A3F0);
}

void sub_2210B3360(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a1;
  v26 = a2;
  v23 = sub_2212F3A2C();
  v27 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2212F34A4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A550);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A558);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A560);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v10 = sub_2212F4A10();
  v10[1] = v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A568);
  sub_2210B35FC(v24, v25, (uint64_t)v10 + *(int *)(v18 + 44));
  sub_2210B4E7C((uint64_t)v10, (uint64_t)v13, &qword_25565A550);
  v13[*(int *)(v11 + 36)] = 0;
  sub_221014F5C((uint64_t)v10, &qword_25565A550);
  sub_2212F348C();
  v19 = &v16[*(int *)(v14 + 36)];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A570);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(&v19[*(int *)(v20 + 40)], v7, v4);
  *v19 = 0;
  sub_2210B4E7C((uint64_t)v13, (uint64_t)v16, &qword_25565A558);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_221014F5C((uint64_t)v13, &qword_25565A558);
  sub_2212F34BC();
  sub_2210B4C54();
  sub_2210B43C0((uint64_t)&unk_25565A5A8);
  v21 = v23;
  sub_2212F41A0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v21);
  sub_221014F5C((uint64_t)v16, &qword_25565A560);
}

void sub_2210B35FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t);
  int v35;
  int v36;
  unint64_t v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  int v42;
  float v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  float *v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;

  v84 = a2;
  v93 = a3;
  v94 = a1;
  v3 = sub_2212F330C();
  v91 = *(_QWORD *)(v3 - 8);
  v92 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v89 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_2212F3C9C();
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v78 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A5B0);
  MEMORY[0x24BDAC7A8](v77);
  v81 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A5B8);
  MEMORY[0x24BDAC7A8](v83);
  v85 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A5C0);
  v87 = *(_QWORD *)(v90 - 8);
  v8 = MEMORY[0x24BDAC7A8](v90);
  v88 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v82 = (char *)&v70 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v86 = (char *)&v70 - v12;
  v13 = sub_2212F2DF0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v70 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v70 - v17;
  v19 = sub_2212F49C8();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A5C8);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A5D0);
  MEMORY[0x24BDAC7A8](v73);
  v27 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A5D8);
  v28 = MEMORY[0x24BDAC7A8](v74);
  v76 = (uint64_t)&v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v70 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v75 = (uint64_t)&v70 - v33;
  sub_2212F49B0();
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v25, v22, v19);
  *(_WORD *)&v25[*(int *)(v23 + 56)] = 256;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  sub_2210438EC();
  v72 = v14;
  v34 = *(uint64_t (**)(char *, uint64_t))(v14 + 88);
  v35 = v34(v18, v13);
  v36 = *MEMORY[0x24BDEB3F0];
  v37 = 0;
  if (v35 != *MEMORY[0x24BDEB3F0])
  {
    (*(void (**)(char *, uint64_t))(v72 + 8))(v18, v13);
    v37 = 0xBF9999999999999ALL;
  }
  v71 = v13;
  sub_2210B4E7C((uint64_t)v25, (uint64_t)v27, &qword_25565A5C8);
  *(_QWORD *)&v27[*(int *)(v73 + 36)] = v37;
  sub_221014F5C((uint64_t)v25, &qword_25565A5C8);
  sub_2212F4A10();
  sub_2212F2F64();
  sub_2210B4E7C((uint64_t)v27, (uint64_t)v32, &qword_25565A5D0);
  v38 = &v32[*(int *)(v74 + 36)];
  v39 = v96;
  *(_OWORD *)v38 = v95;
  *((_OWORD *)v38 + 1) = v39;
  *((_OWORD *)v38 + 2) = v97;
  sub_221014F5C((uint64_t)v27, &qword_25565A5D0);
  v40 = v75;
  sub_2210B4D74((uint64_t)v32, v75, &qword_25565A5D8);
  v41 = v78;
  sub_2212F3CA8();
  v42 = sub_2212F3BAC();
  v43 = 1.0;
  if ((sub_2212F3CB4() & 1) != 0)
  {
    v44 = v70;
    sub_2210438EC();
    v45 = v71;
    if (v34(v44, v71) == v36)
    {
      v43 = 0.4;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v72 + 8))(v44, v45);
      v43 = 0.2;
    }
  }
  v46 = v79;
  v47 = (uint64_t)v81;
  v48 = v80;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v81, v41, v80);
  v49 = (float *)(v47 + *(int *)(v77 + 36));
  *(_DWORD *)v49 = v42;
  v49[1] = v43;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v48);
  if ((sub_2212F3CB4() & 1) != 0)
    v50 = 0.98;
  else
    v50 = 1.0;
  sub_2212F4ADC();
  v52 = v51;
  v54 = v53;
  v55 = v85;
  sub_2210B4E7C(v47, v85, &qword_25565A5B0);
  v56 = v55 + *(int *)(v83 + 36);
  *(double *)v56 = v50;
  *(double *)(v56 + 8) = v50;
  *(_QWORD *)(v56 + 16) = v52;
  *(_QWORD *)(v56 + 24) = v54;
  sub_221014F5C(v47, &qword_25565A5B0);
  v58 = v91;
  v57 = v92;
  v59 = v89;
  (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v89, *MEMORY[0x24BDECF00], v92);
  sub_2210B4D94((uint64_t)&unk_25565A5E0);
  v60 = v82;
  sub_2212F426C();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v57);
  sub_221014F5C(v55, &qword_25565A5B8);
  v62 = v86;
  v61 = v87;
  v63 = v90;
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v60, v90);
  v64 = v76;
  sub_2210B4E7C(v40, v76, &qword_25565A5D8);
  v65 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v66 = v88;
  v65(v88, v62, v63);
  v67 = v93;
  sub_2210B4E7C(v64, v93, &qword_25565A5D8);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A600);
  v65((char *)(v67 + *(int *)(v68 + 48)), v66, v63);
  v69 = *(void (**)(char *, uint64_t))(v61 + 8);
  v69(v62, v63);
  sub_221014F5C(v40, &qword_25565A5D8);
  v69(v66, v63);
  sub_221014F5C(v64, &qword_25565A5D8);
}

void sub_2210B3D68()
{
  sub_2212F36E4();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210B3D84()
{
  sub_2212F36E4();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210B3DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LinkCheckedEnvironmentActionDismissButton(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2210B3DE4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25565A308;
  if (!qword_25565A308)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A2D8);
    sub_2210B43C0((uint64_t)&unk_25565A310);
    v3[0] = v2;
    v3[1] = sub_2210B3E68();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25565A308);
  }
  return result;
}

unint64_t sub_2210B3E68()
{
  unint64_t result;

  result = qword_25565A318;
  if (!qword_25565A318)
  {
    result = MEMORY[0x22766BAC4](&unk_2213024CC, &type metadata for DynamicCloseButtonStyleModifier);
    atomic_store(result, (unint64_t *)&qword_25565A318);
  }
  return result;
}

void sub_2210B3EA4()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_23_12() & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_2210B3EC4()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_23_12() & 1;
  OUTLINED_FUNCTION_6_0();
}

ValueMetadata *type metadata accessor for DynamicCloseButtonStyleModifier()
{
  return &type metadata for DynamicCloseButtonStyleModifier;
}

void sub_2210B3EF4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  sub_2210B4404(a1, a2, a3, &qword_255657A68);
}

uint64_t sub_2210B3F08(uint64_t a1, uint64_t a2)
{
  return sub_2210B4494(a1, a2, &qword_255657A68, (uint64_t (*)(_QWORD))MEMORY[0x24BDEC038]);
}

void sub_2210B3F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210B450C(a1, a2, a3, &qword_255657A68);
}

void sub_2210B3F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210B4570(a1, a2, a3, &qword_255657A68);
}

void sub_2210B3F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210B45EC(a1, a2, a3, &qword_255657A68);
}

void sub_2210B3F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210B4664(a1, a2, a3, &qword_255657A68, (uint64_t (*)(_QWORD))MEMORY[0x24BDEC038]);
}

uint64_t sub_2210B3F6C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210B3F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_22_6();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A320);
  return OUTLINED_FUNCTION_21(v1, v0, v2);
}

uint64_t sub_2210B3FA8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210B3FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_22_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A320);
  v0 = OUTLINED_FUNCTION_18();
  return OUTLINED_FUNCTION_22(v0, v1, v2, v3);
}

void sub_2210B3FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210B4768(a1, a2, a3, (unint64_t *)&qword_25565A390, (void (*)(uint64_t))MEMORY[0x24BDEC038]);
}

unint64_t sub_2210B3FF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_25565A3C0;
  if (!qword_25565A3C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A2F0);
    sub_2210B50B0((uint64_t)&unk_25565A3C8);
    v3 = v2;
    sub_2210B50B0((uint64_t)&unk_25565A3D0);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25565A3C0);
  }
  return result;
}

uint64_t sub_2210B4090()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210B40A0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2210B40B8()
{
  unint64_t result;

  result = qword_25565A3D8;
  if (!qword_25565A3D8)
  {
    result = MEMORY[0x22766BAC4](&unk_2213025EC, &type metadata for DismissButton);
    atomic_store(result, (unint64_t *)&qword_25565A3D8);
  }
  return result;
}

unint64_t sub_2210B40F4()
{
  unint64_t result;

  result = qword_25565A3E0;
  if (!qword_25565A3E0)
  {
    result = MEMORY[0x22766BAC4](&unk_22130259C, &type metadata for CompatibilityDismissButton);
    atomic_store(result, (unint64_t *)&qword_25565A3E0);
  }
  return result;
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2212F2FAC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_2210B4194()
{
  sub_2212F2FAC();
  sub_2212F2FA0();
  OUTLINED_FUNCTION_6_0();
}

ValueMetadata *type metadata accessor for CompatibilityDismissButton()
{
  return &type metadata for CompatibilityDismissButton;
}

void _s17_StoreKit_SwiftUI26CompatibilityDismissButtonVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_6_0();
}

ValueMetadata *type metadata accessor for DismissButton()
{
  return &type metadata for DismissButton;
}

unint64_t sub_2210B422C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25565A400;
  if (!qword_25565A400)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A408);
    v2[0] = sub_2210B40B8();
    v2[1] = sub_2210B40F4();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25565A400);
  }
  return result;
}

void sub_2210B4298()
{
  sub_2210B4D94((uint64_t)&unk_25565A410);
}

unint64_t sub_2210B42CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_25565A418;
  if (!qword_25565A418)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A3E8);
    sub_2210B50B0((uint64_t)&unk_25565A420);
    v3 = v2;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDF3F50], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_25565A418);
  }
  return result;
}

uint64_t sub_2210B4348()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210B4358()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for DismissButtonStyle(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_25565A4B0);
}

unint64_t sub_2210B4384()
{
  unint64_t result;

  result = qword_25565A428;
  if (!qword_25565A428)
  {
    result = MEMORY[0x22766BAC4](&unk_221302790, &type metadata for UnstyledDismissButton);
    atomic_store(result, (unint64_t *)&qword_25565A428);
  }
  return result;
}

void sub_2210B43C0(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!OUTLINED_FUNCTION_21_12(a1))
  {
    v1(255);
    OUTLINED_FUNCTION_35_0();
  }
  OUTLINED_FUNCTION_6_0();
}

void sub_2210B43F0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  sub_2210B4404(a1, a2, a3, qword_255656688);
}

void sub_2210B4404(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  uint64_t v6;

  if ((*(_DWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_6_14(a1, (uint64_t)a2, a3, a4) - 8) + 80) & 0x20000) != 0)
  {
    *v4 = *a2;
    swift_retain();
  }
  else
  {
    if (OUTLINED_FUNCTION_4_20() == 1)
    {
      v6 = OUTLINED_FUNCTION_13_17();
      OUTLINED_FUNCTION_1_20(v6);
      OUTLINED_FUNCTION_11_17();
    }
    else
    {
      OUTLINED_FUNCTION_7_13();
      OUTLINED_FUNCTION_12_19();
    }
    swift_storeEnumTagMultiPayload();
  }
  OUTLINED_FUNCTION_17_0();
}

uint64_t sub_2210B4480(uint64_t a1, uint64_t a2)
{
  return sub_2210B4494(a1, a2, qword_255656688, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418]);
}

uint64_t sub_2210B4494(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(a3);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v6 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
}

void sub_2210B44F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210B450C(a1, a2, a3, qword_255656688);
}

void sub_2210B450C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  OUTLINED_FUNCTION_6_14(a1, a2, a3, a4);
  if (OUTLINED_FUNCTION_4_20() == 1)
  {
    v4 = OUTLINED_FUNCTION_13_17();
    OUTLINED_FUNCTION_1_20(v4);
    OUTLINED_FUNCTION_11_17();
  }
  else
  {
    OUTLINED_FUNCTION_7_13();
    OUTLINED_FUNCTION_12_19();
  }
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_17_0();
}

void sub_2210B455C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210B4570(a1, a2, a3, qword_255656688);
}

void sub_2210B4570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;

  if (a1 != a2)
  {
    OUTLINED_FUNCTION_20_12(a1, a2, a3, a4);
    __swift_instantiateConcreteTypeFromMangledName(a4);
    if (OUTLINED_FUNCTION_4_20() == 1)
    {
      v5 = OUTLINED_FUNCTION_13_17();
      OUTLINED_FUNCTION_1_20(v5);
      OUTLINED_FUNCTION_11_17();
    }
    else
    {
      OUTLINED_FUNCTION_7_13();
      OUTLINED_FUNCTION_12_19();
    }
    swift_storeEnumTagMultiPayload();
  }
  OUTLINED_FUNCTION_17_0();
}

void sub_2210B45D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210B45EC(a1, a2, a3, qword_255656688);
}

void sub_2210B45EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = OUTLINED_FUNCTION_6_14(a1, a2, a3, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = OUTLINED_FUNCTION_13_17();
    OUTLINED_FUNCTION_2_3(v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    OUTLINED_FUNCTION_17_14(*(_QWORD *)(v4 - 8));
  }
  OUTLINED_FUNCTION_17_0();
}

void sub_2210B4650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210B4664(a1, a2, a3, qword_255656688, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB418]);
}

void sub_2210B4664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    OUTLINED_FUNCTION_20_12(a1, a2, a3, a4);
    v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = a5(0);
      OUTLINED_FUNCTION_2_3(v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      OUTLINED_FUNCTION_17_14(*(_QWORD *)(v7 - 8));
    }
  }
  OUTLINED_FUNCTION_17_0();
}

uint64_t sub_2210B46E4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210B46F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_22_6();
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_25565A450);
  return OUTLINED_FUNCTION_21(v1, v0, v2);
}

uint64_t sub_2210B4720()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210B472C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_22_6();
  __swift_instantiateConcreteTypeFromMangledName(qword_25565A450);
  v0 = OUTLINED_FUNCTION_18();
  return OUTLINED_FUNCTION_22(v0, v1, v2, v3);
}

void sub_2210B4754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210B4768(a1, a2, a3, (unint64_t *)&qword_255656710, (void (*)(uint64_t))MEMORY[0x24BDEB418]);
}

void sub_2210B4768(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;

  sub_221034354(319, a4, a5);
  if (v5 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for CompatibilityDismissButton.CircleStyle()
{
  return &type metadata for CompatibilityDismissButton.CircleStyle;
}

ValueMetadata *type metadata accessor for CompatibilityDismissButton.XMarkStyle()
{
  return &type metadata for CompatibilityDismissButton.XMarkStyle;
}

uint64_t initializeWithCopy for UnstyledDismissButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for UnstyledDismissButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithTake for UnstyledDismissButton(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnstyledDismissButton(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UnstyledDismissButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnstyledDismissButton()
{
  return &type metadata for UnstyledDismissButton;
}

unint64_t sub_2210B4994()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[5];

  result = qword_25565A4E8;
  if (!qword_25565A4E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A4F0);
    v2 = type metadata accessor for DismissButtonStyle(255);
    v3 = sub_2210B4384();
    sub_2210B43C0((uint64_t)&unk_25565A430);
    v5[1] = &type metadata for UnstyledDismissButton;
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = v4;
    v5[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDF3F50], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25565A4E8);
  }
  return result;
}

unint64_t sub_2210B4A58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  uint64_t v6;
  _QWORD v7[6];

  result = qword_25565A4F8;
  if (!qword_25565A4F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A500);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A438);
    sub_2212F33CC();
    v3 = sub_2210B4384();
    sub_2210B43C0((uint64_t)&unk_25565A448);
    v7[4] = v3;
    v7[5] = v4;
    v7[2] = v2;
    v7[3] = swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_2210B50B0((uint64_t)&unk_25565A508);
    v7[0] = OpaqueTypeConformance2;
    v7[1] = v6;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v7);
    atomic_store(result, (unint64_t *)&qword_25565A4F8);
  }
  return result;
}

uint64_t sub_2210B4B68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210B4B78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210B4B88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210B4B98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210B4BA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2210B28F4(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_2210B4BB0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_25565A530;
  if (!qword_25565A530)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A528);
    sub_2210B50B0((uint64_t)&unk_25565A538);
    v3 = v2;
    sub_2210B50B0((uint64_t)&qword_255656B78);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25565A530);
  }
  return result;
}

unint64_t sub_2210B4C54()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25565A578;
  if (!qword_25565A578)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A560);
    v2 = sub_2210B4CD8();
    sub_2210B50B0((uint64_t)&unk_25565A5A0);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25565A578);
  }
  return result;
}

unint64_t sub_2210B4CD8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_25565A580;
  if (!qword_25565A580)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A558);
    sub_2210B50B0((uint64_t)&unk_25565A588);
    v3 = v2;
    sub_2210B50B0((uint64_t)&unk_25565A590);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25565A580);
  }
  return result;
}

void sub_2210B4D74(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_25_0(a1, a2, a3);
  OUTLINED_FUNCTION_2_3(v3);
  OUTLINED_FUNCTION_6_0();
}

void sub_2210B4D94(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t *v4;
  uint64_t v5;
  _QWORD v6[2];

  if (!OUTLINED_FUNCTION_21_12(a1))
  {
    v5 = OUTLINED_FUNCTION_1_10(0, v4);
    v6[0] = v3();
    v6[1] = v2;
    atomic_store(MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v5, v6), v1);
  }
  OUTLINED_FUNCTION_16_13();
}

unint64_t sub_2210B4DE0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_25565A5E8;
  if (!qword_25565A5E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A5B0);
    sub_2210B43C0((uint64_t)&qword_255656678);
    v3 = v2;
    sub_2210B50B0((uint64_t)&unk_25565A5F0);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25565A5E8);
  }
  return result;
}

void sub_2210B4E7C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_25_0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  OUTLINED_FUNCTION_6_0();
}

void sub_2210B4EB0(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  if (!OUTLINED_FUNCTION_21_12(a1))
  {
    v5 = OUTLINED_FUNCTION_1_10(0, v4);
    v6 = v3();
    atomic_store(MEMORY[0x22766BAC4](v2, v5, &v6), v1);
  }
  OUTLINED_FUNCTION_16_13();
}

uint64_t initializeBufferWithCopyOfBuffer for UnstyledDismissButton.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t destroy for UnstyledDismissButton.Configuration()
{
  return swift_release();
}

uint64_t assignWithCopy for UnstyledDismissButton.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithTake for UnstyledDismissButton.Configuration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnstyledDismissButton.Configuration(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UnstyledDismissButton.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnstyledDismissButton.Configuration()
{
  return &type metadata for UnstyledDismissButton.Configuration;
}

void sub_2210B5084()
{
  sub_2210B50B0((uint64_t)&unk_25565A608);
}

void sub_2210B50B0(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_21_12(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v1);
    OUTLINED_FUNCTION_35_0();
  }
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210B50E0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A560);
  sub_2212F3A2C();
  sub_2210B4C54();
  sub_2210B43C0((uint64_t)&unk_25565A5A8);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210B5168()
{
  return MEMORY[0x24BDF3E18];
}

uint64_t OUTLINED_FUNCTION_1_20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_4_20()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_6_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return __swift_instantiateConcreteTypeFromMangledName(a4);
}

uint64_t OUTLINED_FUNCTION_7_13()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_11_17()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_12_19()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_13_17()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

void *OUTLINED_FUNCTION_17_14@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(a1 + 64));
}

void OUTLINED_FUNCTION_20_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  sub_221014F5C(v4, a4);
}

uint64_t OUTLINED_FUNCTION_21_12(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_23_12()
{
  return sub_2210C00C8();
}

void sub_2210B5238()
{
  qword_25568CEA8 = (uint64_t)&unk_24E6F0CA8;
}

uint64_t sub_2210B524C()
{
  uint64_t *v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  void *v33;

  v1 = v0;
  v3 = *v0;
  v2 = v0[1];
  v4 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v5 = objc_msgSend(v4, sel_mainBundle);
  v6 = objc_msgSend(v5, sel_bundleIdentifier);

  if (v6)
  {
    v7 = sub_2212F537C();
    v9 = v8;

    sub_22108CF9C(v7, v9);
    v11 = v10;
    v13 = v12;
    swift_bridgeObjectRelease();
    v14 = sub_2212F2AA8();
    v16 = v15;
    sub_221054AE8(v11, v13);
  }
  else
  {
    v14 = 0;
    v16 = 0xE000000000000000;
  }
  v17 = sub_2212251F8(v14, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    return 0;
  sub_2212B4A98(v3, v2, *((unsigned __int16 *)v1 + 8) | (*((unsigned __int8 *)v1 + 18) << 16));
  if (!v18)
    return 0;
  v19 = v18;
  v20 = sub_2212B5914();
  if (!v20)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v21 = (uint64_t)v20;
  type metadata accessor for SubscriptionViewDisappearEvent();
  v22 = sub_2212B4ED8();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v23 = (uint64_t)v22;
  v24 = sub_2211D2818(v21, v19, 1);
  v25 = sub_2211D2818(v23, v24, 1);
  if (qword_255655C30 != -1)
    swift_once();
  v26 = *(_QWORD *)(qword_25568CEA8 + 16);
  if (v26)
  {
    v27 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      v29 = *(v27 - 1);
      v28 = *v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30 = sub_2211D351C(v29, v28);
      v32 = v31;
      swift_bridgeObjectRelease();
      if ((v32 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255657FF8);
        sub_2212F5AA8();
        swift_bridgeObjectRelease();
        v33 = *(void **)(*(_QWORD *)(v25 + 56) + 8 * v30);
        sub_221054AAC();
        sub_2212F5AC0();
        swift_bridgeObjectRelease();

      }
      swift_bridgeObjectRelease();
      v27 += 2;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
  }
  return v25;
}

uint64_t type metadata accessor for SubscriptionViewDisappearEvent()
{
  uint64_t result;

  result = qword_25565A670;
  if (!qword_25565A670)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_2210B5584(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_QWORD *)(a1 + 40) = a2[5];
    v6 = a2[7];
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    *(_QWORD *)(a1 + 56) = v6;
    *(_BYTE *)(a1 + 65) = *((_BYTE *)a2 + 65);
    *(_WORD *)(a1 + 66) = *((_WORD *)a2 + 33);
    v7 = *(int *)(a3 + 24);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    *(_QWORD *)(a1 + 72) = a2[9];
    v10 = sub_2212F2AF0();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v12 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
    v11(v8 + v12[5], v9 + v12[5], v10);
    *(_BYTE *)(v8 + v12[6]) = *(_BYTE *)(v9 + v12[6]);
    *(_BYTE *)(v8 + v12[7]) = *(_BYTE *)(v9 + v12[7]);
  }
  return v3;
}

uint64_t sub_2210B56C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2212F2AF0();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v8(v4, v5);
  v6 = v4 + *(int *)(type metadata accessor for MintDisappearBaseEvent(0) + 20);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v5);
}

uint64_t sub_2210B5740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  int *v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_WORD *)(a1 + 66) = *(_WORD *)(a2 + 66);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v9 = sub_2212F2AF0();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
  v10(v7 + v11[5], v8 + v11[5], v9);
  *(_BYTE *)(v7 + v11[6]) = *(_BYTE *)(v8 + v11[6]);
  *(_BYTE *)(v7 + v11[7]) = *(_BYTE *)(v8 + v11[7]);
  return a1;
}

uint64_t sub_2210B5850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  int *v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_BYTE *)(a1 + 66) = *(_BYTE *)(a2 + 66);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2212F2AF0();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  v13 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
  v12(v9 + v13[5], v10 + v13[5], v11);
  *(_BYTE *)(v9 + v13[6]) = *(_BYTE *)(v10 + v13[6]);
  *(_BYTE *)(v9 + v13[7]) = *(_BYTE *)(v10 + v13[7]);
  return a1;
}

uint64_t sub_2210B59C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v4 = *(int *)(a3 + 24);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = sub_2212F2AF0();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
  v8(v6, v5, v7);
  v9 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
  v8(v6 + v9[5], v5 + v9[5], v7);
  *(_BYTE *)(v6 + v9[6]) = *(_BYTE *)(v5 + v9[6]);
  *(_BYTE *)(v6 + v9[7]) = *(_BYTE *)(v5 + v9[7]);
  return a1;
}

uint64_t sub_2210B5A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  *(_BYTE *)(a1 + 67) = *(_BYTE *)(a2 + 67);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2212F2AF0();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
  v11(v8 + v12[5], v9 + v12[5], v10);
  *(_BYTE *)(v8 + v12[6]) = *(_BYTE *)(v9 + v12[6]);
  *(_BYTE *)(v8 + v12[7]) = *(_BYTE *)(v9 + v12[7]);
  return a1;
}

uint64_t sub_2210B5BD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210B5BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for MintDisappearBaseEvent(0);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t sub_2210B5C5C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210B5C68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = type metadata accessor for MintDisappearBaseEvent(0);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2210B5CD4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MintDisappearBaseEvent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_2210B5D50()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17_15();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

__n128 sub_2210B5D6C@<Q0>(__n128 *a1@<X8>)
{
  __n128 result;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;
  unsigned __int8 v6;

  __swift_instantiateConcreteTypeFromMangledName(qword_25565A750);
  sub_2212F4884();
  result = v5;
  a1->n128_u64[0] = v3;
  a1->n128_u64[1] = v4;
  a1[1] = v5;
  a1[2].n128_u8[0] = v6;
  return result;
}

void sub_2210B5DE0()
{
  sub_2212F3A74();
  sub_2212F3888();
  sub_221023FE4(&qword_2556589E0, (void (*)(uint64_t))MEMORY[0x24BDEEBA0]);
  type metadata accessor for SubscriptionStorePickerOptionsGroup();
}

void sub_2210B5E74(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_221023FE4(&qword_25565A738, v2);
  v6 = v5;
  v7 = MEMORY[0x22766BAC4](&unk_221302AF0, a1);
  *(_QWORD *)(v3 - 136) = v1;
  *(_QWORD *)(v3 - 128) = a1;
  *(_QWORD *)(v3 - 120) = v1;
  *(_QWORD *)(v3 - 112) = v6;
  *(_QWORD *)(v3 - 104) = v7;
  *(_QWORD *)(v3 - 96) = v6;
  type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView();
}

void sub_2210B5EBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(v2 + 32);
  sub_221023FE4(&qword_25565A740, v4);
  *(_QWORD *)(v5 - 136) = v1;
  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 120) = a1;
  *(_QWORD *)(v5 - 112) = v7;
  *(_QWORD *)(v5 - 104) = v8;
  OUTLINED_FUNCTION_19_14();
  *(_QWORD *)(v5 - 144) = MEMORY[0x22766BAC4](&unk_221307660, a1);
  OUTLINED_FUNCTION_7_2();
}

uint64_t sub_2210B5F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t);
  _BYTE v22[80];

  v12 = type metadata accessor for SubscriptionStorePickerLayoutInternal.LayoutView(0, v7, a1, a4);
  *(_QWORD *)(v10 - 360) = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v22[-v16];
  v18 = *(int *)(v6 + 56);
  *(_QWORD *)(v10 - 192) = v5;
  *(_QWORD *)(v10 - 184) = v9;
  *(_QWORD *)(v10 - 176) = v8;
  *(_QWORD *)(v10 - 168) = v4;
  v19 = *(_QWORD *)(v10 - 352);
  *(_QWORD *)(v10 - 160) = v19;
  *(_QWORD *)(v10 - 256) = v5;
  *(_QWORD *)(v10 - 248) = v9;
  *(_QWORD *)(v10 - 240) = v8;
  *(_QWORD *)(v10 - 232) = v4;
  *(_QWORD *)(v10 - 224) = v19;
  *(_QWORD *)(v10 - 320) = v5;
  *(_QWORD *)(v10 - 312) = v9;
  *(_QWORD *)(v10 - 304) = v8;
  *(_QWORD *)(v10 - 296) = v4;
  *(_QWORD *)(v10 - 288) = v19;
  sub_221120D40((uint64_t (*)(uint64_t))sub_2210B9E80, (void (*)(_OWORD *__return_ptr))sub_2210B9E90, (uint64_t (*)(void))sub_2210B9EA0, *(_BYTE *)(v19 + v18), v7, (uint64_t)v15, a1);
  MEMORY[0x22766BAC4](&unk_2213076B0, v12);
  sub_221088D68((uint64_t)v15, v12, (uint64_t)v17);
  v20 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v10 - 360) + 8);
  v20(v15, v12);
  sub_221087210((uint64_t)v17, v12, *(_QWORD *)(v10 - 344));
  return ((uint64_t (*)(_BYTE *, uint64_t))v20)(v17, v12);
}

void sub_2210B608C()
{
  type metadata accessor for SubscriptionStorePickerControlWrapper();
}

uint64_t sub_2210B60B4()
{
  char v0;

  sub_22104359C();
  return v0 & 1;
}

void sub_2210B60DC()
{
  type metadata accessor for SubscriptionStorePickerControlWrapper();
}

double sub_2210B6108()
{
  __n128 *v0;
  double result;
  __n128 v2;
  __n128 v3[2];
  unsigned __int8 v4;

  sub_2210B5D6C(v3);
  result = v3[0].n128_f64[0];
  v2 = v3[1];
  *v0 = v3[0];
  v0[1] = v2;
  v0[2].n128_u8[0] = v4;
  return result;
}

void sub_2210B6134()
{
  type metadata accessor for SubscriptionStorePickerControlWrapper();
}

void sub_2210B6180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v11 - 176) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v11 - 168) = a1;
  v12 = MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v11 - 144) = (char *)&a9 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v11 - 208) = sub_2212F3A74();
  v14 = sub_2212F3888();
  sub_221023FE4(&qword_2556589E0, (void (*)(uint64_t))MEMORY[0x24BDEEBA0]);
  *(_QWORD *)(v11 - 128) = v14;
  *(_QWORD *)(v11 - 120) = v10;
  *(_QWORD *)(v11 - 112) = v15;
  *(_QWORD *)(v11 - 104) = v9;
  type metadata accessor for SubscriptionStorePickerOptionsGroup();
}

void sub_2210B6230(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_221023FE4(&qword_25565A738, v2);
  v6 = v5;
  v7 = MEMORY[0x22766BAC4](&unk_221302AF0, a1);
  *(_QWORD *)(v3 - 128) = v1;
  *(_QWORD *)(v3 - 120) = a1;
  *(_QWORD *)(v3 - 112) = v1;
  *(_QWORD *)(v3 - 104) = v6;
  *(_QWORD *)(v3 - 96) = v7;
  *(_QWORD *)(v3 - 88) = v6;
  type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView();
}

uint64_t sub_2210B6278(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_BYTE *, uint64_t);
  _BYTE v30[80];

  *(_QWORD *)(v6 - 216) = a1;
  sub_221023FE4(&qword_25565A740, (void (*)(uint64_t))MEMORY[0x24BDEF650]);
  *(_QWORD *)(v6 - 128) = v2;
  *(_QWORD *)(v6 - 120) = v3;
  *(_QWORD *)(v6 - 112) = a1;
  *(_QWORD *)(v6 - 104) = v1;
  *(_QWORD *)(v6 - 96) = v8;
  v9 = sub_2212F48FC();
  *(_QWORD *)(v6 - 200) = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v30[-v13];
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v16 = *(_QWORD *)(v6 - 144);
  v17 = *(_QWORD *)(v6 - 160);
  *(_QWORD *)(v6 - 224) = v2;
  v15(v16, v17, v2);
  v18 = *(_QWORD *)(v6 - 176);
  v19 = v4;
  v20 = v4;
  v21 = *(_QWORD *)(v6 - 168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v20, v17, v21);
  v22 = v18;
  v23 = (*(unsigned __int8 *)(v18 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v24 = (char *)swift_allocObject();
  v25 = *(_QWORD *)(v6 - 192);
  *((_QWORD *)v24 + 2) = v2;
  *((_QWORD *)v24 + 3) = v25;
  v26 = *(_QWORD *)(v6 - 184);
  *((_QWORD *)v24 + 4) = v1;
  *((_QWORD *)v24 + 5) = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(&v24[v23], v19, v21);
  v27 = MEMORY[0x22766BAC4](&unk_221307660, *(_QWORD *)(v6 - 216));
  sub_221023FE4(&qword_25565A748, (void (*)(uint64_t))MEMORY[0x24BDEF680]);
  sub_2212F48F0();
  *(_QWORD *)(v6 - 136) = v27;
  MEMORY[0x22766BAC4](MEMORY[0x24BDF4A08], v9, v6 - 136);
  sub_221088D68((uint64_t)v12, v9, (uint64_t)v14);
  v28 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v6 - 200) + 8);
  v28(v12, v9);
  sub_221087210((uint64_t)v14, v9, *(_QWORD *)(v6 - 152));
  return ((uint64_t (*)(_BYTE *, uint64_t))v28)(v14, v9);
}

void sub_2210B6478(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[30];

  v14[8] = a4;
  v14[2] = a2;
  v14[11] = a1;
  v14[13] = a6;
  v8 = sub_2212F3888();
  v9 = (void (*)(uint64_t))MEMORY[0x24BDEEBA0];
  v14[12] = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v14[10] = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14[7] = (char *)v14 - v12;
  sub_221023FE4(&qword_2556589E0, v9);
  v14[23] = v8;
  v14[24] = a3;
  v14[25] = v13;
  v14[26] = a5;
  v14[1] = a5;
  type metadata accessor for SubscriptionStorePickerOptionsGroup();
}

void sub_2210B655C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 - 272) = a1;
  sub_221023FE4(&qword_25565A738, v1);
  v6 = v5;
  v7 = MEMORY[0x22766BAC4](&unk_221302AF0, a1);
  *(_QWORD *)(v3 - 288) = v7;
  *(_QWORD *)(v3 - 136) = v2;
  *(_QWORD *)(v3 - 128) = a1;
  *(_QWORD *)(v3 - 120) = v2;
  *(_QWORD *)(v3 - 112) = v6;
  *(_QWORD *)(v3 - 104) = v7;
  *(_QWORD *)(v3 - 96) = v6;
  type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView();
}

void sub_2210B65B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v12 - 248) = *(_QWORD *)(a1 - 8);
  v13 = MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v12 - 280) = (char *)&a9 - v14;
  *(_QWORD *)(v12 - 136) = v9;
  *(_QWORD *)(v12 - 128) = v10;
  *(_QWORD *)(v12 - 120) = *(_QWORD *)(v12 - 256);
  *(_QWORD *)(v12 - 112) = v11;
  type metadata accessor for SubscriptionStorePickerControlWrapper();
}

void sub_2210B6624(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 - 232);
  *(_DWORD *)(v4 - 292) = *(unsigned __int8 *)(v5 + *(int *)(a1 + 56));
  v6 = *(_QWORD *)(v4 - 264);
  sub_2212F3A8C();
  sub_2212F3A80();
  *(_QWORD *)(v4 - 192) = *(_QWORD *)(v4 - 304);
  *(_QWORD *)(v4 - 184) = v3;
  v7 = *(_QWORD *)(v4 - 312);
  *(_QWORD *)(v4 - 176) = v2;
  *(_QWORD *)(v4 - 168) = v7;
  *(_QWORD *)(v4 - 160) = v1;
  *(_QWORD *)(v4 - 152) = v5;
  sub_221120B44(v6);
}

uint64_t sub_2210B66B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 224) + 8);
  v6(v3, v1);
  v6(v2, v1);
  MEMORY[0x22766BAC4](&unk_221307660, v0);
  v7 = *(_QWORD *)(v5 - 280);
  sub_221088D68(v4, v0, v7);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 248) + 8);
  v8(v4, v0);
  sub_221087210(v7, v0, *(_QWORD *)(v5 - 216));
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v7, v0);
}

void sub_2210B6760(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  MEMORY[0x24BDAC7A8](a1);
  v1 = sub_2212F3888();
  MEMORY[0x24BDAC7A8](v1);
  sub_221023FE4(&qword_2556589E0, v2);
  type metadata accessor for SubscriptionStorePickerOptionsGroup();
}

void sub_2210B6830(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 - 160) = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v5);
  sub_2212F3A98();
  *(_QWORD *)(v4 - 120) = *(_QWORD *)(v4 - 152);
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = v1;
  *(_QWORD *)(v4 - 96) = v2;
  type metadata accessor for SubscriptionStorePickerControlWrapper();
}

void sub_2210B68A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v6 - 144) + 16))(v3, *(_QWORD *)(v6 - 136) + *(int *)(a1 + 52), v1);
  sub_2210B5D6C((__n128 *)(v6 - 120));
  sub_2210B6970(v5, v4, v2);
}

uint64_t sub_2210B68F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  MEMORY[0x22766BAC4](&unk_221302AF0, v1);
  sub_221088D68(v0, v1, v2);
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 160) + 8);
  v4(v0, v1);
  sub_221087210(v2, v1, *(_QWORD *)(v3 - 128));
  return ((uint64_t (*)(uint64_t, uint64_t))v4)(v2, v1);
}

void sub_2210B6970(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for SubscriptionStorePickerOptionsGroup();
}

uint64_t sub_2210B69D4(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v4 + a1[13], v3, v1);
  v6 = v4 + a1[14];
  v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)v6 = *(_OWORD *)v2;
  *(_OWORD *)(v6 + 16) = v7;
  *(_BYTE *)(v6 + 32) = *(_BYTE *)(v2 + 32);
  v8 = v4 + a1[15];
  result = swift_getKeyPath();
  *(_QWORD *)v8 = result;
  *(_QWORD *)(v8 + 8) = 0;
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  *(_WORD *)(v8 + 32) = 0;
  return result;
}

void sub_2210B6A48(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for SubscriptionStorePickerControlWrapper();
}

__n128 sub_2210B6AB8(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __n128 result;
  __int128 v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v6 + a1[13], v5, v1);
  *(_BYTE *)(v6 + a1[14]) = v4;
  *(_BYTE *)(v6 + a1[15]) = v3;
  v8 = v6 + a1[16];
  *(_QWORD *)v8 = swift_getKeyPath();
  *(_BYTE *)(v8 + 8) = 0;
  v9 = v6 + a1[17];
  result = *(__n128 *)v2;
  v11 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v2;
  *(_OWORD *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v2 + 32);
  return result;
}

void type metadata accessor for SubscriptionStorePickerControlWrapper()
{
  JUMPOUT(0x22766BA10);
}

void sub_2210B6B48()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17_15();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210B6B64()
{
  uint64_t v0;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(qword_25565A750);
  MEMORY[0x227669E98](&v2, v0);
  return v2;
}

uint64_t sub_2210B6BC4()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_25565A750);
  return sub_2212F486C();
}

void sub_2210B6C2C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v21 = a2;
  v3 = *(_QWORD *)(*(a1 - 1) + 64);
  v19 = *(a1 - 1);
  v20 = v3;
  v4 = MEMORY[0x24BDAC7A8](a1);
  v17 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v4 + 16);
  MEMORY[0x24BDAC7A8](v4);
  v14[0] = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2212F492C();
  v8 = a1[3];
  sub_2212F4944();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A7D8);
  v16 = v8;
  sub_2212F3348();
  sub_2212F5844();
  swift_getTupleTypeMetadata2();
  v9 = sub_2212F4A94();
  MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v9);
  v10 = sub_2212F4830();
  v11 = a1[4];
  v15 = a1[5];
  v12 = v15;
  v13 = MEMORY[0x22766BAC4](MEMORY[0x24BDF4700], v10);
  v22 = v6;
  v23 = v8;
  v24 = v10;
  v25 = v11;
  v26 = v12;
  v27 = v13;
  type metadata accessor for SubscriptionStorePickerOptionsGroup.PickerOption();
}

uint64_t sub_2210B6D90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  _BYTE v31[80];

  *(_QWORD *)(v8 - 264) = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255656B10);
  *(_QWORD *)(v8 - 240) = sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556592A8);
  v9 = sub_2212F3348();
  sub_221023FE4(&qword_25565A7E0, (void (*)(uint64_t))MEMORY[0x24BDF4B30]);
  *(_QWORD *)(v8 - 136) = v1;
  *(_QWORD *)(v8 - 128) = v7;
  *(_QWORD *)(v8 - 120) = v9;
  *(_QWORD *)(v8 - 112) = v2;
  *(_QWORD *)(v8 - 104) = v10;
  v11 = sub_2212F48FC();
  *(_QWORD *)(v8 - 208) = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v8 - 224) = &v31[-v15];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, v6, v1);
  v16 = *(_QWORD *)(v8 - 200);
  v17 = *(_QWORD *)(v8 - 232);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v6, v4);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = (char *)swift_allocObject();
  v20 = *(_QWORD *)(v8 - 248);
  *((_QWORD *)v19 + 2) = v1;
  *((_QWORD *)v19 + 3) = v20;
  v21 = *(_QWORD *)(v8 - 256);
  *((_QWORD *)v19 + 4) = v2;
  *((_QWORD *)v19 + 5) = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(&v19[v18], v17, v4);
  v22 = MEMORY[0x22766BAC4](&unk_221302BF0, *(_QWORD *)(v8 - 264));
  sub_221024548(&qword_255656B08, &qword_255656B10);
  *(_QWORD *)(v8 - 152) = v22;
  *(_QWORD *)(v8 - 144) = v23;
  v24 = MEMORY[0x24BDED308];
  v25 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], *(_QWORD *)(v8 - 240), v8 - 152);
  sub_221024548(qword_2556592D0, &qword_2556592A8);
  *(_QWORD *)(v8 - 168) = v25;
  *(_QWORD *)(v8 - 160) = v26;
  v27 = MEMORY[0x22766BAC4](v24, v9, v8 - 168);
  sub_221023FE4(&qword_255656100, (void (*)(uint64_t))MEMORY[0x24BDF4B58]);
  sub_2212F48F0();
  *(_QWORD *)(v8 - 176) = v27;
  MEMORY[0x22766BAC4](MEMORY[0x24BDF4A08], v11, v8 - 176);
  v28 = *(_QWORD *)(v8 - 224);
  sub_221088D68((uint64_t)v14, v11, v28);
  v29 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 208) + 8);
  v29((uint64_t)v14, v11);
  sub_221087210(v28, v11, *(_QWORD *)(v8 - 184));
  return v29(v28, v11);
}

void sub_2210B704C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v21 = a2;
  v18 = a7;
  v19 = a1;
  sub_2212F4944();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A7D8);
  sub_2212F3348();
  sub_2212F5844();
  swift_getTupleTypeMetadata2();
  v15 = sub_2212F4A94();
  v14[4] = MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v15);
  v11 = sub_2212F4830();
  MEMORY[0x24BDAC7A8](v11);
  v20 = (char *)v14 - v12;
  v13 = MEMORY[0x22766BAC4](MEMORY[0x24BDF4700], v11);
  v23 = a3;
  v24 = a4;
  v26 = a3;
  v27 = a4;
  v17 = v11;
  v28 = v11;
  v29 = a5;
  v25 = a5;
  v22 = a6;
  v30 = a6;
  v31 = v13;
  v16 = v13;
  type metadata accessor for SubscriptionStorePickerOptionsGroup.PickerOption();
}

void sub_2210B7184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  int EnumTagSinglePayload;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  *(_QWORD *)(v9 - 312) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v9 - 320) = (char *)&a9 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255656B10);
  *(_QWORD *)(v9 - 304) = a1;
  v12 = sub_2212F3348();
  *(_QWORD *)(v9 - 280) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v9 - 288) = (char *)&a9 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556592A8);
  *(_QWORD *)(v9 - 264) = v12;
  v14 = sub_2212F3348();
  *(_QWORD *)(v9 - 248) = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v9 - 272) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v9 - 256) = (char *)&a9 - v17;
  v18 = type metadata accessor for Subscription();
  *(_QWORD *)(v9 - 376) = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&a9 - v22;
  v24 = type metadata accessor for SubscriptionStoreControlOption(0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_2212F32B8();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255658AA8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v9 - 360) = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&a9 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&a9 - v37;
  sub_2212F4920();
  sub_221088B68();
  sub_2212F32C4();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  *(_QWORD *)(v9 - 336) = v38;
  sub_221088C04((uint64_t)v38, (uint64_t)v36);
  v39 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, v39);
  *(_QWORD *)(v9 - 240) = v14;
  *(_QWORD *)(v9 - 368) = v39;
  *(_DWORD *)(v9 - 380) = EnumTagSinglePayload;
  if (EnumTagSinglePayload == 1)
  {
    sub_221014F5C((uint64_t)v36, &qword_255658AA8);
    v42 = 0;
    v43 = 0;
    v44 = -1;
  }
  else
  {
    sub_2210BAE50((uint64_t)v36, (uint64_t)v26, type metadata accessor for SubscriptionStoreControlOption);
    sub_221011A28((uint64_t)v36, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
    sub_2210BAE50((uint64_t)v26, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
    sub_221011A28((uint64_t)v26, type metadata accessor for SubscriptionStoreControlOption);
    v45 = &v23[*(int *)(*(_QWORD *)(v9 - 376) + 20)];
    v42 = *(_QWORD *)v45;
    v46 = v45[8];
    sub_2210BAE50((uint64_t)v23, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
    if (v46 == 2)
    {
      v42 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
      v43 = v47;
      sub_221011A28((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
      sub_221011A28((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
      v44 = 1;
    }
    else
    {
      v43 = v46 & 1;
      sub_221011A28((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
      sub_221011A28((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
      v44 = 0;
    }
  }
  MEMORY[0x24BDAC7A8](v41);
  v48 = *(_QWORD *)(v9 - 192);
  v49 = *(_QWORD *)(v9 - 184);
  *(&a9 - 10) = v48;
  *(&a9 - 9) = v49;
  v50 = *(_QWORD *)(v9 - 176);
  v51 = *(_QWORD *)(v9 - 208);
  v52 = *(_QWORD *)(v9 - 200);
  *(&a9 - 8) = v50;
  *(&a9 - 7) = v52;
  *(&a9 - 6) = v53;
  *(&a9 - 5) = v51;
  *(_QWORD *)(v9 - 224) = v42;
  *(&a9 - 4) = v42;
  *(&a9 - 3) = v43;
  *(_QWORD *)(v9 - 376) = v43;
  *((_BYTE *)&a9 - 16) = v44;
  sub_221074860();
  sub_2212F4824();
  *(_QWORD *)(v9 - 136) = v48;
  *(_QWORD *)(v9 - 128) = v49;
  *(_QWORD *)(v9 - 120) = v50;
  *(_QWORD *)(v9 - 112) = v52;
  type metadata accessor for SubscriptionStorePickerOptionsGroup();
}

void sub_2210B760C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v4 = sub_2210B6B64();
  v5 = v2;
  v6 = v3;
  if (*(_DWORD *)(v1 - 380) == 1)
  {
    if (v3 == 0xFF)
      goto LABEL_7;
  }
  else
  {
    if (v3 == 0xFF)
      goto LABEL_7;
    sub_221295FA0(*(_QWORD *)(v1 - 224), *(_QWORD *)(v1 - 376), v0 & 1, v4, v2, v3 & 1);
  }
  sub_221046EBC(v4, v5, v6);
LABEL_7:
  sub_2210B7E8C();
}

void sub_2210B76E0()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_221046EBC(v1, v2, v0);
  sub_2210B817C(*(_QWORD *)(v3 - 216), *(_QWORD *)(v3 - 296), *(_QWORD *)(v3 - 320));
}

void sub_2210B7738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v1 - 336);
  __swift_getEnumTagSinglePayload(v2, 1, *(_QWORD *)(v1 - 368));
  v3 = *(_QWORD *)(v1 - 304);
  v4 = MEMORY[0x22766BAC4](&unk_221302BF0, v3);
  v5 = *(_QWORD *)(v1 - 288);
  sub_2212F44DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 312) + 8))(v0, v3);
  v6 = *(_QWORD *)(v1 - 360);
  sub_221088C04(v2, v6);
  sub_221024548(&qword_255656B08, &qword_255656B10);
  *(_QWORD *)(v1 - 152) = v4;
  *(_QWORD *)(v1 - 144) = v7;
  v8 = MEMORY[0x24BDED308];
  v9 = *(_QWORD *)(v1 - 264);
  v10 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v9, v1 - 152);
  v11 = *(_QWORD *)(v1 - 272);
  sub_221087DB4(v6, v9, v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 280) + 8))(v5, v9);
  sub_221024548(qword_2556592D0, &qword_2556592A8);
  *(_QWORD *)(v1 - 168) = v10;
  *(_QWORD *)(v1 - 160) = v12;
  v13 = *(_QWORD *)(v1 - 240);
  MEMORY[0x22766BAC4](v8, v13, v1 - 168);
  v14 = *(_QWORD *)(v1 - 256);
  sub_221088D68(v11, v13, v14);
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 248) + 8);
  v15(v11, v13);
  sub_221087210(v14, v13, *(_QWORD *)(v1 - 232));
  v15(v14, v13);
  sub_221014F5C(v2, &qword_255658AA8);
}

void sub_2210B78F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v34 = a8;
  v33 = a6;
  v30 = a5;
  v29 = a4;
  v28 = a3;
  v25 = sub_2212F3A44();
  v24[2] = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v24[1] = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A7D8);
  v12 = sub_2212F3348();
  v27 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v24[3] = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v26 = (char *)v24 - v15;
  v16 = sub_2212F5844();
  v36 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  v32 = (char *)v24 - v18;
  v19 = sub_2212F4944();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v31 = (char *)v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v37 = v22;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v35((char *)v24 - v23, a1, v19);
  v39 = v33;
  v40 = a7;
  v33 = a7;
  v41 = v34;
  v42 = a9;
  v38 = a9;
  type metadata accessor for SubscriptionStorePickerOptionsGroup();
}

uint64_t sub_2210B7B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  int v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);

  *(_QWORD *)(v7 - 256) = v4;
  v8 = sub_2210B6B64();
  *(_QWORD *)(v7 - 272) = v5;
  *(_QWORD *)(v7 - 240) = v6;
  if (v10 == 0xFF)
  {
    if (*(_DWORD *)(v7 - 292) == 0xFF)
      goto LABEL_6;
LABEL_8:
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
    sub_221024548(&qword_25565A800, &qword_25565A7D8);
    *(_QWORD *)(v7 - 136) = *(_QWORD *)(v7 - 216);
    *(_QWORD *)(v7 - 128) = v24;
    MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v2, v7 - 136);
    goto LABEL_9;
  }
  v11 = v8;
  v12 = v9;
  v13 = v10;
  v14 = *(_DWORD *)(v7 - 292);
  if ((_BYTE)v14 == 0xFF)
  {
    sub_221046EBC(v8, v9, v10);
    goto LABEL_8;
  }
  v15 = sub_221295FA0(v8, v9, v10 & 1, *(_QWORD *)(v7 - 312), *(_QWORD *)(v7 - 304), v14 & 1);
  sub_221046EBC(v11, v12, v13);
  if ((v15 & 1) == 0)
    goto LABEL_8;
LABEL_6:
  sub_221020424();
  v16 = *(_QWORD *)(v7 - 360);
  sub_2212F3C0C();
  v17 = sub_2210BB0E8();
  v18 = *(_QWORD *)(v7 - 344);
  v19 = *(_QWORD *)(v7 - 216);
  sub_2210C85B0(v16, v20, *(_QWORD *)(v7 - 264), MEMORY[0x24BDEFBC8], v19, v17, v18);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 352) + 8))(v16, *(_QWORD *)(v7 - 336));
  sub_221024548(&qword_25565A800, &qword_25565A7D8);
  *(_QWORD *)(v7 - 208) = v19;
  *(_QWORD *)(v7 - 200) = v21;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v2, v7 - 208);
  v22 = *(_QWORD *)(v7 - 328);
  sub_221088D68(v18, v2, v22);
  v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 320) + 8);
  v23(v18, v2);
  sub_221087210(v22, v2, v1);
  v23(v22, v2);
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v2);
LABEL_9:
  v25 = *(_QWORD *)(v7 - 280);
  v26 = *(_QWORD *)(v7 - 288);
  sub_2211FBB24(v1, v25);
  v27 = *(_QWORD *)(v7 - 232);
  v28 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v28(v1, v0);
  v29 = *(_QWORD *)(v7 - 240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 248))(v26, v3, v29);
  *(_QWORD *)(v7 - 120) = v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v1, v25, v0);
  *(_QWORD *)(v7 - 112) = v1;
  *(_QWORD *)(v7 - 152) = v29;
  *(_QWORD *)(v7 - 144) = v0;
  sub_221023FE4(&qword_2556560F8, (void (*)(uint64_t))MEMORY[0x24BDF4B58]);
  *(_QWORD *)(v7 - 168) = v30;
  sub_221024548(&qword_25565A800, &qword_25565A7D8);
  *(_QWORD *)(v7 - 184) = *(_QWORD *)(v7 - 216);
  *(_QWORD *)(v7 - 176) = v31;
  *(_QWORD *)(v7 - 192) = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v2, v7 - 184);
  *(_QWORD *)(v7 - 160) = MEMORY[0x22766BAC4](MEMORY[0x24BDF5578], v0, v7 - 192);
  sub_22122F0B4(v7 - 120, 2, v7 - 152);
  v28(v25, v0);
  v32 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 224) + 8);
  v32(v3, v29);
  v28(v1, v0);
  return ((uint64_t (*)(uint64_t, uint64_t))v32)(v26, v29);
}

void sub_2210B7E8C()
{
  type metadata accessor for SubscriptionStorePickerOptionsGroup();
}

void (*sub_2210B7EE4(uint64_t a1))()
{
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)();
  uint64_t v23;

  v9 = *(_QWORD *)(a1 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v23 - v11;
  if (v6)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v7 - 136), a1);
    v13 = *(unsigned __int8 *)(v9 + 80);
    *(_QWORD *)(v7 - 136) = v2;
    v14 = (v13 + 48) & ~v13;
    v15 = (v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = v5;
    v16[3] = v4;
    v17 = *(_QWORD *)(v7 - 128);
    v16[4] = v3;
    v16[5] = v17;
    v18 = (char *)v16 + v14;
    v2 = *(_QWORD *)(v7 - 136);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v12, a1);
    v19 = (char *)v16 + v15;
    v20 = *(_QWORD *)(v7 - 120);
    *(_QWORD *)v19 = v20;
    *((_QWORD *)v19 + 1) = v2;
    v19[16] = v1 & 1;
    v21 = sub_2210BAFBC;
  }
  else
  {
    v21 = (void (*)())nullsub_1;
    v20 = *(_QWORD *)(v7 - 120);
  }
  sub_22103D934(v20, v2, v1);
  return v21;
}

void sub_2210B7FE8()
{
  type metadata accessor for SubscriptionStorePickerOptionsGroup();
}

uint64_t sub_2210B8030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v11;
  _OWORD v12[2];
  char v13;
  uint64_t v14;
  char v15;

  v7 = v1 + *(int *)(a1 + 60);
  v8 = *(_OWORD *)(v7 + 16);
  v5[5] = *(_OWORD *)v7;
  v5[6] = v8;
  *(_WORD *)(v6 - 128) = *(_WORD *)(v7 + 32);
  sub_2210BB080(v6 - 160, v6 - 120, &qword_25565A7F0);
  sub_2210BB048(v6 - 120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2210BA204);
  sub_2210456C4();
  sub_2210BB048(v6 - 160, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2210BA2C0);
  sub_2210BB080((uint64_t)&v11, (uint64_t)v12, &qword_2556573F0);
  if (*((_QWORD *)&v12[0] + 1))
  {
    v9 = v12[1];
    *v5 = v12[0];
    v5[1] = v9;
    v15 = v13;
    sub_2210BB080((uint64_t)(v5 + 1), v6 - 192, &qword_25565A7F8);
    *(_QWORD *)(v6 - 168) = v14;
    sub_22103D94C(v3, v2, v4);
    __swift_instantiateConcreteTypeFromMangledName(qword_25565A750);
    sub_2212F486C();
    sub_2210368C4(v6 - 168);
    swift_release();
    sub_2210BB0B8(v6 - 192);
  }
  sub_22103D94C(v3, v2, v4);
  return sub_2210B6BC4();
}

void sub_2210B817C(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for SubscriptionStorePickerOptionsGroup.PickerOption();
}

uint64_t sub_2210B81F0(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;

  *(_BYTE *)(v4 + a1[17]) = v3;
  v5 = (_QWORD *)(v4 + a1[18]);
  *v5 = v2;
  v5[1] = v1;
  v6 = v4 + a1[19];
  result = swift_getKeyPath();
  *(_QWORD *)v6 = result;
  *(_BYTE *)(v6 + 8) = 0;
  return result;
}

uint64_t sub_2210B8240(uint64_t a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + *(int *)(a1 + 68));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A8B8);
  sub_2212F38DC();
  if (v2 == 1)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2212FD640;
    sub_2212F38C4();
  }
  else
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2212FF8E0;
  }
  sub_2212F38D0();
  sub_221023FE4(&qword_25565A8C0, (void (*)(uint64_t))MEMORY[0x24BDEED88]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A8C8);
  sub_221024548(&qword_25565A8D0, &qword_25565A8C8);
  return sub_2212F58E0();
}

uint64_t sub_2210B837C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  _QWORD v51[2];
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];

  v44 = a2;
  v2 = *(_QWORD *)(a1 + 32);
  v40 = *(_QWORD *)(a1 + 56);
  v4 = sub_2212F47AC();
  sub_2212F3E40();
  v5 = (void (*)(uint64_t))MEMORY[0x24BDF1088];
  v6 = sub_2212F3348();
  v37 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A890);
  v7 = MEMORY[0x22766BAC4](MEMORY[0x24BDF43B0], v4);
  sub_221023FE4(&qword_255656B50, v5);
  v58[0] = v7;
  v58[1] = v8;
  v38 = v6;
  v36 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v6, v58);
  sub_221024548(&qword_25565A898, &qword_25565A890);
  v35 = v9;
  v54 = v6;
  v55 = v37;
  v56 = v36;
  v57 = v9;
  MEMORY[0x22766BA58](255, &v54, MEMORY[0x24BDF2F58], 0);
  v10 = sub_2212F3A20();
  v11 = sub_2212F4674();
  v39 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A8A0);
  v14 = sub_2212F3348();
  v41 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v33 - v15;
  v17 = sub_2212F3348();
  v42 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v33 - v21;
  v34 = a1;
  v45 = *(_OWORD *)(a1 + 16);
  v46 = v2;
  v47 = *(_OWORD *)(a1 + 40);
  v23 = v40;
  v24 = v43;
  v48 = v40;
  v49 = v43;
  v54 = v38;
  v55 = v37;
  v56 = v36;
  v57 = v35;
  v53[0] = swift_getOpaqueTypeConformance2();
  v53[1] = v23;
  v25 = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v10, v53);
  sub_2212F4668();
  swift_getKeyPath();
  LOBYTE(v54) = 1;
  v52 = v25;
  v26 = MEMORY[0x22766BAC4](MEMORY[0x24BDF3F50], v11, &v52);
  sub_2212F4194();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v11);
  swift_getKeyPath();
  LOBYTE(v54) = *(_BYTE *)(v24 + *(int *)(v34 + 68));
  sub_221024548(&qword_25565A8A8, &qword_25565A8A0);
  v28 = v27;
  v51[0] = v26;
  v51[1] = v27;
  v29 = MEMORY[0x24BDED308];
  v30 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v14, v51);
  sub_2212F4194();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v14);
  v50[0] = v30;
  v50[1] = v28;
  MEMORY[0x22766BAC4](v29, v17, v50);
  sub_221088D68((uint64_t)v20, v17, (uint64_t)v22);
  v31 = *(void (**)(char *, uint64_t))(v42 + 8);
  v31(v20, v17);
  sub_221087210((uint64_t)v22, v17, v44);
  return ((uint64_t (*)(char *, uint64_t))v31)(v22, v17);
}

void sub_2210B87EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[21];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v20 = a8;
  v18[14] = *(_QWORD *)(a4 - 8);
  v14 = MEMORY[0x24BDAC7A8](a1);
  v18[10] = (char *)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18[8] = (char *)v18 - v16;
  v19 = sub_2212F38DC();
  v18[15] = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v18[4] = (char *)v18 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[17] = a2;
  v21 = a2;
  v22 = a3;
  v18[18] = a3;
  v23 = a4;
  v24 = a5;
  v18[19] = a5;
  v18[20] = a6;
  v25 = a6;
  v26 = a7;
  type metadata accessor for SubscriptionStorePickerOptionsGroup.PickerOption();
}

uint64_t sub_2210B8910(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  _BYTE v65[96];

  *(_QWORD *)(v4 - 440) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 456) = &v65[-v6];
  *(_QWORD *)(v4 - 248) = v1;
  v7 = sub_2212F47AC();
  *(_QWORD *)(v4 - 408) = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v4 - 424) = &v65[-v8];
  sub_2212F3E40();
  v9 = (void (*)(uint64_t))MEMORY[0x24BDF1088];
  v10 = sub_2212F3348();
  *(_QWORD *)(v4 - 384) = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v4 - 352) = &v65[-v11];
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A890);
  v13 = MEMORY[0x24BDF43B0];
  *(_QWORD *)(v4 - 376) = v7;
  v14 = MEMORY[0x22766BAC4](v13, v7);
  sub_221023FE4(&qword_255656B50, v9);
  *(_QWORD *)(v4 - 464) = v14;
  *(_QWORD *)(v4 - 104) = v14;
  *(_QWORD *)(v4 - 96) = v15;
  v16 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v10, v4 - 104);
  sub_221024548(&qword_25565A898, &qword_25565A890);
  *(_QWORD *)(v4 - 296) = v10;
  *(_QWORD *)(v4 - 224) = v10;
  *(_QWORD *)(v4 - 216) = v12;
  *(_QWORD *)(v4 - 256) = v12;
  *(_QWORD *)(v4 - 264) = v16;
  *(_QWORD *)(v4 - 208) = v16;
  *(_QWORD *)(v4 - 200) = v17;
  *(_QWORD *)(v4 - 272) = v17;
  v18 = MEMORY[0x22766BA58](0, v4 - 224, MEMORY[0x24BDF2F58], 0);
  *(_QWORD *)(v4 - 432) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = &v65[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v4 - 392) = &v65[-v22];
  *(_QWORD *)(v4 - 304) = v23;
  v24 = sub_2212F3A20();
  *(_QWORD *)(v4 - 280) = v24;
  *(_QWORD *)(v4 - 288) = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v4 - 232) = &v65[-v25];
  v26 = v2;
  v27 = v2 + *(int *)(a1 + 76);
  v28 = *(_QWORD *)v27;
  LOBYTE(v12) = *(_BYTE *)(v27 + 8);
  sub_221017C08(*(_QWORD *)v27, v12);
  sub_22104359C();
  LOBYTE(v16) = v29;
  sub_221017894(v28, v12);
  if ((v16 & 1) != 0)
  {
    v30 = *(_QWORD *)(v4 - 440);
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
    v32 = *(_QWORD *)(v4 - 456);
    v33 = v26;
    *(_QWORD *)(v4 - 480) = v26;
    v34 = a1;
    v31(v32, v33, a1);
    v35 = (*(unsigned __int8 *)(v30 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v36 = (char *)swift_allocObject();
    v37 = *(_QWORD *)(v4 - 344);
    v38 = *(_QWORD *)(v4 - 448);
    v39 = v3;
    *(_QWORD *)(v4 - 472) = v3;
    v40 = *(_QWORD *)(v4 - 336);
    *((_QWORD *)v36 + 2) = v37;
    *((_QWORD *)v36 + 3) = v40;
    *((_QWORD *)v36 + 4) = v39;
    *(_QWORD *)(v4 - 368) = v21;
    v41 = *(_QWORD *)(v4 - 328);
    v42 = *(_QWORD *)(v4 - 320);
    *((_QWORD *)v36 + 5) = v41;
    *((_QWORD *)v36 + 6) = v42;
    v43 = *(_QWORD *)(v4 - 248);
    *((_QWORD *)v36 + 7) = v43;
    v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 32);
    v45 = v43;
    v46 = v44(&v36[v35], v32, v34);
    MEMORY[0x24BDAC7A8](v46);
    *(_QWORD *)&v65[-64] = v37;
    *(_QWORD *)&v65[-56] = v40;
    *(_QWORD *)&v65[-48] = *(_QWORD *)(v4 - 472);
    *(_QWORD *)&v65[-40] = v41;
    *(_QWORD *)&v65[-32] = v42;
    *(_QWORD *)&v65[-24] = v45;
    v47 = *(_QWORD *)(v4 - 480);
    *(_QWORD *)&v65[-16] = v47;
    v48 = *(_QWORD *)(v4 - 424);
    sub_2212F4794();
    sub_2210B8240(v34);
    v49 = *(_QWORD *)(v4 - 352);
    v50 = *(_QWORD *)(v4 - 376);
    sub_2212F435C();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 360) + 8))(v38, *(_QWORD *)(v4 - 312));
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 408) + 8))(v48, v50);
    *(_BYTE *)(v4 - 224) = *(_BYTE *)(v47 + *(int *)(v34 + 68));
    *(_QWORD *)(v4 - 216) = swift_getKeyPath();
    *(_BYTE *)(v4 - 176) = 0;
    *(_QWORD *)(v4 - 168) = swift_getKeyPath();
    *(_WORD *)(v4 - 160) = 0;
    *(_QWORD *)(v4 - 152) = swift_getKeyPath();
    *(_BYTE *)(v4 - 144) = 0;
    *(_QWORD *)(v4 - 136) = swift_getKeyPath();
    *(_BYTE *)(v4 - 128) = 0;
    v51 = *(_QWORD *)(v4 - 368);
    v52 = *(_QWORD *)(v4 - 296);
    v53 = *(_QWORD *)(v4 - 256);
    v54 = *(_QWORD *)(v4 - 264);
    v55 = *(_QWORD *)(v4 - 272);
    sub_2212F4320();
    sub_221014F5C(v4 - 224, &qword_25565A890);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 384) + 8))(v49, v52);
    *(_QWORD *)(v4 - 224) = v52;
    *(_QWORD *)(v4 - 216) = v53;
    *(_QWORD *)(v4 - 208) = v54;
    *(_QWORD *)(v4 - 200) = v55;
    swift_getOpaqueTypeConformance2();
    v56 = *(_QWORD *)(v4 - 392);
    v57 = *(_QWORD *)(v4 - 304);
    sub_221088D68(v51, v57, v56);
    v58 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 432) + 8);
    v58(v51, v57);
    sub_221087210(v56, v57, v51);
    sub_22113B0A4();
    v58(v51, v57);
    v58(v56, v57);
  }
  else
  {
    v59 = *(_QWORD *)(v4 - 416);
    v45 = *(_QWORD *)(v4 - 248);
    sub_221088D68(v26, v3, v59);
    v60 = *(_QWORD *)(v4 - 400);
    sub_221087210(v59, v3, v60);
    v52 = *(_QWORD *)(v4 - 296);
    v53 = *(_QWORD *)(v4 - 256);
    *(_QWORD *)(v4 - 224) = v52;
    *(_QWORD *)(v4 - 216) = v53;
    v54 = *(_QWORD *)(v4 - 264);
    v55 = *(_QWORD *)(v4 - 272);
    *(_QWORD *)(v4 - 208) = v54;
    *(_QWORD *)(v4 - 200) = v55;
    swift_getOpaqueTypeConformance2();
    sub_22113B11C();
    v61 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 368) + 8);
    v61(v60, v3);
    v61(v59, v3);
  }
  *(_QWORD *)(v4 - 224) = v52;
  *(_QWORD *)(v4 - 216) = v53;
  *(_QWORD *)(v4 - 208) = v54;
  *(_QWORD *)(v4 - 200) = v55;
  *(_QWORD *)(v4 - 120) = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v4 - 112) = v45;
  v62 = *(_QWORD *)(v4 - 280);
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v62, v4 - 120);
  v63 = *(_QWORD *)(v4 - 232);
  sub_221087210(v63, v62, *(_QWORD *)(v4 - 240));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 288) + 8))(v63, v62);
}

uint64_t sub_2210B8FF8()
{
  sub_2212F4A34();
  sub_2212F2E74();
  sub_2210BBC4C();
  sub_2212F2E8C();
  sub_2212F3390();
  return swift_release();
}

void sub_2210B90A4()
{
  type metadata accessor for SubscriptionStorePickerOptionsGroup.PickerOption();
}

uint64_t sub_2210B90D0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + *(int *)(a1 + 72)))();
}

uint64_t sub_2210B90F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221088D68(v6, v9, (uint64_t)v8);
  sub_221087210((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
}

uint64_t sub_2210B9188()
{
  return sub_2210B9DE0((void (*)(void))sub_2210BBA98);
}

uint64_t sub_2210B919C(uint64_t a1)
{
  return sub_2210B9E20(a1, (void (*)(void))sub_2210BBA98);
}

uint64_t sub_2210B91B0()
{
  return sub_2210B9DE0((void (*)(void))sub_2210B91D8);
}

uint64_t sub_2210B91C4(uint64_t a1)
{
  return sub_2210B9E20(a1, (void (*)(void))sub_2210B91D8);
}

unint64_t sub_2210B91D8()
{
  unint64_t result;

  result = qword_25565A6B0[0];
  if (!qword_25565A6B0[0])
  {
    result = MEMORY[0x22766BAC4](&unk_2213029E8, &_s34SubscriptionPickerOptionIsSelectedON);
    atomic_store(result, qword_25565A6B0);
  }
  return result;
}

ValueMetadata *_s34SubscriptionPickerOptionIsSelectedOMa()
{
  return &_s34SubscriptionPickerOptionIsSelectedON;
}

uint64_t sub_2210B9224()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2210B92D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_QWORD *)(v7 + 64);
  v12 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  v13 = (*(_DWORD *)(v6 + 80) | v8) & 0x100000;
  if (v12 > 7 || v13 != 0 || ((v11 + (v10 & ~v9) + 25) & 0xFFFFFFFFFFFFFFF8) + 33 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, v18, v5);
    v19 = (_BYTE *)((((unint64_t)v4 + v10) & v17) + v11);
    v20 = (_BYTE *)(v18 + v11);
    *v19 = *v20;
    v19[1] = v20[1];
    v21 = (unint64_t)(v19 + 9) & 0xFFFFFFFFFFFFFFF8;
    v22 = (unint64_t)(v20 + 9) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)v22;
    v24 = *(_BYTE *)(v22 + 8);
    sub_221017C08(*(_QWORD *)v22, v24);
    *(_QWORD *)v21 = v23;
    *(_BYTE *)(v21 + 8) = v24;
    v25 = (unint64_t)(v19 + 25) & 0xFFFFFFFFFFFFFFF8;
    v26 = (unint64_t)(v20 + 25) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
    v27 = *(unsigned __int8 *)(v26 + 32);
    swift_retain();
    swift_retain();
    if (v27 == 255)
    {
      v28 = *(_OWORD *)(v26 + 16);
      *(_BYTE *)(v25 + 32) = *(_BYTE *)(v26 + 32);
      *(_OWORD *)(v25 + 16) = v28;
    }
    else
    {
      v29 = v27 & 1;
      v30 = *(_QWORD *)(v26 + 16);
      v31 = *(_QWORD *)(v26 + 24);
      sub_22103D94C(v30, v31, v29);
      *(_QWORD *)(v25 + 16) = v30;
      *(_QWORD *)(v25 + 24) = v31;
      *(_BYTE *)(v25 + 32) = v29;
    }
  }
  return v4;
}

uint64_t sub_2210B9484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  int v11;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  sub_221017894(*(_QWORD *)((v8 + 9) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v8 + 9) & 0xFFFFFFFFFFFFFFF8) + 8));
  v9 = (v8 + 25) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  result = swift_release();
  v11 = *(unsigned __int8 *)(v9 + 32);
  if (v11 != 255)
    return sub_221015344(*(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), v11 & 1);
  return result;
}

uint64_t sub_2210B953C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (_BYTE *)(v11 + v13);
  v15 = v12 + v13;
  *v14 = *(_BYTE *)(v12 + v13);
  v14[1] = *(_BYTE *)(v12 + v13 + 1);
  v16 = (v11 + v13 + 9) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v12 + v13 + 9) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v17;
  LOBYTE(v12) = *(_BYTE *)(v17 + 8);
  sub_221017C08(*(_QWORD *)v17, v12);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v12;
  v19 = (unint64_t)(v14 + 25) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v15 + 25) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  v21 = *(unsigned __int8 *)(v20 + 32);
  swift_retain();
  swift_retain();
  if (v21 == 255)
  {
    v22 = *(_OWORD *)(v20 + 16);
    *(_BYTE *)(v19 + 32) = *(_BYTE *)(v20 + 32);
    *(_OWORD *)(v19 + 16) = v22;
  }
  else
  {
    v23 = v21 & 1;
    v24 = *(_QWORD *)(v20 + 16);
    v25 = *(_QWORD *)(v20 + 24);
    sub_22103D94C(v24, v25, v23);
    *(_QWORD *)(v19 + 16) = v24;
    *(_QWORD *)(v19 + 24) = v25;
    *(_BYTE *)(v19 + 32) = v23;
  }
  return a1;
}

uint64_t sub_2210B9674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  __int128 *v23;
  __int128 *v24;
  int v25;
  char v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (_BYTE *)(v11 + v13);
  v15 = v12 + v13;
  *v14 = *(_BYTE *)(v12 + v13);
  v14[1] = *(_BYTE *)(v12 + v13 + 1);
  v16 = (v11 + v13 + 9) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v12 + v13 + 9) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v17;
  LOBYTE(v12) = *(_BYTE *)(v17 + 8);
  sub_221017C08(*(_QWORD *)v17, v12);
  v19 = *(_QWORD *)v16;
  v20 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v12;
  sub_221017894(v19, v20);
  v21 = (unint64_t)(v14 + 25) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v15 + 25) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  swift_retain();
  swift_release();
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  swift_retain();
  swift_release();
  v23 = (__int128 *)(v21 + 16);
  v24 = (__int128 *)(v22 + 16);
  v25 = *(unsigned __int8 *)(v22 + 32);
  if (*(unsigned __int8 *)(v21 + 32) == 255)
  {
    if (v25 == 255)
    {
      v27 = *v24;
      *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
      *v23 = v27;
    }
    else
    {
      v34 = v25 & 1;
      v35 = *(_QWORD *)(v22 + 16);
      v36 = *(_QWORD *)(v22 + 24);
      sub_22103D94C(v35, v36, v25 & 1);
      *(_QWORD *)(v21 + 16) = v35;
      *(_QWORD *)(v21 + 24) = v36;
      *(_BYTE *)(v21 + 32) = v34;
    }
  }
  else if (v25 == 255)
  {
    sub_2210B982C(v21 + 16);
    v26 = *(_BYTE *)(v22 + 32);
    *v23 = *v24;
    *(_BYTE *)(v21 + 32) = v26;
  }
  else
  {
    v28 = v25 & 1;
    v29 = *(_QWORD *)(v22 + 16);
    v30 = *(_QWORD *)(v22 + 24);
    sub_22103D94C(v29, v30, v25 & 1);
    v31 = *(_QWORD *)(v21 + 16);
    v32 = *(_QWORD *)(v21 + 24);
    v33 = *(_BYTE *)(v21 + 32);
    *(_QWORD *)(v21 + 16) = v29;
    *(_QWORD *)(v21 + 24) = v30;
    *(_BYTE *)(v21 + 32) = v28;
    sub_221015344(v31, v32, v33);
  }
  return a1;
}

uint64_t sub_2210B982C(uint64_t a1)
{
  destroy for Subscription.ID(a1);
  return a1;
}

uint64_t sub_2210B9860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (_BYTE *)(v11 + v13);
  v15 = (_BYTE *)(v12 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  v16 = (unint64_t)(v14 + 9) & 0xFFFFFFFFFFFFFFF8;
  v17 = (unint64_t)(v15 + 9) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = v18;
  v19 = (unint64_t)(v14 + 25) & 0xFFFFFFFFFFFFFFF8;
  v20 = (unint64_t)(v15 + 25) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_OWORD *)v20;
  v21 = *(_OWORD *)(v20 + 16);
  *(_BYTE *)(v19 + 32) = *(_BYTE *)(v20 + 32);
  *(_OWORD *)v19 = v22;
  *(_OWORD *)(v19 + 16) = v21;
  return a1;
}

uint64_t sub_2210B9930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  __int128 *v23;
  __int128 *v24;
  int v25;
  __int128 v26;
  int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = (_BYTE *)(v11 + v13);
  v15 = v12 + v13;
  *v14 = *(_BYTE *)(v12 + v13);
  v14[1] = *(_BYTE *)(v12 + v13 + 1);
  v16 = (unint64_t)(v14 + 9) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v15 + 9) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v17;
  LOBYTE(v17) = *(_BYTE *)(v17 + 8);
  v19 = *(_QWORD *)v16;
  v20 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v17;
  sub_221017894(v19, v20);
  v21 = (unint64_t)(v14 + 25) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v15 + 25) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  swift_release();
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  swift_release();
  v23 = (__int128 *)(v21 + 16);
  v24 = (__int128 *)(v22 + 16);
  v25 = *(unsigned __int8 *)(v21 + 32);
  if (v25 == 255)
  {
    v26 = *v24;
    *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
    *v23 = v26;
  }
  else
  {
    v27 = *(unsigned __int8 *)(v22 + 32);
    if (v27 == 255)
    {
      sub_2210B982C(v21 + 16);
      v28 = *(_BYTE *)(v22 + 32);
      *v23 = *v24;
      *(_BYTE *)(v21 + 32) = v28;
    }
    else
    {
      v29 = *(_QWORD *)(v21 + 16);
      v30 = *(_QWORD *)(v21 + 24);
      *(_OWORD *)(v21 + 16) = *v24;
      *(_BYTE *)(v21 + 32) = v27 & 1;
      sub_221015344(v29, v30, v25 & 1);
    }
  }
  return a1;
}

uint64_t sub_2210B9A90(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v21;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7)
    v10 = *(_DWORD *)(v6 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v11 = *(_QWORD *)(v6 + 64);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = v11 + v12;
  v14 = *(_QWORD *)(v8 + 64) + 25;
  if (v10 < a2)
  {
    v15 = ((v14 + (v13 & ~(_DWORD)v12)) & 0xFFFFFFF8) + 33;
    v16 = (a2 - v10 + 255) >> (8 * v15);
    if (v15 < 4)
      v17 = v16 + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2210B9B3C + 4 * byte_2213028A0[v19]))();
  }
  if ((_DWORD)v7 == v10)
  {
    v9 = v7;
    v4 = v5;
    return __swift_getEnumTagSinglePayload(a1, v9, v4);
  }
  a1 = (v13 + a1) & ~v12;
  if ((_DWORD)v9 == v10)
    return __swift_getEnumTagSinglePayload(a1, v9, v4);
  v21 = *(_QWORD *)(((v14 + a1) & 0xFFFFFFFFFFFFF8) + 8);
  if (v21 >= 0xFFFFFFFF)
    LODWORD(v21) = -1;
  return (v21 + 1);
}

void sub_2210B9BE4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = ((*(_QWORD *)(v6 + 64)
       + 25
       + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)
     + 33;
  if (v7 >= a3)
  {
    v11 = 0;
  }
  else
  {
    if (v8 <= 3)
      v9 = ((a3 - v7 + 255) >> (8 * v8)) + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
  }
  if (v7 < a2)
  {
    if (v8 >= 4)
      v12 = ~v7 + a2;
    else
      v12 = (~(_BYTE)v7 + a2);
    bzero(a1, v8);
    if ((_DWORD)v8 == 1)
      *a1 = v12;
    else
      *(_DWORD *)a1 = v12;
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_2210B9D24()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2210B9DB4);
}

void sub_2210B9D2C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2210B9D34);
  JUMPOUT(0x2210B9DB4);
}

void sub_2210B9D70()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2210B9DB4);
}

void sub_2210B9D78()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2210B9DB4);
}

uint64_t sub_2210B9D80@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_WORD *)(v10 + v11) = 0;
  if (!(_DWORD)a1)
    JUMPOUT(0x2210B9DB4);
  if ((_DWORD)v6 == v8)
  {
    v4 = v10;
    a2 = v6;
    a3 = a4;
  }
  else
  {
    v4 = (v9 + v10) & v7;
    if ((_DWORD)a2 != v8)
      JUMPOUT(0x2210B9D8CLL);
  }
  return __swift_storeEnumTagSinglePayload(v4, a1, a2, a3);
}

uint64_t sub_2210B9DCC()
{
  return sub_2210B9DE0((void (*)(void))sub_2210BAED8);
}

uint64_t sub_2210B9DE0(void (*a1)(void))
{
  unsigned __int8 v2;

  a1();
  sub_2212F3798();
  return v2;
}

uint64_t sub_2210B9E20(uint64_t a1, void (*a2)(void))
{
  a2();
  return sub_2212F37A4();
}

uint64_t sub_2210B9E68()
{
  return sub_2210BACB4();
}

void type metadata accessor for SubscriptionStorePickerOptionsGroup()
{
  JUMPOUT(0x22766BA10);
}

void sub_2210B9E80()
{
  sub_2210B608C();
}

void sub_2210B9E90()
{
  sub_2210B60DC();
}

void sub_2210B9EA0()
{
  sub_2210B6134();
}

void sub_2210B9EB0()
{
  OUTLINED_FUNCTION_7_14();
  type metadata accessor for SubscriptionStorePickerControlWrapper();
}

#error "2210B9F24: call analysis failed (funcsize=36)"

uint64_t sub_2210B9F7C()
{
  return sub_2210BAD90();
}

void sub_2210B9F90()
{
  uint64_t v0;

  sub_2210B6760(*(_QWORD *)(v0 + 48));
}

uint64_t sub_2210B9FA8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2210BA048(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unsigned __int8 v35;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_QWORD *)(v7 + 64);
  v12 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  v13 = (*(_DWORD *)(v6 + 80) | v8) & 0x100000;
  if (v12 > 7 || v13 != 0 || ((v11 + (v10 & ~v9) + 47) & 0xFFFFFFFFFFFFFFF8) + 34 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, v18, v5);
    v19 = (((unint64_t)v4 + v10) & v17) + v11;
    v20 = v18 + v11;
    v21 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
    v23 = *(unsigned __int8 *)(v22 + 32);
    swift_retain();
    swift_retain();
    if (v23 == 255)
    {
      v24 = *(_OWORD *)(v22 + 16);
      *(_BYTE *)(v21 + 32) = *(_BYTE *)(v22 + 32);
      *(_OWORD *)(v21 + 16) = v24;
    }
    else
    {
      v25 = v23 & 1;
      v26 = *(_QWORD *)(v22 + 16);
      v27 = *(_QWORD *)(v22 + 24);
      sub_22103D94C(v26, v27, v25);
      *(_QWORD *)(v21 + 16) = v26;
      *(_QWORD *)(v21 + 24) = v27;
      *(_BYTE *)(v21 + 32) = v25;
    }
    v28 = (v19 + 47) & 0xFFFFFFFFFFFFFFF8;
    v29 = (v20 + 47) & 0xFFFFFFFFFFFFFFF8;
    v30 = *(_QWORD *)v29;
    v31 = *(_QWORD *)(v29 + 8);
    v32 = *(_QWORD *)(v29 + 16);
    v33 = *(_QWORD *)(v29 + 24);
    v34 = *(_BYTE *)(v29 + 33);
    v35 = *(_BYTE *)(v29 + 32);
    sub_2210BA204(*(_QWORD *)v29, v31, v32, v33, v35, v34);
    *(_QWORD *)v28 = v30;
    *(_QWORD *)(v28 + 8) = v31;
    *(_QWORD *)(v28 + 16) = v32;
    *(_QWORD *)(v28 + 24) = v33;
    *(_BYTE *)(v28 + 32) = v35;
    *(_BYTE *)(v28 + 33) = v34;
  }
  return v4;
}

uint64_t sub_2210BA204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, char a6)
{
  if ((a6 & 1) != 0)
    return sub_22103D8E4(a1, a2, a3, a4, a5);
  else
    return swift_retain();
}

uint64_t sub_2210BA210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  unint64_t v11;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  v10 = *(unsigned __int8 *)(v9 + 32);
  if (v10 != 255)
    sub_221015344(*(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), v10 & 1);
  v11 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  return sub_2210BA2C0(*(_QWORD *)v11, *(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_BYTE *)(v11 + 32), *(_BYTE *)(v11 + 33));
}

uint64_t sub_2210BA2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, char a6)
{
  if ((a6 & 1) != 0)
    return sub_221046E68(a1, a2, a3, a4, a5);
  else
    return swift_release();
}

uint64_t sub_2210BA2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  __int128 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unsigned __int8 v30;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  v16 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  v18 = *(unsigned __int8 *)(v17 + 32);
  swift_retain();
  swift_retain();
  if (v18 == 255)
  {
    v19 = *(_OWORD *)(v17 + 16);
    *(_BYTE *)(v16 + 32) = *(_BYTE *)(v17 + 32);
    *(_OWORD *)(v16 + 16) = v19;
  }
  else
  {
    v20 = v18 & 1;
    v21 = *(_QWORD *)(v17 + 16);
    v22 = *(_QWORD *)(v17 + 24);
    sub_22103D94C(v21, v22, v20);
    *(_QWORD *)(v16 + 16) = v21;
    *(_QWORD *)(v16 + 24) = v22;
    *(_BYTE *)(v16 + 32) = v20;
  }
  v23 = (v14 + 47) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v15 + 47) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_QWORD *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  v27 = *(_QWORD *)(v24 + 16);
  v28 = *(_QWORD *)(v24 + 24);
  v29 = *(_BYTE *)(v24 + 33);
  v30 = *(_BYTE *)(v24 + 32);
  sub_2210BA204(*(_QWORD *)v24, v26, v27, v28, v30, v29);
  *(_QWORD *)v23 = v25;
  *(_QWORD *)(v23 + 8) = v26;
  *(_QWORD *)(v23 + 16) = v27;
  *(_QWORD *)(v23 + 24) = v28;
  *(_BYTE *)(v23 + 32) = v30;
  *(_BYTE *)(v23 + 33) = v29;
  return a1;
}

uint64_t sub_2210BA41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 *v18;
  __int128 *v19;
  int v20;
  char v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unsigned __int8 v45;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  v16 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  swift_retain();
  swift_release();
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  swift_retain();
  swift_release();
  v18 = (__int128 *)(v16 + 16);
  v19 = (__int128 *)(v17 + 16);
  v20 = *(unsigned __int8 *)(v17 + 32);
  if (*(unsigned __int8 *)(v16 + 32) == 255)
  {
    if (v20 == 255)
    {
      v22 = *v19;
      *(_BYTE *)(v16 + 32) = *(_BYTE *)(v17 + 32);
      *v18 = v22;
    }
    else
    {
      v29 = v20 & 1;
      v30 = *(_QWORD *)(v17 + 16);
      v31 = *(_QWORD *)(v17 + 24);
      sub_22103D94C(v30, v31, v20 & 1);
      *(_QWORD *)(v16 + 16) = v30;
      *(_QWORD *)(v16 + 24) = v31;
      *(_BYTE *)(v16 + 32) = v29;
    }
  }
  else if (v20 == 255)
  {
    sub_2210B982C(v16 + 16);
    v21 = *(_BYTE *)(v17 + 32);
    *v18 = *v19;
    *(_BYTE *)(v16 + 32) = v21;
  }
  else
  {
    v23 = v20 & 1;
    v24 = *(_QWORD *)(v17 + 16);
    v25 = *(_QWORD *)(v17 + 24);
    sub_22103D94C(v24, v25, v20 & 1);
    v26 = *(_QWORD *)(v16 + 16);
    v27 = *(_QWORD *)(v16 + 24);
    v28 = *(_BYTE *)(v16 + 32);
    *(_QWORD *)(v16 + 16) = v24;
    *(_QWORD *)(v16 + 24) = v25;
    *(_BYTE *)(v16 + 32) = v23;
    sub_221015344(v26, v27, v28);
  }
  v32 = (v14 + 47) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v15 + 47) & 0xFFFFFFFFFFFFFFF8;
  v34 = *(_QWORD *)v33;
  v35 = *(_QWORD *)(v33 + 8);
  v36 = *(_QWORD *)(v33 + 16);
  v37 = *(_QWORD *)(v33 + 24);
  v38 = *(_BYTE *)(v33 + 33);
  v39 = *(_BYTE *)(v33 + 32);
  sub_2210BA204(*(_QWORD *)v33, v35, v36, v37, v39, v38);
  v40 = *(_QWORD *)v32;
  v41 = *(_QWORD *)(v32 + 8);
  v42 = *(_QWORD *)(v32 + 16);
  v43 = *(_QWORD *)(v32 + 24);
  v44 = *(_BYTE *)(v32 + 33);
  *(_QWORD *)v32 = v34;
  *(_QWORD *)(v32 + 8) = v35;
  *(_QWORD *)(v32 + 16) = v36;
  *(_QWORD *)(v32 + 24) = v37;
  v45 = *(_BYTE *)(v32 + 32);
  *(_BYTE *)(v32 + 32) = v39;
  *(_BYTE *)(v32 + 33) = v38;
  sub_2210BA2C0(v40, v41, v42, v43, v45, v44);
  return a1;
}

uint64_t sub_2210BA5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  v16 = (v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_OWORD *)v17;
  v19 = *(_OWORD *)(v17 + 16);
  *(_BYTE *)(v16 + 32) = *(_BYTE *)(v17 + 32);
  *(_OWORD *)v16 = v18;
  *(_OWORD *)(v16 + 16) = v19;
  v20 = (v14 + 47) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v15 + 47) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_OWORD *)v21;
  v23 = *(_OWORD *)(v21 + 16);
  *(_WORD *)(v20 + 32) = *(_WORD *)(v21 + 32);
  *(_OWORD *)v20 = v22;
  *(_OWORD *)(v20 + 16) = v23;
  return a1;
}

uint64_t sub_2210BA6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 *v18;
  __int128 *v19;
  int v20;
  __int128 v21;
  int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  unsigned __int8 v36;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  v16 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  swift_release();
  *(_QWORD *)(v16 + 8) = *(_QWORD *)(v17 + 8);
  swift_release();
  v18 = (__int128 *)(v16 + 16);
  v19 = (__int128 *)(v17 + 16);
  v20 = *(unsigned __int8 *)(v16 + 32);
  if (v20 == 255)
  {
    v21 = *v19;
    *(_BYTE *)(v16 + 32) = *(_BYTE *)(v17 + 32);
    *v18 = v21;
  }
  else
  {
    v22 = *(unsigned __int8 *)(v17 + 32);
    if (v22 == 255)
    {
      sub_2210B982C(v16 + 16);
      v23 = *(_BYTE *)(v17 + 32);
      *v18 = *v19;
      *(_BYTE *)(v16 + 32) = v23;
    }
    else
    {
      v24 = *(_QWORD *)(v16 + 16);
      v25 = *(_QWORD *)(v16 + 24);
      *(_OWORD *)(v16 + 16) = *v19;
      *(_BYTE *)(v16 + 32) = v22 & 1;
      sub_221015344(v24, v25, v20 & 1);
    }
  }
  v26 = (v15 + 47) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(_BYTE *)(v26 + 32);
  v28 = *(_BYTE *)(v26 + 33);
  v29 = (v14 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = *(_QWORD *)v29;
  v31 = *(_QWORD *)(v29 + 8);
  v32 = *(_QWORD *)(v29 + 16);
  v33 = *(_QWORD *)(v29 + 24);
  v34 = *(_BYTE *)(v29 + 33);
  v35 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)v29 = *(_OWORD *)v26;
  *(_OWORD *)(v29 + 16) = v35;
  v36 = *(_BYTE *)(v29 + 32);
  *(_BYTE *)(v29 + 32) = v27;
  *(_BYTE *)(v29 + 33) = v28;
  sub_2210BA2C0(v30, v31, v32, v33, v36, v34);
  return a1;
}

uint64_t sub_2210BA81C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v21;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7)
    v10 = *(_DWORD *)(v6 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v11 = *(_QWORD *)(v6 + 64);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = v11 + v12;
  v14 = *(_QWORD *)(v8 + 64);
  if (v10 < a2)
  {
    v15 = ((v14 + (v13 & ~(_DWORD)v12) + 47) & 0xFFFFFFF8) + 34;
    v16 = (a2 - v10 + 0xFFFF) >> (8 * v15);
    if (v15 <= 3)
      v17 = v16 + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2210BA8CC + 4 * byte_2213028AF[v19]))();
  }
  if ((_DWORD)v7 == v10)
  {
    v9 = v7;
    v4 = v5;
    return __swift_getEnumTagSinglePayload(a1, v9, v4);
  }
  a1 = (v13 + a1) & ~v12;
  if ((_DWORD)v9 == v10)
    return __swift_getEnumTagSinglePayload(a1, v9, v4);
  v21 = *(_QWORD *)(((v14 + a1 + 7) & 0xFFFFFFFFFFFFF8) + 8);
  if (v21 >= 0xFFFFFFFF)
    LODWORD(v21) = -1;
  return (v21 + 1);
}

void sub_2210BA974(_DWORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = ((*(_QWORD *)(v6 + 64)
       + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
       + 47) & 0xFFFFFFFFFFFFFFF8)
     + 34;
  if (v7 >= a3)
  {
    v11 = 0;
  }
  else
  {
    if (v8 <= 3)
      v9 = ((a3 - v7 + 0xFFFF) >> (8 * v8)) + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    bzero(a1, v8);
    if (v8 > 3)
      *a1 = v12;
    else
      *(_WORD *)a1 = v12;
    __asm { BR              X11 }
  }
  __asm { BR              X16 }
}

void sub_2210BAAAC(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = a1;
  JUMPOUT(0x2210BAB40);
}

void sub_2210BAAB4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2210BAABCLL);
  JUMPOUT(0x2210BAB40);
}

void sub_2210BAAF8(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = a1;
  JUMPOUT(0x2210BAB40);
}

void sub_2210BAB00(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = a1;
  JUMPOUT(0x2210BAB40);
}

uint64_t sub_2210BAB08@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_WORD *)(v10 + v11) = 0;
  if (!(_DWORD)a1)
    JUMPOUT(0x2210BAB40);
  if ((_DWORD)v6 == v8)
  {
    v4 = v10;
    a2 = v6;
    a3 = a4;
  }
  else
  {
    v4 = (v9 + v10) & v7;
    if ((_DWORD)a2 != v8)
      JUMPOUT(0x2210BAB14);
  }
  return __swift_storeEnumTagSinglePayload(v4, a1, a2, a3);
}

void sub_2210BAB58()
{
  sub_2212F3A74();
  sub_2212F3888();
  sub_221023FE4(&qword_2556589E0, (void (*)(uint64_t))MEMORY[0x24BDEEBA0]);
  type metadata accessor for SubscriptionStorePickerOptionsGroup();
}

void sub_2210BABD0()
{
  void (*v0)(uint64_t);

  sub_221023FE4(&qword_25565A738, v0);
  OUTLINED_FUNCTION_7_2();
}

void sub_2210BABFC()
{
  type metadata accessor for SubscriptionStorePickerLayoutInternal.SectionView();
}

void sub_2210BAC14()
{
  void (*v0)(uint64_t);

  sub_221023FE4(&qword_25565A740, v0);
  OUTLINED_FUNCTION_19_14();
  OUTLINED_FUNCTION_3_3();
}

uint64_t sub_2210BAC54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v6 = a1;
  v2 = MEMORY[0x22766BAC4](MEMORY[0x24BDF4A08], v1, &v6);
  v4 = type metadata accessor for SubscriptionStorePickerLayoutInternal.LayoutView(255, v1, v2, v3);
  return MEMORY[0x22766BAC4](&unk_2213076B0, v4);
}

uint64_t sub_2210BACA8()
{
  return sub_2210BACB4();
}

uint64_t sub_2210BACB4()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata accessor for SubscriptionStorePickerOptionsGroup.PickerOption()
{
  JUMPOUT(0x22766BA10);
}

void sub_2210BACF0()
{
  OUTLINED_FUNCTION_7_14();
  type metadata accessor for SubscriptionStorePickerOptionsGroup();
}

#error "2210BAD38: call analysis failed (funcsize=20)"

uint64_t sub_2210BAD7C()
{
  return sub_2210BAD90();
}

uint64_t sub_2210BAD90()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v10)(_QWORD, _QWORD *);
  uint64_t v11;
  uint64_t (*v13)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v14[12];
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_7_14();
  v15 = v1;
  v16 = v2;
  v4 = v3;
  v6 = *((_QWORD *)v0 + 3);
  v7 = *((_QWORD *)v0 + 4);
  v8 = *((_QWORD *)v0 + 5);
  v13 = v9;
  v14[0] = *((_QWORD *)v0 + 2);
  v5 = v14[0];
  v14[1] = v6;
  v14[2] = v7;
  v14[3] = v8;
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10(0, v14) - 8) + 80);
  return v13(v4, &v0[(v11 + 48) & ~v11], v5, v6, v7, v8);
}

void sub_2210BAE1C()
{
  uint64_t v0;

  sub_2210B78F4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(unsigned __int8 *)(v0 + 80), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_2210BAE50(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_9_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_6_0();
}

void sub_2210BAE88()
{
  uint64_t v0;

  v0 = sub_2210B9DCC();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_2210BAEAC(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_11_18(*a1, (void (*)(void))sub_2210BAED8);
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_2210BAED8()
{
  unint64_t result;

  result = qword_25565A7E8;
  if (!qword_25565A7E8)
  {
    result = MEMORY[0x22766BAC4](&unk_221302BB8, &_s38SubscriptionPickerOptionsAreButtonsKeyON);
    atomic_store(result, (unint64_t *)&qword_25565A7E8);
  }
  return result;
}

void sub_2210BAF14()
{
  OUTLINED_FUNCTION_7_14();
  type metadata accessor for SubscriptionStorePickerOptionsGroup();
}

#error "2210BAF5C: call analysis failed (funcsize=27)"

void sub_2210BAFBC()
{
  type metadata accessor for SubscriptionStorePickerOptionsGroup();
}

void sub_2210BAFF0()
{
  sub_2210B7FE8();
}

void sub_2210BB048(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32), *(unsigned __int8 *)(a1 + 33));
  OUTLINED_FUNCTION_6_0();
}

void sub_2210BB080(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_9_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210BB0B8(uint64_t a1)
{
  sub_221046EBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

unint64_t sub_2210BB0E8()
{
  unint64_t result;

  result = qword_25565A808[0];
  if (!qword_25565A808[0])
  {
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEFBB8], MEMORY[0x24BDEFBC8]);
    atomic_store(result, qword_25565A808);
  }
  return result;
}

ValueMetadata *_s38SubscriptionPickerOptionsAreButtonsKeyOMa()
{
  return &_s38SubscriptionPickerOptionsAreButtonsKeyON;
}

uint64_t sub_2210BB134()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_2210BB1C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (((v6 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
    v10 = ((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 16);
    *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
    *(_QWORD *)(v10 + 16) = v12;
    v13 = (v10 + 31) & 0xFFFFFFFFFFFFFFF8;
    v14 = (v11 + 31) & 0xFFFFFFFFFFFFFFF8;
    v15 = *(_QWORD *)v14;
    v16 = *(_BYTE *)(v14 + 8);
    swift_retain();
    sub_221017C08(v15, v16);
    *(_QWORD *)v13 = v15;
    *(_BYTE *)(v13 + 8) = v16;
  }
  return v4;
}

uint64_t sub_2210BB2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 32) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (*(_QWORD *)(v3 + 64) + a1) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  return sub_221017894(*(_QWORD *)((v4 + 31) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v4 + 31) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_2210BB2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = v9;
  v10 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)v11;
  LOBYTE(v5) = *(_BYTE *)(v11 + 8);
  swift_retain();
  sub_221017C08(v12, v5);
  *(_QWORD *)v10 = v12;
  *(_BYTE *)(v10 + 8) = v5;
  return a1;
}

uint64_t sub_2210BB384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)(v9 + 16) = v11;
  swift_retain();
  swift_release();
  v12 = (v9 + 31) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v10 + 31) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  LOBYTE(v9) = *(_BYTE *)(v13 + 8);
  sub_221017C08(*(_QWORD *)v13, v9);
  v15 = *(_QWORD *)v12;
  v16 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = v9;
  sub_221017894(v15, v16);
  return a1;
}

uint64_t sub_2210BB434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  v9 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  return a1;
}

uint64_t sub_2210BB4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_release();
  v11 = (v9 + 31) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v10 + 31) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  LOBYTE(v12) = *(_BYTE *)(v12 + 8);
  v14 = *(_QWORD *)v11;
  v15 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = v12;
  sub_221017894(v14, v15);
  return a1;
}

uint64_t sub_2210BB548(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v15;

  v4 = *(_QWORD *)(a3 + 32);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v15 = *(_QWORD *)(((v8 + a1) & 0xFFFFFFFFFFFFF8) + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    v9 = (((v8 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 9;
    v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2210BB5D4 + 4 * byte_2213028BE[v13]))();
  }
}

void sub_2210BB660(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = (((*(_QWORD *)(v5 + 64) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v6 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (v6 < a2)
  {
    v11 = ~v6 + a2;
    v12 = (~(_BYTE)v6 + a2);
    if (v7 >= 4)
      v13 = v11;
    else
      v13 = v12;
    bzero(a1, v7);
    if ((_DWORD)v7 == 1)
      *a1 = v13;
    else
      *(_DWORD *)a1 = v13;
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_2210BB77C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2210BB7ECLL);
}

void sub_2210BB784(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2210BB78CLL);
  JUMPOUT(0x2210BB7ECLL);
}

void sub_2210BB7C4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2210BB7ECLL);
}

void sub_2210BB7CC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2210BB7ECLL);
}

uint64_t sub_2210BB7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!(_DWORD)a2)
    JUMPOUT(0x2210BB7ECLL);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x2210BB7E8);
    JUMPOUT(0x2210BB7E0);
  }
  return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
}

void sub_2210BB804()
{
  sub_2212F492C();
  sub_2212F4944();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A7D8);
  sub_2212F3348();
  sub_2212F5844();
  OUTLINED_FUNCTION_9_17();
  swift_getTupleTypeMetadata2();
  sub_2212F4A94();
  OUTLINED_FUNCTION_7_2();
}

void sub_2210BB89C()
{
  OUTLINED_FUNCTION_9_17();
  sub_2212F4830();
  OUTLINED_FUNCTION_7_2();
}

void sub_2210BB8B4()
{
  type metadata accessor for SubscriptionStorePickerOptionsGroup.PickerOption();
}

void sub_2210BB8D8(uint64_t a1)
{
  void (*v1)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255656B10);
  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556592A8);
  OUTLINED_FUNCTION_9_17();
  sub_2212F3348();
  sub_221023FE4(&qword_25565A7E0, v1);
  OUTLINED_FUNCTION_19_14();
  MEMORY[0x22766BAC4](&unk_221302BF0, a1);
  sub_221024548(&qword_255656B08, &qword_255656B10);
  OUTLINED_FUNCTION_7_2();
}

void sub_2210BB998()
{
  uint64_t *v0;

  sub_221024548(qword_2556592D0, v0);
  OUTLINED_FUNCTION_3_3();
}

uint64_t sub_2210BB9C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  return MEMORY[0x22766BAC4](MEMORY[0x24BDF4A08], v1, &v3);
}

uint64_t sub_2210BB9F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210BBA34()
{
  return sub_221077CA0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2210B87EC);
}

void sub_2210BBA40()
{
  uint64_t v0;

  v0 = sub_2210B9188();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_2210BBA64(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_11_18(*a1, (void (*)(void))sub_2210BBA98);
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_2210BBA98()
{
  unint64_t result;

  result = qword_25565A8B0;
  if (!qword_25565A8B0)
  {
    result = MEMORY[0x22766BAC4](&unk_221302D94, &_s33IsPickerLabelBuilderDescendantKeyON);
    atomic_store(result, (unint64_t *)&qword_25565A8B0);
  }
  return result;
}

void sub_2210BBAD4()
{
  type metadata accessor for SubscriptionStorePickerOptionsGroup.PickerOption();
}

uint64_t sub_2210BBB08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v4 = v1 + ((v3 + 64) & ~v3);
  (*(void (**)(uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4);
  swift_release();
  OUTLINED_FUNCTION_18_13(v4 + *(int *)(a1 + 76));
  return swift_deallocObject();
}

void sub_2210BBB88()
{
  OUTLINED_FUNCTION_7_14();
  type metadata accessor for SubscriptionStorePickerOptionsGroup.PickerOption();
}

uint64_t sub_2210BBBC0()
{
  return sub_2210B8FF8();
}

uint64_t sub_2210BBC08()
{
  return sub_221077CA0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2210B90F0);
}

void sub_2210BBC38()
{
  sub_2210B90A4();
}

unint64_t sub_2210BBC4C()
{
  unint64_t result;

  result = qword_25565A8D8;
  if (!qword_25565A8D8)
  {
    result = MEMORY[0x22766BAC4](&unk_22130B810, &_s28StoreKitTransactionSourceKeyON);
    atomic_store(result, (unint64_t *)&qword_25565A8D8);
  }
  return result;
}

uint64_t sub_2210BBC88()
{
  uint64_t v0;

  return sub_2211FBEC0(*(uint64_t (**)(void))(v0 + 16));
}

ValueMetadata *_s33IsPickerLabelBuilderDescendantKeyOMa()
{
  return &_s33IsPickerLabelBuilderDescendantKeyON;
}

void sub_2210BBCB0()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  v0 = sub_2212F47AC();
  sub_2212F3E40();
  v1 = (void (*)(uint64_t))MEMORY[0x24BDF1088];
  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A890);
  MEMORY[0x22766BAC4](MEMORY[0x24BDF43B0], v0);
  sub_221023FE4(&qword_255656B50, v1);
  OUTLINED_FUNCTION_3_3();
}

void sub_2210BBD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t OpaqueTypeConformance2, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_221024548(&qword_25565A898, v20);
  v23 = v22;
  a19 = a1;
  a20 = v22;
  MEMORY[0x22766BA58](255, &a17, MEMORY[0x24BDF2F58], 0);
  v24 = sub_2212F3A20();
  v25 = sub_2212F4674();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A8A0);
  v26 = sub_2212F3348();
  sub_2212F3348();
  a19 = a1;
  a20 = v23;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  a14 = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v24, &OpaqueTypeConformance2);
  v27 = MEMORY[0x22766BAC4](MEMORY[0x24BDF3F50], v25, &a14);
  sub_221024548(&qword_25565A8A8, &qword_25565A8A0);
  a12 = v27;
  a13 = v28;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v26, &a12);
  OUTLINED_FUNCTION_7_2();
}

uint64_t OUTLINED_FUNCTION_0_22(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80)), v2);
}

uint64_t OUTLINED_FUNCTION_2_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a9 - 8) + 8))();
}

uint64_t OUTLINED_FUNCTION_3_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *(int *)(v0 + 60);
  return sub_2210BA2C0(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), *(_BYTE *)(v2 + 33));
}

uint64_t OUTLINED_FUNCTION_9_17()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_10_17()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_11_18@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X8>)
{
  return sub_2210B9E20(a1, a2);
}

uint64_t OUTLINED_FUNCTION_15_13@<X0>(char a1@<W8>)
{
  uint64_t v1;

  return sub_221015344(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1 & 1);
}

void OUTLINED_FUNCTION_17_15()
{
  sub_2211964AC();
}

uint64_t OUTLINED_FUNCTION_18_13@<X0>(uint64_t a1@<X8>)
{
  return sub_221017894(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t OUTLINED_FUNCTION_19_14()
{
  return sub_2212F48FC();
}

uint64_t RegularProductViewStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t *v21;
  uint64_t *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v31 = a2;
  v30 = type metadata accessor for ConfigureProductViewEnvironmentViewModifier();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_21_0();
  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2556583E0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ProductViewStyleConfiguration();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657C88);
  OUTLINED_FUNCTION_4();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (uint64_t *)((char *)&v30 - v17);
  sub_2210BC24C(a1, (uint64_t)v12);
  sub_22103CB34(v12, 0, v18);
  sub_2210A57B8((uint64_t)v18, (uint64_t)v16, &qword_255657C88);
  v19 = *(_QWORD *)(a1 + *(int *)(v9 + 28));
  KeyPath = swift_getKeyPath();
  *(_QWORD *)&v8[v5[9]] = v19;
  sub_2210BC368((uint64_t)v16, (uint64_t)v8);
  v21 = (uint64_t *)&v8[v5[10]];
  *v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
  OUTLINED_FUNCTION_3_17();
  v22 = (uint64_t *)&v8[v5[11]];
  *v22 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
  swift_storeEnumTagMultiPayload();
  v23 = &v8[v5[12]];
  *(_QWORD *)v23 = KeyPath;
  v23[8] = 0;
  v24 = &v8[v5[13]];
  *(_QWORD *)v24 = swift_getKeyPath();
  v24[8] = 0;
  v25 = &v8[v5[14]];
  *(_QWORD *)v25 = swift_getKeyPath();
  v25[8] = 0;
  sub_2210BC24C(a1, v2);
  v26 = (uint64_t *)(v2 + *(int *)(v30 + 20));
  *v26 = swift_getKeyPath();
  OUTLINED_FUNCTION_3_17();
  v27 = v31;
  sub_2210A57B8((uint64_t)v8, v31, &qword_2556583E0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556583D0);
  sub_2210BC480(v2, v27 + *(int *)(v28 + 36));
  swift_retain();
  sub_2210A577C((uint64_t)v8, &qword_2556583E0);
  return sub_2210A577C((uint64_t)v18, &qword_255657C88);
}

uint64_t sub_2210BC24C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ProductViewStyleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2210BC290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RegularProductViewStyle.makeBody(configuration:)(a1, a2);
}

void sub_2210BC2A8()
{
  sub_2212F35E8();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210BC2C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_2212F33F0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_21_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v1, a1);
  return sub_2212F35F4();
}

void sub_2210BC330()
{
  _BOOL8 v0;

  v0 = OUTLINED_FUNCTION_6_15();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_2210BC34C()
{
  _BOOL8 v0;

  v0 = OUTLINED_FUNCTION_6_15();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210BC368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657C88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2210BC3B0()
{
  sub_2212F35E8();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210BC3D8()
{
  _BOOL8 v0;

  v0 = OUTLINED_FUNCTION_7_15();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_2210BC3F4()
{
  _BOOL8 v0;

  v0 = OUTLINED_FUNCTION_7_15();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_2210BC410()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_5_15();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210BC42C()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_5_15();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210BC448(char *a1)
{
  _BOOL8 v1;

  v1 = OUTLINED_FUNCTION_8_12(a1);
  OUTLINED_FUNCTION_14_1(v1);
  OUTLINED_FUNCTION_6_0();
}

void sub_2210BC464(char *a1)
{
  _BOOL8 v1;

  v1 = OUTLINED_FUNCTION_8_12(a1);
  OUTLINED_FUNCTION_14_1(v1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210BC480(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ConfigureProductViewEnvironmentViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2210BC4C4()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for RegularProductViewStyle()
{
  return &type metadata for RegularProductViewStyle;
}

uint64_t OUTLINED_FUNCTION_3_17()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_5_15()
{
  return sub_22105FD6C();
}

BOOL OUTLINED_FUNCTION_6_15()
{
  return sub_22129D018();
}

BOOL OUTLINED_FUNCTION_7_15()
{
  return sub_22129CC58();
}

BOOL OUTLINED_FUNCTION_8_12(char *a1)
{
  return sub_22105F8EC(*a1);
}

uint64_t sub_2210BC528()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_2212F51B4();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

_QWORD *sub_2210BC60C(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;

  v6 = sub_2212F51B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = *(_QWORD *)(v7 + 64) + v9;
  v12 = *(_QWORD *)(v8 + 64);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v14;
  v16 = *(_QWORD *)(v13 + 64);
  v17 = v14 | *(_DWORD *)(v7 + 80) & 0xF8 | v9;
  v18 = (v14 | v9 | *(_DWORD *)(v7 + 80)) & 0x100000;
  if (v17 > 7
    || v18 != 0
    || ((((((v16 + ((v12 + v14 + (v11 & ~v10)) & ~(unint64_t)v14) + 159) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 55) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v21 = *a2;
    *a1 = v21;
    v22 = (_QWORD *)(v21 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
  }
  else
  {
    v23 = ~v10;
    v60 = *(_QWORD *)(a3 + 16);
    v61 = *(_QWORD *)(a3 + 24);
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v62 = a1;
    v24 = ((unint64_t)a1 + v11) & v23;
    v25 = ((unint64_t)a2 + v11) & v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v24, v25, v60);
    v26 = (v25 + v12 + v15) & ~v15;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))((v24 + v12 + v15) & ~v15, v26, v61);
    v27 = ((v24 + v12 + v15) & ~v15) + v16;
    v28 = v26 + v16;
    v29 = (v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    v30 = (v26 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    v31 = *(_QWORD *)v30;
    v32 = *(_QWORD *)(v30 + 8);
    v33 = *(_QWORD *)(v30 + 16);
    v34 = *(_QWORD *)(v30 + 24);
    v35 = *(_BYTE *)(v30 + 32);
    sub_2210BC958();
    *(_QWORD *)v29 = v31;
    *(_QWORD *)(v29 + 8) = v32;
    *(_QWORD *)(v29 + 16) = v33;
    *(_QWORD *)(v29 + 24) = v34;
    *(_BYTE *)(v29 + 32) = v35;
    v36 = (v27 + 47) & 0xFFFFFFFFFFFFFFF8;
    v37 = (v28 + 47) & 0xFFFFFFFFFFFFFFF8;
    v38 = *(_QWORD *)v37;
    LOBYTE(v32) = *(_BYTE *)(v37 + 8);
    sub_221017C08(*(_QWORD *)v37, v32);
    *(_QWORD *)v36 = v38;
    *(_BYTE *)(v36 + 8) = v32;
    v39 = (v27 + 63) & 0xFFFFFFFFFFFFFFF8;
    v40 = (v28 + 63) & 0xFFFFFFFFFFFFFFF8;
    v41 = *(_QWORD *)v40;
    LOBYTE(v32) = *(_BYTE *)(v40 + 8);
    j__swift_retain(*(_QWORD *)v40, v32);
    *(_QWORD *)v39 = v41;
    *(_BYTE *)(v39 + 8) = v32;
    v42 = *(_QWORD *)(v40 + 16);
    LOBYTE(v32) = *(_BYTE *)(v40 + 24);
    j__swift_retain(v42, v32);
    *(_QWORD *)(v39 + 16) = v42;
    *(_BYTE *)(v39 + 24) = v32;
    v43 = *(_QWORD *)(v40 + 32);
    LOBYTE(v32) = *(_BYTE *)(v40 + 40);
    j__swift_retain(v43, v32);
    *(_QWORD *)(v39 + 32) = v43;
    *(_BYTE *)(v39 + 40) = v32;
    v44 = *(_QWORD *)(v40 + 48);
    v45 = *(_QWORD *)(v40 + 56);
    LOBYTE(v40) = *(_BYTE *)(v40 + 64);
    sub_2210BC964(v44, v45, v40);
    *(_QWORD *)(v39 + 48) = v44;
    *(_QWORD *)(v39 + 56) = v45;
    *(_BYTE *)(v39 + 64) = v40;
    v46 = (v27 + 135) & 0xFFFFFFFFFFFFFFF8;
    v47 = (v28 + 135) & 0xFFFFFFFFFFFFFFF8;
    v48 = *(_QWORD *)v47;
    v49 = *(_QWORD *)(v47 + 8);
    LOBYTE(v40) = *(_BYTE *)(v47 + 16);
    sub_221046D0C(*(_QWORD *)v47, v49, v40);
    *(_QWORD *)v46 = v48;
    *(_QWORD *)(v46 + 8) = v49;
    *(_BYTE *)(v46 + 16) = v40;
    v50 = (_QWORD *)((v27 + 159) & 0xFFFFFFFFFFFFFFF8);
    v51 = (_QWORD *)((v28 + 159) & 0xFFFFFFFFFFFFFFF8);
    *v50 = *v51;
    v50[1] = v51[1];
    v52 = ((unint64_t)v50 + 23) & 0xFFFFFFFFFFFFFFF8;
    v53 = ((unint64_t)v51 + 23) & 0xFFFFFFFFFFFFFFF8;
    v54 = *(_QWORD *)(v53 + 24);
    swift_retain();
    swift_retain();
    if (v54)
    {
      *(_QWORD *)(v52 + 24) = v54;
      *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
      (**(void (***)(unint64_t, unint64_t, uint64_t))(v54 - 8))(v52, v53, v54);
    }
    else
    {
      v55 = *(_OWORD *)v53;
      v56 = *(_OWORD *)(v53 + 16);
      *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
      *(_OWORD *)v52 = v55;
      *(_OWORD *)(v52 + 16) = v56;
    }
    *(_QWORD *)(v52 + 40) = *(_QWORD *)(v53 + 40);
    v57 = (v52 + 55) & 0xFFFFFFFFFFFFFFF8;
    v58 = (v53 + 55) & 0xFFFFFFFFFFFFFFF8;
    *(_BYTE *)v57 = *(_BYTE *)v58;
    *(_QWORD *)(v57 + 8) = *(_QWORD *)(v58 + 8);
    swift_retain();
    v22 = v62;
  }
  swift_retain();
  return v22;
}

uint64_t sub_2210BC958()
{
  return swift_retain();
}

uint64_t sub_2210BC964(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_221046D48(result);
  else
    return swift_retain();
}

uint64_t sub_2210BC970(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v4 = sub_2212F51B4();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v8);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v11);
  v12 = v11 + *(_QWORD *)(v10 + 64);
  sub_221046DA8();
  sub_221047104(*(_QWORD *)((v12 + 47) & 0xFFFFFFFFFFFFFFF8), *(unsigned __int8 *)(((v12 + 47) & 0xFFFFFFFFFFFFFFF8) + 8));
  v13 = (v12 + 63) & 0xFFFFFFFFFFFFFFF8;
  j_j__swift_release(*(_QWORD *)v13, *(unsigned __int8 *)(v13 + 8));
  j_j__swift_release(*(_QWORD *)(v13 + 16), *(unsigned __int8 *)(v13 + 24));
  j_j__swift_release(*(_QWORD *)(v13 + 32), *(unsigned __int8 *)(v13 + 40));
  sub_2210BCAC8(*(_QWORD *)(v13 + 48), *(_QWORD *)(v13 + 56), *(_BYTE *)(v13 + 64));
  sub_221046EE0(*(_QWORD *)((v12 + 135) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v12 + 135) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v12 + 135) & 0xFFFFFFFFFFFFFFF8) + 16));
  swift_release();
  swift_release();
  v14 = (((v12 + 159) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v14 + 24))
    __swift_destroy_boxed_opaque_existential_1(v14);
  swift_release();
  return swift_release();
}

uint64_t sub_2210BCAC8(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_221046D1C(result);
  else
    return swift_release();
}

uint64_t sub_2210BCAD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  unint64_t v50;
  unint64_t v51;

  v6 = sub_2212F51B4();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v13 + v15;
  v17 = (v16 + v11) & ~v15;
  v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64);
  v20 = v17 + v19;
  v21 = v18 + v19;
  v22 = (v17 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v18 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)v23;
  v25 = *(_QWORD *)(v23 + 8);
  v26 = *(_QWORD *)(v23 + 16);
  v27 = *(_QWORD *)(v23 + 24);
  v28 = *(_BYTE *)(v23 + 32);
  sub_2210BC958();
  *(_QWORD *)v22 = v24;
  *(_QWORD *)(v22 + 8) = v25;
  *(_QWORD *)(v22 + 16) = v26;
  *(_QWORD *)(v22 + 24) = v27;
  *(_BYTE *)(v22 + 32) = v28;
  v29 = (v20 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v21 + 47) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)v30;
  LOBYTE(v25) = *(_BYTE *)(v30 + 8);
  sub_221017C08(*(_QWORD *)v30, v25);
  *(_QWORD *)v29 = v31;
  *(_BYTE *)(v29 + 8) = v25;
  v32 = (v20 + 63) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v21 + 63) & 0xFFFFFFFFFFFFFFF8;
  v34 = *(_QWORD *)v33;
  LOBYTE(v25) = *(_BYTE *)(v33 + 8);
  j__swift_retain(*(_QWORD *)v33, v25);
  *(_QWORD *)v32 = v34;
  *(_BYTE *)(v32 + 8) = v25;
  v35 = *(_QWORD *)(v33 + 16);
  LOBYTE(v25) = *(_BYTE *)(v33 + 24);
  j__swift_retain(v35, v25);
  *(_QWORD *)(v32 + 16) = v35;
  *(_BYTE *)(v32 + 24) = v25;
  v36 = *(_QWORD *)(v33 + 32);
  LOBYTE(v25) = *(_BYTE *)(v33 + 40);
  j__swift_retain(v36, v25);
  *(_QWORD *)(v32 + 32) = v36;
  *(_BYTE *)(v32 + 40) = v25;
  v37 = *(_QWORD *)(v33 + 48);
  v38 = *(_QWORD *)(v33 + 56);
  LOBYTE(v33) = *(_BYTE *)(v33 + 64);
  sub_2210BC964(v37, v38, v33);
  *(_QWORD *)(v32 + 48) = v37;
  *(_QWORD *)(v32 + 56) = v38;
  *(_BYTE *)(v32 + 64) = v33;
  v39 = (v20 + 135) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v21 + 135) & 0xFFFFFFFFFFFFFFF8;
  v41 = *(_QWORD *)v40;
  v42 = *(_QWORD *)(v40 + 8);
  LOBYTE(v33) = *(_BYTE *)(v40 + 16);
  sub_221046D0C(*(_QWORD *)v40, v42, v33);
  *(_QWORD *)v39 = v41;
  *(_QWORD *)(v39 + 8) = v42;
  *(_BYTE *)(v39 + 16) = v33;
  v43 = (_QWORD *)((v20 + 159) & 0xFFFFFFFFFFFFFFF8);
  v44 = (_QWORD *)((v21 + 159) & 0xFFFFFFFFFFFFFFF8);
  *v43 = *v44;
  v43[1] = v44[1];
  v45 = ((unint64_t)v43 + 23) & 0xFFFFFFFFFFFFFFF8;
  v46 = ((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8;
  v47 = *(_QWORD *)(v46 + 24);
  swift_retain();
  swift_retain();
  if (v47)
  {
    *(_QWORD *)(v45 + 24) = v47;
    *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
    (**(void (***)(unint64_t, unint64_t, uint64_t))(v47 - 8))(v45, v46, v47);
  }
  else
  {
    v48 = *(_OWORD *)v46;
    v49 = *(_OWORD *)(v46 + 16);
    *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
    *(_OWORD *)v45 = v48;
    *(_OWORD *)(v45 + 16) = v49;
  }
  *(_QWORD *)(v45 + 40) = *(_QWORD *)(v46 + 40);
  v50 = (v45 + 55) & 0xFFFFFFFFFFFFFFF8;
  v51 = (v46 + 55) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v50 = *(_BYTE *)v51;
  *(_QWORD *)(v50 + 8) = *(_QWORD *)(v51 + 8);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2210BCD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  unint64_t v64;
  unint64_t v65;

  v6 = sub_2212F51B4();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v13 + v15;
  v17 = (v16 + v11) & ~v15;
  v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64);
  v20 = v17 + v19;
  v21 = v18 + v19;
  v22 = (v17 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v18 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)v23;
  v25 = *(_QWORD *)(v23 + 8);
  v26 = *(_QWORD *)(v23 + 16);
  v27 = *(_QWORD *)(v23 + 24);
  v28 = *(_BYTE *)(v23 + 32);
  sub_2210BC958();
  *(_QWORD *)v22 = v24;
  *(_QWORD *)(v22 + 8) = v25;
  *(_QWORD *)(v22 + 16) = v26;
  *(_QWORD *)(v22 + 24) = v27;
  *(_BYTE *)(v22 + 32) = v28;
  sub_221046DA8();
  v29 = (v20 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v21 + 47) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)v30;
  LOBYTE(v25) = *(_BYTE *)(v30 + 8);
  sub_221017C08(*(_QWORD *)v30, v25);
  v32 = *(_QWORD *)v29;
  v33 = *(unsigned __int8 *)(v29 + 8);
  *(_QWORD *)v29 = v31;
  *(_BYTE *)(v29 + 8) = v25;
  sub_221047104(v32, v33);
  v34 = (v20 + 63) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v21 + 63) & 0xFFFFFFFFFFFFFFF8;
  v36 = *(_QWORD *)v35;
  LOBYTE(v25) = *(_BYTE *)(v35 + 8);
  j__swift_retain(*(_QWORD *)v35, v25);
  v37 = *(_QWORD *)v34;
  v38 = *(unsigned __int8 *)(v34 + 8);
  *(_QWORD *)v34 = v36;
  *(_BYTE *)(v34 + 8) = v25;
  j_j__swift_release(v37, v38);
  v39 = *(_QWORD *)(v35 + 16);
  LOBYTE(v25) = *(_BYTE *)(v35 + 24);
  j__swift_retain(v39, v25);
  v40 = *(_QWORD *)(v34 + 16);
  v41 = *(unsigned __int8 *)(v34 + 24);
  *(_QWORD *)(v34 + 16) = v39;
  *(_BYTE *)(v34 + 24) = v25;
  j_j__swift_release(v40, v41);
  v42 = *(_QWORD *)(v35 + 32);
  LOBYTE(v25) = *(_BYTE *)(v35 + 40);
  j__swift_retain(v42, v25);
  v43 = *(_QWORD *)(v34 + 32);
  v44 = *(unsigned __int8 *)(v34 + 40);
  *(_QWORD *)(v34 + 32) = v42;
  *(_BYTE *)(v34 + 40) = v25;
  j_j__swift_release(v43, v44);
  v45 = *(_QWORD *)(v35 + 48);
  v46 = *(_QWORD *)(v35 + 56);
  LOBYTE(v35) = *(_BYTE *)(v35 + 64);
  sub_2210BC964(v45, v46, v35);
  v47 = *(_QWORD *)(v34 + 48);
  v48 = *(_QWORD *)(v34 + 56);
  v49 = *(_BYTE *)(v34 + 64);
  *(_QWORD *)(v34 + 48) = v45;
  *(_QWORD *)(v34 + 56) = v46;
  *(_BYTE *)(v34 + 64) = v35;
  sub_2210BCAC8(v47, v48, v49);
  v50 = (v20 + 135) & 0xFFFFFFFFFFFFFFF8;
  v51 = (v21 + 135) & 0xFFFFFFFFFFFFFFF8;
  v52 = *(_QWORD *)v51;
  v53 = *(_QWORD *)(v51 + 8);
  LOBYTE(v35) = *(_BYTE *)(v51 + 16);
  sub_221046D0C(*(_QWORD *)v51, v53, v35);
  v54 = *(_QWORD *)v50;
  v55 = *(_QWORD *)(v50 + 8);
  v56 = *(_BYTE *)(v50 + 16);
  *(_QWORD *)v50 = v52;
  *(_QWORD *)(v50 + 8) = v53;
  *(_BYTE *)(v50 + 16) = v35;
  sub_221046EE0(v54, v55, v56);
  v57 = (_QWORD *)((v20 + 159) & 0xFFFFFFFFFFFFFFF8);
  v58 = (_QWORD *)((v21 + 159) & 0xFFFFFFFFFFFFFFF8);
  *v57 = *v58;
  swift_retain();
  swift_release();
  v57[1] = v58[1];
  swift_retain();
  swift_release();
  v59 = ((unint64_t)v57 + 23) & 0xFFFFFFFFFFFFFFF8;
  v60 = ((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8;
  v61 = *(_QWORD *)(v60 + 24);
  if (!*(_QWORD *)(v59 + 24))
  {
    if (v61)
    {
      *(_QWORD *)(v59 + 24) = v61;
      *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
      (**(void (***)(unint64_t, unint64_t))(v61 - 8))(v59, ((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_8;
    }
LABEL_7:
    v62 = *(_OWORD *)v60;
    v63 = *(_OWORD *)(v60 + 16);
    *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
    *(_OWORD *)v59 = v62;
    *(_OWORD *)(v59 + 16) = v63;
    goto LABEL_8;
  }
  if (!v61)
  {
    __swift_destroy_boxed_opaque_existential_1(v59);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v59, (uint64_t *)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8));
LABEL_8:
  *(_QWORD *)(v59 + 40) = *(_QWORD *)(v60 + 40);
  swift_retain();
  swift_release();
  v64 = (v59 + 55) & 0xFFFFFFFFFFFFFFF8;
  v65 = (v60 + 55) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v64 = *(_BYTE *)v65;
  *(_QWORD *)(v64 + 8) = *(_QWORD *)(v65 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2210BD0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  __int128 *v35;
  __int128 v36;
  __int128 v37;

  v6 = sub_2212F51B4();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v13 + v15;
  v17 = (v16 + v11) & ~v15;
  v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64);
  v20 = v17 + v19;
  v21 = v18 + v19;
  v22 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_OWORD *)v23;
  v25 = *(_OWORD *)(v23 + 16);
  *(_BYTE *)(v22 + 32) = *(_BYTE *)(v23 + 32);
  *(_OWORD *)v22 = v24;
  *(_OWORD *)(v22 + 16) = v25;
  v26 = (v20 + 47) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v21 + 47) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v26 = v28;
  memcpy((void *)((v20 + 63) & 0xFFFFFFFFFFFFFFF8), (const void *)((v21 + 63) & 0xFFFFFFFFFFFFFFF8), 0x41uLL);
  v29 = (v20 + 135) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v21 + 135) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_OWORD *)v30;
  *(_BYTE *)(v29 + 16) = *(_BYTE *)(v30 + 16);
  *(_OWORD *)v29 = v31;
  v32 = (_OWORD *)((v20 + 159) & 0xFFFFFFFFFFFFFFF8);
  v33 = (_OWORD *)((v21 + 159) & 0xFFFFFFFFFFFFFFF8);
  *v32 = *v33;
  v34 = (_OWORD *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
  v35 = (__int128 *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  v36 = *v35;
  v37 = v35[2];
  v34[1] = v35[1];
  v34[2] = v37;
  *v34 = v36;
  *(_OWORD *)(((unint64_t)v34 + 55) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v35 + 55) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2210BD250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  __int128 v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD *v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  __int128 v56;
  __int128 v57;
  unint64_t v58;
  unint64_t v59;

  v6 = sub_2212F51B4();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v13 + v15;
  v17 = (v16 + v11) & ~v15;
  v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64);
  v20 = v17 + v19;
  v21 = v18 + v19;
  v22 = (v18 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_BYTE *)(v22 + 32);
  v24 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v22;
  *(_OWORD *)(v24 + 16) = v25;
  *(_BYTE *)(v24 + 32) = v23;
  sub_221046DA8();
  v26 = (v20 + 47) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v21 + 47) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(_QWORD *)v27;
  LOBYTE(v27) = *(_BYTE *)(v27 + 8);
  v29 = *(_QWORD *)v26;
  v30 = *(unsigned __int8 *)(v26 + 8);
  *(_QWORD *)v26 = v28;
  *(_BYTE *)(v26 + 8) = v27;
  sub_221047104(v29, v30);
  v31 = (v20 + 63) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v21 + 63) & 0xFFFFFFFFFFFFFFF8;
  v33 = *(_BYTE *)(v32 + 8);
  v34 = *(_QWORD *)v31;
  v35 = *(unsigned __int8 *)(v31 + 8);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = v33;
  j_j__swift_release(v34, v35);
  v36 = *(_BYTE *)(v32 + 24);
  v37 = *(_QWORD *)(v31 + 16);
  v38 = *(unsigned __int8 *)(v31 + 24);
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  *(_BYTE *)(v31 + 24) = v36;
  j_j__swift_release(v37, v38);
  v39 = *(_BYTE *)(v32 + 40);
  v40 = *(_QWORD *)(v31 + 32);
  v41 = *(unsigned __int8 *)(v31 + 40);
  *(_QWORD *)(v31 + 32) = *(_QWORD *)(v32 + 32);
  *(_BYTE *)(v31 + 40) = v39;
  j_j__swift_release(v40, v41);
  v42 = *(_BYTE *)(v32 + 64);
  v43 = *(_QWORD *)(v31 + 48);
  v44 = *(_QWORD *)(v31 + 56);
  v45 = *(_BYTE *)(v31 + 64);
  *(_OWORD *)(v31 + 48) = *(_OWORD *)(v32 + 48);
  *(_BYTE *)(v31 + 64) = v42;
  sub_2210BCAC8(v43, v44, v45);
  v46 = (v20 + 135) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v21 + 135) & 0xFFFFFFFFFFFFFFF8;
  v48 = *(_BYTE *)(v47 + 16);
  v49 = *(_QWORD *)v46;
  v50 = *(_QWORD *)(v46 + 8);
  v51 = *(_BYTE *)(v46 + 16);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  *(_BYTE *)(v46 + 16) = v48;
  sub_221046EE0(v49, v50, v51);
  v52 = (_QWORD *)((v20 + 159) & 0xFFFFFFFFFFFFFFF8);
  v53 = (_QWORD *)((v21 + 159) & 0xFFFFFFFFFFFFFFF8);
  *v52 = *v53;
  swift_release();
  v52[1] = v53[1];
  swift_release();
  v54 = ((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v54 + 24))
    __swift_destroy_boxed_opaque_existential_1(((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFFFF8);
  v55 = ((unint64_t)v53 + 23) & 0xFFFFFFFFFFFFFFF8;
  v56 = *(_OWORD *)v55;
  v57 = *(_OWORD *)(v55 + 16);
  *(_QWORD *)(v54 + 32) = *(_QWORD *)(v55 + 32);
  *(_OWORD *)v54 = v56;
  *(_OWORD *)(v54 + 16) = v57;
  *(_QWORD *)(v54 + 40) = *(_QWORD *)(v55 + 40);
  swift_release();
  v58 = (v54 + 55) & 0xFFFFFFFFFFFFFFF8;
  v59 = (v55 + 55) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v58 = *(_BYTE *)v59;
  *(_QWORD *)(v58 + 8) = *(_QWORD *)(v59 + 8);
  swift_release();
  return a1;
}

uint64_t sub_2210BD4BC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v24;
  unint64_t v25;
  int v26;

  v6 = sub_2212F51B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_QWORD *)(v9 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if (v14 > v12)
    v12 = *(_DWORD *)(v13 + 84);
  if (v12 <= 0x7FFFFFFE)
    v12 = 2147483646;
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = *(_QWORD *)(v7 + 64) + v15;
  v17 = *(_QWORD *)(v10 + 64);
  v18 = *(unsigned __int8 *)(v13 + 80);
  v19 = *(_QWORD *)(v13 + 64) + 159;
  if (v12 < a2)
  {
    if (((((((((v19 + ((v17 + v18 + (v16 & ~v15)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v20 = 2;
    else
      v20 = a2 - v12 + 1;
    if (v20 >= 0x10000)
      v21 = 4;
    else
      v21 = 2;
    if (v20 < 0x100)
      v21 = 1;
    if (v20 >= 2)
      v22 = v21;
    else
      v22 = 0;
    __asm { BR              X6 }
  }
  if ((_DWORD)v8 == v12)
  {
    v24 = a1;
    v14 = v8;
    v9 = v6;
    return __swift_getEnumTagSinglePayload(v24, v14, v9);
  }
  v24 = (v16 + a1) & ~v15;
  if ((_DWORD)v11 == v12)
  {
    v14 = v11;
    v9 = *(_QWORD *)(a3 + 16);
    return __swift_getEnumTagSinglePayload(v24, v14, v9);
  }
  v24 = (v24 + v17 + v18) & ~v18;
  if ((_DWORD)v14 == v12)
    return __swift_getEnumTagSinglePayload(v24, v14, v9);
  v25 = *(_QWORD *)((v19 + v24) & 0xFFFFFFFFFFFFF8);
  if (v25 >= 0xFFFFFFFF)
    LODWORD(v25) = -1;
  v26 = v25 - 1;
  if (v26 < 0)
    v26 = -1;
  return (v26 + 1);
}

void sub_2210BD69C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  int v18;
  unsigned int v19;

  v8 = *(_QWORD *)(sub_2212F51B4() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v11 + 84) > v10)
    v10 = *(_DWORD *)(v11 + 84);
  if (v10 <= 0x7FFFFFFE)
    v10 = 2147483646;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = *(_QWORD *)(v8 + 64) + v12;
  v14 = *(_QWORD *)(v9 + 64);
  v15 = *(unsigned __int8 *)(v11 + 80);
  if (v10 >= a3)
  {
    v18 = 0;
  }
  else
  {
    if (((((((*(_DWORD *)(v11 + 64)
             + 159
             + (((_DWORD)v14 + (_DWORD)v15 + (v13 & ~(_DWORD)v12)) & ~(_DWORD)v15)) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 55) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v16 = a3 - v10 + 1;
    else
      v16 = 2;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
  }
  if (a2 > v10)
  {
    if (((((((*(_DWORD *)(v11 + 64)
             + 159
             + (((_DWORD)v14 + (_DWORD)v15 + (v13 & ~(_DWORD)v12)) & ~(_DWORD)v15)) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 55) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v19 = ~v10 + a2;
      bzero(a1, ((((((*(_QWORD *)(v11 + 64) + 159 + ((v14 + v15 + (v13 & ~v12)) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 55) & 0xFFFFFFFFFFFFFFF8)+ 16);
      *a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X5 }
}

uint64_t sub_2210BD7FC@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  *(_BYTE *)(v14 + v15) = 0;
  if ((_DWORD)v13)
  {
    if ((_DWORD)v6 == v7)
    {
      result = v14;
      v16 = v13;
      a2 = v6;
      a3 = v4;
      return __swift_storeEnumTagSinglePayload(result, v16, a2, a3);
    }
    result &= v11 + v14;
    if ((_DWORD)v5 == v7)
    {
      v16 = v13;
      a2 = v5;
      a3 = a4;
      return __swift_storeEnumTagSinglePayload(result, v16, a2, a3);
    }
    result = (result + v9 + v8) & v12;
    if ((_DWORD)a2 == v7)
    {
      v16 = v13;
      return __swift_storeEnumTagSinglePayload(result, v16, a2, a3);
    }
    v17 = (_QWORD *)((v10 + result) & 0xFFFFFFFFFFFFFFF8);
    if (v13 > 0x7FFFFFFE)
    {
      v18 = (v13 - 0x7FFFFFFF);
      v17[1] = 0;
    }
    else
    {
      v18 = v13;
    }
    *v17 = v18;
  }
  return result;
}

void type metadata accessor for StaticSubscriptionOfferView()
{
  JUMPOUT(0x22766BA10);
}

uint64_t sub_2210BD8E4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2210BD918()
{
  sub_2212F36D8();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210BD934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2210BEEF8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEE3D8]);
}

uint64_t sub_2210BD948()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9E0);
  sub_2212F4758();
  return v1;
}

void sub_2210BD984(uint64_t a1)
{
  _BYTE v2[40];

  sub_221014FC0(a1, (uint64_t)v2, &qword_25565A028);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A028);
  sub_2212F4758();
  sub_221014F5C(a1, &qword_25565A028);
}

void sub_2210BD9EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[6];

  v4[5] = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  v1 = MEMORY[0x24BDAC7A8](a1);
  v4[4] = (char *)v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[1] = *(_QWORD *)(*(_QWORD *)(v1 + 16) - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = type metadata accessor for Product.TaskState(0);
  MEMORY[0x24BDAC7A8](v3);
  sub_2210BDC14();
}

void sub_2210BDAD8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  int *v21;

  *(_QWORD *)(v11 - 112) = a2;
  *(_QWORD *)(v11 - 104) = a1;
  v12 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, v4, v12);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 120) + 16))(v3, v4 + v5[13], v10);
  v13 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_221233550)(v3, v10, v8);
  v14 = *(_QWORD *)(v11 - 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 88) + 16))(v14, v4 + v5[14], v7);
  v15 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_221233550)(v14, v7, v9);
  v16 = v4 + v5[16];
  v17 = *(_QWORD *)v16;
  v18 = *(unsigned __int8 *)(v16 + 8);
  sub_221017C08(*(_QWORD *)v16, *(_BYTE *)(v16 + 8));
  sub_221044EE4();
  LOBYTE(v14) = v19;
  sub_221047104(v17, v18);
  v20 = *(_QWORD *)(v11 - 112);
  *v2 = *(_QWORD *)(v11 - 104);
  v2[1] = v20;
  v21 = (int *)type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  sub_22105EAF4(v6, (uint64_t)v2 + v21[5]);
  *(_QWORD *)((char *)v2 + v21[6]) = v13;
  sub_221011A28(v6, type metadata accessor for Product.TaskState);
  *(_QWORD *)((char *)v2 + v21[7]) = v15;
  *((_BYTE *)v2 + v21[8]) = v14;
}

void sub_2210BDC14()
{
  type metadata accessor for StaticSubscriptionOfferView();
}

void (*sub_2210BDC5C(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  char *v11;
  _BYTE v13[96];

  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = &v13[-v8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(&v13[-v8], v5, a1);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = v4;
  *((_QWORD *)v11 + 3) = v3;
  *((_QWORD *)v11 + 4) = v2;
  *((_QWORD *)v11 + 5) = v1;
  (*(void (**)(char *, _BYTE *, uint64_t))(v7 + 32))(&v11[v10], v9, a1);
  return sub_2210BF0F4;
}

void sub_2210BDD0C()
{
  type metadata accessor for StaticSubscriptionOfferView();
}

uint64_t sub_2210BDD34(uint64_t a1)
{
  return sub_2210BDD48(a1);
}

uint64_t sub_2210BDD48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v21[5];
  _OWORD v22[2];
  uint64_t v23;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(int *)(a1 + 76);
  v22[0] = *(_OWORD *)(v1 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9B0);
  sub_2212F4764();
  v11 = v21[0];
  result = swift_release();
  if (!v11)
  {
    v23 = 0;
    memset(v22, 0, sizeof(v22));
    sub_221014FC0((uint64_t)v22, (uint64_t)v21, &qword_25565A028);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9B8);
    sub_2212F4770();
    sub_221014F5C((uint64_t)v22, &qword_25565A028);
    sub_2212F5610();
    v13 = sub_2212F5640();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
    sub_2212F55F8();
    v14 = sub_2212F55EC();
    v15 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v16 = swift_allocObject();
    v17 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v16 + 16) = v14;
    *(_QWORD *)(v16 + 24) = v17;
    v18 = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v16 + 32) = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v16 + 48) = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16 + v15, v6, a1);
    v19 = sub_2210ECBB8((uint64_t)v9, (uint64_t)&unk_25565A9D0, v16);
    v22[0] = *(_OWORD *)(v2 + v10);
    v21[0] = v19;
    return sub_2212F4770();
  }
  return result;
}

void sub_2210BDF44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[2];
  char v18;
  _BYTE v19[40];

  v16 = sub_2212F2B20();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v3);
  type metadata accessor for InAppStoreButtonStyle();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_13_0();
  type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_13_0();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A980);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_13_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A988);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A990);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_13_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A998);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9A0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v12);
  v13 = v1 + *(int *)(a1 + 60);
  v14 = *(_OWORD *)(v13 + 16);
  v17[0] = *(_OWORD *)v13;
  v17[1] = v14;
  v18 = *(_BYTE *)(v13 + 32);
  sub_221015090((uint64_t)v17, (uint64_t)v19, &qword_25565A9A8);
  sub_22103D95C((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2210BC958);
  sub_2210458A8();
  sub_22103D95C((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_221046DA8);
  sub_2210BD9EC(a1);
}

void sub_2210BE164()
{
  uint64_t (*v0)(uint64_t);
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = v0(v4);
  swift_release();
  sub_221011A28(v4, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration);
  *(_QWORD *)(v7 - 240) = v8;
  *(_QWORD *)v3 = swift_getKeyPath();
  *(_BYTE *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = swift_getKeyPath();
  *(_BYTE *)(v3 + 24) = 0;
  v9 = (uint64_t *)(v3 + v1[6]);
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(qword_255656688);
  OUTLINED_FUNCTION_2_18();
  v10 = (uint64_t *)(v3 + v1[7]);
  *v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
  OUTLINED_FUNCTION_2_18();
  v11 = (uint64_t *)(v3 + v1[8]);
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657138);
  OUTLINED_FUNCTION_2_18();
  v12 = v3 + v1[9];
  *(_OWORD *)(v12 + 73) = 0u;
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)(v12 + 64) = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_OWORD *)v12 = 0u;
  *(_BYTE *)(v12 + 89) = 1;
  sub_221023FE4(&qword_255657170, (void (*)(uint64_t))type metadata accessor for InAppStoreButtonStyle);
  sub_2212F4320();
  v13 = v3;
  v14 = *(_QWORD *)(v7 - 344);
  sub_221011A28(v13, (uint64_t (*)(_QWORD))type metadata accessor for InAppStoreButtonStyle);
  swift_release();
  *(_OWORD *)(v7 - 240) = *(_OWORD *)(v2 + *(int *)(v14 + 76));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9B0);
  sub_2212F4764();
  v15 = *(_QWORD *)(v7 - 192);
  if (v15)
    swift_release();
  v16 = v15 != 0;
  KeyPath = swift_getKeyPath();
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = v16;
  v19 = *(_QWORD *)(v7 - 312);
  v20 = *(_QWORD *)(v7 - 320);
  v21 = *(_QWORD *)(v7 - 304);
  OUTLINED_FUNCTION_7_3(v20, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16));
  v22 = (uint64_t *)(v20 + *(int *)(*(_QWORD *)(v7 - 328) + 36));
  *v22 = KeyPath;
  v22[1] = (uint64_t)sub_2210255C4;
  v22[2] = v18;
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v6, v21);
  v23 = *(int *)(*(_QWORD *)(v7 - 336) + 36);
  if (qword_255655CC0 != -1)
    swift_once();
  v24 = (uint64_t *)(v5 + v23);
  type metadata accessor for CanMakePaymentsCache(0);
  sub_221023FE4(&qword_255656AD8, (void (*)(uint64_t))type metadata accessor for CanMakePaymentsCache);
  swift_retain();
  *v24 = sub_2212F31A4();
  v24[1] = v25;
  v26 = (uint64_t *)(v5 + v23 + *(int *)(type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(0) + 20));
  *v26 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656AE0);
  OUTLINED_FUNCTION_2_18();
  sub_221015090(v20, v5, &qword_25565A988);
  v27 = (char *)(v2 + *(int *)(v14 + 84));
  v28 = *v27;
  v29 = *((_QWORD *)v27 + 1);
  *(_BYTE *)(v7 - 192) = v28;
  *(_QWORD *)(v7 - 184) = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658350);
  sub_2212F477C();
  v30 = *(_QWORD *)(v7 - 240);
  v31 = *(_QWORD *)(v7 - 232);
  LOBYTE(v24) = *(_BYTE *)(v7 - 224);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9B8);
  sub_2212F4764();
  v32 = *(_QWORD *)(v7 - 280);
  sub_2210BE5D8(v30, v31, (char)v24, v7 - 240, &qword_25565A998, &qword_25565A990, v32);
  swift_release();
  swift_release();
  sub_221014F5C(v7 - 240, &qword_25565A028);
  sub_221014F5C(v5, &qword_25565A990);
  v33 = swift_getKeyPath();
  v34 = *(_QWORD *)(v7 - 272);
  sub_2212F4E24();
  v35 = *(_QWORD *)(v7 - 288);
  v36 = (uint64_t *)(v35 + *(int *)(*(_QWORD *)(v7 - 296) + 36));
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255658FD8);
  v38 = *(_QWORD *)(v7 - 264);
  v39 = *(_QWORD *)(v7 - 256);
  OUTLINED_FUNCTION_7_3((uint64_t)v36 + *(int *)(v37 + 28), v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 16));
  *v36 = v33;
  sub_221014FC0(v32, v35, &qword_25565A998);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v34, v39);
  sub_221014F5C(v32, &qword_25565A998);
  sub_221015090(v35, *(_QWORD *)(v7 - 248), &qword_25565A9A0);
}

double sub_2210BE5C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_2210BE5D8(a1, a2, a3, a4, &qword_25565A9E8, &qword_25565A9F0, a5).n128_u64[0];
  return result;
}

__n128 sub_2210BE5D8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __n128 result;
  _BYTE v19[40];
  __int128 v20;
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  __int128 v24;
  _OWORD v25[3];
  _BYTE v26[40];

  sub_221014FC0(a4, (uint64_t)v26, &qword_25565A028);
  *(_QWORD *)&v24 = a1;
  *((_QWORD *)&v24 + 1) = a2;
  LOBYTE(v25[0]) = a3;
  sub_221014FC0((uint64_t)v26, (uint64_t)&v20, &qword_25565A028);
  if (v21)
  {
    sub_22101E4FC(&v20, (uint64_t)v19);
    sub_2210BF00C((uint64_t)v19, (uint64_t)v22);
    swift_retain_n();
    swift_retain_n();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    swift_release();
    swift_release();
  }
  else
  {
    v23 = 0;
    memset(v22, 0, sizeof(v22));
    swift_retain();
    swift_retain();
  }
  v14 = (_OWORD *)(a7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a5) + 36));
  sub_221014F5C((uint64_t)v26, &qword_25565A028);
  sub_221015090((uint64_t)v22, (uint64_t)v25 + 8, &qword_25565A9C0);
  v15 = v25[0];
  v16 = v25[1];
  *v14 = v24;
  v14[1] = v15;
  v17 = v25[2];
  v14[2] = v16;
  v14[3] = v17;
  sub_221014FC0(v7, a7, a6);
  return result;
}

uint64_t sub_2210BE730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8[36] = a7;
  v8[37] = a8;
  v8[34] = a5;
  v8[35] = a6;
  v8[33] = a4;
  v9 = sub_2212F4C08();
  v8[38] = v9;
  v8[39] = *(_QWORD *)(v9 - 8);
  v8[40] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
  v8[41] = swift_task_alloc();
  v10 = sub_2212F4EA8();
  v8[42] = v10;
  v8[43] = *(_QWORD *)(v10 - 8);
  v8[44] = swift_task_alloc();
  v11 = sub_2212F51B4();
  v8[45] = v11;
  v8[46] = *(_QWORD *)(v11 - 8);
  v8[47] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9D8);
  v8[48] = swift_task_alloc();
  sub_2212F55F8();
  v8[49] = sub_2212F55EC();
  v8[50] = sub_2212F55D4();
  v8[51] = v12;
  return swift_task_switch();
}

void sub_2210BE864()
{
  _QWORD *v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_DWORD *)v0[48];
  v2 = v0[37];
  v4 = v0[35];
  v3 = v0[36];
  v5 = v0[34];
  sub_2212B5E94(v1);
  v6 = type metadata accessor for PurchaseConfigurationEvent(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v1, 0, 1, v6);
  v0[26] = v5;
  v0[27] = v4;
  v0[28] = v3;
  v0[29] = v2;
  type metadata accessor for StaticSubscriptionOfferView();
}

uint64_t sub_2210BE90C(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  *(_QWORD *)(v32 + 416) = a1;
  memcpy(v33, (const void *)(v31 + *(int *)(a1 + 68)), 0x41uLL);
  sub_221117240(v35);
  (*(void (**)(uint64_t, uint64_t))(v34 + 16))(v48, v31);
  v38 = OUTLINED_FUNCTION_14_15();
  sub_221046D0C(v38, v39, v40);
  OUTLINED_FUNCTION_14_15();
  sub_221045A98();
  v41 = OUTLINED_FUNCTION_14_15();
  sub_221046EE0(v41, v42, v43);
  sub_2212F4E90();
  swift_bridgeObjectRelease();
  v44 = sub_2212F50D0();
  __swift_storeEnumTagSinglePayload(v50, 1, 1, v44);
  (*(void (**)(uint64_t, _QWORD))(v51 + 104))(v52, *MEMORY[0x24BDEA058]);
  v45 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v32 + 424) = v45;
  v45[2] = v49;
  v45[3] = v37;
  v45[4] = v36;
  v45[5] = v30;
  v45[6] = v31;
  *(_OWORD *)(v32 + 184) = 0u;
  *(_OWORD *)(v32 + 168) = 0u;
  *(_BYTE *)(v32 + 200) = 0;
  *(_OWORD *)(v32 + 152) = 0u;
  v46 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v32 + 432) = v46;
  *v46 = v32;
  v46[1] = sub_2210BEA5C;
  return sub_221116FD0(*(_QWORD *)(v32 + 376), *(_QWORD *)(v32 + 352), *(_QWORD *)(v32 + 328), *(_QWORD *)(v32 + 320), (uint64_t)sub_2210BF300, (uint64_t)v45, *(_QWORD *)(v32 + 384), v32 + 152);
}

uint64_t sub_2210BEA5C()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *v0;
  v10 = (*v0)[46];
  v2 = (*v0)[44];
  v11 = (*v0)[45];
  v12 = (*v0)[47];
  v4 = (*v0)[42];
  v3 = (*v0)[43];
  v6 = (*v0)[40];
  v5 = (*v0)[41];
  v8 = (*v0)[38];
  v7 = (*v0)[39];
  OUTLINED_FUNCTION_24_10();
  swift_task_dealloc();
  sub_221014FB0(v1[11]);
  sub_221014FB0(v1[13]);
  sub_221014FB0(v1[15]);
  sub_221014FB0(v1[17]);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_221014F5C(v5, &qword_255656240);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v11);
  return swift_task_switch();
}

uint64_t sub_2210BEB48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 264);
  swift_release();
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v3 + *(int *)(v1 + 76));
  *(_QWORD *)(v0 + 256) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9B0);
  sub_2212F4770();
  sub_221014F5C(v2, &qword_25565A9D8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2210BEC0C(uint64_t a1)
{
  _BYTE v1[40];

  sub_2210BF00C(a1, (uint64_t)v1);
  type metadata accessor for StaticSubscriptionOfferView();
}

uint64_t sub_2210BEC54(uint64_t a1)
{
  uint64_t v1;
  char *v3;
  char v4;
  uint64_t v5;
  char v7;
  char v8;
  uint64_t v9;

  sub_221014FC0((uint64_t)&v8, (uint64_t)&v7, &qword_25565A028);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9B8);
  sub_2212F4770();
  sub_221014F5C((uint64_t)&v8, &qword_25565A028);
  v3 = (char *)(v1 + *(int *)(a1 + 84));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v8 = v4;
  v9 = v5;
  v7 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658350);
  return sub_2212F4770();
}

void sub_2210BECF0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  OUTLINED_FUNCTION_19_15();
}

void sub_2210BED58(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11 + a1[13], v15, v13);
  OUTLINED_FUNCTION_7_3(v11 + a1[14], v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32));
  v17 = v11 + a1[15];
  *(_QWORD *)v17 = swift_getKeyPath();
  *(_QWORD *)(v17 + 8) = 0;
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  *(_BYTE *)(v17 + 32) = 0;
  v18 = v11 + a1[16];
  *(_QWORD *)v18 = swift_getKeyPath();
  *(_BYTE *)(v18 + 8) = 0;
  v19 = v11 + a1[17];
  KeyPath = swift_getKeyPath();
  v21 = swift_getKeyPath();
  v22 = swift_getKeyPath();
  v23 = swift_getKeyPath();
  *(_QWORD *)v19 = KeyPath;
  *(_BYTE *)(v19 + 8) = 0;
  *(_QWORD *)(v19 + 16) = v21;
  *(_BYTE *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 32) = v22;
  *(_BYTE *)(v19 + 40) = 0;
  *(_QWORD *)(v19 + 48) = v23;
  *(_QWORD *)(v19 + 56) = 0;
  *(_BYTE *)(v19 + 64) = 0;
  v24 = v11 + a1[18];
  *(_QWORD *)v24 = swift_getKeyPath();
  *(_QWORD *)(v24 + 8) = 0;
  *(_BYTE *)(v24 + 16) = 0;
  v25 = (uint64_t *)(v11 + a1[19]);
  *v25 = sub_2210BD948();
  v25[1] = v26;
  a11 = 0;
  a9 = 0u;
  a10 = 0u;
  sub_2210BD984((uint64_t)&a9);
  v27 = v11 + a1[21];
  *(_BYTE *)v27 = sub_22106F9EC() & 1;
  *(_QWORD *)(v27 + 8) = v28;
  OUTLINED_FUNCTION_1_21();
}

void sub_2210BEEC8()
{
  sub_2212F3510();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210BEEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2210BEEF8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDEB1F0], MEMORY[0x24BDEDEC8]);
}

uint64_t sub_2210BEEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_2210BEF7C()
{
  return swift_deallocObject();
}

void sub_2210BEF8C()
{
  sub_2212F3510();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210BEFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2210BEEF8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDEB1F0], MEMORY[0x24BDEDEC8]);
}

void sub_2210BEFCC()
{
  sub_2212F36D8();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210BEFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2210BEEF8(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEE3D8]);
}

uint64_t sub_2210BF00C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_2210BF050()
{
  type metadata accessor for StaticSubscriptionOfferView();
}

#error "2210BF0B8: call analysis failed (funcsize=24)"

void sub_2210BF0F4()
{
  OUTLINED_FUNCTION_19_15();
}

void sub_2210BF120()
{
  sub_2210BDD0C();
}

void sub_2210BF15C()
{
  type metadata accessor for StaticSubscriptionOfferView();
}

#error "2210BF1CC: call analysis failed (funcsize=26)"

void sub_2210BF208()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[5];
  v3 = v0[6];
  v4 = v0[7];
  v1[2] = v0[4];
  v1[3] = v2;
  v1[4] = v3;
  v1[5] = v4;
  type metadata accessor for StaticSubscriptionOfferView();
}

uint64_t sub_2210BF24C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v9 = *(_QWORD *)(v2 + 16);
  v10 = *(_QWORD *)(v2 + 24);
  v11 = v2 + ((v8 + 64) & ~v8);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 48) = v12;
  *v12 = v4;
  v12[1] = sub_2210BF2C4;
  return sub_2210BE730(v1, v9, v10, v11, v3, v5, v6, v7);
}

uint64_t sub_2210BF2C4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_24_10();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2210BF300(uint64_t a1)
{
  sub_2210BEC0C(a1);
}

unint64_t sub_2210BF348()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25565A9F8;
  if (!qword_25565A9F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A9A0);
    v2 = sub_2210BF3CC();
    sub_221024548(&qword_255659028, &qword_255658FD8);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25565A9F8);
  }
  return result;
}

unint64_t sub_2210BF3CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25565AA00;
  if (!qword_25565AA00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A998);
    v2[0] = sub_2210BF438();
    v2[1] = sub_2210BF590();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25565AA00);
  }
  return result;
}

unint64_t sub_2210BF438()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25565AA08;
  if (!qword_25565AA08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A990);
    v2 = sub_2210BF4BC();
    sub_221023FE4(&qword_255656B18, (void (*)(uint64_t))type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25565AA08);
  }
  return result;
}

unint64_t sub_2210BF4BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  _QWORD v6[6];

  result = qword_25565AA10;
  if (!qword_25565AA10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A988);
    v2 = type metadata accessor for InAppStoreButtonStyle();
    sub_221023FE4(&qword_255657170, (void (*)(uint64_t))type metadata accessor for InAppStoreButtonStyle);
    v6[2] = MEMORY[0x24BDF4780];
    v6[3] = v2;
    v6[4] = MEMORY[0x24BDF4760];
    v6[5] = v3;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_221024548(&qword_255656B08, &qword_255656B10);
    v6[0] = OpaqueTypeConformance2;
    v6[1] = v5;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v6);
    atomic_store(result, (unint64_t *)&qword_25565AA10);
  }
  return result;
}

unint64_t sub_2210BF590()
{
  unint64_t result;

  result = qword_25565AA18;
  if (!qword_25565AA18)
  {
    result = MEMORY[0x22766BAC4](&unk_22131A034, &type metadata for LocalizedErrorAlertModifier);
    atomic_store(result, (unint64_t *)&qword_25565AA18);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_23()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;

  sub_221046DA8();
  sub_221047104(*(_QWORD *)(v1 + v0[16]), *(unsigned __int8 *)(v1 + v0[16] + 8));
  v2 = v1 + v0[17];
  j_j__swift_release(*(_QWORD *)v2, *(unsigned __int8 *)(v2 + 8));
  j_j__swift_release(*(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
  j_j__swift_release(*(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40));
  sub_2210BCAC8(*(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  sub_221046EE0(*(_QWORD *)(v1 + v0[18]), *(_QWORD *)(v1 + v0[18] + 8), *(_BYTE *)(v1 + v0[18] + 16));
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_2_18()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_5_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a9 - 8) + 8))(v10 + *(int *)(v9 + 56));
}

uint64_t OUTLINED_FUNCTION_7_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1 + *(int *)(v0 + 52), v2);
}

uint64_t OUTLINED_FUNCTION_12_20()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_13_18()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_14_15()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_15_14()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_18_14()
{
  return sub_2212F51B4();
}

void OUTLINED_FUNCTION_19_15()
{
  type metadata accessor for StaticSubscriptionOfferView();
}

void static StoreButtonKind.cancellation.getter(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  OUTLINED_FUNCTION_6_0();
}

uint64_t View.storeButton(_:for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_2_19();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565AA20);
  return MEMORY[0x227669B20](&v4, v1, v2, v0);
}

unint64_t sub_2210BF770()
{
  unsigned __int8 v1;
  unsigned int v2;

  sub_2210C0594();
  OUTLINED_FUNCTION_5_17();
  return v1 | ((unint64_t)v2 << 8);
}

uint64_t sub_2210BF7A8()
{
  sub_2210C0594();
  return sub_2212F37A4();
}

uint64_t sub_2210BF800(uint64_t result, uint64_t a2)
{
  if (a2 != 3)
  {
    *(_WORD *)result = a2;
    *(_BYTE *)(result + 2) = BYTE2(a2);
    *(_BYTE *)(result + 3) = BYTE3(a2);
    *(_BYTE *)(result + 4) = BYTE4(a2);
  }
  return result;
}

void StoreContent.storeButton(_:for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_19();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565AA20);
  sub_221018504(qword_25565AA28, &qword_25565AA20, (uint64_t)&unk_22130342C);
  sub_221232D58((uint64_t)&v3, v0, v2, v1);
}

void static StoreButtonKind.restorePurchases.getter(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  OUTLINED_FUNCTION_6_0();
}

void static StoreButtonKind.redeemCode.getter(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  OUTLINED_FUNCTION_6_0();
}

void static StoreButtonKind.signIn.getter(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  OUTLINED_FUNCTION_6_0();
}

void static StoreButtonKind.policies.getter(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  OUTLINED_FUNCTION_6_0();
}

ValueMetadata *type metadata accessor for StoreButtonKind()
{
  return &type metadata for StoreButtonKind;
}

void sub_2210BF960()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565AA20);
  OUTLINED_FUNCTION_14_2();
  sub_221018504(qword_25565AA28, &qword_25565AA20, (uint64_t)&unk_22130342C);
  OUTLINED_FUNCTION_5_2();
}

void sub_2210BF9BC()
{
  OUTLINED_FUNCTION_16_13();
}

void sub_2210BF9C4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565AA20);
  sub_221018504(qword_25565AA28, &qword_25565AA20, (uint64_t)&unk_22130342C);
  type metadata accessor for ModifiedStoreContent();
}

uint64_t sub_2210BFA1C(uint64_t a1)
{
  return MEMORY[0x22766BAC4](&unk_221313C88, a1);
}

uint64_t sub_2210BFA40()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2210BFAB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = ~v5;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 1) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v5 + 16) & v6));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 1) & v6, ((unint64_t)a2 + v5 + 1) & v6);
  }
  return v3;
}

uint64_t sub_2210BFB54(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_BYTE *sub_2210BFB74(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_BYTE *sub_2210BFBC4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_BYTE *sub_2210BFC14(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_BYTE *sub_2210BFC64(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_2210BFCB4(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unsigned int v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0xFD)
    v7 = 253;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_22;
  v10 = ((v8 + 1) & ~v8) + *(_QWORD *)(v5 + 64);
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)&a1[v10];
      if (!v12)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)&a1[v10];
      if (!*(_WORD *)&a1[v10])
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_22:
      if (v6 > 0xFD)
        return __swift_getEnumTagSinglePayload((unint64_t)&a1[v8 + 1] & ~v8, v6, v4);
      v16 = *a1;
      if (v16 >= 3)
        return v16 - 2;
      else
        return 0;
    }
  }
  v12 = a1[v10];
  if (!a1[v10])
    goto LABEL_22;
LABEL_15:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return v7 + v15 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2210BFD88 + 4 * byte_2213032E0[(v10 - 1)]))();
}

void sub_2210BFDF4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  char v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFDu)
    v6 = 253;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << v8)) >> v8) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v12 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t type metadata accessor for StoreButtonVisibilityModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StoreButtonVisibilityModifier);
}

uint64_t __swift_memcpy5_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t _s26AuxiliaryButtonsVisibilityVwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFE && a1[5])
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 3;
      v2 = v3 - 3;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s26AuxiliaryButtonsVisibilityVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *_s26AuxiliaryButtonsVisibilityVMa()
{
  return &_s26AuxiliaryButtonsVisibilityVN;
}

uint64_t sub_2210C0088()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2210C00BC(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 4) = 0;
  *(_DWORD *)a1 = 0;
}

uint64_t sub_2210C00C8()
{
  char v0;
  char v2;

  sub_2210C0594();
  OUTLINED_FUNCTION_5_17();
  if (v2)
    v0 = v2 == 1;
  else
    v0 = sub_2212F3534();
  return v0 & 1;
}

uint64_t sub_2210C0114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];

  v22 = a1;
  v23 = a3;
  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x22766BAC4](&unk_22130342C);
  v7 = sub_2212F3B4C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565AAB0);
  v8 = sub_2212F3348();
  v21 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - v12;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a2);
  v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = *(_OWORD *)(a2 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  v16 = MEMORY[0x22766BAC4](MEMORY[0x24BDEFB78], v7);
  sub_2212F4344();
  swift_release();
  swift_release();
  v17 = sub_221018504(&qword_25565AAB8, &qword_25565AAB0, MEMORY[0x24BDF1248]);
  v24[0] = v16;
  v24[1] = v17;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v8, v24);
  sub_221088D68((uint64_t)v11, v8, (uint64_t)v13);
  v18 = *(void (**)(char *, uint64_t))(v21 + 8);
  v18(v11, v8);
  sub_221087210((uint64_t)v13, v8, v23);
  return ((uint64_t (*)(char *, uint64_t))v18)(v13, v8);
}

uint64_t sub_2210C0340(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[8];
  uint64_t v18;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = &v17[-v12];
  v15 = type metadata accessor for StoreButtonVisibilityModifier(0, a3, a4, v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, &a2[*(int *)(v15 + 36)], a3);
  sub_2212F54B4();
  swift_getAssociatedConformanceWitness();
  while (1)
  {
    sub_2212F588C();
    if (!v18)
      break;
    v17[7] = *a2;
    swift_retain();
    swift_setAtWritableKeyPath();
    swift_release_n();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
}

uint64_t sub_2210C04C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for StoreButtonVisibilityModifier(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + *(int *)(v6 + 36) + ((v7 + 32) & ~v7), v5);
  return swift_deallocObject();
}

uint64_t sub_2210C053C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StoreButtonVisibilityModifier(0, v6, v7, a4) - 8)
                          + 80);
  return sub_2210C0340(a1, (_BYTE *)(v4 + ((v8 + 32) & ~v8)), v6, v7);
}

unint64_t sub_2210C0594()
{
  unint64_t result;

  result = qword_25565AAC0;
  if (!qword_25565AAC0)
  {
    result = MEMORY[0x22766BAC4](&unk_2213034DC, &_s40AuxiliaryButtonsVisibilityEnvironmentKeyON);
    atomic_store(result, (unint64_t *)&qword_25565AAC0);
  }
  return result;
}

ValueMetadata *_s40AuxiliaryButtonsVisibilityEnvironmentKeyOMa()
{
  return &_s40AuxiliaryButtonsVisibilityEnvironmentKeyON;
}

void sub_2210C05E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for StoreButtonVisibilityModifier(255, *a1, a1[1], a4);
  OUTLINED_FUNCTION_5_2();
}

void sub_2210C0610()
{
  sub_2212F3B4C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565AAB0);
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_5_2();
}

void sub_2210C0648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;

  v13 = sub_221018504(&qword_25565AAB8, v10, MEMORY[0x24BDF1248]);
  a9 = a1;
  a10 = v13;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v11, &a9);
  OUTLINED_FUNCTION_16_13();
}

uint64_t OUTLINED_FUNCTION_5_17()
{
  return sub_2212F3798();
}

uint64_t initializeBufferWithCopyOfBuffer for BorderlessTintedButtonStyle(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  j__swift_retain(*a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for BorderlessTintedButtonStyle(uint64_t a1)
{
  return j__swift_release(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *assignWithCopy for BorderlessTintedButtonStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  j__swift_retain(*a2, v4);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_release(v5, v6);
  return a1;
}

uint64_t *assignWithTake for BorderlessTintedButtonStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_release(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for BorderlessTintedButtonStyle()
{
  return &type metadata for BorderlessTintedButtonStyle;
}

uint64_t sub_2210C0798()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210C07A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_2212F3B04();
  v30 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_13_0();
  v7 = v6 - v5;
  v8 = sub_2212F3E7C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_13_0();
  v12 = v11 - v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657AC8);
  v27 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_13_0();
  v16 = v15 - v14;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565AAC8);
  v17 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_13_0();
  v20 = v19 - v18;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565AAD0);
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_13_0();
  v23 = v22 - v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  sub_2212F47A0();
  sub_2212F3AF8();
  sub_221018504((unint64_t *)&qword_255657AD0, &qword_255657AC8, MEMORY[0x24BDF43B0]);
  sub_2210C0A18();
  sub_2212F417C();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v7, v4);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v16, v13);
  j__swift_retain(a2, a3 & 1);
  sub_22104391C();
  v25 = v24;
  j__swift_release(a2, a3 & 1);
  if (!v25)
    v25 = sub_2212F456C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v23, v20, v31);
  *(_QWORD *)(v23 + *(int *)(v29 + 36)) = v25;
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v20, v31);
  return sub_2210C0A58(v23, a4);
}

uint64_t sub_2210C0A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2210C07A8(a1, *(_QWORD *)v2, *(_BYTE *)(v2 + 8), a2);
}

unint64_t sub_2210C0A18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25565AAD8;
  if (!qword_25565AAD8)
  {
    v1 = sub_2212F3B04();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEF8B0], v1);
    atomic_store(result, (unint64_t *)&qword_25565AAD8);
  }
  return result;
}

uint64_t sub_2210C0A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565AAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2210C0AA4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_25565AAE0;
  if (!qword_25565AAE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565AAD0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657AC8);
    v2[3] = sub_2212F3B04();
    v2[4] = sub_221018504((unint64_t *)&qword_255657AD0, &qword_255657AC8, MEMORY[0x24BDF43B0]);
    v2[5] = sub_2210C0A18();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_221018504(&qword_255656990, &qword_255656978, MEMORY[0x24BDF0710]);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25565AAE0);
  }
  return result;
}

void View.appStoreOverlay(isPresented:configuration:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *KeyPath;
  _QWORD v15[2];
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  id (*v21)();
  uint64_t v22;
  char v23;

  KeyPath = (void *)swift_getKeyPath();
  v15[0] = a1;
  v15[1] = a2;
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = KeyPath;
  v20 = 0;
  v21 = sub_2210C0C90;
  v22 = 0;
  v23 = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  MEMORY[0x227669B20](v15, a6, &type metadata for AppStoreOverlayModifier, a7);
  swift_release();
  swift_release();
  swift_release();
  sub_221046ED4(KeyPath, 0);
  sub_2210C0CB4((uint64_t)sub_2210C0C90, 0, 0);
}

id sub_2210C0C90()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppStoreOverlayCoordinator()), sel_init);
}

void sub_2210C0CB4(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_release();
}

uint64_t sub_2210C0CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;
  const void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
  sub_2212F4884();
  v6 = swift_allocObject();
  memcpy((void *)(v6 + 16), v3, 0x49uLL);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565ABB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  v8 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25565ABB8) + 36);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  *(_QWORD *)(v8 + 24) = sub_2210C1C98;
  *(_QWORD *)(v8 + 32) = v6;
  return sub_2210C1CA0((uint64_t)v3);
}

void sub_2210C0DB4(unsigned __int8 *a1, __int128 *a2)
{
  int v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  void *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unsigned int v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v3 = *a1;
  v4 = (void *)*((_QWORD *)a2 + 5);
  v5 = *((_BYTE *)a2 + 48);
  sub_22109E3EC(v4, v5);
  sub_221045554();
  v7 = v6;
  sub_221046ED4(v4, v5);
  if (v7)
  {
    v8 = objc_msgSend(v7, sel_scene);

    if (v8)
    {
      objc_opt_self();
      v9 = swift_dynamicCastObjCClass();
      if (v9)
      {
        v10 = v9;
        type metadata accessor for AppStoreOverlayCoordinator();
        sub_2210C1D20();
        v11 = (char *)sub_2212F2E38();
        if (v3)
        {
          v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlay];

          if (v12)
            goto LABEL_16;
          v13 = (unsigned __int8 *)sub_2212F2E38();
          v14 = v13[OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlayState];

          if (v14 > 3 || v14 == 1)
            goto LABEL_16;
          v16 = (void *)sub_2212F2E38();
          v17 = (void *)(*((uint64_t (**)(void))a2 + 3))();
          sub_2210C10F4((uint64_t)v17, v10);

        }
        else
        {
          v23 = v11[OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlayState];

          if (v23 > 1)
          {
LABEL_16:

            v19 = (char *)sub_2212F2E38();
            __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
            sub_2212F4884();
            v21 = v30;
            v20 = v29;
            v22 = v31;
            goto LABEL_17;
          }
          v17 = (void *)sub_2212F2E38();
          sub_2210C1190();
        }

        goto LABEL_16;
      }

    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565ABC0);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_2212FF8E0;
  *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v18 + 32) = 0xD000000000000048;
  *(_QWORD *)(v18 + 40) = 0x80000002212F8850;
  sub_2212F5DC0();
  swift_bridgeObjectRelease();
  v27 = *a2;
  v28 = *((_BYTE *)a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
  sub_2212F486C();
  type metadata accessor for AppStoreOverlayCoordinator();
  sub_2210C1D20();
  v19 = (char *)sub_2212F2E38();
  sub_2212F4884();
  v21 = *((_QWORD *)&v27 + 1);
  v20 = v27;
  v22 = v28;
LABEL_17:
  v24 = &v19[OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_isPresented];
  v25 = *(_QWORD *)&v19[OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_isPresented];
  v26 = *(_QWORD *)&v19[OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_isPresented
                      + 8];
  *(_QWORD *)v24 = v20;
  *((_QWORD *)v24 + 1) = v21;
  v24[16] = v22;
  sub_22109EE54(v25, v26);

}

uint64_t sub_2210C10F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  void *v5;

  *(_BYTE *)(v2
           + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlayState) = 0;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDEA6C0]), sel_initWithConfiguration_, a1);
  objc_msgSend(v4, sel_setDelegate_, v2);
  objc_msgSend(v4, sel_presentInScene_, a2);
  v5 = *(void **)(v2
                + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlay);
  *(_QWORD *)(v2
            + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlay) = v4;

  return swift_unknownObjectWeakAssign();
}

void sub_2210C1190()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = MEMORY[0x22766BC44](v0 + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_scene);
  if (v1)
  {
    v2 = (void *)v1;
    objc_msgSend((id)objc_opt_self(), sel_dismissOverlayInScene_, v1);
    if (*(_QWORD *)(v0
                   + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_isPresented
                   + 8))
    {
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
      sub_2212F486C();
      swift_release();
      swift_release();
    }

    *(_BYTE *)(v0
             + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlayState) = 2;
  }
  v3 = *(void **)(v0
                + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlay);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlay) = 0;

}

uint64_t sub_2210C1288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;
  _BYTE v6[73];

  memcpy(v6, v2, sizeof(v6));
  return sub_2210C0CC4(a1, a2);
}

uint64_t sub_2210C12D8()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_isPresented
                 + 8))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
    result = sub_2212F486C();
  }
  *(_BYTE *)(v0
           + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlayState) = 1;
  return result;
}

void sub_2210C1420()
{
  uint64_t v0;
  void *v1;

  if (*(_QWORD *)(v0
                 + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_isPresented
                 + 8))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
    sub_2212F486C();
  }
  v1 = *(void **)(v0
                + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlay);
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlay) = 0;

  *(_BYTE *)(v0
           + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlayState) = 3;
}

id sub_2210C1518()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  void *v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlay])
  {
    v2 = MEMORY[0x22766BC44](&v0[OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_scene]);
    if (v2)
    {
      v3 = (void *)v2;
      objc_msgSend((id)objc_opt_self(), sel_dismissOverlayInScene_, v2);

    }
  }
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

id sub_2210C161C()
{
  _BYTE *v0;
  objc_class *ObjectType;
  char *v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = &v0[OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_isPresented];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v2[16] = 0;
  v0[OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlayState] = 3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_7A1CD05574219937BB53A614E2FE018426AppStoreOverlayCoordinator_overlay] = 0;
  swift_unknownObjectWeakInit();
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for AppStoreOverlayCoordinator()
{
  return objc_opt_self();
}

uint64_t sub_2210C16E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2212F3348();
  v4[0] = v1;
  v4[1] = sub_2210C1734();
  return MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_2210C1734()
{
  unint64_t result;

  result = qword_25565AB98;
  if (!qword_25565AB98)
  {
    result = MEMORY[0x22766BAC4](&unk_2213036B0, &type metadata for AppStoreOverlayModifier);
    atomic_store(result, (unint64_t *)&qword_25565AB98);
  }
  return result;
}

uint64_t _s22LocalizedPriceResourceV14SeparatorStyleOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AppStoreOverlayCoordinator.SKOverlayState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2210C1844 + 4 * byte_2213035A5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2210C1878 + 4 * byte_2213035A0[v4]))();
}

uint64_t sub_2210C1878(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2210C1880(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2210C1888);
  return result;
}

uint64_t sub_2210C1894(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2210C189CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2210C18A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2210C18A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppStoreOverlayCoordinator.SKOverlayState()
{
  return &type metadata for AppStoreOverlayCoordinator.SKOverlayState;
}

id sub_2210C18C4(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
    return a2;
  else
    return (id)swift_retain();
}

void destroy for AppStoreOverlayModifier(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  sub_221046ED4(*(id *)(a1 + 40), *(_BYTE *)(a1 + 48));
  sub_2210C0CB4(*(_QWORD *)(a1 + 56), *(void **)(a1 + 64), *(_BYTE *)(a1 + 72));
}

uint64_t initializeWithCopy for AppStoreOverlayModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  void *v9;

  v2 = a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(void **)(a2 + 40);
  v7 = *(_BYTE *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22109E3EC(v6, v7);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(v2 + 56);
  v9 = *(void **)(v2 + 64);
  LOBYTE(v2) = *(_BYTE *)(v2 + 72);
  sub_2210C18C4(v8, v9, v2);
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = v2;
  return a1;
}

uint64_t assignWithCopy for AppStoreOverlayModifier(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  void *v5;
  char v6;
  void *v7;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  char v13;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = v2[1];
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *((_BYTE *)v2 + 16);
  v4 = v2[4];
  *(_QWORD *)(a1 + 24) = v2[3];
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  v5 = (void *)v2[5];
  v6 = *((_BYTE *)v2 + 48);
  sub_22109E3EC(v5, v6);
  v7 = *(void **)(a1 + 40);
  v8 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v6;
  sub_221046ED4(v7, v8);
  v9 = v2[7];
  v10 = (void *)v2[8];
  LOBYTE(v2) = *((_BYTE *)v2 + 72);
  sub_2210C18C4(v9, v10, (char)v2);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(void **)(a1 + 64);
  v13 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 72) = (_BYTE)v2;
  sub_2210C0CB4(v11, v12, v13);
  return a1;
}

void *__swift_memcpy73_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for AppStoreOverlayModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  char v6;
  char v7;
  uint64_t v8;
  void *v9;
  char v10;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  v4 = *(_BYTE *)(a2 + 48);
  v5 = *(void **)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v4;
  sub_221046ED4(v5, v6);
  v7 = *(_BYTE *)(a2 + 72);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(void **)(a1 + 64);
  v10 = *(_BYTE *)(a1 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = v7;
  sub_2210C0CB4(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppStoreOverlayModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppStoreOverlayModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreOverlayModifier()
{
  return &type metadata for AppStoreOverlayModifier;
}

unint64_t sub_2210C1BC4()
{
  unint64_t result;

  result = qword_25565ABA0;
  if (!qword_25565ABA0)
  {
    result = MEMORY[0x22766BAC4](&unk_221303688, &type metadata for AppStoreOverlayCoordinator.SKOverlayState);
    atomic_store(result, (unint64_t *)&qword_25565ABA0);
  }
  return result;
}

uint64_t sub_2210C1C00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210C1C10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_getObjectType();
  result = sub_2212F2C94();
  *a1 = result;
  return result;
}

uint64_t sub_2210C1C4C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  sub_221046ED4(*(id *)(v0 + 56), *(_BYTE *)(v0 + 64));
  sub_2210C0CB4(*(_QWORD *)(v0 + 72), *(void **)(v0 + 80), *(_BYTE *)(v0 + 88));
  return swift_deallocObject();
}

void sub_2210C1C98(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_2210C0DB4(a1, (__int128 *)(v1 + 16));
}

uint64_t sub_2210C1CA0(uint64_t a1)
{
  void *v2;
  char v3;
  uint64_t v4;
  void *v5;
  char v6;

  v2 = *(void **)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(void **)(a1 + 64);
  v6 = *(_BYTE *)(a1 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22109E3EC(v2, v3);
  sub_2210C18C4(v4, v5, v6);
  return a1;
}

unint64_t sub_2210C1D20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25565ABC8;
  if (!qword_25565ABC8)
  {
    v1 = type metadata accessor for AppStoreOverlayCoordinator();
    result = MEMORY[0x22766BAC4](&unk_221303700, v1);
    atomic_store(result, (unint64_t *)&qword_25565ABC8);
  }
  return result;
}

unint64_t sub_2210C1D64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25565ABD0;
  if (!qword_25565ABD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565ABB8);
    v2[0] = sub_221018504(&qword_25565ABD8, &qword_25565ABB0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_221018504(&qword_25565ABE0, qword_255659978, MEMORY[0x24BDEFF40]);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25565ABD0);
  }
  return result;
}

uint64_t sub_2210C1E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v10[5];
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[5];
  uint64_t v17;
  char v18;
  char v19;

  sub_22100FD48(a1, (uint64_t)v16, &qword_25565ABE8);
  v10[0] = v16[0];
  v10[1] = v16[1];
  v10[2] = v16[2];
  v10[3] = v16[3];
  v10[4] = v16[4];
  v11 = v17;
  v12 = v18;
  v13 = v19;
  v14 = a2;
  v15 = a3;
  return MEMORY[0x227669B20](v10, a4, &type metadata for PlatformConstants.FrameModifier, a5);
}

void sub_2210C1EA4()
{
  qword_25568CEB0 = 0x402C000000000000;
}

void sub_2210C1EB4()
{
  qword_25568CEB8 = 0;
}

void sub_2210C1EC0()
{
  qword_25568CEC0 = 0;
}

void sub_2210C1ECC()
{
  qword_25568CEC8 = 0x4079000000000000;
}

void sub_2210C1EDC()
{
  qword_25568CED0 = 0x4038000000000000;
}

uint64_t sub_2210C1EEC()
{
  uint64_t result;
  uint64_t v1;

  if (qword_255655D48 != -1)
    swift_once();
  if (byte_255661B80 == 2)
  {
    storekit_dyld_fall_2024_os_versions();
    result = dyld_program_sdk_at_least();
  }
  else
  {
    result = byte_255661B80 & 1;
  }
  v1 = 0x402A000000000000;
  if (!(_DWORD)result)
    v1 = 0;
  qword_25568CED8 = v1;
  byte_25568CEE0 = result ^ 1;
  return result;
}

void sub_2210C1F64()
{
  qword_25568CEE8 = 0x3FC999999999999ALL;
}

void sub_2210C1F7C()
{
  qword_25568CEF0 = 0x3FDB6DB6DB6DB6DBLL;
}

void sub_2210C1F98()
{
  qword_25568CEF8 = 0xC07F400000000000;
}

void sub_2210C1FAC()
{
  qword_25568CF00 = 0x4039000000000000;
}

void sub_2210C1FBC()
{
  qword_25568CF08 = 0x4049000000000000;
}

void sub_2210C1FCC()
{
  qword_25568CF10 = 0x4054000000000000;
}

void sub_2210C1FDC()
{
  qword_25568CF18 = 0x404E000000000000;
  byte_25568CF20 = 0;
  qword_25568CF28 = 0;
  byte_25568CF30 = 1;
  qword_25568CF38 = 0;
  byte_25568CF40 = 1;
  qword_25568CF48 = 0;
  byte_25568CF50 = 1;
  qword_25568CF58 = 0;
  byte_25568CF60 = 1;
  qword_25568CF68 = 0;
  byte_25568CF70 = 1;
}

void *__swift_memcpy112_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t getEnumTagSinglePayload for PlatformConstants.FrameModifier(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PlatformConstants.FrameModifier(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 112) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PlatformConstants.FrameModifier()
{
  return &type metadata for PlatformConstants.FrameModifier;
}

void type metadata accessor for PlatformConstants()
{
  OUTLINED_FUNCTION_31_2();
}

void *__swift_memcpy89_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x59uLL);
}

uint64_t sub_2210C20B4(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 89))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2210C20D4(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 89) = v3;
  return result;
}

void type metadata accessor for PlatformConstants.Frame()
{
  OUTLINED_FUNCTION_31_2();
}

uint64_t sub_2210C2124()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210C2134@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556564C0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2210160DC();
  return sub_22100FD48((uint64_t)v4, a1, &qword_2556564C0);
}

uint64_t sub_2210C225C@<X0>(uint64_t a1@<X8>)
{
  const void *v1;
  _BYTE v4[112];

  memcpy(v4, v1, sizeof(v4));
  return sub_2210C2134(a1);
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_2210C22C0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2210C22E0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 41) = v3;
  return result;
}

void type metadata accessor for PlatformConstants.Frame.Dimension()
{
  OUTLINED_FUNCTION_31_2();
}

unint64_t sub_2210C2328()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25565ABF0;
  if (!qword_25565ABF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556564C0);
    v2[0] = sub_2210C2394();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25565ABF0);
  }
  return result;
}

unint64_t sub_2210C2394()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25565ABF8;
  if (!qword_25565ABF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556564B8);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEFB78], v1);
    atomic_store(result, (unint64_t *)&qword_25565ABF8);
  }
  return result;
}

unint64_t sub_2210C23D8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_221017C08(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_221017C08(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = *(int *)(a3 + 24);
    v12 = a1 + v11;
    v13 = a2 + v11;
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_2210C24A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_221017894(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_221017894(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_2210C2500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_221017C08(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_221017C08(v8, v9);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t sub_2210C25A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_221017C08(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_221017894(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 24);
  sub_221017C08(v10, v11);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  sub_221017894(v12, v13);
  v14 = *(int *)(a3 + 24);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t sub_2210C2658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_2210C26D0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_221017894(v8, v9);
  v10 = *((_BYTE *)a2 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v10;
  sub_221017894(v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = (uint64_t)a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_2210C2768()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210C2774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_2210C27E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210C27F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ProductViewAXTypeStyleButtonSpacer()
{
  uint64_t result;

  result = qword_25565AC58;
  if (!qword_25565AC58)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2210C2894()
{
  unint64_t v0;

  sub_2210C2908();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2210C2908()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25565AC68[0])
  {
    sub_221008548();
    v0 = sub_2212F2EEC();
    if (!v1)
      atomic_store(v0, qword_25565AC68);
  }
}

uint64_t sub_2210C2960()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210C2970@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  int v14;
  uint64_t v15;

  v2 = v1;
  v4 = *v1;
  v5 = *((_BYTE *)v2 + 8);
  sub_221017C08(v4, v5);
  sub_22104359C();
  v7 = v6;
  result = sub_221017894(v4, v5);
  if ((v7 & 1) != 0)
  {
    type metadata accessor for ProductViewAXTypeStyleButtonSpacer();
    __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
    sub_2212F2EE0();
    v9 = v15;
    v10 = v2[2];
    v11 = *((_BYTE *)v2 + 24);
    sub_221017C08(v10, v11);
    sub_22104359C();
    v13 = v12;
    result = sub_221017894(v10, v11);
    if ((v13 & 1) != 0)
      v14 = 0;
    else
      v14 = 0x10000;
  }
  else
  {
    v9 = 0;
    v14 = 512;
  }
  *(_QWORD *)a1 = v9;
  *(_WORD *)(a1 + 8) = v14;
  *(_BYTE *)(a1 + 10) = BYTE2(v14);
  return result;
}

unint64_t sub_2210C2A64()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25565ACA0;
  if (!qword_25565ACA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565ACA8);
    v2 = sub_2210C2AC8();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25565ACA0);
  }
  return result;
}

unint64_t sub_2210C2AC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25565ACB0;
  if (!qword_25565ACB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_25565ACB8);
    v2[0] = MEMORY[0x24BDF4610];
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25565ACB0);
  }
  return result;
}

void sub_2210C2B2C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_22105D58C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_2210C2C08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  BOOL v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(unint64_t, unint64_t, uint64_t);
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(unint64_t, unint64_t, uint64_t);
  id *v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;

  v60 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v60 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v59 = *(_QWORD *)(v4 + 64) + 7;
  v62 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v62 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_2212F51B4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11 & 0xF8 | 7;
  v61 = v8;
  if (*(_QWORD *)(v10 + 64) <= 8uLL)
    v13 = 8;
  else
    v13 = *(_QWORD *)(v10 + 64);
  v63 = 8 * v13;
  if (v13 > 3)
    goto LABEL_8;
  v14 = ((1 << (8 * v13)) + 1) >> (8 * v13);
  v15 = 2;
  if (v14 > 0xFFFD)
    v15 = 4;
  if (v14 <= 0xFD)
LABEL_8:
    v15 = 1;
  v16 = ((v12
        + v8
        + ((((v59 + ((v5 + 16) & ~(unint64_t)v5)) & 0xFFFFFFFFFFFFFFF8)
          + v7
          + 16) & ~(unint64_t)v7)
        + 1) & ~v12)
      + ((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8)
      + 57;
  v17 = v7 | (unint64_t)v5 | v12;
  v18 = (v7 | v5 | v11) & 0x100000;
  v20 = v17 != 7 || v18 != 0 || v16 > 0x18;
  if (v20)
  {
    v21 = *a2;
    *a1 = *a2;
    v22 = (uint64_t *)(v21 + ((v17 + 16) & ~v17));
    swift_retain();
    return v22;
  }
  v57 = v9;
  v58 = *(_QWORD *)(v9 - 8);
  v23 = ~v12;
  v24 = a2[1];
  *a1 = *a2;
  a1[1] = v24;
  v25 = (char *)a2 + v5;
  v26 = ((unint64_t)a1 + v5 + 16) & ~(unint64_t)v5;
  v27 = (unint64_t)(v25 + 16) & ~(unint64_t)v5;
  v28 = *(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 16);
  swift_bridgeObjectRetain();
  v28(v26, v27, v60);
  v29 = (_QWORD *)((v59 + v26) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)((v59 + v27) & 0xFFFFFFFFFFFFFFF8);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = ((unint64_t)v29 + v7 + 16) & ~(unint64_t)v7;
  v33 = ((unint64_t)v30 + v7 + 16) & ~(unint64_t)v7;
  v34 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v34(v32, v33, v62);
  *(_BYTE *)(v32 + v61) = *(_BYTE *)(v33 + v61);
  v35 = (id *)((v33 + v61 + v12 + 1) & v23);
  if (v13 > 3)
    goto LABEL_19;
  v37 = ((1 << v63) + 1) >> v63;
  if (v37 > 0xFFFD)
  {
    v36 = *(_DWORD *)((char *)v35 + v13);
  }
  else
  {
    if (v37 <= 0xFD)
    {
LABEL_19:
      v36 = *((unsigned __int8 *)v35 + v13);
      goto LABEL_24;
    }
    v36 = *(unsigned __int16 *)((char *)v35 + v13);
  }
LABEL_24:
  v22 = a1;
  v38 = (v32 + v61 + v12 + 1) & v23;
  if (v36 >= 2)
  {
    if (v13 <= 3)
      v39 = v13;
    else
      v39 = 4;
    __asm { BR              X12 }
  }
  if (v36 == 1)
  {
    (*(void (**)(uint64_t, id *, uint64_t))(v58 + 16))(v38, v35, v57);
    if (v13 <= 3)
    {
      v42 = ((1 << v63) + 1) >> v63;
      if (v42 > 0xFFFD)
      {
        *(_DWORD *)(v38 + v13) = 1;
        goto LABEL_47;
      }
      if (v42 > 0xFD)
      {
        *(_WORD *)(v38 + v13) = 1;
        goto LABEL_47;
      }
    }
    *(_BYTE *)(v38 + v13) = 1;
    goto LABEL_36;
  }
  v40 = *v35;
  v41 = *v35;
  *(_QWORD *)v38 = v40;
  if (v13 <= 3)
  {
    v42 = ((1 << v63) + 1) >> v63;
    if (v42 > 0xFFFD)
    {
      *(_DWORD *)(v38 + v13) = 0;
    }
    else
    {
      if (v42 <= 0xFD)
        goto LABEL_33;
      *(_WORD *)(v38 + v13) = 0;
    }
LABEL_47:
    v20 = v42 > 0xFFFD;
    v44 = 2;
    if (v20)
      v44 = 4;
    goto LABEL_49;
  }
LABEL_33:
  *(_BYTE *)(v38 + v13) = 0;
LABEL_36:
  if (v13 > 3)
    goto LABEL_40;
  v43 = ((1 << v63) + 1) >> v63;
  v44 = 2;
  if (v43 > 0xFFFD)
    v44 = 4;
  if (v43 <= 0xFD)
LABEL_40:
    v44 = 1;
LABEL_49:
  *(_QWORD *)(((v38 | 7) + v44 + v13) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((((unint64_t)v35 | 7) + v44 + v13) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  if (v13 > 3)
    goto LABEL_53;
  v45 = ((1 << v63) + 1) >> v63;
  v46 = 2;
  if (v45 > 0xFFFD)
    v46 = 4;
  if (v45 <= 0xFD)
LABEL_53:
    v46 = 1;
  v47 = ((v13 + 7 + v46) & 0xFFFFFFFFFFFFFFF8) + 8;
  v48 = v47 + v38;
  v49 = (char *)v35 + v47;
  v50 = *(uint64_t *)((char *)v35 + v47);
  v51 = *((_QWORD *)v49 + 1);
  v52 = *((_QWORD *)v49 + 2);
  v53 = *((_QWORD *)v49 + 3);
  v54 = v49[32];
  sub_2210BC958();
  *(_QWORD *)v48 = v50;
  *(_QWORD *)(v48 + 8) = v51;
  *(_QWORD *)(v48 + 16) = v52;
  *(_QWORD *)(v48 + 24) = v53;
  *(_BYTE *)(v48 + 32) = v54;
  v55 = *((_QWORD *)v49 + 5);
  LOBYTE(v51) = v49[48];
  sub_221017C08(v55, v51);
  *(_QWORD *)(v48 + 40) = v55;
  *(_BYTE *)(v48 + 48) = v51;
  return v22;
}

uint64_t sub_2210C310C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  char v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  char *v21;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 32) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t))(v7 + 8))(v8);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = sub_2212F51B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  v13 = (id *)((v9 + v12 + v8 + 1) & ~v12);
  if (*(_QWORD *)(v11 + 64) <= 8uLL)
    v14 = 8;
  else
    v14 = *(_QWORD *)(v11 + 64);
  v15 = 8 * v14;
  if (v14 > 3)
    goto LABEL_5;
  v17 = ((1 << v15) + 1) >> v15;
  if (v17 > 0xFFFD)
  {
    v16 = *(_DWORD *)((char *)v13 + v14);
  }
  else
  {
    if (v17 <= 0xFD)
    {
LABEL_5:
      v16 = *((unsigned __int8 *)v13 + v14);
      goto LABEL_10;
    }
    v16 = *(unsigned __int16 *)((char *)v13 + v14);
  }
LABEL_10:
  if (v16 >= 2)
  {
    if (v14 <= 3)
      v18 = v14;
    else
      v18 = 4;
    __asm { BR              X13 }
  }
  if (v16 == 1)
    (*(void (**)(id *, uint64_t))(v11 + 8))(v13, v10);
  else

  swift_release();
  if (v14 > 3)
    goto LABEL_22;
  v19 = ((1 << v15) + 1) >> v15;
  v20 = 2;
  if (v19 > 0xFFFD)
    v20 = 4;
  if (v19 <= 0xFD)
LABEL_22:
    v20 = 1;
  v21 = (char *)v13 + ((v14 + 7 + v20) & 0xFFFFFFFFFFFFFFF8);
  sub_221046DA8();
  return sub_221047104(*((_QWORD *)v21 + 6), v21[56]);
}

_QWORD *sub_2210C3358(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id *v31;
  uint64_t v32;
  char v33;
  unsigned int v34;
  unsigned int v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  BOOL v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  v11(v9, v10, v6);
  v12 = *(_QWORD *)(v7 + 64) + 7;
  v13 = (_QWORD *)((v12 + v9) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = *(_QWORD *)(a3 + 32);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = ((unint64_t)v13 + v18 + 16) & ~v18;
  v20 = ((unint64_t)v14 + v18 + 16) & ~v18;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  swift_retain();
  v21(v19, v20, v16);
  v22 = *(_QWORD *)(v17 + 64);
  v23 = (_BYTE *)(v19 + v22);
  v24 = v20 + v22;
  *v23 = *(_BYTE *)(v20 + v22);
  v25 = sub_2212F51B4();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_DWORD *)(v26 + 80) & 0xF8;
  v28 = v27 + 8;
  v29 = (unint64_t)&v23[v27 + 8];
  v30 = ~v27 & 0xFFFFFFFFFFFFFFF8;
  v31 = (id *)((v28 + v24) & v30);
  if (*(_QWORD *)(v26 + 64) <= 8uLL)
    v32 = 8;
  else
    v32 = *(_QWORD *)(v26 + 64);
  v33 = 8 * v32;
  if (v32 > 3)
    goto LABEL_5;
  v35 = ((1 << v33) + 1) >> v33;
  if (v35 > 0xFFFD)
  {
    v34 = *(_DWORD *)((char *)v31 + v32);
  }
  else
  {
    if (v35 <= 0xFD)
    {
LABEL_5:
      v34 = *((unsigned __int8 *)v31 + v32);
      goto LABEL_10;
    }
    v34 = *(unsigned __int16 *)((char *)v31 + v32);
  }
LABEL_10:
  v36 = v29 & v30;
  if (v34 >= 2)
  {
    if (v32 <= 3)
      v37 = v32;
    else
      v37 = 4;
    __asm { BR              X13 }
  }
  if (v34 == 1)
  {
    (*(void (**)(unint64_t, id *, uint64_t))(v26 + 16))(v36, v31, v25);
    if (v32 <= 3)
    {
      v40 = ((1 << v33) + 1) >> v33;
      if (v40 > 0xFFFD)
      {
        *(_DWORD *)(v36 + v32) = 1;
        goto LABEL_33;
      }
      if (v40 > 0xFD)
      {
        *(_WORD *)(v36 + v32) = 1;
        goto LABEL_33;
      }
    }
    *(_BYTE *)(v36 + v32) = 1;
    goto LABEL_22;
  }
  v38 = *v31;
  v39 = *v31;
  *(_QWORD *)v36 = v38;
  if (v32 > 3)
  {
LABEL_19:
    *(_BYTE *)(v36 + v32) = 0;
LABEL_22:
    if (v32 > 3)
      goto LABEL_26;
    v41 = ((1 << v33) + 1) >> v33;
    v42 = 2;
    if (v41 > 0xFFFD)
      v42 = 4;
    if (v41 <= 0xFD)
LABEL_26:
      v42 = 1;
    goto LABEL_35;
  }
  v40 = ((1 << v33) + 1) >> v33;
  if (v40 > 0xFFFD)
  {
    *(_DWORD *)(v36 + v32) = 0;
  }
  else
  {
    if (v40 <= 0xFD)
      goto LABEL_19;
    *(_WORD *)(v36 + v32) = 0;
  }
LABEL_33:
  v43 = v40 > 0xFFFD;
  v42 = 2;
  if (v43)
    v42 = 4;
LABEL_35:
  *(_QWORD *)(((v36 | 7) + v42 + v32) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((((unint64_t)v31 | 7) + v42 + v32) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  if (v32 > 3)
    goto LABEL_39;
  v44 = ((1 << v33) + 1) >> v33;
  v45 = 2;
  if (v44 > 0xFFFD)
    v45 = 4;
  if (v44 <= 0xFD)
LABEL_39:
    v45 = 1;
  v46 = ((v32 + v45 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v47 = (char *)(v46 + v36);
  v48 = (char *)v31 + v46;
  v49 = *(uint64_t *)((char *)v31 + v46);
  v50 = *((_QWORD *)v48 + 1);
  v51 = *((_QWORD *)v48 + 2);
  v52 = *((_QWORD *)v48 + 3);
  v53 = v48[32];
  sub_2210BC958();
  *(_QWORD *)v47 = v49;
  *((_QWORD *)v47 + 1) = v50;
  *((_QWORD *)v47 + 2) = v51;
  *((_QWORD *)v47 + 3) = v52;
  v47[32] = v53;
  v54 = *((_QWORD *)v48 + 5);
  LOBYTE(v50) = v48[48];
  sub_221017C08(v54, v50);
  *((_QWORD *)v47 + 5) = v54;
  v47[48] = v50;
  return a1;
}

_QWORD *sub_2210C3740(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id *v27;
  id *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  id v38;
  id v39;
  unsigned int v40;
  char v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + v9) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = ((unint64_t)v11 + v15 + 16) & ~v15;
  v17 = ((unint64_t)v12 + v15 + 16) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v16, v17);
  v18 = *(_QWORD *)(v14 + 64);
  v19 = (_BYTE *)(v16 + v18);
  v20 = (_BYTE *)(v17 + v18);
  *v19 = *v20;
  v21 = sub_2212F51B4();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 80) & 0xF8;
  v24 = v23 + 8;
  v25 = (unint64_t)&v19[v23 + 8];
  v26 = ~v23 & 0xFFFFFFFFFFFFFFF8;
  v27 = (id *)(v25 & v26);
  v28 = (id *)((unint64_t)&v20[v24] & v26);
  if (*(_QWORD *)(v22 + 64) <= 8uLL)
    v29 = 8;
  else
    v29 = *(_QWORD *)(v22 + 64);
  if (v27 == v28)
    goto LABEL_37;
  v30 = v21;
  v31 = 8 * v29;
  if (v29 > 3)
    goto LABEL_6;
  v33 = ((1 << v31) + 1) >> v31;
  if (v33 > 0xFFFD)
  {
    v32 = *(_DWORD *)((char *)v27 + v29);
  }
  else
  {
    if (v33 <= 0xFD)
    {
LABEL_6:
      v32 = *((unsigned __int8 *)v27 + v29);
      goto LABEL_11;
    }
    v32 = *(unsigned __int16 *)((char *)v27 + v29);
  }
LABEL_11:
  if (v32 >= 2)
  {
    if (v29 <= 3)
      v34 = v29;
    else
      v34 = 4;
    __asm { BR              X12 }
  }
  if (v32 == 1)
    (*(void (**)(id *, uint64_t))(v22 + 8))(v27, v21);
  else

  if (v29 > 3)
    goto LABEL_20;
  v36 = ((1 << v31) + 1) >> v31;
  if (v36 > 0xFFFD)
  {
    v35 = *(_DWORD *)((char *)v28 + v29);
  }
  else
  {
    if (v36 <= 0xFD)
    {
LABEL_20:
      v35 = *((unsigned __int8 *)v28 + v29);
      goto LABEL_25;
    }
    v35 = *(unsigned __int16 *)((char *)v28 + v29);
  }
LABEL_25:
  if (v35 >= 2)
  {
    if (v29 <= 3)
      v37 = v29;
    else
      v37 = 4;
    __asm { BR              X12 }
  }
  if (v35 == 1)
  {
    (*(void (**)(id *, id *, uint64_t))(v22 + 16))(v27, v28, v30);
    if (v29 <= 3)
    {
      v42 = ((1 << v31) + 1) >> v31;
      if (v42 > 0xFFFD)
      {
        *(_DWORD *)((char *)v27 + v29) = 1;
        goto LABEL_45;
      }
      if (v42 > 0xFD)
      {
        *(_WORD *)((char *)v27 + v29) = 1;
        goto LABEL_45;
      }
    }
    *((_BYTE *)v27 + v29) = 1;
  }
  else
  {
    v38 = *v28;
    v39 = *v28;
    *v27 = v38;
    if (v29 <= 3)
    {
      v40 = ((1 << v31) + 1) >> v31;
      if (v40 > 0xFFFD)
      {
        *(_DWORD *)((char *)v27 + v29) = 0;
        goto LABEL_45;
      }
      if (v40 > 0xFD)
      {
        *(_WORD *)((char *)v27 + v29) = 0;
        goto LABEL_45;
      }
    }
    *((_BYTE *)v27 + v29) = 0;
  }
LABEL_37:
  if (v29 > 3)
  {
    v41 = 1;
LABEL_48:
    v44 = 1;
    goto LABEL_49;
  }
LABEL_45:
  v41 = 0;
  v43 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v44 = 2;
  if (v43 > 0xFFFD)
    v44 = 4;
  if (v43 <= 0xFD)
    goto LABEL_48;
LABEL_49:
  *(_QWORD *)((((unint64_t)v27 | 7) + v44 + v29) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((((unint64_t)v28 | 7)
                                                                                             + v44
                                                                                             + v29) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  if ((v41 & 1) != 0)
    goto LABEL_53;
  v45 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v46 = 2;
  if (v45 > 0xFFFD)
    v46 = 4;
  if (v45 <= 0xFD)
LABEL_53:
    v46 = 1;
  v47 = ((v29 + v46 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v48 = (char *)v27 + v47;
  v49 = (char *)v28 + v47;
  v50 = *(uint64_t *)((char *)v28 + v47);
  v51 = *(uint64_t *)((char *)v28 + v47 + 8);
  v52 = *((_QWORD *)v49 + 2);
  v53 = *((_QWORD *)v49 + 3);
  v54 = v49[32];
  sub_2210BC958();
  *(_QWORD *)v48 = v50;
  *((_QWORD *)v48 + 1) = v51;
  *((_QWORD *)v48 + 2) = v52;
  *((_QWORD *)v48 + 3) = v53;
  v48[32] = v54;
  sub_221046DA8();
  v55 = *((_QWORD *)v49 + 5);
  LOBYTE(v51) = v49[48];
  sub_221017C08(v55, v51);
  v56 = *((_QWORD *)v48 + 5);
  v57 = v48[48];
  *((_QWORD *)v48 + 5) = v55;
  v48[48] = v51;
  sub_221047104(v56, v57);
  return a1;
}

_OWORD *sub_2210C3C40(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  unsigned int v29;
  unint64_t v30;
  uint64_t v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  BOOL v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  *a1 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64) + 7;
  v10 = (_OWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_OWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = ((unint64_t)v10 + v13 + 16) & ~v13;
  v15 = ((unint64_t)v11 + v13 + 16) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v14, v15);
  v16 = *(_QWORD *)(v12 + 64);
  v17 = (_BYTE *)(v14 + v16);
  v18 = (_BYTE *)(v15 + v16);
  *v17 = *v18;
  v19 = sub_2212F51B4();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_DWORD *)(v20 + 80) & 0xF8;
  v22 = v21 + 8;
  v23 = (unint64_t)&v17[v21 + 8];
  v24 = ~v21 & 0xFFFFFFFFFFFFFFF8;
  v25 = (unint64_t)&v18[v22] & v24;
  if (*(_QWORD *)(v20 + 64) <= 8uLL)
    v26 = 8;
  else
    v26 = *(_QWORD *)(v20 + 64);
  v27 = 8 * v26;
  if (v26 > 3)
    goto LABEL_5;
  v29 = ((1 << v27) + 1) >> v27;
  if (v29 > 0xFFFD)
  {
    v28 = *(_DWORD *)(v25 + v26);
  }
  else
  {
    if (v29 <= 0xFD)
    {
LABEL_5:
      v28 = *(unsigned __int8 *)(v25 + v26);
      goto LABEL_10;
    }
    v28 = *(unsigned __int16 *)(v25 + v26);
  }
LABEL_10:
  v30 = v23 & v24;
  if (v28 >= 2)
  {
    if (v26 <= 3)
      v31 = v26;
    else
      v31 = 4;
    __asm { BR              X13 }
  }
  if (v28 == 1)
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(v30, v25, v19);
    if (v26 <= 3)
    {
      v32 = ((1 << v27) + 1) >> v27;
      if (v32 > 0xFFFD)
      {
        *(_DWORD *)(v30 + v26) = 1;
        goto LABEL_33;
      }
      if (v32 > 0xFD)
      {
        *(_WORD *)(v30 + v26) = 1;
        goto LABEL_33;
      }
    }
    *(_BYTE *)(v30 + v26) = 1;
    goto LABEL_22;
  }
  *(_QWORD *)v30 = *(_QWORD *)v25;
  if (v26 > 3)
  {
LABEL_19:
    *(_BYTE *)(v30 + v26) = 0;
LABEL_22:
    if (v26 > 3)
      goto LABEL_26;
    v33 = ((1 << v27) + 1) >> v27;
    v34 = 2;
    if (v33 > 0xFFFD)
      v34 = 4;
    if (v33 <= 0xFD)
LABEL_26:
      v34 = 1;
    goto LABEL_35;
  }
  v32 = ((1 << v27) + 1) >> v27;
  if (v32 > 0xFFFD)
  {
    *(_DWORD *)(v30 + v26) = 0;
  }
  else
  {
    if (v32 <= 0xFD)
      goto LABEL_19;
    *(_WORD *)(v30 + v26) = 0;
  }
LABEL_33:
  v35 = v32 > 0xFFFD;
  v34 = 2;
  if (v35)
    v34 = 4;
LABEL_35:
  *(_QWORD *)(((v30 | 7) + v34 + v26) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v25 | 7) + v34 + v26) & 0xFFFFFFFFFFFFF8);
  if (v26 > 3)
    goto LABEL_39;
  v36 = ((1 << v27) + 1) >> v27;
  v37 = 2;
  if (v36 > 0xFFFD)
    v37 = 4;
  if (v36 <= 0xFD)
LABEL_39:
    v37 = 1;
  v38 = ((v26 + v37 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v39 = (char *)(v38 + v30);
  v40 = (char *)(v38 + v25);
  v41 = *(_OWORD *)v40;
  v42 = *((_OWORD *)v40 + 1);
  v39[32] = v40[32];
  *(_OWORD *)v39 = v41;
  *((_OWORD *)v39 + 1) = v42;
  v43 = *((_QWORD *)v40 + 5);
  v39[48] = v40[48];
  *((_QWORD *)v39 + 5) = v43;
  return a1;
}

_QWORD *sub_2210C3FD8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  unsigned int v38;
  char v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  char v47;
  char *v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  uint64_t v52;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64) + 7;
  v12 = (_OWORD *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_OWORD *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  swift_release();
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = ((unint64_t)v12 + v15 + 16) & ~v15;
  v17 = ((unint64_t)v13 + v15 + 16) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v16, v17);
  v18 = *(_QWORD *)(v14 + 64);
  v19 = (_BYTE *)(v16 + v18);
  v20 = (_BYTE *)(v17 + v18);
  *v19 = *v20;
  v21 = sub_2212F51B4();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 80) & 0xF8;
  v24 = v23 + 8;
  v25 = (unint64_t)&v19[v23 + 8];
  v26 = ~v23 & 0xFFFFFFFFFFFFFFF8;
  v27 = v25 & v26;
  v28 = (unint64_t)&v20[v24] & v26;
  if (*(_QWORD *)(v22 + 64) <= 8uLL)
    v29 = 8;
  else
    v29 = *(_QWORD *)(v22 + 64);
  if (v27 == v28)
    goto LABEL_37;
  v30 = v21;
  v31 = 8 * v29;
  if (v29 > 3)
    goto LABEL_6;
  v33 = ((1 << v31) + 1) >> v31;
  if (v33 > 0xFFFD)
  {
    v32 = *(_DWORD *)(v27 + v29);
  }
  else
  {
    if (v33 <= 0xFD)
    {
LABEL_6:
      v32 = *(unsigned __int8 *)(v27 + v29);
      goto LABEL_11;
    }
    v32 = *(unsigned __int16 *)(v27 + v29);
  }
LABEL_11:
  if (v32 >= 2)
  {
    if (v29 <= 3)
      v34 = v29;
    else
      v34 = 4;
    __asm { BR              X12 }
  }
  if (v32 == 1)
    (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v27, v21);
  else

  if (v29 > 3)
    goto LABEL_20;
  v36 = ((1 << v31) + 1) >> v31;
  if (v36 > 0xFFFD)
  {
    v35 = *(_DWORD *)(v28 + v29);
  }
  else
  {
    if (v36 <= 0xFD)
    {
LABEL_20:
      v35 = *(unsigned __int8 *)(v28 + v29);
      goto LABEL_25;
    }
    v35 = *(unsigned __int16 *)(v28 + v29);
  }
LABEL_25:
  if (v35 >= 2)
  {
    if (v29 <= 3)
      v37 = v29;
    else
      v37 = 4;
    __asm { BR              X12 }
  }
  if (v35 == 1)
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 32))(v27, v28, v30);
    if (v29 <= 3)
    {
      v40 = ((1 << v31) + 1) >> v31;
      if (v40 > 0xFFFD)
      {
        *(_DWORD *)(v27 + v29) = 1;
        goto LABEL_45;
      }
      if (v40 > 0xFD)
      {
        *(_WORD *)(v27 + v29) = 1;
        goto LABEL_45;
      }
    }
    *(_BYTE *)(v27 + v29) = 1;
  }
  else
  {
    *(_QWORD *)v27 = *(_QWORD *)v28;
    if (v29 <= 3)
    {
      v38 = ((1 << v31) + 1) >> v31;
      if (v38 > 0xFFFD)
      {
        *(_DWORD *)(v27 + v29) = 0;
        goto LABEL_45;
      }
      if (v38 > 0xFD)
      {
        *(_WORD *)(v27 + v29) = 0;
        goto LABEL_45;
      }
    }
    *(_BYTE *)(v27 + v29) = 0;
  }
LABEL_37:
  if (v29 > 3)
  {
    v39 = 1;
LABEL_48:
    v42 = 1;
    goto LABEL_49;
  }
LABEL_45:
  v39 = 0;
  v41 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v42 = 2;
  if (v41 > 0xFFFD)
    v42 = 4;
  if (v41 <= 0xFD)
    goto LABEL_48;
LABEL_49:
  *(_QWORD *)(((v27 | 7) + v42 + v29) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((v28 | 7) + v42 + v29) & 0xFFFFFFFFFFFFF8);
  swift_release();
  if ((v39 & 1) != 0)
    goto LABEL_53;
  v43 = ((1 << (8 * v29)) + 1) >> (8 * v29);
  v44 = 2;
  if (v43 > 0xFFFD)
    v44 = 4;
  if (v43 <= 0xFD)
LABEL_53:
    v44 = 1;
  v45 = ((v29 + v44 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v46 = (char *)(v45 + v28);
  v47 = v46[32];
  v48 = (char *)(v45 + v27);
  v49 = *((_OWORD *)v46 + 1);
  *(_OWORD *)v48 = *(_OWORD *)v46;
  *((_OWORD *)v48 + 1) = v49;
  v48[32] = v47;
  sub_221046DA8();
  v50 = v46[48];
  v51 = *((_QWORD *)v48 + 5);
  v52 = v48[48];
  *((_QWORD *)v48 + 5) = *((_QWORD *)v46 + 5);
  v48[48] = v50;
  sub_221047104(v51, v52);
  return a1;
}

uint64_t sub_2210C4484(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  char v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  char v41;
  int v42;
  unsigned int v43;
  char v44;
  unsigned int v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  int v54;
  unsigned int v55;
  char v56;
  unsigned int v57;
  unsigned int v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  unsigned int v62;
  unsigned int v63;
  uint64_t v64;
  char v65;
  int v66;
  unsigned int v67;
  char v68;
  unsigned int v69;
  unsigned int v70;
  char v71;
  int v72;
  unsigned int v73;
  char v74;
  int v75;
  char v76;
  int v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  unsigned int v81;
  char v82;
  unsigned int v83;
  unsigned int v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  char v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  char v100;
  unsigned int v101;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v7 <= v10)
    v11 = *(_DWORD *)(v9 + 84);
  else
    v11 = *(_DWORD *)(v6 + 84);
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  v13 = *(_QWORD *)(sub_2212F51B4() - 8);
  v14 = 8;
  if (*(_QWORD *)(v13 + 64) <= 8uLL)
    v15 = 8;
  else
    v15 = *(_QWORD *)(v13 + 64);
  v16 = 8 * v15;
  if (v15 > 3)
  {
    v17 = 3;
    goto LABEL_20;
  }
  v18 = ((1 << v16) + 1) >> v16;
  if (v18 >= 0xFFFE)
    v19 = 32;
  else
    v19 = 16;
  if (v18 >= 0xFE)
    v14 = v19;
  else
    v14 = 8;
  if (v18 <= 0xFFFD)
  {
    v17 = v18 + 2;
LABEL_20:
    v20 = (1 << v14) - v17;
    if (v20 <= 0x7FFFFFFE)
      v21 = 2147483646;
    else
      v21 = v20;
    if ((v20 & 0x80000000) == 0)
      goto LABEL_25;
  }
  v21 = 0x7FFFFFFF;
LABEL_25:
  if (v21 <= v12)
    v22 = v12;
  else
    v22 = v21;
  v23 = *(unsigned __int8 *)(v6 + 80);
  v24 = *(unsigned __int8 *)(v9 + 80);
  v25 = *(_DWORD *)(v13 + 80);
  if (v15 > 3)
    goto LABEL_32;
  v26 = ((1 << v16) + 1) >> v16;
  v27 = 4;
  if (v26 <= 0xFFFD)
    v27 = 2;
  if (v26 <= 0xFD)
LABEL_32:
    v27 = 1;
  if (!a2)
    return 0;
  v28 = *(_QWORD *)(v6 + 64) + 7;
  v29 = v24 + 16;
  v30 = v25 & 0xF8 | 7;
  v31 = *(_QWORD *)(v9 + 64) + v30 + 1;
  v32 = v15 + 7;
  if (a2 > v22)
  {
    v33 = ((v31 + ((v29 + ((v28 + ((v23 + 16) & ~v23)) & 0xFFFFFFFFFFFFFFF8)) & ~v24)) & ~v30)
        + ((v32 + v27) & 0xFFFFFFFFFFFFFFF8)
        + 57;
    v34 = 8 * v33;
    if (v33 <= 3)
    {
      v35 = ((a2 - v22 + ~(-1 << v34)) >> v34) + 1;
      if (HIWORD(v35))
      {
        v36 = *(_DWORD *)&a1[v33];
        if (v36)
          goto LABEL_40;
        goto LABEL_48;
      }
      if (v35 > 0xFF)
      {
        v36 = *(unsigned __int16 *)&a1[v33];
        if (*(_WORD *)&a1[v33])
          goto LABEL_40;
        goto LABEL_48;
      }
      if (v35 < 2)
        goto LABEL_48;
    }
    v36 = a1[v33];
    if (a1[v33])
    {
LABEL_40:
      v37 = (v36 - 1) << v34;
      if (v33 >= 4)
        v37 = 0;
      if ((_DWORD)v33 == 1)
        v38 = *a1;
      else
        v38 = *(_DWORD *)a1;
      v39 = v22 + (v38 | v37);
      return v39 + 1;
    }
  }
LABEL_48:
  v41 = 8;
  if (v15 <= 3)
  {
    v43 = ((1 << v16) + 1) >> v16;
    if (v43 >= 0xFFFE)
      v44 = 32;
    else
      v44 = 16;
    if (v43 >= 0xFE)
      v41 = v44;
    else
      v41 = 8;
    if (v43 > 0xFFFD)
      goto LABEL_62;
    v42 = v43 + 2;
  }
  else
  {
    v42 = 3;
  }
  v45 = (1 << v41) - v42;
  if (v45 <= 0x7FFFFFFE)
    v46 = 2147483646;
  else
    v46 = v45;
  if ((v45 & 0x80000000) != 0)
LABEL_62:
    v46 = 0x7FFFFFFF;
  if (v46 <= v12)
    v46 = v12;
  if (v46 == 0x7FFFFFFF)
  {
    v47 = *((_QWORD *)a1 + 1);
    if (v47 >= 0xFFFFFFFF)
      LODWORD(v47) = -1;
    return (v47 + 1);
  }
  v48 = (unint64_t)&a1[v23 + 16] & ~v23;
  if ((_DWORD)v7 == v46)
  {
    v49 = v7;
    v50 = v5;
    return __swift_getEnumTagSinglePayload(v48, v49, v50);
  }
  v48 = (v29 + ((v28 + v48) & 0xFFFFFFFFFFFFFFF8)) & ~v24;
  if ((_DWORD)v10 == v46)
  {
    v49 = v10;
    v50 = v8;
    return __swift_getEnumTagSinglePayload(v48, v49, v50);
  }
  v51 = ~v30;
  v52 = v31 + v48;
  v53 = 8;
  if (v15 > 3)
  {
    v54 = 3;
    goto LABEL_86;
  }
  v55 = ((1 << v16) + 1) >> v16;
  if (v55 >= 0xFFFE)
    v56 = 32;
  else
    v56 = 16;
  if (v55 >= 0xFE)
    v53 = v56;
  else
    v53 = 8;
  if (v55 <= 0xFFFD)
  {
    v54 = v55 + 2;
LABEL_86:
    v57 = (1 << v53) - v54;
    if (v57 <= 0x7FFFFFFE)
      v58 = 2147483646;
    else
      v58 = v57;
    if ((v57 & 0x80000000) == 0)
      goto LABEL_91;
  }
  v58 = 0x7FFFFFFF;
LABEL_91:
  v59 = v52 & v51;
  if (v15 > 3)
    goto LABEL_95;
  v60 = ((1 << v16) + 1) >> v16;
  v61 = 2;
  if (v60 > 0xFFFD)
    v61 = 4;
  if (v60 <= 0xFD)
LABEL_95:
    v61 = 1;
  if (v46 > v58)
  {
    if (((((v32 + v61) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v62 = 2;
    else
      v62 = v46 - v58 + 1;
    if (v62 >= 0x10000)
      v63 = 4;
    else
      v63 = 2;
    if (v62 < 0x100)
      v63 = 1;
    if (v62 >= 2)
      v64 = v63;
    else
      v64 = 0;
    __asm { BR              X17 }
  }
  v65 = 8;
  if (v15 <= 3)
  {
    v67 = ((1 << v16) + 1) >> v16;
    if (v67 >= 0xFFFE)
      v68 = 32;
    else
      v68 = 16;
    if (v67 >= 0xFE)
      v65 = v68;
    else
      v65 = 8;
    if (v67 > 0xFFFD)
      goto LABEL_123;
    v66 = v67 + 2;
  }
  else
  {
    v66 = 3;
  }
  v69 = (1 << v65) - v66;
  if (v69 <= 0x7FFFFFFE)
    v70 = 2147483646;
  else
    v70 = v69;
  if ((v69 & 0x80000000) != 0)
LABEL_123:
    v70 = 0x7FFFFFFF;
  v71 = 8;
  if (v15 > 3)
  {
    v72 = 3;
    goto LABEL_134;
  }
  v73 = ((1 << v16) + 1) >> v16;
  if (v73 >= 0xFFFE)
    v74 = 32;
  else
    v74 = 16;
  if (v73 >= 0xFE)
    v71 = v74;
  else
    v71 = 8;
  if (v73 <= 0xFFFD)
  {
    v72 = v73 + 2;
LABEL_134:
    v75 = (1 << v71) - v72;
    if ((v75 & 0x80000000) == 0)
      goto LABEL_136;
  }
  v75 = 0x7FFFFFFF;
LABEL_136:
  if (v75 == v70)
  {
    v76 = 8;
    if (v15 <= 3)
    {
      v81 = ((1 << v16) + 1) >> v16;
      if (v81 >= 0xFFFE)
        v82 = 32;
      else
        v82 = 16;
      if (v81 >= 0xFE)
        v76 = v82;
      else
        v76 = 8;
      if (v81 > 0xFFFD)
        goto LABEL_158;
      v77 = v81 + 2;
    }
    else
    {
      v77 = 3;
    }
    v83 = (1 << v76) - v77;
    if ((v83 & 0x80000000) == 0)
    {
LABEL_159:
      if (v15 > 3)
        goto LABEL_163;
      v84 = ((1 << v16) + 1) >> v16;
      v85 = 2;
      if (v84 > 0xFFFD)
        v85 = 4;
      if (v84 <= 0xFD)
LABEL_163:
        v85 = 1;
      v86 = v70 - v83;
      if (v70 <= v83)
        goto LABEL_181;
      v87 = v85 + v15;
      v88 = 8 * (v85 + v15);
      if (v87 > 3)
        goto LABEL_166;
      v90 = ((v86 + ~(-1 << v88)) >> v88) + 1;
      if (HIWORD(v90))
      {
        v89 = *(_DWORD *)(v59 + v87);
      }
      else
      {
        if (v90 <= 0xFF)
        {
          if (v90 < 2)
            goto LABEL_181;
LABEL_166:
          v89 = *(unsigned __int8 *)(v59 + v87);
          goto LABEL_173;
        }
        v89 = *(unsigned __int16 *)(v59 + v87);
      }
LABEL_173:
      if (v89)
      {
        v91 = (v89 - 1) << v88;
        if (v87 > 3)
          v91 = 0;
        if ((_DWORD)v87)
        {
          if (v87 <= 3)
            v92 = v87;
          else
            v92 = 4;
          __asm { BR              X13 }
        }
        v39 = v83 + v91;
        return v39 + 1;
      }
LABEL_181:
      if (v83)
      {
        if (v15 > 3)
          goto LABEL_183;
        v97 = ((1 << v16) + 1) >> v16;
        if (v97 > 0xFFFD)
        {
          v94 = *(_DWORD *)(v59 + v15);
          v95 = ~v94;
          goto LABEL_196;
        }
        if (v97 < 0xFE)
        {
LABEL_183:
          v93 = *(unsigned __int8 *)(v59 + v15);
          v94 = v93 | 0xFFFFFF00;
          v95 = v93 ^ 0xFF;
          if (v15 > 3)
          {
            v96 = 3;
            goto LABEL_191;
          }
        }
        else
        {
          v98 = *(unsigned __int16 *)(v59 + v15);
          v94 = v98 | 0xFFFF0000;
          v95 = v98 ^ 0xFFFF;
        }
        v99 = ((1 << v16) + 1) >> v16;
        if (v99 <= 0xFFFD)
        {
          v96 = v99 + 2;
          if (v99 > 0xFD)
          {
            v100 = 16;
LABEL_195:
            v101 = (1 << v100) - v96;
            if ((v101 & 0x80000000) == 0)
              goto LABEL_197;
            goto LABEL_196;
          }
LABEL_191:
          v100 = 8;
          goto LABEL_195;
        }
LABEL_196:
        v101 = 0x7FFFFFFF;
LABEL_197:
        if (v101 > v95)
          return -v94;
        else
          return 0;
      }
      return 0;
    }
LABEL_158:
    v83 = 0x7FFFFFFF;
    goto LABEL_159;
  }
  if (v15 > 3)
    goto LABEL_143;
  v78 = ((1 << v16) + 1) >> v16;
  v79 = 2;
  if (v78 > 0xFFFD)
    v79 = 4;
  if (v78 <= 0xFD)
LABEL_143:
    v79 = 1;
  v80 = *(_QWORD *)((v32 + v59 + v79) & 0xFFFFFFFFFFFFF8);
  if (v80 >= 0xFFFFFFFF)
    LODWORD(v80) = -1;
  if ((v80 + 1) >= 2)
    return v80;
  else
    return 0;
}

void sub_2210C4C8C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  int v15;
  unsigned int v16;
  char v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  size_t v24;
  char v25;
  int v26;
  unsigned int v27;
  unsigned int v28;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  if (*(_DWORD *)(v7 + 84) <= *(_DWORD *)(v8 + 84))
    v9 = *(_DWORD *)(v8 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(sub_2212F51B4() - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = 8;
  if (v12 <= 8)
    v12 = 8;
  v14 = 8 * v12;
  if (v12 <= 3)
  {
    v16 = ((1 << v14) + 1) >> v14;
    if (v16 >= 0xFFFE)
      v17 = 32;
    else
      v17 = 16;
    if (v16 >= 0xFE)
      v13 = v17;
    else
      v13 = 8;
    if (v16 > 0xFFFD)
    {
LABEL_23:
      v19 = 0x7FFFFFFF;
LABEL_24:
      if (v19 <= v10)
        v20 = v10;
      else
        v20 = v19;
      v21 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
      if (v12 > 3)
        goto LABEL_31;
      v22 = ((1 << v14) + 1) >> v14;
      v23 = 2;
      if (v22 > 0xFFFD)
        v23 = 4;
      if (v22 <= 0xFD)
LABEL_31:
        v23 = 1;
      v24 = ((*(_QWORD *)(v8 + 64)
            + v21
            + 1
            + ((*(unsigned __int8 *)(v8 + 80)
              + 16
              + ((*(_QWORD *)(v7 + 64)
                + 7
                + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~v21)
          + ((v12 + 7 + v23) & 0xFFFFFFFFFFFFFFF8)
          + 57;
      v25 = 8 * v24;
      if (a3 <= v20)
      {
        v26 = 0;
      }
      else if (v24 <= 3)
      {
        v28 = ((a3 - v20 + ~(-1 << v25)) >> v25) + 1;
        if (HIWORD(v28))
        {
          v26 = 4;
        }
        else if (v28 >= 0x100)
        {
          v26 = 2;
        }
        else
        {
          v26 = v28 > 1;
        }
      }
      else
      {
        v26 = 1;
      }
      if (v20 >= a2)
        __asm { BR              X2 }
      v27 = ~v20 + a2;
      if (v24 < 4)
      {
        v27 &= ~(-1 << v25);
        bzero(a1, v24);
        if ((_DWORD)v24 == 1)
        {
          *a1 = v27;
          goto LABEL_47;
        }
      }
      else
      {
        bzero(a1, v24);
      }
      *(_DWORD *)a1 = v27;
LABEL_47:
      __asm { BR              X10 }
    }
    v15 = v16 + 2;
  }
  else
  {
    v15 = 3;
  }
  v18 = (1 << v13) - v15;
  if (v18 <= 0x7FFFFFFE)
    v19 = 2147483646;
  else
    v19 = v18;
  if ((v18 & 0x80000000) == 0)
    goto LABEL_24;
  goto LABEL_23;
}

void sub_2210C4FE4()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x2210C5048);
}

void sub_2210C4FEC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x2210C5048);
}

void sub_2210C4FF4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = 0;
  if (!v0)
    JUMPOUT(0x2210C5048);
  JUMPOUT(0x2210C4F24);
}

void sub_2210C51BC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2210C5048);
}

uint64_t sub_2210C51E0@<X0>(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  unsigned int v3;
  _BYTE *v4;
  uint64_t v5;
  char v6;
  int v7;
  unsigned int v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  int v13;
  unsigned int v14;
  char v15;
  int v16;
  char v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  _QWORD *v21;
  unsigned int v22;
  char v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  size_t v27;
  char v28;
  BOOL v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v34;
  int v35;

  v4[v5] = 0;
  v6 = 8;
  if (a1 <= 3)
  {
    v8 = ((1 << v1) + 1) >> v1;
    if (v8 >= 0xFFFE)
      v9 = 32;
    else
      v9 = 16;
    if (v8 >= 0xFE)
      v6 = v9;
    else
      v6 = 8;
    if (v8 > 0xFFFD)
      goto LABEL_15;
    v7 = v8 + 2;
  }
  else
  {
    v7 = 3;
  }
  v10 = (1 << v6) - v7;
  if (v10 <= 0x7FFFFFFE)
    v11 = 2147483646;
  else
    v11 = v10;
  if ((v10 & 0x80000000) != 0)
LABEL_15:
    v11 = 0x7FFFFFFF;
  v12 = 8;
  if (a1 > 3)
  {
    v13 = 3;
    goto LABEL_26;
  }
  v14 = ((1 << v1) + 1) >> v1;
  if (v14 >= 0xFFFE)
    v15 = 32;
  else
    v15 = 16;
  if (v14 >= 0xFE)
    v12 = v15;
  else
    v12 = 8;
  if (v14 <= 0xFFFD)
  {
    v13 = v14 + 2;
LABEL_26:
    v16 = (1 << v12) - v13;
    if ((v16 & 0x80000000) == 0)
      goto LABEL_28;
  }
  v16 = 0x7FFFFFFF;
LABEL_28:
  if (v16 != v11)
  {
    if (a1 > 3)
      goto LABEL_35;
    v19 = ((1 << v1) + 1) >> v1;
    v20 = 2;
    if (v19 > 0xFFFD)
      v20 = 4;
    if (v19 <= 0xFD)
LABEL_35:
      v20 = 1;
    v21 = (_QWORD *)((unint64_t)&v4[v2 + v20] & 0xFFFFFFFFFFFFFFF8);
    if (v3 > 0x7FFFFFFE)
    {
      *v21 = 0;
      *(_DWORD *)v21 = v3 - 0x7FFFFFFF;
    }
    else
    {
      *v21 = v3;
    }
    JUMPOUT(0x2210C5048);
  }
  v17 = 8;
  if (a1 <= 3)
  {
    v22 = ((1 << v1) + 1) >> v1;
    if (v22 >= 0xFFFE)
      v23 = 32;
    else
      v23 = 16;
    if (v22 >= 0xFE)
      v17 = v23;
    else
      v17 = 8;
    if (v22 > 0xFFFD)
      goto LABEL_47;
    v18 = v22 + 2;
  }
  else
  {
    v18 = 3;
  }
  v24 = (1 << v17) - v18;
  if ((v24 & 0x80000000) != 0)
LABEL_47:
    v24 = 0x7FFFFFFF;
  if (a1 > 3)
    goto LABEL_52;
  v25 = ((1 << v1) + 1) >> v1;
  v26 = 2;
  if (v25 > 0xFFFD)
    v26 = 4;
  if (v25 <= 0xFD)
LABEL_52:
    v26 = 1;
  v27 = v26 + a1;
  v28 = 8 * (v26 + a1);
  v29 = v11 >= v24;
  v30 = v11 - v24;
  if (v30 != 0 && v29)
  {
    if (v27 <= 3)
    {
      v34 = ((v30 + ~(-1 << v28)) >> v28) + 1;
      if (HIWORD(v34))
      {
        v31 = 4u;
      }
      else if (v34 >= 0x100)
      {
        v31 = 2;
      }
      else
      {
        v31 = v34 > 1;
      }
    }
    else
    {
      v31 = 1u;
    }
  }
  else
  {
    v31 = 0;
  }
  if (v24 >= v3)
    return ((uint64_t (*)(void))((char *)&loc_2210C545C + 4 * byte_2213038E1[v31]))();
  v32 = ~v24 + v3;
  if (v27 < 4)
  {
    if ((_DWORD)v27)
    {
      v35 = v32 & ~(-1 << v28);
      bzero(v4, v27);
      if ((_DWORD)v27 == 3)
      {
        *(_WORD *)v4 = v35;
        v4[2] = BYTE2(v35);
      }
      else if ((_DWORD)v27 == 2)
      {
        *(_WORD *)v4 = v35;
      }
      else
      {
        *v4 = v35;
      }
    }
  }
  else
  {
    bzero(v4, v27);
    *(_DWORD *)v4 = v32;
  }
  return ((uint64_t (*)(void))((char *)&loc_2210C5048 + 4 * word_2213038E6[v31]))();
}

void sub_2210C5564()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x2210C5048);
}

void sub_2210C556C()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x2210C5048);
}

void sub_2210C5574()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x2210C5048);
}

void type metadata accessor for DynamicSubscriptionOfferView()
{
  JUMPOUT(0x22766BA10);
}

uint64_t sub_2210C558C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2210C55C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Product.TaskState(0);
  MEMORY[0x24BDAC7A8](v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658518);
  sub_2212F4764();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + *(int *)(a1 + 68), v3);
  sub_2210C5734(v1);
}

uint64_t sub_2210C56A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;

  *(_QWORD *)(v7 - 72) = a1;
  v8 = v5 + *(int *)(v6 + 92);
  v9 = *(_QWORD *)v8;
  v10 = *(unsigned __int8 *)(v8 + 8);
  sub_221017C08(*(_QWORD *)v8, *(_BYTE *)(v8 + 8));
  sub_221044EE4();
  v12 = v11;
  sub_221047104(v9, v10);
  sub_2210C69AC();
  return sub_2212335F4(0, 0, v4, v3, v7 - 72, v12, v1, (uint64_t)&type metadata for SubscriptionOfferViewStyleProtocolConfiguration.Icon, v2);
}

void sub_2210C5734(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658538);
  v1 = sub_2212F3348();
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for DynamicSubscriptionOfferView();
}

uint64_t sub_2210C5800(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  __int128 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_BYTE *)(v4 + a1[20]) == 1 && swift_dynamicCastMetatype())
  {
    *(_BYTE *)(v7 - 176) = 0;
    sub_22105ECB4();
    return sub_2212F4854();
  }
  else
  {
    v10 = v4 + a1[22];
    v11 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)(v7 - 128) = *(_OWORD *)v10;
    *(_OWORD *)(v7 - 112) = v11;
    *(_BYTE *)(v7 - 96) = *(_BYTE *)(v10 + 32);
    sub_2210C692C(v7 - 128, v7 - 176);
    sub_2210C6974(v7 - 176, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2210BC958);
    sub_2210458A8();
    sub_2210C6974(v7 - 128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_221046DA8);
    swift_release();
    if (swift_dynamicCastMetatype()
      || swift_dynamicCastMetatype()
      || swift_dynamicCastMetatype()
      || swift_dynamicCastMetatype()
      || swift_dynamicCastMetatype())
    {
      sub_22105EC34();
      sub_2212F4284();
      v12 = sub_22105EC70();
      *(_QWORD *)(v7 - 192) = v1;
      *(_QWORD *)(v7 - 184) = v12;
      v13 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v3, v7 - 192);
      v14 = v6;
      v15 = v3;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 200) + 16))(v5, v4 + a1[19], v2);
      v14 = v5;
      v15 = v2;
      v13 = v1;
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_221233550)(v14, v15, v13);
  }
}

void sub_2210C59A8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[10];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v19 = a2;
  v18 = sub_2212F5640();
  v17 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v4);
  v15 = *(a1 - 1);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_19_4((uint64_t)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_2212F4C08();
  v8 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  v21 = v8;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v10);
  v11 = a1[3];
  v12 = a1[5];
  v13 = a1[6];
  v22 = a1[2];
  v23 = v11;
  v14[5] = v22;
  v14[4] = v11;
  v24 = v12;
  v25 = v13;
  v14[3] = v12;
  v14[2] = v13;
  type metadata accessor for StaticSubscriptionOfferView();
}

void sub_2210C5AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_2212F3A20();
  v16 = sub_2212F4674();
  *(_QWORD *)(v15 - 304) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v15 - 352) = v16;
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v15 - 368) = (char *)&a9 - v17;
  _s16TaskViewModifierVMa(255);
  *(_QWORD *)(v15 - 296) = *(_QWORD *)(sub_2212F3348() - 8);
  OUTLINED_FUNCTION_1_12();
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v15 - 360) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_19_4((uint64_t)&a9 - v21);
  *(_QWORD *)(v15 - 224) = v13;
  *(_QWORD *)(v15 - 216) = v12;
  *(_QWORD *)(v15 - 208) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v15 - 200) = v10;
  v22 = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v15 - 192) = v11;
  *(_QWORD *)(v15 - 184) = v22;
  *(_QWORD *)(v15 - 176) = v14;
  OUTLINED_FUNCTION_8_2();
}

void sub_2210C5BC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v7 = MEMORY[0x24BDF4760];
  *(_QWORD *)(v6 - 136) = a1;
  *(_QWORD *)(v6 - 128) = v7;
  v8 = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v1, v6 - 136);
  sub_2212F4668();
  *(_QWORD *)(v6 - 408) = *v5;
  *(_QWORD *)(v6 - 416) = v5[1];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v6 - 248) + 104))(*(_QWORD *)(v6 - 344), *MEMORY[0x24BDEA058], *(_QWORD *)(v6 - 256));
  v9 = *(_QWORD *)(v6 - 336);
  v10 = *(_QWORD *)(v6 - 328);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v9 + 16))(v10, v5, v2);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = (char *)swift_allocObject();
  v13 = *(_QWORD *)(v6 - 384);
  *((_QWORD *)v12 + 2) = *(_QWORD *)(v6 - 376);
  *((_QWORD *)v12 + 3) = v13;
  v14 = *(_QWORD *)(v6 - 392);
  *((_QWORD *)v12 + 4) = v4;
  *((_QWORD *)v12 + 5) = v14;
  *((_QWORD *)v12 + 6) = *(_QWORD *)(v6 - 400);
  *((_QWORD *)v12 + 7) = v3;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(&v12[v11], v10, v2);
  *(_QWORD *)(v6 - 144) = v8;
  OUTLINED_FUNCTION_8_2();
}

void sub_2210C5CF0()
{
  sub_2212F5628();
  sub_2210D3628();
}

void sub_2210C5D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  swift_release();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 280) + 8))(v0, *(_QWORD *)(v6 - 272));
  OUTLINED_FUNCTION_7_17(*(_QWORD *)(v6 - 248));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 304) + 8))(v1, v2);
  v7 = sub_22105EAB4();
  *(_QWORD *)(v6 - 160) = v4;
  *(_QWORD *)(v6 - 152) = v7;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v5, v6 - 160);
  v8 = *(_QWORD *)(v6 - 320);
  sub_221088D68(v3, v5, v8);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 296) + 8);
  v9(v3, v5);
  sub_221087210(v8, v5, *(_QWORD *)(v6 - 264));
  v9(v8, v5);
  OUTLINED_FUNCTION_19();
}

void sub_2210C5E14(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[34];

  v12[12] = a3;
  v12[11] = a2;
  v12[13] = a1;
  v12[18] = a4;
  v4 = MEMORY[0x24BDAC7A8](a1);
  v12[5] = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[2] = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v12[3] = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[22] = v8;
  v12[23] = v9;
  v12[24] = v10;
  v12[25] = v11;
  type metadata accessor for StaticSubscriptionOfferView();
}

void sub_2210C5EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(v13 - 320) = *(_QWORD *)(a1 - 8);
  v14 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 296) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 304) = (char *)&a9 - v16;
  v17 = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v13 - 344) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657180);
  MEMORY[0x24BDAC7A8](v19);
  v20 = type metadata accessor for Product.TaskState(0);
  MEMORY[0x24BDAC7A8](v20);
  v21 = sub_2212F51B4();
  *(_QWORD *)(v13 - 240) = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_2212F3A20();
  *(_QWORD *)(v13 - 224) = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v13 - 216) = v23;
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v13 - 232) = (char *)&a9 - v24;
  *(_QWORD *)(v13 - 288) = v9;
  *(_QWORD *)(v13 - 176) = v9;
  *(_QWORD *)(v13 - 168) = v10;
  *(_QWORD *)(v13 - 280) = v10;
  *(_QWORD *)(v13 - 160) = *(_QWORD *)(v13 - 264);
  *(_QWORD *)(v13 - 152) = v12;
  *(_QWORD *)(v13 - 272) = v12;
  *(_QWORD *)(v13 - 264) = v11;
  v25 = *(_QWORD *)(v13 - 256);
  *(_QWORD *)(v13 - 144) = v11;
  *(_QWORD *)(v13 - 136) = v25;
  type metadata accessor for DynamicSubscriptionOfferView();
}

void sub_2210C60C8(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v8 = *(_QWORD *)(v6 - 248);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658518);
  sub_2212F4764();
  Product.TaskState.product.getter(v1);
  sub_22105EBF8(v2, type metadata accessor for Product.TaskState);
  if (__swift_getEnumTagSinglePayload(v1, 1, v3) == 1)
  {
    sub_22105EB38(v1);
    v9 = v8 + a1[22];
    v10 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)(v6 - 128) = *(_OWORD *)v9;
    *(_OWORD *)(v6 - 112) = v10;
    *(_BYTE *)(v6 - 96) = *(_BYTE *)(v9 + 32);
    sub_2210C692C(v6 - 128, v6 - 176);
    sub_2210C6974(v6 - 176, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2210BC958);
    sub_2210458A8();
    sub_2210C6974(v6 - 128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_221046DA8);
    sub_2210C55C8((uint64_t)a1);
  }
  v11 = *(_QWORD *)(v6 - 240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v5, v1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v4, v5, v3);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v6 - 336) + 16))(*(_QWORD *)(v6 - 328), v8 + a1[17], *(_QWORD *)(v6 - 288));
  (*(void (**)(uint64_t))(v8 + a1[18]))(v5);
  sub_2210BECF0(v4, *(_QWORD *)(v6 - 296));
}

void sub_2210C62CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  MEMORY[0x22766BAC4](&unk_221303000, v0);
  v5 = *(_QWORD *)(v4 - 304);
  sub_221088D68(v1, v0, v5);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 320) + 8);
  v6(v1, v0);
  sub_221087210(v5, v0, v1);
  sub_22113B0A4();
  v6(v1, v0);
  v6(v5, v0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 240) + 8))(v3, v2);
  JUMPOUT(0x2210C637CLL);
}

uint64_t sub_2210C63F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  type metadata accessor for Product.TaskState(0);
  v8[16] = swift_task_alloc();
  v8[17] = swift_task_alloc();
  sub_2212F55F8();
  v8[18] = sub_2212F55EC();
  sub_2212F55D4();
  return swift_task_switch();
}

void sub_2210C6498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_OWORD *)(v0 + 96);
  v5 = *(_OWORD *)(v0 + 80);
  v3 = *(_OWORD *)(v0 + 112);
  swift_release();
  sub_22105EAF4(v2, v1);
  *(_OWORD *)(v0 + 16) = v5;
  *(_OWORD *)(v0 + 32) = v4;
  *(_OWORD *)(v0 + 48) = v3;
  OUTLINED_FUNCTION_3_18();
}

uint64_t sub_2210C6500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22105EAF4(v0, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658518);
  sub_2212F4770();
  sub_22105EBF8(v0, type metadata accessor for Product.TaskState);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_2210C6568(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;

  OUTLINED_FUNCTION_4_10();
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v6);
  *a3 = a1;
  a3[1] = a2;
  OUTLINED_FUNCTION_3_18();
}

void sub_2210C6608(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v1 + a1[17], v4, v3);
  v8 = (_QWORD *)(v1 + a1[18]);
  v10 = *(_QWORD *)(v6 - 152);
  v9 = *(_QWORD *)(v6 - 144);
  *v8 = *(_QWORD *)(v6 - 160);
  v8[1] = v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v1 + a1[19], v9, v5);
  *(_BYTE *)(v1 + a1[20]) = *(_DWORD *)(v6 - 132);
  swift_storeEnumTagMultiPayload();
  sub_22105D614(v2);
  v11 = v1 + a1[22];
  *(_QWORD *)v11 = swift_getKeyPath();
  *(_QWORD *)(v11 + 8) = 0;
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_BYTE *)(v11 + 32) = 0;
  v12 = v1 + a1[23];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_BYTE *)(v12 + 8) = 0;
  OUTLINED_FUNCTION_19();
}

void sub_2210C66D0(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_2210C5E14(v1[8], v1[4], v1[7], a1);
}

void sub_2210C66E4()
{
  OUTLINED_FUNCTION_3_18();
}

uint64_t sub_2210C671C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  double v9;
  double v10;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v4 = v1 + ((v3 + 64) & ~v3);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_22(v9);
  swift_release();
  OUTLINED_FUNCTION_1_22(v10);
  v5 = (id *)(v4 + *(int *)(a1 + 84));
  OUTLINED_FUNCTION_4_10();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_2212F51B4();
    OUTLINED_FUNCTION_7_17(*(_QWORD *)(v7 - 8));
  }
  else if (!EnumCaseMultiPayload)
  {

  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658518);
  swift_release();
  sub_221046DA8();
  sub_221047104(*(_QWORD *)(v4 + *(int *)(a1 + 92)), *(unsigned __int8 *)(v4 + *(int *)(a1 + 92) + 8));
  return swift_deallocObject();
}

void sub_2210C682C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v6 = v0[7];
  v1[2] = v0[2];
  v1[3] = v2;
  v1[4] = v3;
  v1[5] = v4;
  v1[6] = v5;
  v1[7] = v6;
  OUTLINED_FUNCTION_3_18();
}

uint64_t sub_2210C6874(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v10 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v11 = v2 + ((v10 + 64) & ~v10);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 64) = v12;
  *v12 = v4;
  v12[1] = sub_2210C68E4;
  return sub_2210C63F0(v1, v11, v3, v5, v6, v7, v8, v9);
}

uint64_t sub_2210C68E4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2210C692C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2210C6974(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

unint64_t sub_2210C69AC()
{
  unint64_t result;

  result = qword_25565AD50;
  if (!qword_25565AD50)
  {
    result = MEMORY[0x22766BAC4](&unk_221313F38, &type metadata for SubscriptionOfferViewStyleProtocolConfiguration.Icon);
    atomic_store(result, (unint64_t *)&qword_25565AD50);
  }
  return result;
}

void sub_2210C69F8()
{
  type metadata accessor for StaticSubscriptionOfferView();
}

void sub_2210C6A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;
  uint64_t v16;

  v15 = sub_2212F3A20();
  v16 = sub_2212F4674();
  _s16TaskViewModifierVMa(255);
  sub_2212F3348();
  a13 = MEMORY[0x22766BAC4](&unk_221303000, a1);
  a14 = MEMORY[0x24BDF4760];
  a12 = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v15, &a13);
  MEMORY[0x22766BAC4](MEMORY[0x24BDF3F50], v16, &a12);
  sub_22105EAB4();
  OUTLINED_FUNCTION_8_2();
}

uint64_t OUTLINED_FUNCTION_1_22(double a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)&a1 - 8) + 8))();
}

void OUTLINED_FUNCTION_3_18()
{
  type metadata accessor for DynamicSubscriptionOfferView();
}

uint64_t OUTLINED_FUNCTION_7_17@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t destroy for SubscriptionStoreControlBackgroundStyleModifier(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) >= 3uLL)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

uint64_t initializeWithCopy for SubscriptionStoreControlBackgroundStyleModifier(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  __int128 v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3 >= 3)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v3;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for SubscriptionStoreControlBackgroundStyleModifier(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) >= 3uLL)
  {
    if (v4 >= 3)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      return a1;
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_6;
  }
  if (v4 < 3)
  {
LABEL_6:
    v5 = *a2;
    v6 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
  return a1;
}

uint64_t assignWithTake for SubscriptionStoreControlBackgroundStyleModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  if (*(_QWORD *)(a1 + 24) >= 3uLL)
    __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStoreControlBackgroundStyleModifier(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 40))
    {
      v2 = *(_DWORD *)a1 + 2147483644;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 3;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStoreControlBackgroundStyleModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFC)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStoreControlBackgroundStyleModifier()
{
  return &type metadata for SubscriptionStoreControlBackgroundStyleModifier;
}

uint64_t sub_2210C6D14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210C6D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t *v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath();
  v6 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25565AD80) + 36));
  sub_2210C6E98(v2, (uint64_t)(v6 + 1));
  *v6 = KeyPath;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565AD88);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
}

uint64_t sub_2210C6DA8()
{
  sub_2210C6ED4();
  return sub_2212F3798();
}

uint64_t sub_2210C6DDC()
{
  return sub_2210C6DA8();
}

void sub_2210C6DFC(uint64_t a1)
{
  _BYTE v1[40];

  sub_2210C6E98(a1, (uint64_t)v1);
  sub_2210C6E28((uint64_t)v1);
  OUTLINED_FUNCTION_11_7();
}

void sub_2210C6E28(uint64_t a1)
{
  _BYTE v2[40];

  sub_2210C6E98(a1, (uint64_t)v2);
  sub_2210C6ED4();
  sub_2212F37A4();
  sub_221017430(a1);
  OUTLINED_FUNCTION_11_7();
}

uint64_t sub_2210C6E74()
{
  return sub_2210C6DA8();
}

uint64_t sub_2210C6E98(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SubscriptionStoreControlPlacementKey.InternalPlacementKey(a2, a1);
  return a2;
}

unint64_t sub_2210C6ED4()
{
  unint64_t result;

  result = qword_25565AD90;
  if (!qword_25565AD90)
  {
    result = MEMORY[0x22766BAC4](&unk_221303B64, &_s48SubscriptionControlBackgroundStyleEnvironmentKeyON);
    atomic_store(result, (unint64_t *)&qword_25565AD90);
  }
  return result;
}

ValueMetadata *_s48SubscriptionControlBackgroundStyleEnvironmentKeyOMa()
{
  return &_s48SubscriptionControlBackgroundStyleEnvironmentKeyON;
}

unint64_t sub_2210C6F24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25565AD98;
  if (!qword_25565AD98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565AD80);
    v2[0] = sub_221018504(&qword_25565ADA0, &qword_25565AD88, MEMORY[0x24BDEFB78]);
    v2[1] = sub_221018504(&qword_25565ADA8, &qword_25565ADB0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25565AD98);
  }
  return result;
}

void sub_2210C6FC0(uint64_t a1, uint64_t a2)
{
  _BYTE v3[24];
  uint64_t v4;

  sub_2210C7094(a2, (uint64_t)v3);
  if (v4 == 3)
  {
    sub_2210C70DC((uint64_t)v3);
  }
  else
  {
    sub_221017430(a1);
    sub_221046DB4((uint64_t)v3, a1);
  }
  OUTLINED_FUNCTION_11_7();
}

double sub_2210C7018()
{
  double result;

  qword_25565AD78 = 0;
  result = 0.0;
  xmmword_25565AD58 = 0u;
  unk_25565AD68 = 0u;
  return result;
}

__int128 *sub_2210C7030()
{
  if (qword_255655CA0 != -1)
    swift_once();
  return &xmmword_25565AD58;
}

uint64_t sub_2210C7070@<X0>(uint64_t a1@<X8>)
{
  __int128 *v2;

  v2 = sub_2210C7030();
  return sub_2210C6E98((uint64_t)v2, a1);
}

uint64_t sub_2210C7094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565ADB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2210C70DC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565ADB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2210C711C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  _QWORD v34[7];

  v27 = a2;
  v3 = a1[3];
  v24 = a1[4];
  v4 = a1[2];
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v34[1] = v4;
  v34[2] = AssociatedTypeWitness;
  v34[3] = MEMORY[0x24BDF1FA8];
  v34[4] = v3;
  v34[5] = AssociatedConformanceWitness;
  v7 = sub_2212F48FC();
  v34[0] = MEMORY[0x24BDF1F80];
  MEMORY[0x22766BAC4](MEMORY[0x24BDF4A08], v7, v34);
  v8 = sub_2212F4848();
  v23 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - v9;
  v11 = sub_2212F3348();
  v25 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v22 - v15;
  v28 = v4;
  v29 = v3;
  v17 = a1[5];
  v30 = v24;
  v31 = v17;
  v32 = v26;
  sub_221050128();
  sub_2212F483C();
  v18 = MEMORY[0x22766BAC4](MEMORY[0x24BDF4750], v8);
  sub_2212F4470();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
  v19 = sub_2210173F4();
  v33[0] = v18;
  v33[1] = v19;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v11, v33);
  sub_221088D68((uint64_t)v14, v11, (uint64_t)v16);
  v20 = *(void (**)(char *, uint64_t))(v25 + 8);
  v20(v14, v11);
  sub_221087210((uint64_t)v16, v11, v27);
  return ((uint64_t (*)(char *, uint64_t))v20)(v16, v11);
}

uint64_t sub_2210C73AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[6];

  v23 = a5;
  v24 = a6;
  MEMORY[0x24BDAC7A8](a1);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v25[1] = a2;
  v25[2] = AssociatedTypeWitness;
  v25[3] = MEMORY[0x24BDF1FA8];
  v25[4] = a3;
  v25[5] = AssociatedConformanceWitness;
  v11 = sub_2212F48FC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v23 - v16;
  sub_2212F2E14();
  sub_2212F2DFC();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  v19 = v23;
  v18[4] = a4;
  v18[5] = v19;
  v20 = MEMORY[0x24BDF1F80];
  sub_2212F48F0();
  v25[0] = v20;
  MEMORY[0x22766BAC4](MEMORY[0x24BDF4A08], v11, v25);
  sub_221088D68((uint64_t)v15, v11, (uint64_t)v17);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v15, v11);
  sub_221087210((uint64_t)v17, v11, v24);
  return ((uint64_t (*)(char *, uint64_t))v21)(v17, v11);
}

uint64_t sub_2210C75DC@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v4 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = v4(AssociatedTypeWitness, a1);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v8 & 1;
  *(_QWORD *)(a2 + 24) = v9;
  return result;
}

uint64_t sub_2210C7654()
{
  uint64_t v0;
  id v1;

  v0 = qword_255655B20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v0 != -1)
    swift_once();
  v1 = (id)qword_25568CA90;
  return sub_2212F40D4();
}

uint64_t sub_2210C770C()
{
  return sub_2210C7654();
}

unint64_t sub_2210C7738(uint64_t a1)
{
  unint64_t result;

  result = sub_2210C775C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2210C775C()
{
  unint64_t result;

  result = qword_25565ADC0;
  if (!qword_25565ADC0)
  {
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEEA90], MEMORY[0x24BDEEA88]);
    atomic_store(result, (unint64_t *)&qword_25565ADC0);
  }
  return result;
}

uint64_t sub_2210C7798(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2210C77DC()
{
  uint64_t *v0;

  return sub_2210C7798(*v0);
}

uint64_t sub_2210C7808(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2210C782C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = _s11PriceStringOMa(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2210C79E0(v0, (uint64_t)v3);
  v4 = sub_2211B1EAC();
  sub_2210C7A24((uint64_t)v3);
  return v4;
}

uint64_t sub_2210C78CC()
{
  return sub_2210C782C();
}

uint64_t sub_2210C78EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD))(a2 + 16))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_2210C7914(uint64_t a1, uint64_t a2)
{
  return sub_2210C78EC(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_2210C7938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)a3 + 8);
  result = MEMORY[0x22766BAC4](&unk_221303E0C, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2210C797C(uint64_t a1)
{
  unint64_t result;

  result = sub_2210C79A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2210C79A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25565ADC8[0];
  if (!qword_25565ADC8[0])
  {
    v1 = _s11PriceStringOMa(255);
    result = MEMORY[0x22766BAC4](&unk_22130E544, v1);
    atomic_store(result, qword_25565ADC8);
  }
  return result;
}

uint64_t sub_2210C79E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s11PriceStringOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2210C7A24(uint64_t a1)
{
  uint64_t v2;

  v2 = _s11PriceStringOMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2210C7A60()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F2E08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2210C7ACC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_18:
    swift_retain();
    return v3;
  }
  v9 = *((unsigned __int8 *)a2 + v5);
  if (v9 >= 2)
  {
    if (v5 <= 3)
      v10 = v5;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 != 1)
  {
    *a1 = *a2;
    *((_BYTE *)a1 + v5) = 0;
    goto LABEL_18;
  }
  (*(void (**)(uint64_t *))(v4 + 16))(a1);
  *((_BYTE *)v3 + v5) = 1;
  return v3;
}

uint64_t sub_2210C7BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return (*(uint64_t (**)(void))(v2 + 8))();
    else
      return swift_release();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_2210C7C28 + 4 * byte_221303BA5[v5]))();
  }
}

_QWORD *sub_2210C7C80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v8 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_2210C7D58(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    else
      swift_release();
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 1;
    }
    else
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v7) = 0;
      swift_retain();
    }
  }
  return a1;
}

_QWORD *sub_2210C7EE8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_2210C7FBC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    else
      swift_release();
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 1;
    }
    else
    {
      v12 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_2210C8148(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2210C820C + 4 * byte_221303BC8[(v4 - 1)]))();
}

void sub_2210C8258(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

void type metadata accessor for LayoutGuideView()
{
  JUMPOUT(0x22766BA10);
}

uint64_t sub_2210C8408()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210C843C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2210C73AC(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_2210C844C()
{
  return swift_deallocObject();
}

uint64_t sub_2210C845C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2210C75DC(*(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_2210C8468(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _QWORD v10[6];

  v1 = *a1;
  v2 = a1[1];
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10[1] = v1;
  v10[2] = AssociatedTypeWitness;
  v10[3] = MEMORY[0x24BDF1FA8];
  v10[4] = v2;
  v10[5] = AssociatedConformanceWitness;
  v5 = sub_2212F48FC();
  v10[0] = MEMORY[0x24BDF1F80];
  MEMORY[0x22766BAC4](MEMORY[0x24BDF4A08], v5, v10);
  v6 = sub_2212F4848();
  v7 = sub_2212F3348();
  v9[0] = MEMORY[0x22766BAC4](MEMORY[0x24BDF4750], v6);
  v9[1] = sub_2210173F4();
  return MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v7, v9);
}

uint64_t sub_2210C85B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = a5;
  v24 = a7;
  v25 = a3;
  v22 = a1;
  v23 = a2;
  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2212F3A44();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ClippedToCoordinateSpaceModifier(0, a4, a6, v16);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v22 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v22, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v23, a4);
  sub_2210C90C4((uint64_t)v15, (uint64_t)v11, a4, a6, (uint64_t)v20);
  MEMORY[0x227669B20](v20, v25, v17, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

uint64_t type metadata accessor for ClippedToCoordinateSpaceModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ClippedToCoordinateSpaceModifier);
}

uint64_t sub_2210C8714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  _QWORD v31[2];
  _QWORD v32[2];
  _QWORD v33[2];

  v25[2] = a1;
  v26 = a3;
  MEMORY[0x22766BAC4](&unk_221303D58);
  v4 = sub_2212F3B4C();
  v5 = *(_QWORD *)(a2 + 16);
  v6 = sub_2212F3348();
  v7 = sub_2212F3348();
  v8 = sub_2212F3A20();
  v9 = *(_QWORD *)(a2 + 24);
  v33[0] = *(_QWORD *)(v9 + 16);
  v10 = v33[0];
  v33[1] = MEMORY[0x24BDEBEE0];
  v11 = MEMORY[0x24BDED308];
  v32[0] = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v6, v33);
  v32[1] = sub_2210C98C4();
  v31[0] = MEMORY[0x22766BAC4](v11, v7, v32);
  v31[1] = v10;
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v8, v31);
  v12 = sub_2212F3150();
  MEMORY[0x22766BAC4](MEMORY[0x24BDEC6F8], v12);
  v13 = sub_2212F3AEC();
  v14 = sub_2212F3348();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v25 - v19;
  v27 = v5;
  v28 = v9;
  v29 = v25[1];
  v21 = MEMORY[0x22766BAC4](MEMORY[0x24BDEFB78], v4);
  sub_221050128();
  sub_2212F4410();
  v22 = MEMORY[0x22766BAC4](MEMORY[0x24BDEF828], v13);
  v30[0] = v21;
  v30[1] = v22;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v14, v30);
  sub_221088D68((uint64_t)v18, v14, (uint64_t)v20);
  v23 = *(void (**)(char *, uint64_t))(v15 + 8);
  v23(v18, v14);
  sub_221087210((uint64_t)v20, v14, v26);
  return ((uint64_t (*)(char *, uint64_t))v23)(v20, v14);
}

uint64_t sub_2210C898C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[2];

  v9 = type metadata accessor for ClippedToCoordinateSpaceModifier(0, a2, a3, a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v25 - v11, a1, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, v12, v9);
  v15 = sub_2212F3348();
  v16 = sub_2212F3348();
  v17 = sub_2212F3A20();
  v29[0] = *(_QWORD *)(a3 + 16);
  v18 = v29[0];
  v29[1] = MEMORY[0x24BDEBEE0];
  v19 = MEMORY[0x24BDED308];
  v20 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v15, v29);
  v21 = sub_2210C98C4();
  v28[0] = v20;
  v28[1] = v21;
  v27[0] = MEMORY[0x22766BAC4](v19, v16, v28);
  v27[1] = v18;
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v17, v27);
  v25 = sub_2212F3144();
  v26 = v22;
  v23 = sub_2212F3150();
  MEMORY[0x22766BAC4](MEMORY[0x24BDEC6F8], v23);
  sub_221088D68((uint64_t)&v25, v23, (uint64_t)v30);
  swift_release();
  v25 = v30[0];
  v26 = v30[1];
  sub_221087210((uint64_t)&v25, v23, a5);
  return swift_release();
}

uint64_t sub_2210C8B90@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[2];
  _QWORD v60[2];
  _QWORD v61[2];
  _QWORD v62[2];
  _BYTE v63[40];
  _QWORD v64[4];
  char v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;

  v54 = a4;
  v7 = sub_2212F3348();
  v48 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v47 - v8;
  v55 = v10;
  v11 = sub_2212F3348();
  v49 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v50 = (uint64_t)&v47 - v16;
  v17 = *(_QWORD *)(a2 - 8);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v47 - v21;
  v53 = sub_2212F3A20();
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v51 = (char *)&v47 - v23;
  sub_2212F2FDC();
  sub_221010734((uint64_t)v63, (uint64_t)v64);
  if (v65 == 1)
  {
    v25 = type metadata accessor for ClippedToCoordinateSpaceModifier(0, a2, a3, v24);
    v26 = *(_QWORD *)(a3 + 16);
    sub_221088D68(a1 + *(int *)(v25 + 36), a2, (uint64_t)v22);
    sub_221087210((uint64_t)v22, a2, (uint64_t)v20);
    v62[0] = v26;
    v62[1] = MEMORY[0x24BDEBEE0];
    v27 = MEMORY[0x24BDED308];
    v28 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v55, v62);
    v29 = sub_2210C98C4();
    v61[0] = v28;
    v61[1] = v29;
    MEMORY[0x22766BAC4](v27, v11, v61);
    v30 = (uint64_t)v51;
    sub_22113B11C();
    v31 = *(void (**)(char *, uint64_t))(v17 + 8);
    v31(v20, a2);
    v31(v22, a2);
  }
  else
  {
    v32 = *(double *)v64;
    v33 = *(double *)&v64[1];
    v34 = *(double *)&v64[2];
    v35 = *(double *)&v64[3];
    type metadata accessor for ClippedToCoordinateSpaceModifier(0, a2, a3, v24);
    v66.origin.x = v32;
    v66.origin.y = v33;
    v66.size.width = v34;
    v66.size.height = v35;
    CGRectGetWidth(v66);
    v67.origin.x = v32;
    v67.origin.y = v33;
    v67.size.width = v34;
    v67.size.height = v35;
    CGRectGetHeight(v67);
    v26 = *(_QWORD *)(a3 + 16);
    sub_2212F4A10();
    sub_2212F4440();
    v68.origin.x = v32;
    v68.origin.y = v33;
    v68.size.width = v34;
    v68.size.height = v35;
    CGRectGetMidX(v68);
    v69.origin.x = v32;
    v69.origin.y = v33;
    v69.size.width = v34;
    v69.size.height = v35;
    CGRectGetMidY(v69);
    v57[0] = v26;
    v57[1] = MEMORY[0x24BDEBEE0];
    v36 = MEMORY[0x24BDED308];
    v37 = v55;
    v38 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v55, v57);
    sub_2212F4518();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v9, v37);
    v39 = sub_2210C98C4();
    v56[0] = v38;
    v56[1] = v39;
    MEMORY[0x22766BAC4](v36, v11, v56);
    v40 = v50;
    sub_221088D68((uint64_t)v14, v11, v50);
    v41 = *(void (**)(char *, uint64_t))(v49 + 8);
    v41(v14, v11);
    sub_221087210(v40, v11, (uint64_t)v14);
    v30 = (uint64_t)v51;
    sub_22113B0A4();
    v41(v14, v11);
    v41((char *)v40, v11);
  }
  v60[0] = v26;
  v60[1] = MEMORY[0x24BDEBEE0];
  v42 = MEMORY[0x24BDED308];
  v43 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v55, v60);
  v44 = sub_2210C98C4();
  v59[0] = v43;
  v59[1] = v44;
  v58[0] = MEMORY[0x22766BAC4](v42, v11, v59);
  v58[1] = v26;
  v45 = v53;
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v53, v58);
  sub_221087210(v30, v45, v54);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 8))(v30, v45);
}

uint64_t sub_2210C90C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = sub_2212F3A44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, a1, v10);
  v12 = a5 + *(int *)(type metadata accessor for ClippedToCoordinateSpaceModifier(0, a3, a4, v11) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v12, a2, a3);
}

uint64_t sub_2210C9148()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2212F3A44();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2210C91D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_2212F3A44();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = *(_QWORD *)(v7 + 64) + v10;
  v13 = *(_DWORD *)(v7 + 80) | v10;
  v14 = v13;
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || (v12 & (unint64_t)~v11) + *(_QWORD *)(v9 + 64) > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v19, ((unint64_t)a2 + v12) & v19, v8);
  }
  return a1;
}

uint64_t sub_2210C92A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_2212F3A44();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(_QWORD *)(v5 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_2210C930C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2212F3A44();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 16))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_2210C9388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2212F3A44();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_2210C9404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2212F3A44();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_2210C9480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2212F3A44();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_2210C94FC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  uint64_t v23;

  v6 = sub_2212F3A44();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(_QWORD *)(v7 + 64);
  v15 = *(unsigned __int8 *)(v10 + 80);
  v16 = v14 + v15;
  if (a2 <= v12)
    goto LABEL_23;
  v17 = (v16 & ~v15) + *(_QWORD *)(v10 + 64);
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v20 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v20))
    {
      v19 = *(_DWORD *)(a1 + v17);
      if (!v19)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v20 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v17);
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v20 < 2)
    {
LABEL_23:
      if (v12)
      {
        if (v8 >= v11)
        {
          v23 = a1;
          v9 = v13;
        }
        else
        {
          v23 = (v16 + a1) & ~v15;
          v8 = v11;
        }
        return __swift_getEnumTagSinglePayload(v23, v8, v9);
      }
      return 0;
    }
  }
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_23;
LABEL_14:
  v21 = (v19 - 1) << v18;
  if (v17 > 3)
    v21 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v22 = v17;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  return v12 + v21 + 1;
}

void sub_2210C9684(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  size_t v11;
  char v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v8 = *(_QWORD *)(sub_2212F3A44() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = ((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(_QWORD *)(v9 + 64);
  v12 = 8 * v11;
  if (a3 <= v10)
  {
    v13 = 0;
  }
  else if (v11 <= 3)
  {
    v15 = ((a3 - v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = 1u;
  }
  if (v10 < a2)
  {
    v14 = ~v10 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v16 = v14 & ~(-1 << v12);
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_2210C988C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2210C98C4()
{
  unint64_t result;

  result = qword_25565AED0[0];
  if (!qword_25565AED0[0])
  {
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED5C0], MEMORY[0x24BDED5D0]);
    atomic_store(result, qword_25565AED0);
  }
  return result;
}

uint64_t sub_2210C9900@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_2210C898C(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_2210C990C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for ClippedToCoordinateSpaceModifier(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  v9 = sub_2212F3A44();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v6 + 36), v5);
  return swift_deallocObject();
}

uint64_t sub_2210C99A8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClippedToCoordinateSpaceModifier(0, v4, v5, a1) - 8)
                          + 80);
  return sub_2210C8B90(v2 + ((v6 + 32) & ~v6), v4, v5, a2);
}

void sub_2210C9A10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for ClippedToCoordinateSpaceModifier(255, *a1, a1[1], a4);
  MEMORY[0x22766BAC4](&unk_221303D58, v4);
  sub_2212F3B4C();
  sub_2212F3348();
  sub_2212F3348();
  sub_2212F3A20();
  OUTLINED_FUNCTION_0_24();
}

void sub_2210C9ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = sub_2210C98C4();
  a13 = a1;
  a14 = v19;
  a11 = MEMORY[0x22766BAC4](v15, v16, &a13);
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v17, &a11);
  v20 = sub_2212F3150();
  MEMORY[0x22766BAC4](MEMORY[0x24BDEC6F8], v20);
  v21 = sub_2212F3AEC();
  sub_2212F3348();
  MEMORY[0x22766BAC4](MEMORY[0x24BDEFB78], v14);
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF828], v21);
  OUTLINED_FUNCTION_0_24();
}

void OUTLINED_FUNCTION_0_24()
{
  JUMPOUT(0x22766BAC4);
}

uint64_t sub_2210C9BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x22766BAC4](&unk_221303E0C, a1, &v4);
}

uint64_t sub_2210C9BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((sub_2212F52D4() & 1) == 0)
    return 0;
  type metadata accessor for IdentifiedValue(0, a3, a4, a6);
  return sub_2212F52D4() & 1;
}

uint64_t sub_2210C9C60()
{
  sub_2212F5238();
  return sub_2212F5238();
}

uint64_t sub_2210C9CA4()
{
  sub_2212F5DD8();
  sub_2210C9C60();
  return sub_2212F5E08();
}

uint64_t sub_2210C9CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t sub_2210C9D14(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_2210C9BDC(a1, a2, a3[2], a3[3], *(_QWORD *)(a4 - 8), a3[4]);
}

uint64_t sub_2210C9D28()
{
  return sub_2210C9CA4();
}

uint64_t sub_2210C9D30()
{
  return sub_2210C9C60();
}

uint64_t sub_2210C9D38()
{
  sub_2212F5DD8();
  sub_2210C9C60();
  return sub_2212F5E08();
}

uint64_t type metadata accessor for IdentifiedValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IdentifiedValue);
}

uint64_t sub_2210C9D94()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2210C9E20(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2210C9EFC + 4 * byte_221303DB0[v21 - 1]))();
}

void sub_2210C9F70(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t sub_2210CA164(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 32);
}

BOOL sub_2210CA16C()
{
  uint64_t v1;
  uint64_t v2;

  sub_2212F3888();
  sub_2210CA874(&qword_255656CD0, MEMORY[0x24BDEEBC8]);
  sub_2212F56D0();
  sub_2212F5724();
  return v2 == v1;
}

uint64_t sub_2210CA1E4@<X0>(void (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v25 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_13_0();
  v9 = v8 - v7;
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_13_0();
  v16 = v15 - v14;
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_13_0();
  v20 = v19 - v18;
  (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v19 - v18, v22);
  v23 = 1;
  if (__swift_getEnumTagSinglePayload(v20, 1, v11) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v16, v20, v11);
    a1(v16, v9);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v11);
    if (v5)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(a4, v9, a2);
    v23 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a5, v23, 1, a3);
}

uint64_t sub_2210CA358()
{
  uint64_t v0;
  uint64_t v2;

  swift_getKeyPath();
  sub_2212F5844();
  sub_2210CA1E4((void (*)(uint64_t, uint64_t))sub_2210CA934, MEMORY[0x24BEE4078], MEMORY[0x24BDF4780], v0, (uint64_t)&v2);
  sub_2212F4194();
  swift_release();
  return swift_release();
}

uint64_t sub_2210CA43C()
{
  uint64_t v1;

  sub_2210CA4AC();
  sub_2212F3798();
  return v1;
}

uint64_t sub_2210CA474()
{
  sub_2210CA4AC();
  return sub_2212F37A4();
}

unint64_t sub_2210CA4AC()
{
  unint64_t result;

  result = qword_25565AF58;
  if (!qword_25565AF58)
  {
    result = MEMORY[0x22766BAC4](&unk_221303F0C, &_s28PickerOptionFooterContentKeyON);
    atomic_store(result, (unint64_t *)&qword_25565AF58);
  }
  return result;
}

ValueMetadata *_s28PickerOptionFooterContentKeyOMa()
{
  return &_s28PickerOptionFooterContentKeyON;
}

uint64_t destroy for PickerOptionFooterContent(uint64_t a1)
{
  return j_j__swift_release(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *assignWithCopy for PickerOptionFooterContent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  j__swift_retain(*a2, v4);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  j_j__swift_release(v5, v6);
  return a1;
}

uint64_t *assignWithTake for PickerOptionFooterContent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  j_j__swift_release(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for PickerOptionFooterContent()
{
  return &type metadata for PickerOptionFooterContent;
}

uint64_t sub_2210CA5A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v8 + 16))(v7, v5);
  result = sub_221297C84((uint64_t)v7, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2210CA634(uint64_t a1, char a2)
{
  uint64_t v3;

  v3 = a2 & 1;
  j__swift_retain(a1, v3);
  sub_221045BE4();
  j_j__swift_release(a1, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658C18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565AF60);
  sub_221077BB4();
  sub_221042538(&qword_25565AF68, &qword_25565AF60, (uint64_t (*)(void))sub_2210CA7F8, MEMORY[0x24BDF5578]);
  return sub_2212F465C();
}

uint64_t sub_2210CA70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (sub_2210CA16C())
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565AF78);
    v5 = a2;
    v6 = 1;
  }
  else
  {
    v7 = sub_2212F3EE8();
    sub_2212F2D48();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v16 = sub_2212F3888();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a2, a1, v16);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565AF78);
    v17 = a2 + *(int *)(v4 + 36);
    *(_BYTE *)v17 = v7;
    *(_QWORD *)(v17 + 8) = v9;
    *(_QWORD *)(v17 + 16) = v11;
    *(_QWORD *)(v17 + 24) = v13;
    *(_QWORD *)(v17 + 32) = v15;
    *(_BYTE *)(v17 + 40) = 0;
    v5 = a2;
    v6 = 0;
  }
  return __swift_storeEnumTagSinglePayload(v5, v6, 1, v4);
}

uint64_t sub_2210CA7DC()
{
  uint64_t v0;

  return sub_2210CA634(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_2210CA7E8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2210CA7F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25565AF70;
  if (!qword_25565AF70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565AF78);
    v2[0] = sub_2210CA874(&qword_25565A738, MEMORY[0x24BDEEB98]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25565AF70);
  }
  return result;
}

uint64_t sub_2210CA874(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2212F3888();
    result = MEMORY[0x22766BAC4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2210CA8B4()
{
  return sub_221042538(&qword_25565AF80, &qword_25565AF88, (uint64_t (*)(void))sub_2210CA8E8, MEMORY[0x24BDF3F50]);
}

unint64_t sub_2210CA8E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25565AF90;
  if (!qword_25565AF90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565AF98);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEFC70], v1);
    atomic_store(result, (unint64_t *)&qword_25565AF90);
  }
  return result;
}

uint64_t sub_2210CA934@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_2210CA5A4(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_2210CA954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t AssociatedConformanceWitness;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v30 = a1;
  v31 = a2;
  v37 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = AssociatedTypeWitness;
  v5 = sub_2212F2C58();
  v34 = MEMORY[0x22766BAC4](MEMORY[0x24BDB97E0], v5);
  v26 = v5;
  v6 = sub_2212F2C7C();
  v7 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  v36 = v7;
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v26 - v9;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565AFA0);
  v10 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2212F2C4C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v26 - v18;
  v29 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v26 - v21;
  sub_2212F2C88();
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BDB9638], v13);
  v23 = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BDB9660], v28);
  sub_2212F2CDC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v23);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  OUTLINED_FUNCTION_1_23((uint64_t)v19, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
  v24 = (uint64_t)v32;
  MEMORY[0x227668320](v26, v34);
  OUTLINED_FUNCTION_1_23((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
  sub_2212F2C64();
  return OUTLINED_FUNCTION_1_23(v24, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
}

uint64_t OUTLINED_FUNCTION_1_23@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

_QWORD *sub_2210CAC04(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  _OWORD *v47;
  _OWORD *v48;
  unint64_t v49;
  __int128 v50;
  uint64_t v51;
  unint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  uint64_t *v59;
  uint64_t v60;
  unsigned __int8 v61;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a3[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v15 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
    v16 = &v9[v15];
    v17 = &v10[v15];
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v11))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v11);
    }
    v20 = a3[6];
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    v23 = *(uint64_t *)((char *)a2 + v20 + 8);
    if (v23)
    {
      *v21 = *v22;
      *((_QWORD *)v21 + 1) = v23;
      v24 = *((_QWORD *)v22 + 5);
      swift_retain();
      if (v24 >= 6)
      {
        v26 = *((_QWORD *)v22 + 6);
        *((_QWORD *)v21 + 5) = v24;
        *((_QWORD *)v21 + 6) = v26;
        (**(void (***)(uint64_t, uint64_t, unint64_t))(v24 - 8))((uint64_t)(v21 + 16), (uint64_t)(v22 + 16), v24);
      }
      else
      {
        v25 = *((_OWORD *)v22 + 2);
        *((_OWORD *)v21 + 1) = *((_OWORD *)v22 + 1);
        *((_OWORD *)v21 + 2) = v25;
        *((_QWORD *)v21 + 6) = *((_QWORD *)v22 + 6);
      }
      v27 = v21 + 56;
      v28 = v22 + 56;
      v29 = *((_QWORD *)v22 + 10);
      if (v29)
      {
        v30 = *((_QWORD *)v22 + 11);
        *((_QWORD *)v21 + 10) = v29;
        *((_QWORD *)v21 + 11) = v30;
        (**(void (***)(_OWORD *, _OWORD *))(v29 - 8))(v27, v28);
      }
      else
      {
        v31 = *(_OWORD *)(v22 + 72);
        *v27 = *v28;
        *(_OWORD *)(v21 + 72) = v31;
        *((_QWORD *)v21 + 11) = *((_QWORD *)v22 + 11);
      }
      v32 = v21 + 96;
      v33 = v22 + 96;
      v34 = *((_QWORD *)v22 + 15);
      if (v34)
      {
        v35 = *((_QWORD *)v22 + 16);
        *((_QWORD *)v21 + 15) = v34;
        *((_QWORD *)v21 + 16) = v35;
        (**(void (***)(_OWORD *, _OWORD *))(v34 - 8))(v32, v33);
      }
      else
      {
        v36 = *((_OWORD *)v22 + 7);
        *v32 = *v33;
        *((_OWORD *)v21 + 7) = v36;
        *((_QWORD *)v21 + 16) = *((_QWORD *)v22 + 16);
      }
      v37 = v21 + 136;
      v38 = v22 + 136;
      v39 = *((_QWORD *)v22 + 20);
      if (v39)
      {
        v40 = *((_QWORD *)v22 + 21);
        *((_QWORD *)v21 + 20) = v39;
        *((_QWORD *)v21 + 21) = v40;
        (**(void (***)(_OWORD *, _OWORD *))(v39 - 8))(v37, v38);
      }
      else
      {
        v41 = *(_OWORD *)(v22 + 152);
        *v37 = *v38;
        *(_OWORD *)(v21 + 152) = v41;
        *((_QWORD *)v21 + 21) = *((_QWORD *)v22 + 21);
      }
      v42 = v21 + 176;
      v43 = v22 + 176;
      v44 = *((_QWORD *)v22 + 25);
      if (v44)
      {
        v45 = *((_QWORD *)v22 + 26);
        *((_QWORD *)v21 + 25) = v44;
        *((_QWORD *)v21 + 26) = v45;
        (**(void (***)(_OWORD *, _OWORD *))(v44 - 8))(v42, v43);
        *((_QWORD *)v21 + 27) = *((_QWORD *)v22 + 27);
      }
      else
      {
        v46 = *((_OWORD *)v22 + 12);
        *v42 = *v43;
        *((_OWORD *)v21 + 12) = v46;
        *((_OWORD *)v21 + 13) = *((_OWORD *)v22 + 13);
      }
      v47 = v21 + 224;
      v48 = v22 + 224;
      v49 = *((_QWORD *)v22 + 31);
      if (v49 >= 3)
      {
        v51 = *((_QWORD *)v22 + 32);
        *((_QWORD *)v21 + 31) = v49;
        *((_QWORD *)v21 + 32) = v51;
        (**(void (***)(_OWORD *, _OWORD *))(v49 - 8))(v47, v48);
      }
      else
      {
        v50 = *((_OWORD *)v22 + 15);
        *v47 = *v48;
        *((_OWORD *)v21 + 15) = v50;
        *((_QWORD *)v21 + 32) = *((_QWORD *)v22 + 32);
      }
      v21[264] = v22[264];
      v52 = *((_QWORD *)v22 + 35);
      if (v52 >= 4)
      {
        *((_QWORD *)v21 + 34) = *((_QWORD *)v22 + 34);
        *((_QWORD *)v21 + 35) = v52;
        v21[288] = v22[288];
        *((_QWORD *)v21 + 37) = *((_QWORD *)v22 + 37);
        v55 = *((_QWORD *)v22 + 39);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v55)
        {
          *((_QWORD *)v21 + 38) = *((_QWORD *)v22 + 38);
          *((_QWORD *)v21 + 39) = v55;
          v21[320] = v22[320];
          *((_QWORD *)v21 + 41) = *((_QWORD *)v22 + 41);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v56 = *((_OWORD *)v22 + 20);
          *((_OWORD *)v21 + 19) = *((_OWORD *)v22 + 19);
          *((_OWORD *)v21 + 20) = v56;
        }
      }
      else
      {
        v53 = *((_OWORD *)v22 + 18);
        *((_OWORD *)v21 + 17) = *((_OWORD *)v22 + 17);
        *((_OWORD *)v21 + 18) = v53;
        v54 = *((_OWORD *)v22 + 20);
        *((_OWORD *)v21 + 19) = *((_OWORD *)v22 + 19);
        *((_OWORD *)v21 + 20) = v54;
      }
      *((_WORD *)v21 + 168) = *((_WORD *)v22 + 168);
      v21[342] = v22[342];
      *(_DWORD *)(v21 + 338) = *(_DWORD *)(v22 + 338);
    }
    else
    {
      memcpy((char *)v4 + v20, (char *)a2 + v20, 0x157uLL);
    }
    v57 = a3[7];
    v58 = (char *)v4 + v57;
    v59 = (uint64_t *)((char *)a2 + v57);
    v60 = *v59;
    v61 = *((_BYTE *)v59 + 8);
    j__swift_bridgeObjectRetain(*v59, v61);
    *(_QWORD *)v58 = v60;
    v58[8] = v61;
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return v4;
}

uint64_t type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(uint64_t a1)
{
  return sub_22100CA0C(a1, (uint64_t *)&unk_25565B210);
}

uint64_t sub_2210CB038(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + a2[5];
  v5 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    v6 = sub_2212F4944();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  v7 = v4 + *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v7, 1, v5))
  {
    v8 = sub_2212F4944();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = (_QWORD *)(a1 + a2[6]);
  if (v9[1])
  {
    swift_release();
    if (v9[5] >= 6uLL)
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v9 + 2));
    if (v9[10])
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v9 + 7));
    if (v9[15])
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v9 + 12));
    if (v9[20])
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v9 + 17));
    if (v9[25])
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v9 + 22));
    if (v9[31] >= 3uLL)
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v9 + 28));
    if (v9[35] >= 4uLL)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v9[39])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
  return j__swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7]), *(unsigned __int8 *)(a1 + a2[7] + 8));
}

uint64_t sub_2210CB1A0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int128 v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  _OWORD *v35;
  _OWORD *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  _OWORD *v45;
  _OWORD *v46;
  unint64_t v47;
  __int128 v48;
  uint64_t v49;
  unint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  unsigned __int8 v59;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = a3[5];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v13 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
  v14 = &v8[v13];
  v15 = &v9[v13];
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v10))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
  }
  v18 = a3[6];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(a2 + v18 + 8);
  if (v21)
  {
    *(_BYTE *)v19 = *(_BYTE *)v20;
    *(_QWORD *)(v19 + 8) = v21;
    v22 = *(_QWORD *)(v20 + 40);
    swift_retain();
    if (v22 >= 6)
    {
      v24 = *(_QWORD *)(v20 + 48);
      *(_QWORD *)(v19 + 40) = v22;
      *(_QWORD *)(v19 + 48) = v24;
      (**(void (***)(uint64_t, uint64_t, unint64_t))(v22 - 8))(v19 + 16, v20 + 16, v22);
    }
    else
    {
      v23 = *(_OWORD *)(v20 + 32);
      *(_OWORD *)(v19 + 16) = *(_OWORD *)(v20 + 16);
      *(_OWORD *)(v19 + 32) = v23;
      *(_QWORD *)(v19 + 48) = *(_QWORD *)(v20 + 48);
    }
    v25 = (_OWORD *)(v19 + 56);
    v26 = (_OWORD *)(v20 + 56);
    v27 = *(_QWORD *)(v20 + 80);
    if (v27)
    {
      v28 = *(_QWORD *)(v20 + 88);
      *(_QWORD *)(v19 + 80) = v27;
      *(_QWORD *)(v19 + 88) = v28;
      (**(void (***)(_OWORD *, _OWORD *))(v27 - 8))(v25, v26);
    }
    else
    {
      v29 = *(_OWORD *)(v20 + 72);
      *v25 = *v26;
      *(_OWORD *)(v19 + 72) = v29;
      *(_QWORD *)(v19 + 88) = *(_QWORD *)(v20 + 88);
    }
    v30 = (_OWORD *)(v19 + 96);
    v31 = (_OWORD *)(v20 + 96);
    v32 = *(_QWORD *)(v20 + 120);
    if (v32)
    {
      v33 = *(_QWORD *)(v20 + 128);
      *(_QWORD *)(v19 + 120) = v32;
      *(_QWORD *)(v19 + 128) = v33;
      (**(void (***)(_OWORD *, _OWORD *))(v32 - 8))(v30, v31);
    }
    else
    {
      v34 = *(_OWORD *)(v20 + 112);
      *v30 = *v31;
      *(_OWORD *)(v19 + 112) = v34;
      *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
    }
    v35 = (_OWORD *)(v19 + 136);
    v36 = (_OWORD *)(v20 + 136);
    v37 = *(_QWORD *)(v20 + 160);
    if (v37)
    {
      v38 = *(_QWORD *)(v20 + 168);
      *(_QWORD *)(v19 + 160) = v37;
      *(_QWORD *)(v19 + 168) = v38;
      (**(void (***)(_OWORD *, _OWORD *))(v37 - 8))(v35, v36);
    }
    else
    {
      v39 = *(_OWORD *)(v20 + 152);
      *v35 = *v36;
      *(_OWORD *)(v19 + 152) = v39;
      *(_QWORD *)(v19 + 168) = *(_QWORD *)(v20 + 168);
    }
    v40 = (_OWORD *)(v19 + 176);
    v41 = (_OWORD *)(v20 + 176);
    v42 = *(_QWORD *)(v20 + 200);
    if (v42)
    {
      v43 = *(_QWORD *)(v20 + 208);
      *(_QWORD *)(v19 + 200) = v42;
      *(_QWORD *)(v19 + 208) = v43;
      (**(void (***)(_OWORD *, _OWORD *))(v42 - 8))(v40, v41);
      *(_QWORD *)(v19 + 216) = *(_QWORD *)(v20 + 216);
    }
    else
    {
      v44 = *(_OWORD *)(v20 + 192);
      *v40 = *v41;
      *(_OWORD *)(v19 + 192) = v44;
      *(_OWORD *)(v19 + 208) = *(_OWORD *)(v20 + 208);
    }
    v45 = (_OWORD *)(v19 + 224);
    v46 = (_OWORD *)(v20 + 224);
    v47 = *(_QWORD *)(v20 + 248);
    if (v47 >= 3)
    {
      v49 = *(_QWORD *)(v20 + 256);
      *(_QWORD *)(v19 + 248) = v47;
      *(_QWORD *)(v19 + 256) = v49;
      (**(void (***)(_OWORD *, _OWORD *))(v47 - 8))(v45, v46);
    }
    else
    {
      v48 = *(_OWORD *)(v20 + 240);
      *v45 = *v46;
      *(_OWORD *)(v19 + 240) = v48;
      *(_QWORD *)(v19 + 256) = *(_QWORD *)(v20 + 256);
    }
    *(_BYTE *)(v19 + 264) = *(_BYTE *)(v20 + 264);
    v50 = *(_QWORD *)(v20 + 280);
    if (v50 >= 4)
    {
      *(_QWORD *)(v19 + 272) = *(_QWORD *)(v20 + 272);
      *(_QWORD *)(v19 + 280) = v50;
      *(_BYTE *)(v19 + 288) = *(_BYTE *)(v20 + 288);
      *(_QWORD *)(v19 + 296) = *(_QWORD *)(v20 + 296);
      v53 = *(_QWORD *)(v20 + 312);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v53)
      {
        *(_QWORD *)(v19 + 304) = *(_QWORD *)(v20 + 304);
        *(_QWORD *)(v19 + 312) = v53;
        *(_BYTE *)(v19 + 320) = *(_BYTE *)(v20 + 320);
        *(_QWORD *)(v19 + 328) = *(_QWORD *)(v20 + 328);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v54 = *(_OWORD *)(v20 + 320);
        *(_OWORD *)(v19 + 304) = *(_OWORD *)(v20 + 304);
        *(_OWORD *)(v19 + 320) = v54;
      }
    }
    else
    {
      v51 = *(_OWORD *)(v20 + 288);
      *(_OWORD *)(v19 + 272) = *(_OWORD *)(v20 + 272);
      *(_OWORD *)(v19 + 288) = v51;
      v52 = *(_OWORD *)(v20 + 320);
      *(_OWORD *)(v19 + 304) = *(_OWORD *)(v20 + 304);
      *(_OWORD *)(v19 + 320) = v52;
    }
    *(_WORD *)(v19 + 336) = *(_WORD *)(v20 + 336);
    *(_BYTE *)(v19 + 342) = *(_BYTE *)(v20 + 342);
    *(_DWORD *)(v19 + 338) = *(_DWORD *)(v20 + 338);
  }
  else
  {
    memcpy((void *)(a1 + v18), (const void *)(a2 + v18), 0x157uLL);
  }
  v55 = a3[7];
  v56 = a1 + v55;
  v57 = (uint64_t *)(a2 + v55);
  v58 = *v57;
  v59 = *((_BYTE *)v57 + 8);
  j__swift_bridgeObjectRetain(*v57, v59);
  *(_QWORD *)v56 = v58;
  *(_BYTE *)(v56 + 8) = v59;
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t *sub_2210CB58C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  _OWORD *v46;
  _OWORD *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _OWORD *v53;
  __int128 *v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  _OWORD *v58;
  __int128 *v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  _OWORD *v63;
  __int128 *v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  _OWORD *v68;
  __int128 *v69;
  unint64_t v70;
  __int128 v71;
  __int128 v72;
  _OWORD *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  unint64_t v80;
  __int128 v81;
  __int128 v82;
  _OWORD *v83;
  __int128 *v84;
  unint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  __int128 v93;
  _OWORD *v94;
  uint64_t v95;
  int v96;
  __int128 v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  unsigned __int8 v102;
  uint64_t v103;
  uint64_t v104;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      v12 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v8, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v11)
  {
    sub_2210CD558();
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  v32 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v7, v8, v32);
LABEL_7:
  v14 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (v17)
  {
    if (!v18)
    {
      v19 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v15, v16, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v18)
  {
    sub_2210CD558();
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  v33 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v15, v16, v33);
LABEL_13:
  v21 = a3[6];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(uint64_t *)((char *)a1 + v21 + 8);
  v25 = *(uint64_t *)((char *)a2 + v21 + 8);
  if (v24)
  {
    if (v25)
    {
      *v22 = *v23;
      *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
      swift_retain();
      swift_release();
      v26 = *((_QWORD *)v23 + 5);
      if (*((_QWORD *)v22 + 5) >= 6uLL)
      {
        if (v26 >= 6)
        {
          __swift_assign_boxed_opaque_existential_1((uint64_t *)v22 + 2, (uint64_t *)v23 + 2);
LABEL_32:
          v37 = *((_QWORD *)v23 + 10);
          if (*((_QWORD *)v22 + 10))
          {
            if (v37)
            {
              __swift_assign_boxed_opaque_existential_1((uint64_t *)v22 + 7, (uint64_t *)v23 + 7);
              goto LABEL_39;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)(v22 + 56));
          }
          else if (v37)
          {
            *((_QWORD *)v22 + 10) = v37;
            *((_QWORD *)v22 + 11) = *((_QWORD *)v23 + 11);
            (**(void (***)(uint64_t, uint64_t))(v37 - 8))((uint64_t)(v22 + 56), (uint64_t)(v23 + 56));
            goto LABEL_39;
          }
          v38 = *(_OWORD *)(v23 + 56);
          v39 = *(_OWORD *)(v23 + 72);
          *((_QWORD *)v22 + 11) = *((_QWORD *)v23 + 11);
          *(_OWORD *)(v22 + 56) = v38;
          *(_OWORD *)(v22 + 72) = v39;
LABEL_39:
          v40 = *((_QWORD *)v23 + 15);
          if (*((_QWORD *)v22 + 15))
          {
            if (v40)
            {
              __swift_assign_boxed_opaque_existential_1((uint64_t *)v22 + 12, (uint64_t *)v23 + 12);
              goto LABEL_46;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)(v22 + 96));
          }
          else if (v40)
          {
            *((_QWORD *)v22 + 15) = v40;
            *((_QWORD *)v22 + 16) = *((_QWORD *)v23 + 16);
            (**(void (***)(uint64_t, uint64_t))(v40 - 8))((uint64_t)(v22 + 96), (uint64_t)(v23 + 96));
            goto LABEL_46;
          }
          v41 = *((_OWORD *)v23 + 6);
          v42 = *((_OWORD *)v23 + 7);
          *((_QWORD *)v22 + 16) = *((_QWORD *)v23 + 16);
          *((_OWORD *)v22 + 6) = v41;
          *((_OWORD *)v22 + 7) = v42;
LABEL_46:
          v43 = *((_QWORD *)v23 + 20);
          if (*((_QWORD *)v22 + 20))
          {
            if (v43)
            {
              __swift_assign_boxed_opaque_existential_1((uint64_t *)v22 + 17, (uint64_t *)v23 + 17);
              goto LABEL_53;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)(v22 + 136));
          }
          else if (v43)
          {
            *((_QWORD *)v22 + 20) = v43;
            *((_QWORD *)v22 + 21) = *((_QWORD *)v23 + 21);
            (**(void (***)(uint64_t, uint64_t))(v43 - 8))((uint64_t)(v22 + 136), (uint64_t)(v23 + 136));
            goto LABEL_53;
          }
          v44 = *(_OWORD *)(v23 + 136);
          v45 = *(_OWORD *)(v23 + 152);
          *((_QWORD *)v22 + 21) = *((_QWORD *)v23 + 21);
          *(_OWORD *)(v22 + 136) = v44;
          *(_OWORD *)(v22 + 152) = v45;
LABEL_53:
          v46 = v22 + 176;
          v47 = v23 + 176;
          v48 = *((_QWORD *)v23 + 25);
          if (*((_QWORD *)v22 + 25))
          {
            if (v48)
            {
              __swift_assign_boxed_opaque_existential_1((uint64_t *)v22 + 22, (uint64_t *)v23 + 22);
              *((_QWORD *)v22 + 27) = *((_QWORD *)v23 + 27);
            }
            else
            {
              sub_221014F5C((uint64_t)(v22 + 176), &qword_255659A20);
              v50 = *((_OWORD *)v23 + 12);
              v49 = *((_OWORD *)v23 + 13);
              *v46 = *v47;
              *((_OWORD *)v22 + 12) = v50;
              *((_OWORD *)v22 + 13) = v49;
            }
          }
          else if (v48)
          {
            *((_QWORD *)v22 + 25) = v48;
            *((_QWORD *)v22 + 26) = *((_QWORD *)v23 + 26);
            (**(void (***)(uint64_t, uint64_t))(v48 - 8))((uint64_t)(v22 + 176), (uint64_t)(v23 + 176));
            *((_QWORD *)v22 + 27) = *((_QWORD *)v23 + 27);
          }
          else
          {
            v78 = *v47;
            v79 = *((_OWORD *)v23 + 13);
            *((_OWORD *)v22 + 12) = *((_OWORD *)v23 + 12);
            *((_OWORD *)v22 + 13) = v79;
            *v46 = v78;
          }
          v80 = *((_QWORD *)v23 + 31);
          if (*((_QWORD *)v22 + 31) >= 3uLL)
          {
            if (v80 >= 3)
            {
              __swift_assign_boxed_opaque_existential_1((uint64_t *)v22 + 28, (uint64_t *)v23 + 28);
LABEL_84:
              v22[264] = v23[264];
              v83 = v22 + 272;
              v84 = (__int128 *)(v23 + 272);
              v85 = *((_QWORD *)v23 + 35);
              if (*((_QWORD *)v22 + 35) >= 4uLL)
              {
                if (v85 < 4)
                {
                  sub_221014F5C((uint64_t)(v22 + 272), qword_255659A28);
                  v89 = *((_OWORD *)v23 + 20);
                  v91 = *v84;
                  v90 = *((_OWORD *)v23 + 18);
                  *((_OWORD *)v22 + 19) = *((_OWORD *)v23 + 19);
                  *((_OWORD *)v22 + 20) = v89;
                  *v83 = v91;
                  *((_OWORD *)v22 + 18) = v90;
                  goto LABEL_101;
                }
                *((_QWORD *)v22 + 34) = *((_QWORD *)v23 + 34);
                *((_QWORD *)v22 + 35) = *((_QWORD *)v23 + 35);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v22[288] = v23[288];
                *((_QWORD *)v22 + 37) = *((_QWORD *)v23 + 37);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v83 = v22 + 304;
                v94 = v23 + 304;
                v95 = *((_QWORD *)v23 + 39);
                if (*((_QWORD *)v22 + 39))
                {
                  if (v95)
                  {
                    *((_QWORD *)v22 + 38) = *((_QWORD *)v23 + 38);
                    *((_QWORD *)v22 + 39) = *((_QWORD *)v23 + 39);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v22[320] = v23[320];
                    *((_QWORD *)v22 + 41) = *((_QWORD *)v23 + 41);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_2210A3354((uint64_t)(v22 + 304));
                    v97 = *((_OWORD *)v23 + 20);
                    *v83 = *v94;
                    *((_OWORD *)v22 + 20) = v97;
                  }
                  goto LABEL_101;
                }
                if (!v95)
                {
                  v86 = *v94;
                  v87 = *((_OWORD *)v23 + 20);
                  goto LABEL_87;
                }
              }
              else
              {
                if (v85 < 4)
                {
                  v86 = *v84;
                  v87 = *((_OWORD *)v23 + 18);
                  v88 = *((_OWORD *)v23 + 20);
                  *((_OWORD *)v22 + 19) = *((_OWORD *)v23 + 19);
                  *((_OWORD *)v22 + 20) = v88;
LABEL_87:
                  *v83 = v86;
                  v83[1] = v87;
LABEL_101:
                  v22[336] = v23[336];
                  v22[337] = v23[337];
                  v22[338] = v23[338];
                  v22[339] = v23[339];
                  v22[340] = v23[340];
                  v22[341] = v23[341];
                  v22[342] = v23[342];
                  goto LABEL_102;
                }
                *((_QWORD *)v22 + 34) = *((_QWORD *)v23 + 34);
                *((_QWORD *)v22 + 35) = *((_QWORD *)v23 + 35);
                v22[288] = v23[288];
                *((_QWORD *)v22 + 37) = *((_QWORD *)v23 + 37);
                v92 = *((_QWORD *)v23 + 39);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (!v92)
                {
                  v93 = *((_OWORD *)v23 + 20);
                  *((_OWORD *)v22 + 19) = *((_OWORD *)v23 + 19);
                  *((_OWORD *)v22 + 20) = v93;
                  goto LABEL_101;
                }
              }
              *((_QWORD *)v22 + 38) = *((_QWORD *)v23 + 38);
              *((_QWORD *)v22 + 39) = *((_QWORD *)v23 + 39);
              v22[320] = v23[320];
              *((_QWORD *)v22 + 41) = *((_QWORD *)v23 + 41);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_101;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)(v22 + 224));
          }
          else if (v80 >= 3)
          {
            *((_QWORD *)v22 + 31) = v80;
            *((_QWORD *)v22 + 32) = *((_QWORD *)v23 + 32);
            (**(void (***)(uint64_t, uint64_t))(v80 - 8))((uint64_t)(v22 + 224), (uint64_t)(v23 + 224));
            goto LABEL_84;
          }
          v81 = *((_OWORD *)v23 + 14);
          v82 = *((_OWORD *)v23 + 15);
          *((_QWORD *)v22 + 32) = *((_QWORD *)v23 + 32);
          *((_OWORD *)v22 + 14) = v81;
          *((_OWORD *)v22 + 15) = v82;
          goto LABEL_84;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v22 + 16));
      }
      else if (v26 >= 6)
      {
        *((_QWORD *)v22 + 5) = v26;
        *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
        (**(void (***)(uint64_t, uint64_t))(v26 - 8))((uint64_t)(v22 + 16), (uint64_t)(v23 + 16));
        goto LABEL_32;
      }
      v30 = *((_OWORD *)v23 + 1);
      v31 = *((_OWORD *)v23 + 2);
      *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
      *((_OWORD *)v22 + 1) = v30;
      *((_OWORD *)v22 + 2) = v31;
      goto LABEL_32;
    }
    sub_221069B54(v22);
    goto LABEL_22;
  }
  if (v25)
  {
    *v22 = *v23;
    *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
    v27 = *((_QWORD *)v23 + 5);
    swift_retain();
    if (v27 >= 6)
    {
      *((_QWORD *)v22 + 5) = v27;
      *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
      (**(void (***)(uint64_t, uint64_t, unint64_t))(v27 - 8))((uint64_t)(v22 + 16), (uint64_t)(v23 + 16), v27);
    }
    else
    {
      v28 = *((_OWORD *)v23 + 1);
      v29 = *((_OWORD *)v23 + 2);
      *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
      *((_OWORD *)v22 + 1) = v28;
      *((_OWORD *)v22 + 2) = v29;
    }
    v34 = v22 + 56;
    v35 = (__int128 *)(v23 + 56);
    v36 = *((_QWORD *)v23 + 10);
    if (v36)
    {
      *((_QWORD *)v22 + 10) = v36;
      *((_QWORD *)v22 + 11) = *((_QWORD *)v23 + 11);
      (**(void (***)(_OWORD *, __int128 *))(v36 - 8))(v34, v35);
    }
    else
    {
      v51 = *v35;
      v52 = *(_OWORD *)(v23 + 72);
      *((_QWORD *)v22 + 11) = *((_QWORD *)v23 + 11);
      *v34 = v51;
      *(_OWORD *)(v22 + 72) = v52;
    }
    v53 = v22 + 96;
    v54 = (__int128 *)(v23 + 96);
    v55 = *((_QWORD *)v23 + 15);
    if (v55)
    {
      *((_QWORD *)v22 + 15) = v55;
      *((_QWORD *)v22 + 16) = *((_QWORD *)v23 + 16);
      (**(void (***)(_OWORD *, __int128 *))(v55 - 8))(v53, v54);
    }
    else
    {
      v56 = *v54;
      v57 = *((_OWORD *)v23 + 7);
      *((_QWORD *)v22 + 16) = *((_QWORD *)v23 + 16);
      *v53 = v56;
      *((_OWORD *)v22 + 7) = v57;
    }
    v58 = v22 + 136;
    v59 = (__int128 *)(v23 + 136);
    v60 = *((_QWORD *)v23 + 20);
    if (v60)
    {
      *((_QWORD *)v22 + 20) = v60;
      *((_QWORD *)v22 + 21) = *((_QWORD *)v23 + 21);
      (**(void (***)(_OWORD *, __int128 *))(v60 - 8))(v58, v59);
    }
    else
    {
      v61 = *v59;
      v62 = *(_OWORD *)(v23 + 152);
      *((_QWORD *)v22 + 21) = *((_QWORD *)v23 + 21);
      *v58 = v61;
      *(_OWORD *)(v22 + 152) = v62;
    }
    v63 = v22 + 176;
    v64 = (__int128 *)(v23 + 176);
    v65 = *((_QWORD *)v23 + 25);
    if (v65)
    {
      *((_QWORD *)v22 + 25) = v65;
      *((_QWORD *)v22 + 26) = *((_QWORD *)v23 + 26);
      (**(void (***)(_OWORD *, __int128 *))(v65 - 8))(v63, v64);
      *((_QWORD *)v22 + 27) = *((_QWORD *)v23 + 27);
    }
    else
    {
      v66 = *v64;
      v67 = *((_OWORD *)v23 + 13);
      *((_OWORD *)v22 + 12) = *((_OWORD *)v23 + 12);
      *((_OWORD *)v22 + 13) = v67;
      *v63 = v66;
    }
    v68 = v22 + 224;
    v69 = (__int128 *)(v23 + 224);
    v70 = *((_QWORD *)v23 + 31);
    if (v70 >= 3)
    {
      *((_QWORD *)v22 + 31) = v70;
      *((_QWORD *)v22 + 32) = *((_QWORD *)v23 + 32);
      (**(void (***)(_OWORD *, __int128 *))(v70 - 8))(v68, v69);
    }
    else
    {
      v71 = *v69;
      v72 = *((_OWORD *)v23 + 15);
      *((_QWORD *)v22 + 32) = *((_QWORD *)v23 + 32);
      *v68 = v71;
      *((_OWORD *)v22 + 15) = v72;
    }
    v22[264] = v23[264];
    if (*((_QWORD *)v23 + 35) >= 4uLL)
    {
      *((_QWORD *)v22 + 34) = *((_QWORD *)v23 + 34);
      *((_QWORD *)v22 + 35) = *((_QWORD *)v23 + 35);
      v22[288] = v23[288];
      *((_QWORD *)v22 + 37) = *((_QWORD *)v23 + 37);
      v77 = *((_QWORD *)v23 + 39);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v77)
      {
        *((_QWORD *)v22 + 38) = *((_QWORD *)v23 + 38);
        *((_QWORD *)v22 + 39) = *((_QWORD *)v23 + 39);
        v22[320] = v23[320];
        *((_QWORD *)v22 + 41) = *((_QWORD *)v23 + 41);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_97:
        v22[336] = v23[336];
        v22[337] = v23[337];
        v96 = *(_DWORD *)(v23 + 338);
        v22[342] = v23[342];
        *(_DWORD *)(v22 + 338) = v96;
        goto LABEL_102;
      }
      v73 = v22 + 304;
      v74 = *((_OWORD *)v23 + 19);
      v75 = *((_OWORD *)v23 + 20);
    }
    else
    {
      v73 = v22 + 272;
      v74 = *((_OWORD *)v23 + 17);
      v75 = *((_OWORD *)v23 + 18);
      v76 = *((_OWORD *)v23 + 20);
      *((_OWORD *)v22 + 19) = *((_OWORD *)v23 + 19);
      *((_OWORD *)v22 + 20) = v76;
    }
    *v73 = v74;
    v73[1] = v75;
    goto LABEL_97;
  }
LABEL_22:
  memcpy(v22, v23, 0x157uLL);
LABEL_102:
  v98 = a3[7];
  v99 = (char *)a1 + v98;
  v100 = (char *)a2 + v98;
  v101 = *(_QWORD *)v100;
  v102 = v100[8];
  j__swift_bridgeObjectRetain(*(_QWORD *)v100, v102);
  v103 = *(_QWORD *)v99;
  v104 = v99[8];
  *(_QWORD *)v99 = v101;
  v99[8] = v102;
  j__swift_bridgeObjectRelease(v103, v104);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_2210CBEEC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v13 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
  v14 = &v8[v13];
  v15 = &v9[v13];
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v10))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
  }
  memcpy((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), 0x157uLL);
  v18 = a3[7];
  v19 = a3[8];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  return a1;
}

uint64_t sub_2210CC070(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  unint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  __int128 v48;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[5];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      v13 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_2210CD558();
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v33 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v8, v9, v33);
LABEL_7:
  v15 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
  v16 = &v8[v15];
  v17 = &v9[v15];
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v10);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v10);
  if (v18)
  {
    if (!v19)
    {
      v20 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v16, v17, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    sub_2210CD558();
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  v34 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v16, v17, v34);
LABEL_13:
  v22 = a3[6];
  v23 = a1 + v22;
  v24 = (char *)(a2 + v22);
  if (*(_QWORD *)(a1 + v22 + 8))
  {
    v25 = *((_QWORD *)v24 + 1);
    if (v25)
    {
      *(_BYTE *)v23 = *v24;
      *(_QWORD *)(v23 + 8) = v25;
      swift_release();
      if (*(_QWORD *)(v23 + 40) >= 6uLL)
        __swift_destroy_boxed_opaque_existential_1(v23 + 16);
      v26 = *((_OWORD *)v24 + 2);
      *(_OWORD *)(v23 + 16) = *((_OWORD *)v24 + 1);
      *(_OWORD *)(v23 + 32) = v26;
      *(_QWORD *)(v23 + 48) = *((_QWORD *)v24 + 6);
      if (*(_QWORD *)(v23 + 80))
        __swift_destroy_boxed_opaque_existential_1(v23 + 56);
      v27 = *(_OWORD *)(v24 + 72);
      *(_OWORD *)(v23 + 56) = *(_OWORD *)(v24 + 56);
      *(_OWORD *)(v23 + 72) = v27;
      *(_QWORD *)(v23 + 88) = *((_QWORD *)v24 + 11);
      if (*(_QWORD *)(v23 + 120))
        __swift_destroy_boxed_opaque_existential_1(v23 + 96);
      v28 = *((_OWORD *)v24 + 7);
      *(_OWORD *)(v23 + 96) = *((_OWORD *)v24 + 6);
      *(_OWORD *)(v23 + 112) = v28;
      *(_QWORD *)(v23 + 128) = *((_QWORD *)v24 + 16);
      if (*(_QWORD *)(v23 + 160))
        __swift_destroy_boxed_opaque_existential_1(v23 + 136);
      v29 = *(_OWORD *)(v24 + 152);
      *(_OWORD *)(v23 + 136) = *(_OWORD *)(v24 + 136);
      *(_OWORD *)(v23 + 152) = v29;
      *(_QWORD *)(v23 + 168) = *((_QWORD *)v24 + 21);
      v30 = (_OWORD *)(v23 + 176);
      v31 = v24 + 176;
      if (*(_QWORD *)(v23 + 200))
      {
        if (*((_QWORD *)v24 + 25))
        {
          __swift_destroy_boxed_opaque_existential_1(v23 + 176);
          v32 = *((_OWORD *)v24 + 12);
          *v30 = *v31;
          *(_OWORD *)(v23 + 192) = v32;
          *(_QWORD *)(v23 + 208) = *((_QWORD *)v24 + 26);
          *(_QWORD *)(v23 + 216) = *((_QWORD *)v24 + 27);
          goto LABEL_32;
        }
        sub_221014F5C(v23 + 176, &qword_255659A20);
      }
      v35 = *((_OWORD *)v24 + 12);
      *v30 = *v31;
      *(_OWORD *)(v23 + 192) = v35;
      *(_OWORD *)(v23 + 208) = *((_OWORD *)v24 + 13);
LABEL_32:
      if (*(_QWORD *)(v23 + 248) >= 3uLL)
        __swift_destroy_boxed_opaque_existential_1(v23 + 224);
      v36 = *((_OWORD *)v24 + 15);
      *(_OWORD *)(v23 + 224) = *((_OWORD *)v24 + 14);
      *(_OWORD *)(v23 + 240) = v36;
      *(_QWORD *)(v23 + 256) = *((_QWORD *)v24 + 32);
      *(_BYTE *)(v23 + 264) = v24[264];
      if (*(_QWORD *)(v23 + 280) >= 4uLL)
      {
        v37 = *((_QWORD *)v24 + 35);
        if (v37 >= 4)
        {
          *(_QWORD *)(v23 + 272) = *((_QWORD *)v24 + 34);
          *(_QWORD *)(v23 + 280) = v37;
          swift_bridgeObjectRelease();
          *(_BYTE *)(v23 + 288) = v24[288];
          *(_QWORD *)(v23 + 296) = *((_QWORD *)v24 + 37);
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v23 + 312))
          {
            v47 = *((_QWORD *)v24 + 39);
            if (v47)
            {
              *(_QWORD *)(v23 + 304) = *((_QWORD *)v24 + 38);
              *(_QWORD *)(v23 + 312) = v47;
              swift_bridgeObjectRelease();
              *(_BYTE *)(v23 + 320) = v24[320];
              *(_QWORD *)(v23 + 328) = *((_QWORD *)v24 + 41);
              swift_bridgeObjectRelease();
              goto LABEL_38;
            }
            sub_2210A3354(v23 + 304);
          }
          v48 = *((_OWORD *)v24 + 20);
          *(_OWORD *)(v23 + 304) = *((_OWORD *)v24 + 19);
          *(_OWORD *)(v23 + 320) = v48;
          goto LABEL_38;
        }
        sub_221014F5C(v23 + 272, qword_255659A28);
      }
      v38 = *((_OWORD *)v24 + 18);
      *(_OWORD *)(v23 + 272) = *((_OWORD *)v24 + 17);
      *(_OWORD *)(v23 + 288) = v38;
      v39 = *((_OWORD *)v24 + 20);
      *(_OWORD *)(v23 + 304) = *((_OWORD *)v24 + 19);
      *(_OWORD *)(v23 + 320) = v39;
LABEL_38:
      *(_BYTE *)(v23 + 336) = v24[336];
      *(_DWORD *)(v23 + 337) = *(_DWORD *)(v24 + 337);
      *(_WORD *)(v23 + 341) = *(_WORD *)(v24 + 341);
      goto LABEL_39;
    }
    sub_221069B54((_QWORD *)v23);
  }
  memcpy((void *)v23, v24, 0x157uLL);
LABEL_39:
  v40 = a3[7];
  v41 = (uint64_t *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v43 = *v42;
  LOBYTE(v42) = *((_BYTE *)v42 + 8);
  v44 = *v41;
  v45 = *((unsigned __int8 *)v41 + 8);
  *v41 = v43;
  *((_BYTE *)v41 + 8) = (_BYTE)v42;
  j__swift_bridgeObjectRelease(v44, v45);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_2210CC4F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2210CC504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_35(*(_QWORD *)(a1 + 24));
    OUTLINED_FUNCTION_17_0();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_46_3();
    OUTLINED_FUNCTION_4_0(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_2210CC558()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2210CC564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_33();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    OUTLINED_FUNCTION_17_0();
  }
  else
  {
    v4 = v2;
    v5 = OUTLINED_FUNCTION_46_3();
    OUTLINED_FUNCTION_3_1(v1 + *(int *)(v4 + 20), v0, v0, v5);
  }
}

uint64_t type metadata accessor for SubscriptionStoreContentConfiguration(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_25565B170);
}

uint64_t sub_2210CC5C4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_2210CC654(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_2210CD278(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
}

void sub_2210CC668(uint64_t a1, uint64_t a2)
{
  sub_2210CD340(a1, a2);
}

void sub_2210CC674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210CD3C8(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
}

void sub_2210CC688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210CD464(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
}

void sub_2210CC69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210CD590(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
}

void sub_2210CC6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210CD648(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
}

uint64_t sub_2210CC6C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210CC6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_1Tm(a1, a2, a3, &qword_2556589F0);
}

uint64_t sub_2210CC6DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210CC6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_2Tm(a1, a2, a3, a4, &qword_2556589F0);
}

void sub_2210CC6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210CD7F4(a1, a2, a3, qword_25565B220, (void (*)(uint64_t))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
}

unint64_t destroy for SubscriptionStoreContentConfiguration.EnvironmentBridge(_QWORD *a1)
{
  unint64_t result;

  swift_release();
  if (a1[5] >= 6uLL)
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 2));
  if (a1[10])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 7));
  if (a1[15])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 12));
  if (a1[20])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 17));
  if (a1[25])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 22));
  if (a1[31] >= 3uLL)
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 28));
  result = a1[35];
  if (result >= 4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = a1[39];
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for SubscriptionStoreContentConfiguration.EnvironmentBridge(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  unint64_t v6;
  __int128 v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  _OWORD *v29;
  _OWORD *v30;
  unint64_t v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = (_OWORD *)(a1 + 16);
  v5 = a2 + 16;
  v6 = *(_QWORD *)(a2 + 40);
  swift_retain();
  if (v6 >= 6)
  {
    v8 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v8;
    (**(void (***)(uint64_t, uint64_t, unint64_t))(v6 - 8))(a1 + 16, v5, v6);
  }
  else
  {
    v7 = *(_OWORD *)(v5 + 16);
    *v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(v5 + 32);
  }
  v9 = (_OWORD *)(a1 + 56);
  v10 = (_OWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 80);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 88) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 72);
    *v9 = *v10;
    *(_OWORD *)(a1 + 72) = v13;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  }
  v14 = (_OWORD *)(a1 + 96);
  v15 = (_OWORD *)(a2 + 96);
  v16 = *(_QWORD *)(a2 + 120);
  if (v16)
  {
    v17 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = v16;
    *(_QWORD *)(a1 + 128) = v17;
    (**(void (***)(_OWORD *, _OWORD *))(v16 - 8))(v14, v15);
  }
  else
  {
    v18 = *(_OWORD *)(a2 + 112);
    *v14 = *v15;
    *(_OWORD *)(a1 + 112) = v18;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  }
  v19 = (_OWORD *)(a1 + 136);
  v20 = (_OWORD *)(a2 + 136);
  v21 = *(_QWORD *)(a2 + 160);
  if (v21)
  {
    v22 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = v21;
    *(_QWORD *)(a1 + 168) = v22;
    (**(void (***)(_OWORD *, _OWORD *))(v21 - 8))(v19, v20);
  }
  else
  {
    v23 = *(_OWORD *)(a2 + 152);
    *v19 = *v20;
    *(_OWORD *)(a1 + 152) = v23;
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  }
  v24 = (_OWORD *)(a1 + 176);
  v25 = (_OWORD *)(a2 + 176);
  v26 = *(_QWORD *)(a2 + 200);
  if (v26)
  {
    v27 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = v26;
    *(_QWORD *)(a1 + 208) = v27;
    (**(void (***)(_OWORD *, _OWORD *))(v26 - 8))(v24, v25);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  }
  else
  {
    v28 = *(_OWORD *)(a2 + 192);
    *v24 = *v25;
    *(_OWORD *)(a1 + 192) = v28;
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  }
  v29 = (_OWORD *)(a1 + 224);
  v30 = (_OWORD *)(a2 + 224);
  v31 = *(_QWORD *)(a2 + 248);
  if (v31 >= 3)
  {
    v33 = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 248) = v31;
    *(_QWORD *)(a1 + 256) = v33;
    (**(void (***)(_OWORD *, _OWORD *))(v31 - 8))(v29, v30);
  }
  else
  {
    v32 = *(_OWORD *)(a2 + 240);
    *v29 = *v30;
    *(_OWORD *)(a1 + 240) = v32;
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  }
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v34 = *(_QWORD *)(a2 + 280);
  if (v34 >= 4)
  {
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 280) = v34;
    *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    v37 = *(_QWORD *)(a2 + 312);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37)
    {
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 312) = v37;
      *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v38 = *(_OWORD *)(a2 + 320);
      *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
      *(_OWORD *)(a1 + 320) = v38;
    }
  }
  else
  {
    v35 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v35;
    v36 = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = v36;
  }
  *(_WORD *)(a1 + 336) = *(_WORD *)(a2 + 336);
  *(_BYTE *)(a1 + 342) = *(_BYTE *)(a2 + 342);
  *(_DWORD *)(a1 + 338) = *(_DWORD *)(a2 + 338);
  return a1;
}

uint64_t assignWithCopy for SubscriptionStoreContentConfiguration.EnvironmentBridge(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 *v26;
  __int128 *v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 *v37;
  uint64_t v38;
  __int128 v39;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) < 6uLL)
  {
    if (v4 >= 6)
    {
      *(_QWORD *)(a1 + 40) = v4;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v4 < 6)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
LABEL_6:
    v5 = *(_OWORD *)(a2 + 16);
    v6 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v6;
    goto LABEL_8;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
LABEL_8:
  v7 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v7)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  }
  else if (v7)
  {
    *(_QWORD *)(a1 + 80) = v7;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 56, a2 + 56);
    goto LABEL_15;
  }
  v8 = *(_OWORD *)(a2 + 56);
  v9 = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 56) = v8;
  *(_OWORD *)(a1 + 72) = v9;
LABEL_15:
  v10 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120))
  {
    if (v10)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
      goto LABEL_22;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  }
  else if (v10)
  {
    *(_QWORD *)(a1 + 120) = v10;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 96, a2 + 96);
    goto LABEL_22;
  }
  v11 = *(_OWORD *)(a2 + 96);
  v12 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v11;
  *(_OWORD *)(a1 + 112) = v12;
LABEL_22:
  v13 = *(_QWORD *)(a2 + 160);
  if (*(_QWORD *)(a1 + 160))
  {
    if (v13)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 136), (uint64_t *)(a2 + 136));
      goto LABEL_29;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  }
  else if (v13)
  {
    *(_QWORD *)(a1 + 160) = v13;
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 136, a2 + 136);
    goto LABEL_29;
  }
  v14 = *(_OWORD *)(a2 + 136);
  v15 = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 136) = v14;
  *(_OWORD *)(a1 + 152) = v15;
LABEL_29:
  v16 = (_OWORD *)(a1 + 176);
  v17 = (_OWORD *)(a2 + 176);
  v18 = *(_QWORD *)(a2 + 200);
  if (*(_QWORD *)(a1 + 200))
  {
    if (v18)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 176), (uint64_t *)(a2 + 176));
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    }
    else
    {
      sub_221014F5C(a1 + 176, &qword_255659A20);
      v20 = *(_OWORD *)(a2 + 192);
      v19 = *(_OWORD *)(a2 + 208);
      *v16 = *v17;
      *(_OWORD *)(a1 + 192) = v20;
      *(_OWORD *)(a1 + 208) = v19;
    }
  }
  else if (v18)
  {
    *(_QWORD *)(a1 + 200) = v18;
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1 + 176, a2 + 176);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  }
  else
  {
    v21 = *v17;
    v22 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v22;
    *v16 = v21;
  }
  v23 = *(_QWORD *)(a2 + 248);
  if (*(_QWORD *)(a1 + 248) < 3uLL)
  {
    if (v23 >= 3)
    {
      *(_QWORD *)(a1 + 248) = v23;
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1 + 224, a2 + 224);
      goto LABEL_43;
    }
    goto LABEL_41;
  }
  if (v23 < 3)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 224);
LABEL_41:
    v24 = *(_OWORD *)(a2 + 224);
    v25 = *(_OWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 224) = v24;
    *(_OWORD *)(a1 + 240) = v25;
    goto LABEL_43;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 224), (uint64_t *)(a2 + 224));
LABEL_43:
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v26 = (__int128 *)(a1 + 272);
  v27 = (__int128 *)(a2 + 272);
  v28 = *(_QWORD *)(a2 + 280);
  if (*(_QWORD *)(a1 + 280) < 4uLL)
  {
    if (v28 < 4)
    {
      v29 = *v27;
      v30 = *(_OWORD *)(a2 + 288);
      v31 = *(_OWORD *)(a2 + 320);
      *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
      *(_OWORD *)(a1 + 320) = v31;
LABEL_46:
      *v26 = v29;
      v26[1] = v30;
      goto LABEL_57;
    }
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
    *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    v35 = *(_QWORD *)(a2 + 312);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v35)
    {
      v36 = *(_OWORD *)(a2 + 320);
      *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
      *(_OWORD *)(a1 + 320) = v36;
      goto LABEL_57;
    }
    goto LABEL_55;
  }
  if (v28 < 4)
  {
    sub_221014F5C(a1 + 272, qword_255659A28);
    v32 = *(_OWORD *)(a2 + 320);
    v34 = *v27;
    v33 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = v32;
    *v26 = v34;
    *(_OWORD *)(a1 + 288) = v33;
    goto LABEL_57;
  }
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = (__int128 *)(a1 + 304);
  v37 = (__int128 *)(a2 + 304);
  v38 = *(_QWORD *)(a2 + 312);
  if (!*(_QWORD *)(a1 + 312))
  {
    if (!v38)
    {
      v29 = *v37;
      v30 = *(_OWORD *)(a2 + 320);
      goto LABEL_46;
    }
LABEL_55:
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_57;
  }
  if (v38)
  {
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2210A3354(a1 + 304);
    v39 = *(_OWORD *)(a2 + 320);
    *v26 = *v37;
    *(_OWORD *)(a1 + 320) = v39;
  }
LABEL_57:
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_BYTE *)(a1 + 337) = *(_BYTE *)(a2 + 337);
  *(_BYTE *)(a1 + 338) = *(_BYTE *)(a2 + 338);
  *(_BYTE *)(a1 + 339) = *(_BYTE *)(a2 + 339);
  *(_BYTE *)(a1 + 340) = *(_BYTE *)(a2 + 340);
  *(_BYTE *)(a1 + 341) = *(_BYTE *)(a2 + 341);
  *(_BYTE *)(a1 + 342) = *(_BYTE *)(a2 + 342);
  return a1;
}

void *__swift_memcpy343_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x157uLL);
}

uint64_t assignWithTake for SubscriptionStoreContentConfiguration.EnvironmentBridge(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  __int128 v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  if (*(_QWORD *)(a1 + 40) >= 6uLL)
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 80))
    __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  v5 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v5;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 120))
    __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 160))
    __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  v7 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v7;
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  v8 = (_OWORD *)(a1 + 176);
  v9 = (_OWORD *)(a2 + 176);
  if (*(_QWORD *)(a1 + 200))
  {
    if (*(_QWORD *)(a2 + 200))
    {
      __swift_destroy_boxed_opaque_existential_1(a1 + 176);
      v10 = *(_OWORD *)(a2 + 192);
      *v8 = *v9;
      *(_OWORD *)(a1 + 192) = v10;
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      goto LABEL_14;
    }
    sub_221014F5C(a1 + 176, &qword_255659A20);
  }
  v11 = *(_OWORD *)(a2 + 192);
  *v8 = *v9;
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
LABEL_14:
  if (*(_QWORD *)(a1 + 248) >= 3uLL)
    __swift_destroy_boxed_opaque_existential_1(a1 + 224);
  v12 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v12;
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  if (*(_QWORD *)(a1 + 280) >= 4uLL)
  {
    v13 = *(_QWORD *)(a2 + 280);
    if (v13 >= 4)
    {
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = v13;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 312))
      {
        v17 = *(_QWORD *)(a2 + 312);
        if (v17)
        {
          *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
          *(_QWORD *)(a1 + 312) = v17;
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
          *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
          swift_bridgeObjectRelease();
          goto LABEL_20;
        }
        sub_2210A3354(a1 + 304);
      }
      v18 = *(_OWORD *)(a2 + 320);
      *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
      *(_OWORD *)(a1 + 320) = v18;
      goto LABEL_20;
    }
    sub_221014F5C(a1 + 272, qword_255659A28);
  }
  v14 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v14;
  v15 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v15;
LABEL_20:
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_DWORD *)(a1 + 337) = *(_DWORD *)(a2 + 337);
  *(_WORD *)(a1 + 341) = *(_WORD *)(a2 + 341);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStoreContentConfiguration.EnvironmentBridge(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 343))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStoreContentConfiguration.EnvironmentBridge(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 328) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 342) = 0;
    *(_WORD *)(result + 340) = 0;
    *(_DWORD *)(result + 336) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 343) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 343) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStoreContentConfiguration.EnvironmentBridge()
{
  return &type metadata for SubscriptionStoreContentConfiguration.EnvironmentBridge;
}

void sub_2210CD264(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_2210CD278(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for SubscriptionOptionSectionAccessorySubview);
}

void sub_2210CD278(_QWORD *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((*(_DWORD *)(*(_QWORD *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    a4(0);
    if (OUTLINED_FUNCTION_6_16())
    {
      v6 = OUTLINED_FUNCTION_22_7();
      OUTLINED_FUNCTION_14_16(v6);
    }
    else
    {
      v7 = OUTLINED_FUNCTION_1_24();
      OUTLINED_FUNCTION_26_11(v7);
      OUTLINED_FUNCTION_2_20((uint64_t)a1);
    }
    v8 = (uint64_t)a1 + *(int *)(a3 + 20);
    if (OUTLINED_FUNCTION_6_16())
    {
      v9 = OUTLINED_FUNCTION_22_7();
      OUTLINED_FUNCTION_13_19(v9);
    }
    else
    {
      v10 = OUTLINED_FUNCTION_1_24();
      OUTLINED_FUNCTION_25_11(v10);
      OUTLINED_FUNCTION_2_20(v8);
    }
  }
  OUTLINED_FUNCTION_14_13();
}

void sub_2210CD334(uint64_t a1, uint64_t a2)
{
  sub_2210CD340(a1, a2);
}

void sub_2210CD340(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = OUTLINED_FUNCTION_42_5();
  v5(v4);
  if (!OUTLINED_FUNCTION_10_18(v2))
  {
    v6 = OUTLINED_FUNCTION_1_24();
    OUTLINED_FUNCTION_16_0(v6);
  }
  v7 = v2 + *(int *)(a2 + 20);
  if (OUTLINED_FUNCTION_10_18(v7))
  {
    OUTLINED_FUNCTION_17_0();
  }
  else
  {
    v8 = OUTLINED_FUNCTION_1_24();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
}

void sub_2210CD3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210CD3C8(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionSectionAccessorySubview);
}

void sub_2210CD3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_17_16(a1, a2, a3, a4);
  if (OUTLINED_FUNCTION_6_16())
  {
    v6 = OUTLINED_FUNCTION_22_7();
    OUTLINED_FUNCTION_14_16(v6);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_1_24();
    OUTLINED_FUNCTION_26_11(v7);
    OUTLINED_FUNCTION_2_20(v4);
  }
  v8 = v4 + *(int *)(a3 + 20);
  if (OUTLINED_FUNCTION_6_16())
  {
    v9 = OUTLINED_FUNCTION_22_7();
    OUTLINED_FUNCTION_13_19(v9);
  }
  else
  {
    v10 = OUTLINED_FUNCTION_1_24();
    OUTLINED_FUNCTION_25_11(v10);
    OUTLINED_FUNCTION_2_20(v8);
  }
  OUTLINED_FUNCTION_14_13();
}

void sub_2210CD450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210CD464(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionSectionAccessorySubview);
}

void sub_2210CD464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_16_14(a1, a2, a3, a4);
  v7 = OUTLINED_FUNCTION_0_25(v4);
  if (v6)
  {
    if (!v7)
    {
      OUTLINED_FUNCTION_1_24();
      v8 = OUTLINED_FUNCTION_45_3();
      OUTLINED_FUNCTION_15_15(v8, v9);
      OUTLINED_FUNCTION_11_19(v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_33_7();
LABEL_6:
    v10 = OUTLINED_FUNCTION_40_3();
    OUTLINED_FUNCTION_36_6(v10);
    goto LABEL_7;
  }
  v15 = OUTLINED_FUNCTION_1_24();
  OUTLINED_FUNCTION_15_15(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24));
LABEL_7:
  v11 = v4 + *(int *)(v5 + 20);
  v12 = OUTLINED_FUNCTION_0_25(v11);
  if (!v6)
  {
    if (!v12)
    {
      v16 = OUTLINED_FUNCTION_1_24();
      OUTLINED_FUNCTION_15_15(v11, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24));
      goto LABEL_13;
    }
    OUTLINED_FUNCTION_33_7();
    goto LABEL_12;
  }
  if (v12)
  {
LABEL_12:
    v14 = OUTLINED_FUNCTION_40_3();
    OUTLINED_FUNCTION_35_7(v14);
    goto LABEL_13;
  }
  v13 = OUTLINED_FUNCTION_1_24();
  OUTLINED_FUNCTION_15_15(v11, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16));
  OUTLINED_FUNCTION_11_19(v11);
LABEL_13:
  OUTLINED_FUNCTION_17_5();
}

void sub_2210CD558()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_42_5();
  v2 = v1(v0);
  OUTLINED_FUNCTION_16_0(v2);
  OUTLINED_FUNCTION_6_0();
}

void sub_2210CD57C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210CD590(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionSectionAccessorySubview);
}

void sub_2210CD590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_17_16(a1, a2, a3, a4);
  if (OUTLINED_FUNCTION_6_16())
  {
    v7 = OUTLINED_FUNCTION_22_7();
    OUTLINED_FUNCTION_14_16(v7);
  }
  else
  {
    OUTLINED_FUNCTION_1_24();
    v8 = OUTLINED_FUNCTION_44_4();
    v9(v8, a2);
    OUTLINED_FUNCTION_2_20(v4);
  }
  v10 = *(int *)(a3 + 20);
  v11 = v4 + v10;
  v12 = a2 + v10;
  if (OUTLINED_FUNCTION_6_16())
  {
    v13 = OUTLINED_FUNCTION_22_7();
    OUTLINED_FUNCTION_13_19(v13);
  }
  else
  {
    v14 = OUTLINED_FUNCTION_1_24();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
    OUTLINED_FUNCTION_2_20(v11);
  }
  OUTLINED_FUNCTION_14_13();
}

void sub_2210CD634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210CD648(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionSectionAccessorySubview);
}

void sub_2210CD648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_16_14(a1, a2, a3, a4);
  v7 = OUTLINED_FUNCTION_0_25(v4);
  if (v6)
  {
    if (!v7)
    {
      OUTLINED_FUNCTION_1_24();
      v8 = OUTLINED_FUNCTION_44_4();
      OUTLINED_FUNCTION_15_15(v8, v9);
      OUTLINED_FUNCTION_11_19(v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_33_7();
LABEL_6:
    v10 = OUTLINED_FUNCTION_40_3();
    OUTLINED_FUNCTION_36_6(v10);
    goto LABEL_7;
  }
  v15 = OUTLINED_FUNCTION_1_24();
  OUTLINED_FUNCTION_15_15(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40));
LABEL_7:
  v11 = v4 + *(int *)(v5 + 20);
  v12 = OUTLINED_FUNCTION_0_25(v11);
  if (!v6)
  {
    if (!v12)
    {
      v16 = OUTLINED_FUNCTION_1_24();
      OUTLINED_FUNCTION_15_15(v11, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40));
      goto LABEL_13;
    }
    OUTLINED_FUNCTION_33_7();
    goto LABEL_12;
  }
  if (v12)
  {
LABEL_12:
    v14 = OUTLINED_FUNCTION_40_3();
    OUTLINED_FUNCTION_35_7(v14);
    goto LABEL_13;
  }
  v13 = OUTLINED_FUNCTION_1_24();
  OUTLINED_FUNCTION_15_15(v11, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32));
  OUTLINED_FUNCTION_11_19(v11);
LABEL_13:
  OUTLINED_FUNCTION_17_5();
}

uint64_t sub_2210CD73C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210CD748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_1Tm(a1, a2, a3, qword_2556561A0);
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  return __swift_getEnumTagSinglePayload(a1, a2, v6);
}

uint64_t sub_2210CD788()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210CD794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_2Tm(a1, a2, a3, a4, qword_2556561A0);
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(a5);
  v5 = OUTLINED_FUNCTION_18();
  return __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
}

uint64_t type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(uint64_t a1)
{
  return sub_22100CA0C(a1, (uint64_t *)&unk_25565B2A8);
}

void sub_2210CD7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210CD7F4(a1, a2, a3, qword_25565B2B8, (void (*)(uint64_t))type metadata accessor for SubscriptionOptionSectionAccessorySubview);
}

void sub_2210CD7F4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;

  sub_221012758(319, a4, a5);
  if (v5 <= 0x3F)
    OUTLINED_FUNCTION_30_10();
  OUTLINED_FUNCTION_50_2();
}

uint64_t sub_2210CD84C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210CD85C()
{
  sub_2210CDEA4();
  return OUTLINED_FUNCTION_32_7();
}

void sub_2210CD88C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_13_0();
  sub_2210D2EE8(a1, v4 - v3, &qword_2556589D8);
  sub_2210CDEA4();
  sub_2212F32D0();
  sub_221014F5C(a1, &qword_2556589D8);
  OUTLINED_FUNCTION_17_0();
}

uint64_t sub_2210CD90C()
{
  sub_2210CDE68();
  return OUTLINED_FUNCTION_32_7();
}

_QWORD *sub_2210CD93C(_QWORD *a1)
{
  uint64_t v3;

  sub_221069B18((uint64_t)a1, (uint64_t)&v3);
  sub_2210CDE68();
  sub_2212F32D0();
  return sub_221069B54(a1);
}

_QWORD *sub_2210CD98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v6[44];

  sub_2210D2EE8(a1, (uint64_t)v6, &qword_255659AC0);
  MEMORY[0x227669B20](v6, a2, &type metadata for ApplyEnvironmentBridgeModifier, a3);
  return sub_2210D1F6C(v6);
}

void sub_2210CD9F4(uint64_t a1@<X8>)
{
  sub_2210CDBF4(&qword_2556589F0, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionGroupAccessorySubview, type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews, a1);
}

void sub_2210CDA14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_13_0();
  v7 = v6 - v5;
  v8 = OUTLINED_FUNCTION_46_3();
  OUTLINED_FUNCTION_43_4(v1 + *(int *)(v8 + 20));
  OUTLINED_FUNCTION_7_0(v0, 1, v3);
  if (v9)
  {
    sub_221014F5C(v0, &qword_2556589F0);
  }
  else
  {
    sub_22103FA34(v0, v7, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
    sub_2211DD880();
    OUTLINED_FUNCTION_33_7();
  }
  OUTLINED_FUNCTION_14_13();
}

void sub_2210CDAE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_13_0();
  v8 = v7 - v6;
  OUTLINED_FUNCTION_43_4(v2);
  OUTLINED_FUNCTION_7_0(v0, 1, v4);
  if (v9)
  {
    sub_221014F5C(v0, &qword_2556589F0);
  }
  else
  {
    sub_22103FA34(v0, v8, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
    sub_2211DD880();
    OUTLINED_FUNCTION_41_3();
  }
  OUTLINED_FUNCTION_14_13();
}

void sub_2210CDBAC(uint64_t a1@<X8>)
{
  sub_2210CDBF4(&qword_2556589F0, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionGroupAccessorySubview, type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews, a1);
}

void sub_2210CDBD8(uint64_t a1@<X8>)
{
  sub_2210CDBF4(qword_2556561A0, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionSectionAccessorySubview, type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews, a1);
}

void sub_2210CDBF4(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);

  v28 = a3;
  v7 = v4;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_4();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v27 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565B328);
  OUTLINED_FUNCTION_4();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v27 - v19;
  sub_2210D2EE8(v7, (uint64_t)v14, a1);
  v21 = a2(0);
  OUTLINED_FUNCTION_7_0((uint64_t)v14, 1, v21);
  if (v22)
  {
    sub_221014F5C((uint64_t)v14, a1);
    v23 = 1;
  }
  else
  {
    sub_2212F4938();
    OUTLINED_FUNCTION_41_3();
    v23 = 0;
  }
  sub_2212F492C();
  OUTLINED_FUNCTION_5_0((uint64_t)v20, v23);
  v24 = v28(0);
  sub_2210D2EE8(v7 + *(int *)(v24 + 20), (uint64_t)v12, a1);
  OUTLINED_FUNCTION_7_0((uint64_t)v12, 1, v21);
  if (v22)
  {
    sub_221014F5C((uint64_t)v12, a1);
    v25 = 1;
  }
  else
  {
    sub_2212F4938();
    OUTLINED_FUNCTION_41_3();
    v25 = 0;
  }
  OUTLINED_FUNCTION_5_0((uint64_t)v18, v25);
  sub_2210B4D74((uint64_t)v20, a4, &qword_25565B328);
  v26 = __swift_instantiateConcreteTypeFromMangledName(qword_25565B330);
  sub_2210B4D74((uint64_t)v18, a4 + *(int *)(v26 + 36), &qword_25565B328);
  OUTLINED_FUNCTION_19();
}

void sub_2210CDDD4(uint64_t a1@<X8>)
{
  sub_2210CDBF4(qword_2556561A0, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionSectionAccessorySubview, type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews, a1);
}

uint64_t sub_2210CDE00()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_2210CDE10@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)a1 = 2;
  sub_221146748((uint64_t *)(a1 + 8));
  bzero((void *)(a1 + 56), 0xD1uLL);
  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_BYTE *)(a1 + 336) = 1;
  *(_DWORD *)(a1 + 337) = 0;
  *(_WORD *)(a1 + 341) = 0;
  return result;
}

unint64_t sub_2210CDE68()
{
  unint64_t result;

  result = qword_25565B2E8;
  if (!qword_25565B2E8)
  {
    result = MEMORY[0x22766BAC4](&unk_221304264, &_s44SubscriptionStoreContentEnvironmentBridgeKeyON);
    atomic_store(result, (unint64_t *)&qword_25565B2E8);
  }
  return result;
}

unint64_t sub_2210CDEA4()
{
  unint64_t result;

  result = qword_25565B2F0;
  if (!qword_25565B2F0)
  {
    result = MEMORY[0x22766BAC4](&unk_221304234, &_s33SubscriptionOptionGroupContextKeyON);
    atomic_store(result, (unint64_t *)&qword_25565B2F0);
  }
  return result;
}

void sub_2210CDEE0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t AssociatedTypeWitness;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  int v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;

  v39 = a2;
  v40 = a3;
  v41 = a1;
  v9 = sub_2212F32B8();
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_13_0();
  v12 = v11 - v10;
  v13 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_13_0();
  v17 = v16 - v15;
  __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_13_0();
  v21 = v20 - v19;
  v22 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_13_0();
  v26 = v25 - v24;
  v36[1] = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a5 + 8) + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v29 = (char *)v36 - v28;
  __swift_storeEnumTagSinglePayload(a6, 1, 1, v13);
  v42 = a6 + *(int *)(OUTLINED_FUNCTION_47_4() + 20);
  __swift_storeEnumTagSinglePayload(v42, 1, 1, v13);
  v30 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Context.SectionContext(0) + 20);
  v43 = a6;
  v31 = (_QWORD *)(a6 + v30);
  v32 = v40;
  *v31 = v39;
  v31[1] = v32;
  v38 = v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, v41, a4);
  swift_retain();
  sub_2212F54B4();
  v39 = a4;
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_29_9();
  OUTLINED_FUNCTION_7_0(v21, 1, v13);
  while (!v33)
  {
    sub_22103FA34(v21, v17, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionSectionAccessorySubview);
    sub_2212F4920();
    sub_2210CEE6C();
    sub_2212F32C4();
    v34 = v46;
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v12, v45);
    if (v34 == 2)
    {
      sub_2210CD558();
    }
    else
    {
      if ((v34 & 1) != 0)
        v35 = v42;
      else
        v35 = v43;
      sub_221014F5C(v35, qword_2556561A0);
      sub_22103FA34(v17, v35, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionSectionAccessorySubview);
      __swift_storeEnumTagSinglePayload(v35, 0, 1, v13);
    }
    OUTLINED_FUNCTION_29_9();
    OUTLINED_FUNCTION_7_0(v21, 1, v13);
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v41, v39);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v29, AssociatedTypeWitness);
  OUTLINED_FUNCTION_19();
}

uint64_t type metadata accessor for SubscriptionStoreContentConfiguration.Context.SectionContext(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_25565B390);
}

void sub_2210CE1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v12 = type metadata accessor for StoreContentAdapter(0, a3, a5, a4);
  MEMORY[0x24BDAC7A8](v12);
  sub_221232008(a3, a5, (uint64_t)&v15 - v13);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = a1;
  v14[7] = a2;
  swift_retain();
  MEMORY[0x22766BAC4](&unk_221313B50, v12);
  sub_2212F465C();
  OUTLINED_FUNCTION_19();
}

uint64_t sub_2210CE2EC@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t);
  _BYTE v16[352];

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v16[-v11];
  bzero(v16, 0x157uLL);
  v13 = sub_221245D34();
  sub_221014F5C((uint64_t)v16, &qword_255659AC0);
  a2(v13);
  swift_bridgeObjectRelease();
  sub_221088D68((uint64_t)v9, a3, (uint64_t)v12);
  v14 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v14(v9, a3);
  sub_221087210((uint64_t)v12, a3, a4);
  return ((uint64_t (*)(_BYTE *, uint64_t))v14)(v12, a3);
}

__n128 sub_2210CE414@<Q0>(uint64_t a1@<X8>)
{
  __n128 result;
  int v3;
  char v4;
  char v5;
  __int128 v6;
  __int128 v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  sub_2210CEEA8();
  OUTLINED_FUNCTION_19_16();
  sub_2210CEEE4();
  OUTLINED_FUNCTION_19_16();
  sub_2210CEF20();
  OUTLINED_FUNCTION_19_16();
  sub_2210C6ED4();
  OUTLINED_FUNCTION_19_16();
  sub_2210CEF5C();
  OUTLINED_FUNCTION_19_16();
  sub_2210CEF98();
  OUTLINED_FUNCTION_19_16();
  sub_2210C0594();
  OUTLINED_FUNCTION_19_16();
  *(_BYTE *)a1 = v5;
  *(_BYTE *)(a1 + 264) = v5;
  *(_OWORD *)(a1 + 272) = v6;
  *(_OWORD *)(a1 + 288) = v7;
  result = v8;
  *(__n128 *)(a1 + 304) = v8;
  *(_QWORD *)(a1 + 320) = v9;
  *(_QWORD *)(a1 + 328) = v10;
  *(_BYTE *)(a1 + 336) = v11;
  *(_BYTE *)(a1 + 337) = v3;
  *(_DWORD *)(a1 + 338) = v3;
  *(_BYTE *)(a1 + 342) = v4;
  return result;
}

void sub_2210CE568(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t *v49;
  _BYTE v50[12];
  int v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  _OWORD v64[11];
  uint64_t v65;
  _QWORD v66[6];
  uint64_t v67;
  _BYTE v68[48];
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  char v78;
  unsigned int v79;
  unsigned __int8 v80;

  v3 = v2;
  v61 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B5A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v50[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B5B0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v50[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B5B8);
  MEMORY[0x24BDAC7A8](v54);
  v12 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B5C0);
  MEMORY[0x24BDAC7A8](v60);
  v62 = &v50[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B5C8);
  MEMORY[0x24BDAC7A8](v55);
  v63 = &v50[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B5D0);
  MEMORY[0x24BDAC7A8](v56);
  v59 = &v50[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B5D8);
  MEMORY[0x24BDAC7A8](v57);
  v58 = &v50[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2210D2EE8(v3, (uint64_t)&v65, &qword_255659AC0);
  if (v66[0])
  {
    v17 = v65;
    sub_221069B54(&v65);
  }
  else
  {
    sub_221014F5C((uint64_t)&v65, &qword_255659AC0);
    v17 = 3;
  }
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B5E0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v7, a1, v18);
  v7[*(int *)(v5 + 36)] = v17;
  sub_2210D2EE8(v3, (uint64_t)&v65, &qword_255659AC0);
  if (v66[0])
  {
    sub_2210A57FC(v66, (uint64_t)v64);
    sub_221069B54(&v65);
  }
  else
  {
    sub_221014F5C((uint64_t)&v65, &qword_255659AC0);
    memset(v64, 0, 48);
  }
  sub_2210D2EE8((uint64_t)v64, (uint64_t)&v10[*(int *)(v8 + 36)], &qword_25565B5E8);
  sub_2210D2EE8((uint64_t)v7, (uint64_t)v10, &qword_25565B5A8);
  sub_221014F5C((uint64_t)v64, &qword_25565B5E8);
  sub_221014F5C((uint64_t)v7, &qword_25565B5A8);
  sub_2210D2EE8(v3, (uint64_t)&v65, &qword_255659AC0);
  if (v66[0])
  {
    sub_2210D2F10((uint64_t)&v67, (uint64_t)v64);
    sub_221069B54(&v65);
  }
  else
  {
    sub_221014F5C((uint64_t)&v65, &qword_255659AC0);
    memset(v64, 0, 24);
    *((_QWORD *)&v64[1] + 1) = 1;
    bzero(&v64[2], 0x88uLL);
  }
  KeyPath = swift_getKeyPath();
  sub_2210D2EE8((uint64_t)v64, (uint64_t)&v65, &qword_25565B5F0);
  v20 = swift_allocObject();
  sub_2210B4D74((uint64_t)&v65, v20 + 16, &qword_25565B5F0);
  sub_2210D2EE8((uint64_t)v10, (uint64_t)v12, &qword_25565B5B0);
  v21 = (uint64_t *)&v12[*(int *)(v54 + 36)];
  *v21 = KeyPath;
  v21[1] = (uint64_t)sub_2210D2E60;
  v21[2] = v20;
  sub_221014F5C((uint64_t)v64, &qword_25565B5F0);
  sub_221014F5C((uint64_t)v10, &qword_25565B5B0);
  sub_2210D2EE8(v3, (uint64_t)&v65, &qword_255659AC0);
  if (v66[0])
  {
    sub_2210C6E98((uint64_t)v68, (uint64_t)v64);
    sub_221069B54(&v65);
  }
  else
  {
    sub_221014F5C((uint64_t)&v65, &qword_255659AC0);
    memset(v64, 0, 24);
    *(_OWORD *)((char *)&v64[1] + 8) = xmmword_221303FC0;
  }
  v22 = swift_getKeyPath();
  sub_2210D2EE8((uint64_t)v64, (uint64_t)&v65, &qword_25565ADB8);
  v23 = swift_allocObject();
  sub_2210B4D74((uint64_t)&v65, v23 + 16, &qword_25565ADB8);
  v24 = v62;
  sub_2210D2EE8((uint64_t)v12, (uint64_t)v62, &qword_25565B5B8);
  v25 = (uint64_t *)&v24[*(int *)(v60 + 36)];
  *v25 = v22;
  v25[1] = (uint64_t)sub_2210D2EA0;
  v25[2] = v23;
  sub_221014F5C((uint64_t)v64, &qword_25565ADB8);
  sub_221014F5C((uint64_t)v12, &qword_25565B5B8);
  v60 = v3;
  sub_2210D2EE8(v3, (uint64_t)&v65, &qword_255659AC0);
  if (v66[0])
  {
    LODWORD(v54) = v68[40];
    v26 = v71;
    v27 = v72;
    v28 = v73;
    v29 = v74;
    v30 = v75;
    v31 = v76;
    v51 = v77;
    v52 = v70;
    v53 = v69;
    sub_221046F24(v69, v70, v71, v72, v73, v74);
    sub_221069B54(&v65);
  }
  else
  {
    sub_221014F5C((uint64_t)&v65, &qword_255659AC0);
    LODWORD(v54) = 0;
    v52 = 0;
    v53 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v31 = 0;
    v51 = 0;
  }
  v33 = v62;
  v32 = v63;
  sub_2210D2EE8((uint64_t)v62, (uint64_t)v63, &qword_25565B5C0);
  v34 = &v32[*(int *)(v55 + 36)];
  *v34 = v54;
  v35 = v52;
  *((_QWORD *)v34 + 1) = v53;
  *((_QWORD *)v34 + 2) = v35;
  *((_QWORD *)v34 + 3) = v26;
  *((_QWORD *)v34 + 4) = v27;
  *((_QWORD *)v34 + 5) = v28;
  *((_QWORD *)v34 + 6) = v29;
  *((_QWORD *)v34 + 7) = v30;
  *((_QWORD *)v34 + 8) = v31;
  v34[72] = v51;
  sub_221014F5C((uint64_t)v33, &qword_25565B5C0);
  v36 = v60;
  sub_2210D2EE8(v60, (uint64_t)&v65, &qword_255659AC0);
  if (v66[0])
  {
    v37 = v78;
    sub_221069B54(&v65);
  }
  else
  {
    sub_221014F5C((uint64_t)&v65, &qword_255659AC0);
    v37 = 3;
  }
  v38 = (uint64_t)v59;
  v39 = swift_getKeyPath();
  v40 = swift_allocObject();
  *(_BYTE *)(v40 + 16) = v37;
  v41 = v63;
  sub_2210D2EE8((uint64_t)v63, v38, &qword_25565B5C8);
  v42 = (uint64_t *)(v38 + *(int *)(v56 + 36));
  *v42 = v39;
  v42[1] = (uint64_t)sub_2210D2EBC;
  v42[2] = v40;
  sub_221014F5C((uint64_t)v41, &qword_25565B5C8);
  sub_2210D2EE8(v36, (uint64_t)&v65, &qword_255659AC0);
  if (v66[0])
  {
    v43 = v79;
    v44 = v80;
    sub_221069B54(&v65);
    v45 = v43 | (v44 << 32);
  }
  else
  {
    sub_221014F5C((uint64_t)&v65, &qword_255659AC0);
    v45 = 3;
  }
  v46 = swift_getKeyPath();
  v47 = swift_allocObject();
  *(_BYTE *)(v47 + 20) = BYTE4(v45);
  *(_DWORD *)(v47 + 16) = v45;
  v48 = v58;
  sub_2210D2EE8(v38, (uint64_t)v58, &qword_25565B5D0);
  v49 = (uint64_t *)&v48[*(int *)(v57 + 36)];
  *v49 = v46;
  v49[1] = (uint64_t)sub_2210D2ED8;
  v49[2] = v47;
  sub_221014F5C(v38, &qword_25565B5D0);
  sub_2210B4D74((uint64_t)v48, v61, &qword_25565B5D8);
}

double sub_2210CED20()
{
  return sub_2210CDE10((uint64_t)&unk_25565AFA8);
}

void *sub_2210CED2C()
{
  if (qword_255655CA8 != -1)
    swift_once();
  return &unk_25565AFA8;
}

uint64_t sub_2210CED6C@<X0>(uint64_t a1@<X8>)
{
  void *v2;

  v2 = sub_2210CED2C();
  return sub_221069B18((uint64_t)v2, a1);
}

uint64_t sub_2210CED90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589D8);
  __swift_allocate_value_buffer(v0, qword_25565B100);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_25565B100);
  v2 = type metadata accessor for SubscriptionStoreContentConfiguration.Context(0);
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
}

uint64_t sub_2210CEDF0()
{
  uint64_t v0;

  if (qword_255655CB0 != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589D8);
  return __swift_project_value_buffer(v0, (uint64_t)qword_25565B100);
}

void sub_2210CEE3C(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_2210CEDF0();
  sub_2210D2EE8(v2, a1, &qword_2556589D8);
}

unint64_t sub_2210CEE6C()
{
  unint64_t result;

  result = qword_25565B2F8;
  if (!qword_25565B2F8)
  {
    result = MEMORY[0x22766BAC4](&unk_22130DB28, &_s41SubscriptionOptionSectionAccessoryKindKeyON);
    atomic_store(result, (unint64_t *)&qword_25565B2F8);
  }
  return result;
}

unint64_t sub_2210CEEA8()
{
  unint64_t result;

  result = qword_25565B300;
  if (!qword_25565B300)
  {
    result = MEMORY[0x22766BAC4](&unk_22130D510, &_s29SubscriptionStoreSectionStyleON);
    atomic_store(result, (unint64_t *)&qword_25565B300);
  }
  return result;
}

unint64_t sub_2210CEEE4()
{
  unint64_t result;

  result = qword_25565B308;
  if (!qword_25565B308)
  {
    result = MEMORY[0x22766BAC4](&unk_221309DC4, &_s48SubscriptionStoreControlPropertiesEnvironmentKeyON);
    atomic_store(result, (unint64_t *)&qword_25565B308);
  }
  return result;
}

unint64_t sub_2210CEF20()
{
  unint64_t result;

  result = qword_25565B310;
  if (!qword_25565B310)
  {
    result = MEMORY[0x22766BAC4](&unk_221315730, &_s61SubscriptionPickerOptionBackgroundConfigurationEnvironmentKeyON);
    atomic_store(result, (unint64_t *)&qword_25565B310);
  }
  return result;
}

unint64_t sub_2210CEF5C()
{
  unint64_t result;

  result = qword_25565B318;
  if (!qword_25565B318)
  {
    result = MEMORY[0x22766BAC4](&unk_221319CDC, &_s25ButtonLabelEnvironmentKeyON);
    atomic_store(result, (unint64_t *)&qword_25565B318);
  }
  return result;
}

unint64_t sub_2210CEF98()
{
  unint64_t result;

  result = qword_25565B320;
  if (!qword_25565B320)
  {
    result = MEMORY[0x22766BAC4](&unk_22131793C, &_s42ProductDescriptionVisibilityEnvironmentKeyON);
    atomic_store(result, (unint64_t *)&qword_25565B320);
  }
  return result;
}

uint64_t sub_2210CEFD4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2210CEFF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2210CE2EC(a1, *(void (**)(uint64_t))(v2 + 48), *(_QWORD *)(v2 + 24), a2);
}

uint64_t *sub_2210CF008(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = sub_2212F4944();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v11 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v11, 1, v7))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v7);
    }
    v16 = *(int *)(a3 + 20);
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
  }
  swift_retain();
  return a1;
}

uint64_t sub_2210CF178(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
  {
    v3 = sub_2212F4944();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  v4 = a1
     + *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v2))
  {
    v5 = sub_2212F4944();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return swift_release();
}

char *sub_2210CF228(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v9 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v17;
  swift_retain();
  return a1;
}

char *sub_2210CF370(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2210CD558();
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  v23 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(a1, a2, v23);
LABEL_7:
  v11 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    if (!v15)
    {
      v24 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v12, v13, v24);
      goto LABEL_13;
    }
    sub_2210CD558();
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  v16 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v12, v13, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
LABEL_13:
  v18 = *(int *)(a3 + 20);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_2210CF56C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v9 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_2210CF6A8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2210CD558();
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  v19 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(a1, a2, v19);
LABEL_7:
  v11 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    if (!v15)
    {
      v20 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v12, v13, v20);
      goto LABEL_13;
    }
    sub_2210CD558();
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  v16 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v12, v13, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
LABEL_13:
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  swift_release();
  return a1;
}

uint64_t sub_2210CF898()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2210CF8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = OUTLINED_FUNCTION_42_5();
  v7 = type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(v6);
  if (*(_DWORD *)(*(_QWORD *)(v7 - 8) + 84) == (_DWORD)a2)
  {
    OUTLINED_FUNCTION_4_0(v3, a2, v7);
  }
  else
  {
    OUTLINED_FUNCTION_35(*(_QWORD *)(v3 + *(int *)(a3 + 20)));
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t sub_2210CF8FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2210CF908()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = OUTLINED_FUNCTION_38_5();
  if (*(_DWORD *)(*(_QWORD *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(v4)
                             - 8)
                 + 84) == v3)
  {
    v5 = OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_3_1(v5, v6, v7, v8);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
    OUTLINED_FUNCTION_17_0();
  }
}

void sub_2210CF950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210D0360(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews);
}

ValueMetadata *_s33SubscriptionOptionGroupContextKeyOMa()
{
  return &_s33SubscriptionOptionGroupContextKeyON;
}

ValueMetadata *_s44SubscriptionStoreContentEnvironmentBridgeKeyOMa()
{
  return &_s44SubscriptionStoreContentEnvironmentBridgeKeyON;
}

uint64_t *sub_2210CF988(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unsigned __int8 v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = sub_2212F4944();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v11 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v11, 1, v7))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v7);
    }
    v16 = *(int *)(a3 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *(_QWORD *)v18;
    v20 = v18[8];
    j__swift_bridgeObjectRetain(*(_QWORD *)v18, v20);
    *(_QWORD *)v17 = v19;
    v17[8] = v20;
  }
  return a1;
}

uint64_t sub_2210CFB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    v5 = sub_2212F4944();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  v6 = a1 + *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v4))
  {
    v7 = sub_2212F4944();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return j__swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(unsigned __int8 *)(a1 + *(int *)(a2 + 20) + 8));
}

char *sub_2210CFBC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  unsigned __int8 v18;

  v6 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v9 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *(_QWORD *)v16;
  v18 = v16[8];
  j__swift_bridgeObjectRetain(*(_QWORD *)v16, v18);
  *(_QWORD *)v15 = v17;
  v15[8] = v18;
  return a1;
}

char *sub_2210CFD18(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2210CD558();
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  v26 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(a1, a2, v26);
LABEL_7:
  v11 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    if (!v15)
    {
      v27 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v12, v13, v27);
      goto LABEL_13;
    }
    sub_2210CD558();
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  v16 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v12, v13, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
LABEL_13:
  v18 = *(int *)(a3 + 20);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *(_QWORD *)v20;
  v22 = v20[8];
  j__swift_bridgeObjectRetain(*(_QWORD *)v20, v22);
  v23 = *(_QWORD *)v19;
  v24 = v19[8];
  *(_QWORD *)v19 = v21;
  v19[8] = v22;
  j__swift_bridgeObjectRelease(v23, v24);
  return a1;
}

char *sub_2210CFF24(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v6 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v9 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  return a1;
}

char *sub_2210D0070(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_2210CD558();
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  v25 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(a1, a2, v25);
LABEL_7:
  v11 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    if (!v15)
    {
      v26 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v12, v13, v26);
      goto LABEL_13;
    }
    sub_2210CD558();
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  v16 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v12, v13, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
LABEL_13:
  v18 = *(int *)(a3 + 20);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *(_QWORD *)v20;
  LOBYTE(v20) = v20[8];
  v22 = *(_QWORD *)v19;
  v23 = v19[8];
  *(_QWORD *)v19 = v21;
  v19[8] = (char)v20;
  j__swift_bridgeObjectRelease(v22, v23);
  return a1;
}

uint64_t sub_2210D0270()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2210D027C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = OUTLINED_FUNCTION_42_5();
  v5 = type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(v4);
  if (*(_DWORD *)(*(_QWORD *)(v5 - 8) + 84) == (_DWORD)a2)
    OUTLINED_FUNCTION_4_0(v2, a2, v5);
  else
    OUTLINED_FUNCTION_17_0();
}

uint64_t sub_2210D02E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2210D02EC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = OUTLINED_FUNCTION_38_5();
  if (*(_DWORD *)(*(_QWORD *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(v4) - 8)
                 + 84) == v3)
  {
    v5 = OUTLINED_FUNCTION_18();
    OUTLINED_FUNCTION_3_1(v5, v6, v7, v8);
  }
  else
  {
    *(_BYTE *)(v1 + *(int *)(v2 + 20) + 8) = -v0;
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_25565B420);
}

void sub_2210D034C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2210D0360(a1, a2, a3, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews);
}

void sub_2210D0360(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unint64_t v4;

  a4(319);
  if (v4 <= 0x3F)
    OUTLINED_FUNCTION_30_10();
  OUTLINED_FUNCTION_50_2();
}

uint64_t *sub_2210D03B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  unsigned __int8 v31;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        v11 = sub_2212F4944();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      }
      v12 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v12, 1, v6))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v21 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v13, v14, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v6);
      }
      v22 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Context.SectionContext(0) + 20);
      v23 = (uint64_t *)((char *)a1 + v22);
      v24 = (uint64_t *)((char *)a2 + v22);
      v25 = v24[1];
      *v23 = *v24;
      v23[1] = v25;
      swift_retain();
    }
    else
    {
      v9 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v9))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        v16 = sub_2212F4944();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v9);
      }
      v17 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v17, 1, v9))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v26 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v18, v19, v26);
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v9);
      }
      v27 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext(0) + 20);
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v30 = *(_QWORD *)v29;
      v31 = v29[8];
      j__swift_bridgeObjectRetain(*(_QWORD *)v29, v31);
      *(_QWORD *)v28 = v30;
      v28[8] = v31;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2210D068C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
    if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
    {
      v3 = sub_2212F4944();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    }
    v4 = a1
       + *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
    if (!__swift_getEnumTagSinglePayload(v4, 1, v2))
    {
      v5 = sub_2212F4944();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    }
    type metadata accessor for SubscriptionStoreContentConfiguration.Context.SectionContext(0);
    return swift_release();
  }
  else
  {
    v7 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
    if (!__swift_getEnumTagSinglePayload(a1, 1, v7))
    {
      v8 = sub_2212F4944();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
    }
    v9 = a1 + *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
    if (!__swift_getEnumTagSinglePayload(v9, 1, v7))
    {
      v10 = sub_2212F4944();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    }
    v11 = a1 + *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext(0) + 20);
    return j__swift_bridgeObjectRelease(*(_QWORD *)v11, *(unsigned __int8 *)(v11 + 8));
  }
}

char *sub_2210D07F0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  unsigned __int8 v28;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
    else
    {
      v8 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
    }
    v9 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v4))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v18 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v11, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v4);
    }
    v19 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Context.SectionContext(0) + 20);
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    swift_retain();
  }
  else
  {
    v6 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      v13 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    }
    v14 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
    v15 = &a1[v14];
    v16 = &a2[v14];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v14], 1, v6))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v23 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v15, v16, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v6);
    }
    v24 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext(0) + 20);
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = *(_QWORD *)v26;
    v28 = v26[8];
    j__swift_bridgeObjectRetain(*(_QWORD *)v26, v28);
    *(_QWORD *)v25 = v27;
    v25[8] = v28;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_2210D0A94(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  unsigned __int8 v28;

  if (a1 != a2)
  {
    sub_2210CD558();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
      {
        v5 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      }
      else
      {
        v8 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      }
      v9 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
      v10 = &a1[v9];
      v11 = &a2[v9];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v4))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v18 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v11, v18);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v4);
      }
      v19 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Context.SectionContext(0) + 20);
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      swift_retain();
    }
    else
    {
      v6 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        v13 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      }
      v14 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
      v15 = &a1[v14];
      v16 = &a2[v14];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v14], 1, v6))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v23 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v15, v16, v23);
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v6);
      }
      v24 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext(0) + 20);
      v25 = &a1[v24];
      v26 = &a2[v24];
      v27 = *(_QWORD *)v26;
      v28 = v26[8];
      j__swift_bridgeObjectRetain(*(_QWORD *)v26, v28);
      *(_QWORD *)v25 = v27;
      v25[8] = v28;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for SubscriptionStoreContentConfiguration.Context(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_25565B4C8);
}

char *sub_2210D0D64(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
    {
      v5 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
    }
    else
    {
      v8 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
    }
    v9 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
    v10 = &a1[v9];
    v11 = &a2[v9];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v4))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v18 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v10, v11, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v4);
    }
    v19 = type metadata accessor for SubscriptionStoreContentConfiguration.Context.SectionContext(0);
    *(_OWORD *)&a1[*(int *)(v19 + 20)] = *(_OWORD *)&a2[*(int *)(v19 + 20)];
  }
  else
  {
    v6 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      v13 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    }
    v14 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
    v15 = &a1[v14];
    v16 = &a2[v14];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v14], 1, v6))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v20 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v15, v16, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v6);
    }
    v21 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext(0) + 20);
    v22 = &a1[v21];
    v23 = &a2[v21];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_2210D0FF0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  if (a1 != a2)
  {
    sub_2210CD558();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
      {
        v5 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      }
      else
      {
        v8 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      }
      v9 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
      v10 = &a1[v9];
      v11 = &a2[v9];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v4))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v18 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v10, v11, v18);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v4);
      }
      v19 = type metadata accessor for SubscriptionStoreContentConfiguration.Context.SectionContext(0);
      *(_OWORD *)&a1[*(int *)(v19 + 20)] = *(_OWORD *)&a2[*(int *)(v19 + 20)];
    }
    else
    {
      v6 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        v13 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      }
      v14 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0) + 20);
      v15 = &a1[v14];
      v16 = &a2[v14];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v14], 1, v6))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v20 = sub_2212F4944();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v15, v16, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v6);
      }
      v21 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext(0) + 20);
      v22 = &a1[v21];
      v23 = &a2[v21];
      *(_QWORD *)v22 = *(_QWORD *)v23;
      v22[8] = v23[8];
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2210D12A0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SubscriptionStoreContentConfiguration.Context.GroupContext(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SubscriptionStoreContentConfiguration.Context.SectionContext(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SubscriptionStoreContentConfiguration.Content(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  j__swift_bridgeObjectRetain(*a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for SubscriptionStoreContentConfiguration.Content(uint64_t a1)
{
  return j__swift_bridgeObjectRelease(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *assignWithCopy for SubscriptionStoreContentConfiguration.Content(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  j__swift_bridgeObjectRetain(*a2, v4);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_bridgeObjectRelease(v5, v6);
  return a1;
}

uint64_t *assignWithTake for SubscriptionStoreContentConfiguration.Content(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_bridgeObjectRelease(v5, v6);
  return a1;
}

uint64_t sub_2210D1400(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_2210D1408(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStoreContentConfiguration.Content()
{
  return &type metadata for SubscriptionStoreContentConfiguration.Content;
}

_QWORD *sub_2210D1424(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v10, v11, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    v16 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
    v17 = &v10[v16];
    v18 = &v11[v16];
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v12))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t sub_2210D15BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    v6 = sub_2212F4944();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  v7 = v4
     + *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
  result = __swift_getEnumTagSinglePayload(v7, 1, v5);
  if (!(_DWORD)result)
  {
    v9 = sub_2212F4944();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  return result;
}

uint64_t sub_2210D1674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  v14 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
  v15 = &v9[v14];
  v16 = &v10[v14];
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v11))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v11);
  }
  return a1;
}

uint64_t *sub_2210D17D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      v13 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_2210CD558();
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v23 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v8, v9, v23);
LABEL_7:
  v15 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
  v16 = &v8[v15];
  v17 = &v9[v15];
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v10);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v10);
  if (!v18)
  {
    if (!v19)
    {
      v24 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v16, v17, v24);
      return a1;
    }
    sub_2210CD558();
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  v20 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v16, v17, v20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v10);
  return a1;
}

uint64_t sub_2210D19D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 24);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  v8 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v6, v7, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  v11 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
  v12 = &v6[v11];
  v13 = &v7[v11];
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = sub_2212F4944();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_2210D1B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  v7 = *(int *)(a3 + 24);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for SubscriptionOptionSectionAccessorySubview();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      v13 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_2210CD558();
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v23 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v8, v9, v23);
LABEL_7:
  v15 = *(int *)(type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0) + 20);
  v16 = &v8[v15];
  v17 = &v9[v15];
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v10);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v10);
  if (!v18)
  {
    if (!v19)
    {
      v24 = sub_2212F4944();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v16, v17, v24);
      return a1;
    }
    sub_2210CD558();
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(qword_2556561A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  v20 = sub_2212F4944();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v16, v17, v20);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v10);
  return a1;
}

uint64_t sub_2210D1D14()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2210D1D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_35(*(_QWORD *)(a1 + 24));
    OUTLINED_FUNCTION_17_0();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_47_4();
    OUTLINED_FUNCTION_4_0(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t sub_2210D1D74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2210D1D80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_33();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    OUTLINED_FUNCTION_17_0();
  }
  else
  {
    v4 = v2;
    v5 = OUTLINED_FUNCTION_47_4();
    OUTLINED_FUNCTION_3_1(v1 + *(int *)(v4 + 24), v0, v0, v5);
  }
}

uint64_t type metadata accessor for SubscriptionStoreContentConfiguration.Section(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_25565B558);
}

uint64_t sub_2210D1DE0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2210D1E64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25565B598;
  if (!qword_25565B598)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_25565B330);
    v2[0] = sub_2210D1EC8();
    v2[1] = v2[0];
    result = MEMORY[0x22766BAC4](&unk_221316F10, v1, v2);
    atomic_store(result, (unint64_t *)&qword_25565B598);
  }
  return result;
}

unint64_t sub_2210D1EC8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25565B5A0;
  if (!qword_25565B5A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565B328);
    v2 = sub_2210D1F2C();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25565B5A0);
  }
  return result;
}

unint64_t sub_2210D1F2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25565A7E0;
  if (!qword_25565A7E0)
  {
    v1 = sub_2212F492C();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDF4B40], v1);
    atomic_store(result, (unint64_t *)&qword_25565A7E0);
  }
  return result;
}

_QWORD *sub_2210D1F6C(_QWORD *a1)
{
  destroy for ApplyEnvironmentBridgeModifier(a1);
  return a1;
}

unint64_t destroy for ApplyEnvironmentBridgeModifier(_QWORD *a1)
{
  unint64_t result;

  result = a1[1];
  if (result)
  {
    swift_release();
    if (a1[5] >= 6uLL)
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 2));
    if (a1[10])
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 7));
    if (a1[15])
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 12));
    if (a1[20])
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 17));
    if (a1[25])
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 22));
    if (a1[31] >= 3uLL)
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 28));
    result = a1[35];
    if (result >= 4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = a1[39];
      if (result)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

char *initializeWithCopy for ApplyEnvironmentBridgeModifier(char *__dst, char *__src)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  __int128 v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  _OWORD *v29;
  _OWORD *v30;
  unint64_t v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;

  v4 = *((_QWORD *)__src + 1);
  if (v4)
  {
    *__dst = *__src;
    *((_QWORD *)__dst + 1) = v4;
    v5 = __src + 16;
    v6 = *((_QWORD *)__src + 5);
    swift_retain();
    if (v6 >= 6)
    {
      v8 = *((_QWORD *)__src + 6);
      *((_QWORD *)__dst + 5) = v6;
      *((_QWORD *)__dst + 6) = v8;
      (**(void (***)(char *, char *, unint64_t))(v6 - 8))(__dst + 16, __src + 16, v6);
    }
    else
    {
      v7 = *((_OWORD *)__src + 2);
      *((_OWORD *)__dst + 1) = *v5;
      *((_OWORD *)__dst + 2) = v7;
      *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
    }
    v9 = __dst + 56;
    v10 = __src + 56;
    v11 = *((_QWORD *)__src + 10);
    if (v11)
    {
      v12 = *((_QWORD *)__src + 11);
      *((_QWORD *)__dst + 10) = v11;
      *((_QWORD *)__dst + 11) = v12;
      (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
    }
    else
    {
      v13 = *(_OWORD *)(__src + 72);
      *v9 = *v10;
      *(_OWORD *)(__dst + 72) = v13;
      *((_QWORD *)__dst + 11) = *((_QWORD *)__src + 11);
    }
    v14 = __dst + 96;
    v15 = __src + 96;
    v16 = *((_QWORD *)__src + 15);
    if (v16)
    {
      v17 = *((_QWORD *)__src + 16);
      *((_QWORD *)__dst + 15) = v16;
      *((_QWORD *)__dst + 16) = v17;
      (**(void (***)(_OWORD *, _OWORD *))(v16 - 8))(v14, v15);
    }
    else
    {
      v18 = *((_OWORD *)__src + 7);
      *v14 = *v15;
      *((_OWORD *)__dst + 7) = v18;
      *((_QWORD *)__dst + 16) = *((_QWORD *)__src + 16);
    }
    v19 = __dst + 136;
    v20 = __src + 136;
    v21 = *((_QWORD *)__src + 20);
    if (v21)
    {
      v22 = *((_QWORD *)__src + 21);
      *((_QWORD *)__dst + 20) = v21;
      *((_QWORD *)__dst + 21) = v22;
      (**(void (***)(_OWORD *, _OWORD *))(v21 - 8))(v19, v20);
    }
    else
    {
      v23 = *(_OWORD *)(__src + 152);
      *v19 = *v20;
      *(_OWORD *)(__dst + 152) = v23;
      *((_QWORD *)__dst + 21) = *((_QWORD *)__src + 21);
    }
    v24 = __dst + 176;
    v25 = __src + 176;
    v26 = *((_QWORD *)__src + 25);
    if (v26)
    {
      v27 = *((_QWORD *)__src + 26);
      *((_QWORD *)__dst + 25) = v26;
      *((_QWORD *)__dst + 26) = v27;
      (**(void (***)(_OWORD *, _OWORD *))(v26 - 8))(v24, v25);
      *((_QWORD *)__dst + 27) = *((_QWORD *)__src + 27);
    }
    else
    {
      v28 = *((_OWORD *)__src + 12);
      *v24 = *v25;
      *((_OWORD *)__dst + 12) = v28;
      *((_OWORD *)__dst + 13) = *((_OWORD *)__src + 13);
    }
    v29 = __dst + 224;
    v30 = __src + 224;
    v31 = *((_QWORD *)__src + 31);
    if (v31 >= 3)
    {
      v33 = *((_QWORD *)__src + 32);
      *((_QWORD *)__dst + 31) = v31;
      *((_QWORD *)__dst + 32) = v33;
      (**(void (***)(_OWORD *, _OWORD *))(v31 - 8))(v29, v30);
    }
    else
    {
      v32 = *((_OWORD *)__src + 15);
      *v29 = *v30;
      *((_OWORD *)__dst + 15) = v32;
      *((_QWORD *)__dst + 32) = *((_QWORD *)__src + 32);
    }
    __dst[264] = __src[264];
    v34 = *((_QWORD *)__src + 35);
    if (v34 >= 4)
    {
      *((_QWORD *)__dst + 34) = *((_QWORD *)__src + 34);
      *((_QWORD *)__dst + 35) = v34;
      __dst[288] = __src[288];
      *((_QWORD *)__dst + 37) = *((_QWORD *)__src + 37);
      v37 = *((_QWORD *)__src + 39);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v37)
      {
        *((_QWORD *)__dst + 38) = *((_QWORD *)__src + 38);
        *((_QWORD *)__dst + 39) = v37;
        __dst[320] = __src[320];
        *((_QWORD *)__dst + 41) = *((_QWORD *)__src + 41);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v38 = *((_OWORD *)__src + 20);
        *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
        *((_OWORD *)__dst + 20) = v38;
      }
    }
    else
    {
      v35 = *((_OWORD *)__src + 18);
      *((_OWORD *)__dst + 17) = *((_OWORD *)__src + 17);
      *((_OWORD *)__dst + 18) = v35;
      v36 = *((_OWORD *)__src + 20);
      *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
      *((_OWORD *)__dst + 20) = v36;
    }
    *((_WORD *)__dst + 168) = *((_WORD *)__src + 168);
    __dst[342] = __src[342];
    *(_DWORD *)(__dst + 338) = *(_DWORD *)(__src + 338);
  }
  else
  {
    memcpy(__dst, __src, 0x157uLL);
  }
  return __dst;
}

char *assignWithCopy for ApplyEnvironmentBridgeModifier(char *__dst, char *__src)
{
  uint64_t v4;
  unint64_t v5;
  _OWORD *v6;
  __int128 *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _OWORD *v32;
  __int128 *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  _OWORD *v37;
  __int128 *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  _OWORD *v42;
  __int128 *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  _OWORD *v47;
  __int128 *v48;
  unint64_t v49;
  __int128 v50;
  __int128 v51;
  char *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  unint64_t v59;
  __int128 v60;
  __int128 v61;
  char *v62;
  __int128 *v63;
  unint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  _OWORD *v73;
  uint64_t v74;
  int v75;
  __int128 v76;

  v4 = *((_QWORD *)__src + 1);
  if (*((_QWORD *)__dst + 1))
  {
    if (v4)
    {
      *__dst = *__src;
      *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
      swift_retain();
      swift_release();
      v5 = *((_QWORD *)__src + 5);
      if (*((_QWORD *)__dst + 5) >= 6uLL)
      {
        if (v5 >= 6)
        {
          __swift_assign_boxed_opaque_existential_1((uint64_t *)__dst + 2, (uint64_t *)__src + 2);
LABEL_18:
          v16 = *((_QWORD *)__src + 10);
          if (*((_QWORD *)__dst + 10))
          {
            if (v16)
            {
              __swift_assign_boxed_opaque_existential_1((uint64_t *)__dst + 7, (uint64_t *)__src + 7);
              goto LABEL_25;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 56));
          }
          else if (v16)
          {
            *((_QWORD *)__dst + 10) = v16;
            *((_QWORD *)__dst + 11) = *((_QWORD *)__src + 11);
            (**(void (***)(char *, char *))(v16 - 8))(__dst + 56, __src + 56);
            goto LABEL_25;
          }
          v17 = *(_OWORD *)(__src + 56);
          v18 = *(_OWORD *)(__src + 72);
          *((_QWORD *)__dst + 11) = *((_QWORD *)__src + 11);
          *(_OWORD *)(__dst + 56) = v17;
          *(_OWORD *)(__dst + 72) = v18;
LABEL_25:
          v19 = *((_QWORD *)__src + 15);
          if (*((_QWORD *)__dst + 15))
          {
            if (v19)
            {
              __swift_assign_boxed_opaque_existential_1((uint64_t *)__dst + 12, (uint64_t *)__src + 12);
              goto LABEL_32;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 96));
          }
          else if (v19)
          {
            *((_QWORD *)__dst + 15) = v19;
            *((_QWORD *)__dst + 16) = *((_QWORD *)__src + 16);
            (**(void (***)(char *, char *))(v19 - 8))(__dst + 96, __src + 96);
            goto LABEL_32;
          }
          v20 = *((_OWORD *)__src + 6);
          v21 = *((_OWORD *)__src + 7);
          *((_QWORD *)__dst + 16) = *((_QWORD *)__src + 16);
          *((_OWORD *)__dst + 6) = v20;
          *((_OWORD *)__dst + 7) = v21;
LABEL_32:
          v22 = *((_QWORD *)__src + 20);
          if (*((_QWORD *)__dst + 20))
          {
            if (v22)
            {
              __swift_assign_boxed_opaque_existential_1((uint64_t *)__dst + 17, (uint64_t *)__src + 17);
              goto LABEL_39;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 136));
          }
          else if (v22)
          {
            *((_QWORD *)__dst + 20) = v22;
            *((_QWORD *)__dst + 21) = *((_QWORD *)__src + 21);
            (**(void (***)(char *, char *))(v22 - 8))(__dst + 136, __src + 136);
            goto LABEL_39;
          }
          v23 = *(_OWORD *)(__src + 136);
          v24 = *(_OWORD *)(__src + 152);
          *((_QWORD *)__dst + 21) = *((_QWORD *)__src + 21);
          *(_OWORD *)(__dst + 136) = v23;
          *(_OWORD *)(__dst + 152) = v24;
LABEL_39:
          v25 = __dst + 176;
          v26 = __src + 176;
          v27 = *((_QWORD *)__src + 25);
          if (*((_QWORD *)__dst + 25))
          {
            if (v27)
            {
              __swift_assign_boxed_opaque_existential_1((uint64_t *)__dst + 22, (uint64_t *)__src + 22);
              *((_QWORD *)__dst + 27) = *((_QWORD *)__src + 27);
            }
            else
            {
              sub_221014F5C((uint64_t)(__dst + 176), &qword_255659A20);
              v29 = *((_OWORD *)__src + 12);
              v28 = *((_OWORD *)__src + 13);
              *v25 = *v26;
              *((_OWORD *)__dst + 12) = v29;
              *((_OWORD *)__dst + 13) = v28;
            }
          }
          else if (v27)
          {
            *((_QWORD *)__dst + 25) = v27;
            *((_QWORD *)__dst + 26) = *((_QWORD *)__src + 26);
            (**(void (***)(char *, char *))(v27 - 8))(__dst + 176, __src + 176);
            *((_QWORD *)__dst + 27) = *((_QWORD *)__src + 27);
          }
          else
          {
            v57 = *v26;
            v58 = *((_OWORD *)__src + 13);
            *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
            *((_OWORD *)__dst + 13) = v58;
            *v25 = v57;
          }
          v59 = *((_QWORD *)__src + 31);
          if (*((_QWORD *)__dst + 31) >= 3uLL)
          {
            if (v59 >= 3)
            {
              __swift_assign_boxed_opaque_existential_1((uint64_t *)__dst + 28, (uint64_t *)__src + 28);
LABEL_70:
              __dst[264] = __src[264];
              v62 = __dst + 272;
              v63 = (__int128 *)(__src + 272);
              v64 = *((_QWORD *)__src + 35);
              if (*((_QWORD *)__dst + 35) >= 4uLL)
              {
                if (v64 < 4)
                {
                  sub_221014F5C((uint64_t)(__dst + 272), qword_255659A28);
                  v68 = *((_OWORD *)__src + 20);
                  v70 = *v63;
                  v69 = *((_OWORD *)__src + 18);
                  *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
                  *((_OWORD *)__dst + 20) = v68;
                  *(_OWORD *)v62 = v70;
                  *((_OWORD *)__dst + 18) = v69;
                  goto LABEL_87;
                }
                *((_QWORD *)__dst + 34) = *((_QWORD *)__src + 34);
                *((_QWORD *)__dst + 35) = *((_QWORD *)__src + 35);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                __dst[288] = __src[288];
                *((_QWORD *)__dst + 37) = *((_QWORD *)__src + 37);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v62 = __dst + 304;
                v73 = __src + 304;
                v74 = *((_QWORD *)__src + 39);
                if (*((_QWORD *)__dst + 39))
                {
                  if (v74)
                  {
                    *((_QWORD *)__dst + 38) = *((_QWORD *)__src + 38);
                    *((_QWORD *)__dst + 39) = *((_QWORD *)__src + 39);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    __dst[320] = __src[320];
                    *((_QWORD *)__dst + 41) = *((_QWORD *)__src + 41);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_2210A3354((uint64_t)(__dst + 304));
                    v76 = *((_OWORD *)__src + 20);
                    *(_OWORD *)v62 = *v73;
                    *((_OWORD *)__dst + 20) = v76;
                  }
                  goto LABEL_87;
                }
                if (!v74)
                {
                  v65 = *v73;
                  v66 = *((_OWORD *)__src + 20);
                  goto LABEL_73;
                }
              }
              else
              {
                if (v64 < 4)
                {
                  v65 = *v63;
                  v66 = *((_OWORD *)__src + 18);
                  v67 = *((_OWORD *)__src + 20);
                  *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
                  *((_OWORD *)__dst + 20) = v67;
LABEL_73:
                  *(_OWORD *)v62 = v65;
                  *((_OWORD *)v62 + 1) = v66;
LABEL_87:
                  __dst[336] = __src[336];
                  __dst[337] = __src[337];
                  __dst[338] = __src[338];
                  __dst[339] = __src[339];
                  __dst[340] = __src[340];
                  __dst[341] = __src[341];
                  __dst[342] = __src[342];
                  return __dst;
                }
                *((_QWORD *)__dst + 34) = *((_QWORD *)__src + 34);
                *((_QWORD *)__dst + 35) = *((_QWORD *)__src + 35);
                __dst[288] = __src[288];
                *((_QWORD *)__dst + 37) = *((_QWORD *)__src + 37);
                v71 = *((_QWORD *)__src + 39);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (!v71)
                {
                  v72 = *((_OWORD *)__src + 20);
                  *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
                  *((_OWORD *)__dst + 20) = v72;
                  goto LABEL_87;
                }
              }
              *((_QWORD *)__dst + 38) = *((_QWORD *)__src + 38);
              *((_QWORD *)__dst + 39) = *((_QWORD *)__src + 39);
              __dst[320] = __src[320];
              *((_QWORD *)__dst + 41) = *((_QWORD *)__src + 41);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_87;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 224));
          }
          else if (v59 >= 3)
          {
            *((_QWORD *)__dst + 31) = v59;
            *((_QWORD *)__dst + 32) = *((_QWORD *)__src + 32);
            (**(void (***)(char *, char *))(v59 - 8))(__dst + 224, __src + 224);
            goto LABEL_70;
          }
          v60 = *((_OWORD *)__src + 14);
          v61 = *((_OWORD *)__src + 15);
          *((_QWORD *)__dst + 32) = *((_QWORD *)__src + 32);
          *((_OWORD *)__dst + 14) = v60;
          *((_OWORD *)__dst + 15) = v61;
          goto LABEL_70;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 16));
      }
      else if (v5 >= 6)
      {
        *((_QWORD *)__dst + 5) = v5;
        *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
        (**(void (***)(char *, char *))(v5 - 8))(__dst + 16, __src + 16);
        goto LABEL_18;
      }
      v11 = *((_OWORD *)__src + 1);
      v12 = *((_OWORD *)__src + 2);
      *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
      *((_OWORD *)__dst + 1) = v11;
      *((_OWORD *)__dst + 2) = v12;
      goto LABEL_18;
    }
    sub_221069B54(__dst);
    goto LABEL_10;
  }
  if (v4)
  {
    *__dst = *__src;
    *((_QWORD *)__dst + 1) = *((_QWORD *)__src + 1);
    v6 = __dst + 16;
    v7 = (__int128 *)(__src + 16);
    v8 = *((_QWORD *)__src + 5);
    swift_retain();
    if (v8 >= 6)
    {
      *((_QWORD *)__dst + 5) = v8;
      *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
      (**(void (***)(char *, char *, unint64_t))(v8 - 8))(__dst + 16, __src + 16, v8);
    }
    else
    {
      v9 = *v7;
      v10 = *((_OWORD *)__src + 2);
      *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
      *v6 = v9;
      *((_OWORD *)__dst + 2) = v10;
    }
    v13 = __dst + 56;
    v14 = (__int128 *)(__src + 56);
    v15 = *((_QWORD *)__src + 10);
    if (v15)
    {
      *((_QWORD *)__dst + 10) = v15;
      *((_QWORD *)__dst + 11) = *((_QWORD *)__src + 11);
      (**(void (***)(_OWORD *, __int128 *))(v15 - 8))(v13, v14);
    }
    else
    {
      v30 = *v14;
      v31 = *(_OWORD *)(__src + 72);
      *((_QWORD *)__dst + 11) = *((_QWORD *)__src + 11);
      *v13 = v30;
      *(_OWORD *)(__dst + 72) = v31;
    }
    v32 = __dst + 96;
    v33 = (__int128 *)(__src + 96);
    v34 = *((_QWORD *)__src + 15);
    if (v34)
    {
      *((_QWORD *)__dst + 15) = v34;
      *((_QWORD *)__dst + 16) = *((_QWORD *)__src + 16);
      (**(void (***)(_OWORD *, __int128 *))(v34 - 8))(v32, v33);
    }
    else
    {
      v35 = *v33;
      v36 = *((_OWORD *)__src + 7);
      *((_QWORD *)__dst + 16) = *((_QWORD *)__src + 16);
      *v32 = v35;
      *((_OWORD *)__dst + 7) = v36;
    }
    v37 = __dst + 136;
    v38 = (__int128 *)(__src + 136);
    v39 = *((_QWORD *)__src + 20);
    if (v39)
    {
      *((_QWORD *)__dst + 20) = v39;
      *((_QWORD *)__dst + 21) = *((_QWORD *)__src + 21);
      (**(void (***)(_OWORD *, __int128 *))(v39 - 8))(v37, v38);
    }
    else
    {
      v40 = *v38;
      v41 = *(_OWORD *)(__src + 152);
      *((_QWORD *)__dst + 21) = *((_QWORD *)__src + 21);
      *v37 = v40;
      *(_OWORD *)(__dst + 152) = v41;
    }
    v42 = __dst + 176;
    v43 = (__int128 *)(__src + 176);
    v44 = *((_QWORD *)__src + 25);
    if (v44)
    {
      *((_QWORD *)__dst + 25) = v44;
      *((_QWORD *)__dst + 26) = *((_QWORD *)__src + 26);
      (**(void (***)(_OWORD *, __int128 *))(v44 - 8))(v42, v43);
      *((_QWORD *)__dst + 27) = *((_QWORD *)__src + 27);
    }
    else
    {
      v45 = *v43;
      v46 = *((_OWORD *)__src + 13);
      *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
      *((_OWORD *)__dst + 13) = v46;
      *v42 = v45;
    }
    v47 = __dst + 224;
    v48 = (__int128 *)(__src + 224);
    v49 = *((_QWORD *)__src + 31);
    if (v49 >= 3)
    {
      *((_QWORD *)__dst + 31) = v49;
      *((_QWORD *)__dst + 32) = *((_QWORD *)__src + 32);
      (**(void (***)(_OWORD *, __int128 *))(v49 - 8))(v47, v48);
    }
    else
    {
      v50 = *v48;
      v51 = *((_OWORD *)__src + 15);
      *((_QWORD *)__dst + 32) = *((_QWORD *)__src + 32);
      *v47 = v50;
      *((_OWORD *)__dst + 15) = v51;
    }
    __dst[264] = __src[264];
    if (*((_QWORD *)__src + 35) >= 4uLL)
    {
      *((_QWORD *)__dst + 34) = *((_QWORD *)__src + 34);
      *((_QWORD *)__dst + 35) = *((_QWORD *)__src + 35);
      __dst[288] = __src[288];
      *((_QWORD *)__dst + 37) = *((_QWORD *)__src + 37);
      v56 = *((_QWORD *)__src + 39);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v56)
      {
        *((_QWORD *)__dst + 38) = *((_QWORD *)__src + 38);
        *((_QWORD *)__dst + 39) = *((_QWORD *)__src + 39);
        __dst[320] = __src[320];
        *((_QWORD *)__dst + 41) = *((_QWORD *)__src + 41);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_83:
        __dst[336] = __src[336];
        __dst[337] = __src[337];
        v75 = *(_DWORD *)(__src + 338);
        __dst[342] = __src[342];
        *(_DWORD *)(__dst + 338) = v75;
        return __dst;
      }
      v52 = __dst + 304;
      v53 = *((_OWORD *)__src + 19);
      v54 = *((_OWORD *)__src + 20);
    }
    else
    {
      v52 = __dst + 272;
      v53 = *((_OWORD *)__src + 17);
      v54 = *((_OWORD *)__src + 18);
      v55 = *((_OWORD *)__src + 20);
      *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
      *((_OWORD *)__dst + 20) = v55;
    }
    *(_OWORD *)v52 = v53;
    *((_OWORD *)v52 + 1) = v54;
    goto LABEL_83;
  }
LABEL_10:
  memcpy(__dst, __src, 0x157uLL);
  return __dst;
}

char *assignWithTake for ApplyEnvironmentBridgeModifier(char *__dst, char *__src)
{
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v19;
  __int128 v20;

  if (*((_QWORD *)__dst + 1))
  {
    v4 = *((_QWORD *)__src + 1);
    if (v4)
    {
      v5 = __src + 16;
      *__dst = *__src;
      *((_QWORD *)__dst + 1) = v4;
      swift_release();
      if (*((_QWORD *)__dst + 5) >= 6uLL)
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 16));
      v6 = *((_OWORD *)__src + 2);
      *((_OWORD *)__dst + 1) = *v5;
      *((_OWORD *)__dst + 2) = v6;
      *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
      if (*((_QWORD *)__dst + 10))
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 56));
      v7 = *(_OWORD *)(__src + 72);
      *(_OWORD *)(__dst + 56) = *(_OWORD *)(__src + 56);
      *(_OWORD *)(__dst + 72) = v7;
      *((_QWORD *)__dst + 11) = *((_QWORD *)__src + 11);
      if (*((_QWORD *)__dst + 15))
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 96));
      v8 = *((_OWORD *)__src + 7);
      *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
      *((_OWORD *)__dst + 7) = v8;
      *((_QWORD *)__dst + 16) = *((_QWORD *)__src + 16);
      if (*((_QWORD *)__dst + 20))
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 136));
      v9 = *(_OWORD *)(__src + 152);
      *(_OWORD *)(__dst + 136) = *(_OWORD *)(__src + 136);
      *(_OWORD *)(__dst + 152) = v9;
      *((_QWORD *)__dst + 21) = *((_QWORD *)__src + 21);
      v10 = __dst + 176;
      v11 = __src + 176;
      if (*((_QWORD *)__dst + 25))
      {
        if (*((_QWORD *)__src + 25))
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 176));
          v12 = *((_OWORD *)__src + 12);
          *v10 = *v11;
          *((_OWORD *)__dst + 12) = v12;
          *((_QWORD *)__dst + 26) = *((_QWORD *)__src + 26);
          *((_QWORD *)__dst + 27) = *((_QWORD *)__src + 27);
          goto LABEL_18;
        }
        sub_221014F5C((uint64_t)(__dst + 176), &qword_255659A20);
      }
      v13 = *((_OWORD *)__src + 12);
      *v10 = *v11;
      *((_OWORD *)__dst + 12) = v13;
      *((_OWORD *)__dst + 13) = *((_OWORD *)__src + 13);
LABEL_18:
      if (*((_QWORD *)__dst + 31) >= 3uLL)
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 224));
      v14 = *((_OWORD *)__src + 15);
      *((_OWORD *)__dst + 14) = *((_OWORD *)__src + 14);
      *((_OWORD *)__dst + 15) = v14;
      *((_QWORD *)__dst + 32) = *((_QWORD *)__src + 32);
      __dst[264] = __src[264];
      if (*((_QWORD *)__dst + 35) >= 4uLL)
      {
        v15 = *((_QWORD *)__src + 35);
        if (v15 >= 4)
        {
          *((_QWORD *)__dst + 34) = *((_QWORD *)__src + 34);
          *((_QWORD *)__dst + 35) = v15;
          swift_bridgeObjectRelease();
          __dst[288] = __src[288];
          *((_QWORD *)__dst + 37) = *((_QWORD *)__src + 37);
          swift_bridgeObjectRelease();
          if (*((_QWORD *)__dst + 39))
          {
            v19 = *((_QWORD *)__src + 39);
            if (v19)
            {
              *((_QWORD *)__dst + 38) = *((_QWORD *)__src + 38);
              *((_QWORD *)__dst + 39) = v19;
              swift_bridgeObjectRelease();
              __dst[320] = __src[320];
              *((_QWORD *)__dst + 41) = *((_QWORD *)__src + 41);
              swift_bridgeObjectRelease();
              goto LABEL_24;
            }
            sub_2210A3354((uint64_t)(__dst + 304));
          }
          v20 = *((_OWORD *)__src + 20);
          *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
          *((_OWORD *)__dst + 20) = v20;
          goto LABEL_24;
        }
        sub_221014F5C((uint64_t)(__dst + 272), qword_255659A28);
      }
      v16 = *((_OWORD *)__src + 18);
      *((_OWORD *)__dst + 17) = *((_OWORD *)__src + 17);
      *((_OWORD *)__dst + 18) = v16;
      v17 = *((_OWORD *)__src + 20);
      *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
      *((_OWORD *)__dst + 20) = v17;
LABEL_24:
      __dst[336] = __src[336];
      *(_DWORD *)(__dst + 337) = *(_DWORD *)(__src + 337);
      *(_WORD *)(__dst + 341) = *(_WORD *)(__src + 341);
      return __dst;
    }
    sub_221069B54(__dst);
  }
  memcpy(__dst, __src, 0x157uLL);
  return __dst;
}

uint64_t getEnumTagSinglePayload for ApplyEnvironmentBridgeModifier(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 343))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplyEnvironmentBridgeModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 328) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 342) = 0;
    *(_WORD *)(result + 340) = 0;
    *(_DWORD *)(result + 336) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 343) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 343) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplyEnvironmentBridgeModifier()
{
  return &type metadata for ApplyEnvironmentBridgeModifier;
}

uint64_t sub_2210D2DE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210D2DFC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[5];
  if (v1)
  {
    if (v1 == 1)
      return swift_deallocObject();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  }
  if (v0[10])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  if (v0[15])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 12));
  if (v0[20])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 17));
  return swift_deallocObject();
}

void sub_2210D2E60(uint64_t a1)
{
  uint64_t v1;

  sub_221253EA4(a1, v1 + 16);
}

uint64_t sub_2210D2E70()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40) >= 4uLL)
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void sub_2210D2EA0(uint64_t a1)
{
  uint64_t v1;

  sub_2210C6FC0(a1, v1 + 16);
}

uint64_t sub_2210D2EB0()
{
  return OUTLINED_FUNCTION_17_6();
}

_BYTE *sub_2210D2EBC(_BYTE *a1)
{
  uint64_t v1;

  return sub_22129D258(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_2210D2ECC()
{
  return OUTLINED_FUNCTION_17_6();
}

uint64_t sub_2210D2ED8(uint64_t a1)
{
  uint64_t v1;

  return sub_2210BF800(a1, *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32));
}

void sub_2210D2EE8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_25_0(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_45_3();
  v5(v4, v3);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210D2F10(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SubscriptionPickerOptionBackgroundConfiguration(a2, a1);
  return a2;
}

unint64_t sub_2210D2F50()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25565B5F8;
  if (!qword_25565B5F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565B5D8);
    v2 = sub_2210D2FD4();
    sub_221017AD4(&qword_25565AAB8, &qword_25565AAB0, MEMORY[0x24BDF1248]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25565B5F8);
  }
  return result;
}

unint64_t sub_2210D2FD4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25565B600;
  if (!qword_25565B600)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565B5D0);
    v2 = sub_2210D3078(&qword_25565B608, &qword_25565B5C8, (uint64_t (*)(void))sub_2210D30E8, (uint64_t (*)(void))sub_2210D330C);
    sub_221017AD4(&qword_25565B670, &qword_25565B678, MEMORY[0x24BDF1248]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25565B600);
  }
  return result;
}

uint64_t sub_2210D3078(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2210D30E8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25565B610;
  if (!qword_25565B610)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565B5C0);
    v2 = sub_2210D316C();
    sub_221017AD4(&qword_25565B658, &qword_25565B660, MEMORY[0x24BDF1248]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25565B610);
  }
  return result;
}

unint64_t sub_2210D316C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25565B618;
  if (!qword_25565B618)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565B5B8);
    v2 = sub_2210D3078(&qword_25565B620, &qword_25565B5B0, (uint64_t (*)(void))sub_2210D3210, (uint64_t (*)(void))sub_2210D32D0);
    sub_221017AD4((unint64_t *)&qword_25565B648, &qword_25565B650, MEMORY[0x24BDF1248]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25565B618);
  }
  return result;
}

unint64_t sub_2210D3210()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25565B628;
  if (!qword_25565B628)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565B5A8);
    sub_221017AD4(&qword_25565B630, &qword_25565B5E0, MEMORY[0x24BDEFB78]);
    v3[0] = v2;
    v3[1] = sub_2210D3294();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25565B628);
  }
  return result;
}

unint64_t sub_2210D3294()
{
  unint64_t result;

  result = qword_25565B638;
  if (!qword_25565B638)
  {
    result = MEMORY[0x22766BAC4](&unk_22130D578, &type metadata for SubscriptionStoreOptionGroupStyleValue);
    atomic_store(result, (unint64_t *)&qword_25565B638);
  }
  return result;
}

unint64_t sub_2210D32D0()
{
  unint64_t result;

  result = qword_25565B640;
  if (!qword_25565B640)
  {
    result = MEMORY[0x22766BAC4](&unk_221309E34, &type metadata for SubscriptionStoreControlPropertiesModifierInternal);
    atomic_store(result, (unint64_t *)&qword_25565B640);
  }
  return result;
}

unint64_t sub_2210D330C()
{
  unint64_t result;

  result = qword_25565B668;
  if (!qword_25565B668)
  {
    result = MEMORY[0x22766BAC4](&unk_221319C48, &type metadata for SubscriptionStoreButtonLabelModifier);
    atomic_store(result, (unint64_t *)&qword_25565B668);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_25(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_getEnumTagSinglePayload(a1, 1, v1);
  return __swift_getEnumTagSinglePayload(v2, 1, v1);
}

uint64_t OUTLINED_FUNCTION_1_24()
{
  return sub_2212F4944();
}

uint64_t OUTLINED_FUNCTION_2_20(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_6_16()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_10_18(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_11_19(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

void *OUTLINED_FUNCTION_13_19(uint64_t a1)
{
  const void *v1;
  void *v2;

  return memcpy(v2, v1, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

void *OUTLINED_FUNCTION_14_16(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_15_15@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_16_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return a4(0);
}

uint64_t OUTLINED_FUNCTION_17_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return a4(0);
}

uint64_t OUTLINED_FUNCTION_18_15()
{
  return type metadata accessor for SubscriptionOptionGroupAccessorySubview();
}

uint64_t OUTLINED_FUNCTION_19_16()
{
  return sub_2212F3798();
}

uint64_t OUTLINED_FUNCTION_22_7()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_25_11(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_26_11(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_29_9()
{
  return sub_2212F588C();
}

uint64_t OUTLINED_FUNCTION_30_10()
{
  return swift_initStructMetadata();
}

uint64_t OUTLINED_FUNCTION_32_7()
{
  return sub_2212F32C4();
}

void OUTLINED_FUNCTION_33_7()
{
  sub_2210CD558();
}

void *OUTLINED_FUNCTION_35_7(uint64_t a1)
{
  const void *v1;
  void *v2;

  return memcpy(v2, v1, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

void *OUTLINED_FUNCTION_36_6(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_38_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_40_3()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_41_3()
{
  sub_2210CD558();
}

uint64_t OUTLINED_FUNCTION_42_5()
{
  return 0;
}

void OUTLINED_FUNCTION_43_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_2210D2EE8(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_44_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_45_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_46_3()
{
  return type metadata accessor for SubscriptionStoreContentConfiguration.AccessorySubviews(0);
}

uint64_t OUTLINED_FUNCTION_47_4()
{
  return type metadata accessor for SubscriptionStoreContentConfiguration.Section.AccessorySubviews(0);
}

void Product.TaskState.product.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v6;

  type metadata accessor for Product.TaskState(0);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_15();
  sub_221084AB0(v1, v1, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = OUTLINED_FUNCTION_14_9();
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, v1, v6);
    OUTLINED_FUNCTION_142(a1, 0);
  }
  else
  {
    OUTLINED_FUNCTION_142(a1, 1);
    sub_221011A28(v1, type metadata accessor for Product.TaskState);
  }
  OUTLINED_FUNCTION_17_0();
}

uint64_t type metadata accessor for Product.TaskState(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_25565B6F8);
}

void sub_2210D3628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t KeyPath;

  OUTLINED_FUNCTION_8_0();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  _s16TaskViewModifierVMa(0);
  OUTLINED_FUNCTION_44_5();
  MEMORY[0x24BDAC7A8](v8);
  v9 = OUTLINED_FUNCTION_24_12();
  OUTLINED_FUNCTION_32_8(v9);
  v10 = v1 + *(int *)(v0 + 28);
  v11 = OUTLINED_FUNCTION_27_12();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v3, v11);
  v12 = (_QWORD *)(v1 + *(int *)(v0 + 20));
  *v12 = v7;
  v12[1] = v5;
  OUTLINED_FUNCTION_110_0();
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_108(KeyPath);
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_30_11();
}

void sub_2210D36D0()
{
  uint64_t v0;

  sub_221011A28(v0, _s16TaskViewModifierVMa);
  OUTLINED_FUNCTION_19();
}

void sub_2210D36EC()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210D3708()
{
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210D3720()
{
  uint64_t *v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_8_0();
  v28 = v1;
  v29 = v2;
  v27 = v3;
  v34 = v4;
  v30 = *v0;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B928);
  v6 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  v33 = v6;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_13_0();
  v10 = v9 - v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565AFA0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_13_0();
  v15 = v14 - v13;
  v16 = sub_2212F2C4C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B930);
  v31 = *(_QWORD *)(v20 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221023FE4(v27, v28);
  sub_2212F2C88();
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x24BDB9638], v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v15, *MEMORY[0x24BDB9660], v11);
  sub_2212F2CA0();
  sub_2212F2CDC();
  OUTLINED_FUNCTION_15_15(v15, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  swift_release();
  sub_221024548(&qword_25565B940, &qword_25565B930);
  MEMORY[0x227668320](v20, v24);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v23, v20);
  v25 = v32;
  sub_2212F2C64();
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v10, v25);
  OUTLINED_FUNCTION_19();
}

uint64_t Product.CollectionTaskState.products.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) == 1)
    return swift_bridgeObjectRetain();
  else
    return 0;
}

void View.storeProductTask(for:priority:action:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t KeyPath;

  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_63_3(v4, v5, v6, v7, v8, v9, v10);
  _s16TaskViewModifierVMa(0);
  OUTLINED_FUNCTION_44_5();
  MEMORY[0x24BDAC7A8](v11);
  v12 = OUTLINED_FUNCTION_24_12();
  OUTLINED_FUNCTION_32_8(v12);
  v13 = OUTLINED_FUNCTION_27_12();
  OUTLINED_FUNCTION_73_3(v13);
  v14 = (_QWORD *)(v3 + *(int *)(v1 + 20));
  *v14 = v0;
  v14[1] = v2;
  OUTLINED_FUNCTION_110_0();
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_108(KeyPath);
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_30_11();
}

void sub_2210D39EC()
{
  uint64_t v0;

  sub_221011A28(v0, _s16TaskViewModifierVMa);
  OUTLINED_FUNCTION_19();
}

uint64_t _s16TaskViewModifierVMa(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_25565B890);
}

void sub_2210D3A1C()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210D3A38()
{
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_6_0();
}

void View.storeProductsTask<A>(for:priority:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  OUTLINED_FUNCTION_8_0();
  v58 = v22;
  v24 = v23;
  v26 = v25;
  v56 = v28;
  v57 = v27;
  v54 = v29;
  v55 = v30;
  v50 = v32;
  v51 = v31;
  v33 = OUTLINED_FUNCTION_27_12();
  v52 = *(_QWORD *)(v33 - 8);
  v53 = v33;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v34);
  v35 = OUTLINED_FUNCTION_98_1();
  v48 = a21;
  v49 = v24;
  _s6TaskIDOMa(v35, v26, v24, a21);
  OUTLINED_FUNCTION_100_2();
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v48 - v37;
  v39 = OUTLINED_FUNCTION_72_0();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v48 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = _s26CollectionTaskViewModifierVMa(0, v26, v24, a21);
  v44 = *(_QWORD *)(v43 - 8);
  OUTLINED_FUNCTION_100_2();
  MEMORY[0x24BDAC7A8](v45);
  v47 = (char *)&v48 - v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v42, v50, v39);
  OUTLINED_FUNCTION_59_3((uint64_t)v38, v51, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16));
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v52 + 104))(v21, *MEMORY[0x24BDEA068], v53);
  sub_2210D3C18((uint64_t)v42, (uint64_t)v38, v54, v55, v21, v26, v49, v48, (uint64_t)v47);
  swift_retain();
  MEMORY[0x227669B20](v47, v57, v43, v58);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v43);
  OUTLINED_FUNCTION_19();
}

uint64_t _s6TaskIDOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s6TaskIDOMn);
}

uint64_t _s26CollectionTaskViewModifierVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s26CollectionTaskViewModifierVMn);
}

uint64_t sub_2210D3C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v18 = sub_2212F5640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a9, a1, v18);
  v19 = (int *)_s26CollectionTaskViewModifierVMa(0, a6, a7, a8);
  v20 = a9 + v19[11];
  v21 = _s6TaskIDOMa(0, a6, a7, a8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v22 = (_QWORD *)(a9 + v19[12]);
  *v22 = a3;
  v22[1] = a4;
  v23 = a9 + v19[13];
  v24 = sub_2212F4C08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v23, a5, v24);
}

void sub_2210D3D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  OUTLINED_FUNCTION_8_0();
  v59 = v24;
  v60 = v23;
  v26 = v25;
  v57 = v28;
  v58 = v27;
  v55 = v29;
  v56 = v30;
  v50 = v31;
  v54 = v32;
  v52 = v33;
  v53 = OUTLINED_FUNCTION_27_12();
  v51 = *(_QWORD *)(v53 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_15();
  v48 = a22;
  v49 = a21;
  _s6TaskIDOMa(0, v26, a21, a22);
  OUTLINED_FUNCTION_100_2();
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v47 - v36;
  v38 = OUTLINED_FUNCTION_72_0();
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v40 = OUTLINED_FUNCTION_98_1();
  v41 = _s26CollectionTaskViewModifierVMa(v40, v26, a21, a22);
  v42 = *(_QWORD *)(v41 - 8);
  OUTLINED_FUNCTION_100_2();
  v44 = MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)&v47 - v45;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v39 + 16))(v22, v50, v38, v44);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v37, v52, v26);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v23, v54, v53);
  sub_2210D3C18(v22, (uint64_t)v37, v55, v56, v23, v26, v49, v48, (uint64_t)v46);
  swift_retain();
  MEMORY[0x227669B20](v46, v58, v41, v59);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v46, v41);
  OUTLINED_FUNCTION_19();
}

void View.storeSubscriptionsTask(groupID:priority:action:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_63_3(v6, v7, v8, v9, v10, v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565B680);
  OUTLINED_FUNCTION_44_5();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_24_12();
  OUTLINED_FUNCTION_32_8(v14);
  v15 = OUTLINED_FUNCTION_27_12();
  OUTLINED_FUNCTION_73_3(v15);
  v16 = v4 + *(int *)(v2 + 44);
  *(_QWORD *)v16 = v0;
  *(_QWORD *)(v16 + 8) = v3;
  *(_BYTE *)(v16 + 16) = 1;
  v17 = (_QWORD *)(v4 + *(int *)(v2 + 48));
  *v17 = v5;
  v17[1] = v1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_129();
  OUTLINED_FUNCTION_30_11();
}

void sub_2210D3F40()
{
  uint64_t v0;

  sub_221014F5C(v0, &qword_25565B680);
  OUTLINED_FUNCTION_19();
}

char *_s9TaskStateOwCP(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v11 = sub_2212F51B4();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v8 = *a2;
      v9 = v8;
      *(_QWORD *)a1 = v8;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void _s9TaskStateOwxx(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v3 = sub_2212F51B4();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else if (!EnumCaseMultiPayload)
  {

  }
}

_QWORD *_s9TaskStateOwcp(_QWORD *a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v9 = sub_2212F51B4();
    (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = *a2;
    v8 = v7;
    *a1 = v7;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **_s9TaskStateOwca(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_221011A28((uint64_t)a1, type metadata accessor for Product.TaskState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v9 = sub_2212F51B4();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = *a2;
      v8 = v7;
      *a1 = v7;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s9TaskStateOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2212F51B4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *_s9TaskStateOwta(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_221011A28((uint64_t)a1, type metadata accessor for Product.TaskState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2212F51B4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2210D433C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F51B4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id sub_2210D43B0(id result, uint64_t a2, char a3)
{
  if (a3 == 1)
  {
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
  else if (!a3)
  {
    return result;
  }
  return result;
}

void _s19CollectionTaskStateOwxx(uint64_t a1)
{
  sub_2210D43FC(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_2210D43FC(void *a1, uint64_t a2, char a3)
{
  if (a3 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (!a3)
  {

  }
}

uint64_t _s19CollectionTaskStateOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2210D43B0(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s19CollectionTaskStateOwca(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2210D43B0(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_2210D43FC(v6, v7, v8);
  return a1;
}

uint64_t _s19CollectionTaskStateOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_2210D43FC(v4, v5, v6);
  return a1;
}

uint64_t _s19CollectionTaskStateOwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s19CollectionTaskStateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2210D459C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2210D45B4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Product.CollectionTaskState()
{
  return &type metadata for Product.CollectionTaskState;
}

void sub_2210D45DC()
{
  _s16TaskViewModifierVMa(255);
  OUTLINED_FUNCTION_55_1();
  sub_221023FE4(&qword_255658528, (void (*)(uint64_t))_s16TaskViewModifierVMa);
  OUTLINED_FUNCTION_5_2();
}

void sub_2210D463C()
{
  OUTLINED_FUNCTION_16_13();
}

void sub_2210D4644(uint64_t *a1)
{
  uint64_t v1;

  v1 = _s26CollectionTaskViewModifierVMa(255, a1[1], a1[3], a1[4]);
  sub_2212F3348();
  MEMORY[0x22766BAC4](&unk_221304588, v1);
  OUTLINED_FUNCTION_5_2();
}

void sub_2210D46A8()
{
  OUTLINED_FUNCTION_16_13();
}

void sub_2210D46B0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565B680);
  OUTLINED_FUNCTION_55_1();
  sub_221024548(qword_25565B730, &qword_25565B680);
  OUTLINED_FUNCTION_5_2();
}

void sub_2210D4710()
{
  OUTLINED_FUNCTION_16_13();
}

uint64_t sub_2210D4718(uint64_t *a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = sub_2212F5640();
  if (v3 <= 0x3F)
  {
    result = _s6TaskIDOMa(319, a1[2], a1[3], a1[4]);
    if (v4 <= 0x3F)
    {
      result = sub_2212F4C08();
      if (v5 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_2210D47CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v5 = sub_2212F5640();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v43 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v43 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9 & 0xF8 | 7;
  v11 = v7 + v10;
  v12 = (v7 + v10) & ~v10;
  v42 = v8;
  v13 = *(_QWORD *)(v8 + 64);
  if (v13 <= 0x10)
    v14 = 16;
  else
    v14 = v13;
  v44 = v14 + 8;
  v15 = (v14 + 8 + v12) & 0xFFFFFFFFFFFFFFF8;
  v16 = sub_2212F4C08();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v19 = v18;
  v20 = ((v15 + v18 + 16) & ~(unint64_t)v18) + *(_QWORD *)(v17 + 64);
  v21 = v18 | *(_DWORD *)(v6 + 80) & 0xF8 | v9 & 0xF8;
  v22 = (v18 | *(_DWORD *)(v6 + 80) | v9) & 0x100000;
  if (v21 > 7 || v22 != 0 || v20 > 0x18)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + (((v21 | 7) + 16) & ~(unint64_t)(v21 | 7)));
    swift_retain();
  }
  else
  {
    v26 = *(_QWORD *)(v16 - 8);
    v27 = v16;
    v28 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v29 = (_QWORD *)(((unint64_t)a1 + v11) & v28);
    v30 = (_QWORD *)(((unint64_t)a2 + v11) & v28);
    v31 = *((unsigned __int8 *)v30 + v14);
    if (v31 >= 2)
    {
      if (v14 <= 3)
        v32 = v14;
      else
        v32 = 4;
      __asm { BR              X12 }
    }
    v33 = ~v19;
    if (v31 == 1)
    {
      *v29 = *v30;
      v29[1] = v30[1];
      swift_bridgeObjectRetain();
      v34 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v42 + 16))(v29, v30, v43);
      v34 = 0;
    }
    *((_BYTE *)v29 + v14) = v34;
    v35 = (_QWORD *)(((unint64_t)v29 + v44) & 0xFFFFFFFFFFFFFFF8);
    v36 = (_QWORD *)(((unint64_t)v30 + v44) & 0xFFFFFFFFFFFFFFF8);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = ((unint64_t)v35 + v19 + 16) & v33;
    v39 = ((unint64_t)v36 + v19 + 16) & v33;
    v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
    swift_retain();
    v40(v38, v39, v27);
  }
  return a1;
}

uint64_t sub_2210D4A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_2212F5640();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  v8 = (*(_QWORD *)(v5 + 64) + a1 + v7) & ~v7;
  if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
    v9 = 16;
  else
    v9 = *(_QWORD *)(v6 + 64);
  v10 = *(unsigned __int8 *)(v8 + v9);
  if (v10 >= 2)
  {
    if (v9 <= 3)
      v11 = v9;
    else
      v11 = 4;
    __asm { BR              X13 }
  }
  if (v10 == 1)
    swift_bridgeObjectRelease();
  else
    (*(void (**)(uint64_t))(v6 + 8))(v8);
  swift_release();
  v12 = sub_2212F4C08();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))((((v9 + v8 + 8) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80), v12);
}

uint64_t sub_2210D4B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);

  v6 = sub_2212F5640();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (_QWORD *)((v10 + a1) & ~v9);
  v12 = (_QWORD *)((v10 + a2) & ~v9);
  if (*(_QWORD *)(v8 + 64) <= 0x10uLL)
    v13 = 16;
  else
    v13 = *(_QWORD *)(v8 + 64);
  v14 = *((unsigned __int8 *)v12 + v13);
  if (v14 >= 2)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X13 }
  }
  if (v14 == 1)
  {
    *v11 = *v12;
    v11[1] = v12[1];
    swift_bridgeObjectRetain();
    v16 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v8 + 16))(v11, v12);
    v16 = 0;
  }
  *((_BYTE *)v11 + v13) = v16;
  v17 = (unint64_t)v11 + v13 + 8;
  v18 = (_QWORD *)(((unint64_t)v12 + v13 + 8) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  v20 = (_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v18;
  v20[1] = v19;
  v21 = sub_2212F4C08();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = ((unint64_t)v20 + v23 + 16) & ~v23;
  v25 = ((unint64_t)v18 + v23 + 16) & ~v23;
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  swift_retain();
  v26(v24, v25, v21);
  return a1;
}

uint64_t sub_2210D4D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_2212F5640();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  if (*(_QWORD *)(v9 + 64) <= 0x10uLL)
    v14 = 16;
  else
    v14 = *(_QWORD *)(v9 + 64);
  if (v12 != v13)
  {
    v15 = *(unsigned __int8 *)(v12 + v14);
    if (v15 >= 2)
    {
      if (v14 <= 3)
        v16 = v14;
      else
        v16 = 4;
      __asm { BR              X12 }
    }
    if (v15 == 1)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
    v17 = *(unsigned __int8 *)(v13 + v14);
    if (v17 >= 2)
    {
      if (v14 <= 3)
        v18 = v14;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 1)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
      *(_BYTE *)(v12 + v14) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
      *(_BYTE *)(v12 + v14) = 0;
    }
  }
  v19 = (_QWORD *)(((v12 | 7) + v14 + 1) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((v13 | 7) + v14 + 1) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  v22 = sub_2212F4C08();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 24))(((unint64_t)v19 + *(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), ((unint64_t)v20 + *(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), v22);
  return a1;
}

uint64_t sub_2210D4F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  char v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_2212F5640();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = *(_QWORD *)(v7 + 64) + v9;
  v11 = (_OWORD *)((v10 + a1) & ~v9);
  v12 = (_OWORD *)((v10 + a2) & ~v9);
  if (*(_QWORD *)(v8 + 64) <= 0x10uLL)
    v13 = 16;
  else
    v13 = *(_QWORD *)(v8 + 64);
  v14 = *((unsigned __int8 *)v12 + v13);
  if (v14 >= 2)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X13 }
  }
  if (v14 == 1)
  {
    *v11 = *v12;
    v16 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *, _OWORD *))(v8 + 32))(v11, v12);
    v16 = 0;
  }
  *((_BYTE *)v11 + v13) = v16;
  v17 = (_OWORD *)(((unint64_t)v11 + v13 + 8) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_OWORD *)(((unint64_t)v12 + v13 + 8) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = sub_2212F4C08();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v20 + 32))(((unint64_t)v17 + *(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80), ((unint64_t)v18 + *(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80), v19);
  return a1;
}

uint64_t sub_2210D50BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_2212F5640();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  if (*(_QWORD *)(v9 + 64) <= 0x10uLL)
    v14 = 16;
  else
    v14 = *(_QWORD *)(v9 + 64);
  if (v12 != v13)
  {
    v15 = *(unsigned __int8 *)(v12 + v14);
    if (v15 >= 2)
    {
      if (v14 <= 3)
        v16 = v14;
      else
        v16 = 4;
      __asm { BR              X12 }
    }
    if (v15 == 1)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
    v17 = *(unsigned __int8 *)(v13 + v14);
    if (v17 >= 2)
    {
      if (v14 <= 3)
        v18 = v14;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 1)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v19 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v12, v13, v8);
      v19 = 0;
    }
    *(_BYTE *)(v12 + v14) = v19;
  }
  v20 = (_OWORD *)(((v12 | 7) + v14 + 1) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_OWORD *)(((v13 | 7) + v14 + 1) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  swift_release();
  v22 = sub_2212F4C08();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 40))(((unint64_t)v20 + *(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), ((unint64_t)v21 + *(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), v22);
  return a1;
}

uint64_t sub_2210D52EC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  int v23;
  unsigned int v25;
  int v26;
  int v27;
  unint64_t *v28;
  unint64_t v29;

  v6 = sub_2212F5640();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v9 + 64) <= 0x10uLL)
    v10 = 16;
  else
    v10 = *(_QWORD *)(v9 + 64);
  v11 = sub_2212F4C08();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int *)(v12 + 84);
  if (v8 <= v13)
    v14 = *(_DWORD *)(v12 + 84);
  else
    v14 = v8;
  if (v14 <= 0x7FFFFFFF)
    v15 = 0x7FFFFFFF;
  else
    v15 = v14;
  if (!a2)
    return 0;
  v16 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v17 = *(_QWORD *)(v7 + 64) + v16;
  v18 = v10 + 8;
  v19 = *(unsigned __int8 *)(v12 + 80);
  v20 = v19 + 16;
  if (a2 <= v15)
    goto LABEL_30;
  v21 = ((v20 + ((v18 + (v17 & ~v16)) & 0xFFFFFFFFFFFFFFF8)) & ~v19) + *(_QWORD *)(v12 + 64);
  v22 = 8 * v21;
  if (v21 <= 3)
  {
    v25 = ((a2 - v15 + ~(-1 << v22)) >> v22) + 1;
    if (HIWORD(v25))
    {
      v23 = *(_DWORD *)(a1 + v21);
      if (!v23)
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v25 > 0xFF)
    {
      v23 = *(unsigned __int16 *)(a1 + v21);
      if (!*(_WORD *)(a1 + v21))
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v25 < 2)
    {
LABEL_30:
      if ((_DWORD)v8 == v15)
        return __swift_getEnumTagSinglePayload(a1, v8, v6);
      v28 = (unint64_t *)((v18 + ((v17 + a1) & ~v16)) & 0xFFFFFFFFFFFFFFF8);
      if ((v14 & 0x80000000) != 0)
        return __swift_getEnumTagSinglePayload(((unint64_t)v28 + v20) & ~v19, v13, v11);
      v29 = *v28;
      if (v29 >= 0xFFFFFFFF)
        LODWORD(v29) = -1;
      return (v29 + 1);
    }
  }
  v23 = *(unsigned __int8 *)(a1 + v21);
  if (!*(_BYTE *)(a1 + v21))
    goto LABEL_30;
LABEL_21:
  v26 = (v23 - 1) << v22;
  if (v21 > 3)
    v26 = 0;
  if ((_DWORD)v21)
  {
    if (v21 <= 3)
      v27 = v21;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  return v15 + v26 + 1;
}

void sub_2210D5508(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  size_t v16;
  char v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;

  v8 = *(_QWORD *)(sub_2212F5640() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_QWORD *)(v10 + 64) <= 0x10uLL)
    v11 = 16;
  else
    v11 = *(_QWORD *)(v10 + 64);
  v12 = *(_QWORD *)(sub_2212F4C08() - 8);
  if (v9 <= *(_DWORD *)(v12 + 84))
    v13 = *(_DWORD *)(v12 + 84);
  else
    v13 = v9;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v15 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  v16 = ((*(unsigned __int8 *)(v12 + 80)
        + 16
        + ((v11 + 8 + ((*(_QWORD *)(v8 + 64) + v15) & ~v15)) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
      + *(_QWORD *)(v12 + 64);
  v17 = 8 * v16;
  if (a3 <= v14)
  {
    v18 = 0;
  }
  else if (v16 <= 3)
  {
    v20 = ((a3 - v14 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v20))
    {
      v18 = 4u;
    }
    else if (v20 >= 0x100)
    {
      v18 = 2;
    }
    else
    {
      v18 = v20 > 1;
    }
  }
  else
  {
    v18 = 1u;
  }
  if (v14 < a2)
  {
    v19 = ~v14 + a2;
    if (v16 < 4)
    {
      if ((_DWORD)v16)
      {
        v21 = v19 & ~(-1 << v17);
        bzero(a1, v16);
        if ((_DWORD)v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if ((_DWORD)v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

uint64_t sub_2210D57A0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_2210D5810(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      v11 = a2[1];
      *v3 = *a2;
      v3[1] = v11;
      *((_BYTE *)v3 + v5) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_2210D5928(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 0x10)
    v3 = 16;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return swift_bridgeObjectRelease();
    else
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_2210D5970 + 4 * byte_2213043EB[v5]))();
  }
}

_QWORD *sub_2210D59C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
    v9 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v9 = 0;
  }
  *((_BYTE *)a1 + v5) = v9;
  return a1;
}

_QWORD *sub_2210D5AA0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + v7) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 0;
    }
  }
  return a1;
}

_OWORD *sub_2210D5C38(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_OWORD *sub_2210D5D0C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(_OWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_2210D5E98(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 0x10uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2210D5F5C + 4 * byte_22130440E[(v4 - 1)]))();
}

void sub_2210D5FA8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10)
    v5 = 16;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_2210D614C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 0x10uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2210D6194 + 4 * byte_22130441C[v3]))();
}

void sub_2210D61DC(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 0x10uLL)
    v4 = 16;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t *sub_2210D62A4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = sub_2212F5640();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = v6[5];
    v9 = v6[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v6[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_2212F4C08();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    v20(v17, v18, v19);
    v21 = v6[8];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = *(_QWORD *)v23;
    LOBYTE(v6) = v23[8];
    sub_221017C08(*(_QWORD *)v23, (char)v6);
    *(_QWORD *)v22 = v24;
    v22[8] = (char)v6;
  }
  return a1;
}

uint64_t sub_2210D63C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_2212F5640();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_release();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_2212F4C08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return sub_221017894(*(_QWORD *)(a1 + *(int *)(a2 + 32)), *(_BYTE *)(a1 + *(int *)(a2 + 32) + 8));
}

uint64_t sub_2210D645C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_2212F5640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_2212F4C08();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  v19(v16, v17, v18);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)v22;
  LOBYTE(a2) = *(_BYTE *)(v22 + 8);
  sub_221017C08(*(_QWORD *)v22, a2);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = a2;
  return a1;
}

uint64_t sub_2210D6550(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v6 = sub_2212F5640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_2212F4C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)v20;
  LOBYTE(a3) = *(_BYTE *)(v20 + 8);
  sub_221017C08(*(_QWORD *)v20, (char)a3);
  v22 = *(_QWORD *)v19;
  v23 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = (_BYTE)a3;
  sub_221017894(v22, v23);
  return a1;
}

uint64_t sub_2210D6658(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_2212F5640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2212F4C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  return a1;
}

uint64_t sub_2210D670C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v6 = sub_2212F5640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  swift_release();
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_2212F4C08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = (uint64_t *)(a2 + v16);
  v19 = *v18;
  LOBYTE(v18) = *((_BYTE *)v18 + 8);
  v20 = *(_QWORD *)v17;
  v21 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v17 = v19;
  *(_BYTE *)(v17 + 8) = (_BYTE)v18;
  sub_221017894(v20, v21);
  return a1;
}

uint64_t sub_2210D67EC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210D67F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = OUTLINED_FUNCTION_72_0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v7 = OUTLINED_FUNCTION_27_12();
    v8 = a1 + *(int *)(a3 + 28);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_2210D6890()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2210D689C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_72_0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      OUTLINED_FUNCTION_17_0();
      return;
    }
    v9 = OUTLINED_FUNCTION_27_12();
    v10 = a1 + *(int *)(a4 + 28);
  }
  __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t sub_2210D6928()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2212F5640();
  if (v1 <= 0x3F)
  {
    result = sub_2212F4C08();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_2210D69CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_8_0();
  v44 = v22;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v43 = a21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565B8D8);
  OUTLINED_FUNCTION_44_5();
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v42 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = OUTLINED_FUNCTION_72_0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v37, v28, v38);
  v39 = OUTLINED_FUNCTION_27_12();
  OUTLINED_FUNCTION_5_4(v39);
  v40 = &v37[*(int *)(v21 + 44)];
  *(_QWORD *)v40 = v34;
  *((_QWORD *)v40 + 1) = v32;
  v40[16] = v30 & 1;
  v41 = &v37[*(int *)(v21 + 48)];
  *(_QWORD *)v41 = v26;
  *((_QWORD *)v41 + 1) = v24;
  sub_2210DAC70();
  swift_retain();
  MEMORY[0x227669B20](v37, v44, v21, v43);
  sub_221014F5C((uint64_t)v37, &qword_25565B8D8);
  OUTLINED_FUNCTION_19();
}

uint64_t sub_2210D6AD4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;

  v4 = type metadata accessor for Product.TaskState(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_2212F4B60();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v11 = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 88))(v10, v7);
  if (v11 == *MEMORY[0x24BDE9F50])
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v10, v7);
    *a2 = *v10;
    return swift_storeEnumTagMultiPayload();
  }
  if (v11 == *MEMORY[0x24BDE9F60])
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    (*(void (**)(_QWORD *, uint64_t))(v8 + 96))(v10, v7);
    v12 = sub_2212F51B4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a2, v10, v12);
    return swift_storeEnumTagMultiPayload();
  }
  if (v11 == *MEMORY[0x24BDE9F58] || v11 == *MEMORY[0x24BDE9F48])
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    return swift_storeEnumTagMultiPayload();
  }
  v14 = sub_2212F4C14();
  sub_221023FE4(&qword_255659108, (void (*)(uint64_t))MEMORY[0x24BDEA098]);
  v15 = swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BDEA090], v14);
  v17 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v17(a1, v7);
  *v6 = v15;
  swift_storeEnumTagMultiPayload();
  sub_221084A7C((uint64_t)v6, (uint64_t)a2, type metadata accessor for Product.TaskState);
  return ((uint64_t (*)(_QWORD *, uint64_t))v17)(v10, v7);
}

uint64_t sub_2210D6D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  int v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char v20;
  unint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;

  v8 = sub_2212F51B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2212F4B60();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v16 = (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == *MEMORY[0x24BDE9F50])
  {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v15, v12);
    v17 = *v15;
  }
  else
  {
    if (v16 == *MEMORY[0x24BDE9F60])
    {
      (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v15, v12);
      (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 32))(v11, v15, v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255658AC0);
      v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_2212FF8E0;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 16))(v17 + v21, v11, v8);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      result = swift_bridgeObjectRelease();
      v20 = 1;
      v19 = MEMORY[0x24BEE4AF8];
      goto LABEL_10;
    }
    if (v16 == *MEMORY[0x24BDE9F58])
    {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
      result = swift_bridgeObjectRelease();
      v17 = 0;
      v19 = 0;
      v20 = 2;
      goto LABEL_10;
    }
    if (v16 == *MEMORY[0x24BDE9F48])
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255658A68);
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_2212FF8E0;
      *(_QWORD *)(v19 + 32) = a2;
      *(_QWORD *)(v19 + 40) = a3;
      v22 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      swift_bridgeObjectRetain();
      v22(a1, v12);
      result = swift_bridgeObjectRelease();
      v20 = 1;
      v17 = MEMORY[0x24BEE4AF8];
      goto LABEL_10;
    }
    v23 = sub_2212F4C14();
    sub_221023FE4(&qword_255659108, (void (*)(uint64_t))MEMORY[0x24BDEA098]);
    v17 = swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v24, *MEMORY[0x24BDEA090], v23);
    v25 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v25(a1, v12);
    v25((uint64_t)v15, v12);
  }
  result = swift_bridgeObjectRelease();
  v19 = 0;
  v20 = 0;
LABEL_10:
  *(_QWORD *)a4 = v17;
  *(_QWORD *)(a4 + 8) = v19;
  *(_BYTE *)(a4 + 16) = v20;
  return result;
}

uint64_t sub_2210D7084@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char *v48;
  void (*v49)(uint64_t *, unint64_t, uint64_t);
  int v50;
  uint64_t v51;

  v2 = sub_2212F51B4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v40 - v7;
  v9 = sub_2212F4B9C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_2212F4B90();
  if (result)
  {
    *a1 = result;
    a1[1] = 0;
    *((_BYTE *)a1 + 16) = 0;
    return result;
  }
  v48 = v8;
  sub_2212F4BA8();
  swift_bridgeObjectRelease();
  v51 = sub_221152C68();
  v14 = sub_2212F4BA8();
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v44 = v6;
    v45 = v2;
    v41 = a1;
    v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v40 = v14;
    v17 = v14 + v16;
    v50 = *MEMORY[0x24BDE9FA8];
    v47 = *MEMORY[0x24BDE9FA0];
    v42 = *MEMORY[0x24BDE9FB0];
    v46 = *(_QWORD *)(v10 + 72);
    v49 = *(void (**)(uint64_t *, unint64_t, uint64_t))(v10 + 16);
    v18 = MEMORY[0x24BEE4AF8];
    v43 = v10;
    while (1)
    {
      v49(v12, v17, v9);
      v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 88))(v12, v9);
      if (v19 == v50)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
        result = swift_bridgeObjectRelease();
        v34 = v41;
        *v41 = 0;
        v34[1] = 0;
        *((_BYTE *)v34 + 16) = 2;
        return result;
      }
      if (v19 == v47)
      {
        (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
        v21 = *v12;
        v20 = v12[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_221152BAC(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
          v18 = v32;
        }
        v23 = *(_QWORD *)(v18 + 16);
        v22 = *(_QWORD *)(v18 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_221152BAC(v22 > 1, v23 + 1, 1, v18);
          v18 = v33;
        }
        *(_QWORD *)(v18 + 16) = v23 + 1;
        v24 = v18 + 16 * v23;
        *(_QWORD *)(v24 + 32) = v21;
        *(_QWORD *)(v24 + 40) = v20;
        v10 = v43;
      }
      else
      {
        if (v19 != v42)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v35 = sub_2212F4C14();
          sub_221023FE4(&qword_255659108, (void (*)(uint64_t))MEMORY[0x24BDEA098]);
          v36 = v10;
          v37 = swift_allocError();
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v38, *MEMORY[0x24BDEA090], v35);
          v39 = v41;
          *v41 = v37;
          v39[1] = 0;
          *((_BYTE *)v39 + 16) = 0;
          return (*(uint64_t (**)(uint64_t *, uint64_t))(v36 + 8))(v12, v9);
        }
        (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
        v25 = *(void (**)(char *, uint64_t *, uint64_t))(v3 + 32);
        v26 = v48;
        v27 = v45;
        v25(v48, v12, v45);
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v44, v26, v27);
        v28 = v51;
        v29 = *(_QWORD *)(v51 + 16);
        if (v29 >= *(_QWORD *)(v51 + 24) >> 1)
          v28 = sub_221152C68();
        *(_QWORD *)(v28 + 16) = v29 + 1;
        v30 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
        v51 = v28;
        v31 = v45;
        v25((char *)(v28 + v30 + *(_QWORD *)(v3 + 72) * v29), (uint64_t *)v44, v45);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v48, v31);
      }
      v17 += v46;
      if (!--v15)
      {
        result = swift_bridgeObjectRelease();
        a1 = v41;
        goto LABEL_20;
      }
    }
  }
  result = swift_bridgeObjectRelease();
  v18 = MEMORY[0x24BEE4AF8];
LABEL_20:
  *a1 = v51;
  a1[1] = v18;
  *((_BYTE *)a1 + 16) = 1;
  return result;
}

uint64_t sub_2210D74A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  uint64_t TupleTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  char v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_8_0();
  v41 = v0;
  v42 = v1;
  v3 = v2;
  v39 = v4;
  v40 = v5;
  v6 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_13_0();
  v9 = (char *)(v8 - v7);
  OUTLINED_FUNCTION_33_6();
  v38 = v10;
  v14 = _s6TaskIDOMa(v11, v12, v13, v10);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (uint64_t *)((char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v35 - v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  OUTLINED_FUNCTION_100_2();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v35 - v24;
  v26 = (uint64_t *)((char *)&v35 + *(int *)(v23 + 48) - v24);
  v37 = v15;
  OUTLINED_FUNCTION_117_0((uint64_t)&v35 - v24, v39);
  OUTLINED_FUNCTION_117_0((uint64_t)v26, v40);
  if (OUTLINED_FUNCTION_133() != 1)
  {
    OUTLINED_FUNCTION_117_0((uint64_t)v20, (uint64_t)v25);
    if (OUTLINED_FUNCTION_133() != 1)
    {
      v32 = v9;
      (*(void (**)(char *, _QWORD *, uint64_t))(v6 + 32))(v9, v26, v3);
      v31 = sub_2212F52D4();
      v33 = *(void (**)(char *, uint64_t))(v6 + 8);
      v33(v32, v3);
      v33(v20, v3);
      v30 = v37;
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v3);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_117_0((uint64_t)v18, (uint64_t)v25);
  v28 = *v18;
  v27 = v18[1];
  if (OUTLINED_FUNCTION_133() != 1)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    v31 = 0;
    v30 = v36;
    v14 = TupleTypeMetadata2;
    goto LABEL_14;
  }
  v29 = v28 == *v26 && v27 == v26[1];
  v30 = v37;
  if (v29)
  {
    swift_bridgeObjectRelease_n();
    v31 = 1;
  }
  else
  {
    v31 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_14:
  (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v14);
  return v31 & 1;
}

uint64_t sub_2210D7704()
{
  return sub_2210D74A0();
}

uint64_t sub_2210D7714()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210D7750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v26 = a2;
  v27 = a1;
  v4 = _s16TaskViewModifierVMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = sub_2212F5640();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)(v2 + *(int *)(v4 + 20));
  v12 = v11[1];
  v25 = *v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v13(v10, v3, v7);
  sub_221084AB0(v3, (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), _s16TaskViewModifierVMa);
  v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = swift_allocObject();
  sub_221084A7C((uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, _s16TaskViewModifierVMa);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B8F0);
  v17 = v26;
  v18 = (char *)(v26 + *(int *)(v16 + 36));
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659CC0);
  v13(&v18[*(int *)(v19 + 36)], (uint64_t)v10, v7);
  v20 = &v18[*(int *)(v19 + 40)];
  *(_QWORD *)v20 = v25;
  *((_QWORD *)v20 + 1) = v12;
  *(_QWORD *)v18 = &unk_25565B8E8;
  *((_QWORD *)v18 + 1) = v15;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v17, v27, v21);
  v22 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  return v22(v10, v7);
}

uint64_t sub_2210D790C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[4] = a1;
  v1[5] = type metadata accessor for Product.TaskState(0);
  v1[6] = swift_task_alloc();
  v1[7] = type metadata accessor for SKLogger();
  v1[8] = swift_task_alloc();
  v1[9] = sub_2212F55F8();
  v1[10] = sub_2212F55EC();
  v1[11] = sub_2212F55D4();
  v1[12] = v2;
  return swift_task_switch();
}

uint64_t sub_2210D79C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20[2];

  v1 = v0[4];
  v2 = v1 + *(int *)(_s16TaskViewModifierVMa(0) + 32);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_221017C08(*(_QWORD *)v2, v4);
  sub_2210451EC();
  v6 = v5;
  sub_221017894(v3, v4);
  if ((v6 & 1) != 0)
  {
    if (qword_255655C08 != -1)
      swift_once();
    v12 = v0[8];
    v13 = __swift_project_value_buffer(v0[7], (uint64_t)qword_25568CE88);
    sub_221084AB0(v13, v12, (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
    v20[0] = 0;
    v20[1] = 0xE000000000000000;
    sub_2212F5964();
    sub_2212F540C();
    swift_bridgeObjectRetain();
    sub_2212F540C();
    swift_bridgeObjectRelease();
    sub_2212F540C();
    v14 = sub_2212F57CC();
    swift_bridgeObjectRetain_n();
    v15 = sub_2212F2C1C();
    v16 = v14;
    if (os_log_type_enabled(v15, v14))
    {
      v17 = swift_slowAlloc();
      v20[0] = swift_slowAlloc();
      *(_DWORD *)v17 = 136446466;
      v0[2] = sub_221115C44(0, 0xE000000000000000, v20);
      sub_2212F5898();
      *(_WORD *)(v17 + 12) = 2082;
      swift_bridgeObjectRetain();
      v0[3] = sub_221115C44(0, 0xE000000000000000, v20);
      sub_2212F5898();
      OUTLINED_FUNCTION_4_11();
      _os_log_impl(&dword_221005000, v15, v16, "%{public}s%{public}s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_2_4();
    }
    OUTLINED_FUNCTION_4_11();

    sub_221011A28(v0[8], (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
    swift_storeEnumTagMultiPayload();
    v18 = (_QWORD *)swift_task_alloc();
    v0[13] = v18;
    *v18 = v0;
    v18[1] = sub_2210D7D68;
    OUTLINED_FUNCTION_105();
    __asm { BR              X1 }
  }
  v7 = v0[4];
  v8 = swift_task_alloc();
  v0[14] = v8;
  *(_QWORD *)(v8 + 16) = v7;
  v9 = swift_task_alloc();
  v0[15] = v9;
  *(_QWORD *)(v9 + 16) = v7;
  v0[16] = sub_2212F55EC();
  v10 = (_QWORD *)swift_task_alloc();
  v0[17] = v10;
  *v10 = v0;
  v10[1] = sub_2210D7DF4;
  OUTLINED_FUNCTION_153();
  OUTLINED_FUNCTION_105();
  return sub_2212F5CE8();
}

uint64_t sub_2210D7D68()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = *v0;
  v1 = *(_QWORD *)(v3 + 48);
  OUTLINED_FUNCTION_6_13(&v3);
  sub_221011A28(v1, type metadata accessor for Product.TaskState);
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210D7DBC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_13_13();
  return OUTLINED_FUNCTION_42_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2210D7DF4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_6_13(&v2);
  OUTLINED_FUNCTION_95_0();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210D7E4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[2] = a2;
  v3 = sub_2212F4B60();
  v2[3] = v3;
  v2[4] = *(_QWORD *)(v3 - 8);
  v2[5] = swift_task_alloc();
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = type metadata accessor for Product.TaskState(0);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B920);
  v2[12] = v4;
  v2[13] = *(_QWORD *)(v4 - 8);
  v2[14] = swift_task_alloc();
  v5 = sub_2212F4C08();
  v2[15] = v5;
  v2[16] = *(_QWORD *)(v5 - 8);
  v2[17] = swift_task_alloc();
  sub_2212F55F8();
  v2[18] = sub_2212F55EC();
  v2[19] = sub_2212F55D4();
  v2[20] = v6;
  return swift_task_switch();
}

uint64_t sub_2210D7F90()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_75_3();
  v1 = v0[2];
  OUTLINED_FUNCTION_78_2();
  v2 = (void (*)(uint64_t))MEMORY[0x24BDEA038];
  v0[21] = OUTLINED_FUNCTION_74_3();
  v3 = _s16TaskViewModifierVMa(0);
  v0[22] = v3;
  v4 = (_QWORD *)(v1 + *(int *)(v3 + 20));
  v0[23] = *v4;
  v0[24] = v4[1];
  OUTLINED_FUNCTION_79_1(v3);
  sub_221023FE4(&qword_255659D08, v2);
  OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_33_6();
  return OUTLINED_FUNCTION_46_4();
}

uint64_t sub_2210D802C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[16];
  v1 = v0[17];
  v0[25] = sub_2212F4BE4();
  OUTLINED_FUNCTION_95_0();
  OUTLINED_FUNCTION_15_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210D808C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_40();
  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD **)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 16);
  sub_2210D3720();
  v5 = *(int *)(v1 + 24);
  *(_DWORD *)(v0 + 240) = v5;
  v6 = *(int **)(v4 + v5);
  sub_2212F4B54();
  sub_2210D6AD4(v3, v2);
  v9 = (uint64_t (*)(void))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v7;
  *v7 = v0;
  v7[1] = sub_2210D8144;
  return OUTLINED_FUNCTION_12_18(*(_QWORD *)(v0 + 88), v9);
}

uint64_t sub_2210D8144()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_130();
  v1 = *(_QWORD *)(v0 + 88);
  OUTLINED_FUNCTION_53_2(v2);
  sub_221011A28(v1, type metadata accessor for Product.TaskState);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v3;
  OUTLINED_FUNCTION_140(v3, (uint64_t)sub_2210D81AC);
  return OUTLINED_FUNCTION_60_3();
}

uint64_t sub_2210D81AC()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_6_13(v0);
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210D81E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if ((*(_BYTE *)(v1 + 264) & 1) != 0)
  {
    OUTLINED_FUNCTION_45_4();
    OUTLINED_FUNCTION_95_0();
    OUTLINED_FUNCTION_15_15(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    OUTLINED_FUNCTION_24_9();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_31_6();
    OUTLINED_FUNCTION_29_7();
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
    return OUTLINED_FUNCTION_33_8(v5);
  }
  v7 = *MEMORY[0x24BDE9F50];
  v8 = *MEMORY[0x24BDE9F60];
  *(_DWORD *)(v1 + 244) = v7;
  *(_DWORD *)(v1 + 248) = v8;
  v9 = *MEMORY[0x24BDE9F48];
  *(_DWORD *)(v1 + 252) = *MEMORY[0x24BDE9F58];
  *(_DWORD *)(v1 + 256) = v9;
  *(_DWORD *)(v1 + 260) = *MEMORY[0x24BDEA090];
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_12_21(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v10 = OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88));
  if (v10 == (_DWORD)v7)
  {
    OUTLINED_FUNCTION_11_20();
    OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 96));
    OUTLINED_FUNCTION_104_0();
  }
  else if (v10 == *(_DWORD *)(v1 + 248))
  {
    OUTLINED_FUNCTION_11_20();
    OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 96));
    v11 = OUTLINED_FUNCTION_14_9();
    OUTLINED_FUNCTION_71_2(v11);
  }
  else
  {
    if (v10 != *(_DWORD *)(v1 + 252) && v10 != *(_DWORD *)(v1 + 256))
    {
      OUTLINED_FUNCTION_38_6();
      sub_221023FE4(&qword_255659108, (void (*)(uint64_t))MEMORY[0x24BDEA098]);
      v15 = OUTLINED_FUNCTION_31_4();
      OUTLINED_FUNCTION_66_3(v15, v16);
      OUTLINED_FUNCTION_9_16(v2);
      v17 = OUTLINED_FUNCTION_97_2();
      OUTLINED_FUNCTION_150(v17, v18, type metadata accessor for Product.TaskState, v19, v20, v21, v22, v23, v24, v25);
      OUTLINED_FUNCTION_9_16(v26);
      goto LABEL_11;
    }
    OUTLINED_FUNCTION_18_16();
  }
  swift_storeEnumTagMultiPayload();
LABEL_11:
  sub_221084A7C(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), type metadata accessor for Product.TaskState);
  v12 = (_QWORD *)OUTLINED_FUNCTION_99_2();
  *(_QWORD *)(v1 + 224) = v12;
  v13 = OUTLINED_FUNCTION_86_1(v12, (uint64_t)sub_2210D83C0);
  return OUTLINED_FUNCTION_34_6(v13, v14);
}

uint64_t sub_2210D83C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_130();
  v1 = *(_QWORD *)(v0 + 80);
  OUTLINED_FUNCTION_53_2(v2);
  sub_221011A28(v1, type metadata accessor for Product.TaskState);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v3;
  OUTLINED_FUNCTION_140(v3, (uint64_t)sub_2210D8428);
  return OUTLINED_FUNCTION_60_3();
}

uint64_t sub_2210D8428()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_6_13(v0);
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210D845C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if ((*(_BYTE *)(v1 + 264) & 1) != 0)
  {
    OUTLINED_FUNCTION_45_4();
    OUTLINED_FUNCTION_95_0();
    OUTLINED_FUNCTION_15_15(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    OUTLINED_FUNCTION_24_9();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_31_6();
    OUTLINED_FUNCTION_29_7();
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
    return OUTLINED_FUNCTION_33_8(v5);
  }
  v7 = *(unsigned int *)(v1 + 244);
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_12_21(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v8 = OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88));
  if (v8 == (_DWORD)v7)
  {
    OUTLINED_FUNCTION_11_20();
    OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 96));
    OUTLINED_FUNCTION_104_0();
  }
  else if (v8 == *(_DWORD *)(v1 + 248))
  {
    OUTLINED_FUNCTION_11_20();
    OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 96));
    v9 = OUTLINED_FUNCTION_14_9();
    OUTLINED_FUNCTION_71_2(v9);
  }
  else
  {
    if (v8 != *(_DWORD *)(v1 + 252) && v8 != *(_DWORD *)(v1 + 256))
    {
      OUTLINED_FUNCTION_38_6();
      sub_221023FE4(&qword_255659108, (void (*)(uint64_t))MEMORY[0x24BDEA098]);
      v13 = OUTLINED_FUNCTION_31_4();
      OUTLINED_FUNCTION_66_3(v13, v14);
      OUTLINED_FUNCTION_9_16(v2);
      v15 = OUTLINED_FUNCTION_97_2();
      OUTLINED_FUNCTION_150(v15, v16, type metadata accessor for Product.TaskState, v17, v18, v19, v20, v21, v22, v23);
      OUTLINED_FUNCTION_9_16(v24);
      goto LABEL_11;
    }
    OUTLINED_FUNCTION_18_16();
  }
  swift_storeEnumTagMultiPayload();
LABEL_11:
  sub_221084A7C(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), type metadata accessor for Product.TaskState);
  v10 = (_QWORD *)OUTLINED_FUNCTION_99_2();
  *(_QWORD *)(v1 + 224) = v10;
  v11 = OUTLINED_FUNCTION_86_1(v10, (uint64_t)sub_2210D83C0);
  return OUTLINED_FUNCTION_34_6(v11, v12);
}

uint64_t sub_2210D85F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = _s16TaskViewModifierVMa(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212F5604();
  v8 = sub_2212F5640();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v8);
  sub_221084AB0(a1, (uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), _s16TaskViewModifierVMa);
  v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  sub_221084A7C((uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, _s16TaskViewModifierVMa);
  sub_2210ECBB8((uint64_t)v7, (uint64_t)&unk_25565B918, v10);
  return swift_release();
}

uint64_t sub_2210D8720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  v5 = sub_2212F4C08();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2210D8780()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_75_3();
  v1 = v0[2];
  OUTLINED_FUNCTION_78_2();
  v2 = (void (*)(uint64_t))MEMORY[0x24BDEA038];
  v0[6] = OUTLINED_FUNCTION_74_3();
  v3 = _s16TaskViewModifierVMa(0);
  v4 = (_QWORD *)(v1 + *(int *)(v3 + 20));
  v0[7] = *v4;
  v0[8] = v4[1];
  OUTLINED_FUNCTION_79_1(v3);
  sub_221023FE4(&qword_255659D08, v2);
  OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_33_6();
  return OUTLINED_FUNCTION_46_4();
}

uint64_t sub_2210D8814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 32);
  sub_2212F4B78();
  OUTLINED_FUNCTION_95_0();
  OUTLINED_FUNCTION_15_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_24_9();
  return OUTLINED_FUNCTION_8_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2210D8864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];

  v4 = v3;
  v48 = a1;
  v49 = a3;
  v45 = *(_QWORD *)(a2 - 8);
  v47 = *(_QWORD *)(v45 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v44 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2212F5640();
  v39 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v9;
  v10 = *(_QWORD *)(a2 + 16);
  v41 = *(_QWORD *)(a2 + 24);
  v42 = v10;
  v40 = *(_QWORD *)(a2 + 32);
  v11 = _s6TaskIDOMa(0, v10, v41, v40);
  v37 = *(_QWORD *)(v11 - 8);
  v12 = v37;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - v13;
  v34 = (char *)&v33 - v13;
  MEMORY[0x22766BAC4](&unk_221304588, a2);
  v36 = sub_2212F3B4C();
  v38 = MEMORY[0x22766BAC4](&unk_221304560, v11);
  v43 = sub_2212F38B8();
  v15 = sub_2212F3348();
  v46 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v33 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v4 + *(int *)(a2 + 44), v11);
  v21 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v9, v4, v7);
  v22 = v44;
  v23 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v4, a2);
  v24 = (*(unsigned __int8 *)(v23 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = (char *)swift_allocObject();
  v26 = v41;
  *((_QWORD *)v25 + 2) = v42;
  *((_QWORD *)v25 + 3) = v26;
  *((_QWORD *)v25 + 4) = v40;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v25[v24], v22, a2);
  v27 = MEMORY[0x22766BAC4](MEMORY[0x24BDEFB78], v36);
  v28 = v33;
  v29 = v34;
  sub_2212F441C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v28, v35);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v11);
  v30 = MEMORY[0x22766BAC4](MEMORY[0x24BDEECB8], v43);
  v50[0] = v27;
  v50[1] = v30;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v15, v50);
  sub_221088D68((uint64_t)v18, v15, (uint64_t)v20);
  v31 = *(void (**)(char *, uint64_t))(v46 + 8);
  v31(v18, v15);
  sub_221087210((uint64_t)v20, v15, v49);
  return ((uint64_t (*)(char *, uint64_t))v31)(v20, v15);
}

uint64_t sub_2210D8BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = sub_2212F55F8();
  v4[7] = sub_2212F55EC();
  v4[8] = sub_2212F55D4();
  v4[9] = v5;
  return swift_task_switch();
}

uint64_t sub_2210D8C24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  OUTLINED_FUNCTION_75_3();
  v1 = v0[5];
  v3 = v0[3];
  v2 = v0[4];
  v4 = v0[2];
  v5 = (_QWORD *)swift_task_alloc();
  v0[10] = v5;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = v1;
  v5[5] = v4;
  v6 = (_QWORD *)swift_task_alloc();
  v0[11] = v6;
  v6[2] = v3;
  v6[3] = v2;
  v6[4] = v1;
  v6[5] = v4;
  v0[12] = sub_2212F55EC();
  v7 = (_QWORD *)swift_task_alloc();
  v0[13] = v7;
  *v7 = v0;
  v7[1] = sub_2210D8CE8;
  OUTLINED_FUNCTION_153();
  return sub_2212F5CE8();
}

uint64_t sub_2210D8CE8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_6_13(&v2);
  OUTLINED_FUNCTION_95_0();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210D8D40()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_42_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2210D8D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;

  v5[35] = a4;
  v5[36] = a5;
  v5[33] = a2;
  v5[34] = a3;
  v9 = sub_2212F4BC0();
  v5[37] = v9;
  v5[38] = *(_QWORD *)(v9 - 8);
  v5[39] = swift_task_alloc();
  v5[40] = swift_task_alloc();
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v10 = sub_2212F51B4();
  v5[43] = v10;
  v5[44] = *(_QWORD *)(v10 - 8);
  v5[45] = swift_task_alloc();
  v11 = sub_2212F4B60();
  v5[46] = v11;
  v5[47] = *(_QWORD *)(v11 - 8);
  v5[48] = swift_task_alloc();
  v5[49] = swift_task_alloc();
  v5[50] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B920);
  v5[51] = v12;
  v5[52] = *(_QWORD *)(v12 - 8);
  v5[53] = swift_task_alloc();
  v5[54] = swift_task_alloc();
  v5[55] = swift_task_alloc();
  v13 = sub_2212F4C08();
  v5[56] = v13;
  v5[57] = *(_QWORD *)(v13 - 8);
  v5[58] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[59] = AssociatedTypeWitness;
  v5[60] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[61] = swift_task_alloc();
  v5[62] = *(_QWORD *)(a3 - 8);
  v5[63] = swift_task_alloc();
  v5[64] = swift_task_alloc();
  v5[65] = swift_task_alloc();
  v15 = _s6TaskIDOMa(0, a3, a4, a5);
  v5[66] = v15;
  v5[67] = *(_QWORD *)(v15 - 8);
  v5[68] = swift_task_alloc();
  sub_2212F55F8();
  v5[69] = sub_2212F55EC();
  v5[70] = sub_2212F55D4();
  v5[71] = v16;
  return swift_task_switch();
}

uint64_t sub_2210D8FC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_71_0();
  v1 = v0[68];
  v2 = v0[67];
  v3 = v0[66];
  v4 = v0[33];
  v5 = _s26CollectionTaskViewModifierVMa(0, v0[34], v0[35], v0[36]);
  v0[72] = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(int *)(v5 + 44), v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v7 = v0[68];
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v0[97] = *(_QWORD *)(v7 + 8);
    OUTLINED_FUNCTION_78_2();
    v0[98] = OUTLINED_FUNCTION_74_3();
    v8 = (_QWORD *)swift_task_alloc();
    v0[99] = v8;
    *v8 = v0;
    v8[1] = sub_2210D9DB8;
    OUTLINED_FUNCTION_114_0();
    return sub_2212F4BD8();
  }
  else
  {
    v10 = v0[65];
    v11 = v0[62];
    v12 = v0[34];
    OUTLINED_FUNCTION_148(EnumCaseMultiPayload, v7);
    v13 = sub_2212F570C();
    v14 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    v0[73] = v14;
    v15 = v14(v10, v12);
    if ((v13 & 1) != 0)
    {
      v16 = v0[68];
      v17 = v0[34];
      swift_release();
      v14(v16, v17);
      OUTLINED_FUNCTION_0_26();
      OUTLINED_FUNCTION_52_1();
      OUTLINED_FUNCTION_47_3();
      OUTLINED_FUNCTION_60_1();
      OUTLINED_FUNCTION_63_1();
      OUTLINED_FUNCTION_45_2();
      OUTLINED_FUNCTION_19_12();
      OUTLINED_FUNCTION_13_13();
      OUTLINED_FUNCTION_24_9();
      OUTLINED_FUNCTION_58_1();
      OUTLINED_FUNCTION_69_3();
      OUTLINED_FUNCTION_31_6();
      OUTLINED_FUNCTION_29_7();
      OUTLINED_FUNCTION_27_9();
      OUTLINED_FUNCTION_26_8();
      OUTLINED_FUNCTION_82_2();
      OUTLINED_FUNCTION_80_1();
      v18 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
      return OUTLINED_FUNCTION_14_12(v18);
    }
    else
    {
      OUTLINED_FUNCTION_148(v15, v0[68]);
      if (sub_2212F56E8() == 1)
      {
        v19 = v0[60];
        v20 = v0[61];
        v21 = v0[59];
        v27 = v0[57];
        v28 = v0[56];
        v29 = v0[58];
        v22 = v0[33];
        OUTLINED_FUNCTION_122();
        OUTLINED_FUNCTION_92_1();
        v0[74] = *v23;
        v0[75] = v23[1];
        swift_bridgeObjectRetain();
        OUTLINED_FUNCTION_139();
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
        OUTLINED_FUNCTION_78_2();
        v24 = (void (*)(uint64_t))MEMORY[0x24BDEA038];
        v0[76] = OUTLINED_FUNCTION_74_3();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v29, v22 + *(int *)(v5 + 52), v28);
        sub_221023FE4(&qword_255659D08, v24);
        sub_2212F55D4();
        OUTLINED_FUNCTION_36_4();
        OUTLINED_FUNCTION_33_6();
        OUTLINED_FUNCTION_114_0();
        return swift_task_switch();
      }
      else
      {
        v25 = v0[62];
        OUTLINED_FUNCTION_76_2(v0[64]);
        OUTLINED_FUNCTION_12_21(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32));
        OUTLINED_FUNCTION_78_2();
        v0[86] = OUTLINED_FUNCTION_74_3();
        v26 = (_QWORD *)swift_task_alloc();
        v0[87] = v26;
        *v26 = v0;
        v26[1] = sub_2210D9A3C;
        OUTLINED_FUNCTION_114_0();
        return sub_2212F4BF0();
      }
    }
  }
}

uint64_t sub_2210D92BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[57];
  v1 = v0[58];
  v0[77] = sub_2212F4BE4();
  OUTLINED_FUNCTION_95_0();
  OUTLINED_FUNCTION_15_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210D9324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t (*v14)(uint64_t);

  OUTLINED_FUNCTION_75_3();
  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 576);
  v4 = *(_QWORD *)(v0 + 400);
  v5 = *(_QWORD *)(v0 + 264);
  sub_2210D3720();
  v6 = *(int *)(v3 + 48);
  *(_DWORD *)(v0 + 68) = v6;
  v7 = *(int **)(v5 + v6);
  sub_2212F4B54();
  swift_bridgeObjectRetain();
  sub_2210D6D6C(v4, v2, v1, v0 + 240);
  v8 = *(_QWORD *)(v0 + 240);
  v9 = *(_QWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 624) = v8;
  *(_QWORD *)(v0 + 632) = v9;
  v10 = *(_BYTE *)(v0 + 256);
  *(_QWORD *)(v0 + 168) = v8;
  *(_BYTE *)(v0 + 89) = v10;
  *(_QWORD *)(v0 + 176) = v9;
  *(_BYTE *)(v0 + 184) = v10;
  v14 = (uint64_t (*)(uint64_t))((char *)v7 + *v7);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 640) = v11;
  v12 = OUTLINED_FUNCTION_49_1(v11, (uint64_t)sub_2210D9418);
  return v14(v12);
}

uint64_t sub_2210D9418()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_137();
  v2 = *v0;
  OUTLINED_FUNCTION_53_2(v3);
  OUTLINED_FUNCTION_14_17();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 648) = v4;
  *v4 = v2;
  v4[1] = sub_2210D9484;
  OUTLINED_FUNCTION_90_2();
  return OUTLINED_FUNCTION_4_21();
}

uint64_t sub_2210D9484()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_6_13(v0);
  OUTLINED_FUNCTION_89_0();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210D94B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(void);

  OUTLINED_FUNCTION_71_0();
  if ((*(_BYTE *)(v2 + 66) & 1) != 0)
  {
    OUTLINED_FUNCTION_36_7();
    OUTLINED_FUNCTION_95_0();
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_65_2(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    OUTLINED_FUNCTION_116(v3);
    OUTLINED_FUNCTION_116(v1);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_52_1();
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_19_12();
    OUTLINED_FUNCTION_13_13();
    OUTLINED_FUNCTION_24_9();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_69_3();
    OUTLINED_FUNCTION_31_6();
    OUTLINED_FUNCTION_29_7();
    OUTLINED_FUNCTION_27_9();
    OUTLINED_FUNCTION_26_8();
    OUTLINED_FUNCTION_82_2();
    OUTLINED_FUNCTION_80_1();
    v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
    return OUTLINED_FUNCTION_14_12(v6);
  }
  else
  {
    v8 = *MEMORY[0x24BDE9F50];
    *(_DWORD *)(v2 + 92) = *MEMORY[0x24BDE9F50];
    *(_DWORD *)(v2 + 116) = *MEMORY[0x24BDE9F60];
    *(_DWORD *)(v2 + 140) = *MEMORY[0x24BDE9F58];
    *(_DWORD *)(v2 + 164) = *MEMORY[0x24BDE9F48];
    *(_DWORD *)(v2 + 188) = *MEMORY[0x24BDEA090];
    OUTLINED_FUNCTION_42_6();
    OUTLINED_FUNCTION_12_21(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    v9 = OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88));
    if (v9 == v8)
    {
      v10 = *(_QWORD *)(v2 + 384);
      v11 = *(_QWORD *)(v2 + 376);
      OUTLINED_FUNCTION_15_6(*(_QWORD *)(v2 + 392), *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      OUTLINED_FUNCTION_15_6(v10, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 96));
      v12 = 0;
    }
    else if (v9 == *(_DWORD *)(v2 + 116))
    {
      v13 = *(_QWORD *)(v2 + 384);
      v14 = *(_QWORD *)(v2 + 392);
      v15 = *(_QWORD *)(v2 + 376);
      v17 = *(_QWORD *)(v2 + 352);
      v16 = *(_QWORD *)(v2 + 360);
      OUTLINED_FUNCTION_15_15(v13, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 96));
      OUTLINED_FUNCTION_59_3(v16, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32));
      __swift_instantiateConcreteTypeFromMangledName(&qword_255658AC0);
      v18 = OUTLINED_FUNCTION_68_3();
      *(_OWORD *)(v18 + 16) = xmmword_2212FF8E0;
      OUTLINED_FUNCTION_59_3(v18 + v0, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16));
      OUTLINED_FUNCTION_15_15(v14, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
      OUTLINED_FUNCTION_65_2(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
      v12 = 1;
    }
    else if (v9 == *(_DWORD *)(v2 + 140))
    {
      OUTLINED_FUNCTION_121_0();
      v12 = 2;
    }
    else if (v9 == *(_DWORD *)(v2 + 164))
    {
      OUTLINED_FUNCTION_151();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255658A68);
      v19 = (__n128 *)OUTLINED_FUNCTION_149();
      OUTLINED_FUNCTION_123(v19, (__n128)xmmword_2212FF8E0);
      OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      v12 = 1;
    }
    else
    {
      v21 = *(_QWORD *)(v2 + 384);
      v20 = *(_QWORD *)(v2 + 392);
      OUTLINED_FUNCTION_67_3();
      sub_221023FE4(&qword_255659108, (void (*)(uint64_t))MEMORY[0x24BDEA098]);
      v22 = OUTLINED_FUNCTION_22_8();
      OUTLINED_FUNCTION_9_18(v22, v23);
      OUTLINED_FUNCTION_103_1(v20);
      OUTLINED_FUNCTION_103_1(v21);
      v12 = 0;
    }
    v24 = (_QWORD *)OUTLINED_FUNCTION_26_12(v12);
    *(_QWORD *)(v2 + 672) = v24;
    v25 = OUTLINED_FUNCTION_107(v24, (uint64_t)sub_2210D9750);
    return OUTLINED_FUNCTION_2_21(v25, v26);
  }
}

uint64_t sub_2210D9750()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_137();
  v2 = *v0;
  OUTLINED_FUNCTION_53_2(v3);
  OUTLINED_FUNCTION_14_17();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 680) = v4;
  *v4 = v2;
  v4[1] = sub_2210D97BC;
  OUTLINED_FUNCTION_90_2();
  return OUTLINED_FUNCTION_4_21();
}

uint64_t sub_2210D97BC()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_6_13(v0);
  OUTLINED_FUNCTION_89_0();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210D97F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(void);

  OUTLINED_FUNCTION_71_0();
  if ((*(_BYTE *)(v2 + 66) & 1) != 0)
  {
    OUTLINED_FUNCTION_36_7();
    OUTLINED_FUNCTION_95_0();
    OUTLINED_FUNCTION_63();
    OUTLINED_FUNCTION_65_2(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    OUTLINED_FUNCTION_116(v3);
    OUTLINED_FUNCTION_116(v1);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_52_1();
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_19_12();
    OUTLINED_FUNCTION_13_13();
    OUTLINED_FUNCTION_24_9();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_69_3();
    OUTLINED_FUNCTION_31_6();
    OUTLINED_FUNCTION_29_7();
    OUTLINED_FUNCTION_27_9();
    OUTLINED_FUNCTION_26_8();
    OUTLINED_FUNCTION_82_2();
    OUTLINED_FUNCTION_80_1();
    v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
    return OUTLINED_FUNCTION_14_12(v6);
  }
  else
  {
    v8 = *(_DWORD *)(v2 + 92);
    OUTLINED_FUNCTION_42_6();
    OUTLINED_FUNCTION_12_21(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    v9 = OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88));
    if (v9 == v8)
    {
      v10 = *(_QWORD *)(v2 + 384);
      v11 = *(_QWORD *)(v2 + 376);
      OUTLINED_FUNCTION_15_6(*(_QWORD *)(v2 + 392), *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
      OUTLINED_FUNCTION_15_6(v10, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 96));
      v12 = 0;
    }
    else if (v9 == *(_DWORD *)(v2 + 116))
    {
      v13 = *(_QWORD *)(v2 + 384);
      v14 = *(_QWORD *)(v2 + 392);
      v15 = *(_QWORD *)(v2 + 376);
      v17 = *(_QWORD *)(v2 + 352);
      v16 = *(_QWORD *)(v2 + 360);
      OUTLINED_FUNCTION_15_15(v13, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 96));
      OUTLINED_FUNCTION_59_3(v16, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32));
      __swift_instantiateConcreteTypeFromMangledName(&qword_255658AC0);
      v18 = OUTLINED_FUNCTION_68_3();
      *(_OWORD *)(v18 + 16) = xmmword_2212FF8E0;
      OUTLINED_FUNCTION_59_3(v18 + v0, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16));
      OUTLINED_FUNCTION_15_15(v14, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
      OUTLINED_FUNCTION_65_2(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
      v12 = 1;
    }
    else if (v9 == *(_DWORD *)(v2 + 140))
    {
      OUTLINED_FUNCTION_121_0();
      v12 = 2;
    }
    else if (v9 == *(_DWORD *)(v2 + 164))
    {
      OUTLINED_FUNCTION_151();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255658A68);
      v19 = (__n128 *)OUTLINED_FUNCTION_149();
      OUTLINED_FUNCTION_123(v19, (__n128)xmmword_2212FF8E0);
      OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
      v12 = 1;
    }
    else
    {
      v21 = *(_QWORD *)(v2 + 384);
      v20 = *(_QWORD *)(v2 + 392);
      OUTLINED_FUNCTION_67_3();
      sub_221023FE4(&qword_255659108, (void (*)(uint64_t))MEMORY[0x24BDEA098]);
      v22 = OUTLINED_FUNCTION_22_8();
      OUTLINED_FUNCTION_9_18(v22, v23);
      OUTLINED_FUNCTION_103_1(v20);
      OUTLINED_FUNCTION_103_1(v21);
      v12 = 0;
    }
    v24 = (_QWORD *)OUTLINED_FUNCTION_26_12(v12);
    *(_QWORD *)(v2 + 672) = v24;
    v25 = OUTLINED_FUNCTION_107(v24, (uint64_t)sub_2210D9750);
    return OUTLINED_FUNCTION_2_21(v25, v26);
  }
}

uint64_t sub_2210D9A3C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 704) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_95_0();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210D9A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t (*v11)(void);

  v1 = *(_QWORD *)(v0 + 576);
  v2 = *(_QWORD *)(v0 + 264);
  sub_2210D3720();
  v3 = *(int *)(v1 + 48);
  *(_DWORD *)(v0 + 212) = v3;
  v4 = *(int **)(v2 + v3);
  sub_2210D7084((uint64_t *)(v0 + 96));
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 712) = v5;
  *(_QWORD *)(v0 + 720) = v6;
  v7 = *(_BYTE *)(v0 + 112);
  *(_QWORD *)(v0 + 120) = v5;
  *(_BYTE *)(v0 + 91) = v7;
  *(_QWORD *)(v0 + 128) = v6;
  *(_BYTE *)(v0 + 136) = v7;
  v11 = (uint64_t (*)(void))((char *)v4 + *v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 728) = v8;
  v9 = OUTLINED_FUNCTION_49_1(v8, (uint64_t)sub_2210D9B5C);
  return OUTLINED_FUNCTION_12_18(v9, v11);
}

uint64_t sub_2210D9B5C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_136();
  v2 = *v0;
  OUTLINED_FUNCTION_53_2(v3);
  OUTLINED_FUNCTION_14_17();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 736) = v4;
  *v4 = v2;
  v4[1] = sub_2210D9BC8;
  OUTLINED_FUNCTION_90_2();
  return OUTLINED_FUNCTION_4_21();
}

uint64_t sub_2210D9BC8()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_6_13(v0);
  OUTLINED_FUNCTION_89_0();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210D9BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(void);

  OUTLINED_FUNCTION_71_0();
  if ((*(_BYTE *)(v0 + 67) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 504);
    v2 = *(_QWORD *)(v0 + 432);
    v3 = *(_QWORD *)(v0 + 416);
    swift_release();
    OUTLINED_FUNCTION_95_0();
    OUTLINED_FUNCTION_15_15(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    OUTLINED_FUNCTION_76_2(v1);
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_52_1();
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_19_12();
    OUTLINED_FUNCTION_13_13();
    OUTLINED_FUNCTION_24_9();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_69_3();
    OUTLINED_FUNCTION_31_6();
    OUTLINED_FUNCTION_29_7();
    OUTLINED_FUNCTION_27_9();
    OUTLINED_FUNCTION_26_8();
    OUTLINED_FUNCTION_82_2();
    OUTLINED_FUNCTION_80_1();
    v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
    return OUTLINED_FUNCTION_14_12(v4);
  }
  else
  {
    v6 = *(int **)(*(_QWORD *)(v0 + 264) + *(int *)(v0 + 212));
    sub_2210D7084((uint64_t *)(v0 + 48));
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 744) = v7;
    *(_QWORD *)(v0 + 752) = v8;
    v9 = *(_BYTE *)(v0 + 64);
    *(_QWORD *)(v0 + 192) = v7;
    *(_BYTE *)(v0 + 113) = v9;
    *(_QWORD *)(v0 + 200) = v8;
    *(_BYTE *)(v0 + 208) = v9;
    v12 = (uint64_t (*)(void))((char *)v6 + *v6);
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 760) = v10;
    v11 = OUTLINED_FUNCTION_49_1(v10, (uint64_t)sub_2210D9D18);
    return OUTLINED_FUNCTION_2_21(v11, v12);
  }
}

uint64_t sub_2210D9D18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_136();
  v2 = *v0;
  OUTLINED_FUNCTION_53_2(v3);
  OUTLINED_FUNCTION_14_17();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 768) = v4;
  *v4 = v2;
  v4[1] = sub_2210D9D84;
  OUTLINED_FUNCTION_90_2();
  return OUTLINED_FUNCTION_4_21();
}

uint64_t sub_2210D9D84()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_6_13(v0);
  OUTLINED_FUNCTION_89_0();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210D9DB8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 800) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_95_0();
  return swift_task_switch();
}

uint64_t sub_2210D9E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v8)(uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v27)(uint64_t);

  v1 = *(_QWORD *)(v0 + 800);
  v2 = *(_QWORD *)(v0 + 576);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = *(_QWORD *)(v0 + 264);
  sub_2210D3720();
  v5 = *(int *)(v2 + 48);
  *(_DWORD *)(v0 + 236) = v5;
  v6 = *(int **)(v4 + v5);
  sub_2212F4BB4();
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 808) = v7;
  OUTLINED_FUNCTION_12_21(v7);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 88);
  *(_QWORD *)(v0 + 816) = v8;
  v9 = OUTLINED_FUNCTION_31_8(v8);
  v10 = *MEMORY[0x24BDE9FE0];
  *(_DWORD *)(v0 + 260) = *MEMORY[0x24BDE9FE0];
  if (v9 == v10)
  {
    v11 = *(uint64_t **)(v0 + 328);
    v12 = *(_QWORD *)(v0 + 304);
    v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v13(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 296));
    OUTLINED_FUNCTION_15_6((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 96));
    v14 = 0;
    v15 = 0;
    v1 = *v11;
  }
  else if (v9 == *MEMORY[0x24BDE9FF0])
  {
    v16 = *(uint64_t **)(v0 + 328);
    v17 = *(_QWORD *)(v0 + 336);
    v18 = *(_QWORD *)(v0 + 296);
    v19 = *(_QWORD *)(v0 + 304);
    OUTLINED_FUNCTION_15_15((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 96));
    v1 = *v16;
    v13 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v13(v17, v18);
    v15 = 1;
    v14 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 336);
    if (v9 == *MEMORY[0x24BDE9FE8])
    {
      v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 304) + 8);
      v13(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 296));
      OUTLINED_FUNCTION_112_0();
    }
    else
    {
      v21 = *(_QWORD *)(v0 + 328);
      v22 = *(_QWORD *)(v0 + 304);
      v23 = OUTLINED_FUNCTION_67_3();
      sub_221023FE4(&qword_255659108, (void (*)(uint64_t))MEMORY[0x24BDEA098]);
      v1 = OUTLINED_FUNCTION_31_4();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v24, *MEMORY[0x24BDEA090], v23);
      v13 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      OUTLINED_FUNCTION_76_2(v20);
      OUTLINED_FUNCTION_76_2(v21);
      v14 = 0;
      v15 = 0;
    }
  }
  *(_BYTE *)(v0 + 114) = v15;
  *(_QWORD *)(v0 + 840) = v14;
  *(_QWORD *)(v0 + 832) = v1;
  *(_QWORD *)(v0 + 216) = v1;
  *(_QWORD *)(v0 + 824) = v13;
  *(_QWORD *)(v0 + 224) = v14;
  *(_BYTE *)(v0 + 232) = v15;
  v27 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 848) = v25;
  *v25 = v0;
  v25[1] = sub_2210DA060;
  return v27(v0 + 216);
}

uint64_t sub_2210DA060()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_138();
  v2 = *v0;
  OUTLINED_FUNCTION_53_2(v3);
  OUTLINED_FUNCTION_14_17();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 856) = v4;
  *v4 = v2;
  v4[1] = sub_2210DA0CC;
  OUTLINED_FUNCTION_90_2();
  return OUTLINED_FUNCTION_4_21();
}

uint64_t sub_2210DA0CC()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_6_13(v0);
  OUTLINED_FUNCTION_89_0();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210DA100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  void (*v8)(uint64_t, uint64_t);
  int v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t (*v23)(void);

  OUTLINED_FUNCTION_71_0();
  if ((*(_BYTE *)(v3 + 65) & 1) != 0)
  {
    OUTLINED_FUNCTION_96_2();
    OUTLINED_FUNCTION_95_0();
    OUTLINED_FUNCTION_15_6(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_52_1();
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_19_12();
    OUTLINED_FUNCTION_13_13();
    OUTLINED_FUNCTION_24_9();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_69_3();
    OUTLINED_FUNCTION_31_6();
    OUTLINED_FUNCTION_29_7();
    OUTLINED_FUNCTION_27_9();
    OUTLINED_FUNCTION_26_8();
    OUTLINED_FUNCTION_82_2();
    OUTLINED_FUNCTION_80_1();
    v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
    return OUTLINED_FUNCTION_14_12(v6);
  }
  else
  {
    *(_DWORD *)(v3 + 920) = *MEMORY[0x24BDE9FF0];
    *(_DWORD *)(v3 + 924) = *MEMORY[0x24BDE9FE8];
    *(_DWORD *)(v3 + 928) = *MEMORY[0x24BDEA090];
    v8 = *(void (**)(uint64_t, uint64_t))(v3 + 824);
    v9 = *(_DWORD *)(v3 + 260);
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 816);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 808);
    OUTLINED_FUNCTION_88_2();
    OUTLINED_FUNCTION_126();
    v11(v4, v2, v5);
    v12 = v10(v4, v5);
    if (v12 == v9)
    {
      v1 = *(_QWORD *)(v3 + 312);
      v13 = *(_QWORD *)(v3 + 304);
      OUTLINED_FUNCTION_15_6(*(_QWORD *)(v3 + 320), *(uint64_t (**)(uint64_t, uint64_t))(v3 + 824));
      OUTLINED_FUNCTION_15_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 96));
      OUTLINED_FUNCTION_143();
    }
    else if (v12 == *(_DWORD *)(v3 + 920))
    {
      v1 = *(_QWORD *)(v3 + 312);
      OUTLINED_FUNCTION_15_15(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 304) + 96));
      OUTLINED_FUNCTION_101_2();
      v14 = 1;
      v15 = MEMORY[0x24BEE4AF8];
    }
    else if (v12 == *(_DWORD *)(v3 + 924))
    {
      v8(*(_QWORD *)(v3 + 320), *(_QWORD *)(v3 + 296));
      OUTLINED_FUNCTION_112_0();
    }
    else
    {
      v17 = *(_QWORD *)(v3 + 312);
      v16 = *(_QWORD *)(v3 + 320);
      v18 = *(_QWORD *)(v3 + 296);
      OUTLINED_FUNCTION_67_3();
      sub_221023FE4(&qword_255659108, (void (*)(uint64_t))MEMORY[0x24BDEA098]);
      v19 = OUTLINED_FUNCTION_22_8();
      OUTLINED_FUNCTION_9_18(v19, v20);
      v8(v16, v18);
      v8(v17, v18);
      v15 = 0;
      v14 = 0;
    }
    *(_BYTE *)(v3 + 115) = v14;
    *(_QWORD *)(v3 + 896) = v15;
    *(_QWORD *)(v3 + 888) = v1;
    *(_QWORD *)(v3 + 880) = v8;
    *(_QWORD *)(v3 + 872) = v8;
    OUTLINED_FUNCTION_113_0(v14);
    v21 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 904) = v21;
    v22 = OUTLINED_FUNCTION_131(v21, (uint64_t)sub_2210DA308);
    return OUTLINED_FUNCTION_2_21(v22, v23);
  }
}

uint64_t sub_2210DA308()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_138();
  v2 = *v0;
  OUTLINED_FUNCTION_53_2(v3);
  OUTLINED_FUNCTION_14_17();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 912) = v4;
  *v4 = v2;
  v4[1] = sub_2210DA374;
  OUTLINED_FUNCTION_90_2();
  return OUTLINED_FUNCTION_4_21();
}

uint64_t sub_2210DA374()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_6_13(v0);
  OUTLINED_FUNCTION_89_0();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210DA3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  void (*v8)(_QWORD, _QWORD);
  void (*v9)(_QWORD, _QWORD);
  int v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t, uint64_t);
  void (*v13)(_QWORD, _QWORD);
  int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD);
  _QWORD *v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_QWORD, _QWORD);

  OUTLINED_FUNCTION_71_0();
  if ((*(_BYTE *)(v3 + 65) & 1) != 0)
  {
    OUTLINED_FUNCTION_96_2();
    OUTLINED_FUNCTION_95_0();
    OUTLINED_FUNCTION_15_6(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_52_1();
    OUTLINED_FUNCTION_47_3();
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_45_2();
    OUTLINED_FUNCTION_19_12();
    OUTLINED_FUNCTION_13_13();
    OUTLINED_FUNCTION_24_9();
    OUTLINED_FUNCTION_58_1();
    OUTLINED_FUNCTION_69_3();
    OUTLINED_FUNCTION_31_6();
    OUTLINED_FUNCTION_29_7();
    OUTLINED_FUNCTION_27_9();
    OUTLINED_FUNCTION_26_8();
    OUTLINED_FUNCTION_82_2();
    OUTLINED_FUNCTION_80_1();
    v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_27_10();
    return OUTLINED_FUNCTION_14_12(v6);
  }
  v8 = *(void (**)(_QWORD, _QWORD))(v3 + 880);
  v9 = *(void (**)(_QWORD, _QWORD))(v3 + 864);
  v10 = *(_DWORD *)(v3 + 260);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 816);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 808);
  OUTLINED_FUNCTION_88_2();
  v26 = v13;
  OUTLINED_FUNCTION_126();
  v12(v4, v2, v5);
  v14 = v11(v4, v5);
  if (v14 == v10)
  {
    v1 = *(_QWORD *)(v3 + 312);
    v15 = *(_QWORD *)(v3 + 304);
    OUTLINED_FUNCTION_15_6(*(_QWORD *)(v3 + 320), *(uint64_t (**)(uint64_t, uint64_t))(v3 + 824));
    OUTLINED_FUNCTION_15_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 96));
    OUTLINED_FUNCTION_143();
  }
  else
  {
    if (v14 != *(_DWORD *)(v3 + 920))
    {
      if (v14 == *(_DWORD *)(v3 + 924))
      {
        v18 = v26;
        v26(*(_QWORD *)(v3 + 320), *(_QWORD *)(v3 + 296));
        OUTLINED_FUNCTION_112_0();
        v8 = v26;
      }
      else
      {
        v22 = *(_QWORD *)(v3 + 312);
        v23 = *(_QWORD *)(v3 + 320);
        OUTLINED_FUNCTION_67_3();
        sub_221023FE4(&qword_255659108, (void (*)(uint64_t))MEMORY[0x24BDEA098]);
        v24 = OUTLINED_FUNCTION_22_8();
        OUTLINED_FUNCTION_9_18(v24, v25);
        OUTLINED_FUNCTION_76_2(v23);
        OUTLINED_FUNCTION_76_2(v22);
        v17 = 0;
        v16 = 0;
        v18 = v26;
      }
      goto LABEL_8;
    }
    v1 = *(_QWORD *)(v3 + 312);
    OUTLINED_FUNCTION_15_15(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 304) + 96));
    OUTLINED_FUNCTION_101_2();
    v16 = 1;
    v17 = MEMORY[0x24BEE4AF8];
  }
  v18 = v9;
  v8 = v9;
LABEL_8:
  *(_BYTE *)(v3 + 115) = v16;
  *(_QWORD *)(v3 + 896) = v17;
  *(_QWORD *)(v3 + 888) = v1;
  *(_QWORD *)(v3 + 880) = v8;
  *(_QWORD *)(v3 + 872) = v18;
  OUTLINED_FUNCTION_113_0(v16);
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 904) = v19;
  v20 = OUTLINED_FUNCTION_131(v19, (uint64_t)sub_2210DA308);
  return OUTLINED_FUNCTION_2_21(v20, v21);
}

uint64_t sub_2210DA59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v19;

  v8 = _s26CollectionTaskViewModifierVMa(0, a2, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212F5604();
  v15 = sub_2212F5640();
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = 0;
  *((_QWORD *)v17 + 3) = 0;
  *((_QWORD *)v17 + 4) = a2;
  *((_QWORD *)v17 + 5) = a3;
  *((_QWORD *)v17 + 6) = a4;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v17[v16], v11, v8);
  sub_2210ECBB8((uint64_t)v14, (uint64_t)&unk_25565B970, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_2210DA6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;

  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v11 = sub_2212F4C08();
  v7[10] = v11;
  v7[11] = *(_QWORD *)(v11 - 8);
  v7[12] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[13] = AssociatedTypeWitness;
  v7[14] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7[15] = swift_task_alloc();
  v7[16] = *(_QWORD *)(a5 - 8);
  v7[17] = swift_task_alloc();
  v7[18] = swift_task_alloc();
  v13 = _s6TaskIDOMa(0, a5, a6, a7);
  v7[19] = v13;
  v7[20] = *(_QWORD *)(v13 - 8);
  v7[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2210DA804()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v0[20];
  v1 = v0[21];
  v4 = v0[8];
  v3 = v0[9];
  v5 = v0[6];
  v6 = v0[7];
  OUTLINED_FUNCTION_78_2();
  v0[22] = OUTLINED_FUNCTION_74_3();
  v7 = _s26CollectionTaskViewModifierVMa(0, v6, v4, v3);
  OUTLINED_FUNCTION_59_3(v1, v5 + *(int *)(v7 + 44), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v9 = (_QWORD *)v0[21];
  if (EnumCaseMultiPayload == 1)
  {
    v11 = v0[11];
    v10 = v0[12];
    v12 = v0[10];
    v13 = v0[6];
    v0[26] = *v9;
    v0[27] = v9[1];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v13 + *(int *)(v7 + 52), v12);
    sub_221023FE4(&qword_255659D08, (void (*)(uint64_t))MEMORY[0x24BDEA038]);
    sub_2212F55D4();
    OUTLINED_FUNCTION_36_4();
  }
  else
  {
    OUTLINED_FUNCTION_59_3(v0[18], (uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[16] + 16));
    v14 = sub_2212F56E8();
    v15 = v0[18];
    if (v14 == 1)
    {
      v16 = v0[14];
      v17 = v0[15];
      v18 = v0[12];
      v30 = v0[13];
      v31 = v0[11];
      v32 = v0[10];
      v19 = v0[6];
      OUTLINED_FUNCTION_122();
      OUTLINED_FUNCTION_92_1();
      v0[23] = *v20;
      v0[24] = v20[1];
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_139();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v30);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v18, v19 + *(int *)(v7 + 52), v32);
    }
    else
    {
      v21 = v0[21];
      v22 = v0[16];
      v23 = v0[17];
      v25 = v0[11];
      v24 = v0[12];
      v33 = v0[10];
      v26 = v0[6];
      v27 = v0[7];
      v28 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v0[25] = v28;
      v28(v15, v27);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v23, v21, v27);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v24, v26 + *(int *)(v7 + 52), v33);
    }
    sub_221023FE4(&qword_255659D08, (void (*)(uint64_t))MEMORY[0x24BDEA038]);
    OUTLINED_FUNCTION_145();
    OUTLINED_FUNCTION_36_4();
  }
  OUTLINED_FUNCTION_33_6();
  OUTLINED_FUNCTION_105();
  return swift_task_switch();
}

uint64_t sub_2210DAA64()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_115_0();
  sub_2212F4B78();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_15_15(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return OUTLINED_FUNCTION_3_11();
}

uint64_t sub_2210DAAB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 56);
  swift_release();
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v2, v4);
  v5(v1, v4);
  OUTLINED_FUNCTION_43_5();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  return OUTLINED_FUNCTION_8_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2210DAB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  sub_2212F4B84();
  OUTLINED_FUNCTION_15_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210DAB78()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release();
  v1(v2, v3);
  OUTLINED_FUNCTION_43_5();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  return OUTLINED_FUNCTION_8_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2210DABD0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_115_0();
  sub_2212F4B6C();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_15_15(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return OUTLINED_FUNCTION_3_11();
}

uint64_t sub_2210DAC1C()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_43_5();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  return OUTLINED_FUNCTION_8_13(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2210DAC60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210DAC70()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2210DAC7C()
{
  uint64_t v0;
  uint64_t v1;

  _s16TaskViewModifierVMa(0);
  v0 = OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_5_3(v0);
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_106();
  v1 = OUTLINED_FUNCTION_27_12();
  OUTLINED_FUNCTION_4_4(v1);
  OUTLINED_FUNCTION_85_1();
  return OUTLINED_FUNCTION_7_12();
}

uint64_t sub_2210DACF0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  _s16TaskViewModifierVMa(0);
  OUTLINED_FUNCTION_152();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_49_1(v1, (uint64_t)sub_221084A38);
  return sub_2210D790C(v2);
}

uint64_t sub_2210DAD48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_19_6(v0);
  v2 = OUTLINED_FUNCTION_157(v1);
  return sub_2210D7E4C(v2, v3);
}

uint64_t sub_2210DAD90()
{
  uint64_t v0;

  return sub_2210D85F8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2210DAD98()
{
  uint64_t v0;
  uint64_t v1;

  _s16TaskViewModifierVMa(0);
  swift_unknownObjectRelease();
  v0 = OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_5_3(v0);
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_106();
  v1 = OUTLINED_FUNCTION_27_12();
  OUTLINED_FUNCTION_4_4(v1);
  OUTLINED_FUNCTION_85_1();
  return OUTLINED_FUNCTION_7_12();
}

uint64_t sub_2210DAE14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  _s16TaskViewModifierVMa(0);
  OUTLINED_FUNCTION_152();
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = swift_task_alloc();
  v9 = (_QWORD *)OUTLINED_FUNCTION_19_6(v8);
  *v9 = v2;
  v9[1] = sub_2210DB31C;
  return sub_2210D8720(a1, v5, v6, v7);
}

uint64_t sub_2210DAE90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_8_0();
  v3 = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_127(0, v3);
  v4 = (v2 + 40) & ~v2;
  v5 = OUTLINED_FUNCTION_72_0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v1 + v4, v5);
  v6 = v1 + v4 + *(int *)(v0 + 44);
  if (OUTLINED_FUNCTION_102_1(0, v3) == 1)
    swift_bridgeObjectRelease();
  else
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v6, v3);
  OUTLINED_FUNCTION_106();
  v7 = OUTLINED_FUNCTION_27_12();
  OUTLINED_FUNCTION_16_0(v7);
  return OUTLINED_FUNCTION_39_5();
}

uint64_t sub_2210DAF54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  _s26CollectionTaskViewModifierVMa(0, v2, v3, v4);
  OUTLINED_FUNCTION_152();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  v6 = OUTLINED_FUNCTION_49_1(v5, (uint64_t)sub_2210DB31C);
  return sub_2210D8BB0(v6, v2, v3, v4);
}

uint64_t sub_2210DAFD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_40();
  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_19_6(v4);
  v6 = OUTLINED_FUNCTION_157(v5);
  return sub_2210D8D68(v6, v7, v1, v2, v3);
}

uint64_t sub_2210DB038()
{
  uint64_t *v0;

  return sub_2210DA59C(v0[5], v0[2], v0[3], v0[4]);
}

uint64_t sub_2210DB044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_8_0();
  v3 = *(_QWORD *)(v1 + 32);
  OUTLINED_FUNCTION_127(0, v3);
  v4 = (v2 + 56) & ~v2;
  swift_unknownObjectRelease();
  v5 = OUTLINED_FUNCTION_72_0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v1 + v4, v5);
  v6 = v1 + v4 + *(int *)(v0 + 44);
  if (OUTLINED_FUNCTION_102_1(0, v3) == 1)
    swift_bridgeObjectRelease();
  else
    OUTLINED_FUNCTION_15_6(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  OUTLINED_FUNCTION_106();
  v7 = OUTLINED_FUNCTION_27_12();
  OUTLINED_FUNCTION_16_0(v7);
  return OUTLINED_FUNCTION_39_5();
}

uint64_t sub_2210DB10C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  OUTLINED_FUNCTION_75_3();
  v3 = v2;
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  _s26CollectionTaskViewModifierVMa(0, v4, v5, v6);
  OUTLINED_FUNCTION_152();
  v8 = v0[2];
  v9 = v0[3];
  v10 = (uint64_t)v0 + ((v7 + 56) & ~v7);
  v11 = swift_task_alloc();
  v12 = (_QWORD *)OUTLINED_FUNCTION_19_6(v11);
  *v12 = v1;
  v12[1] = sub_2210DB31C;
  return sub_2210DA6EC(v3, v8, v9, v10, v4, v5, v6);
}

unint64_t sub_2210DB1B4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_25565B988;
  if (!qword_25565B988)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565B8F0);
    sub_221024548(&qword_25565B990, &qword_25565B8F8);
    v3 = v2;
    sub_221024548(qword_255659D88, &qword_255659CC0);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25565B988);
  }
  return result;
}

void sub_2210DB250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = OUTLINED_FUNCTION_135();
  v4 = _s26CollectionTaskViewModifierVMa(v0, v1, v2, v3);
  MEMORY[0x22766BAC4](&unk_221304588, v4);
  sub_2212F3B4C();
  v5 = OUTLINED_FUNCTION_135();
  _s6TaskIDOMa(v5, v6, v7, v8);
  OUTLINED_FUNCTION_5_2();
}

void sub_2210DB2B4()
{
  uint64_t v0;

  sub_2212F38B8();
  sub_2212F3348();
  MEMORY[0x22766BAC4](MEMORY[0x24BDEFB78], v0);
  OUTLINED_FUNCTION_5_2();
}

void sub_2210DB2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  a9 = v11;
  a10 = a1;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v10, &a9);
  OUTLINED_FUNCTION_16_13();
}

uint64_t OUTLINED_FUNCTION_0_26()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_2_21(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_4_21()
{
  return sub_2212F2C70();
}

uint64_t OUTLINED_FUNCTION_8_13(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_9_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_11_20()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[4] + 8))(v0[6], v0[3]);
}

uint64_t OUTLINED_FUNCTION_12_21@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v1, v3);
}

void OUTLINED_FUNCTION_14_17()
{
  uint64_t v0;
  void *v1;
  char v2;

  sub_2210D43FC(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_18_16()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[4] + 8))(v0[6], v0[3]);
}

uint64_t OUTLINED_FUNCTION_22_8()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_24_12()
{
  return sub_2212F5640();
}

uint64_t OUTLINED_FUNCTION_26_12@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 90) = a1;
  *(_QWORD *)(v3 + 664) = v2;
  *(_QWORD *)(v3 + 144) = v1;
  *(_QWORD *)(v3 + 656) = v1;
  *(_QWORD *)(v3 + 152) = v2;
  *(_BYTE *)(v3 + 160) = a1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_27_12()
{
  return sub_2212F4C08();
}

void OUTLINED_FUNCTION_30_11()
{
  JUMPOUT(0x227669B20);
}

uint64_t OUTLINED_FUNCTION_31_8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_32_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_33_8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_34_6(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_36_7()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_38_6()
{
  return sub_2212F4C14();
}

uint64_t OUTLINED_FUNCTION_39_5()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_42_6()
{
  return sub_2212F4B54();
}

uint64_t OUTLINED_FUNCTION_43_5()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_45_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_46_4()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_49_1@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_53_2@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_57_3()
{
  return sub_2212F4B54();
}

uint64_t OUTLINED_FUNCTION_59_3@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_60_3()
{
  return sub_2212F2C70();
}

void OUTLINED_FUNCTION_63_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v8 - 96) = a7;
  *(_QWORD *)(v8 - 88) = v7;
}

uint64_t OUTLINED_FUNCTION_65_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_66_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_67_3()
{
  return sub_2212F4C14();
}

uint64_t OUTLINED_FUNCTION_68_3()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_69_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_71_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_73_3(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_74_3()
{
  return sub_2212F4BCC();
}

uint64_t OUTLINED_FUNCTION_76_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_78_2()
{
  return sub_2212F4BFC();
}

uint64_t OUTLINED_FUNCTION_79_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4 + *(int *)(a1 + 28), v2);
}

uint64_t OUTLINED_FUNCTION_80_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_82_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_85_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_221017894(*(_QWORD *)(v2 + *(int *)(v0 + 32)), *(_BYTE *)(v2 + *(int *)(v0 + 32) + 8));
  return v1;
}

uint64_t OUTLINED_FUNCTION_86_1@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 80);
}

uint64_t OUTLINED_FUNCTION_90_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_92_1()
{
  return sub_2212F57A8();
}

uint64_t OUTLINED_FUNCTION_96_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_97_2()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_98_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_99_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_101_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_102_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  _s6TaskIDOMa(a1, a2, v2, v3);
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_103_1(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

_QWORD *OUTLINED_FUNCTION_104_0()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  return v0;
}

uint64_t OUTLINED_FUNCTION_106()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_107@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_108(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)v1 = a1;
  *(_BYTE *)(v1 + 8) = 0;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_110_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *(int *)(v1 + 24));
  *v4 = v3;
  v4[1] = v0;
}

void OUTLINED_FUNCTION_113_0(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 72) = v2;
  *(_QWORD *)(v3 + 864) = v4;
  *(_QWORD *)(v3 + 80) = v1;
  *(_BYTE *)(v3 + 88) = a1;
}

uint64_t OUTLINED_FUNCTION_116(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_117_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_121_0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[47] + 8))(v0[49], v0[46]);
}

uint64_t OUTLINED_FUNCTION_122()
{
  return sub_2212F56D0();
}

uint64_t OUTLINED_FUNCTION_123(__n128 *a1, __n128 a2)
{
  unint64_t v2;
  unint64_t v3;

  a1[1] = a2;
  a1[2].n128_u64[0] = v3;
  a1[2].n128_u64[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_124()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_126()
{
  return sub_2212F4BB4();
}

uint64_t OUTLINED_FUNCTION_127(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return _s26CollectionTaskViewModifierVMa(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_129()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_130()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_131@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_133()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_135()
{
  return 255;
}

void OUTLINED_FUNCTION_136()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void OUTLINED_FUNCTION_137()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void OUTLINED_FUNCTION_138()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_139()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1, 0);
}

uint64_t OUTLINED_FUNCTION_140@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_142(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_144()
{
  return sub_2212F55D4();
}

uint64_t OUTLINED_FUNCTION_145()
{
  return sub_2212F55D4();
}

uint64_t OUTLINED_FUNCTION_148(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_149()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_150(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  sub_221084A7C(v10, a10, a3);
}

uint64_t OUTLINED_FUNCTION_155()
{
  return sub_22105F158();
}

uint64_t OUTLINED_FUNCTION_156()
{
  return sub_22105F190();
}

uint64_t OUTLINED_FUNCTION_157(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t SubscriptionStorePickerStyleItemConfiguration.base.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2210DBB34(v1, a1);
}

uint64_t sub_2210DBB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B998);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SubscriptionStorePickerStyleItemConfiguration.subscription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_2212F51B4();
  v0 = OUTLINED_FUNCTION_24_6();
  return OUTLINED_FUNCTION_18_7(v0, v1, v2, v3);
}

uint64_t SubscriptionStorePickerStyleItemConfiguration.subscriptionInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  __swift_instantiateConcreteTypeFromMangledName(&qword_25565B998);
  sub_2212F4FEC();
  v0 = OUTLINED_FUNCTION_24_6();
  return OUTLINED_FUNCTION_18_7(v0, v1, v2, v3);
}

uint64_t SubscriptionStorePickerStyleItemConfiguration.availableOptions.getter()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t SubscriptionStorePickerStyleItemConfiguration.currentOption.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657DB8);
  return OUTLINED_FUNCTION_22(a1, 1, 1, v2);
}

uint64_t sub_2210DBC64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210DBC74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210DBC84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of SubscriptionStorePickerStyle.makePickerItem(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SubscriptionStorePickerStyle.configureSubscribeButton(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

char *initializeBufferWithCopyOfBuffer for SubscriptionStorePickerStyleItemConfiguration(char *a1, char *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v25)(char *, char *, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B998);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_2212F51B4();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v25(a1, a2, v7);
    v8 = v6[9];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_2212F4FEC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v13 = v6[10];
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = sub_2212F50D0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    *(_QWORD *)&a1[v6[11]] = *(_QWORD *)&a2[v6[11]];
    v19 = v6[12];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = type metadata accessor for SubscriptionItemBaseConfigurationCurrentOption();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25(v20, v21, v7);
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657DE0);
      v12(&v20[*(int *)(v23 + 48)], &v21[*(int *)(v23 + 48)], v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    a1[v6[13]] = a2[v6[13]];
  }
  return a1;
}

uint64_t destroy for SubscriptionStorePickerStyleItemConfiguration(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v2 = sub_2212F51B4();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(a1, v2);
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25565B998);
  v5 = a1 + v4[9];
  v6 = sub_2212F4FEC();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v12(v5, v6);
  v7 = a1 + v4[10];
  v8 = sub_2212F50D0();
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v9 = a1 + v4[12];
  type metadata accessor for SubscriptionItemBaseConfigurationCurrentOption();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3(v9, v2);
    v11 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255657DE0) + 48);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v6);
  }
  return result;
}

uint64_t initializeWithCopy for SubscriptionStorePickerStyleItemConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v22)(uint64_t, uint64_t, uint64_t);

  v4 = sub_2212F51B4();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v22(a1, a2, v4);
  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25565B998);
  v6 = v5[9];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2212F4FEC();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = v5[10];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_2212F50D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  v16 = v5[12];
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = type metadata accessor for SubscriptionItemBaseConfigurationCurrentOption();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22((uint64_t)v17, (uint64_t)v18, v4);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657DE0);
    v10((uint64_t)&v17[*(int *)(v20 + 48)], (uint64_t)&v18[*(int *)(v20 + 48)], v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  *(_BYTE *)(a1 + v5[13]) = *(_BYTE *)(a2 + v5[13]);
  return a1;
}

uint64_t assignWithCopy for SubscriptionStorePickerStyleItemConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v4 = sub_2212F51B4();
  v25 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 24))(a1, a2, v4);
  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25565B998);
  v6 = v5[9];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2212F4FEC();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v7, v8, v9);
  v11 = v5[10];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_2212F50D0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v17 = *(_QWORD *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
LABEL_7:
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v19 = v5[12];
    v20 = (char *)(a1 + v19);
    v21 = (char *)(a2 + v19);
    sub_221052EAC(a1 + v19);
    v22 = type metadata accessor for SubscriptionItemBaseConfigurationCurrentOption();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v20, v21, v4);
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657DE0);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&v20[*(int *)(v23 + 48)], &v21[*(int *)(v23 + 48)], v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
  }
  *(_BYTE *)(a1 + v5[13]) = *(_BYTE *)(a2 + v5[13]);
  return a1;
}

uint64_t initializeWithTake for SubscriptionStorePickerStyleItemConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = sub_2212F51B4();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25565B998);
  v7 = v6[9];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2212F4FEC();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = v6[10];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_2212F50D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  *(_QWORD *)(a1 + v6[11]) = *(_QWORD *)(a2 + v6[11]);
  v17 = v6[12];
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = type metadata accessor for SubscriptionItemBaseConfigurationCurrentOption();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5((uint64_t)v18, (uint64_t)v19, v4);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657DE0);
    v11((uint64_t)&v18[*(int *)(v21 + 48)], (uint64_t)&v19[*(int *)(v21 + 48)], v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
  return a1;
}

uint64_t assignWithTake for SubscriptionStorePickerStyleItemConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v4 = sub_2212F51B4();
  v25 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 40))(a1, a2, v4);
  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25565B998);
  v6 = v5[9];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2212F4FEC();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v7, v8, v9);
  v11 = v5[10];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_2212F50D0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v17 = *(_QWORD *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v12, v13, v14);
LABEL_7:
  *(_QWORD *)(a1 + v5[11]) = *(_QWORD *)(a2 + v5[11]);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v19 = v5[12];
    v20 = (char *)(a1 + v19);
    v21 = (char *)(a2 + v19);
    sub_221052EAC(a1 + v19);
    v22 = type metadata accessor for SubscriptionItemBaseConfigurationCurrentOption();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v20, v21, v4);
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657DE0);
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v20[*(int *)(v23 + 48)], &v21[*(int *)(v23 + 48)], v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
  }
  *(_BYTE *)(a1 + v5[13]) = *(_BYTE *)(a2 + v5[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStorePickerStyleItemConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210DC80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B998);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStorePickerStyleItemConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210DC850(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565B998);
  return OUTLINED_FUNCTION_22(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SubscriptionStorePickerStyleItemConfiguration()
{
  uint64_t result;

  result = qword_25565BA48;
  if (!qword_25565BA48)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2210DC8C0()
{
  unint64_t v0;

  sub_2210DC928(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2210DC928(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_25565BA58)
  {
    v2 = sub_2210DC980();
    v4 = type metadata accessor for SubscriptionItemBaseConfiguration(a1, (uint64_t)&type metadata for SubscriptionStorePickerStyleItemConfiguration.Icon, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_25565BA58);
  }
}

unint64_t sub_2210DC980()
{
  unint64_t result;

  result = qword_25565BA60;
  if (!qword_25565BA60)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for SubscriptionStorePickerStyleItemConfiguration.Icon, &type metadata for SubscriptionStorePickerStyleItemConfiguration.Icon);
    atomic_store(result, (unint64_t *)&qword_25565BA60);
  }
  return result;
}

void type metadata accessor for SubscriptionStorePickerStyleItemConfiguration.Icon()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for SubscriptionStorePickerStyleButtonConfiguration()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for DefaultSubscriptionStorePickerStyle()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for ProminentSubscriptionStorePickerStyle()
{
  OUTLINED_FUNCTION_31_2();
}

uint64_t sub_2210DC9EC()
{
  return MEMORY[0x24BDF5138];
}

uint64_t sub_2210DC9F8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

void sub_2210DCA08()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_16_15();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210DCA24()
{
  OUTLINED_FUNCTION_11_21();
  OUTLINED_FUNCTION_6_0();
}

uint64_t CompactPickerSubscriptionStoreControlStyle.Placement.rawValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22106040C(v1, a1);
}

__n128 CompactPickerSubscriptionStoreControlStyle.Placement.init(rawValue:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  return result;
}

void static CompactPickerSubscriptionStoreControlStyle.Placement.automatic.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &unk_24E6F7D30;
  *(_QWORD *)(a1 + 32) = sub_2210DCA88();
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_2210DCA88()
{
  unint64_t result;

  result = qword_25565BA90;
  if (!qword_25565BA90)
  {
    result = MEMORY[0x22766BAC4](&unk_221304A80, &unk_24E6F7D30);
    atomic_store(result, (unint64_t *)&qword_25565BA90);
  }
  return result;
}

double static CompactPickerSubscriptionStoreControlStyle.Placement.scrollView.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void static CompactPickerSubscriptionStoreControlStyle.Placement.bottomBar.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  OUTLINED_FUNCTION_2_10((uint64_t)a1, (__n128)xmmword_2212FBF90);
}

void static CompactPickerSubscriptionStoreControlStyle.Placement.buttonsInBottomBar.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  OUTLINED_FUNCTION_2_10((uint64_t)a1, (__n128)xmmword_2212FF5F0);
}

void CompactPickerSubscriptionStoreControlStyle.makeBody(configuration:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (**v38)(uint64_t@<X0>, uint64_t@<X8>);
  void (**v39)(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v62 = a2;
  v3 = OUTLINED_FUNCTION_12_22();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v55 - v8;
  v56 = (uint64_t)&v55 - v8;
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25565BA98);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_13_0();
  v14 = v13 - v12;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BAA0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_13_0();
  v18 = v17 - v16;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BAA8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_13_0();
  v22 = v21 - v20;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BAB0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_13_0();
  v26 = v25 - v24;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BAB8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_13_0();
  v58 = v29 - v28;
  sub_221084AB0(a1, (uint64_t)v9, type metadata accessor for SubscriptionStoreControlStyleConfiguration);
  sub_221084AB0(a1, (uint64_t)v7, type metadata accessor for SubscriptionStoreControlStyleConfiguration);
  v30 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v31 = swift_allocObject();
  sub_221084A7C((uint64_t)v7, v31 + v30, type metadata accessor for SubscriptionStoreControlStyleConfiguration);
  v32 = v10[14];
  *(_BYTE *)(v14 + v32) = 1;
  v33 = v14 + v10[15];
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657378);
  __swift_storeEnumTagSinglePayload(v33, 1, 1, v34);
  v35 = v14 + v10[16];
  *(_QWORD *)v35 = swift_getKeyPath();
  *(_QWORD *)(v35 + 8) = 0;
  *(_QWORD *)(v35 + 16) = 0;
  *(_QWORD *)(v35 + 24) = 0;
  *(_WORD *)(v35 + 32) = 0;
  v36 = v14 + v10[17];
  *(_QWORD *)v36 = swift_getKeyPath();
  *(_BYTE *)(v36 + 8) = 0;
  v37 = v14 + v10[18];
  *(_QWORD *)v37 = swift_getKeyPath();
  *(_QWORD *)(v37 + 8) = 0;
  *(_QWORD *)(v37 + 16) = 0;
  *(_QWORD *)(v37 + 24) = 0;
  *(_WORD *)(v37 + 32) = 0;
  v38 = (void (**)(uint64_t@<X0>, uint64_t@<X8>))(v14
                                                         + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255657380)
                                                                  + 48));
  sub_221084A7C(v56, v14, type metadata accessor for SubscriptionStoreControlStyleConfiguration);
  *v38 = sub_2210DD128;
  v38[1] = (void (*)(uint64_t@<X0>, uint64_t@<X8>))v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565BAC0);
  swift_storeEnumTagMultiPayload();
  v39 = (void (**)(uint64_t@<X0>, uint64_t@<X8>))(v14 + v10[13]);
  *v39 = sub_2210DD170;
  v39[1] = 0;
  *(_BYTE *)(v14 + v32) = 0;
  KeyPath = swift_getKeyPath();
  sub_221084AD0(v14, v18, &qword_25565BA98);
  v41 = v18 + *(int *)(v57 + 36);
  *(_QWORD *)v41 = KeyPath;
  *(_BYTE *)(v41 + 8) = 0;
  sub_221014F5C(v14, &qword_25565BA98);
  v42 = swift_getKeyPath();
  v43 = OUTLINED_FUNCTION_6_17();
  *(_BYTE *)(v43 + 16) = 1;
  sub_221084AD0(v18, v22, &qword_25565BAA0);
  v44 = (uint64_t *)(v22 + *(int *)(v59 + 36));
  *v44 = v42;
  v44[1] = (uint64_t)sub_2210DD380;
  v44[2] = v43;
  sub_221014F5C(v18, &qword_25565BAA0);
  v45 = swift_getKeyPath();
  v46 = OUTLINED_FUNCTION_6_17();
  *(_BYTE *)(v46 + 16) = 1;
  OUTLINED_FUNCTION_9_19(v22, v26);
  v47 = (uint64_t *)(v26 + *(int *)(v60 + 36));
  *v47 = v45;
  v47[1] = (uint64_t)sub_2210DD38C;
  v47[2] = v46;
  OUTLINED_FUNCTION_18_17(v22);
  v48 = swift_getKeyPath();
  v49 = OUTLINED_FUNCTION_6_17();
  *(_BYTE *)(v49 + 16) = 5;
  v50 = v58;
  OUTLINED_FUNCTION_9_19(v26, v58);
  v51 = (uint64_t *)(v50 + *(int *)(v61 + 36));
  *v51 = v48;
  v51[1] = (uint64_t)sub_22103D754;
  v51[2] = v49;
  OUTLINED_FUNCTION_18_17(v26);
  v52 = swift_getKeyPath();
  v53 = v62;
  OUTLINED_FUNCTION_9_19(v50, v62);
  v54 = v53 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25565BAC8) + 36);
  *(_QWORD *)v54 = v52;
  *(_BYTE *)(v54 + 8) = 0;
  OUTLINED_FUNCTION_18_17(v50);
}

void sub_2210DCF90(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;

  v6 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.PickerOption(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SubscriptionStoreControlStyleConfiguration(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221084AB0(a2, (uint64_t)v11, v12);
  sub_221084AB0(a1, (uint64_t)v8, type metadata accessor for SubscriptionStoreControlStyleConfiguration.PickerOption);
  sub_2212648F0((uint64_t)v11, (uint64_t)v8, a3);
}

uint64_t sub_2210DD06C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_12_22() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v2 + 48))
    swift_release();
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255656338) + 60);
  v4 = type metadata accessor for Subscription();
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
  {
    v5 = sub_2212F51B4();
    OUTLINED_FUNCTION_16_0(v5);
  }
  return swift_deallocObject();
}

void sub_2210DD128(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_12_22() - 8) + 80);
  sub_2210DCF90(a1, v2 + ((v5 + 16) & ~v5), a2);
}

void sub_2210DD170(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221084AB0(a1, (uint64_t)v6, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  v7 = (int *)type metadata accessor for SubscriptionStoreButton();
  v8 = a2 + v7[5];
  *(_BYTE *)(v8 + 48) = 0;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_OWORD *)v8 = 0u;
  v9 = a2 + v7[6];
  *(_QWORD *)v9 = swift_getKeyPath();
  *(_QWORD *)(v9 + 8) = 0;
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_WORD *)(v9 + 32) = 0;
  v10 = a2 + v7[7];
  *(_QWORD *)v10 = swift_getKeyPath();
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_WORD *)(v10 + 72) = 0;
  v11 = a2 + v7[8];
  *(_QWORD *)v11 = swift_getKeyPath();
  *(_BYTE *)(v11 + 8) = 0;
  v12 = a2 + v7[9];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_BYTE *)(v12 + 8) = 0;
  sub_221084A7C((uint64_t)v6, a2, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
}

void sub_2210DD2B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  CompactPickerSubscriptionStoreControlStyle.makeBody(configuration:)(a1, a2);
}

void sub_2210DD2E0()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_15_16();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210DD2FC()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_15_16();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210DD318()
{
  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210DD330()
{
  OUTLINED_FUNCTION_14_18();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210DD348()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_16_15();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210DD364()
{
  OUTLINED_FUNCTION_11_21();
  OUTLINED_FUNCTION_6_0();
}

unint64_t *sub_2210DD380(unint64_t *a1)
{
  uint64_t v1;

  return sub_221030584(a1, *(_BYTE *)(v1 + 16));
}

unint64_t *sub_2210DD38C(unint64_t *a1)
{
  uint64_t v1;

  return sub_221030654(a1, *(_BYTE *)(v1 + 16));
}

void sub_2210DD3A0()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_17_17() & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_2210DD3C0()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_17_17() & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_2210DD3E0()
{
  OUTLINED_FUNCTION_13_20();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210DD3F8()
{
  OUTLINED_FUNCTION_13_20();
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_2210DD410(uint64_t a1)
{
  unint64_t result;

  result = sub_2210DD434();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2210DD434()
{
  unint64_t result;

  result = qword_25565BAD0;
  if (!qword_25565BAD0)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for CompactPickerSubscriptionStoreControlStyle.Placement, &type metadata for CompactPickerSubscriptionStoreControlStyle.Placement);
    atomic_store(result, (unint64_t *)&qword_25565BAD0);
  }
  return result;
}

uint64_t sub_2210DD470()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2210DD484()
{
  unint64_t result;

  result = qword_25565BAD8;
  if (!qword_25565BAD8)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for CompactPickerSubscriptionStoreControlStyle.Placement, &type metadata for CompactPickerSubscriptionStoreControlStyle.Placement);
    atomic_store(result, (unint64_t *)&qword_25565BAD8);
  }
  return result;
}

void type metadata accessor for CompactPickerSubscriptionStoreControlStyle()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for CompactPickerSubscriptionStoreControlStyle.Placement()
{
  OUTLINED_FUNCTION_31_2();
}

unint64_t sub_2210DD4DC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25565BB10;
  if (!qword_25565BB10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BAC8);
    v2 = sub_2210DD560();
    sub_221017AD4(&qword_25565BB50, &qword_25565BB58, MEMORY[0x24BDF1028]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25565BB10);
  }
  return result;
}

unint64_t sub_2210DD560()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25565BB18;
  if (!qword_25565BB18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BAB8);
    v2 = sub_2210DD5E4();
    sub_221017AD4(&qword_2556573E0, &qword_2556573E8, MEMORY[0x24BDF1248]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25565BB18);
  }
  return result;
}

unint64_t sub_2210DD5E4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25565BB20;
  if (!qword_25565BB20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BAB0);
    v2 = sub_2210DD668();
    sub_221017AD4(&qword_255656EA0, &qword_255656E88, MEMORY[0x24BDF1248]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25565BB20);
  }
  return result;
}

unint64_t sub_2210DD668()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25565BB28;
  if (!qword_25565BB28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BAA8);
    v2 = sub_2210DD6EC();
    sub_221017AD4(&qword_255656EA0, &qword_255656E88, MEMORY[0x24BDF1248]);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25565BB28);
  }
  return result;
}

unint64_t sub_2210DD6EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_25565BB30;
  if (!qword_25565BB30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BAA0);
    sub_221017AD4(&qword_25565BB38, &qword_25565BA98, (uint64_t)&protocol conformance descriptor for SubscriptionStorePicker<A, B>);
    v3 = v2;
    sub_221017AD4((unint64_t *)&qword_25565BB40, &qword_25565BB48, MEMORY[0x24BDF1000]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25565BB30);
  }
  return result;
}

void type metadata accessor for CompactPickerSubscriptionStoreControlStyle.Placement.ContextualPlacementKey()
{
  OUTLINED_FUNCTION_31_2();
}

unint64_t sub_2210DD798()
{
  unint64_t result;

  result = qword_25565BB60;
  if (!qword_25565BB60)
  {
    result = MEMORY[0x22766BAC4](&unk_221304A58, &unk_24E6F7D30);
    atomic_store(result, (unint64_t *)&qword_25565BB60);
  }
  return result;
}

unint64_t sub_2210DD7D4(uint64_t a1)
{
  unint64_t result;

  result = sub_2210DD7F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2210DD7F8()
{
  unint64_t result;

  result = qword_25565BB68[0];
  if (!qword_25565BB68[0])
  {
    result = MEMORY[0x22766BAC4](&unk_221304A18, &unk_24E6F7D30);
    atomic_store(result, qword_25565BB68);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_6_17()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_9_19(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_221084AD0(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_11_21()
{
  return sub_2210304FC();
}

uint64_t OUTLINED_FUNCTION_12_22()
{
  return type metadata accessor for SubscriptionStoreControlStyleConfiguration(0);
}

void OUTLINED_FUNCTION_13_20()
{
  sub_221211660();
}

void OUTLINED_FUNCTION_14_18()
{
  sub_2211BF020();
}

uint64_t OUTLINED_FUNCTION_15_16()
{
  return sub_2211BEFE8();
}

uint64_t OUTLINED_FUNCTION_16_15()
{
  return sub_2210304CC();
}

uint64_t OUTLINED_FUNCTION_17_17()
{
  return sub_22121162C();
}

void OUTLINED_FUNCTION_18_17(uint64_t a1)
{
  uint64_t *v1;

  sub_221014F5C(a1, v1);
}

uint64_t sub_2210DD8B4@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;

  v6 = type metadata accessor for ProductViewIconWrapper(0, a2, a3, a3);
  v7 = (uint64_t *)(a4 + *(int *)(v6 + 36));
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
  swift_storeEnumTagMultiPayload();
  v8 = (uint64_t *)(a4 + *(int *)(v6 + 40));
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657A80);
  v9 = swift_storeEnumTagMultiPayload();
  return a1(v9);
}

uint64_t type metadata accessor for ProductViewIconWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ProductViewIconWrapper);
}

uint64_t sub_2210DD978()
{
  if (qword_255655B30 != -1)
    swift_once();
  return qword_25568CAB0;
}

void sub_2210DD9BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];
  _QWORD v56[2];

  v49 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657A88);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_19_4((uint64_t)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50 = *(_QWORD *)(a1 + 16);
  v6 = sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658538);
  v7 = sub_2212F3348();
  OUTLINED_FUNCTION_2_22(*(_QWORD *)(v7 - 8));
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_19_4((uint64_t)v40 - v9);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BBF8);
  v45 = v7;
  v10 = sub_2212F3348();
  v44 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_19_4((uint64_t)v40 - v14);
  v15 = sub_2212F33F0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_0_27();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v40 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v40 - v21;
  v46 = v10;
  v48 = sub_2212F3A20();
  OUTLINED_FUNCTION_2_22(*(_QWORD *)(v48 - 8));
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_19_4((uint64_t)v40 - v24);
  v47 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)v40 - v28;
  sub_2210DD978();
  v30 = *(_QWORD *)(a1 + 24);
  sub_2212F4170();
  v50 = a1;
  v41 = v2;
  sub_221045C04();
  sub_2212F33E4();
  v31 = sub_2210965B4();
  v32 = sub_2212F58C8();
  v33 = *(void (**)(char *, uint64_t))(v16 + 8);
  v33(v20, v15);
  v33(v22, v15);
  if ((v32 & 1) != 0)
  {
    v40[0] = v31;
    v40[1] = v33;
    v42 = v30;
    v51 = v30;
    v52 = MEMORY[0x24BDEEC40];
    OUTLINED_FUNCTION_3_3();
  }
  v56[0] = v30;
  v56[1] = MEMORY[0x24BDEEC40];
  v34 = MEMORY[0x24BDED308];
  v35 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v6, v56);
  v36 = v42;
  sub_221088D68((uint64_t)v29, v6, v42);
  sub_221087210(v36, v6, v43);
  v37 = sub_221018504((unint64_t *)&qword_255658548, &qword_255658538, MEMORY[0x24BDF0710]);
  v55[0] = v35;
  v55[1] = v37;
  v38 = MEMORY[0x22766BAC4](v34, v45, v55);
  v39 = sub_221018504(qword_25565BC00, &qword_25565BBF8, MEMORY[0x24BDF1028]);
  v53 = v38;
  v54 = v39;
  OUTLINED_FUNCTION_4_3();
}

void sub_2210DDEB4()
{
  uint64_t v0;
  uint64_t v1;

  sub_22113B11C();
  OUTLINED_FUNCTION_5_18(v0);
  OUTLINED_FUNCTION_5_18(v1);
  OUTLINED_FUNCTION_4_22();
  JUMPOUT(0x2210DE0A8);
}

void sub_2210DE0C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_221018504((unint64_t *)&qword_255658548, &qword_255658538, MEMORY[0x24BDF0710]);
  *(_QWORD *)(v4 - 168) = a1;
  *(_QWORD *)(v4 - 160) = v6;
  v7 = MEMORY[0x22766BAC4](v1, v2, v4 - 168);
  v8 = sub_221018504(qword_25565BC00, &qword_25565BBF8, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v4 - 184) = v7;
  *(_QWORD *)(v4 - 176) = v8;
  *(_QWORD *)(v4 - 200) = MEMORY[0x22766BAC4](v1, v3, v4 - 184);
  *(_QWORD *)(v4 - 192) = a1;
  OUTLINED_FUNCTION_4_3();
}

uint64_t sub_2210DE140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 - 264);
  sub_221087210(v4, v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v4, v0);
}

uint64_t sub_2210DE198()
{
  return sub_2212AC368();
}

uint64_t sub_2210DE1B8()
{
  return sub_2212AC368();
}

void sub_2210DE1D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255657A88);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2210DE250(a1, (uint64_t)v4);
  sub_2212AC39C((uint64_t)v4);
}

uint64_t sub_2210DE250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657A88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2210DE298()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_2210DF8A8();
    if (v1 <= 0x3F)
    {
      sub_2210DF8FC();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_2210DE33C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  unsigned int v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  _QWORD *v32;
  unsigned int v33;
  uint64_t v34;
  size_t __n;
  uint64_t v37;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_2212F33F0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 & 0xF8 | 7;
  v12 = v7 + v11;
  v13 = *(_QWORD *)(v9 + 64);
  v14 = 8;
  if (v13 <= 8)
    v15 = 8;
  else
    v15 = *(_QWORD *)(v9 + 64);
  v16 = v15 + v11 + 1;
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = v13 + 1;
  if (v17 > 8)
    v14 = v17;
  v18 = *(_DWORD *)(v6 + 80) & 0xF8 | v11;
  v19 = (*(_DWORD *)(v6 + 80) | v10) & 0x100000;
  if ((_DWORD)v18 != 7 || v19 != 0 || v14 + ((v16 + (v12 & ~v11)) & (unint64_t)~v11) + 1 > 0x18)
  {
    v22 = *a2;
    *a1 = *a2;
    v23 = (uint64_t *)(v22 + ((v18 + 16) & ~v18));
LABEL_35:
    swift_retain();
    return v23;
  }
  v24 = v8;
  __n = v17;
  v37 = v14;
  v25 = ~v11;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
  v26 = (_QWORD *)(((unint64_t)a1 + v12) & v25);
  v27 = (_QWORD *)(((unint64_t)a2 + v12) & v25);
  v28 = *((unsigned __int8 *)v27 + v15);
  v23 = a1;
  if (v28 >= 2)
  {
    if (v15 <= 3)
      v29 = v15;
    else
      v29 = 4;
    __asm { BR              X12 }
  }
  if (v28 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(v26, v27, v24);
    v30 = 1;
  }
  else
  {
    *v26 = *v27;
    swift_retain();
    v30 = 0;
  }
  *((_BYTE *)v26 + v15) = v30;
  v31 = (_QWORD *)(((unint64_t)v26 + v16) & v25);
  v32 = (_QWORD *)(((unint64_t)v27 + v16) & v25);
  v33 = *((unsigned __int8 *)v32 + v37);
  if (v33 >= 2)
  {
    if (v37 <= 3)
      v34 = v37;
    else
      v34 = 4;
    __asm { BR              X12 }
  }
  if (v33 != 1)
  {
    *v31 = *v32;
    *((_BYTE *)v31 + v37) = 0;
    goto LABEL_35;
  }
  if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v24))
  {
    memcpy(v31, v32, __n);
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(v31, v32, v24);
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v24);
  }
  *((_BYTE *)v31 + v37) = 1;
  return v23;
}

uint64_t sub_2210DE5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_2212F33F0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  v8 = (v4 + a1 + v7) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  if (v9 <= 8)
    v10 = 8;
  else
    v10 = *(_QWORD *)(v6 + 64);
  v11 = *(unsigned __int8 *)(v8 + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X12 }
  }
  if (v11 == 1)
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  else
    swift_release();
  v13 = (v10 + v7 + v8 + 1) & ~v7;
  if (*(_DWORD *)(v6 + 84))
    v14 = v9;
  else
    v14 = v9 + 1;
  if (v14 <= 8)
    v14 = 8;
  v15 = *(unsigned __int8 *)(v13 + v14);
  if (v15 >= 2)
  {
    if (v14 <= 3)
      v16 = v14;
    else
      v16 = 4;
    __asm { BR              X13 }
  }
  if (v15 != 1)
    return swift_release();
  result = __swift_getEnumTagSinglePayload(v13, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  return result;
}

uint64_t sub_2210DE808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  size_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2212F33F0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = v6 + v9;
  v11 = (_QWORD *)((v6 + v9 + a1) & ~v9);
  v12 = (_QWORD *)((v10 + a2) & ~v9);
  v13 = *(_QWORD *)(v8 + 64);
  if (v13 <= 8)
    v14 = 8;
  else
    v14 = *(_QWORD *)(v8 + 64);
  v15 = *((unsigned __int8 *)v12 + v14);
  if (v15 >= 2)
  {
    if (v14 <= 3)
      v16 = v14;
    else
      v16 = 4;
    __asm { BR              X12 }
  }
  v17 = ~v9;
  if (v15 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(v11, v12, v7);
    v18 = 1;
  }
  else
  {
    *v11 = *v12;
    swift_retain();
    v18 = 0;
  }
  *((_BYTE *)v11 + v14) = v18;
  v19 = v14 + v9 + 1;
  v20 = (_QWORD *)(((unint64_t)v11 + v19) & v17);
  v21 = (_QWORD *)(((unint64_t)v12 + v19) & v17);
  if (!*(_DWORD *)(v8 + 84))
    ++v13;
  if (v13 <= 8)
    v22 = 8;
  else
    v22 = v13;
  v23 = *((unsigned __int8 *)v21 + v22);
  if (v23 >= 2)
  {
    if (v22 <= 3)
      v24 = v22;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  if (v23 == 1)
  {
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v7))
    {
      memcpy(v20, v21, v13);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(v20, v21, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v7);
    }
    *((_BYTE *)v20 + v22) = 1;
  }
  else
  {
    *v20 = *v21;
    *((_BYTE *)v20 + v22) = 0;
    swift_retain();
  }
  return a1;
}

uint64_t sub_2210DEA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v29;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2212F33F0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v29 = a1;
  v10 = v6 + v9 + a1;
  v11 = ~v9;
  v12 = (_QWORD *)(v10 & ~v9);
  v13 = v6 + v9 + a2;
  v14 = (_QWORD *)(v13 & ~v9);
  v15 = *(_QWORD *)(v8 + 64);
  if (v15 <= 8)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v8 + 64);
  if (v12 != v14)
  {
    v17 = *((unsigned __int8 *)v12 + v16);
    if (v17 >= 2)
    {
      if (v16 <= 3)
        v18 = v16;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 1)
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10 & ~v9, v7);
    else
      swift_release();
    v19 = *((unsigned __int8 *)v14 + v16);
    if (v19 >= 2)
    {
      if (v16 <= 3)
        v20 = v16;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    if (v19 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10 & ~v9, v13 & ~v9, v7);
      *((_BYTE *)v12 + v16) = 1;
    }
    else
    {
      *v12 = *v14;
      *((_BYTE *)v12 + v16) = 0;
      swift_retain();
    }
  }
  v21 = (_QWORD *)(((v10 | v9) + v16 + 1) & v11);
  v22 = (_QWORD *)(((v13 | v9) + v16 + 1) & v11);
  if (v21 != v22)
  {
    if (!*(_DWORD *)(v8 + 84))
      ++v15;
    if (v15 <= 8)
      v23 = 8;
    else
      v23 = v15;
    v24 = *((unsigned __int8 *)v21 + v23);
    if (v24 >= 2)
    {
      if (v23 <= 3)
        v25 = v23;
      else
        v25 = 4;
      __asm { BR              X12 }
    }
    if (v24 == 1)
    {
      if (!__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v7))
        (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v21, v7);
    }
    else
    {
      swift_release();
    }
    v26 = *((unsigned __int8 *)v22 + v23);
    if (v26 >= 2)
    {
      if (v23 <= 3)
        v27 = v23;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    if (v26 == 1)
    {
      if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v7))
      {
        memcpy(v21, v22, v15);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(v21, v22, v7);
        __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v7);
      }
      *((_BYTE *)v21 + v23) = 1;
    }
    else
    {
      *v21 = *v22;
      *((_BYTE *)v21 + v23) = 0;
      swift_retain();
    }
  }
  return v29;
}

uint64_t sub_2210DEE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  size_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  char v25;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2212F33F0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = v6 + v9;
  v11 = (_QWORD *)((v6 + v9 + a1) & ~v9);
  v12 = (_QWORD *)((v10 + a2) & ~v9);
  v13 = *(_QWORD *)(v8 + 64);
  if (v13 <= 8)
    v14 = 8;
  else
    v14 = *(_QWORD *)(v8 + 64);
  v15 = *((unsigned __int8 *)v12 + v14);
  if (v15 >= 2)
  {
    if (v14 <= 3)
      v16 = v14;
    else
      v16 = 4;
    __asm { BR              X12 }
  }
  v17 = ~v9;
  if (v15 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 32))(v11, v12, v7);
    v18 = 1;
  }
  else
  {
    v18 = 0;
    *v11 = *v12;
  }
  *((_BYTE *)v11 + v14) = v18;
  v19 = v14 + v9 + 1;
  v20 = (_QWORD *)(((unint64_t)v11 + v19) & v17);
  v21 = (_QWORD *)(((unint64_t)v12 + v19) & v17);
  if (!*(_DWORD *)(v8 + 84))
    ++v13;
  if (v13 <= 8)
    v22 = 8;
  else
    v22 = v13;
  v23 = *((unsigned __int8 *)v21 + v22);
  if (v23 >= 2)
  {
    if (v22 <= 3)
      v24 = v22;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  if (v23 == 1)
  {
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v7))
    {
      memcpy(v20, v21, v13);
      v25 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 32))(v20, v21, v7);
      v25 = 1;
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v7);
    }
  }
  else
  {
    v25 = 0;
    *v20 = *v21;
  }
  *((_BYTE *)v20 + v22) = v25;
  return a1;
}

uint64_t sub_2210DF068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  char v29;
  uint64_t v31;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_2212F33F0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v31 = a1;
  v10 = v6 + v9 + a1;
  v11 = ~v9;
  v12 = (_QWORD *)(v10 & ~v9);
  v13 = v6 + v9 + a2;
  v14 = (_QWORD *)(v13 & ~v9);
  v15 = *(_QWORD *)(v8 + 64);
  if (v15 <= 8)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v8 + 64);
  if (v12 != v14)
  {
    v17 = *((unsigned __int8 *)v12 + v16);
    if (v17 >= 2)
    {
      if (v16 <= 3)
        v18 = v16;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 1)
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10 & ~v9, v7);
    else
      swift_release();
    v19 = *((unsigned __int8 *)v14 + v16);
    if (v19 >= 2)
    {
      if (v16 <= 3)
        v20 = v16;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    if (v19 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10 & ~v9, v13 & ~v9, v7);
      v21 = 1;
    }
    else
    {
      v21 = 0;
      *v12 = *v14;
    }
    *((_BYTE *)v12 + v16) = v21;
  }
  v22 = (_QWORD *)(((v10 | v9) + v16 + 1) & v11);
  v23 = (_QWORD *)(((v13 | v9) + v16 + 1) & v11);
  if (v22 != v23)
  {
    if (!*(_DWORD *)(v8 + 84))
      ++v15;
    if (v15 <= 8)
      v24 = 8;
    else
      v24 = v15;
    v25 = *((unsigned __int8 *)v22 + v24);
    if (v25 >= 2)
    {
      if (v24 <= 3)
        v26 = v24;
      else
        v26 = 4;
      __asm { BR              X12 }
    }
    if (v25 == 1)
    {
      if (!__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v7))
        (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v22, v7);
    }
    else
    {
      swift_release();
    }
    v27 = *((unsigned __int8 *)v23 + v24);
    if (v27 >= 2)
    {
      if (v24 <= 3)
        v28 = v24;
      else
        v28 = 4;
      __asm { BR              X12 }
    }
    if (v27 == 1)
    {
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v7))
      {
        memcpy(v22, v23, v15);
        v29 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 32))(v22, v23, v7);
        v29 = 1;
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v7);
      }
    }
    else
    {
      v29 = 0;
      *v22 = *v23;
    }
    *((_BYTE *)v22 + v24) = v29;
  }
  return v31;
}

uint64_t sub_2210DF418(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v22;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(sub_2212F33F0() - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = 8;
  if (v9 <= 8)
    v11 = 8;
  else
    v11 = *(_QWORD *)(v8 + 64);
  if (v7 <= 0xFE)
    v12 = 254;
  else
    v12 = v7;
  if (!*(_DWORD *)(v8 + 84))
    ++v9;
  if (v9 > 8)
    v10 = v9;
  if (!a2)
    return 0;
  v13 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v14 = *(_QWORD *)(v6 + 64) + v13;
  if (a2 <= v12)
    goto LABEL_31;
  v15 = v10 + ((v11 + v13 + (v14 & ~v13) + 1) & ~v13) + 1;
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v19 = ((a2 - v12 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_31;
      goto LABEL_22;
    }
    if (v19 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_31;
      goto LABEL_22;
    }
    if (v19 < 2)
    {
LABEL_31:
      if (v7 >= 0xFE)
        return __swift_getEnumTagSinglePayload(a1, v7, v5);
      v22 = *(unsigned __int8 *)(((v14 + a1) & ~v13) + v11);
      if (v22 >= 2)
        return (v22 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_31;
LABEL_22:
  v20 = (v17 - 1) << v16;
  if (v15 > 3)
    v20 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v21 = v15;
    else
      v21 = 4;
    __asm { BR              X12 }
  }
  return v12 + v20 + 1;
}

void sub_2210DF5EC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  size_t v14;
  char v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_2212F33F0() - 8);
  v10 = *(_QWORD *)(v9 + 64);
  if (v10 <= 8)
    v11 = 8;
  else
    v11 = *(_QWORD *)(v9 + 64);
  if (v8 <= 0xFE)
    v12 = 254;
  else
    v12 = v8;
  if (!*(_DWORD *)(v9 + 84))
    ++v10;
  if (v10 <= 8)
    v10 = 8;
  v13 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v14 = v10 + ((v11 + 1 + v13 + ((*(_QWORD *)(v7 + 64) + v13) & ~v13)) & ~v13) + 1;
  v15 = 8 * v14;
  if (a3 <= v12)
  {
    v16 = 0;
  }
  else if (v14 <= 3)
  {
    v18 = ((a3 - v12 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      v16 = 4u;
    }
    else if (v18 >= 0x100)
    {
      v16 = 2;
    }
    else
    {
      v16 = v18 > 1;
    }
  }
  else
  {
    v16 = 1u;
  }
  if (v12 < a2)
  {
    v17 = ~v12 + a2;
    if (v14 < 4)
    {
      if ((_DWORD)v14)
      {
        v19 = v17 & ~(-1 << v15);
        bzero(a1, v14);
        if ((_DWORD)v14 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if ((_DWORD)v14 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_2210DF884()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x2210DF870);
}

void sub_2210DF894()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x2210DF870);
}

void sub_2210DF89C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x2210DF870);
}

void sub_2210DF8A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255656FF8)
  {
    sub_2212F33F0();
    v0 = sub_2212F2E08();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255656FF8);
  }
}

void sub_2210DF8FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25565BBF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657A88);
    v0 = sub_2212F2E08();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25565BBF0);
  }
}

uint64_t sub_2210DF954()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210DF988(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657A88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2210DF9C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658538);
  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BBF8);
  sub_2212F3348();
  sub_2212F3A20();
  v3[0] = v1;
  v3[1] = MEMORY[0x24BDEEC40];
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v2, v3);
  sub_221018504((unint64_t *)&qword_255658548, &qword_255658538, MEMORY[0x24BDF0710]);
  OUTLINED_FUNCTION_3_3();
}

void sub_2210DFAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v16 = sub_221018504(qword_25565BC00, v12, MEMORY[0x24BDF1028]);
  a11 = a1;
  a12 = v16;
  MEMORY[0x22766BAC4](v14, v13, &a11);
  OUTLINED_FUNCTION_4_3();
}

void OUTLINED_FUNCTION_0_27()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

void OUTLINED_FUNCTION_2_22(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_5_18(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_7_18(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void SubscriptionOfferView.init(id:marketingContent:icon:placeholderIcon:)()
{
  OUTLINED_FUNCTION_8_14();
  type metadata accessor for SubscriptionOfferView();
}

void sub_2210DFB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  uint64_t v11;
  char *v12;

  v12 = (char *)v10 + *(int *)(a1 + 84);
  *(_QWORD *)v12 = swift_getKeyPath();
  *((_QWORD *)v12 + 1) = 0;
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0;
  v12[32] = 0;
  *v10 = v11;
  v10[1] = a10;
  OUTLINED_FUNCTION_8_14();
  type metadata accessor for SubscriptionOfferView.Storage();
}

void sub_2210DFBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(uint64_t), uint64_t a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t))
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  void (**v26)(uint64_t);
  uint64_t v27;

  v24 = OUTLINED_FUNCTION_0_2();
  a12(v24);
  v25 = (void (*)(uint64_t))OUTLINED_FUNCTION_4_23();
  *((_QWORD *)v25 + 2) = v23;
  *((_QWORD *)v25 + 3) = v16;
  *((_QWORD *)v25 + 4) = v22;
  *((_QWORD *)v25 + 5) = v20;
  *((_QWORD *)v25 + 6) = v19;
  *((_QWORD *)v25 + 7) = v18;
  *((_QWORD *)v25 + 8) = a13;
  *((_QWORD *)v25 + 9) = a14;
  v26 = (void (**)(uint64_t))(v17 + *(int *)(v21 + 72));
  *v26 = sub_2210E1910;
  v26[1] = v25;
  v27 = swift_retain();
  a16(v27);
  swift_release();
  *(_BYTE *)(v17 + *(int *)(v21 + 80)) = 0;
  OUTLINED_FUNCTION_3_19();
}

void type metadata accessor for SubscriptionOfferView()
{
  JUMPOUT(0x22766BA10);
}

void sub_2210DFC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  v16[1] = a8;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD08);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD10);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212F5160();
  v14 = sub_2212F5154();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v14) == 1)
  {
    sub_2210E31F8((uint64_t)v10);
    v15 = sub_2212F2A24();
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v15);
  }
  else
  {
    sub_2212F5148();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v10, v14);
  }
  sub_2212A05C8();
}

uint64_t sub_2210DFDA4()
{
  return swift_retain();
}

void SubscriptionOfferView.init(id:prefersPromotionalIcon:marketingContent:icon:placeholderIcon:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[18];
  int v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v23[9] = a8;
  v23[15] = a7;
  v23[16] = a6;
  v23[11] = a5;
  v23[12] = a4;
  v24 = a3;
  v23[6] = a2;
  v23[5] = a1;
  v15 = *(_QWORD *)(a12 - 8);
  v23[13] = a9;
  v23[14] = v15;
  v23[17] = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_13_21();
  v23[10] = v16;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v25 = (char *)v23 - v19;
  v20 = *(_QWORD *)(*(_QWORD *)(a11 - 8) + 64);
  v23[7] = *(_QWORD *)(a11 - 8);
  v23[8] = v20;
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_13_21();
  v26 = v21;
  MEMORY[0x24BDAC7A8](v22);
  v27 = a10;
  v28 = a11;
  v23[1] = a10;
  v29 = a12;
  v30 = a13;
  v23[2] = a13;
  v31 = a14;
  v32 = a15;
  v23[3] = a14;
  v23[4] = a15;
  type metadata accessor for SubscriptionOfferView();
}

void sub_2210DFEE4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v9 = (char *)v1 + *(int *)(a1 + 84);
  *(_QWORD *)v9 = swift_getKeyPath();
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = 0;
  *((_QWORD *)v9 + 3) = 0;
  v9[32] = 0;
  v10 = *(_QWORD *)(v8 - 256);
  *v1 = *(_QWORD *)(v8 - 264);
  v1[1] = v10;
  *(_QWORD *)(v8 - 136) = v3;
  *(_QWORD *)(v8 - 128) = v5;
  *(_QWORD *)(v8 - 120) = v2;
  *(_QWORD *)(v8 - 112) = v6;
  *(_QWORD *)(v8 - 104) = v4;
  *(_QWORD *)(v8 - 96) = v7;
  type metadata accessor for SubscriptionOfferView.Storage();
}

void sub_2210DFF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(unint64_t, uint64_t, uint64_t);
  void (**v22)(uint64_t@<X8>);

  v6 = swift_storeEnumTagMultiPayload();
  v7 = (*(uint64_t (**)(uint64_t))(v5 - 208))(v6);
  v8 = (*(uint64_t (**)(uint64_t))(v5 - 176))(v7);
  v9 = *(_QWORD *)(v5 - 152);
  (*(void (**)(uint64_t))(v5 - 232))(v8);
  v10 = *(_QWORD *)(v5 - 248);
  v11 = *(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32);
  v11(*(_QWORD *)(v5 - 144), v3, v2);
  v12 = *(_QWORD *)(v5 - 192);
  v13 = *(_QWORD *)(v5 - 224);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v13, v9, v1);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = v12;
  v16 = (*(_QWORD *)(v5 - 240) + *(unsigned __int8 *)(v12 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v5 - 296);
  *(_QWORD *)(v17 + 24) = v2;
  v18 = *(_QWORD *)(v5 - 288);
  *(_QWORD *)(v17 + 32) = v1;
  *(_QWORD *)(v17 + 40) = v18;
  v19 = *(_QWORD *)(v5 - 272);
  *(_QWORD *)(v17 + 48) = *(_QWORD *)(v5 - 280);
  *(_QWORD *)(v17 + 56) = v19;
  *(_BYTE *)(v17 + 64) = *(_DWORD *)(v5 - 156);
  v11(v17 + v14, *(_QWORD *)(v5 - 144), v2);
  v20 = v17 + v16;
  v21 = *(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32);
  v21(v20, v13, v1);
  v22 = (void (**)(uint64_t@<X8>))(v0 + v4[18]);
  *v22 = sub_2210E19C4;
  v22[1] = (void (*)(uint64_t@<X8>))v17;
  v21(v0 + v4[19], *(_QWORD *)(v5 - 152), v1);
  *(_BYTE *)(v0 + v4[20]) = 0;
  OUTLINED_FUNCTION_19();
}

void sub_2210E007C(int a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a1;
  v26 = a6;
  v28 = a7;
  v29 = a8;
  v12 = sub_2212F5844();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  v15 = sub_2212F5844();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD08);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD10);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212F5160();
  v24 = sub_2212F5154();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v24) == 1)
  {
    sub_2210E31F8((uint64_t)v20);
    v25 = sub_2212F2A24();
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 1, 1, v25);
  }
  else
  {
    sub_2212F5148();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v20, v24);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v17, a2, a4);
  __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(v14, a3, a5);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, a5);
  sub_2212A06AC();
}

void SubscriptionOfferView.init<>(id:prefersPromotionalIcon:marketingContent:icon:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  unint64_t v17;
  _BYTE v20[32];

  v20[16] = a3;
  v17 = sub_22105ECB4();
  SubscriptionOfferView.init(id:prefersPromotionalIcon:marketingContent:icon:placeholderIcon:)(a1, a2, a3, a4, a5, a6, a7, (uint64_t)sub_2210E1A24, (uint64_t)v20, a8, a9, (uint64_t)&type metadata for AutomaticProductPlaceholderIcon, a10, a11, v17);
}

void sub_2210E0344()
{
  OUTLINED_FUNCTION_3_19();
}

void SubscriptionOfferView.init<>(id:prefersPromotionalIcon:marketingContent:)()
{
  type metadata accessor for SubscriptionOfferView();
}

void sub_2210E03B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v4 = (char *)v1 + *(int *)(a1 + 84);
  *(_QWORD *)v4 = swift_getKeyPath();
  *((_QWORD *)v4 + 1) = 0;
  *((_QWORD *)v4 + 2) = 0;
  *((_QWORD *)v4 + 3) = 0;
  v4[32] = 0;
  *v1 = v3;
  v1[1] = v2;
  type metadata accessor for SubscriptionOfferView.Storage();
}

uint64_t sub_2210E03F0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  void (*v6)(uint64_t);

  v3 = OUTLINED_FUNCTION_0_2();
  v6(v3);
  result = OUTLINED_FUNCTION_4_23();
  *(_BYTE *)(result + 16) = v0;
  v5 = (_QWORD *)(v1 + *(int *)(v2 + 72));
  *v5 = sub_2210E3288;
  v5[1] = result;
  *(_BYTE *)(v1 + *(int *)(v2 + 80)) = v0;
  return result;
}

void SubscriptionOfferView.init<>(subscription:marketingContent:icon:)()
{
  OUTLINED_FUNCTION_12_23();
}

void sub_2210E04B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = v1 + *(int *)(a1 + 84);
  KeyPath = swift_getKeyPath();
  v5 = OUTLINED_FUNCTION_11_22(KeyPath);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_BYTE *)(v3 + 32) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v2, v5);
  type metadata accessor for SubscriptionOfferView.Storage();
}

void sub_2210E0524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t), uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)();
  void (**v23)();

  v21 = OUTLINED_FUNCTION_7_19();
  a10(v21);
  v22 = (void (*)())OUTLINED_FUNCTION_4_23();
  *((_QWORD *)v22 + 2) = v18;
  *((_QWORD *)v22 + 3) = v17;
  *((_QWORD *)v22 + 4) = v15;
  *((_QWORD *)v22 + 5) = v16;
  *((_QWORD *)v22 + 6) = a11;
  *((_QWORD *)v22 + 7) = a12;
  v23 = (void (**)())(v12 + *(int *)(v19 + 72));
  *v23 = sub_2210E1A58;
  v23[1] = v22;
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v13, v14);
  *(_BYTE *)(v12 + *(int *)(v19 + 80)) = 0;
  OUTLINED_FUNCTION_21_8();
}

void sub_2210E0590()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD08);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD10);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212F5160();
  v6 = sub_2212F5154();
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v6) == 1)
  {
    sub_2210E31F8((uint64_t)v2);
    v7 = sub_2212F2A24();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v7);
  }
  else
  {
    sub_2212F5148();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v2, v6);
  }
  sub_2212A05C8();
}

uint64_t sub_2210E06D4()
{
  return swift_retain();
}

void SubscriptionOfferView.init<>(subscription:prefersPromotionalIcon:marketingContent:icon:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[10];
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v15[8] = a6;
  v15[9] = a5;
  v15[6] = a4;
  v15[7] = a3;
  v16 = a2;
  v17 = a1;
  v10 = *(_QWORD *)(*(_QWORD *)(a8 - 8) + 64);
  v11 = MEMORY[0x24BDAC7A8](a1);
  v15[5] = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15[2] = v12;
  v15[3] = (char *)v15 - v13;
  v18 = v12;
  v19 = v14;
  v20 = MEMORY[0x24BDF5158];
  v21 = a9;
  v15[1] = a9;
  v22 = a10;
  v23 = MEMORY[0x24BDF5138];
  v15[0] = a10;
  type metadata accessor for SubscriptionOfferView();
}

void sub_2210E07BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = v3 + *(int *)(a1 + 84);
  *(_QWORD *)v7 = swift_getKeyPath();
  v8 = sub_2212F51B4();
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 8) = 0;
  *(_BYTE *)(v7 + 32) = 0;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 - 192) = v9;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 16))(v3, *(_QWORD *)(v6 - 136), v8);
  *(_QWORD *)(v6 - 128) = v5;
  *(_QWORD *)(v6 - 120) = v1;
  *(_QWORD *)(v6 - 112) = MEMORY[0x24BDF5158];
  *(_QWORD *)(v6 - 104) = v4;
  *(_QWORD *)(v6 - 96) = v2;
  *(_QWORD *)(v6 - 88) = MEMORY[0x24BDF5138];
  type metadata accessor for SubscriptionOfferView.Storage();
}

void sub_2210E0838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (**v13)(uint64_t);

  v6 = swift_storeEnumTagMultiPayload();
  v7 = (*(uint64_t (**)(uint64_t))(v5 - 168))(v6);
  v8 = *(_QWORD *)(v5 - 200);
  (*(void (**)(uint64_t))(v5 - 152))(v7);
  v9 = *(_QWORD *)(v5 - 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v9, v8, v0);
  v10 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v5 - 208);
  *(_QWORD *)(v11 + 24) = v0;
  v12 = *(_QWORD *)(v5 - 224);
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(v5 - 216);
  *(_QWORD *)(v11 + 40) = v12;
  *(_BYTE *)(v11 + 48) = *(_DWORD *)(v5 - 140);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v11 + v10, v9, v0);
  v13 = (void (**)(uint64_t))(v1 + *(int *)(v4 + 72));
  *v13 = sub_2210E1AB8;
  v13[1] = (void (*)(uint64_t))v11;
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 192) + 8))(*(_QWORD *)(v5 - 136), v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v8, v0);
  *(_BYTE *)(v1 + *(int *)(v4 + 80)) = 0;
  OUTLINED_FUNCTION_19();
}

void sub_2210E0920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[16];

  v7 = sub_2212F5844();
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v18[-v8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD08);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD10);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_2212F5160();
  v16 = sub_2212F5154();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v16) == 1)
  {
    sub_2210E31F8((uint64_t)v12);
    v17 = sub_2212F2A24();
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 1, 1, v17);
  }
  else
  {
    sub_2212F5148();
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v12, v16);
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(v9, a3, a5);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, a5);
  v18[15] = 1;
  sub_2212A06AC();
}

void SubscriptionOfferView.init<>(subscription:prefersPromotionalIcon:marketingContent:)()
{
  OUTLINED_FUNCTION_12_23();
}

void sub_2210E0B4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = v1 + *(int *)(a1 + 84);
  KeyPath = swift_getKeyPath();
  v5 = OUTLINED_FUNCTION_11_22(KeyPath);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_BYTE *)(v3 + 32) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v1, v2, v5);
  type metadata accessor for SubscriptionOfferView.Storage();
}

void sub_2210E0BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t), int a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (**v20)(uint64_t@<X8>);

  v18 = OUTLINED_FUNCTION_7_19();
  a11(v18);
  v19 = OUTLINED_FUNCTION_4_23();
  *(_BYTE *)(v19 + 16) = a13;
  v20 = (void (**)(uint64_t@<X8>))(v13 + *(int *)(v15 + 72));
  *v20 = sub_2210E1AE0;
  v20[1] = (void (*)(uint64_t@<X8>))v19;
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
  *(_BYTE *)(v13 + *(int *)(v15 + 80)) = 0;
  OUTLINED_FUNCTION_21_8();
}

void sub_2210E0C08(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD08);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_13_0();
  v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD10);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_13_0();
  v11 = v10 - v9;
  sub_2212F5160();
  v12 = sub_2212F5154();
  if (__swift_getEnumTagSinglePayload(v7, 1, v12) == 1)
  {
    sub_2210E31F8(v7);
    v13 = sub_2212F2A24();
    __swift_storeEnumTagSinglePayload(v11, 1, 1, v13);
  }
  else
  {
    sub_2212F5148();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v7, v12);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD18);
  v15 = a2 + *(int *)(v14 + 56);
  *(_QWORD *)v15 = swift_getKeyPath();
  *(_BYTE *)(v15 + 8) = 0;
  v16 = a2 + *(int *)(v14 + 52);
  if ((a1 & 1) != 0)
  {
    *(_WORD *)v16 = 257;
    v17 = 1;
  }
  else
  {
    *(_QWORD *)v16 = 0;
    *(_QWORD *)(v16 + 8) = 0;
    v17 = -1;
  }
  *(_BYTE *)(v16 + 16) = v17;
  sub_2210E3240(v11, a2);
  OUTLINED_FUNCTION_14_13();
}

void SubscriptionOfferView.body.getter()
{
  uint64_t v0;

  sub_2212F3D2C();
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_13_0();
  type metadata accessor for PromotionalIconLoadingView();
}

void sub_2210E0E28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 352) = *(_QWORD *)(v0 + 40);
  OUTLINED_FUNCTION_10_13();
}

void sub_2210E0E44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 136) = v2;
  *(_QWORD *)(v4 - 128) = v1;
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = a1;
  type metadata accessor for StaticSubscriptionOfferView();
}

void sub_2210E0E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 136) = v2;
  *(_QWORD *)(v6 - 128) = v1;
  *(_QWORD *)(v6 - 120) = v4;
  *(_QWORD *)(v6 - 112) = v5;
  *(_QWORD *)(v6 - 104) = v0;
  *(_QWORD *)(v6 - 96) = v3;
  type metadata accessor for DynamicSubscriptionOfferView();
}

void sub_2210E0E78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2212F3A20();
  v1 = sub_2212F4674();
  OUTLINED_FUNCTION_2_22(*(_QWORD *)(v1 - 8));
  MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x22766BAC4](&unk_221303000, v0);
  OUTLINED_FUNCTION_5_2();
}

void sub_2210E0EE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = v1;
  *(_QWORD *)(v2 - 144) = a1;
  OUTLINED_FUNCTION_10_13();
}

void sub_2210E0EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  unint64_t v29;
  void (*v30)(char *, uint64_t);

  *(_QWORD *)(v11 - 160) = a1;
  v12 = MEMORY[0x22766BAC4](MEMORY[0x24BDF3F50], v9, v11 - 160);
  *(_QWORD *)(v11 - 136) = v9;
  *(_QWORD *)(v11 - 128) = v12;
  v13 = MEMORY[0x22766BA58](0, v11 - 136, MEMORY[0x24BDF2F10], 0);
  OUTLINED_FUNCTION_2_22(*(_QWORD *)(v13 - 8));
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&a9 - v15;
  sub_2212F3E40();
  v17 = sub_2212F3348();
  *(_QWORD *)(v11 - 360) = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_1_12();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&a9 - v22;
  v24 = *(_QWORD *)(v11 - 312);
  *(_QWORD *)(v11 - 240) = *(_QWORD *)(v11 - 328);
  *(_QWORD *)(v11 - 232) = v24;
  v25 = *(_QWORD *)(v11 - 352);
  *(_QWORD *)(v11 - 224) = *(_QWORD *)(v11 - 344);
  *(_QWORD *)(v11 - 216) = v25;
  v26 = *(_QWORD *)(v11 - 336);
  *(_QWORD *)(v11 - 208) = *(_QWORD *)(v11 - 304);
  *(_QWORD *)(v11 - 200) = v26;
  *(_QWORD *)(v11 - 192) = *(_QWORD *)(v11 - 288);
  sub_2212F4668();
  v27 = *(_QWORD *)(v11 - 296);
  sub_2212F3D20();
  sub_2212F4308();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v11 - 280) + 8))(v27, *(_QWORD *)(v11 - 272));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 320) + 8))(v10, v9);
  swift_getKeyPath();
  *(_QWORD *)(v11 - 136) = v9;
  *(_QWORD *)(v11 - 128) = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_221032BD4();
  swift_release();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 368) + 8))(v16, v13);
  v29 = sub_2210E1B0C();
  *(_QWORD *)(v11 - 176) = OpaqueTypeConformance2;
  *(_QWORD *)(v11 - 168) = v29;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v17, v11 - 176);
  sub_221088D68((uint64_t)v21, v17, (uint64_t)v23);
  v30 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 360) + 8);
  v30(v21, v17);
  sub_221087210((uint64_t)v23, v17, *(_QWORD *)(v11 - 264));
  v30(v23, v17);
  OUTLINED_FUNCTION_19();
}

void sub_2210E1164(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[36];

  v8[12] = a1;
  v8[26] = a3;
  v8[7] = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8[9] = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[29] = v4;
  v8[30] = v5;
  v8[31] = v6;
  v8[32] = v7;
  type metadata accessor for PromotionalIconLoadingView();
}

void sub_2210E11F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v7 = MEMORY[0x22766BAC4](&unk_221317AC8, a1);
  *(_QWORD *)(v5 - 136) = v3;
  *(_QWORD *)(v5 - 128) = a1;
  *(_QWORD *)(v5 - 120) = v1;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v7;
  *(_QWORD *)(v5 - 96) = v4;
  type metadata accessor for DynamicSubscriptionOfferView();
}

void sub_2210E1228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v13 - 320) = *(_QWORD *)(a1 - 8);
  v14 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 288) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 304) = (char *)&a9 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 336) = (char *)&a9 - v19;
  *(_QWORD *)(v13 - 280) = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 248) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v13 - 136) = v11;
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 200) = v10;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 216) = v12;
  type metadata accessor for StaticSubscriptionOfferView();
}

void sub_2210E1310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v15 - 352) = *(_QWORD *)(a1 - 8);
  v16 = MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v15 - 328) = (char *)&a9 - v17;
  v18 = sub_2212F51B4();
  *(_QWORD *)(v15 - 256) = v18;
  *(_QWORD *)(v15 - 264) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v15 - 360) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v15 - 344) = (char *)&a9 - v21;
  *(_QWORD *)(v15 - 136) = v11;
  *(_QWORD *)(v15 - 128) = v14;
  *(_QWORD *)(v15 - 240) = v14;
  *(_QWORD *)(v15 - 232) = v13;
  *(_QWORD *)(v15 - 120) = v9;
  *(_QWORD *)(v15 - 112) = v10;
  *(_QWORD *)(v15 - 168) = v10;
  *(_QWORD *)(v15 - 104) = v13;
  *(_QWORD *)(v15 - 96) = v12;
  *(_QWORD *)(v15 - 208) = v12;
  type metadata accessor for SubscriptionOfferView.Storage();
}

void sub_2210E13FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[96];

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = &v20[-v6];
  *(_QWORD *)(v4 - 224) = v2;
  v8 = sub_2212F3A20();
  *(_QWORD *)(v4 - 184) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 - 176) = v8;
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v4 - 192) = &v20[-v9];
  (*(void (**)(_QWORD *))(v5 + 16))(v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = *(_QWORD *)(v4 - 264);
    v11 = *(_QWORD *)(v4 - 344);
    v12 = v7;
    v13 = *(_QWORD *)(v4 - 256);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v10 + 32))(v11, v12, v13);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v10 + 16))(*(_QWORD *)(v4 - 360), v11, v13);
    v14 = *(_QWORD *)(v4 - 240);
    *(_QWORD *)(v4 - 136) = v3;
    *(_QWORD *)(v4 - 128) = v14;
    v15 = *(_QWORD *)(v4 - 168);
    *(_QWORD *)(v4 - 120) = v1;
    *(_QWORD *)(v4 - 112) = v15;
    v16 = *(_QWORD *)(v4 - 208);
    *(_QWORD *)(v4 - 104) = *(_QWORD *)(v4 - 232);
    *(_QWORD *)(v4 - 96) = v16;
    type metadata accessor for SubscriptionOfferView();
  }
  *(_QWORD *)(v4 - 256) = *v7;
  *(_QWORD *)(v4 - 264) = v7[1];
  v17 = *(_QWORD *)(v4 - 240);
  *(_QWORD *)(v4 - 136) = v3;
  *(_QWORD *)(v4 - 128) = v17;
  v18 = *(_QWORD *)(v4 - 168);
  *(_QWORD *)(v4 - 120) = v1;
  *(_QWORD *)(v4 - 112) = v18;
  v19 = *(_QWORD *)(v4 - 208);
  *(_QWORD *)(v4 - 104) = *(_QWORD *)(v4 - 232);
  *(_QWORD *)(v4 - 96) = v19;
  type metadata accessor for SubscriptionOfferView();
}

void sub_2210E1674(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 280) + 16))(*(_QWORD *)(v4 - 248), v3 + a1[17], v2);
  v6 = a1[19];
  *(_QWORD *)(v4 - 232) = *(_QWORD *)(v3 + a1[18]);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 312) + 16))(*(_QWORD *)(v4 - 296), v3 + v6, v1);
  swift_retain();
  sub_2210C6568(*(_QWORD *)(v4 - 256), *(_QWORD *)(v4 - 264), *(_QWORD **)(v4 - 288));
}

void sub_2210E1730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 - 224);
  MEMORY[0x22766BAC4](&unk_2213039C0, v3);
  v4 = *(_QWORD *)(v2 - 304);
  sub_221088D68(v1, v3, v4);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 320) + 8);
  v5(v1, v3);
  sub_221087210(v4, v3, v1);
  MEMORY[0x22766BAC4](&unk_221303000, v0);
  sub_22113B11C();
  v5(v1, v3);
  v5(v4, v3);
  JUMPOUT(0x2210E17DCLL);
}

uint64_t sub_2210E1868@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = sub_2212338FC();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

void sub_2210E1898()
{
  swift_retain();
  sub_221233938();
  OUTLINED_FUNCTION_14_13();
}

void type metadata accessor for SubscriptionOfferView.Storage()
{
  JUMPOUT(0x22766BA10);
}

uint64_t sub_2210E18EC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2210E1910(uint64_t a1)
{
  uint64_t *v1;

  sub_2210DFC5C(a1, v1[8], v1[9], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_2210E1940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 24) - 8);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (((*(unsigned __int8 *)(v2 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
      + *(_QWORD *)(v2 + 64)
      + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  OUTLINED_FUNCTION_18_18(v2);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  return swift_deallocObject();
}

void sub_2210E19C4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  sub_2210E007C(*(unsigned __int8 *)(v1 + 64), v1 + v5, v1 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6), v2, v3, a1, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

void sub_2210E1A24(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t sub_2210E1A34()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2210E1A58()
{
  sub_2210E0590();
}

uint64_t sub_2210E1A68()
{
  uint64_t v0;

  OUTLINED_FUNCTION_18_18(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8));
  return swift_deallocObject();
}

void sub_2210E1AB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  sub_2210E0920(a1, *(unsigned __int8 *)(v1 + 48), v1 + ((v3 + 49) & ~v3), *(_QWORD *)(v1 + 16), v2);
}

void sub_2210E1AE0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2210E0C08(*(_BYTE *)(v1 + 16), a1);
}

void sub_2210E1AF8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2210E1164(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 32), a1);
}

unint64_t sub_2210E1B0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255656B50;
  if (!qword_255656B50)
  {
    v1 = sub_2212F3E40();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDF1078], v1);
    atomic_store(result, (unint64_t *)&qword_255656B50);
  }
  return result;
}

uint64_t sub_2210E1B4C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2210E1B88()
{
  type metadata accessor for SubscriptionOfferView.Storage();
}

uint64_t *sub_2210E1C70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = sub_2212F51B4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 0x10uLL)
    v8 = 16;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v8 + v10 + 1;
  v13 = *(_QWORD *)(v9 + 64) + 7;
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = v15;
  v17 = v15 | *(_DWORD *)(v7 + 80) & 0xF8 | v10;
  v18 = (v15 | v10 | *(_DWORD *)(v7 + 80)) & 0x100000;
  if (v17 > 7
    || v18 != 0
    || ((((((v13 + (v12 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + v15 + 16) & ~(unint64_t)v15)
       + *(_QWORD *)(v14 + 64)) & 0xFFFFFFFFFFFFFFF8)
     + 41 > 0x18)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
    swift_retain();
  }
  else
  {
    v22 = *((unsigned __int8 *)a2 + v8);
    if (v22 >= 2)
    {
      if (v8 <= 3)
        v23 = v8;
      else
        v23 = 4;
      __asm { BR              X14 }
    }
    v43 = *(_QWORD *)(a3 + 16);
    v44 = *(_QWORD *)(v14 + 64);
    v45 = *(_QWORD *)(a3 + 32);
    v24 = ~v11;
    v25 = ~(unint64_t)v15;
    if (v22 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      v26 = 1;
    }
    else
    {
      v27 = a2[1];
      *a1 = *a2;
      a1[1] = v27;
      swift_bridgeObjectRetain();
      v26 = 0;
    }
    *((_BYTE *)a1 + v8) = v26;
    v28 = ((unint64_t)a2 + v12) & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v24, v28, v43);
    v29 = (_QWORD *)((v13 + (((unint64_t)a1 + v12) & v24)) & 0xFFFFFFFFFFFFFFF8);
    v30 = (_QWORD *)((v13 + v28) & 0xFFFFFFFFFFFFFFF8);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = ((unint64_t)v29 + v16 + 16) & v25;
    v33 = ((unint64_t)v30 + v16 + 16) & v25;
    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    swift_retain();
    v34(v32, v33, v45);
    v35 = v33 + v44;
    *(_BYTE *)(v32 + v44) = *(_BYTE *)(v33 + v44);
    v36 = (v32 + v44) & 0xFFFFFFFFFFFFFFF8;
    v37 = *(_QWORD *)(((v33 + v44) & 0xFFFFFFFFFFFFFFF8) + 8);
    v38 = *(_QWORD *)(((v33 + v44) & 0xFFFFFFFFFFFFFFF8) + 16);
    v39 = *(_QWORD *)(((v33 + v44) & 0xFFFFFFFFFFFFFFF8) + 24);
    v40 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFFF8) + 32);
    v41 = *(_BYTE *)((v35 & 0xFFFFFFFFFFFFFFF8) + 40);
    sub_2210BC958();
    *(_QWORD *)(v36 + 8) = v37;
    *(_QWORD *)(v36 + 16) = v38;
    *(_QWORD *)(v36 + 24) = v39;
    *(_QWORD *)(v36 + 32) = v40;
    *(_BYTE *)(v36 + 40) = v41;
  }
  return a1;
}

uint64_t sub_2210E1EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = sub_2212F51B4();
  v5 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v5 + 64) <= 0x10uLL)
    v6 = 16;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *(unsigned __int8 *)(a1 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  else
    swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v10 = (a1 + v6 + *(unsigned __int8 *)(v9 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v10);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 8))((v11
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80)
                                                                                            + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80));
  return sub_221046DA8();
}

_QWORD *sub_2210E2048(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_2212F51B4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 0x10uLL)
    v8 = 16;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
    v11 = 1;
  }
  else
  {
    v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    swift_bridgeObjectRetain();
    v11 = 0;
  }
  *((_BYTE *)a1 + v8) = v11;
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v8 + v14 + 1;
  v16 = ((unint64_t)a1 + v15) & ~v14;
  v17 = ((unint64_t)a2 + v15) & ~v14;
  (*(void (**)(unint64_t, unint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64) + 7;
  v19 = (_QWORD *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = *(_QWORD *)(a3 + 32);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((unint64_t)v19 + v24 + 16) & ~v24;
  v26 = ((unint64_t)v20 + v24 + 16) & ~v24;
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  swift_retain();
  v27(v25, v26, v22);
  v28 = *(_QWORD *)(v23 + 64);
  v29 = v25 + v28;
  v30 = v26 + v28;
  *(_BYTE *)v29 = *(_BYTE *)v30;
  v31 = v29 & 0xFFFFFFFFFFFFFFF8;
  v30 &= 0xFFFFFFFFFFFFFFF8;
  v32 = *(_QWORD *)(v30 + 8);
  v33 = *(_QWORD *)(v30 + 16);
  v34 = *(_QWORD *)(v30 + 24);
  v35 = *(_QWORD *)(v30 + 32);
  LOBYTE(v27) = *(_BYTE *)(v30 + 40);
  sub_2210BC958();
  *(_QWORD *)(v31 + 8) = v32;
  *(_QWORD *)(v31 + 16) = v33;
  *(_QWORD *)(v31 + 24) = v34;
  *(_QWORD *)(v31 + 32) = v35;
  *(_BYTE *)(v31 + 40) = (_BYTE)v27;
  return a1;
}

_QWORD *sub_2210E2228(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if (a1 != a2)
  {
    v6 = sub_2212F51B4();
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 0x10uLL)
      v8 = 16;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(a1, v6);
    else
      swift_bridgeObjectRelease();
    v11 = *((unsigned __int8 *)a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
      *((_BYTE *)a1 + v8) = 1;
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + v8) = 0;
      swift_bridgeObjectRetain();
    }
  }
  v13 = *(_QWORD *)(*(_QWORD *)(sub_2212F51B4() - 8) + 64);
  if (v13 <= 0x10)
    v13 = 16;
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = v13 + v15 + 1;
  v17 = ((unint64_t)a1 + v16) & ~v15;
  v18 = ((unint64_t)a2 + v16) & ~v15;
  (*(void (**)(unint64_t, unint64_t))(v14 + 24))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64) + 7;
  v20 = (_QWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  v23 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((unint64_t)v20 + v24 + 16) & ~v24;
  v26 = ((unint64_t)v21 + v24 + 16) & ~v24;
  (*(void (**)(uint64_t, uint64_t))(v23 + 24))(v25, v26);
  v27 = *(_QWORD *)(v23 + 64);
  v28 = v25 + v27;
  v29 = v26 + v27;
  *(_BYTE *)v28 = *(_BYTE *)v29;
  v30 = v28 & 0xFFFFFFFFFFFFFFF8;
  v29 &= 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)(v29 + 8);
  v32 = *(_QWORD *)(v29 + 16);
  v33 = *(_QWORD *)(v29 + 24);
  v34 = *(_QWORD *)(v29 + 32);
  LOBYTE(v23) = *(_BYTE *)(v29 + 40);
  sub_2210BC958();
  *(_QWORD *)(v30 + 8) = v31;
  *(_QWORD *)(v30 + 16) = v32;
  *(_QWORD *)(v30 + 24) = v33;
  *(_QWORD *)(v30 + 32) = v34;
  *(_BYTE *)(v30 + 40) = v23;
  sub_221046DA8();
  return a1;
}

_OWORD *sub_2210E24E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;

  v6 = sub_2212F51B4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_QWORD *)(v7 + 64) <= 0x10uLL)
    v8 = 16;
  else
    v8 = *(_QWORD *)(v7 + 64);
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 1)
  {
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
    v11 = 1;
  }
  else
  {
    v11 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v8) = v11;
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v8 + v13 + 1;
  v15 = ((unint64_t)a1 + v14) & ~v13;
  v16 = ((unint64_t)a2 + v14) & ~v13;
  (*(void (**)(unint64_t, unint64_t))(v12 + 32))(v15, v16);
  v17 = *(_QWORD *)(v12 + 64) + 7;
  v18 = (_OWORD *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_OWORD *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = ((unint64_t)v18 + v21 + 16) & ~v21;
  v23 = ((unint64_t)v19 + v21 + 16) & ~v21;
  (*(void (**)(uint64_t, uint64_t))(v20 + 32))(v22, v23);
  v24 = *(_QWORD *)(v20 + 64);
  v25 = v22 + v24;
  v26 = v23 + v24;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  v25 &= 0xFFFFFFFFFFFFFFF8;
  v26 &= 0xFFFFFFFFFFFFFFF8;
  v27 = *(_OWORD *)(v26 + 24);
  v28 = *(_BYTE *)(v26 + 40);
  *(_OWORD *)(v25 + 8) = *(_OWORD *)(v26 + 8);
  *(_BYTE *)(v25 + 40) = v28;
  *(_OWORD *)(v25 + 24) = v27;
  return a1;
}

_OWORD *sub_2210E2698(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;

  if (a1 != a2)
  {
    v6 = sub_2212F51B4();
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v7 + 64) <= 0x10uLL)
      v8 = 16;
    else
      v8 = *(_QWORD *)(v7 + 64);
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
      (*(void (**)(_OWORD *, uint64_t))(v7 + 8))(a1, v6);
    else
      swift_bridgeObjectRelease();
    v11 = *((unsigned __int8 *)a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
      v13 = 1;
    }
    else
    {
      v13 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v8) = v13;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(sub_2212F51B4() - 8) + 64);
  if (v14 <= 0x10)
    v14 = 16;
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v14 + v16 + 1;
  v18 = ((unint64_t)a1 + v17) & ~v16;
  v19 = ((unint64_t)a2 + v17) & ~v16;
  (*(void (**)(unint64_t, unint64_t))(v15 + 40))(v18, v19);
  v20 = *(_QWORD *)(v15 + 64) + 7;
  v21 = (_OWORD *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_OWORD *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  swift_release();
  v23 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = ((unint64_t)v21 + v24 + 16) & ~v24;
  v26 = ((unint64_t)v22 + v24 + 16) & ~v24;
  (*(void (**)(uint64_t, uint64_t))(v23 + 40))(v25, v26);
  v27 = *(_QWORD *)(v23 + 64);
  v28 = v25 + v27;
  v29 = v26 + v27;
  *(_BYTE *)v28 = *(_BYTE *)v29;
  v28 &= 0xFFFFFFFFFFFFFFF8;
  v29 &= 0xFFFFFFFFFFFFFFF8;
  v30 = *(_BYTE *)(v29 + 40);
  v31 = *(_OWORD *)(v29 + 24);
  *(_OWORD *)(v28 + 8) = *(_OWORD *)(v29 + 8);
  *(_OWORD *)(v28 + 24) = v31;
  *(_BYTE *)(v28 + 40) = v30;
  sub_221046DA8();
  return a1;
}

uint64_t sub_2210E2924(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;

  v6 = sub_2212F51B4();
  if (*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) <= 0x10uLL)
    v7 = 16;
  else
    v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned int *)(v8 + 84);
  v10 = *(_QWORD *)(a3 + 32);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if (v9 <= v12)
    v13 = *(_DWORD *)(v11 + 84);
  else
    v13 = *(_DWORD *)(v8 + 84);
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  if (!a2)
    return 0;
  v15 = *(unsigned __int8 *)(v8 + 80);
  v16 = v7 + v15 + 1;
  v17 = *(_QWORD *)(v8 + 64) + 7;
  v18 = *(unsigned __int8 *)(v11 + 80);
  v19 = v18 + 16;
  if (v14 < a2)
  {
    v20 = ((((v19 + ((v17 + (v16 & ~v15)) & 0xFFFFFFFFFFFFFFF8)) & ~v18) + *(_QWORD *)(v11 + 64)) & 0xFFFFFFFFFFFFFFF8)
        + 41;
    if (v20 < 4)
      v21 = ((a2 - v14 + 255) >> (8 * v20)) + 1;
    else
      v21 = 2;
    if (v21 >= 0x10000)
      v22 = 4;
    else
      v22 = 2;
    if (v21 < 0x100)
      v22 = 1;
    if (v21 >= 2)
      v23 = v22;
    else
      v23 = 0;
    __asm { BR              X5 }
  }
  v25 = (v16 + a1) & ~v15;
  if ((_DWORD)v9 == v14)
  {
    v12 = v9;
    v10 = *(_QWORD *)(a3 + 16);
    return __swift_getEnumTagSinglePayload(v25, v12, v10);
  }
  v26 = (unint64_t *)((v17 + v25) & 0xFFFFFFFFFFFFFFF8);
  if ((v13 & 0x80000000) != 0)
  {
    v25 = ((unint64_t)v26 + v19) & ~v18;
    return __swift_getEnumTagSinglePayload(v25, v12, v10);
  }
  v27 = *v26;
  if (v27 >= 0xFFFFFFFF)
    LODWORD(v27) = -1;
  return (v27 + 1);
}

void sub_2210E2AEC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  size_t v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;

  v8 = sub_2212F51B4();
  if (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) <= 0x10uLL)
    v9 = 16;
  else
    v9 = *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v11 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  if (*(_DWORD *)(v10 + 84) <= *(_DWORD *)(v11 + 84))
    v12 = *(_DWORD *)(v11 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = ((((*(unsigned __int8 *)(v11 + 80)
          + 16
          + ((*(_QWORD *)(v10 + 64)
            + 7
            + ((v9 + *(unsigned __int8 *)(v10 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
        + *(_QWORD *)(v11 + 64)) & 0xFFFFFFFFFFFFFFF8)
      + 41;
  if (v13 >= a3)
  {
    v17 = 0;
  }
  else
  {
    if (v14 <= 3)
      v15 = ((a3 - v13 + 255) >> (8 * v14)) + 1;
    else
      v15 = 2;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
  }
  if (v13 < a2)
  {
    if (v14 >= 4)
      v18 = ~v13 + a2;
    else
      v18 = (~(_BYTE)v13 + a2);
    bzero(a1, v14);
    if ((_DWORD)v14 == 1)
      *a1 = v18;
    else
      *(_DWORD *)a1 = v18;
    __asm { BR              X10 }
  }
  __asm { BR              X1 }
}

void sub_2210E2C74()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x2210E2D04);
}

void sub_2210E2C7C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x2210E2C84);
  JUMPOUT(0x2210E2D04);
}

void sub_2210E2CBC()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x2210E2D04);
}

void sub_2210E2CC4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x2210E2D04);
}

void sub_2210E2CCC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (v4)
  {
    if (v0 != v2)
    {
      if ((v1 & 0x80000000) == 0)
      {
        if ((v4 & 0x80000000) == 0)
          JUMPOUT(0x2210E2D00);
        JUMPOUT(0x2210E2CF8);
      }
      JUMPOUT(0x2210E2CD8);
    }
    JUMPOUT(0x2210E2CE4);
  }
  JUMPOUT(0x2210E2D04);
}

void sub_2210E2D1C()
{
  OUTLINED_FUNCTION_10_19();
  type metadata accessor for PromotionalIconLoadingView();
}

void sub_2210E2D54()
{
  OUTLINED_FUNCTION_5_2();
}

void sub_2210E2D64()
{
  OUTLINED_FUNCTION_10_19();
  type metadata accessor for StaticSubscriptionOfferView();
}

void sub_2210E2D78()
{
  OUTLINED_FUNCTION_10_19();
  type metadata accessor for DynamicSubscriptionOfferView();
}

void sub_2210E2D90()
{
  uint64_t v0;

  sub_2212F3A20();
  sub_2212F4674();
  MEMORY[0x22766BAC4](&unk_221303000, v0);
  OUTLINED_FUNCTION_10_13();
}

void sub_2210E2DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  a14 = a1;
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v14, &a13);
  OUTLINED_FUNCTION_5_2();
}

uint64_t sub_2210E2E04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[5];
  uint64_t v7;
  uint64_t v8;

  v3 = OUTLINED_FUNCTION_10_19();
  MEMORY[0x22766BA58](v3);
  sub_2212F3E40();
  v4 = sub_2212F3348();
  v7 = v1;
  v8 = a1;
  v6[0] = swift_getOpaqueTypeConformance2();
  v6[1] = sub_2210E1B0C();
  return MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v4, v6);
}

uint64_t sub_2210E2E94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F51B4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_2210E2F04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2212F51B4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2210E2FC0(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = sub_2212F51B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *sub_2210E3010(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2212F51B4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2210E30A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;

  if (a1 != a2)
  {
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_2212F51B4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_2210E3154(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2212F51B4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

uint64_t sub_2210E31F8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2210E3240(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_4_23()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_7_19()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_8_14()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_10_19()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_11_22(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_2212F51B4();
}

void OUTLINED_FUNCTION_12_23()
{
  type metadata accessor for SubscriptionOfferView();
}

uint64_t OUTLINED_FUNCTION_18_18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v2 + v1);
}

void SubscriptionStoreView.init(groupID:visibleRelationships:marketingContent:)(ValueMetadata *a1@<X5>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t *, _QWORD);
  __int128 v13;
  uint64_t v14;
  char v15;

  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_20_0();
  v9 = *v8;
  *(_QWORD *)&v13 = v10;
  *((_QWORD *)&v13 + 1) = v11;
  v14 = v9;
  v15 = 1;
  v12(v10, v11, v8, v12);
  sub_2210E3C2C(&v13, v3, 0, a1, a2, a3);
  OUTLINED_FUNCTION_14_13();
}

uint64_t sub_2210E33A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 48));
  v3 = *v2;
  v4 = *((unsigned __int8 *)v2 + 8);
  j__swift_retain(*v2, v4);
  sub_221044D04();
  v6 = v5;
  j_j__swift_release(v3, v4);
  return v6;
}

uint64_t sub_2210E33FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1 + *(int *)(a1 + 52);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned __int8 *)(v2 + 8);
  sub_221017C08(*(_QWORD *)v2, *(_BYTE *)(v2 + 8));
  sub_221044D24();
  v6 = v5;
  sub_221047104(v3, v4);
  return v6;
}

uint64_t sub_2210E3458()
{
  uint64_t v1;

  OUTLINED_FUNCTION_30_12();
  return v1;
}

uint64_t sub_2210E3484()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25565BEA0);
  sub_2212F4764();
  return v1;
}

uint64_t sub_2210E34CC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565BEA0);
  return sub_2212F4770();
}

uint64_t sub_2210E3518()
{
  unsigned __int8 v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255658350);
  sub_2212F4764();
  return v1;
}

uint64_t sub_2210E356C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658350);
  return sub_2212F4770();
}

uint64_t sub_2210E35C4()
{
  uint64_t v1;

  OUTLINED_FUNCTION_50_3();
  OUTLINED_FUNCTION_30_12();
  return v1;
}

uint64_t sub_2210E35F0()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25565BE98);
  sub_2212F4764();
  return v1;
}

uint64_t sub_2210E363C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1 + *(int *)(a1 + 72);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned __int8 *)(v2 + 8);
  sub_221017C08(*(_QWORD *)v2, *(_BYTE *)(v2 + 8));
  sub_221045D88();
  v6 = v5;
  sub_221047104(v3, v4);
  return v6 & 0xFFFFFFFFFFLL;
}

double sub_2210E3698@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v4;
  double result;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;
  _BYTE __dst[65];

  memcpy(__dst, (const void *)(v2 + *(int *)(a1 + 76)), sizeof(__dst));
  sub_221117240(v7);
  v4 = v7[1];
  *a2 = v7[0];
  a2[1] = v4;
  result = *(double *)&v8;
  v6 = v9;
  a2[2] = v8;
  a2[3] = v6;
  return result;
}

void sub_2210E36F4(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = type metadata accessor for Subscription();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_13_0();
  v7 = v6 - v5;
  if (v1[24] == 2 && *(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    sub_221036990(*(_QWORD *)v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v7, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
    sub_2212F4E24();
    sub_221011A28(v7, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
    v8 = OUTLINED_FUNCTION_92_0();
    __swift_storeEnumTagSinglePayload(a1, 0, 1, v8);
    OUTLINED_FUNCTION_17_0();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_92_0();
    __swift_storeEnumTagSinglePayload(a1, 1, 1, v9);
  }
}

void static Product.SubscriptionRelationship.all.getter(_QWORD *a1@<X8>)
{
  if (qword_255655CB8 != -1)
    swift_once();
  *a1 = qword_25565BD20;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210E3820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v17;
  __int128 v18;

  *(_QWORD *)(a6 + 32) = swift_getKeyPath();
  *(_BYTE *)(a6 + 72) = 0;
  *(_QWORD *)(a6 + 80) = swift_getKeyPath();
  *(_BYTE *)(a6 + 88) = 0;
  *(_QWORD *)(a6 + 96) = swift_getKeyPath();
  *(_BYTE *)(a6 + 104) = 0;
  *(_QWORD *)(a6 + 112) = swift_getKeyPath();
  *(_QWORD *)(a6 + 120) = 0;
  *(_QWORD *)(a6 + 128) = 0;
  *(_QWORD *)(a6 + 136) = 0;
  *(_BYTE *)(a6 + 144) = 0;
  sub_2212F4758();
  *(_OWORD *)(a6 + 152) = v18;
  sub_2212F4758();
  *(_BYTE *)(a6 + 168) = v18;
  *(_QWORD *)(a6 + 176) = *((_QWORD *)&v18 + 1);
  type metadata accessor for SubscriptionStoreViewEventConfiguration();
  swift_allocObject();
  v17 = sub_2211E144C();
  sub_2212F4758();
  *(_OWORD *)(a6 + 184) = v18;
  *(_QWORD *)(a6 + 200) = swift_getKeyPath();
  *(_BYTE *)(a6 + 208) = 0;
  KeyPath = swift_getKeyPath();
  v12 = swift_getKeyPath();
  v13 = swift_getKeyPath();
  v14 = swift_getKeyPath();
  *(_QWORD *)(a6 + 216) = KeyPath;
  *(_BYTE *)(a6 + 224) = 0;
  *(_QWORD *)(a6 + 232) = v12;
  *(_BYTE *)(a6 + 240) = 0;
  *(_QWORD *)(a6 + 248) = v13;
  *(_BYTE *)(a6 + 256) = 0;
  *(_QWORD *)(a6 + 264) = v14;
  *(_QWORD *)(a6 + 272) = 0;
  *(_BYTE *)(a6 + 280) = 0;
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_BYTE *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 25) = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565BE98);
  sub_2212F4764();
  *(_BYTE *)(v17 + 59) = 0;
  return swift_release();
}

uint64_t sub_2210E39FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  int *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v29;
  __int128 v30;

  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25565BEA8);
  v12 = a7 + v11[11];
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_44_6(KeyPath);
  v14 = swift_getKeyPath();
  OUTLINED_FUNCTION_43_6(v14);
  v15 = swift_getKeyPath();
  OUTLINED_FUNCTION_42_7(v15);
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_QWORD *)(v12 + 8) = 0;
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = 0;
  v16 = v11[15];
  OUTLINED_FUNCTION_38_7();
  *(_OWORD *)(a7 + v16) = v30;
  v17 = a7 + v11[16];
  OUTLINED_FUNCTION_38_7();
  *(_BYTE *)v17 = v30;
  *(_QWORD *)(v17 + 8) = *((_QWORD *)&v30 + 1);
  v18 = (_OWORD *)(a7 + v11[17]);
  OUTLINED_FUNCTION_50_3();
  OUTLINED_FUNCTION_34_7();
  v29 = sub_2211E144C();
  sub_2212F4758();
  *v18 = v30;
  v19 = a7 + v11[18];
  *(_QWORD *)v19 = swift_getKeyPath();
  *(_BYTE *)(v19 + 8) = 0;
  v20 = a7 + v11[19];
  v21 = swift_getKeyPath();
  v22 = swift_getKeyPath();
  v23 = swift_getKeyPath();
  v24 = swift_getKeyPath();
  *(_QWORD *)v20 = v21;
  *(_BYTE *)(v20 + 8) = 0;
  *(_QWORD *)(v20 + 16) = v22;
  *(_BYTE *)(v20 + 24) = 0;
  *(_QWORD *)(v20 + 32) = v23;
  *(_BYTE *)(v20 + 40) = 0;
  *(_QWORD *)(v20 + 48) = v24;
  *(_QWORD *)(v20 + 56) = 0;
  *(_BYTE *)(v20 + 64) = 0;
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_BYTE *)(a7 + 24) = a4;
  sub_221036990(a5, a7 + v11[9], (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOfferViewNoCodeMarketingContent);
  *(_BYTE *)(a7 + v11[10]) = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565BE98);
  sub_2212F4764();
  sub_221011A28(a5, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOfferViewNoCodeMarketingContent);
  *(_BYTE *)(v29 + 59) = 1;
  return swift_release();
}

uint64_t sub_2210E3C2C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, ValueMetadata *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  char v10;
  int *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *Description;
  uint64_t v29;
  __int128 v31;

  v31 = *a1;
  v9 = *((_QWORD *)a1 + 2);
  v10 = *((_BYTE *)a1 + 24);
  v11 = (int *)type metadata accessor for SubscriptionStoreView(0, (uint64_t)a4, a5, (uint64_t)a4);
  v12 = a6 + v11[11];
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_44_6(KeyPath);
  v14 = swift_getKeyPath();
  OUTLINED_FUNCTION_43_6(v14);
  v15 = swift_getKeyPath();
  OUTLINED_FUNCTION_42_7(v15);
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_QWORD *)(v12 + 8) = 0;
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = 0;
  v16 = (uint64_t *)(a6 + v11[15]);
  *v16 = sub_2210E3458();
  v16[1] = v17;
  v18 = a6 + v11[16];
  *(_BYTE *)v18 = sub_22106F9EC() & 1;
  *(_QWORD *)(v18 + 8) = v19;
  v20 = (uint64_t *)(a6 + v11[17]);
  OUTLINED_FUNCTION_50_3();
  OUTLINED_FUNCTION_34_7();
  sub_2211E144C();
  *v20 = sub_2210E35C4();
  v20[1] = v21;
  v22 = a6 + v11[18];
  *(_QWORD *)v22 = swift_getKeyPath();
  *(_BYTE *)(v22 + 8) = 0;
  v23 = a6 + v11[19];
  v24 = swift_getKeyPath();
  v25 = swift_getKeyPath();
  v26 = swift_getKeyPath();
  v27 = swift_getKeyPath();
  *(_QWORD *)v23 = v24;
  *(_BYTE *)(v23 + 8) = 0;
  *(_QWORD *)(v23 + 16) = v25;
  *(_BYTE *)(v23 + 24) = 0;
  *(_QWORD *)(v23 + 32) = v26;
  *(_BYTE *)(v23 + 40) = 0;
  *(_QWORD *)(v23 + 48) = v27;
  *(_QWORD *)(v23 + 56) = 0;
  *(_BYTE *)(v23 + 64) = 0;
  *(_OWORD *)a6 = v31;
  *(_QWORD *)(a6 + 16) = v9;
  *(_BYTE *)(a6 + 24) = v10;
  Description = a4[-1].Description;
  (*((void (**)(uint64_t, uint64_t, ValueMetadata *))Description + 2))(a6 + v11[9], a2, a4);
  *(_BYTE *)(a6 + v11[10]) = a3;
  v29 = sub_2210E35F0();
  OUTLINED_FUNCTION_37_5(*((uint64_t (**)(uint64_t, uint64_t))Description + 1));
  *(_BYTE *)(v29 + 59) = a4 != &type metadata for AutomaticSubscriptionStoreMarketingContent;
  return swift_release();
}

void SubscriptionStoreView.init<A>(productIDs:marketingContent:)(uint64_t a1@<X0>, void (*a2)(void)@<X1>, ValueMetadata *a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  char v22;

  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_13_0();
  v12 = v11 - v10;
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_13_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v17 - v16, a1, v18);
  v21 = 0;
  v20 = (unint64_t)sub_2212F55BC();
  v22 = 0;
  a2();
  sub_2210E3C2C(&v20, v12, 0, a3, a4, a5);
  OUTLINED_FUNCTION_37_5(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  OUTLINED_FUNCTION_19();
}

uint64_t SubscriptionStoreView.init<A>(subscriptions:marketingContent:)@<X0>(uint64_t a1@<X0>, void (*a2)(unint64_t, uint64_t, uint64_t, uint64_t)@<X1>, ValueMetadata *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;
  char v24;

  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_13_0();
  v15 = v14 - v13;
  sub_221108718(v16, 0, 1);
  v23 = 0;
  v22 = v17;
  v24 = 2;
  a2(v17, v18, v19, v20);
  sub_2210E3C2C(&v22, v15, 0, a3, a5, a6);
  return OUTLINED_FUNCTION_15_6(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8));
}

uint64_t SubscriptionStoreView.init<>(groupID:visibleRelationships:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2210E3820(a1, a2, *a3, 1, 0, a4);
}

void SubscriptionStoreView.init<A>(productIDs:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  ValueMetadata *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_14_19();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_20(v1, v7);
  sub_221061354();
  v2 = OUTLINED_FUNCTION_20_13();
  SubscriptionStoreView.init<A>(productIDs:marketingContent:)(v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_26_13();
  OUTLINED_FUNCTION_14_13();
}

void SubscriptionStoreView.init<A>(subscriptions:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(unint64_t, uint64_t, uint64_t, uint64_t);
  ValueMetadata *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_14_19();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_20(v1, v8);
  sub_221061354();
  v2 = OUTLINED_FUNCTION_20_13();
  SubscriptionStoreView.init<A>(subscriptions:marketingContent:)(v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_26_13();
  OUTLINED_FUNCTION_14_13();
}

uint64_t sub_2210E40AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_255655CB8 != -1)
    result = swift_once();
  *a1 = qword_25565BD20;
  return result;
}

uint64_t sub_2210E40FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  BOOL v7;
  uint64_t result;
  char v9;

  v6 = *a1;
  v7 = *(_BYTE *)(v3 + 24) == 1;
  result = sub_2210E3484();
  v9 = *(_BYTE *)(v3 + *(int *)(a2 + 40));
  *(_QWORD *)a3 = v6;
  *(_BYTE *)(a3 + 8) = v7;
  *(_QWORD *)(a3 + 16) = result;
  *(_BYTE *)(a3 + 24) = v9;
  return result;
}

void sub_2210E415C(uint64_t a1)
{
  id v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  CGRect v10;

  if (sub_2210E33FC(a1) != 3)
  {
    if (qword_255655C50 == -1)
      return;
    goto LABEL_5;
  }
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v1, sel_bounds);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;

  v10.origin.x = v3;
  v10.origin.y = v5;
  v10.size.width = v7;
  v10.size.height = v9;
  CGRectGetWidth(v10);
  if (qword_255655C50 != -1)
LABEL_5:
    swift_once();
}

void sub_2210E425C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v0 = sub_2212F3348();
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_2210E3484();
  sub_2211D50FC(v2);
  sub_2210E3518();
  sub_2210171BC();
}

uint64_t sub_2210E433C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v7 = sub_221017B10();
  *(_QWORD *)(v6 - 96) = v4;
  *(_QWORD *)(v6 - 88) = v7;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v6 - 96);
  sub_221088D68(v3, v1, v2);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(v3, v1);
  sub_221087210(v2, v1, v0);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v2, v1);
}

void SubscriptionStoreView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[38];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v14[28] = a1;
  v21 = a2;
  v3 = sub_2212F3D2C();
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_4();
  v18 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659030);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_3_4();
  v17 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657AC0);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_3_4();
  v16 = v9;
  v15 = *(_QWORD *)(a1 - 8);
  v22 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_4_15();
  v12 = *(_QWORD *)(a1 + 24);
  v24 = v12;
  v13 = sub_221017B10();
  v26 = v12;
  v27 = v13;
  OUTLINED_FUNCTION_3_3();
}

void sub_2210E44E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  type metadata accessor for SubscriptionStoreDynamicView(255, v5, a1, a4);
  sub_2212F3A20();
  type metadata accessor for ProductChangeCountTracker(255, v5, a1, v7);
  v4[66] = sub_2212F3A20();
  v8 = sub_2212F4674();
  v4[59] = *(_QWORD *)(v8 - 8);
  v4[65] = v8;
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_12_15();
  v4[57] = v10;
  v11 = sub_2212F3348();
  v4[27] = *(_QWORD *)(v11 - 8);
  v4[62] = v11;
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_12_15();
  v4[60] = v13;
  v14 = sub_2212F3348();
  v4[30] = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_12_15();
  v4[20] = v16;
  v4[4] = v14;
  sub_2212F3348();
  OUTLINED_FUNCTION_29_10();
  v4[36] = v17;
  v4[63] = v18;
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_12_15();
  v4[22] = v20;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658FA0);
  v21 = OUTLINED_FUNCTION_23_8();
  v4[47] = *(_QWORD *)(v21 - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_12_15();
  v4[26] = v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BD28);
  v4[8] = v21;
  sub_2212F3348();
  OUTLINED_FUNCTION_29_10();
  v4[44] = v24;
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_12_15();
  v4[34] = v26;
  v4[9] = v5;
  v27 = sub_2212F3348();
  v4[48] = *(_QWORD *)(v27 - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_12_15();
  v4[35] = v29;
  type metadata accessor for StorefrontLocaleViewModifier(255);
  v4[11] = v27;
  v30 = sub_2212F3348();
  v4[49] = *(_QWORD *)(v30 - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_12_15();
  v4[40] = v32;
  v4[14] = v30;
  v4[50] = *(_QWORD *)(sub_2212F3348() - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_12_15();
  v4[46] = v34;
  OUTLINED_FUNCTION_18_1();
}

void sub_2210E4774(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  *(_QWORD *)(v1 - 112) = a1;
  OUTLINED_FUNCTION_10_13();
}

void sub_2210E478C()
{
  OUTLINED_FUNCTION_25_1();
}

void sub_2210E479C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(_QWORD *)(v4 - 136) = v2;
  *(_QWORD *)(v4 - 128) = a1;
  v5 = MEMORY[0x22766BAC4](v3, v1[66], v4 - 136);
  v1[1] = v5;
  *(_QWORD *)(v4 - 144) = v5;
  v6 = MEMORY[0x22766BAC4](MEMORY[0x24BDF3F50], v1[65], v4 - 144);
  *v1 = v6;
  v7 = MEMORY[0x24BDEDBB8];
  *(_QWORD *)(v4 - 160) = v6;
  *(_QWORD *)(v4 - 152) = v7;
  v8 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1[62], v4 - 160);
  v1[2] = v8;
  v9 = sub_2210E5C30();
  *(_QWORD *)(v4 - 176) = v8;
  *(_QWORD *)(v4 - 168) = v9;
  OUTLINED_FUNCTION_8_2();
}

void sub_2210E4810(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1[3] = a1;
  v6 = sub_2210E5C6C();
  *(_QWORD *)(v4 - 192) = a1;
  *(_QWORD *)(v4 - 184) = v6;
  v7 = MEMORY[0x22766BAC4](v3, v1[63], v4 - 192);
  v1[5] = v7;
  sub_2210E5FB4(&qword_255658FB8, &qword_255658FA0);
  *(_QWORD *)(v4 - 208) = v7;
  *(_QWORD *)(v4 - 200) = v8;
  v9 = MEMORY[0x22766BAC4](v3, v2, v4 - 208);
  v1[6] = v9;
  sub_2210E5FB4(&qword_25565BD40, &qword_25565BD28);
  *(_QWORD *)(v4 - 224) = v9;
  *(_QWORD *)(v4 - 216) = v10;
  OUTLINED_FUNCTION_3_3();
}

void sub_2210E488C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;

  *(_QWORD *)(v1 + 56) = a1;
  v4 = sub_2210E5CA8();
  *(_QWORD *)(v2 - 240) = a1;
  *(_QWORD *)(v2 - 232) = v4;
  OUTLINED_FUNCTION_7_2();
}

void sub_2210E48A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v1 + 80) = a1;
  sub_221014E78(&qword_25565BD50, type metadata accessor for StorefrontLocaleViewModifier, (uint64_t)&unk_22130A118);
  *(_QWORD *)(v2 - 256) = a1;
  *(_QWORD *)(v2 - 248) = v4;
  OUTLINED_FUNCTION_93_0();
}

void sub_2210E48DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t OpaqueTypeConformance2;
  uint64_t v80;
  uint64_t v81;

  *(_QWORD *)(v9 + 104) = a1;
  *(_QWORD *)(v9 + 736) = a1;
  *(_QWORD *)(v9 + 744) = v10;
  *(_QWORD *)(v9 + 136) = v12;
  v13 = MEMORY[0x22766BAC4](v11, v12, v9 + 736);
  *(_QWORD *)(v9 + 128) = v13;
  *(_QWORD *)(v9 + 688) = v12;
  *(_QWORD *)(v9 + 696) = v13;
  MEMORY[0x22766BA58](0, v9 + 688, MEMORY[0x24BDF2F10], 0);
  OUTLINED_FUNCTION_29_10();
  *(_QWORD *)(v9 + 168) = v14;
  *(_QWORD *)(v9 + 144) = v15;
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_12_15();
  *(_QWORD *)(v9 + 96) = v17;
  sub_2212F3E40();
  OUTLINED_FUNCTION_23_8();
  OUTLINED_FUNCTION_29_10();
  *(_QWORD *)(v9 + 152) = v18;
  *(_QWORD *)(v9 + 192) = v19;
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_12_15();
  *(_QWORD *)(v9 + 120) = v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BD58);
  v22 = OUTLINED_FUNCTION_23_8();
  v23 = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v9 + 200) = v22;
  *(_QWORD *)(v9 + 248) = v23;
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_12_15();
  *(_QWORD *)(v9 + 488) = v25;
  v26 = OUTLINED_FUNCTION_49_2();
  v27 = *(_QWORD *)(v26 - 8);
  *(_QWORD *)(v9 + 256) = v26;
  *(_QWORD *)(v9 + 328) = v27;
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_12_15();
  *(_QWORD *)(v9 + 184) = v29;
  v30 = OUTLINED_FUNCTION_49_2();
  v31 = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(v9 + 296) = v30;
  *(_QWORD *)(v9 + 344) = v31;
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_12_15();
  *(_QWORD *)(v9 + 232) = v33;
  v34 = sub_2212F3348();
  *(_QWORD *)(v9 + 336) = v34;
  *(_QWORD *)(v9 + 360) = *(_QWORD *)(v34 - 8);
  OUTLINED_FUNCTION_1_12();
  v36 = MEMORY[0x24BDAC7A8](v35);
  *(_QWORD *)(v9 + 264) = (char *)&a9 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  *(_QWORD *)(v9 + 312) = (char *)&a9 - v38;
  v39 = *(_QWORD *)(v9 + 544);
  *(_QWORD *)(v9 + 576) = v39;
  v40 = *(_QWORD *)(v9 + 536);
  *(_QWORD *)(v9 + 584) = v40;
  v41 = *(_QWORD *)(v9 + 552);
  *(_QWORD *)(v9 + 592) = v41;
  v42 = *(_QWORD *)(v9 + 456);
  sub_2212F4668();
  sub_2212F4A10();
  v43 = *(_QWORD *)(v9 + 520);
  sub_2212F444C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 472) + 8))(v42, v43);
  v44 = *(_QWORD *)(v9 + 304);
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
  *(_QWORD *)(v9 + 456) = v45;
  v46 = *(_QWORD *)(v9 + 512);
  v47 = *(_QWORD *)(v9 + 224);
  v45(v46, v41, v47);
  v48 = *(unsigned __int8 *)(v44 + 80);
  v49 = v44;
  v50 = (v48 + 32) & ~v48;
  v51 = v50 + *(_QWORD *)(v9 + 464);
  *(_QWORD *)(v9 + 520) = v48 | 7;
  *(_QWORD *)(v9 + 464) = v51;
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = v39;
  *(_QWORD *)(v52 + 24) = v40;
  v53 = v40;
  *(_QWORD *)(v9 + 472) = v50;
  v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32);
  *(_QWORD *)(v9 + 528) = v54;
  v55 = v46;
  v54(v52 + v50, v46, v47);
  v56 = *(_QWORD *)(v9 + 160);
  v57 = *(_QWORD *)(v9 + 480);
  sub_2211D5178((uint64_t)sub_2210E5D30, v52, *(_QWORD *)(v9 + 496), *(_QWORD *)(v9 + 16));
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_51_1(v57, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 216) + 8));
  v58 = v55;
  v59 = v55;
  v60 = *(_QWORD *)(v9 + 552);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 456))(v59, v60, v47);
  v61 = OUTLINED_FUNCTION_46_5();
  *(_QWORD *)(v61 + 16) = *(_QWORD *)(v9 + 544);
  *(_QWORD *)(v61 + 24) = v53;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 528))(v61 + v50, v58, v47);
  v62 = *(_QWORD *)(v9 + 176);
  sub_2211FBE40((uint64_t)sub_2210E5D68, v61, *(_QWORD *)(v9 + 32));
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_51_1(v56, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 240) + 8));
  v63 = OUTLINED_FUNCTION_35_8();
  sub_2211D50FC(v63);
  sub_2210E3518();
  v64 = *(_QWORD *)(v9 + 208);
  v65 = *(_QWORD *)(v9 + 504);
  sub_2210172CC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 288) + 8))(v62, v65);
  swift_getKeyPath();
  sub_221043694();
  OUTLINED_FUNCTION_35_8();
  sub_2210E33A0(v47);
  v66 = *(_QWORD *)(v9 + 408);
  sub_221199764();
  OUTLINED_FUNCTION_15_17();
  sub_221017430(v9 + 688);
  v67 = *(_QWORD *)(v9 + 272);
  sub_2212F4194();
  OUTLINED_FUNCTION_41_1();
  sub_221014F5C(v66, &qword_255657AC0);
  OUTLINED_FUNCTION_15_6(v64, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 376) + 8));
  sub_2210B2380(*(_QWORD *)(v9 + 72), *(_QWORD *)(v9 + 56));
  OUTLINED_FUNCTION_15_6(v67, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 352) + 8));
  v68 = *(_QWORD *)(v60 + 16);
  v69 = *(_BYTE *)(v60 + 24);
  *(_OWORD *)(v9 + 688) = *(_OWORD *)v60;
  *(_QWORD *)(v9 + 704) = v68;
  *(_BYTE *)(v9 + 712) = v69;
  v70 = *(_QWORD *)(v9 + 416);
  sub_2210E36F4(v70);
  v71 = OUTLINED_FUNCTION_92_0();
  LOBYTE(v58) = __swift_getEnumTagSinglePayload(v70, 1, v71) == 1;
  sub_221014F5C(v70, &qword_255659030);
  v72 = *(_QWORD *)(v9 + 320);
  sub_2211545F4(v58, *(_QWORD *)(v9 + 88), *(_QWORD *)(v9 + 80));
  OUTLINED_FUNCTION_17_18(*(_QWORD *)(v9 + 384));
  sub_2210E415C(v47);
  sub_2212F4A10();
  v73 = *(_QWORD *)(v9 + 112);
  v74 = *(_QWORD *)(v9 + 368);
  sub_2212F444C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 392) + 8))(v72, v73);
  v75 = *(_QWORD *)(v9 + 424);
  sub_2212F3D20();
  v76 = *(_QWORD *)(v9 + 96);
  v78 = *(_QWORD *)(v9 + 128);
  v77 = *(_QWORD *)(v9 + 136);
  sub_2212F4308();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 + 432) + 8))(v75, *(_QWORD *)(v9 + 440));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 400) + 8))(v74, v77);
  swift_getKeyPath();
  *(_QWORD *)(v9 + 688) = v77;
  *(_QWORD *)(v9 + 696) = v78;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v80 = *(_QWORD *)(v9 + 144);
  sub_221032BD4();
  OUTLINED_FUNCTION_15_17();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 168) + 8))(v76, v80);
  sub_2210E35F0();
  sub_221014E78((unint64_t *)&qword_255656B50, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  *(_QWORD *)(v9 + 672) = OpaqueTypeConformance2;
  *(_QWORD *)(v9 + 680) = v81;
  OUTLINED_FUNCTION_93_0();
}

void sub_2210E4FA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  sub_2211DFCD4();
  OUTLINED_FUNCTION_15_17();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 192) + 8))(v4, v5);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v1 + 456))(*(_QWORD *)(v1 + 512), v3, v2);
  v7 = OUTLINED_FUNCTION_46_5();
  OUTLINED_FUNCTION_5_19(v7);
  sub_2210E5FB4(&qword_25565BD60, &qword_25565BD58);
  *(_QWORD *)(v1 + 656) = a1;
  *(_QWORD *)(v1 + 664) = v8;
  OUTLINED_FUNCTION_25_1();
}

void sub_2210E5034(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = v1[61];
  sub_2212F44F4();
  OUTLINED_FUNCTION_15_17();
  (*(void (**)(uint64_t, uint64_t))(v1[31] + 8))(v7, v5);
  v3(v4, v1[69], v2);
  v8 = OUTLINED_FUNCTION_46_5();
  OUTLINED_FUNCTION_5_19(v8);
  v9 = MEMORY[0x24BDF0910];
  v1[80] = a1;
  v1[81] = v9;
  OUTLINED_FUNCTION_18_1();
}

void sub_2210E50C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_2212F41B8();
  OUTLINED_FUNCTION_15_17();
  OUTLINED_FUNCTION_51_1(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1[41] + 8));
  v1[78] = a1;
  v1[79] = v2;
  OUTLINED_FUNCTION_7_2();
}

void sub_2210E511C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v4;

  sub_221237D00(v2, a1);
  OUTLINED_FUNCTION_17_18(v1[43]);
  v4 = sub_2210E61BC();
  v1[76] = a1;
  v1[77] = v4;
  OUTLINED_FUNCTION_8_2();
}

void sub_2210E515C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v3 = v0[39];
  sub_221088D68(v2, v1, v3);
  v4 = *(void (**)(uint64_t, uint64_t))(v0[45] + 8);
  v4(v2, v1);
  sub_221087210(v3, v1, v0[56]);
  v4(v3, v1);
  OUTLINED_FUNCTION_19();
}

void sub_2210E51B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[10];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  _QWORD v41[2];

  v32 = a4;
  v7 = sub_2212F3348();
  v41[0] = a3;
  v41[1] = sub_221017B10();
  v8 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v7, v41);
  v10 = type metadata accessor for ProductChangeCountTracker(0, v7, v8, v9);
  v29[1] = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v29[2] = (char *)v29 - v12;
  v29[7] = v8;
  v14 = type metadata accessor for SubscriptionStoreDynamicView(255, v7, v8, v13);
  v15 = sub_2212F3A20();
  v29[6] = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v29[5] = (char *)v29 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v29[3] = *(_QWORD *)(v14 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v19);
  v29[4] = (char *)v29 - v20;
  v31 = v21;
  v30 = sub_2212F3A20();
  v29[9] = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v29[8] = (char *)v29 - v23;
  if (*(_BYTE *)(a1 + 24))
  {
    if (*(_BYTE *)(a1 + 24) == 1)
    {
      v33 = *(_QWORD *)(a1 + 16);
      v24 = type metadata accessor for SubscriptionStoreView(0, a2, a3, v22);
      swift_bridgeObjectRetain();
      sub_2210E40FC(&v33, v24, (uint64_t)&v37);
      v33 = v37;
      v34 = v38;
      v35 = v39;
      v36 = v40;
      sub_2210E425C();
    }
    swift_bridgeObjectRetain();
    sub_2210E40AC(&v33);
    v28 = type metadata accessor for SubscriptionStoreView(0, a2, a3, v27);
    sub_2210E40FC(&v33, v28, (uint64_t)&v37);
    v33 = v37;
    v34 = v38;
    v35 = v39;
    v36 = v40;
    sub_2210E425C();
  }
  swift_bridgeObjectRetain();
  sub_2210E40AC(&v33);
  v26 = type metadata accessor for SubscriptionStoreView(0, a2, a3, v25);
  sub_2210E40FC(&v33, v26, (uint64_t)&v37);
  v33 = v37;
  v34 = v38;
  v35 = v39;
  v36 = v40;
  sub_2210E425C();
}

void sub_2210E5700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  sub_221198D94(v0, (uint64_t *)(v6 - 168), v4, v5, *(_QWORD *)(v6 - 296), v3);
  MEMORY[0x22766BAC4](&unk_22130D170, v1);
  v7 = *(_QWORD *)(v6 - 336);
  sub_221088D68(v3, v1, v7);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 344) + 8);
  v8(v3, v1);
  sub_221087210(v7, v1, v3);
  v9 = MEMORY[0x22766BAC4](&unk_221309FC0, v2);
  *(_QWORD *)(v6 - 184) = v9;
  *(_QWORD *)(v6 - 176) = v9;
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], *(_QWORD *)(v6 - 264), v6 - 184);
  sub_22113B11C();
  v8(v3, v1);
  JUMPOUT(0x2210E57E4);
}

uint64_t sub_2210E5890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SubscriptionStoreView(0, a3, a4, a4);
  return sub_2210E34CC();
}

uint64_t sub_2210E58CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SubscriptionStoreView(0, a3, a4, a4);
  return sub_2210E356C();
}

void sub_2210E5908()
{
  sub_22116A7E4();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210E5924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2210E5EDC(a1, a2, a3, a4, &qword_255657AC0, sub_22116A818);
}

uint64_t sub_2210E5938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = type metadata accessor for SubscriptionStoreView(0, a2, a3, a4);
  sub_2210E35F0();
  v6 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  sub_2210E6790(*(_QWORD *)a1, v11, v12, v13);
  sub_2210E3698(v5, &v14);
  sub_2210E363C(v5);
  sub_2211DFD44();
  sub_221014FB0(v14);
  sub_221014FB0(v15);
  sub_221014FB0(v16);
  sub_221014FB0(v17);
  swift_release();
  sub_2210E5D00(v6, v11, v12, v13);
  if (qword_255655C08 != -1)
    swift_once();
  v7 = type metadata accessor for SKLogger();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_25568CE88);
  v9 = sub_2212F57FC();
  return sub_221089344(1, v9, v8);
}

uint64_t sub_2210E5A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for SubscriptionStoreView(0, a2, a3, a4);
  sub_2210E35F0();
  sub_2210E3698(v4, &v6);
  sub_2210E363C(v4);
  sub_2211DFE90();
  sub_221014FB0(v6);
  sub_221014FB0(v7);
  sub_221014FB0(v8);
  sub_221014FB0(v9);
  swift_release();
  sub_2210E35F0();
  sub_2211DFF74();
  return swift_release();
}

uint64_t AutomaticSubscriptionStoreMarketingContent.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v2;

  *(_QWORD *)a1 = swift_getKeyPath();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  v2 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SubscriptionStoreDefaultMarketingView() + 20));
  *v2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657AA8);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2210E5B94@<X0>(uint64_t a1@<X8>)
{
  return AutomaticSubscriptionStoreMarketingContent.body.getter(a1);
}

uint64_t Product.SubscriptionRelationship.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Product.SubscriptionRelationship.rawValue.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Product.SubscriptionRelationship.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t Product.SubscriptionRelationship.init(rawValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static Product.SubscriptionRelationship.current.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_27_13(a1);
}

void static Product.SubscriptionRelationship.downgrade.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_27_13(a1);
}

void static Product.SubscriptionRelationship.crossgrade.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_27_13(a1);
}

void static Product.SubscriptionRelationship.upgrade.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_27_13(a1);
}

void sub_2210E5BF0()
{
  qword_25565BD20 = 15;
}

unint64_t sub_2210E5C30()
{
  unint64_t result;

  result = qword_25565BD30;
  if (!qword_25565BD30)
  {
    result = MEMORY[0x22766BAC4](&unk_22130FB04, &type metadata for SubscriptionStoreBackgroundStateModifier);
    atomic_store(result, (unint64_t *)&qword_25565BD30);
  }
  return result;
}

unint64_t sub_2210E5C6C()
{
  unint64_t result;

  result = qword_25565BD38;
  if (!qword_25565BD38)
  {
    result = MEMORY[0x22766BAC4](&unk_221311CD8, &type metadata for ProducesHybridStructuredScrollViewContentModifier);
    atomic_store(result, (unint64_t *)&qword_25565BD38);
  }
  return result;
}

unint64_t sub_2210E5CA8()
{
  unint64_t result;

  result = qword_25565BD48;
  if (!qword_25565BD48)
  {
    result = MEMORY[0x22766BAC4](&unk_2213023CC, &type metadata for DynamicCloseButtonModifier);
    atomic_store(result, (unint64_t *)&qword_25565BD48);
  }
  return result;
}

void sub_2210E5CE4(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_2210E51B8(v1[4], v1[2], v1[3], a1);
}

uint64_t type metadata accessor for SubscriptionStoreView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubscriptionStoreView);
}

uint64_t sub_2210E5D00(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (!a4 || a4 == 2 || a4 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2210E5D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_2210E5D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_7_20(a1, a2, a3, a4);
  return sub_2210E5890(a1, v7, v4, v5);
}

uint64_t sub_2210E5D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_7_20(a1, a2, a3, a4);
  return sub_2210E58CC(a1, v7, v4, v5);
}

void sub_2210E5D9C()
{
  sub_22116A7E4();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210E5DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2210E5EDC(a1, a2, a3, a4, &qword_255657AC0, sub_22116A818);
}

uint64_t sub_2210E5DDC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return Product.SubscriptionRelationship.init(rawValue:)(*a1, a2);
}

uint64_t sub_2210E5DE4()
{
  _QWORD *v0;

  return sub_2212B50B0(*v0);
}

void sub_2210E5DEC()
{
  sub_2211D28A4();
}

uint64_t sub_2210E5DF4(uint64_t a1)
{
  _QWORD *v1;

  return sub_2211D2B90(a1, *v1);
}

void sub_2210E5E00(_QWORD *a1@<X8>)
{
  sub_2211D4FC0(a1);
}

uint64_t sub_2210E5E0C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2210427AC(*a1, *v2, a2);
}

void sub_2210E5E18(_QWORD *a1@<X8>)
{
  sub_2211D4FE0(a1);
}

void sub_2210E5E24(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2211D4FE8(a2, *a1);
}

void sub_2210E5E2C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_2211D5054(a2, *a1);
}

uint64_t sub_2210E5E34(uint64_t *a1)
{
  return j__OUTLINED_FUNCTION_5_5(*a1);
}

uint64_t sub_2210E5E3C(uint64_t *a1)
{
  return j__OUTLINED_FUNCTION_84(*a1);
}

uint64_t sub_2210E5E44(uint64_t *a1)
{
  return sub_2211D50A4(*a1);
}

void sub_2210E5E4C(_QWORD *a1@<X8>)
{
  sub_2211D50C4(a1);
}

uint64_t sub_2210E5E58(uint64_t *a1)
{
  return sub_2211D50DC(*a1);
}

uint64_t sub_2210E5E60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = Product.SubscriptionRelationship.init(rawValue:)(*a1, (_QWORD *)a2);
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_2210E5E88(uint64_t *a1@<X8>)
{
  *a1 = Product.SubscriptionRelationship.rawValue.getter();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210E5EAC()
{
  sub_2212F363C();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210E5EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2210E5EDC(a1, a2, a3, a4, &qword_255657AB0, MEMORY[0x24BDEE1E0]);
}

void sub_2210E5EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(a5);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_20_0();
  sub_221084AD0(a1, v6, a5);
  a6(v6);
  OUTLINED_FUNCTION_14_13();
}

void sub_2210E5F48()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = OUTLINED_FUNCTION_45_5();
  v0[1] = v1;
  OUTLINED_FUNCTION_6_0();
}

void sub_2210E5F64()
{
  swift_bridgeObjectRetain();
  sub_2211A8258();
  OUTLINED_FUNCTION_17_0();
}

uint64_t type metadata accessor for SubscriptionStoreView.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubscriptionStoreView.Storage);
}

uint64_t sub_2210E5FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2210E615C((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2210E5938, a2, a3, a4);
}

void sub_2210E5FB4(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x22766BAC4](MEMORY[0x24BDF1028], v3), a1);
  }
  OUTLINED_FUNCTION_6_0();
}

uint64_t objectdestroyTm_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for SubscriptionStoreView(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = v4
     + ((*(unsigned __int8 *)(*((_QWORD *)v6 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v6 - 1) + 80));
  sub_2210E5D00(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_BYTE *)(v7 + 24));
  OUTLINED_FUNCTION_15_6(v7 + v6[9], *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8));
  v8 = v7 + v6[11];
  if ((*(_BYTE *)(v8 + 40) & 1) != 0)
  {
    if (*(_QWORD *)(v8 + 24) >= 3uLL)
      __swift_destroy_boxed_opaque_existential_1(v8);
  }
  else
  {
    swift_release();
  }
  j_j__swift_release(*(_QWORD *)(v7 + v6[12]), *(unsigned __int8 *)(v7 + v6[12] + 8));
  OUTLINED_FUNCTION_21_13(v6[13]);
  v9 = v7 + v6[14];
  sub_2210E5D24(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_BYTE *)(v9 + 32));
  OUTLINED_FUNCTION_39_6();
  OUTLINED_FUNCTION_39_6();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_21_13(v6[18]);
  v10 = v7 + v6[19];
  j_j__swift_release(*(_QWORD *)v10, *(unsigned __int8 *)(v10 + 8));
  j_j__swift_release(*(_QWORD *)(v10 + 16), *(unsigned __int8 *)(v10 + 24));
  j_j__swift_release(*(_QWORD *)(v10 + 32), *(unsigned __int8 *)(v10 + 40));
  sub_2210BCAC8(*(_QWORD *)(v10 + 48), *(_QWORD *)(v10 + 56), *(_BYTE *)(v10 + 64));
  return swift_deallocObject();
}

uint64_t sub_2210E6150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2210E615C((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2210E5A80, a2, a3, a4);
}

uint64_t sub_2210E615C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SubscriptionStoreView(0, v5, v6, a4) - 8) + 80);
  return a1(v4 + ((v7 + 32) & ~v7), v5, v6);
}

unint64_t sub_2210E61BC()
{
  unint64_t result;

  result = qword_25565BD68;
  if (!qword_25565BD68)
  {
    result = MEMORY[0x22766BAC4](&unk_22131445C, &type metadata for ShareCurrentAppIconCacheModifier);
    atomic_store(result, (unint64_t *)&qword_25565BD68);
  }
  return result;
}

void sub_2210E61F8()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = OUTLINED_FUNCTION_45_5();
  v0[1] = v1;
  OUTLINED_FUNCTION_6_0();
}

void sub_2210E6218()
{
  sub_2212F363C();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210E6234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2210E5EDC(a1, a2, a3, a4, &qword_255657AB0, MEMORY[0x24BDEE1E0]);
}

uint64_t sub_2210E6258()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210E628C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2210E62A0()
{
  unint64_t result;

  result = qword_25565BD70;
  if (!qword_25565BD70)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for Product.SubscriptionRelationship, &type metadata for Product.SubscriptionRelationship);
    atomic_store(result, (unint64_t *)&qword_25565BD70);
  }
  return result;
}

unint64_t sub_2210E62E0()
{
  unint64_t result;

  result = qword_25565BD78;
  if (!qword_25565BD78)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for Product.SubscriptionRelationship, &type metadata for Product.SubscriptionRelationship);
    atomic_store(result, (unint64_t *)&qword_25565BD78);
  }
  return result;
}

unint64_t sub_2210E6320()
{
  unint64_t result;

  result = qword_25565BD80;
  if (!qword_25565BD80)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for Product.SubscriptionRelationship, &type metadata for Product.SubscriptionRelationship);
    atomic_store(result, (unint64_t *)&qword_25565BD80);
  }
  return result;
}

unint64_t sub_2210E6360()
{
  unint64_t result;

  result = qword_25565BD88[0];
  if (!qword_25565BD88[0])
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for Product.SubscriptionRelationship, &type metadata for Product.SubscriptionRelationship);
    atomic_store(result, qword_25565BD88);
  }
  return result;
}

uint64_t sub_2210E639C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2210E6460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _OWORD *v20;
  unint64_t v21;
  __int128 *v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((((((((v6 + 25) & ~v6) + v7) & 0xFFFFFFFFFFFFFFF8) + 151) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 39) & 0xFFFFFFFFFFFFFFF8)
     + 65 > 0x18)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v11 = v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    v12 = *(_QWORD *)a2;
    v13 = *(_QWORD *)(a2 + 8);
    v14 = *(_QWORD *)(a2 + 16);
    v15 = *(_BYTE *)(a2 + 24);
    v51 = *(_QWORD *)(a3 + 16);
    sub_2210E6790(*(_QWORD *)a2, v13, v14, v15);
    *(_QWORD *)a1 = v12;
    *(_QWORD *)(a1 + 8) = v13;
    *(_QWORD *)(a1 + 16) = v14;
    *(_BYTE *)(a1 + 24) = v15;
    v52 = a1;
    v16 = a2 + v6;
    v17 = (a1 + v6 + 25) & ~v6;
    v18 = (v16 + 25) & ~v6;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v17, v18, v51);
    *(_BYTE *)(v17 + v7) = *(_BYTE *)(v18 + v7);
    v19 = (v17 + v7) & 0xFFFFFFFFFFFFFFF8;
    v20 = (_OWORD *)(v19 + 8);
    v21 = (v18 + v7) & 0xFFFFFFFFFFFFFFF8;
    v22 = (__int128 *)(v21 + 8);
    if ((*(_BYTE *)(v21 + 48) & 1) != 0)
    {
      v23 = *(_QWORD *)(v21 + 32);
      if (v23 >= 3)
      {
        *(_QWORD *)(v19 + 32) = v23;
        *(_QWORD *)(v19 + 40) = *(_QWORD *)(v21 + 40);
        (**(void (***)(uint64_t))(v23 - 8))(v19 + 8);
      }
      else
      {
        v24 = *v22;
        v25 = *(_OWORD *)(v21 + 24);
        *(_QWORD *)(v19 + 40) = *(_QWORD *)(v21 + 40);
        *v20 = v24;
        *(_OWORD *)(v19 + 24) = v25;
      }
      *(_BYTE *)(v19 + 48) = 1;
    }
    else
    {
      *(_QWORD *)v20 = *(_QWORD *)v22;
      *(_BYTE *)(v19 + 48) = 0;
      swift_retain();
    }
    v26 = *(_QWORD *)(v21 + 56);
    v27 = *(_BYTE *)(v21 + 64);
    j__swift_retain(v26, v27);
    *(_QWORD *)(v19 + 56) = v26;
    *(_BYTE *)(v19 + 64) = v27;
    v28 = *(_QWORD *)(v21 + 72);
    v29 = *(_BYTE *)(v21 + 80);
    sub_221017C08(v28, v29);
    *(_QWORD *)(v19 + 72) = v28;
    *(_BYTE *)(v19 + 80) = v29;
    v30 = *(_QWORD *)(v21 + 88);
    v31 = *(_QWORD *)(v21 + 96);
    v32 = *(_QWORD *)(v21 + 104);
    v33 = *(_QWORD *)(v21 + 112);
    v34 = *(_BYTE *)(v21 + 120);
    sub_2210E67B4(v30, v31, v32, v33, v34);
    *(_QWORD *)(v19 + 88) = v30;
    *(_QWORD *)(v19 + 96) = v31;
    *(_QWORD *)(v19 + 104) = v32;
    *(_QWORD *)(v19 + 112) = v33;
    *(_BYTE *)(v19 + 120) = v34;
    *(_QWORD *)(v19 + 128) = *(_QWORD *)(v21 + 128);
    *(_QWORD *)(v19 + 136) = *(_QWORD *)(v21 + 136);
    v35 = (v19 + 151) & 0xFFFFFFFFFFFFFFF8;
    v36 = (v21 + 151) & 0xFFFFFFFFFFFFFFF8;
    *(_BYTE *)v35 = *(_BYTE *)v36;
    *(_QWORD *)(v35 + 8) = *(_QWORD *)(v36 + 8);
    v37 = (_QWORD *)((v35 + 23) & 0xFFFFFFFFFFFFFFF8);
    v38 = (_QWORD *)((v36 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v37 = *v38;
    v37[1] = v38[1];
    v39 = ((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8;
    v40 = ((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8;
    v41 = *(_QWORD *)v40;
    v42 = *(_BYTE *)(v40 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_221017C08(v41, v42);
    *(_QWORD *)v39 = v41;
    *(_BYTE *)(v39 + 8) = v42;
    v43 = ((unint64_t)v37 + 39) & 0xFFFFFFFFFFFFFFF8;
    v44 = ((unint64_t)v38 + 39) & 0xFFFFFFFFFFFFFFF8;
    v45 = *(_QWORD *)v44;
    LOBYTE(v31) = *(_BYTE *)(v44 + 8);
    j__swift_retain(*(_QWORD *)v44, v31);
    *(_QWORD *)v43 = v45;
    *(_BYTE *)(v43 + 8) = v31;
    v46 = *(_QWORD *)(v44 + 16);
    LOBYTE(v31) = *(_BYTE *)(v44 + 24);
    j__swift_retain(v46, v31);
    *(_QWORD *)(v43 + 16) = v46;
    *(_BYTE *)(v43 + 24) = v31;
    v47 = *(_QWORD *)(v44 + 32);
    LOBYTE(v31) = *(_BYTE *)(v44 + 40);
    j__swift_retain(v47, v31);
    *(_QWORD *)(v43 + 32) = v47;
    *(_BYTE *)(v43 + 40) = v31;
    v48 = *(_QWORD *)(v44 + 48);
    v49 = *(_QWORD *)(v44 + 56);
    LOBYTE(v44) = *(_BYTE *)(v44 + 64);
    sub_2210BC964(v48, v49, v44);
    *(_QWORD *)(v43 + 48) = v48;
    *(_QWORD *)(v43 + 56) = v49;
    *(_BYTE *)(v43 + 64) = v44;
    return v52;
  }
  return v11;
}

uint64_t sub_2210E6790(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (!a4 || a4 == 2 || a4 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_2210E67B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_2210E67C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  sub_2210E5D00(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = (v5 + *(_QWORD *)(v4 + 64)) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_BYTE *)(v6 + 48) & 1) != 0)
  {
    if (*(_QWORD *)(v6 + 32) >= 3uLL)
      __swift_destroy_boxed_opaque_existential_1(v6 + 8);
  }
  else
  {
    swift_release();
  }
  j_j__swift_release(*(_QWORD *)(v6 + 56), *(unsigned __int8 *)(v6 + 64));
  sub_221047104(*(_QWORD *)(v6 + 72), *(unsigned __int8 *)(v6 + 80));
  sub_2210E5D24(*(_QWORD *)(v6 + 88), *(_QWORD *)(v6 + 96), *(_QWORD *)(v6 + 104), *(_QWORD *)(v6 + 112), *(_BYTE *)(v6 + 120));
  swift_release();
  swift_release();
  v7 = (((v6 + 151) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  sub_221047104(*(_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8), *(unsigned __int8 *)(((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
  v8 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  j_j__swift_release(*(_QWORD *)v8, *(unsigned __int8 *)(v8 + 8));
  j_j__swift_release(*(_QWORD *)(v8 + 16), *(unsigned __int8 *)(v8 + 24));
  j_j__swift_release(*(_QWORD *)(v8 + 32), *(unsigned __int8 *)(v8 + 40));
  return sub_2210BCAC8(*(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 56), *(_BYTE *)(v8 + 64));
}

uint64_t sub_2210E68F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __int128 *v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_2210E6790(*(_QWORD *)a2, v7, v8, v9);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 + 25 + a1) & ~v11;
  v13 = (v11 + 25 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v12, v13);
  v14 = *(_QWORD *)(v10 + 64);
  v15 = v12 + v14;
  v16 = v13 + v14;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  v17 = v15 & 0xFFFFFFFFFFFFFFF8;
  v18 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
  v19 = v16 & 0xFFFFFFFFFFFFFFF8;
  v20 = (__int128 *)((v16 & 0xFFFFFFFFFFFFFFF8) + 8);
  if ((*(_BYTE *)((v16 & 0xFFFFFFFFFFFFFFF8) + 48) & 1) != 0)
  {
    v21 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFFF8) + 32);
    if (v21 >= 3)
    {
      *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFF8) + 32) = v21;
      *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFF8) + 40) = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFFF8) + 40);
      (**(void (***)(unint64_t))(v21 - 8))((v15 & 0xFFFFFFFFFFFFFFF8) + 8);
    }
    else
    {
      v22 = *v20;
      v23 = *(_OWORD *)((v16 & 0xFFFFFFFFFFFFFFF8) + 24);
      *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFF8) + 40) = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFFF8) + 40);
      *(_OWORD *)v18 = v22;
      *(_OWORD *)((v15 & 0xFFFFFFFFFFFFFFF8) + 24) = v23;
    }
    *(_BYTE *)(v18 + 40) = 1;
  }
  else
  {
    *(_QWORD *)v18 = *(_QWORD *)v20;
    *(_BYTE *)((v15 & 0xFFFFFFFFFFFFFFF8) + 48) = 0;
    swift_retain();
  }
  v24 = *(_QWORD *)(v19 + 56);
  v25 = *(_BYTE *)(v19 + 64);
  j__swift_retain(v24, v25);
  *(_QWORD *)(v17 + 56) = v24;
  *(_BYTE *)(v17 + 64) = v25;
  v26 = *(_QWORD *)(v19 + 72);
  v27 = *(_BYTE *)(v19 + 80);
  sub_221017C08(v26, v27);
  *(_QWORD *)(v17 + 72) = v26;
  *(_BYTE *)(v17 + 80) = v27;
  v28 = *(_QWORD *)(v19 + 88);
  v29 = *(_QWORD *)(v19 + 96);
  v30 = *(_QWORD *)(v19 + 104);
  v31 = *(_QWORD *)(v19 + 112);
  v32 = *(_BYTE *)(v19 + 120);
  sub_2210E67B4(v28, v29, v30, v31, v32);
  *(_QWORD *)(v17 + 88) = v28;
  *(_QWORD *)(v17 + 96) = v29;
  *(_QWORD *)(v17 + 104) = v30;
  *(_QWORD *)(v17 + 112) = v31;
  *(_BYTE *)(v17 + 120) = v32;
  *(_QWORD *)(v17 + 128) = *(_QWORD *)(v19 + 128);
  *(_QWORD *)(v17 + 136) = *(_QWORD *)(v19 + 136);
  v33 = (v17 + 151) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v19 + 151) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v33 = *(_BYTE *)v34;
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
  v35 = (_QWORD *)((v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  v36 = (_QWORD *)((v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v35 = *v36;
  v35[1] = v36[1];
  v37 = ((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  v38 = ((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  v39 = *(_QWORD *)v38;
  v40 = *(_BYTE *)(v38 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_221017C08(v39, v40);
  *(_QWORD *)v37 = v39;
  *(_BYTE *)(v37 + 8) = v40;
  v41 = ((unint64_t)v35 + 39) & 0xFFFFFFFFFFFFFFF8;
  v42 = ((unint64_t)v36 + 39) & 0xFFFFFFFFFFFFFFF8;
  v43 = *(_QWORD *)v42;
  LOBYTE(v29) = *(_BYTE *)(v42 + 8);
  j__swift_retain(*(_QWORD *)v42, v29);
  *(_QWORD *)v41 = v43;
  *(_BYTE *)(v41 + 8) = v29;
  v44 = *(_QWORD *)(v42 + 16);
  LOBYTE(v29) = *(_BYTE *)(v42 + 24);
  j__swift_retain(v44, v29);
  *(_QWORD *)(v41 + 16) = v44;
  *(_BYTE *)(v41 + 24) = v29;
  v45 = *(_QWORD *)(v42 + 32);
  LOBYTE(v29) = *(_BYTE *)(v42 + 40);
  j__swift_retain(v45, v29);
  *(_QWORD *)(v41 + 32) = v45;
  *(_BYTE *)(v41 + 40) = v29;
  v46 = *(_QWORD *)(v42 + 48);
  v47 = *(_QWORD *)(v42 + 56);
  LOBYTE(v42) = *(_BYTE *)(v42 + 64);
  sub_2210BC964(v46, v47, v42);
  *(_QWORD *)(v41 + 48) = v46;
  *(_QWORD *)(v41 + 56) = v47;
  *(_BYTE *)(v41 + 64) = v42;
  return a1;
}

uint64_t sub_2210E6B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _OWORD *v23;
  __int128 *v24;
  unint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_2210E6790(*(_QWORD *)a2, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  v13 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v9;
  sub_2210E5D00(v10, v11, v12, v13);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v15 + 25 + a1) & ~v15;
  v17 = (v15 + 25 + a2) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v16, v17);
  v18 = *(_QWORD *)(v14 + 64);
  v19 = v16 + v18;
  v20 = v17 + v18;
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v21 = v19 & 0xFFFFFFFFFFFFFFF8;
  v22 = v20 & 0xFFFFFFFFFFFFFFF8;
  if ((v19 & 0xFFFFFFFFFFFFFFF8) != (v20 & 0xFFFFFFFFFFFFFFF8))
  {
    v23 = (_OWORD *)(v21 + 8);
    v24 = (__int128 *)(v22 + 8);
    sub_221014F5C(v21 + 8, &qword_2556563B8);
    if ((*(_BYTE *)(v22 + 48) & 1) != 0)
    {
      v25 = *(_QWORD *)(v22 + 32);
      if (v25 >= 3)
      {
        *(_QWORD *)(v21 + 32) = v25;
        *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
        (**(void (***)(uint64_t, uint64_t))(v25 - 8))(v21 + 8, v22 + 8);
      }
      else
      {
        v26 = *v24;
        v27 = *(_OWORD *)(v22 + 24);
        *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
        *v23 = v26;
        *(_OWORD *)(v21 + 24) = v27;
      }
      *(_BYTE *)(v21 + 48) = 1;
    }
    else
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *(_BYTE *)(v21 + 48) = 0;
      swift_retain();
    }
  }
  v28 = *(_QWORD *)(v22 + 56);
  v29 = *(_BYTE *)(v22 + 64);
  j__swift_retain(v28, v29);
  v30 = *(_QWORD *)(v21 + 56);
  v31 = *(unsigned __int8 *)(v21 + 64);
  *(_QWORD *)(v21 + 56) = v28;
  *(_BYTE *)(v21 + 64) = v29;
  j_j__swift_release(v30, v31);
  v32 = *(_QWORD *)(v22 + 72);
  v33 = *(_BYTE *)(v22 + 80);
  sub_221017C08(v32, v33);
  v34 = *(_QWORD *)(v21 + 72);
  v35 = *(unsigned __int8 *)(v21 + 80);
  *(_QWORD *)(v21 + 72) = v32;
  *(_BYTE *)(v21 + 80) = v33;
  sub_221047104(v34, v35);
  v36 = *(_QWORD *)(v22 + 88);
  v37 = *(_QWORD *)(v22 + 96);
  v38 = *(_QWORD *)(v22 + 104);
  v39 = *(_QWORD *)(v22 + 112);
  v40 = *(_BYTE *)(v22 + 120);
  sub_2210E67B4(v36, v37, v38, v39, v40);
  v41 = *(_QWORD *)(v21 + 88);
  v42 = *(_QWORD *)(v21 + 96);
  v43 = *(_QWORD *)(v21 + 104);
  v44 = *(_QWORD *)(v21 + 112);
  v45 = *(_BYTE *)(v21 + 120);
  *(_QWORD *)(v21 + 88) = v36;
  *(_QWORD *)(v21 + 96) = v37;
  *(_QWORD *)(v21 + 104) = v38;
  *(_QWORD *)(v21 + 112) = v39;
  *(_BYTE *)(v21 + 120) = v40;
  sub_2210E5D24(v41, v42, v43, v44, v45);
  *(_QWORD *)(v21 + 128) = *(_QWORD *)(v22 + 128);
  *(_QWORD *)(v21 + 136) = *(_QWORD *)(v22 + 136);
  swift_retain();
  swift_release();
  v46 = (v21 + 151) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v22 + 151) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v46 = *(_BYTE *)v47;
  *(_QWORD *)(v46 + 8) = *(_QWORD *)(v47 + 8);
  swift_retain();
  swift_release();
  v48 = (_QWORD *)((v46 + 23) & 0xFFFFFFFFFFFFFFF8);
  v49 = (_QWORD *)((v47 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v48 = *v49;
  swift_retain();
  swift_release();
  v48[1] = v49[1];
  swift_retain();
  swift_release();
  v50 = ((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFFFF8;
  v51 = ((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8;
  v52 = *(_QWORD *)v51;
  LOBYTE(v46) = *(_BYTE *)(v51 + 8);
  sub_221017C08(*(_QWORD *)v51, v46);
  v53 = *(_QWORD *)v50;
  v54 = *(unsigned __int8 *)(v50 + 8);
  *(_QWORD *)v50 = v52;
  *(_BYTE *)(v50 + 8) = v46;
  sub_221047104(v53, v54);
  v55 = ((unint64_t)v48 + 39) & 0xFFFFFFFFFFFFFFF8;
  v56 = ((unint64_t)v49 + 39) & 0xFFFFFFFFFFFFFFF8;
  v57 = *(_QWORD *)v56;
  LOBYTE(v46) = *(_BYTE *)(v56 + 8);
  j__swift_retain(*(_QWORD *)v56, v46);
  v58 = *(_QWORD *)v55;
  v59 = *(unsigned __int8 *)(v55 + 8);
  *(_QWORD *)v55 = v57;
  *(_BYTE *)(v55 + 8) = v46;
  j_j__swift_release(v58, v59);
  v60 = *(_QWORD *)(v56 + 16);
  LOBYTE(v46) = *(_BYTE *)(v56 + 24);
  j__swift_retain(v60, v46);
  v61 = *(_QWORD *)(v55 + 16);
  v62 = *(unsigned __int8 *)(v55 + 24);
  *(_QWORD *)(v55 + 16) = v60;
  *(_BYTE *)(v55 + 24) = v46;
  j_j__swift_release(v61, v62);
  v63 = *(_QWORD *)(v56 + 32);
  LOBYTE(v46) = *(_BYTE *)(v56 + 40);
  j__swift_retain(v63, v46);
  v64 = *(_QWORD *)(v55 + 32);
  v65 = *(unsigned __int8 *)(v55 + 40);
  *(_QWORD *)(v55 + 32) = v63;
  *(_BYTE *)(v55 + 40) = v46;
  j_j__swift_release(v64, v65);
  v66 = *(_QWORD *)(v56 + 48);
  v67 = *(_QWORD *)(v56 + 56);
  LOBYTE(v56) = *(_BYTE *)(v56 + 64);
  sub_2210BC964(v66, v67, v56);
  v68 = *(_QWORD *)(v55 + 48);
  v69 = *(_QWORD *)(v55 + 56);
  v70 = *(_BYTE *)(v55 + 64);
  *(_QWORD *)(v55 + 48) = v66;
  *(_QWORD *)(v55 + 56) = v67;
  *(_BYTE *)(v55 + 64) = v56;
  sub_2210BCAC8(v68, v69, v70);
  return a1;
}

_OWORD *sub_2210E6EF4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 25) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 25) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64);
  v9 = v6 + v8;
  v10 = v7 + v8;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v9 &= 0xFFFFFFFFFFFFFFF8;
  v10 &= 0xFFFFFFFFFFFFFFF8;
  v11 = *(_OWORD *)(v10 + 24);
  v12 = *(_OWORD *)(v10 + 33);
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  *(_OWORD *)(v9 + 33) = v12;
  *(_OWORD *)(v9 + 24) = v11;
  v13 = *(_QWORD *)(v10 + 56);
  *(_BYTE *)(v9 + 64) = *(_BYTE *)(v10 + 64);
  *(_QWORD *)(v9 + 56) = v13;
  LOBYTE(v13) = *(_BYTE *)(v10 + 80);
  *(_QWORD *)(v9 + 72) = *(_QWORD *)(v10 + 72);
  *(_BYTE *)(v9 + 80) = v13;
  LOBYTE(v13) = *(_BYTE *)(v10 + 120);
  v14 = *(_OWORD *)(v10 + 104);
  *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
  *(_OWORD *)(v9 + 104) = v14;
  *(_BYTE *)(v9 + 120) = v13;
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(v10 + 128);
  v15 = (_OWORD *)((v9 + 151) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_OWORD *)((v10 + 151) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v19 = v21;
  memcpy((void *)(((unint64_t)v17 + 39) & 0xFFFFFFFFFFFFFFF8), (const void *)(((unint64_t)v18 + 39) & 0xFFFFFFFFFFFFFFF8), 0x41uLL);
  return a1;
}

uint64_t sub_2210E7030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v6;
  v11 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  sub_2210E5D00(v8, v9, v10, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 25 + a1) & ~v13;
  v15 = (v13 + 25 + a2) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 40))(v14, v15);
  v16 = *(_QWORD *)(v12 + 64);
  v17 = v14 + v16;
  v18 = v15 + v16;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v19 = v17 & 0xFFFFFFFFFFFFFFF8;
  v20 = v18 & 0xFFFFFFFFFFFFFFF8;
  if ((v17 & 0xFFFFFFFFFFFFFFF8) != (v18 & 0xFFFFFFFFFFFFFFF8))
  {
    sub_221014F5C(v19 + 8, &qword_2556563B8);
    v21 = *(_OWORD *)(v20 + 33);
    v22 = *(_OWORD *)(v20 + 24);
    *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
    *(_OWORD *)(v19 + 24) = v22;
    *(_OWORD *)(v19 + 33) = v21;
  }
  v23 = *(_BYTE *)(v20 + 64);
  v24 = *(_QWORD *)(v19 + 56);
  v25 = *(unsigned __int8 *)(v19 + 64);
  *(_QWORD *)(v19 + 56) = *(_QWORD *)(v20 + 56);
  *(_BYTE *)(v19 + 64) = v23;
  j_j__swift_release(v24, v25);
  v26 = *(_BYTE *)(v20 + 80);
  v27 = *(_QWORD *)(v19 + 72);
  v28 = *(unsigned __int8 *)(v19 + 80);
  *(_QWORD *)(v19 + 72) = *(_QWORD *)(v20 + 72);
  *(_BYTE *)(v19 + 80) = v26;
  sub_221047104(v27, v28);
  v29 = *(_BYTE *)(v20 + 120);
  v30 = *(_QWORD *)(v19 + 88);
  v31 = *(_QWORD *)(v19 + 96);
  v32 = *(_QWORD *)(v19 + 104);
  v33 = *(_QWORD *)(v19 + 112);
  v34 = *(_BYTE *)(v19 + 120);
  v35 = *(_OWORD *)(v20 + 104);
  *(_OWORD *)(v19 + 88) = *(_OWORD *)(v20 + 88);
  *(_OWORD *)(v19 + 104) = v35;
  *(_BYTE *)(v19 + 120) = v29;
  sub_2210E5D24(v30, v31, v32, v33, v34);
  *(_QWORD *)(v19 + 128) = *(_QWORD *)(v20 + 128);
  *(_QWORD *)(v19 + 136) = *(_QWORD *)(v20 + 136);
  swift_release();
  v36 = (v19 + 151) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v20 + 151) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v36 = *(_BYTE *)v37;
  *(_QWORD *)(v36 + 8) = *(_QWORD *)(v37 + 8);
  swift_release();
  v38 = (_QWORD *)((v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  v39 = (_QWORD *)((v37 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v38 = *v39;
  swift_release();
  v38[1] = v39[1];
  swift_release();
  v40 = ((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  v41 = ((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  v42 = *(_QWORD *)v41;
  LOBYTE(v41) = *(_BYTE *)(v41 + 8);
  v43 = *(_QWORD *)v40;
  v44 = *(unsigned __int8 *)(v40 + 8);
  *(_QWORD *)v40 = v42;
  *(_BYTE *)(v40 + 8) = v41;
  sub_221047104(v43, v44);
  v45 = ((unint64_t)v38 + 39) & 0xFFFFFFFFFFFFFFF8;
  v46 = ((unint64_t)v39 + 39) & 0xFFFFFFFFFFFFFFF8;
  v47 = *(_BYTE *)(v46 + 8);
  v48 = *(_QWORD *)v45;
  v49 = *(unsigned __int8 *)(v45 + 8);
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_BYTE *)(v45 + 8) = v47;
  j_j__swift_release(v48, v49);
  v50 = *(_BYTE *)(v46 + 24);
  v51 = *(_QWORD *)(v45 + 16);
  v52 = *(unsigned __int8 *)(v45 + 24);
  *(_QWORD *)(v45 + 16) = *(_QWORD *)(v46 + 16);
  *(_BYTE *)(v45 + 24) = v50;
  j_j__swift_release(v51, v52);
  v53 = *(_BYTE *)(v46 + 40);
  v54 = *(_QWORD *)(v45 + 32);
  v55 = *(unsigned __int8 *)(v45 + 40);
  *(_QWORD *)(v45 + 32) = *(_QWORD *)(v46 + 32);
  *(_BYTE *)(v45 + 40) = v53;
  j_j__swift_release(v54, v55);
  v56 = *(_BYTE *)(v46 + 64);
  v57 = *(_QWORD *)(v45 + 48);
  v58 = *(_QWORD *)(v45 + 56);
  v59 = *(_BYTE *)(v45 + 64);
  *(_OWORD *)(v45 + 48) = *(_OWORD *)(v46 + 48);
  *(_BYTE *)(v45 + 64) = v56;
  sub_2210BCAC8(v57, v58, v59);
  return a1;
}

uint64_t sub_2210E7288(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    v15 = (a1 + v8 + 25) & ~v8;
    if (v6 < 0x7FFFFFFF)
    {
      v16 = *(_QWORD *)((((((v15 + v9) & 0xFFFFFFFFFFFFF8) + 151) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8);
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(v15, v6, v4);
    }
  }
  else
  {
    v10 = (a2 - v7 + 255) >> (8
                            * (((((((((((v8 + 25) & ~(_BYTE)v8) + v9) & 0xF8) - 105) & 0xF8) + 23) & 0xF8) + 39) & 0xF8)
                             + 65));
    if ((((((((((((_DWORD)v8 + 25) & ~(_DWORD)v8) + (_DWORD)v9) & 0xFFFFFFF8) + 151) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 39) & 0xFFFFFFF8)
       + 65 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2210E7334 + 4 * byte_221304E20[v13]))();
  }
}

void sub_2210E73E0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((((((((*(unsigned __int8 *)(v5 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
             + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFFFF8)
           + 151) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 39) & 0xFFFFFFFFFFFFFFF8)
     + 65;
  if (v6 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8
                              * (((((((((((*(_BYTE *)(v5 + 80) + 25) & ~*(_BYTE *)(v5 + 80)) + *(_BYTE *)(v5 + 64)) & 0xF8)
                                     - 105) & 0xF8)
                                   + 23) & 0xF8)
                                 + 39) & 0xF8)
                               + 65)))
         + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (v6 < a2)
  {
    if (v7 >= 4)
      v11 = ~v6 + a2;
    else
      v11 = (~(_BYTE)v6 + a2);
    bzero(a1, v7);
    if ((_DWORD)v7 == 1)
      *a1 = v11;
    else
      *(_DWORD *)a1 = v11;
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_2210E7520()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2210E75A8);
}

void sub_2210E7528(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2210E7530);
  JUMPOUT(0x2210E75A8);
}

void sub_2210E7580()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2210E75A8);
}

void sub_2210E7588()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2210E75A8);
}

uint64_t sub_2210E7590@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!(_DWORD)a1)
    JUMPOUT(0x2210E75A8);
  if (a2 < 0x7FFFFFFF)
  {
    if ((a1 & 0x80000000) == 0)
      JUMPOUT(0x2210E75A4);
    JUMPOUT(0x2210E759CLL);
  }
  return __swift_storeEnumTagSinglePayload((v6 + v5 + 25) & a4, a1, a2, a3);
}

ValueMetadata *type metadata accessor for AutomaticSubscriptionStoreMarketingContent()
{
  return &type metadata for AutomaticSubscriptionStoreMarketingContent;
}

ValueMetadata *type metadata accessor for Product.SubscriptionRelationship()
{
  return &type metadata for Product.SubscriptionRelationship;
}

void sub_2210E75E0()
{
  OUTLINED_FUNCTION_4_15();
  sub_221017B10();
  OUTLINED_FUNCTION_5_2();
}

void sub_2210E762C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for SubscriptionStoreDynamicView(255, v4, a1, a4);
  sub_2212F3A20();
  type metadata accessor for ProductChangeCountTracker(255, v4, a1, v6);
  sub_2212F3A20();
  sub_2212F4674();
  sub_2212F3348();
  sub_2212F3348();
  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658FA0);
  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BD28);
  OUTLINED_FUNCTION_22_9();
  OUTLINED_FUNCTION_4_15();
  type metadata accessor for StorefrontLocaleViewModifier(255);
  sub_2212F3348();
  sub_2212F3348();
  OUTLINED_FUNCTION_7_2();
}

void sub_2210E7764(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  *(_QWORD *)(v1 - 112) = a1;
  OUTLINED_FUNCTION_3_3();
}

void sub_2210E777C()
{
  OUTLINED_FUNCTION_5_2();
}

void sub_2210E778C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = v1;
  *(_QWORD *)(v2 - 128) = a1;
  OUTLINED_FUNCTION_10_13();
}

void sub_2210E779C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = a1;
  OUTLINED_FUNCTION_25_1();
}

void sub_2210E77B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = MEMORY[0x24BDEDBB8];
  *(_QWORD *)(v2 - 160) = a1;
  *(_QWORD *)(v2 - 152) = v3;
  v4 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2 - 160);
  v5 = sub_2210E5C30();
  *(_QWORD *)(v2 - 176) = v4;
  *(_QWORD *)(v2 - 168) = v5;
  OUTLINED_FUNCTION_8_2();
}

void sub_2210E77EC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  v3 = sub_2210E5C6C();
  *(_QWORD *)(v1 - 192) = a1;
  *(_QWORD *)(v1 - 184) = v3;
  OUTLINED_FUNCTION_93_0();
}

void sub_2210E7804()
{
  sub_2210E5FB4(&qword_255658FB8, &qword_255658FA0);
  OUTLINED_FUNCTION_18_1();
}

void sub_2210E782C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_2210E5FB4(&qword_25565BD40, &qword_25565BD28);
  a31 = a1;
  a32 = v34;
  v35 = MEMORY[0x22766BAC4](v32, a9, &a31);
  v36 = sub_2210E5CA8();
  a29 = v35;
  a30 = v36;
  v37 = MEMORY[0x22766BAC4](v32, a10, &a29);
  sub_221014E78(&qword_25565BD50, type metadata accessor for StorefrontLocaleViewModifier, (uint64_t)&unk_22130A118);
  a27 = v37;
  a28 = v38;
  MEMORY[0x22766BAC4](v32, a11, &a27);
  OUTLINED_FUNCTION_93_0();
}

void sub_2210E78BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;

  a24 = a1;
  MEMORY[0x22766BA58](255, &a23, MEMORY[0x24BDF2F10], 0);
  sub_2212F3E40();
  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BD58);
  OUTLINED_FUNCTION_22_9();
  sub_2212F3348();
  sub_2212F3348();
  sub_2212F3348();
  a23 = v24;
  a24 = a1;
  swift_getOpaqueTypeConformance2();
  sub_221014E78((unint64_t *)&qword_255656B50, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  OUTLINED_FUNCTION_18_1();
}

void sub_2210E79A4()
{
  uint64_t *v0;

  sub_2210E5FB4(&qword_25565BD60, v0);
  OUTLINED_FUNCTION_7_2();
}

void sub_2210E79C8()
{
  OUTLINED_FUNCTION_3_3();
}

void sub_2210E79E0()
{
  OUTLINED_FUNCTION_10_13();
}

void sub_2210E79F0()
{
  sub_2210E61BC();
  OUTLINED_FUNCTION_5_2();
}

void sub_2210E7A28()
{
  sub_221014E78(qword_25565BE10, (uint64_t (*)(uint64_t))type metadata accessor for SubscriptionStoreDefaultMarketingView, (uint64_t)&unk_22130DEF0);
}

uint64_t sub_2210E7A54(uint64_t a1)
{
  return sub_2210E5D00(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_2210E7A68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_2210E6790(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_2210E7AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_2210E6790(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_2210E5D00(v7, v8, v9, v10);
  return a1;
}

uint64_t sub_2210E7B30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_2210E5D00(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_2210E7B7C(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2210E7BBC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_2210E7C04(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_2210E7C0C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

void sub_2210E7C28(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)a1 = sub_2211A8534();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
}

uint64_t OUTLINED_FUNCTION_3_20@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3, v2);
}

uint64_t OUTLINED_FUNCTION_5_19(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v1 + 536);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 528))(a1 + *(_QWORD *)(v1 + 472), v3, v2);
}

uint64_t OUTLINED_FUNCTION_7_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for SubscriptionStoreView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t OUTLINED_FUNCTION_15_17()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_17_18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_20_13()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_21_13@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_221047104(*(_QWORD *)(v1 + a1), *(unsigned __int8 *)(v1 + a1 + 8));
}

uint64_t OUTLINED_FUNCTION_22_9()
{
  return sub_2212F3348();
}

uint64_t OUTLINED_FUNCTION_26_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void OUTLINED_FUNCTION_27_13(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_30_12()
{
  return sub_2212F4758();
}

uint64_t OUTLINED_FUNCTION_34_7()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_35_8()
{
  return sub_2210E3484();
}

uint64_t OUTLINED_FUNCTION_37_5@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_38_7()
{
  return sub_2212F4758();
}

uint64_t OUTLINED_FUNCTION_39_6()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_42_7(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)v1 = result;
  *(_BYTE *)(v1 + 8) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_43_6(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)v1 = result;
  *(_BYTE *)(v1 + 8) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_44_6(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)v1 = result;
  *(_BYTE *)(v1 + 40) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_45_5()
{
  return sub_2211A8220();
}

uint64_t OUTLINED_FUNCTION_46_5()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_49_2()
{
  return sub_2212F3348();
}

uint64_t OUTLINED_FUNCTION_50_3()
{
  return type metadata accessor for SubscriptionStoreViewEventConfiguration();
}

uint64_t OUTLINED_FUNCTION_51_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_2210E7E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t result;
  __int128 v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v4 = sub_2212F29B8();
  MEMORY[0x24BDAC7A8](v4);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2212F5124();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v25 - v13;
  sub_2210BF00C(a1, (uint64_t)&v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658A10);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    sub_221199610((uint64_t)v12);
    sub_22123A158();
    v15 = *(void (**)(char *, uint64_t))(v9 + 8);
    v15(v12, v8);
    *(_QWORD *)&v25 = sub_2212F40EC();
    *((_QWORD *)&v25 + 1) = v16;
    *(_QWORD *)&v26 = v17 & 1;
    *((_QWORD *)&v26 + 1) = v18;
    v27 = 0;
    sub_2210E87C4();
    sub_2212F3A14();
    v19 = v28;
    v20 = v29;
    v21 = v30;
    v22 = v31;
    v23 = v32;
    result = ((uint64_t (*)(char *, uint64_t))v15)(v14, v8);
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
    sub_2210A577C((uint64_t)v7, &qword_255659810);
    v25 = 0u;
    v26 = 0u;
    v27 = 1;
    sub_2210E87C4();
    result = sub_2212F3A14();
    v19 = v28;
    v20 = v29;
    v21 = v30;
    v22 = v31;
    v23 = v32;
  }
  *(_QWORD *)a2 = v19;
  *(_QWORD *)(a2 + 8) = v20;
  *(_QWORD *)(a2 + 16) = v21;
  *(_QWORD *)(a2 + 24) = v22;
  *(_BYTE *)(a2 + 32) = v23;
  return result;
}

uint64_t sub_2210E80B0()
{
  return sub_2212F5DE4();
}

uint64_t sub_2210E80D4()
{
  sub_2212F5DD8();
  sub_2212F5DE4();
  return sub_2212F5E08();
}

uint64_t sub_2210E811C()
{
  sub_2212F5DD8();
  sub_2212F5DE4();
  return sub_2212F5E08();
}

double AutomaticSubscriptionOptionGroupLabel.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  unsigned __int8 v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int16 v62;
  id v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  __int16 v67;
  double result;
  __int128 v69;
  __int16 v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  __int128 v131;
  __int16 v132;
  char v133;
  __int128 v134;
  __int128 v135;
  __int16 v136;
  char v137;

  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_BYTE *)(v1 + 48);
  sub_221017C08(v3, v4);
  sub_221045EAC();
  v6 = v5;
  sub_221017894(v3, v4);
  if (v6 == 1)
  {
    sub_2210E8710(v1, (uint64_t)&v130);
    if (*((_QWORD *)&v131 + 1))
    {
      v7 = sub_22101E4FC(&v130, (uint64_t)&v134);
      v15 = OUTLINED_FUNCTION_3_21(v7, v8, v9, v10, v11, v12, v13, v14, v72, v77, v82, v89, v94, v101);
      OUTLINED_FUNCTION_2_23(v15, v16, v17, v18, v19, v20, v21, v22, v73, v78, v83, v90, v95, v102, v106, v109, v112, v115, v118,
        v121,
        v124,
        v127,
        v130);
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BEB8);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BEC0);
      sub_2210E8758();
      sub_2210E8800();
      v25 = OUTLINED_FUNCTION_0_28();
      OUTLINED_FUNCTION_1_25(v25, v26, v27, v28, v29, v30, v31, v32, v74, v79, v84, v91, v96, v103, v107, v110, v113, v116, v119,
        v122,
        v125,
        v128,
        v130,
        *((uint64_t *)&v130 + 1),
        v131);
      sub_2210A577C((uint64_t)&v134, &qword_25565BF00);
      v34 = v85;
      v33 = v97;
    }
    else
    {
      sub_2210A577C((uint64_t)&v130, &qword_25565BEB0);
      *(_QWORD *)&v130 = sub_2210E84C4;
      *((_QWORD *)&v130 + 1) = 0;
      v131 = 0uLL;
      v132 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25565BEB8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25565BEC0);
      sub_2210E8758();
      sub_2210E8800();
      OUTLINED_FUNCTION_0_28();
      v33 = v134;
      v34 = v135;
      v23 = v136;
      v24 = HIBYTE(v136);
    }
    if (v24)
      v62 = 256;
    else
      v62 = 0;
    v130 = v33;
    v131 = v34;
    v132 = v62 | v23;
    v133 = 1;
  }
  else
  {
    sub_2210E8710(v1, (uint64_t)&v130);
    if (*((_QWORD *)&v131 + 1))
    {
      v35 = sub_22101E4FC(&v130, (uint64_t)&v134);
      v43 = OUTLINED_FUNCTION_3_21(v35, v36, v37, v38, v39, v40, v41, v42, v72, v77, v82, v89, v94, v101);
      OUTLINED_FUNCTION_2_23(v43, v44, v45, v46, v47, v48, v49, v50, v75, v80, v86, v92, v98, v104, v106, v109, v112, v115, v118,
        v121,
        v124,
        v127,
        v130);
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BEB8);
      sub_2210E8758();
      v52 = sub_2212F3A14();
      OUTLINED_FUNCTION_1_25(v52, v53, v54, v55, v56, v57, v58, v59, v76, v81, v87, v93, v99, v105, v108, v111, v114, v117, v120,
        v123,
        v126,
        v129,
        v130,
        *((uint64_t *)&v130 + 1),
        v131);
      sub_2210A577C((uint64_t)&v134, &qword_25565BF00);
      v61 = v88;
      v60 = v100;
    }
    else
    {
      sub_2210A577C((uint64_t)&v130, &qword_25565BEB0);
      sub_2212F384C();
      if (qword_255655B20 != -1)
        swift_once();
      v63 = (id)qword_25568CA90;
      *(_QWORD *)&v130 = sub_2212F40D4();
      *((_QWORD *)&v130 + 1) = v64;
      *(_QWORD *)&v131 = v65 & 1;
      *((_QWORD *)&v131 + 1) = v66;
      v132 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25565BEB8);
      sub_2210E8758();
      sub_2212F3A14();
      v60 = v134;
      v61 = v135;
      v51 = v136;
      LODWORD(v3) = HIBYTE(v136);
    }
    if ((_DWORD)v3)
      v67 = 256;
    else
      v67 = 0;
    v130 = v60;
    v131 = v61;
    v132 = v67 | v51;
    v133 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565BEE0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565BEE8);
  sub_2210E886C();
  sub_2210E88D8();
  OUTLINED_FUNCTION_0_28();
  result = *(double *)&v134;
  v69 = v135;
  v70 = v136;
  v71 = v137;
  *(_OWORD *)a1 = v134;
  *(_OWORD *)(a1 + 16) = v69;
  *(_WORD *)(a1 + 32) = v70;
  *(_BYTE *)(a1 + 34) = v71;
  return result;
}

uint64_t sub_2210E84C4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  os_log_type_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v0 = type metadata accessor for SKLogger();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_255655C08 != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)qword_25568CE88);
  sub_22103F99C(v3, (uint64_t)v2);
  v4 = sub_2212F57F0();
  v5 = sub_2212F2C1C();
  v6 = v4;
  if (os_log_type_enabled(v5, v4))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v11 = v8;
    *(_DWORD *)v7 = 136446466;
    v10 = sub_221115C44(0, 0xE000000000000000, &v11);
    sub_2212F5898();
    *(_WORD *)(v7 + 12) = 2082;
    v10 = sub_221115C44(0xD00000000000003ALL, 0x80000002212F8930, &v11);
    sub_2212F5898();
    _os_log_impl(&dword_221005000, v5, v6, "%{public}s%{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22766BBA8](v8, -1, -1);
    MEMORY[0x22766BBA8](v7, -1, -1);
  }

  return sub_22105A598((uint64_t)v2);
}

uint64_t sub_2210E86A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = sub_2212F4680();
  v3 = sub_2212F45D8();
  v4 = sub_2212F4590();
  result = sub_2212F3ED0();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = result;
  return result;
}

uint64_t sub_2210E8710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2210E8758()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_25565BEC8;
  if (!qword_25565BEC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BEB8);
    v2 = sub_2210E87C4();
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25565BEC8);
  }
  return result;
}

unint64_t sub_2210E87C4()
{
  unint64_t result;

  result = qword_25565BED0;
  if (!qword_25565BED0)
  {
    result = MEMORY[0x22766BAC4](&unk_22130556C, &type metadata for AutomaticSubscriptionOptionGroupLabel.InvalidLabel);
    atomic_store(result, (unint64_t *)&qword_25565BED0);
  }
  return result;
}

unint64_t sub_2210E8800()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25565BED8;
  if (!qword_25565BED8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BEC0);
    v2[0] = sub_2210E87C4();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25565BED8);
  }
  return result;
}

unint64_t sub_2210E886C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25565BEF0;
  if (!qword_25565BEF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BEE0);
    v2[0] = sub_2210E8758();
    v2[1] = MEMORY[0x24BDF1F80];
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25565BEF0);
  }
  return result;
}

uint64_t sub_2210E88D8()
{
  return sub_2210E8C1C(&qword_25565BEF8, &qword_25565BEE8, (uint64_t (*)(void))sub_2210E8758, (uint64_t (*)(void))sub_2210E8800);
}

uint64_t sub_2210E88FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for AutomaticSubscriptionOptionGroupLabel(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1);
  return sub_221017894(*(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for AutomaticSubscriptionOptionGroupLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  sub_221017C08(v7, v8);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  return a1;
}

uint64_t assignWithCopy for AutomaticSubscriptionOptionGroupLabel(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
    }
    else
    {
      sub_2210A577C(a1, &qword_25565BF00);
      v5 = *((_QWORD *)a2 + 4);
      v6 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = v5;
    }
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v7;
    *(_OWORD *)(a1 + 16) = v8;
  }
  v9 = *((_QWORD *)a2 + 5);
  v10 = *((_BYTE *)a2 + 48);
  sub_221017C08(v9, v10);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  sub_221017894(v11, v12);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AutomaticSubscriptionOptionGroupLabel(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;

  if (*(_QWORD *)(a1 + 24))
  {
    if (*(_QWORD *)(a2 + 24))
      __swift_destroy_boxed_opaque_existential_1(a1);
    else
      sub_2210A577C(a1, &qword_25565BF00);
  }
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v6;
  sub_221017894(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AutomaticSubscriptionOptionGroupLabel(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutomaticSubscriptionOptionGroupLabel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomaticSubscriptionOptionGroupLabel()
{
  return &type metadata for AutomaticSubscriptionOptionGroupLabel;
}

uint64_t sub_2210E8BE8()
{
  return sub_2210E8C1C(&qword_25565BF08, &qword_25565BF10, (uint64_t (*)(void))sub_2210E886C, sub_2210E88D8);
}

uint64_t sub_2210E8C1C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomaticSubscriptionOptionGroupLabel.InvalidLabel()
{
  return &type metadata for AutomaticSubscriptionOptionGroupLabel.InvalidLabel;
}

uint64_t getEnumTagSinglePayload for AutomaticSubscriptionOptionGroupLabel.StandardLabel(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for AutomaticSubscriptionOptionGroupLabel.StandardLabel(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2210E8D30 + 4 * byte_221305440[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2210E8D50 + 4 * byte_221305445[v4]))();
}

_BYTE *sub_2210E8D30(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2210E8D50(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2210E8D58(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2210E8D60(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2210E8D68(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2210E8D70(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AutomaticSubscriptionOptionGroupLabel.StandardLabel()
{
  return &type metadata for AutomaticSubscriptionOptionGroupLabel.StandardLabel;
}

unint64_t sub_2210E8D90()
{
  unint64_t result;

  result = qword_25565BF18;
  if (!qword_25565BF18)
  {
    result = MEMORY[0x22766BAC4](&unk_221305544, &type metadata for AutomaticSubscriptionOptionGroupLabel.StandardLabel);
    atomic_store(result, (unint64_t *)&qword_25565BF18);
  }
  return result;
}

uint64_t sub_2210E8DCC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2210E8DE0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25565BF20;
  if (!qword_25565BF20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BF28);
    v2[0] = sub_2210E8E64();
    v2[1] = sub_221018504(&qword_25565BF40, &qword_25565BF48, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25565BF20);
  }
  return result;
}

unint64_t sub_2210E8E64()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25565BF30;
  if (!qword_25565BF30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565BF38);
    v2 = sub_221018504(&qword_255656990, &qword_255656978, MEMORY[0x24BDF0710]);
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25565BF30);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_28()
{
  return sub_2212F3A14();
}

__n128 OUTLINED_FUNCTION_1_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,__int128 a25)
{
  return (__n128)a25;
}

__n128 OUTLINED_FUNCTION_2_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int128 a23)
{
  return (__n128)a23;
}

uint64_t OUTLINED_FUNCTION_3_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  va_list va;

  va_start(va, a14);
  return sub_2210E7E44(v14 - 128, (uint64_t)va);
}

uint64_t sub_2210E8F34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = sub_2212F3840();
  MEMORY[0x24BDAC7A8](v3);
  v4 = v1 + *(int *)(type metadata accessor for SubscriptionPickerSubscribeButtonModel() + 20);
  v5 = *(_QWORD *)(v4 + 16);
  switch(v5)
  {
    case 0:
    case 2:
      sub_221277580();
      OUTLINED_FUNCTION_0_29(v6, v7, v8, v9);
      goto LABEL_4;
    case 1:
      v17 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_3_22() + 36));
      if ((v17 & 8) != 0)
      {
        sub_2212F3834();
        sub_2212F3828();
        sub_2212F381C();
        sub_2212F3828();
        v18 = sub_2212F3858();
      }
      else if ((v17 & 6) != 0)
      {
        sub_22123B8DC();
      }
      else
      {
        swift_bridgeObjectRetain();
        v18 = sub_2212F384C();
      }
      OUTLINED_FUNCTION_0_29(v18, v19, v20, v21);
      OUTLINED_FUNCTION_2_24();
      return swift_storeEnumTagMultiPayload();
    case 3:
      sub_221277918();
      v22 = a1 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
      sub_221277918();
      v23 = _s11PriceStringOMa(0);
      __swift_storeEnumTagSinglePayload(v22, 0, 1, v23);
      OUTLINED_FUNCTION_2_24();
      return swift_storeEnumTagMultiPayload();
    default:
      v10 = *(_QWORD *)(v4 + 32);
      v11 = *(_BYTE *)(v4 + 24);
      v12 = *(_QWORD *)(v4 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = OUTLINED_FUNCTION_1_26();
      sub_221046F8C(v13, v14);
      v15 = OUTLINED_FUNCTION_1_26();
      sub_2210470B0(v15, v16);
      *(_QWORD *)a1 = v12;
      *(_QWORD *)(a1 + 8) = v5;
      *(_BYTE *)(a1 + 16) = v11 & 1;
      *(_QWORD *)(a1 + 24) = v10;
LABEL_4:
      OUTLINED_FUNCTION_2_24();
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t type metadata accessor for SubscriptionPickerSubscribeButtonModel()
{
  uint64_t result;

  result = qword_25565BFA8;
  if (!qword_25565BFA8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2210E91CC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _BYTE *v29;
  _OWORD *v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    sub_22103D94C(*(_QWORD *)a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v10;
    v11 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v11;
    v12 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v12;
    v13 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
    v14 = v13[8];
    v15 = (void *)(a1 + v14);
    v16 = (const void *)(a2 + v14);
    v17 = sub_2212F5124();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
    }
    *(_QWORD *)(a1 + v13[9]) = *(_QWORD *)(a2 + v13[9]);
    v20 = v13[10];
    v21 = (void *)(a1 + v20);
    v22 = (const void *)(a2 + v20);
    v23 = sub_2212F50D0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
    }
    v25 = *(int *)(a3 + 20);
    v26 = a1 + v25;
    v27 = a2 + v25;
    v28 = *(_BYTE *)(a2 + v25);
    v29 = (_BYTE *)(a1 + v25);
    *v29 = v28;
    v30 = v29 + 8;
    v31 = *(_QWORD *)(v27 + 16);
    if (v31 >= 4)
    {
      *(_QWORD *)(v26 + 8) = *(_QWORD *)(v27 + 8);
      *(_QWORD *)(v26 + 16) = v31;
      *(_BYTE *)(v26 + 24) = *(_BYTE *)(v27 + 24);
      *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
      v34 = *(_QWORD *)(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v34)
      {
        *(_QWORD *)(v26 + 40) = *(_QWORD *)(v27 + 40);
        *(_QWORD *)(v26 + 48) = v34;
        *(_BYTE *)(v26 + 56) = *(_BYTE *)(v27 + 56);
        *(_QWORD *)(v26 + 64) = *(_QWORD *)(v27 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v35 = *(_OWORD *)(v27 + 56);
        *(_OWORD *)(v26 + 40) = *(_OWORD *)(v27 + 40);
        *(_OWORD *)(v26 + 56) = v35;
      }
    }
    else
    {
      v32 = *(_OWORD *)(v27 + 24);
      *v30 = *(_OWORD *)(v27 + 8);
      v30[1] = v32;
      v33 = *(_OWORD *)(v27 + 56);
      v30[2] = *(_OWORD *)(v27 + 40);
      v30[3] = v33;
    }
    *(_BYTE *)(v26 + 72) = *(_BYTE *)(v27 + 72);
  }
  return a1;
}

unint64_t sub_2210E944C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;

  sub_221015344(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  v5 = a1 + *(int *)(v4 + 32);
  v6 = sub_2212F5124();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(v4 + 40);
  v8 = sub_2212F50D0();
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + *(int *)(a2 + 20);
  result = *(_QWORD *)(v9 + 16);
  if (result >= 4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(v9 + 48);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2210E956C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _BYTE *v27;
  _OWORD *v28;
  unint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_22103D94C(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v9;
  v10 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v10;
  v11 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v11;
  v12 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  v13 = v12[8];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_2212F5124();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  *(_QWORD *)(a1 + v12[9]) = *(_QWORD *)(a2 + v12[9]);
  v18 = v12[10];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_2212F50D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  }
  v23 = *(int *)(a3 + 20);
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_BYTE *)(a2 + v23);
  v27 = (_BYTE *)(a1 + v23);
  *v27 = v26;
  v28 = v27 + 8;
  v29 = *(_QWORD *)(v25 + 16);
  if (v29 >= 4)
  {
    *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
    *(_QWORD *)(v24 + 16) = v29;
    *(_BYTE *)(v24 + 24) = *(_BYTE *)(v25 + 24);
    *(_QWORD *)(v24 + 32) = *(_QWORD *)(v25 + 32);
    v32 = *(_QWORD *)(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32)
    {
      *(_QWORD *)(v24 + 40) = *(_QWORD *)(v25 + 40);
      *(_QWORD *)(v24 + 48) = v32;
      *(_BYTE *)(v24 + 56) = *(_BYTE *)(v25 + 56);
      *(_QWORD *)(v24 + 64) = *(_QWORD *)(v25 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v33 = *(_OWORD *)(v25 + 56);
      *(_OWORD *)(v24 + 40) = *(_OWORD *)(v25 + 40);
      *(_OWORD *)(v24 + 56) = v33;
    }
  }
  else
  {
    v30 = *(_OWORD *)(v25 + 24);
    *v28 = *(_OWORD *)(v25 + 8);
    v28[1] = v30;
    v31 = *(_OWORD *)(v25 + 56);
    v28[2] = *(_OWORD *)(v25 + 40);
    v28[3] = v31;
  }
  *(_BYTE *)(v24 + 72) = *(_BYTE *)(v25 + 72);
  return a1;
}

uint64_t sub_2210E97C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  int EnumTagSinglePayload;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  __int128 *v33;
  unint64_t v34;
  unint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_22103D94C(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_221015344(v9, v10, v11);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  v13 = v12[8];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_2212F5124();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16);
  if (EnumTagSinglePayload)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v19 = *(_QWORD *)(v16 - 8);
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v14, v16);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v19 + 24))(v14, v15, v16);
LABEL_7:
  *(_QWORD *)(a1 + v12[9]) = *(_QWORD *)(a2 + v12[9]);
  v21 = v12[10];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  v24 = sub_2212F50D0();
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v27 = *(_QWORD *)(v24 - 8);
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v27 + 8))(v22, v24);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v27 + 24))(v22, v23, v24);
LABEL_13:
  v29 = *(int *)(a3 + 20);
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v32 = (__int128 *)(a1 + v29 + 8);
  v33 = (__int128 *)(v31 + 8);
  v34 = *(_QWORD *)(a1 + v29 + 16);
  v35 = *(_QWORD *)(v31 + 16);
  if (v34 < 4)
  {
    if (v35 < 4)
    {
      v36 = *v33;
      v37 = *(_OWORD *)(v31 + 24);
      v38 = *(_OWORD *)(v31 + 56);
      v32[2] = *(_OWORD *)(v31 + 40);
      v32[3] = v38;
LABEL_16:
      *v32 = v36;
      v32[1] = v37;
      goto LABEL_29;
    }
    *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
    *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
    *(_BYTE *)(v30 + 24) = *(_BYTE *)(v31 + 24);
    *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
    v42 = *(_QWORD *)(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v42)
    {
      v43 = *(_OWORD *)(v31 + 56);
      *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
      *(_OWORD *)(v30 + 56) = v43;
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v35 < 4)
  {
    sub_2210E9BC8((uint64_t)v32);
    v39 = *(_OWORD *)(v31 + 56);
    v41 = *v33;
    v40 = *(_OWORD *)(v31 + 24);
    v32[2] = *(_OWORD *)(v31 + 40);
    v32[3] = v39;
    *v32 = v41;
    v32[1] = v40;
    goto LABEL_29;
  }
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 24) = *(_BYTE *)(v31 + 24);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = (__int128 *)(v30 + 40);
  v44 = (__int128 *)(v31 + 40);
  v45 = *(_QWORD *)(v31 + 48);
  if (!*(_QWORD *)(v30 + 48))
  {
    if (!v45)
    {
      v36 = *v44;
      v37 = *(_OWORD *)(v31 + 56);
      goto LABEL_16;
    }
LABEL_27:
    *(_QWORD *)(v30 + 40) = *(_QWORD *)(v31 + 40);
    *(_QWORD *)(v30 + 48) = *(_QWORD *)(v31 + 48);
    *(_BYTE *)(v30 + 56) = *(_BYTE *)(v31 + 56);
    *(_QWORD *)(v30 + 64) = *(_QWORD *)(v31 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  if (v45)
  {
    *(_QWORD *)(v30 + 40) = *(_QWORD *)(v31 + 40);
    *(_QWORD *)(v30 + 48) = *(_QWORD *)(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v30 + 56) = *(_BYTE *)(v31 + 56);
    *(_QWORD *)(v30 + 64) = *(_QWORD *)(v31 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2210A3354(v30 + 40);
    v46 = *(_OWORD *)(v31 + 56);
    *v32 = *v44;
    *(_OWORD *)(v30 + 56) = v46;
  }
LABEL_29:
  *(_BYTE *)(v30 + 72) = *(_BYTE *)(v31 + 72);
  return a1;
}

uint64_t sub_2210E9BC8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255659A28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2210E9C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  v7 = v6[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_2212F5124();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v12 = v6[10];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_2212F50D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0x49uLL);
  return a1;
}

uint64_t sub_2210E9D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  int EnumTagSinglePayload;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  unint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  __int128 v39;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_221015344(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  v13 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  v14 = v13[8];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = sub_2212F5124();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (EnumTagSinglePayload)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v20 = *(_QWORD *)(v17 - 8);
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v15, v17);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v20 + 40))(v15, v16, v17);
LABEL_7:
  *(_QWORD *)(a1 + v13[9]) = *(_QWORD *)(a2 + v13[9]);
  v22 = v13[10];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = sub_2212F50D0();
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v25);
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v28 = *(_QWORD *)(v25 - 8);
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v23, v25);
LABEL_12:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v28 + 40))(v23, v24, v25);
LABEL_13:
  v30 = *(int *)(a3 + 20);
  v31 = a1 + v30;
  v32 = a2 + v30;
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v33 = (_OWORD *)(a1 + v30 + 8);
  if (*(_QWORD *)(a1 + v30 + 16) >= 4uLL)
  {
    v34 = *(_QWORD *)(v32 + 16);
    if (v34 >= 4)
    {
      *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
      *(_QWORD *)(v31 + 16) = v34;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v31 + 24) = *(_BYTE *)(v32 + 24);
      *(_QWORD *)(v31 + 32) = *(_QWORD *)(v32 + 32);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v31 + 48))
      {
        v38 = *(_QWORD *)(v32 + 48);
        if (v38)
        {
          *(_QWORD *)(v31 + 40) = *(_QWORD *)(v32 + 40);
          *(_QWORD *)(v31 + 48) = v38;
          swift_bridgeObjectRelease();
          *(_BYTE *)(v31 + 56) = *(_BYTE *)(v32 + 56);
          *(_QWORD *)(v31 + 64) = *(_QWORD *)(v32 + 64);
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
        sub_2210A3354(v31 + 40);
      }
      v39 = *(_OWORD *)(v32 + 56);
      *(_OWORD *)(v31 + 40) = *(_OWORD *)(v32 + 40);
      *(_OWORD *)(v31 + 56) = v39;
      goto LABEL_17;
    }
    sub_2210E9BC8((uint64_t)v33);
  }
  v35 = *(_OWORD *)(v32 + 24);
  *v33 = *(_OWORD *)(v32 + 8);
  v33[1] = v35;
  v36 = *(_OWORD *)(v32 + 56);
  v33[2] = *(_OWORD *)(v32 + 40);
  v33[3] = v36;
LABEL_17:
  *(_BYTE *)(v31 + 72) = *(_BYTE *)(v32 + 72);
  return a1;
}

uint64_t sub_2210EA090()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210EA09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = OUTLINED_FUNCTION_3_22();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 16);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 4;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_2210EA120()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210EA12C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_3_22();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 16) = (a2 + 3);
  return result;
}

uint64_t sub_2210EA1A0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SubscriptionStoreCopyWriter(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_29(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)v4 = result;
  *(_QWORD *)(v4 + 8) = a2;
  *(_BYTE *)(v4 + 16) = a3 & 1;
  *(_QWORD *)(v4 + 24) = a4;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_26()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_2_24()
{
  return type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
}

uint64_t OUTLINED_FUNCTION_3_22()
{
  return type metadata accessor for SubscriptionStoreCopyWriter(0);
}

uint64_t sub_2210EA248()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565C010);
  sub_2212F4884();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565C018);
  sub_2210EACDC();
  sub_2212F4548();
  swift_release();
  return swift_release();
}

uint64_t sub_2210EA2F0()
{
  return sub_2210EA248();
}

id sub_2210EA2FC()
{
  __int128 *v0;
  uint64_t v1;
  objc_class *v2;
  char *v3;
  char *v4;
  objc_super v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v7 = *v0;
  v8 = *((_QWORD *)v0 + 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565C010);
  sub_2212F4884();
  v1 = v10;
  v2 = (objc_class *)type metadata accessor for UIKitIndexView.Coordinator();
  v3 = (char *)objc_allocWithZone(v2);
  v4 = &v3[OBJC_IVAR____TtCV17_StoreKit_SwiftUIP33_C3D66C71BBD115CD7E02F3EACA7B285614UIKitIndexView11Coordinator__value];
  *(_OWORD *)v4 = v9;
  *((_QWORD *)v4 + 2) = v1;
  v6.receiver = v3;
  v6.super_class = v2;
  return objc_msgSendSuper2(&v6, sel_init);
}

id sub_2210EA38C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  int v9;
  id v10;
  void *v11;
  void (*v12)(char *, uint64_t);
  int v13;
  void *v14;
  uint64_t v16;
  void *v17;

  v0 = sub_2212F3774();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v16 - v5;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD7D0]), sel_init);
  objc_msgSend(v7, sel_setAllowsContinuousInteraction_, 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565C038);
  sub_2212F3D38();
  v8 = v17;
  objc_msgSend(v7, sel_addTarget_action_forControlEvents_, v17, sel_valueChanged_, 4096);

  v9 = sub_2212F3BA0();
  sub_2212F3D44();
  LODWORD(v17) = v9;
  sub_2210EAFD8();
  if (!sub_2212F2D84())
  {
    v10 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
    MEMORY[0x227669C70](v10);
  }
  v11 = (void *)sub_2212F5814();
  v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v6, v0);
  objc_msgSend(v7, sel_setPageIndicatorTintColor_, v11);

  v13 = sub_2212F3B94();
  sub_2212F3D44();
  LODWORD(v17) = v13;
  if (!sub_2212F2D84())
    sub_2212F45F0();
  v14 = (void *)sub_2212F5814();
  v12(v4, v0);
  objc_msgSend(v7, sel_setCurrentPageIndicatorTintColor_, v14);

  return v7;
}

id sub_2210EA5B0(void *a1)
{
  __int128 *v1;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *v1;
  v6 = *((_QWORD *)v1 + 2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C010);
  MEMORY[0x227669E98](&v7, v3);
  objc_msgSend(a1, sel_setCurrentPage_, v7, v5, v6);
  objc_msgSend(a1, sel_setNumberOfPages_, *((_QWORD *)v1 + 3));
  return objc_msgSend(a1, sel_setBackgroundStyle_, *((_QWORD *)v1 + 4));
}

double sub_2210EA644(int a1, int a2, int a3, int a4, id a5)
{
  uint64_t v5;
  double result;

  objc_msgSend(a5, sel_sizeForNumberOfPages_, *(_QWORD *)(v5 + 24));
  return result;
}

uint64_t sub_2210EA674()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565C010);
  return sub_2212F486C();
}

uint64_t sub_2210EA6D0(void *a1)
{
  swift_getKeyPath();
  objc_msgSend(a1, sel_interactionState);
  sub_2210EA784();
  return swift_release();
}

uint64_t sub_2210EA748(int a1, id a2)
{
  objc_msgSend(a2, sel_currentPage);
  return sub_2210EA674();
}

uint64_t sub_2210EA784()
{
  swift_setAtWritableKeyPath();
  swift_retain();
  sub_2212F3390();
  return swift_release_n();
}

void sub_2210EA870()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for UIKitIndexView.Coordinator()
{
  return objc_opt_self();
}

uint64_t sub_2210EA90C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2212F2E5C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2210EA938()
{
  return sub_2212F2E68();
}

id sub_2210EA95C()
{
  return sub_2210EA38C();
}

id sub_2210EA994(void *a1)
{
  return sub_2210EA5B0(a1);
}

id sub_2210EA9D4@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_2210EA2FC();
  *a1 = result;
  return result;
}

double sub_2210EAA18(int a1, char a2, int a3, char a4, void *a5)
{
  return sub_2210EA644(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_2210EAA74()
{
  sub_2210EAF9C();
  return sub_2212F39E4();
}

uint64_t sub_2210EAAC4()
{
  sub_2210EAF9C();
  return sub_2212F3990();
}

void sub_2210EAB14()
{
  sub_2210EAF9C();
  sub_2212F39D8();
  __break(1u);
}

uint64_t sub_2210EAB38()
{
  uint64_t v0;

  return sub_2210EA748(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t initializeWithCopy for IndexView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for IndexView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_OWORD *assignWithTake for IndexView(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for IndexView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IndexView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IndexView()
{
  return &type metadata for IndexView;
}

uint64_t sub_2210EACCC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2210EACDC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25565C020;
  if (!qword_25565C020)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C018);
    v2 = sub_2210EAD40();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25565C020);
  }
  return result;
}

unint64_t sub_2210EAD40()
{
  unint64_t result;

  result = qword_25565C028;
  if (!qword_25565C028)
  {
    result = MEMORY[0x22766BAC4](&unk_221305784, &type metadata for UIKitIndexView);
    atomic_store(result, (unint64_t *)&qword_25565C028);
  }
  return result;
}

uint64_t destroy for UIKitIndexView()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for UIKitIndexView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for UIKitIndexView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for UIKitIndexView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for UIKitIndexView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UIKitIndexView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UIKitIndexView()
{
  return &type metadata for UIKitIndexView;
}

uint64_t sub_2210EAF40()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C018);
  sub_2210EACDC();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210EAF90()
{
  return MEMORY[0x24BDF5560];
}

unint64_t sub_2210EAF9C()
{
  unint64_t result;

  result = qword_25565C030;
  if (!qword_25565C030)
  {
    result = MEMORY[0x22766BAC4](&unk_2213056F4, &type metadata for UIKitIndexView);
    atomic_store(result, (unint64_t *)&qword_25565C030);
  }
  return result;
}

unint64_t sub_2210EAFD8()
{
  unint64_t result;

  result = qword_25565C040;
  if (!qword_25565C040)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25565C040);
  }
  return result;
}

uint64_t View.offerCodeRedemption(isPresented:onCompletion:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *KeyPath;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)();
  uint64_t v24;
  char v25;

  KeyPath = (void *)swift_getKeyPath();
  v16 = KeyPath;
  v17 = 0;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  v23 = sub_2210EB11C;
  v24 = 0;
  v25 = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  MEMORY[0x227669B20](&v16, a6, &type metadata for OfferCodeRedeemSheetModifier, a7);
  sub_221046ED4(KeyPath, 0);
  swift_release();
  swift_release();
  swift_release();
  return sub_22109D3A4();
}

void sub_2210EB11C()
{
  OUTLINED_FUNCTION_21_14();
  swift_allocObject();
  sub_22109E7D8();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210EB148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;
  const void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
  sub_2212F4884();
  v6 = swift_allocObject();
  memcpy((void *)(v6 + 16), v3, 0x49uLL);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  v8 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25565C108) + 36);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  *(_QWORD *)(v8 + 24) = sub_2210EC540;
  *(_QWORD *)(v8 + 32) = v6;
  return sub_2210EC548((uint64_t)v3);
}

uint64_t sub_2210EB238(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  int v10;
  id v11;
  char v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  void (*v29)(void *, uint64_t);
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _BYTE v34[16];
  __int128 v35;
  char v36;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for SKLogger();
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *a1;
  v11 = *(id *)a2;
  v12 = *(_BYTE *)(a2 + 8);
  sub_22109E3EC(*(id *)a2, v12);
  sub_221045554();
  v14 = v13;
  sub_221046ED4(v11, v12);
  if (v14)
  {
    v15 = objc_msgSend(v14, sel_scene);

    if (v15)
    {
      objc_opt_self();
      v16 = swift_dynamicCastObjCClass();
      if (v16)
      {
        if (v10)
        {
          v17 = v16;
          v18 = sub_2212F5640();
          __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v18);
          sub_2212F55F8();
          sub_2210EC548(a2);
          v19 = v15;
          v20 = sub_2212F55EC();
          v21 = (_QWORD *)swift_allocObject();
          v22 = MEMORY[0x24BEE6930];
          v21[2] = v20;
          v21[3] = v22;
          memcpy(v21 + 4, (const void *)a2, 0x49uLL);
          v21[14] = v17;
          sub_2210ECBB8((uint64_t)v6, (uint64_t)&unk_25565C118, (uint64_t)v21);
          swift_release();

        }
        else
        {

        }
        return sub_2210EB5F0((const void *)a2);
      }

    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565ABC0);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_2212FF8E0;
  *(_QWORD *)(v23 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v23 + 32) = 0xD00000000000004DLL;
  *(_QWORD *)(v23 + 40) = 0x80000002212F8A80;
  sub_2212F5DC0();
  swift_bridgeObjectRelease();
  if (qword_255655C08 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v7, (uint64_t)qword_25568CE88);
  sub_22103F99C(v24, (uint64_t)v9);
  v25 = sub_2212F2C1C();
  v26 = sub_2212F2C34();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v9, v26);
  v27 = sub_2212F57E4();
  if (os_log_type_enabled(v25, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_221005000, v25, v27, "Attempting to present offer code redeem sheet without being in the hierarchy.", v28, 2u);
    MEMORY[0x22766BBA8](v28, -1, -1);
  }

  v29 = *(void (**)(void *, uint64_t))(a2 + 40);
  v30 = sub_2212F4C14();
  sub_221023FE4(&qword_255659108, (void (*)(uint64_t))MEMORY[0x24BDEA098]);
  v31 = (void *)swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x24BDEA090], v30);
  v29(v31, 1);

  v35 = *(_OWORD *)(a2 + 16);
  v36 = *(_BYTE *)(a2 + 32);
  v34[15] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
  sub_2212F486C();
  return sub_2210EB5F0((const void *)a2);
}

uint64_t sub_2210EB5F0(const void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2212F5640();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v5);
  sub_2212F55F8();
  sub_2210EC548((uint64_t)a1);
  v6 = sub_2212F55EC();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x24BEE6930];
  v7[2] = v6;
  v7[3] = v8;
  memcpy(v7 + 4, a1, 0x49uLL);
  sub_2210ECBB8((uint64_t)v4, (uint64_t)&unk_25565C148, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_2210EB6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[2] = a4;
  v5[3] = a5;
  sub_2212F55F8();
  v5[4] = sub_2212F55EC();
  v5[5] = sub_2212F55D4();
  v5[6] = v6;
  return swift_task_switch();
}

uint64_t sub_2210EB740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 64);
  *(_BYTE *)(v0 + 128) = *(_BYTE *)(v1 + 72);
  *(_QWORD *)(v0 + 72) = OUTLINED_FUNCTION_21_14();
  sub_221023FE4(&qword_25565C120, (void (*)(uint64_t))type metadata accessor for OfferCodeRedeemCoordinator);
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = sub_2212F2E38();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210EB7DC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = MEMORY[0x22766BC44](*(_QWORD *)(v0 + 88) + 136);
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210EB814()
{
  uint64_t v0;
  void *v1;
  uint64_t v3;

  v1 = *(void **)(v0 + 96);
  swift_release();

  if (v1)
  {
    swift_release();
    return OUTLINED_FUNCTION_42_2(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v0 + 104) = sub_2212F2E38();
    *(_QWORD *)(v0 + 112) = *(_QWORD *)(v3 + 40);
    *(_QWORD *)(v0 + 120) = *(_QWORD *)(v3 + 48);
    return OUTLINED_FUNCTION_0_14();
  }
}

uint64_t sub_2210EB88C()
{
  uint64_t v0;

  sub_2210EB8CC(*(void **)(v0 + 24), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  swift_release();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2210EB8CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2212F5640();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  sub_2212F55F8();
  swift_retain();
  v12 = a1;
  swift_retain();
  v13 = sub_2212F55EC();
  v14 = (_QWORD *)swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = v4;
  v14[5] = v12;
  v14[6] = a2;
  v14[7] = a3;
  sub_2210ECBB8((uint64_t)v10, (uint64_t)&unk_25565C130, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_2210EB9D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;
  _BYTE v6[73];

  memcpy(v6, v2, sizeof(v6));
  return sub_2210EB148(a1, a2);
}

uint64_t sub_2210EBA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v11;

  v7[2] = sub_2212F55F8();
  v7[3] = sub_2212F55EC();
  v11 = (_QWORD *)swift_task_alloc();
  v7[4] = v11;
  *v11 = v7;
  v11[1] = sub_2210EBAB0;
  return sub_2210EBB0C(a5, a6, a7);
}

uint64_t sub_2210EBAB0()
{
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_13_22();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210EBB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  v5 = sub_2212F2C34();
  v4[16] = v5;
  v4[17] = *(_QWORD *)(v5 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = type metadata accessor for SKLogger();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2210EBBB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (*v9)(uint64_t, uint64_t);
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 120);
  swift_unknownObjectWeakAssign();
  v2 = *(_QWORD *)(v1 + 120);
  if (v2)
  {
    v3 = *(_BYTE *)(v1 + 128) & 1;
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 112);
    *(_QWORD *)(v0 + 24) = v2;
    *(_BYTE *)(v0 + 32) = v3;
    *(_BYTE *)(v0 + 34) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
    OUTLINED_FUNCTION_6_12();
  }
  if (qword_255655C08 != -1)
    swift_once();
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = __swift_project_value_buffer(*(_QWORD *)(v0 + 152), (uint64_t)qword_25568CE88);
  *(_QWORD *)(v0 + 184) = v7;
  OUTLINED_FUNCTION_22_10(v7);
  v8 = (void *)sub_2212F2C1C();
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  *(_QWORD *)(v0 + 192) = v9;
  v9(v4, v5);
  v10 = sub_2212F57FC();
  if (OUTLINED_FUNCTION_28_10(v10))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_4() = 0;
    OUTLINED_FUNCTION_16_12(&dword_221005000, v11, v12, "Presenting offer code redeem sheet.");
    OUTLINED_FUNCTION_2_4();
  }

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v13;
  *v13 = v0;
  v13[1] = sub_2210EBCF8;
  return sub_2212F4B24();
}

uint64_t sub_2210EBCF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210EBD58()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_22_10(*(_QWORD *)(v0 + 184));
  v1 = (void *)sub_2212F2C1C();
  OUTLINED_FUNCTION_23_11();
  v2 = sub_2212F57FC();
  if (OUTLINED_FUNCTION_28_10(v2))
  {
    *(_WORD *)OUTLINED_FUNCTION_6_4() = 0;
    OUTLINED_FUNCTION_16_12(&dword_221005000, v3, v4, "Presenting overlay completed for redeem sheet.");
    OUTLINED_FUNCTION_2_4();
  }
  v5 = *(_QWORD *)(v0 + 120);

  if (*(_QWORD *)(v5 + 120))
  {
    OUTLINED_FUNCTION_16_16();
    *(_QWORD *)(v0 + 40) = v7;
    *(_QWORD *)(v0 + 48) = v6;
    *(_BYTE *)(v0 + 56) = v8;
    *(_BYTE *)(v0 + 35) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
    OUTLINED_FUNCTION_6_12();
  }
  swift_unknownObjectWeakAssign();
  sub_2212F55F8();
  *(_QWORD *)(v0 + 216) = sub_2212F55EC();
  OUTLINED_FUNCTION_13_22();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210EBE60()
{
  uint64_t v0;
  void (*v1)(_QWORD, _QWORD);

  v1 = *(void (**)(_QWORD, _QWORD))(v0 + 104);
  swift_release();
  v1(0, 0);
  OUTLINED_FUNCTION_11_23();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2210EBEB8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  id v18;

  v1 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 128);
  OUTLINED_FUNCTION_22_10(*(_QWORD *)(v0 + 184));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v2, v5);
  v6 = v1;
  v7 = sub_2212F2C1C();
  v8 = sub_2212F57E4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(void **)(v0 + 208);
    v10 = (uint8_t *)OUTLINED_FUNCTION_6_4();
    v11 = (_QWORD *)OUTLINED_FUNCTION_6_4();
    *(_DWORD *)v10 = 138543362;
    v12 = sub_2212F2970();
    *(_QWORD *)(v0 + 88) = v12;
    sub_2212F5898();
    *v11 = v12;

    _os_log_impl(&dword_221005000, v7, v8, "Error presenting offer code sheet %{public}@.", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255659950);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_2_4();
  }

  v13 = *(_QWORD *)(v0 + 120);
  OUTLINED_FUNCTION_23_11();
  swift_unknownObjectWeakAssign();
  if (*(_QWORD *)(v13 + 120))
  {
    OUTLINED_FUNCTION_16_16();
    *(_QWORD *)(v0 + 64) = v15;
    *(_QWORD *)(v0 + 72) = v14;
    *(_BYTE *)(v0 + 80) = v16;
    *(_BYTE *)(v0 + 33) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
    OUTLINED_FUNCTION_6_12();
  }
  v17 = *(void **)(v0 + 208);
  sub_2212F55F8();
  v18 = v17;
  *(_QWORD *)(v0 + 224) = sub_2212F55EC();
  OUTLINED_FUNCTION_13_22();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210EC0A8()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *, uint64_t);

  v1 = *(void **)(v0 + 208);
  v2 = *(void (**)(void *, uint64_t))(v0 + 104);
  swift_release();
  v2(v1, 1);

  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2210EC108()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_23();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for OfferCodeRedeemCoordinator()
{
  return objc_opt_self();
}

uint64_t sub_2210EC170(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2212F3348();
  v4[0] = v1;
  v4[1] = sub_2210EC1C4();
  return MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_2210EC1C4()
{
  unint64_t result;

  result = qword_25565C0F8;
  if (!qword_25565C0F8)
  {
    result = MEMORY[0x22766BAC4](&unk_221305880, &type metadata for OfferCodeRedeemSheetModifier);
    atomic_store(result, (unint64_t *)&qword_25565C0F8);
  }
  return result;
}

uint64_t destroy for OfferCodeRedeemSheetModifier(uint64_t a1)
{
  sub_221046ED4(*(id *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  swift_release();
  swift_release();
  return sub_22109D3A4();
}

uint64_t initializeWithCopy for OfferCodeRedeemSheetModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_22109E3EC(*(id *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(v2 + 56);
  v9 = *(_QWORD *)(v2 + 64);
  LOBYTE(v2) = *(_BYTE *)(v2 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22109E3F8();
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 72) = v2;
  return a1;
}

uint64_t assignWithCopy for OfferCodeRedeemSheetModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  char v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_22109E3EC(*(id *)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_221046ED4(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(v2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(v2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(v2 + 56);
  v10 = *(_QWORD *)(v2 + 64);
  LOBYTE(v2) = *(_BYTE *)(v2 + 72);
  sub_22109E3F8();
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 72) = v2;
  sub_22109D3A4();
  return a1;
}

uint64_t assignWithTake for OfferCodeRedeemSheetModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;
  char v8;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_221046ED4(v6, v7);
  swift_release();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  swift_release();
  v8 = *((_BYTE *)a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
  *(_BYTE *)(a1 + 72) = v8;
  sub_22109D3A4();
  return a1;
}

uint64_t getEnumTagSinglePayload for OfferCodeRedeemSheetModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OfferCodeRedeemSheetModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OfferCodeRedeemSheetModifier()
{
  return &type metadata for OfferCodeRedeemSheetModifier;
}

uint64_t sub_2210EC4E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210EC4F4()
{
  uint64_t v0;

  sub_221046ED4(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  swift_release();
  swift_release();
  sub_22109D3A4();
  return swift_deallocObject();
}

uint64_t sub_2210EC540(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_2210EB238(a1, v1 + 16);
}

uint64_t sub_2210EC548(uint64_t a1)
{
  sub_22109E3EC(*(id *)a1, *(_BYTE *)(a1 + 8));
  swift_retain();
  swift_retain();
  swift_retain();
  sub_22109E3F8();
  return a1;
}

uint64_t sub_2210EC5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a4;
  sub_2212F55F8();
  v4[9] = sub_2212F55EC();
  v4[10] = sub_2212F55D4();
  v4[11] = v5;
  return swift_task_switch();
}

uint64_t sub_2210EC630()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  OUTLINED_FUNCTION_21_14();
  sub_221023FE4(&qword_25565C120, (void (*)(uint64_t))type metadata accessor for OfferCodeRedeemCoordinator);
  *(_QWORD *)(v0 + 96) = sub_2212F2E38();
  v2 = *(_BYTE *)(v1 + 32);
  *(_OWORD *)(v0 + 40) = *(_OWORD *)(v1 + 16);
  *(_BYTE *)(v0 + 56) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
  sub_2212F4884();
  v3 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 112) = v3;
  *(_BYTE *)(v0 + 33) = *(_BYTE *)(v0 + 32);
  return swift_task_switch();
}

uint64_t sub_2210EC708()
{
  uint64_t v0;

  sub_22109E2B8(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 33));
  swift_release();
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2210EC770()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_12_24();
  OUTLINED_FUNCTION_20_14();
  swift_release();
  OUTLINED_FUNCTION_18_19();

  return swift_deallocObject();
}

uint64_t sub_2210EC7AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 112);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = OUTLINED_FUNCTION_12_17(v3);
  return sub_2210EB6D4(v4, v5, v6, v7, v2);
}

uint64_t sub_2210EC814()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_5();
  swift_release();

  OUTLINED_FUNCTION_20_14();
  return swift_deallocObject();
}

uint64_t sub_2210EC848()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v0[5];
  v4 = v0[6];
  v3 = v0[7];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  v6 = OUTLINED_FUNCTION_12_17(v5);
  return sub_2210EBA24(v6, v7, v8, v9, v2, v4, v3);
}

uint64_t sub_2210EC8C0()
{
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_12_24();
  OUTLINED_FUNCTION_20_14();
  swift_release();
  OUTLINED_FUNCTION_18_19();
  return swift_deallocObject();
}

uint64_t sub_2210EC8F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_22109EF24;
  return sub_2210EC5C4(a1, v4, v5, v1 + 32);
}

unint64_t sub_2210EC964()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_25565C150;
  if (!qword_25565C150)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C108);
    sub_221024548(&qword_25565C158, &qword_25565C100);
    v3 = v2;
    sub_221024548(&qword_25565ABE0, qword_255659978);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25565C150);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_11_23()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_12_24()
{
  uint64_t v0;

  sub_221046ED4(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_13_22()
{
  return sub_2212F55D4();
}

uint64_t OUTLINED_FUNCTION_18_19()
{
  return sub_22109D3A4();
}

uint64_t OUTLINED_FUNCTION_20_14()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_21_14()
{
  return type metadata accessor for OfferCodeRedeemCoordinator();
}

uint64_t OUTLINED_FUNCTION_22_10(uint64_t a1)
{
  uint64_t v1;

  return sub_22103F99C(a1, v1);
}

void sub_2210ECA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  v4 = OUTLINED_FUNCTION_11_24();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_255655CC0 != -1)
    swift_once();
  type metadata accessor for CanMakePaymentsCache(0);
  sub_221023FE4(&qword_255656AD8, (void (*)(uint64_t))type metadata accessor for CanMakePaymentsCache);
  swift_retain();
  *v6 = sub_2212F31A4();
  v6[1] = v7;
  v8 = (uint64_t *)((char *)v6 + *(int *)(v4 + 20));
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656AE0);
  swift_storeEnumTagMultiPayload();
  MEMORY[0x227669B20](v6, a1, v4, a2);
  sub_221011A28((uint64_t)v6, type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier);
}

uint64_t sub_2210ECBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2212F5640();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    sub_221014F5C(a1, &qword_255656B20);
  }
  else
  {
    sub_2212F5634();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2212F55D4();
    swift_unknownObjectRelease();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_2210ECCFC()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_2212F2CB8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2210ECD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t IsDisabledModifier;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  BOOL v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v28[0] = a1;
  v34 = a2;
  IsDisabledModifier = type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(0);
  v5 = *(_QWORD *)(IsDisabledModifier - 8);
  v28[1] = IsDisabledModifier;
  v29 = v5;
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](IsDisabledModifier);
  v7 = sub_2212F2D54();
  v8 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v33 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C338);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C340);
  v30 = *(_QWORD *)(v14 - 8);
  v31 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2210ECCFC();
  v19 = (v17 & 1) == 0 && v17 != 2;
  KeyPath = swift_getKeyPath();
  v21 = swift_allocObject();
  *(_BYTE *)(v21 + 16) = v19;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C348);
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v13, v28[0], v22);
  v23 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v23 = KeyPath;
  v23[1] = (uint64_t)sub_2210255C4;
  v23[2] = v21;
  sub_221045ECC();
  sub_2210EE5E0(v3, (uint64_t)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v25 = swift_allocObject();
  sub_2210EE6C0((uint64_t)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24);
  sub_2210EE74C();
  sub_221023FE4(&qword_25565C360, (void (*)(uint64_t))MEMORY[0x24BDEB1F0]);
  v26 = v32;
  sub_2212F4500();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v26);
  sub_221014F5C((uint64_t)v13, &qword_25565C338);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(v34, v16, v31);
}

uint64_t sub_2210ED00C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t result;
  uint64_t v9;

  v3 = sub_2212F2D54();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  LODWORD(a2) = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  v7 = *MEMORY[0x24BDEB1E0];
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((_DWORD)a2 == v7)
    return sub_2210ED0CC();
  return result;
}

uint64_t sub_2210ED0CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_task;
  if (!*(_QWORD *)(v0
                  + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_task))
  {
    sub_2212F5604();
    v7 = sub_2212F5640();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
    sub_2212F55F8();
    swift_retain();
    v8 = sub_2212F55EC();
    v9 = (_QWORD *)swift_allocObject();
    v10 = MEMORY[0x24BEE6930];
    v9[2] = v8;
    v9[3] = v10;
    v9[4] = &unk_25565C370;
    v9[5] = v1;
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v8;
    v11[3] = v10;
    v11[4] = &unk_25565C378;
    v11[5] = v9;
    swift_unknownObjectRetain();
    *(_QWORD *)(v1 + v6) = sub_2210ECBB8((uint64_t)v5, (uint64_t)&unk_25565C380, (uint64_t)v11);
    return swift_release();
  }
  return result;
}

uint64_t sub_2210ED214()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_2212F2CC4();
}

void sub_2210ED280()
{
  type metadata accessor for CanMakePaymentsCache(0);
  swift_allocObject();
  qword_25565C160 = sub_2210ED2B8();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2210ED2B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE v17[16];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C248);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v1
     + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache__canMakePayments;
  v17[15] = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658580);
  sub_2212F2CAC();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v9, v8, v5);
  v10 = OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_task;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_task) = 0;
  sub_2212F2C28();
  v11 = sub_2212F5640();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v11);
  sub_2212F55F8();
  swift_retain();
  v12 = sub_2212F55EC();
  v13 = (_QWORD *)swift_allocObject();
  v14 = MEMORY[0x24BEE6930];
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = &unk_25565C258;
  v13[5] = v1;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v12;
  v15[3] = v14;
  v15[4] = &unk_25565C268;
  v15[5] = v13;
  swift_unknownObjectRetain();
  *(_QWORD *)(v1 + v10) = sub_2210ECBB8((uint64_t)v4, (uint64_t)&unk_25565C278, (uint64_t)v15);
  swift_release();
  return v1;
}

uint64_t sub_2210ED4BC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_221085744;
  return sub_2210ED504();
}

uint64_t sub_2210ED504()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[11] = v0;
  sub_2212F55F8();
  v1[12] = sub_2212F55EC();
  v1[13] = sub_2212F55D4();
  v1[14] = v2;
  return swift_task_switch();
}

uint64_t sub_2210ED570()
{
  _QWORD *v0;
  os_log_type_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  v0[15] = OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_log;
  v1 = sub_2212F57D8();
  v2 = sub_2212F2C1C();
  v3 = v1;
  if (os_log_type_enabled(v2, v1))
  {
    v4 = OUTLINED_FUNCTION_6_4();
    v5 = OUTLINED_FUNCTION_6_4();
    v9 = v5;
    *(_DWORD *)v4 = 136446466;
    v0[9] = OUTLINED_FUNCTION_10_7(v5, v6, &v9);
    sub_2212F5898();
    *(_WORD *)(v4 + 12) = 2082;
    v0[10] = sub_221115C44(0xD000000000000023, 0x80000002212F8B70, &v9);
    sub_2212F5898();
    OUTLINED_FUNCTION_21_4(&dword_221005000, v2, v3, "%{public}s%{public}s", (uint8_t *)v4);
    OUTLINED_FUNCTION_20_5();
    OUTLINED_FUNCTION_2_4();
  }

  v7 = (_QWORD *)swift_task_alloc();
  v0[16] = v7;
  *v7 = v0;
  v7[1] = sub_2210ED6EC;
  return sub_2212F4B30();
}

uint64_t sub_2210ED6EC(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 144) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2210ED758()
{
  uint64_t v0;
  char v1;
  int v2;
  os_log_type_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  swift_release();
  v1 = sub_2210ECCFC();
  v2 = *(unsigned __int8 *)(v0 + 144);
  if (v1 == 2 || ((((v1 & 1) == 0) ^ v2) & 1) == 0)
  {
    sub_2210ED214();
    if ((v2 & 1) == 0)
    {
      v3 = sub_2212F57FC();
      v4 = sub_2212F2C1C();
      v5 = v3;
      if (os_log_type_enabled(v4, v3))
      {
        v6 = OUTLINED_FUNCTION_6_4();
        v7 = OUTLINED_FUNCTION_6_4();
        v10 = v7;
        *(_DWORD *)v6 = 136446466;
        *(_QWORD *)(v0 + 56) = OUTLINED_FUNCTION_10_7(v7, v8, &v10);
        sub_2212F5898();
        *(_WORD *)(v6 + 12) = 2082;
        *(_QWORD *)(v0 + 64) = sub_221115C44(0xD00000000000002ELL, 0x80000002212F8BD0, &v10);
        sub_2212F5898();
        OUTLINED_FUNCTION_21_4(&dword_221005000, v4, v5, "%{public}s%{public}s", (uint8_t *)v6);
        OUTLINED_FUNCTION_20_5();
        OUTLINED_FUNCTION_2_4();
      }

    }
  }
  OUTLINED_FUNCTION_16_17(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2210ED8F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11[2];

  v1 = *(_QWORD *)(v0 + 136);
  swift_release();
  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  sub_2212F5964();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  sub_2212F540C();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255661380);
  sub_2212F5A90();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  LOBYTE(v1) = sub_2212F57E4();
  swift_bridgeObjectRetain_n();
  v4 = sub_2212F2C1C();
  v5 = v1;
  if (os_log_type_enabled(v4, (os_log_type_t)v1))
  {
    v6 = OUTLINED_FUNCTION_6_4();
    v7 = OUTLINED_FUNCTION_6_4();
    v11[0] = v7;
    *(_DWORD *)v6 = 136446466;
    *(_QWORD *)(v0 + 40) = OUTLINED_FUNCTION_10_7(v7, v8, v11);
    sub_2212F5898();
    *(_WORD *)(v6 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 48) = sub_221115C44(v2, v3, v11);
    sub_2212F5898();
    OUTLINED_FUNCTION_15_11();
    OUTLINED_FUNCTION_21_4(&dword_221005000, v4, v5, "%{public}s%{public}s", (uint8_t *)v6);
    OUTLINED_FUNCTION_20_5();
    OUTLINED_FUNCTION_2_4();
  }
  v9 = *(void **)(v0 + 136);
  OUTLINED_FUNCTION_15_11();

  OUTLINED_FUNCTION_16_17(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2210EDB10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_221085744;
  return OUTLINED_FUNCTION_42_2(v6);
}

uint64_t sub_2210EDB5C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_221085744;
  return OUTLINED_FUNCTION_42_2(v7);
}

uint64_t sub_2210EDBA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0
     + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache__canMakePayments;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C248);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_221011A28(v0 + OBJC_IVAR____TtC17_StoreKit_SwiftUIP33_BF465AA955C6DF5DC446870E7AC4033020CanMakePaymentsCache_log, (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
  return v0;
}

uint64_t sub_2210EDC18()
{
  sub_2210EDBA8();
  return swift_deallocClassInstance();
}

uint64_t sub_2210EDC38()
{
  return type metadata accessor for CanMakePaymentsCache(0);
}

uint64_t type metadata accessor for CanMakePaymentsCache(uint64_t a1)
{
  return sub_22100CA0C(a1, (uint64_t *)&unk_25565C1A8);
}

void sub_2210EDC54()
{
  unint64_t v0;
  unint64_t v1;

  sub_2210EDCE4();
  if (v0 <= 0x3F)
  {
    sub_2212F2C34();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_2210EDCE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25565C1B8[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658580);
    v0 = sub_2212F2CD0();
    if (!v1)
      atomic_store(v0, qword_25565C1B8);
  }
}

uint64_t sub_2210EDD3C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_221085744;
  return sub_2210ED4BC();
}

uint64_t sub_2210EDD88()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_7_21(v1, (uint64_t)sub_221085744);
  return OUTLINED_FUNCTION_0_7(v2, v3, v4, v5, v6);
}

uint64_t sub_2210EDDD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_19_6(v0);
  v2 = OUTLINED_FUNCTION_1_19(v1);
  return OUTLINED_FUNCTION_11_8(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_2210EDE28(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_19_6(v4);
  *v5 = v2;
  v5[1] = sub_2210EDE88;
  return v7(a1);
}

uint64_t sub_2210EDE88()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_13();
  return OUTLINED_FUNCTION_42_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2210EDEB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2210EDED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 16);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_19_6(v5);
  *v6 = v2;
  v6[1] = sub_221084A38;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25565C280 + dword_25565C280))(a1, v4);
}

void sub_2210EDF40(_BYTE *a1@<X8>)
{
  *a1 = sub_2210ECCFC();
  OUTLINED_FUNCTION_6_0();
}

void sub_2210EDF64()
{
  sub_2210ED214();
  OUTLINED_FUNCTION_6_0();
}

uint64_t type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(uint64_t a1)
{
  return sub_22100CA0C(a1, (uint64_t *)&unk_25565C2F8);
}

uint64_t *sub_2210EDFA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255656AE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2212F2D54();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2210EE07C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656AE0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_2212F2D54();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_2210EE0F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656AE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2212F2D54();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_2210EE19C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_221014F5C((uint64_t)a1 + v6, &qword_255656AE0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255656AE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_2212F2D54();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_2210EE278(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656AE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_2212F2D54();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_2210EE320(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_221014F5C((uint64_t)a1 + v7, &qword_255656AE0);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656AE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_2212F2D54();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2210EE3F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210EE3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_25565C298);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_2210EE474()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210EE480(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_25565C298);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_2210EE4F0()
{
  unint64_t v0;

  sub_2210EE564();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2210EE564()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25565C308[0])
  {
    sub_2212F2D54();
    v0 = sub_2212F2E08();
    if (!v1)
      atomic_store(v0, qword_25565C308);
  }
}

uint64_t sub_2210EE5B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2210EE5D0()
{
  return swift_deallocObject();
}

uint64_t sub_2210EE5E0(uint64_t a1, uint64_t a2)
{
  uint64_t IsDisabledModifier;

  IsDisabledModifier = type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(IsDisabledModifier - 8) + 16))(a2, a1, IsDisabledModifier);
  return a2;
}

uint64_t sub_2210EE624()
{
  uint64_t v0;

  OUTLINED_FUNCTION_11_24();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656AE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v0 = sub_2212F2D54();
    OUTLINED_FUNCTION_16_0(v0);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2210EE6C0(uint64_t a1, uint64_t a2)
{
  uint64_t IsDisabledModifier;

  IsDisabledModifier = type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(IsDisabledModifier - 8) + 32))(a2, a1, IsDisabledModifier);
  return a2;
}

uint64_t sub_2210EE704(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_11_24();
  return sub_2210ED00C(a1, a2);
}

unint64_t sub_2210EE74C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_25565C350;
  if (!qword_25565C350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C338);
    sub_221024548(&qword_25565C358, &qword_25565C348);
    v3 = v2;
    sub_221024548(&qword_255656B08, &qword_255656B10);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25565C350);
  }
  return result;
}

uint64_t sub_2210EE7E8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22108434C;
  return sub_2210ED4BC();
}

uint64_t sub_2210EE838()
{
  void (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C338);
  sub_2212F2D54();
  v0 = (void (*)(uint64_t))MEMORY[0x24BDEB1F0];
  sub_2210EE74C();
  sub_221023FE4(&qword_25565C360, v0);
  return swift_getOpaqueTypeConformance2();
}

uint64_t OUTLINED_FUNCTION_7_21@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_11_24()
{
  return type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(0);
}

uint64_t OUTLINED_FUNCTION_16_17@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + v1) = 0;
  return swift_release();
}

ValueMetadata *type metadata accessor for SubscriptionStoreContentUnavailableView()
{
  return &type metadata for SubscriptionStoreContentUnavailableView;
}

uint64_t sub_2210EE908()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2210EE918(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  *a1 = sub_2210EE934;
  a1[1] = 0;
  a1[2] = sub_2210EE950;
  a1[3] = 0;
}

uint64_t sub_2210EE934@<X0>(uint64_t a1@<X8>)
{
  return sub_2210EE96C(a1);
}

uint64_t sub_2210EE950@<X0>(uint64_t a1@<X8>)
{
  return sub_2210EE96C(a1);
}

uint64_t sub_2210EE96C@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_2212F384C();
  if (qword_255655B20 != -1)
    swift_once();
  v2 = (id)qword_25568CA90;
  result = sub_2212F40D4();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t destroy for ClientOverrideValues()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClientOverrideValues(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClientOverrideValues(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for ClientOverrideValues(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionOfferViewNoCodeControlStyle(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionOfferViewNoCodeControlStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionOfferViewNoCodeControlStyle()
{
  return &type metadata for SubscriptionOfferViewNoCodeControlStyle;
}

uint64_t sub_2210EEC14()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2210EEC28()
{
  unint64_t result;

  result = qword_25565C388;
  if (!qword_25565C388)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for AutomaticSubscriptionStoreControlPlacement, &type metadata for AutomaticSubscriptionStoreControlPlacement);
    atomic_store(result, (unint64_t *)&qword_25565C388);
  }
  return result;
}

uint64_t sub_2210EEC64()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  SubscriptionStoreControlStyleConfiguration.options.getter();
  v1 = swift_allocObject();
  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(v0 + 32);
  *(_BYTE *)(v1 + 64) = *(_BYTE *)(v0 + 48);
  sub_2210EEE78(v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565C3C0);
  type metadata accessor for SubscriptionOfferViewNoCodeControl();
  sub_221024548(&qword_25565C3C8, &qword_25565C3C0);
  sub_221023FE4(&qword_25565C3D0, (void (*)(uint64_t))type metadata accessor for SubscriptionOfferViewNoCodeControl);
  sub_221023FE4(qword_25565C3D8, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  return sub_2212F48F0();
}

uint64_t sub_2210EED90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _BYTE v7[56];

  sub_221014EB4(a1, a3, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  sub_221015090(a2, (uint64_t)v7, &qword_255659800);
  v5 = type metadata accessor for SubscriptionOfferViewNoCodeControl();
  sub_221015090((uint64_t)v7, a3 + *(int *)(v5 + 20), &qword_255659800);
  return sub_2210EEE78(a2);
}

uint64_t sub_2210EEE0C()
{
  return sub_2210EEC64();
}

uint64_t sub_2210EEE4C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2210EEE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2210EED90(a1, v2 + 16, a2);
}

uint64_t sub_2210EEE78(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for SubscriptionOfferViewNoCodeControl()
{
  uint64_t result;

  result = qword_25565C438;
  if (!qword_25565C438)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_2210EEED8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  __int128 v35;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2212F51B4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for Subscription();
    v9 = *(int *)(v8 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = *(int *)(v8 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v13[8] = v14[8];
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v15 = type metadata accessor for SubscriptionStoreControlOption(0);
    v16 = *(int *)(v15 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_2212F50D0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
    }
    *(uint64_t *)((char *)a1 + *(int *)(v15 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v15 + 24));
    v22 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
    v23 = *(int *)(v22 + 20);
    v24 = (uint64_t *)((char *)a1 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    if (*v25)
    {
      v26 = v25[1];
      *v24 = *v25;
      v24[1] = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
    }
    v27 = *(int *)(v22 + 24);
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = *(int *)(a3 + 20);
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    v35 = *((_OWORD *)v33 + 2);
    *((_OWORD *)v32 + 1) = *((_OWORD *)v33 + 1);
    *((_OWORD *)v32 + 2) = v35;
    v32[48] = v33[48];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2210EF0B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = a1 + *(int *)(type metadata accessor for SubscriptionStoreControlOption(0) + 20);
  v4 = sub_2212F50D0();
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0) + 20)))
    swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2210EF17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for Subscription();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(int *)(v7 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  v15 = *(int *)(v14 + 20);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_2212F50D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  *(_QWORD *)(a1 + *(int *)(v14 + 24)) = *(_QWORD *)(a2 + *(int *)(v14 + 24));
  v20 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  v21 = *(int *)(v20 + 20);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  if (*v23)
  {
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  v25 = *(int *)(v20 + 24);
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = *(int *)(a3 + 20);
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = *(_QWORD *)(v31 + 8);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_QWORD *)(v30 + 8) = v32;
  v33 = *(_OWORD *)(v31 + 32);
  *(_OWORD *)(v30 + 16) = *(_OWORD *)(v31 + 16);
  *(_OWORD *)(v30 + 32) = v33;
  *(_BYTE *)(v30 + 48) = *(_BYTE *)(v31 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2210EF32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  int EnumTagSinglePayload;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for Subscription();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = *(int *)(v7 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = v15;
  v16 = type metadata accessor for SubscriptionStoreControlOption(0);
  v17 = *(int *)(v16 + 20);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_2212F50D0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v18, 1, v20);
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20);
  if (EnumTagSinglePayload)
  {
    if (!v22)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v23 = *(_QWORD *)(v20 - 8);
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v18, v20);
LABEL_6:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v23 + 24))(v18, v19, v20);
LABEL_7:
  *(_QWORD *)(a1 + *(int *)(v16 + 24)) = *(_QWORD *)(a2 + *(int *)(v16 + 24));
  v25 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  v26 = *(int *)(v25 + 20);
  v27 = (_QWORD *)(a1 + v26);
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a1 + v26);
  v30 = *(_QWORD *)(a2 + v26);
  if (!v29)
  {
    if (v30)
    {
      v32 = *(_QWORD *)(v28 + 8);
      *v27 = v30;
      v27[1] = v32;
      swift_retain();
      goto LABEL_14;
    }
LABEL_13:
    *(_OWORD *)v27 = *(_OWORD *)v28;
    goto LABEL_14;
  }
  if (!v30)
  {
    swift_release();
    goto LABEL_13;
  }
  v31 = *(_QWORD *)(v28 + 8);
  *v27 = v30;
  v27[1] = v31;
  swift_retain();
  swift_release();
LABEL_14:
  v33 = *(int *)(v25 + 24);
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  swift_retain();
  swift_release();
  v37 = *(int *)(a3 + 20);
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_QWORD *)v38 = *(_QWORD *)(a2 + v37);
  *(_QWORD *)(v38 + 8) = *(_QWORD *)(a2 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v38 + 16) = *(_DWORD *)(v39 + 16);
  *(_DWORD *)(v38 + 20) = *(_DWORD *)(v39 + 20);
  *(_DWORD *)(v38 + 24) = *(_DWORD *)(v39 + 24);
  *(_DWORD *)(v38 + 28) = *(_DWORD *)(v39 + 28);
  *(_DWORD *)(v38 + 32) = *(_DWORD *)(v39 + 32);
  *(_DWORD *)(v38 + 36) = *(_DWORD *)(v39 + 36);
  *(_DWORD *)(v38 + 40) = *(_DWORD *)(v39 + 40);
  *(_DWORD *)(v38 + 44) = *(_DWORD *)(v39 + 44);
  *(_BYTE *)(v38 + 48) = *(_BYTE *)(v39 + 48);
  return a1;
}

uint64_t sub_2210EF5A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for Subscription();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(int *)(v7 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  v15 = *(int *)(v14 + 20);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_2212F50D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  *(_QWORD *)(a1 + *(int *)(v14 + 24)) = *(_QWORD *)(a2 + *(int *)(v14 + 24));
  v20 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  v21 = *(int *)(v20 + 20);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v24 = *v23;
  if (*v23)
  {
    v25 = v23[1];
    *v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  *(_OWORD *)(a1 + *(int *)(v20 + 24)) = *(_OWORD *)(a2 + *(int *)(v20 + 24));
  v26 = *(int *)(a3 + 20);
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
  *(_BYTE *)(v27 + 48) = *(_BYTE *)(v28 + 48);
  return a1;
}

uint64_t sub_2210EF73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  int EnumTagSinglePayload;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for Subscription();
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(int *)(v7 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = type metadata accessor for SubscriptionStoreControlOption(0);
  v15 = *(int *)(v14 + 20);
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_2212F50D0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (EnumTagSinglePayload)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v21 = *(_QWORD *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v16, v18);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v21 + 40))(v16, v17, v18);
LABEL_7:
  *(_QWORD *)(a1 + *(int *)(v14 + 24)) = *(_QWORD *)(a2 + *(int *)(v14 + 24));
  v23 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  v24 = *(int *)(v23 + 20);
  v25 = (_QWORD *)(a1 + v24);
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a1 + v24);
  v28 = *(_QWORD *)(a2 + v24);
  if (!v27)
  {
    if (v28)
    {
      v30 = *(_QWORD *)(v26 + 8);
      *v25 = v28;
      v25[1] = v30;
      goto LABEL_14;
    }
LABEL_13:
    *(_OWORD *)v25 = *(_OWORD *)v26;
    goto LABEL_14;
  }
  if (!v28)
  {
    swift_release();
    goto LABEL_13;
  }
  v29 = *(_QWORD *)(v26 + 8);
  *v25 = v28;
  v25[1] = v29;
  swift_release();
LABEL_14:
  *(_OWORD *)(a1 + *(int *)(v23 + 24)) = *(_OWORD *)(a2 + *(int *)(v23 + 24));
  swift_release();
  v31 = *(int *)(a3 + 20);
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(v33 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_QWORD *)(v32 + 8) = v34;
  swift_bridgeObjectRelease();
  v35 = *(_OWORD *)(v33 + 32);
  *(_OWORD *)(v32 + 16) = *(_OWORD *)(v33 + 16);
  *(_OWORD *)(v32 + 32) = v35;
  *(_BYTE *)(v32 + 48) = *(_BYTE *)(v33 + 48);
  return a1;
}

uint64_t sub_2210EF958()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210EF964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_2210EF9EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2210EF9F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_2210EFA70()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2210EFAE4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_25565C470;
  if (!qword_25565C470)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C478);
    sub_221023FE4(&qword_25565C3D0, (void (*)(uint64_t))type metadata accessor for SubscriptionOfferViewNoCodeControl);
    v3 = v2;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDF4A08], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_25565C470);
  }
  return result;
}

uint64_t sub_2210EFB60()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2210EFB70(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (qword_255655BB0 != -1)
    swift_once();
  v3 = qword_25568CE50;
  *(_QWORD *)a1 = sub_2212F38E8();
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = 0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C480);
  sub_2210EFBEC(v1, a1 + *(int *)(v4 + 44));
}

void sub_2210EFBEC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  int *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[4];
  int v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;

  v65 = a2;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C488);
  v3 = MEMORY[0x24BDAC7A8](v63);
  v62 = &v52[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v61 = &v52[-v5];
  v60 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton(0);
  v6 = MEMORY[0x24BDAC7A8](v60);
  v8 = &v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v64 = &v52[-v9];
  v10 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v52[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (int *)type metadata accessor for SubscriptionStoreButton();
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v52[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C490);
  MEMORY[0x24BDAC7A8](v57);
  v17 = &v52[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C498);
  v18 = MEMORY[0x24BDAC7A8](v58);
  v20 = &v52[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v59 = &v52[-v21];
  sub_221014EB4(a1, (uint64_t)v12, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  v22 = a1 + *(int *)(type metadata accessor for SubscriptionOfferViewNoCodeControl() + 20);
  v23 = *(_QWORD *)(v22 + 8);
  v56 = *(_QWORD *)v22;
  v55 = *(_OWORD *)(v22 + 16);
  v24 = *(_QWORD *)(v22 + 32);
  v54 = *(_QWORD *)(v22 + 40);
  v53 = *(unsigned __int8 *)(v22 + 48);
  v25 = &v15[v13[5]];
  *(_OWORD *)v25 = 0u;
  *((_OWORD *)v25 + 1) = 0u;
  *((_OWORD *)v25 + 2) = 0u;
  v25[48] = 0;
  v26 = &v15[v13[6]];
  *(_QWORD *)v26 = swift_getKeyPath();
  *((_QWORD *)v26 + 1) = 0;
  *((_QWORD *)v26 + 2) = 0;
  *((_QWORD *)v26 + 3) = 0;
  *((_WORD *)v26 + 16) = 0;
  v27 = &v15[v13[7]];
  *(_QWORD *)v27 = swift_getKeyPath();
  *(_OWORD *)(v27 + 8) = 0u;
  *(_OWORD *)(v27 + 24) = 0u;
  *(_OWORD *)(v27 + 40) = 0u;
  *(_OWORD *)(v27 + 56) = 0u;
  *((_WORD *)v27 + 36) = 0;
  v28 = &v15[v13[8]];
  *(_QWORD *)v28 = swift_getKeyPath();
  v28[8] = 0;
  v29 = &v15[v13[9]];
  *(_QWORD *)v29 = swift_getKeyPath();
  v29[8] = 0;
  sub_221015318((uint64_t)v12, (uint64_t)v15, type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)v25 = v56;
  *((_QWORD *)v25 + 1) = v23;
  *((_OWORD *)v25 + 1) = v55;
  v30 = v54;
  *((_QWORD *)v25 + 4) = v24;
  *((_QWORD *)v25 + 5) = v30;
  v25[48] = v53;
  v31 = sub_2212F384C();
  v33 = v32;
  v35 = v34;
  v37 = v36 & 1;
  sub_221014EB4((uint64_t)v15, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionStoreButton);
  v38 = &v17[*(int *)(v57 + 36)];
  *v38 = 1;
  *((_QWORD *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v37;
  *((_QWORD *)v38 + 4) = v35;
  *(_OWORD *)(v38 + 40) = 0u;
  *(_OWORD *)(v38 + 56) = 0u;
  v38[72] = 0;
  sub_221011A28((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionStoreButton);
  if (qword_255655BA8 != -1)
    swift_once();
  v57 = xmmword_25568CE30;
  v39 = qword_25568CE40;
  v40 = unk_25568CE48;
  v41 = sub_2212F3ED0();
  sub_221014FC0((uint64_t)v17, (uint64_t)v20, &qword_25565C490);
  v42 = &v20[*(int *)(v58 + 36)];
  *v42 = v41;
  *(_OWORD *)(v42 + 8) = v57;
  *((_QWORD *)v42 + 3) = v39;
  *((_QWORD *)v42 + 4) = v40;
  v42[40] = 0;
  sub_221014F5C((uint64_t)v17, &qword_25565C490);
  v43 = v59;
  sub_221015090((uint64_t)v20, (uint64_t)v59, &qword_25565C498);
  v66 = 0;
  sub_2212F4758();
  v44 = v68;
  *v8 = v67;
  *((_QWORD *)v8 + 1) = v44;
  v45 = v60;
  v46 = type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton.LicenseAgreementState(0);
  v47 = v61;
  __swift_storeEnumTagSinglePayload((uint64_t)v61, 1, 1, v46);
  sub_221014FC0((uint64_t)v47, (uint64_t)v62, &qword_25565C488);
  sub_2212F4758();
  sub_221014F5C((uint64_t)v47, &qword_25565C488);
  v48 = *(int *)(v45 + 24);
  *(_QWORD *)&v8[v48] = sub_2212F5358();
  v49 = v64;
  sub_221015318((uint64_t)v8, (uint64_t)v64, type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  sub_221014FC0((uint64_t)v43, (uint64_t)v20, &qword_25565C498);
  sub_221014EB4((uint64_t)v49, (uint64_t)v8, type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  v50 = v65;
  sub_221014FC0((uint64_t)v20, v65, &qword_25565C498);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C4A0);
  sub_221014EB4((uint64_t)v8, v50 + *(int *)(v51 + 48), type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  sub_221011A28((uint64_t)v49, type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  sub_221014F5C((uint64_t)v43, &qword_25565C498);
  sub_221011A28((uint64_t)v8, type metadata accessor for SubscriptionOfferViewNoCodeLicenseAgreementButton);
  sub_221014F5C((uint64_t)v20, &qword_25565C498);
}

void sub_2210F01B4()
{
  sub_221024548(&qword_25565C4A8, qword_25565C4B0);
}

uint64_t sub_2210F01E0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(319);
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2210F0298(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  size_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void (*v39)(unint64_t, unint64_t, uint64_t);
  _WORD *v40;
  _WORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  unint64_t v48;
  void (*v49)(unint64_t, unint64_t, uint64_t);
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(unint64_t, unint64_t, uint64_t);
  _WORD *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  unsigned int v61;
  unint64_t v62;
  unint64_t v63;
  void (*v64)(unint64_t, unint64_t, uint64_t);
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  size_t v68;
  size_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  void (*v81)(unint64_t, unint64_t, uint64_t);
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t result;
  char v86;
  unint64_t v87;
  unint64_t v88;
  void (*v89)(unint64_t, unint64_t, uint64_t);
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  void (*v93)(unint64_t, unint64_t, uint64_t);
  uint64_t v94;
  _WORD *v95;
  void (*v96)(unint64_t, unint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;

  v119 = sub_2212F5124();
  v6 = *(_QWORD *)(v119 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = sub_2212F5058();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11 | v7 | 7;
  v117 = v7 + 16;
  v13 = *(_QWORD *)(v6 + 64);
  v14 = v12 + v13;
  v15 = (v12 + v13 + ((v8 + 16) & ~v8)) & ~v12;
  v16 = *(_QWORD *)(v10 + 64) + v7;
  v17 = v13 + 7;
  v18 = (v13 + 7 + ((v16 + ((v11 + 16) & ~v11)) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8;
  v19 = v18 + 8;
  v20 = v18 + 9;
  if (v20 <= v19)
    v20 = v19;
  if (v20 <= 2)
    v21 = 2;
  else
    v21 = v20;
  v22 = v21 + v15;
  if (v22 + 1 > (v17 & 0xFFFFFFFFFFFFFFF8) + 16)
    v23 = v22 + 1;
  else
    v23 = (v17 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v23 <= 0x10)
    v24 = 16;
  else
    v24 = v23;
  v25 = *(_QWORD *)(a3 + 16);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_DWORD *)(v26 + 80);
  if ((v12 | v27) == 7 && ((*(_DWORD *)(v10 + 80) | v7 | *(_DWORD *)(v26 + 80)) & 0x100000) == 0)
  {
    v28 = v24 + 1;
    if (((((v27 + 19 + ((((v24 + 1 + v12) & ~v12) + v24 + 1 + (((v11 | v8) + 32) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v27)
         + *(_QWORD *)(v26 + 64)) & 0xFFFFFFFFFFFFFFF8)
       + 17 <= 0x18)
    {
      v104 = v14;
      v105 = v11 + 16;
      v99 = v19;
      v101 = *(_QWORD *)(v9 - 8);
      v102 = v16;
      v103 = v9;
      v115 = v17;
      v107 = v21;
      v108 = *(_QWORD *)(v26 + 64);
      v110 = ((v24 + 1 + v12) & ~v12) + v24 + 1;
      v111 = v27 + 19;
      v112 = *(_QWORD *)(v25 - 8);
      v109 = *(_QWORD *)(a3 + 16);
      v29 = ~v12;
      v30 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v30;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      *(_QWORD *)(a1 + 24) = a2[3];
      v116 = a1;
      v113 = a1 + v12 + 32;
      v120 = v113 & ~v12;
      v114 = (uint64_t)a2 + v12 + 32;
      v118 = (_QWORD *)(v114 & ~v12);
      v31 = *((unsigned __int8 *)v118 + v24);
      v32 = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31 >= 3)
      {
        if (v32 <= 3)
          v33 = v32;
        else
          v33 = 4;
        __asm { BR              X11 }
      }
      v106 = ~v8;
      v100 = ~v11;
      if (v31 == 2)
      {
        v36 = v114 & ~v12;
        (*(void (**)(uint64_t, _QWORD *, uint64_t))(v6 + 16))(v120, v118, v119);
        v44 = v32;
        v45 = v115;
        *(_OWORD *)((v115 + v120) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v118 + v115) & 0xFFFFFFFFFFFFF8);
        *(_BYTE *)(v120 + v32) = 2;
        v35 = v116;
      }
      else if (v31 == 1)
      {
        v97 = v32;
        v36 = v114 & ~v12;
        *(_QWORD *)v120 = *v118;
        *(_QWORD *)((v113 & ~v12) + 8) = *(_QWORD *)(v36 + 8);
        v37 = (v117 + v120) & v106;
        v38 = ((unint64_t)v118 + v117) & v106;
        v39 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
        swift_bridgeObjectRetain();
        v96 = v39;
        v39(v37, v38, v119);
        v40 = (_WORD *)((v104 + v37) & v29);
        v41 = (_WORD *)((v104 + v38) & v29);
        v42 = v107;
        v35 = v116;
        switch(*((_BYTE *)v41 + v107))
        {
          case 0:
            v46 = 0;
            *v40 = *v41;
            goto LABEL_33;
          case 1:
            *(_BYTE *)v40 = *(_BYTE *)v41;
            v46 = 1;
LABEL_33:
            v44 = v97;
            v45 = v115;
            goto LABEL_37;
          case 2:
            *(_QWORD *)v40 = *(_QWORD *)v41;
            *(_QWORD *)(((v104 + v37) & v29) + 8) = *(_QWORD *)(((v104 + v38) & v29) + 8);
            v47 = ((unint64_t)v40 + v105) & v100;
            v48 = ((unint64_t)v41 + v105) & v100;
            v49 = *(void (**)(unint64_t, unint64_t, uint64_t))(v101 + 16);
            v95 = v40;
            swift_bridgeObjectRetain();
            v49(v47, v48, v103);
            v36 = v114 & ~v12;
            v50 = (v102 + v47) & v106;
            v51 = (v102 + v48) & v106;
            v96(v50, v51, v119);
            v40 = v95;
            v45 = v115;
            v42 = v107;
            *(_QWORD *)((v115 + v50) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v115 + v51) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v95 + v99) = *((_BYTE *)v41 + v99);
            v46 = 2;
            goto LABEL_36;
          case 3:
            *(_QWORD *)v40 = *(_QWORD *)v41;
            *(_QWORD *)(((v104 + v37) & v29) + 8) = *(_QWORD *)(((v104 + v38) & v29) + 8);
            v52 = ((unint64_t)v40 + v105) & v100;
            v53 = ((unint64_t)v41 + v105) & v100;
            v54 = *(void (**)(unint64_t, unint64_t, uint64_t))(v101 + 16);
            v55 = v40;
            swift_bridgeObjectRetain();
            v54(v52, v53, v103);
            v36 = v114 & ~v12;
            v56 = (v102 + v52) & v106;
            v57 = (v102 + v53) & v106;
            v96(v56, v57, v119);
            v40 = v55;
            v45 = v115;
            v42 = v107;
            *(_QWORD *)((v115 + v56) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v115 + v57) & 0xFFFFFFFFFFFFF8);
            v46 = 3;
LABEL_36:
            v44 = v97;
LABEL_37:
            *((_BYTE *)v40 + v42) = v46;
            *(_BYTE *)(v120 + v44) = 1;
            break;
          default:
            if (v107 <= 3)
              v43 = v107;
            else
              v43 = 4;
            __asm { BR              X12 }
            return result;
        }
      }
      else
      {
        v36 = v114 & ~v12;
        *(_QWORD *)v120 = *v118;
        *(_QWORD *)((v113 & ~v12) + 8) = *(_QWORD *)(v36 + 8);
        *(_BYTE *)(v120 + v32) = 0;
        swift_bridgeObjectRetain();
        v44 = v32;
        v45 = v115;
        v35 = v116;
      }
      v58 = ~v27;
      v59 = (_QWORD *)(((v113 | v12) + v28) & v29);
      v60 = (_QWORD *)(((v114 | v12) + v28) & v29);
      v61 = *((unsigned __int8 *)v60 + v44);
      if (v61 > 2)
      {
        memcpy((void *)(((v113 | v12) + v28) & v29), (const void *)(((v114 | v12) + v28) & v29), v28);
      }
      else if (v61 == 2)
      {
        v68 = ((v113 | v12) + v28) & v29;
        v69 = ((v114 | v12) + v28) & v29;
        v70 = v44;
        v71 = v45;
        (*(void (**)(size_t, size_t, uint64_t))(v6 + 16))(v68, v69, v119);
        *(_OWORD *)(((unint64_t)v59 + v71) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v60 + v71) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v59 + v70) = 2;
        v35 = v116;
      }
      else
      {
        if (v61 == 1)
        {
          v98 = v44;
          *v59 = *v60;
          *(_QWORD *)((((v113 | v12) + v28) & v29) + 8) = *(_QWORD *)((((v114 | v12) + v28) & v29) + 8);
          v62 = ((unint64_t)v59 + v117) & v106;
          v63 = ((unint64_t)v60 + v117) & v106;
          v64 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
          swift_bridgeObjectRetain();
          v64(v62, v63, v119);
          v65 = (v104 + v62) & v29;
          v66 = (v104 + v63) & v29;
          switch(*(_BYTE *)(v66 + v107))
          {
            case 0:
              v86 = 0;
              *(_WORD *)v65 = *(_WORD *)v66;
              break;
            case 1:
              *(_BYTE *)v65 = *(_BYTE *)v66;
              v86 = 1;
              break;
            case 2:
              *(_QWORD *)v65 = *(_QWORD *)v66;
              *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
              v87 = (v105 + v65) & v100;
              v88 = (v105 + v66) & v100;
              v89 = *(void (**)(unint64_t, unint64_t, uint64_t))(v101 + 16);
              swift_bridgeObjectRetain();
              v89(v87, v88, v103);
              v36 = (uint64_t)v118;
              v90 = (v102 + v87) & v106;
              v64(v90, (v102 + v88) & v106, v119);
              *(_QWORD *)((v115 + v90) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v115 + ((v102 + v88) & v106)) & 0xFFFFFFFFFFFFF8);
              *(_BYTE *)(v65 + v99) = *(_BYTE *)(v66 + v99);
              v86 = 2;
              break;
            case 3:
              *(_QWORD *)v65 = *(_QWORD *)v66;
              *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
              v91 = (v105 + v65) & v100;
              v92 = (v105 + v66) & v100;
              v93 = *(void (**)(unint64_t, unint64_t, uint64_t))(v101 + 16);
              swift_bridgeObjectRetain();
              v93(v91, v92, v103);
              v94 = (v102 + v91) & v106;
              v64(v94, (v102 + v92) & v106, v119);
              *(_QWORD *)((v115 + v94) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v115 + ((v102 + v92) & v106)) & 0xFFFFFFFFFFFFF8);
              v86 = 3;
              break;
            default:
              if (v107 <= 3)
                v67 = v107;
              else
                v67 = 4;
              __asm { BR              X12 }
              return result;
          }
          v75 = v111;
          v74 = v112;
          v72 = v109;
          v76 = v110;
          v73 = v108;
          *(_BYTE *)(v65 + v107) = v86;
          *((_BYTE *)v59 + v98) = 1;
          goto LABEL_50;
        }
        *v59 = *v60;
        *(_QWORD *)((((v113 | v12) + v28) & v29) + 8) = *(_QWORD *)((((v114 | v12) + v28) & v29) + 8);
        *((_BYTE *)v59 + v44) = 0;
        swift_bridgeObjectRetain();
      }
      v73 = v108;
      v72 = v109;
      v75 = v111;
      v74 = v112;
      v76 = v110;
LABEL_50:
      v77 = ((v120 | 7) + v76) & 0xFFFFFFFFFFFFFFF8;
      v78 = ((v36 | 7) + v76) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v77 = *(_QWORD *)v78;
      *(_QWORD *)(v77 + 8) = *(_QWORD *)(v78 + 8);
      *(_BYTE *)(v77 + 16) = *(_BYTE *)(v78 + 16);
      *(_BYTE *)(v77 + 17) = *(_BYTE *)(v78 + 17);
      *(_BYTE *)(v77 + 18) = *(_BYTE *)(v78 + 18);
      v79 = (v75 + v77) & v58;
      v80 = (v75 + v78) & v58;
      v81 = *(void (**)(unint64_t, unint64_t, uint64_t))(v74 + 16);
      swift_bridgeObjectRetain();
      v81(v79, v80, v72);
      v82 = v80 + v73;
      *(_BYTE *)(v79 + v73) = *(_BYTE *)(v80 + v73);
      v83 = (v79 + v73) & 0xFFFFFFFFFFFFFFF8;
      v84 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFFF8) + 8);
      LOBYTE(v79) = *(_BYTE *)((v82 & 0xFFFFFFFFFFFFFFF8) + 16);
      sub_221017C08(v84, v79);
      *(_QWORD *)(v83 + 8) = v84;
      *(_BYTE *)(v83 + 16) = v79;
      return v35;
    }
  }
  v34 = *a2;
  *(_QWORD *)a1 = *a2;
  v35 = v34 + (((v12 | v27) + 16) & ~(v12 | v27));
  swift_retain();
  return v35;
}

uint64_t sub_2210F0BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v50 = sub_2212F5124();
  v3 = *(_QWORD *)(v50 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = sub_2212F5058();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v4 | v7 | 7;
  v9 = a1 + v8 + 32;
  v10 = v9 & ~v8;
  v11 = v4 + 16;
  v12 = *(_QWORD *)(v3 + 64);
  v46 = v5;
  v47 = v8 + v12;
  v13 = (v8 + v12 + ((v4 + 16) & ~v4)) & ~v8;
  v43 = v7 + 16;
  v45 = v6;
  v44 = *(_QWORD *)(v6 + 64) + v4;
  v14 = v12 + 7;
  v15 = (v14 + ((v44 + ((v7 + 16) & ~v7)) & ~v4)) & 0xFFFFFFFFFFFFFFF8;
  v16 = v15 + 8;
  v17 = v15 + 9;
  if (v17 <= v16)
    v17 = v16;
  if (v17 <= 2)
    v18 = 2;
  else
    v18 = v17;
  v19 = v18 + v13;
  v20 = (v14 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 + 1 > v20)
    v21 = v19 + 1;
  else
    v21 = v20;
  if (v21 <= 0x10)
    v22 = 16;
  else
    v22 = v21;
  v23 = *(unsigned __int8 *)(v10 + v22);
  if (v23 >= 3)
  {
    if (v22 <= 3)
      v24 = v22;
    else
      v24 = 4;
    __asm { BR              X13 }
  }
  v25 = ~v8;
  v48 = ~v4;
  v42 = ~v7;
  if (v23 == 2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v9 & ~v8, v50);
  }
  else if (v23 == 1)
  {
    swift_bridgeObjectRelease();
    v26 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v26((v11 + v10) & v48, v50);
    v27 = (v47 + ((v11 + v10) & v48)) & v25;
    v28 = *(unsigned __int8 *)(v27 + v18);
    if (v28 >= 4)
    {
      if (v18 <= 3)
        v29 = v18;
      else
        v29 = 4;
      __asm { BR              X12 }
    }
    if (v28 >= 2)
    {
      swift_bridgeObjectRelease();
      v30 = (v43 + v27) & v42;
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v30, v46);
      v26((v44 + v30) & v48, v50);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v31 = ((v9 | v8) + v22 + 1) & v25;
  v32 = *(unsigned __int8 *)(v31 + v22);
  if (v32 <= 2)
  {
    if (v32 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(((v9 | v8) + v22 + 1) & v25, v50);
    }
    else if (v32 == 1)
    {
      swift_bridgeObjectRelease();
      v33 = (v11 + v31) & v48;
      v34 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      v34(v33, v50);
      v35 = (v47 + v33) & v25;
      v36 = *(unsigned __int8 *)(v35 + v18);
      if (v36 >= 4)
      {
        if (v18 <= 3)
          v37 = v18;
        else
          v37 = 4;
        __asm { BR              X12 }
      }
      if (v36 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))((v43 + v35) & v42, v46);
        v34((v44 + ((v43 + v35) & v42)) & v48, v50);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v38 = ((v10 | 7) + v22 + 1 + ((v22 + 1 + v8) & v25)) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v40 = (v38 + *(unsigned __int8 *)(v39 + 80) + 19) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  (*(void (**)(unint64_t))(v39 + 8))(v40);
  return sub_221017894(*(_QWORD *)(((v40 + *(_QWORD *)(v39 + 64)) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v40 + *(_QWORD *)(v39 + 64)) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_2210F1034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(void);
  unint64_t v28;
  _WORD *v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  unsigned int v41;
  unint64_t v42;
  unint64_t v43;
  void (*v44)(unint64_t);
  _WORD *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t result;
  char v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  void (*v69)(unint64_t, unint64_t, uint64_t);
  unint64_t v70;
  uint64_t v71;
  void (*v72)(unint64_t, unint64_t, uint64_t);
  void (*v73)(unint64_t, unint64_t, uint64_t);
  void (*v74)(void);
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v87;
  void (*v88)(unint64_t, unint64_t, uint64_t);
  uint64_t v89;
  void (*v90)(unint64_t);
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v92 = sub_2212F5124();
  v6 = *(_QWORD *)(v92 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v80 = sub_2212F5058();
  v8 = *(_QWORD *)(v80 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 | v9 | 7;
  v87 = v10 + 32 + a1;
  v89 = v10 + 32 + a2;
  v91 = (_QWORD *)(v87 & ~v10);
  v81 = v7 + 16;
  v11 = *(_QWORD *)(v6 + 64);
  v82 = v10 + v11;
  v12 = (v10 + v11 + ((v7 + 16) & ~v7)) & ~v10;
  v77 = v9 + 16;
  v78 = v8;
  v79 = *(_QWORD *)(v8 + 64) + v7;
  v13 = v11 + 7;
  v14 = (v11 + 7 + ((v79 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;
  v16 = v14 + 9;
  v75 = v15;
  if (v16 <= v15)
    v16 = v15;
  if (v16 <= 2)
    v16 = 2;
  v84 = v13;
  v85 = v16;
  v17 = v16 + v12;
  if (v17 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
    v18 = v17 + 1;
  else
    v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 <= 0x10)
    v19 = 16;
  else
    v19 = v18;
  v93 = (_QWORD *)(v89 & ~v10);
  v20 = *((unsigned __int8 *)v93 + v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20 >= 3)
  {
    if (v19 <= 3)
      v21 = v19;
    else
      v21 = 4;
    __asm { BR              X11 }
  }
  v22 = ~v10;
  v83 = ~v7;
  v76 = ~v9;
  if (v20 == 2)
  {
    v24 = v87 & ~v10;
    v23 = v89 & ~v10;
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(v91, v93, v92);
    *(_OWORD *)(((unint64_t)v91 + v84) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v93 + v84) & 0xFFFFFFFFFFFFF8);
    v32 = 2;
  }
  else
  {
    v23 = v89 & ~v10;
    if (v20 != 1)
    {
      v24 = v87 & ~v10;
      *v91 = *v93;
      *(_QWORD *)(v24 + 8) = *(_QWORD *)((v89 & ~v10) + 8);
      *((_BYTE *)v91 + v19) = 0;
      swift_bridgeObjectRetain();
      goto LABEL_32;
    }
    v24 = v87 & ~v10;
    *v91 = *v93;
    *(_QWORD *)(v24 + 8) = *(_QWORD *)((v89 & ~v10) + 8);
    v25 = ((unint64_t)v91 + v81) & v83;
    v26 = ((unint64_t)v93 + v81) & v83;
    v27 = *(void (**)(void))(v6 + 16);
    swift_bridgeObjectRetain();
    v74 = v27;
    ((void (*)(unint64_t, unint64_t, uint64_t))v27)(v25, v26, v92);
    v28 = (v82 + v25) & v22;
    v29 = (_WORD *)((v82 + v26) & v22);
    v30 = v85;
    switch(*((_BYTE *)v29 + v85))
    {
      case 0:
        v33 = 0;
        *(_WORD *)v28 = *v29;
        break;
      case 1:
        *(_BYTE *)v28 = *(_BYTE *)v29;
        v33 = 1;
        break;
      case 2:
        *(_QWORD *)v28 = *(_QWORD *)v29;
        *(_QWORD *)(v28 + 8) = *(_QWORD *)(((v82 + v26) & v22) + 8);
        v34 = ((unint64_t)v29 + v77) & v76;
        v72 = *(void (**)(unint64_t, unint64_t, uint64_t))(v78 + 16);
        swift_bridgeObjectRetain();
        v72((v77 + v28) & v76, v34, v80);
        v24 = v87 & ~v10;
        v74();
        v30 = v85;
        *(_QWORD *)((v84 + ((v79 + ((v77 + v28) & v76)) & v83)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v84 + ((v79 + v34) & v83)) & 0xFFFFFFFFFFFFF8);
        *(_BYTE *)(v28 + v75) = *((_BYTE *)v29 + v75);
        v33 = 2;
        break;
      case 3:
        *(_QWORD *)v28 = *(_QWORD *)v29;
        *(_QWORD *)(v28 + 8) = *(_QWORD *)(((v82 + v26) & v22) + 8);
        v35 = ((unint64_t)v29 + v77) & v76;
        v73 = *(void (**)(unint64_t, unint64_t, uint64_t))(v78 + 16);
        swift_bridgeObjectRetain();
        v36 = (v77 + v28) & v76;
        v73(v36, v35, v80);
        v24 = v87 & ~v10;
        v37 = (v79 + v36) & v83;
        v38 = (v79 + v35) & v83;
        ((void (*)(uint64_t, unint64_t, uint64_t))v74)(v37, v38, v92);
        v30 = v85;
        *(_QWORD *)((v84 + v37) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v84 + v38) & 0xFFFFFFFFFFFFF8);
        v33 = 3;
        break;
      default:
        if (v85 <= 3)
          v31 = v85;
        else
          v31 = 4;
        __asm { BR              X12 }
        return result;
    }
    *(_BYTE *)(v28 + v30) = v33;
    v32 = 1;
  }
  *(_BYTE *)(v24 + v19) = v32;
LABEL_32:
  v39 = (_QWORD *)(((v87 | v10) + v19 + 1) & v22);
  v40 = (_QWORD *)(((v89 | v10) + v19 + 1) & v22);
  v41 = *((unsigned __int8 *)v40 + v19);
  if (v41 > 2)
  {
    memcpy((void *)(((v87 | v10) + v19 + 1) & v22), (const void *)(((v89 | v10) + v19 + 1) & v22), v19 + 1);
LABEL_43:
    v48 = a3;
    goto LABEL_44;
  }
  if (v41 == 2)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(((v87 | v10) + v19 + 1) & v22, ((v89 | v10) + v19 + 1) & v22, v92);
    *(_OWORD *)(((unint64_t)v39 + v84) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v40 + v84) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)v39 + v19) = 2;
    goto LABEL_43;
  }
  if (v41 != 1)
  {
    *v39 = *v40;
    *(_QWORD *)((((v87 | v10) + v19 + 1) & v22) + 8) = *(_QWORD *)((((v89 | v10) + v19 + 1) & v22) + 8);
    *((_BYTE *)v39 + v19) = 0;
    swift_bridgeObjectRetain();
    goto LABEL_43;
  }
  *v39 = *v40;
  *(_QWORD *)((((v87 | v10) + v19 + 1) & v22) + 8) = *(_QWORD *)((((v89 | v10) + v19 + 1) & v22) + 8);
  v42 = ((unint64_t)v39 + v81) & v83;
  v43 = ((unint64_t)v40 + v81) & v83;
  v44 = *(void (**)(unint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v90 = v44;
  ((void (*)(unint64_t, unint64_t, uint64_t))v44)(v42, v43, v92);
  v45 = (_WORD *)((v82 + v42) & v22);
  v46 = (v82 + v43) & v22;
  switch(*(_BYTE *)(v46 + v85))
  {
    case 0:
      v64 = 0;
      *v45 = *(_WORD *)v46;
      break;
    case 1:
      *(_BYTE *)v45 = *(_BYTE *)v46;
      v64 = 1;
      break;
    case 2:
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *(_QWORD *)(((v82 + v42) & v22) + 8) = *(_QWORD *)(v46 + 8);
      v65 = ((unint64_t)v45 + v77) & v76;
      v88 = *(void (**)(unint64_t, unint64_t, uint64_t))(v78 + 16);
      swift_bridgeObjectRetain();
      v88(v65, (v77 + v46) & v76, v80);
      v24 = (uint64_t)v91;
      v66 = (v79 + v65) & v83;
      v90(v66);
      *(_QWORD *)((v84 + v66) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v84 + ((v79 + ((v77 + v46) & v76)) & v83)) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v45 + v75) = *(_BYTE *)(v46 + v75);
      v64 = 2;
      break;
    case 3:
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *(_QWORD *)(((v82 + v42) & v22) + 8) = *(_QWORD *)(v46 + 8);
      v67 = ((unint64_t)v45 + v77) & v76;
      v68 = (v77 + v46) & v76;
      v69 = *(void (**)(unint64_t, unint64_t, uint64_t))(v78 + 16);
      swift_bridgeObjectRetain();
      v69(v67, v68, v80);
      v24 = v87 & ~v10;
      v70 = (v79 + v67) & v83;
      v71 = (v79 + v68) & v83;
      ((void (*)(unint64_t, uint64_t, uint64_t))v90)(v70, v71, v92);
      *(_QWORD *)((v84 + v70) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v84 + v71) & 0xFFFFFFFFFFFFF8);
      v64 = 3;
      break;
    default:
      if (v85 <= 3)
        v47 = v85;
      else
        v47 = 4;
      __asm { BR              X12 }
      return result;
  }
  v48 = a3;
  v23 = (uint64_t)v93;
  *((_BYTE *)v45 + v85) = v64;
  *((_BYTE *)v39 + v19) = 1;
LABEL_44:
  v49 = ((v19 + 1 + v10) & v22) + v19 + 1;
  v50 = ((v24 | 7) + v49) & 0xFFFFFFFFFFFFFFF8;
  v51 = ((v23 | 7) + v49) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v50 = *(_QWORD *)v51;
  *(_QWORD *)(v50 + 8) = *(_QWORD *)(v51 + 8);
  *(_BYTE *)(v50 + 16) = *(_BYTE *)(v51 + 16);
  *(_BYTE *)(v50 + 17) = *(_BYTE *)(v51 + 17);
  *(_BYTE *)(v50 + 18) = *(_BYTE *)(v51 + 18);
  v52 = *(_QWORD *)(v48 + 16);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(unsigned __int8 *)(v53 + 80);
  v55 = (v54 + 19 + v50) & ~v54;
  v56 = (v54 + 19 + v51) & ~v54;
  v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16);
  swift_bridgeObjectRetain();
  v57(v55, v56, v52);
  v58 = *(_QWORD *)(v53 + 64);
  v59 = v55 + v58;
  v60 = v56 + v58;
  *(_BYTE *)v59 = *(_BYTE *)v60;
  v61 = v59 & 0xFFFFFFFFFFFFFFF8;
  v60 &= 0xFFFFFFFFFFFFFFF8;
  v62 = *(_QWORD *)(v60 + 8);
  LOBYTE(v55) = *(_BYTE *)(v60 + 16);
  sub_221017C08(v62, v55);
  *(_QWORD *)(v61 + 8) = v62;
  *(_BYTE *)(v61 + 16) = v55;
  return a1;
}

uint64_t sub_2210F18BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  unint64_t v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, unint64_t, uint64_t);
  _WORD *v43;
  _WORD *v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(unint64_t, unint64_t, uint64_t);
  unint64_t v55;
  unint64_t v56;
  size_t v57;
  _QWORD *v58;
  _QWORD *v59;
  unsigned int v60;
  unsigned int v61;
  void (*v62)(unint64_t, uint64_t);
  unint64_t v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(unint64_t, uint64_t);
  unint64_t v73;
  unsigned int v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  size_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t result;
  void (*v105)(unint64_t, unint64_t, uint64_t);
  void (*v106)(unint64_t, unint64_t, uint64_t);
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t);
  void (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v125 = sub_2212F5124();
  v6 = *(_QWORD *)(v125 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v115 = sub_2212F5058();
  v8 = *(_QWORD *)(v115 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 | v9 | 7;
  v11 = v10 + 32 + a1;
  v12 = ~v10;
  v13 = v11 & ~v10;
  v14 = v10 + 32 + a2;
  v15 = v14 & ~v10;
  v126 = ~v10;
  v121 = v15;
  v122 = a3;
  v114 = v8;
  if (v13 != v15)
  {
    v116 = v7 + 16;
    v16 = *(_QWORD *)(v6 + 64);
    v17 = (v10 + ((v7 + 16) & ~v7) + v16) & v12;
    v111 = v9 + 16;
    v113 = *(_QWORD *)(v8 + 64) + v7;
    v118 = v16;
    v18 = (v16 + 7 + ((v113 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    v19 = v18 + 8;
    v20 = v18 + 9;
    v107 = v19;
    if (v20 <= v19)
      v20 = v19;
    if (v20 <= 2)
      v20 = 2;
    v124 = v20;
    v21 = (v17 | 1) + v20;
    v109 = v16 + 7;
    if (v21 <= ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
      v21 = ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v21 <= 0x10)
      v22 = 16;
    else
      v22 = v21;
    v23 = *(unsigned __int8 *)(v13 + v22);
    if (v23 >= 3)
    {
      if (v22 <= 3)
        v24 = v22;
      else
        v24 = 4;
      __asm { BR              X13 }
    }
    v123 = ~v7;
    v110 = ~v9;
    v108 = v10 + 32 + a2;
    if (v23 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11 & ~v10, v125);
    }
    else if (v23 == 1)
    {
      swift_bridgeObjectRelease();
      v33 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v33((v116 + v13) & v123, v125);
      v34 = (((v116 + v13) & v123) + v10 + v118) & v126;
      v35 = *(unsigned __int8 *)(v34 + v124);
      if (v35 >= 4)
      {
        if (v124 <= 3)
          v36 = v124;
        else
          v36 = 4;
        __asm { BR              X12 }
      }
      if (v35 >= 2)
      {
        swift_bridgeObjectRelease();
        v37 = (v111 + v34) & v110;
        (*(void (**)(unint64_t, uint64_t))(v114 + 8))(v37, v115);
        v33((v113 + v37) & v123, v125);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v38 = *(unsigned __int8 *)(v15 + v22);
    if (v38 >= 3)
    {
      if (v22 <= 3)
        v39 = v22;
      else
        v39 = 4;
      __asm { BR              X12 }
    }
    if (v38 == 2)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v11 & ~v10, v15, v125);
      *(_OWORD *)(((v13 | 7) + v118) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((v15 | 7) + v118) & 0xFFFFFFFFFFFFF8);
      *(_BYTE *)(v13 + v22) = 2;
    }
    else
    {
      if (v38 == 1)
      {
        *(_QWORD *)v13 = *(_QWORD *)v15;
        *(_QWORD *)((v11 & ~v10) + 8) = *(_QWORD *)(v15 + 8);
        v40 = (v116 + v13) & v123;
        v41 = (v116 + v15) & v123;
        v42 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
        swift_bridgeObjectRetain();
        v106 = v42;
        v42(v40, v41, v125);
        v43 = (_WORD *)((v40 + v10 + v118) & v126);
        v44 = (_WORD *)((v41 + v10 + v118) & v126);
        v45 = v124;
        switch(*((_BYTE *)v44 + v124))
        {
          case 0:
            v47 = 0;
            *v43 = *v44;
            break;
          case 1:
            *(_BYTE *)v43 = *(_BYTE *)v44;
            v47 = 1;
            break;
          case 2:
            *(_QWORD *)v43 = *(_QWORD *)v44;
            *(_QWORD *)(((v40 + v10 + v118) & v126) + 8) = *(_QWORD *)(((v41 + v10 + v118) & v126) + 8);
            v48 = ((unint64_t)v43 + v111) & v110;
            v49 = ((unint64_t)v44 + v111) & v110;
            v105 = *(void (**)(unint64_t, unint64_t, uint64_t))(v114 + 16);
            swift_bridgeObjectRetain();
            v105(v48, v49, v115);
            v50 = (v113 + v48) & v123;
            v51 = (v113 + v49) & v123;
            v106(v50, v51, v125);
            v45 = v124;
            *(_QWORD *)((v109 + v50) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v109 + v51) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v43 + v107) = *((_BYTE *)v44 + v107);
            v47 = 2;
            break;
          case 3:
            *(_QWORD *)v43 = *(_QWORD *)v44;
            *(_QWORD *)(((v40 + v10 + v118) & v126) + 8) = *(_QWORD *)(((v41 + v10 + v118) & v126) + 8);
            v52 = ((unint64_t)v43 + v111) & v110;
            v53 = ((unint64_t)v44 + v111) & v110;
            v54 = *(void (**)(unint64_t, unint64_t, uint64_t))(v114 + 16);
            swift_bridgeObjectRetain();
            v54(v52, v53, v115);
            v55 = (v113 + v52) & v123;
            v56 = (v113 + v53) & v123;
            v106(v55, v56, v125);
            v45 = v124;
            *(_QWORD *)((v109 + v55) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v109 + v56) & 0xFFFFFFFFFFFFF8);
            v47 = 3;
            break;
          default:
            if (v124 <= 3)
              v46 = v124;
            else
              v46 = 4;
            __asm { BR              X12 }
            return result;
        }
        v12 = ~v10;
        v14 = v108;
        *((_BYTE *)v43 + v45) = v47;
        *(_BYTE *)(v13 + v22) = 1;
        goto LABEL_57;
      }
      *(_QWORD *)v13 = *(_QWORD *)v15;
      *(_QWORD *)((v11 & ~v10) + 8) = *(_QWORD *)(v15 + 8);
      *(_BYTE *)(v13 + v22) = 0;
      swift_bridgeObjectRetain();
    }
    v12 = ~v10;
    v14 = v108;
    goto LABEL_57;
  }
  v25 = *(_QWORD *)(v6 + 64);
  v26 = *(_QWORD *)(v8 + 64);
  v123 = ~v7;
  v116 = v7 + 16;
  v118 = v25;
  v110 = ~v9;
  v111 = v9 + 16;
  v113 = v26 + v7;
  v27 = v25 + 7;
  v28 = (v25 + 7 + ((v26 + v7 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v29 = v28 + 8;
  v30 = v28 + 9;
  v107 = v29;
  if (v30 <= v29)
    v30 = v29;
  v31 = 2;
  if (v30 > 2)
    v31 = v30;
  v124 = v31;
  v32 = ((v10 + ((v7 + 16) & ~v7) + v25) & v12 | 1) + v31;
  v109 = v25 + 7;
  if (v32 <= (v27 & 0xFFFFFFFFFFFFFFF8) + 16)
    v32 = (v27 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v32 <= 0x10)
    v22 = 16;
  else
    v22 = v32;
LABEL_57:
  v57 = v22 + 1;
  v58 = (_QWORD *)(((v11 | v10) + v22 + 1) & v12);
  v59 = (_QWORD *)(((v14 | v10) + v22 + 1) & v12);
  v60 = *((unsigned __int8 *)v58 + v22);
  v61 = *((unsigned __int8 *)v59 + v22);
  if (v60 > 2)
  {
    if (v61 <= 2)
    {
      if (v61 == 2)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(((v11 | v10) + v22 + 1) & v12, ((v14 | v10) + v22 + 1) & v12, v125);
        v12 = ~v10;
        *(_OWORD *)(((unint64_t)v58 + v109) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v59 + v109) & 0xFFFFFFFFFFFFF8);
        v76 = 2;
      }
      else
      {
        if (v61 != 1)
        {
LABEL_105:
          *v58 = *v59;
          v58[1] = v59[1];
          *((_BYTE *)v58 + v22) = 0;
          swift_bridgeObjectRetain();
          goto LABEL_107;
        }
        *v58 = *v59;
        *(_QWORD *)((((v11 | v10) + v22 + 1) & v12) + 8) = *(_QWORD *)((((v14 | v10) + v22 + 1) & v12) + 8);
        v66 = ((unint64_t)v58 + v116) & v123;
        v67 = ((unint64_t)v59 + v116) & v123;
        v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
        swift_bridgeObjectRetain();
        v117 = v68;
        v68(v66, v67, v125);
        v69 = (v118 + v10 + v66) & v126;
        v70 = (v118 + v10 + v67) & v126;
        switch(*(_BYTE *)(v70 + v124))
        {
          case 0:
LABEL_109:
            v84 = 0;
            *(_WORD *)v69 = *(_WORD *)v70;
            break;
          case 1:
LABEL_110:
            *(_BYTE *)v69 = *(_BYTE *)v70;
            v84 = 1;
            break;
          case 2:
LABEL_111:
            *(_QWORD *)v69 = *(_QWORD *)v70;
            *(_QWORD *)(v69 + 8) = *(_QWORD *)(v70 + 8);
            v85 = (v111 + v69) & v110;
            v112 = (v111 + v70) & v110;
            v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v114 + 16);
            swift_bridgeObjectRetain();
            v119(v85, v112, v115);
            v86 = (v113 + v85) & v123;
            v117(v86, (v113 + v112) & v123, v125);
            *(_QWORD *)((v109 + v86) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v109 + ((v113 + v112) & v123)) & 0xFFFFFFFFFFFFF8);
            *(_BYTE *)(v69 + v107) = *(_BYTE *)(v70 + v107);
            v84 = 2;
            break;
          case 3:
LABEL_112:
            *(_QWORD *)v69 = *(_QWORD *)v70;
            *(_QWORD *)(v69 + 8) = *(_QWORD *)(v70 + 8);
            v87 = (v111 + v69) & v110;
            v88 = (v111 + v70) & v110;
            v120 = *(void (**)(uint64_t, uint64_t, uint64_t))(v114 + 16);
            swift_bridgeObjectRetain();
            v120(v87, v88, v115);
            v89 = (v113 + v87) & v123;
            v117(v89, (v113 + v88) & v123, v125);
            *(_QWORD *)((v109 + v89) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v109 + ((v113 + v88) & v123)) & 0xFFFFFFFFFFFFF8);
            v84 = 3;
            break;
          default:
            if (v124 <= 3)
              v71 = v124;
            else
              v71 = 4;
            __asm { BR              X12 }
            return result;
        }
        v12 = ~v10;
        *(_BYTE *)(v69 + v124) = v84;
        v76 = 1;
      }
      *((_BYTE *)v58 + v22) = v76;
      goto LABEL_115;
    }
LABEL_90:
    memcpy(v58, v59, v57);
LABEL_107:
    v12 = ~v10;
    goto LABEL_115;
  }
  if (v61 > 2)
  {
    if (v60 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(((v11 | v10) + v22 + 1) & v12, v125);
    }
    else if (v60 == 1)
    {
      swift_bridgeObjectRelease();
      v72 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
      v72(((unint64_t)v58 + v116) & v123, v125);
      v73 = (v118 + v10 + (((unint64_t)v58 + v116) & v123)) & v126;
      v74 = *(unsigned __int8 *)(v73 + v124);
      if (v74 >= 4)
      {
        if (v124 <= 3)
          v75 = v124;
        else
          v75 = 4;
        __asm { BR              X12 }
      }
      if (v74 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v114 + 8))((v111 + v73) & v110, v115);
        v72((v113 + ((v111 + v73) & v110)) & v123, v125);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    goto LABEL_90;
  }
  if (v58 != v59)
  {
    if (v60 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(((v11 | v10) + v22 + 1) & v12, v125);
    }
    else if (v60 == 1)
    {
      swift_bridgeObjectRelease();
      v62 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
      v62(((unint64_t)v58 + v116) & v123, v125);
      v63 = (v118 + v10 + (((unint64_t)v58 + v116) & v123)) & v126;
      v64 = *(unsigned __int8 *)(v63 + v124);
      if (v64 >= 4)
      {
        if (v124 <= 3)
          v65 = v124;
        else
          v65 = 4;
        __asm { BR              X12 }
      }
      if (v64 >= 2)
      {
        swift_bridgeObjectRelease();
        v77 = (v111 + v63) & v110;
        (*(void (**)(unint64_t, uint64_t))(v114 + 8))(v77, v115);
        v62((v113 + v77) & v123, v125);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v78 = *((unsigned __int8 *)v59 + v22);
    if (v78 >= 3)
    {
      if (v22 <= 3)
        v79 = v22;
      else
        v79 = 4;
      __asm { BR              X12 }
    }
    if (v78 == 2)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(v58, v59, v125);
      *(_OWORD *)(((unint64_t)v58 + v109) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v59 + v109) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v58 + v22) = 2;
      goto LABEL_107;
    }
    if (v78 == 1)
    {
      *v58 = *v59;
      v58[1] = v59[1];
      v80 = ((unint64_t)v58 + v116) & v123;
      v81 = ((unint64_t)v59 + v116) & v123;
      v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      swift_bridgeObjectRetain();
      v117 = v82;
      v82(v80, v81, v125);
      v69 = (v118 + v10 + v80) & v126;
      v70 = (v118 + v10 + v81) & v126;
      switch(*(_BYTE *)(v70 + v124))
      {
        case 0:
          goto LABEL_109;
        case 1:
          goto LABEL_110;
        case 2:
          goto LABEL_111;
        case 3:
          goto LABEL_112;
        default:
          if (v124 <= 3)
            v83 = v124;
          else
            v83 = 4;
          __asm { BR              X12 }
          return result;
      }
    }
    goto LABEL_105;
  }
LABEL_115:
  v90 = ((v57 + v10) & v12) + v57;
  v91 = ((v13 | 7) + v90) & 0xFFFFFFFFFFFFFFF8;
  v92 = ((v121 | 7) + v90) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v91 = *(_QWORD *)v92;
  *(_QWORD *)(v91 + 8) = *(_QWORD *)(v92 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v91 + 16) = *(_BYTE *)(v92 + 16);
  *(_BYTE *)(v91 + 17) = *(_BYTE *)(v92 + 17);
  *(_BYTE *)(v91 + 18) = *(_BYTE *)(v92 + 18);
  v93 = *(_QWORD *)(*(_QWORD *)(v122 + 16) - 8);
  v94 = *(unsigned __int8 *)(v93 + 80);
  v95 = (v94 + 19 + v91) & ~v94;
  v96 = (v94 + 19 + v92) & ~v94;
  (*(void (**)(uint64_t, uint64_t))(v93 + 24))(v95, v96);
  v97 = *(_QWORD *)(v93 + 64);
  v98 = v95 + v97;
  v99 = v96 + v97;
  *(_BYTE *)v98 = *(_BYTE *)v99;
  v100 = v98 & 0xFFFFFFFFFFFFFFF8;
  v99 &= 0xFFFFFFFFFFFFFFF8;
  v101 = *(_QWORD *)(v99 + 8);
  LOBYTE(v96) = *(_BYTE *)(v99 + 16);
  sub_221017C08(v101, v96);
  v102 = *(_QWORD *)(v100 + 8);
  v103 = *(_BYTE *)(v100 + 16);
  *(_QWORD *)(v100 + 8) = v101;
  *(_BYTE *)(v100 + 16) = v96;
  sub_221017894(v102, v103);
  return a1;
}

_OWORD *sub_2210F27F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _WORD *v31;
  _WORD *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  unsigned int v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _WORD *v47;
  _WORD *v48;
  uint64_t v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  _OWORD *result;
  char v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _WORD *v72;
  _WORD *v73;
  void (*v74)(void);
  unint64_t v75;
  uint64_t v76;
  void (*v77)(unint64_t, unint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _WORD *v86;
  _WORD *v87;
  uint64_t v88;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v91 = sub_2212F5124();
  v6 = *(_QWORD *)(v91 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v82 = sub_2212F5058();
  v8 = *(_QWORD *)(v82 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 | v9 | 7;
  v90 = a1;
  v11 = (unint64_t)a1 + v10 + 32;
  v12 = (_OWORD *)(v11 & ~v10);
  v13 = (unint64_t)a2 + v10 + 32;
  v14 = v13 & ~v10;
  v15 = v7 + 16;
  v16 = *(_QWORD *)(v6 + 64);
  v85 = v10 + v16;
  v17 = (v10 + v16 + ((v7 + 16) & ~v7)) & ~v10;
  v79 = v9 + 16;
  v81 = v8;
  v80 = *(_QWORD *)(v8 + 64) + v7;
  v18 = v16 + 7;
  v19 = (v16 + 7 + ((v80 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v20 = v19 + 8;
  v21 = v19 + 9;
  v75 = v20;
  if (v21 <= v20)
    v21 = v20;
  if (v21 <= 2)
    v22 = 2;
  else
    v22 = v21;
  v23 = v22 + v17;
  if (v23 + 1 > (v18 & 0xFFFFFFFFFFFFFFF8) + 16)
    v24 = v23 + 1;
  else
    v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v24 <= 0x10)
    v25 = 16;
  else
    v25 = v24;
  v26 = *(unsigned __int8 *)(v14 + v25);
  if (v26 >= 3)
  {
    if (v25 <= 3)
      v27 = v25;
    else
      v27 = 4;
    __asm { BR              X13 }
  }
  v28 = ~v10;
  v88 = ~v7;
  v78 = ~v9;
  v92 = v11 & ~v10;
  v76 = v7 + 16;
  if (v26 == 2)
  {
    v34 = v22;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(v11 & ~v10, v13 & ~v10, v91);
    v22 = v34;
    *(_OWORD *)(((unint64_t)v12 + v18) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v18 + v14) & 0xFFFFFFFFFFFFF8);
    v35 = 2;
  }
  else if (v26 == 1)
  {
    *v12 = *(_OWORD *)v14;
    v29 = ((unint64_t)v12 + v15) & v88;
    v30 = (v15 + v14) & v88;
    v83 = v22;
    v74 = *(void (**)(void))(v6 + 32);
    ((void (*)(unint64_t, unint64_t, uint64_t))v74)(v29, v30, v91);
    v22 = v83;
    v31 = (_WORD *)((v85 + v29) & v28);
    v32 = (_WORD *)((v85 + v30) & v28);
    switch(*((_BYTE *)v32 + v83))
    {
      case 0:
        v36 = 0;
        *v31 = *v32;
        break;
      case 1:
        *(_BYTE *)v31 = *(_BYTE *)v32;
        v36 = 1;
        break;
      case 2:
        *(_OWORD *)v31 = *(_OWORD *)v32;
        v71 = ((unint64_t)v31 + v79) & v78;
        v72 = v31;
        (*(void (**)(void))(v81 + 32))();
        v74();
        v31 = v72;
        v22 = v83;
        *(_QWORD *)((v18 + ((v80 + v71) & v88)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v18
                                                                                   + ((v80
                                                                                     + (((unint64_t)v32 + v79) & v78)) & v88)) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v72 + v75) = *((_BYTE *)v32 + v75);
        v36 = 2;
        break;
      case 3:
        *(_OWORD *)v31 = *(_OWORD *)v32;
        v37 = ((unint64_t)v32 + v79) & v78;
        v38 = ((unint64_t)v31 + v79) & v78;
        v73 = v31;
        (*(void (**)(void))(v81 + 32))();
        v39 = (v80 + v38) & v88;
        v40 = (v80 + v37) & v88;
        ((void (*)(unint64_t, unint64_t, uint64_t))v74)(v39, v40, v91);
        v31 = v73;
        v22 = v83;
        *(_QWORD *)((v18 + v39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v18 + v40) & 0xFFFFFFFFFFFFF8);
        v36 = 3;
        break;
      default:
        if (v83 <= 3)
          v33 = v83;
        else
          v33 = 4;
        __asm { BR              X12 }
        return result;
    }
    v12 = (_OWORD *)(v11 & ~v10);
    *((_BYTE *)v31 + v22) = v36;
    v35 = 1;
  }
  else
  {
    v35 = 0;
    *v12 = *(_OWORD *)v14;
  }
  *((_BYTE *)v12 + v25) = v35;
  v41 = (_OWORD *)(((v11 | v10) + v25 + 1) & v28);
  v42 = (_OWORD *)(((v13 | v10) + v25 + 1) & v28);
  v43 = *((unsigned __int8 *)v42 + v25);
  if (v43 > 2)
  {
    memcpy((void *)(((v11 | v10) + v25 + 1) & v28), v42, v25 + 1);
LABEL_43:
    v50 = v90;
    v51 = a3;
    goto LABEL_44;
  }
  if (v43 == 2)
  {
    (*(void (**)(unint64_t, _OWORD *, uint64_t))(v6 + 32))(((v11 | v10) + v25 + 1) & v28, v42, v91);
    *(_OWORD *)(((unint64_t)v41 + v18) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v42 + v18) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)v41 + v25) = 2;
    goto LABEL_43;
  }
  if (v43 != 1)
  {
    *v41 = *v42;
    *((_BYTE *)v41 + v25) = 0;
    goto LABEL_43;
  }
  *v41 = *v42;
  v44 = ((unint64_t)v41 + v76) & v88;
  v45 = ((unint64_t)v42 + v76) & v88;
  v84 = v22;
  v77 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v77(v44, v45, v91);
  v46 = v84;
  v47 = (_WORD *)((v85 + v44) & v28);
  v48 = (_WORD *)((v85 + v45) & v28);
  switch(*((_BYTE *)v48 + v84))
  {
    case 0:
      v64 = 0;
      *v47 = *v48;
      break;
    case 1:
      *(_BYTE *)v47 = *(_BYTE *)v48;
      v64 = 1;
      break;
    case 2:
      *(_OWORD *)v47 = *(_OWORD *)v48;
      v65 = ((unint64_t)v47 + v79) & v78;
      v86 = (_WORD *)((v85 + v44) & v28);
      (*(void (**)(unint64_t))(v81 + 32))(v65);
      v66 = (v80 + v65) & v88;
      v67 = (v80 + (((unint64_t)v48 + v79) & v78)) & v88;
      v77(v66, v67, v91);
      v46 = v84;
      v47 = v86;
      *(_QWORD *)((v18 + v66) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v18 + v67) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v86 + v75) = *((_BYTE *)v48 + v75);
      v64 = 2;
      break;
    case 3:
      *(_OWORD *)v47 = *(_OWORD *)v48;
      v68 = ((unint64_t)v47 + v79) & v78;
      v69 = ((unint64_t)v48 + v79) & v78;
      v87 = (_WORD *)((v85 + v44) & v28);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v81 + 32))(v68, v69, v82);
      v70 = (v80 + v68) & v88;
      v77(v70, (v80 + v69) & v88, v91);
      v46 = v84;
      v47 = v87;
      *(_QWORD *)((v18 + v70) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v18 + ((v80 + v69) & v88)) & 0xFFFFFFFFFFFFF8);
      v64 = 3;
      break;
    default:
      if (v84 <= 3)
        v49 = v84;
      else
        v49 = 4;
      __asm { BR              X12 }
      return result;
  }
  v51 = a3;
  *((_BYTE *)v47 + v46) = v64;
  *((_BYTE *)v41 + v25) = 1;
  v50 = v90;
LABEL_44:
  v52 = ((v25 + 1 + v10) & v28) + v25 + 1;
  v53 = ((v92 | 7) + v52) & 0xFFFFFFFFFFFFFFF8;
  v54 = ((v14 | 7) + v52) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v53 = *(_OWORD *)v54;
  *(_BYTE *)(v53 + 16) = *(_BYTE *)(v54 + 16);
  *(_BYTE *)(v53 + 17) = *(_BYTE *)(v54 + 17);
  *(_BYTE *)(v53 + 18) = *(_BYTE *)(v54 + 18);
  v55 = *(_QWORD *)(*(_QWORD *)(v51 + 16) - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = (v56 + 19 + v53) & ~v56;
  v58 = (v56 + 19 + v54) & ~v56;
  (*(void (**)(uint64_t, uint64_t))(v55 + 32))(v57, v58);
  v59 = *(_QWORD *)(v55 + 64);
  v60 = v57 + v59;
  v61 = v58 + v59;
  *(_BYTE *)v60 = *(_BYTE *)v61;
  v60 &= 0xFFFFFFFFFFFFFFF8;
  v61 &= 0xFFFFFFFFFFFFFFF8;
  v62 = *(_BYTE *)(v61 + 16);
  *(_QWORD *)(v60 + 8) = *(_QWORD *)(v61 + 8);
  *(_BYTE *)(v60 + 16) = v62;
  return v50;
}

uint64_t sub_2210F2F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void (*v37)(unint64_t, uint64_t);
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  unint64_t v43;
  _WORD *v44;
  _WORD *v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _WORD *v53;
  unint64_t v54;
  unint64_t v55;
  size_t v56;
  _OWORD *v57;
  _OWORD *v58;
  unsigned int v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _WORD *v70;
  _WORD *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(unint64_t, uint64_t);
  uint64_t v75;
  unint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  size_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t result;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  char v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  _WORD *v104;
  void (*v105)(unint64_t, unint64_t, uint64_t);
  void (*v106)(unint64_t, uint64_t);
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(unint64_t, unint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v120 = sub_2212F5124();
  v7 = *(_QWORD *)(v120 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v113 = sub_2212F5058();
  v9 = *(_QWORD *)(v113 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 | v10 | 7;
  v12 = v11 + 32 + a1;
  v13 = ~v11;
  v14 = (_OWORD *)(v12 & ~v11);
  v15 = v11 + 32 + a2;
  v16 = v15 & ~v11;
  v119 = v16;
  v121 = (unint64_t)v14;
  v122 = ~v11;
  v117 = a3;
  v112 = v9;
  if (v14 != (_OWORD *)v16)
  {
    v114 = v8 + 16;
    v17 = *(_QWORD *)(v7 + 64);
    v18 = (v11 + ((v8 + 16) & ~v8) + v17) & v13;
    v110 = v10 + 16;
    v111 = *(_QWORD *)(v9 + 64) + v8;
    v116 = v17;
    v19 = v17 + 7;
    v20 = (v19 + ((v111 + ((v10 + 16) & ~v10)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
    v21 = v20 + 8;
    v22 = v20 + 9;
    v107 = v21;
    v108 = v19;
    if (v22 <= v21)
      v22 = v21;
    if (v22 <= 2)
      v23 = 2;
    else
      v23 = v22;
    v24 = (v18 | 1) + v23;
    if (v24 <= (v19 & 0xFFFFFFFFFFFFFFF8) + 16)
      v24 = (v19 & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v24 <= 0x10)
      v25 = 16;
    else
      v25 = v24;
    v26 = *((unsigned __int8 *)v14 + v25);
    if (v26 >= 3)
    {
      if (v25 <= 3)
        v27 = v25;
      else
        v27 = 4;
      __asm { BR              X13 }
    }
    v118 = ~v8;
    v109 = ~v10;
    if (v26 != 2)
    {
      if (v26 == 1)
      {
        swift_bridgeObjectRelease();
        v36 = ((unint64_t)v14 + v114) & v118;
        v37 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
        v37(v36, v120);
        v34 = v23;
        v13 = ~v11;
        v38 = (v36 + v11 + v116) & v122;
        v39 = *(unsigned __int8 *)(v38 + v23);
        if (v39 >= 4)
        {
          if (v23 <= 3)
            v40 = v23;
          else
            v40 = 4;
          __asm { BR              X12 }
        }
        if (v39 < 2)
          goto LABEL_42;
        if (v39 == 3)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v112 + 8))((v110 + v38) & v109, v113);
          v37((v111 + ((v110 + v38) & v109)) & v118, v120);
          goto LABEL_35;
        }
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v112 + 8))((v110 + v38) & v109, v113);
        v37((v111 + ((v110 + v38) & v109)) & v118, v120);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v13 = ~v11;
      v34 = v23;
      goto LABEL_42;
    }
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12 & ~v11, v120);
LABEL_35:
    v34 = v23;
    v13 = ~v11;
LABEL_42:
    v16 = v15 & ~v11;
    v41 = *(unsigned __int8 *)(v119 + v25);
    if (v41 >= 3)
    {
      if (v25 <= 3)
        v42 = v25;
      else
        v42 = 4;
      __asm { BR              X12 }
    }
    if (v41 == 2)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(v121, v119, v120);
      v34 = v23;
      v13 = ~v11;
      *(_OWORD *)(((v121 | 7) + v116) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((v119 | 7) + v116) & 0xFFFFFFFFFFFFF8);
      *(_BYTE *)(v121 + v25) = 2;
    }
    else if (v41 == 1)
    {
      *(_OWORD *)v121 = *(_OWORD *)v119;
      v43 = (v114 + v121) & v118;
      v105 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32);
      v105(v43, (v114 + v119) & v118, v120);
      v34 = v23;
      v13 = ~v11;
      v44 = (_WORD *)((v43 + v11 + v116) & v122);
      v45 = (_WORD *)((((v114 + v119) & v118) + v11 + v116) & v122);
      switch(*((_BYTE *)v45 + v23))
      {
        case 0:
          v47 = 0;
          *v44 = *v45;
          break;
        case 1:
          *(_BYTE *)v44 = *(_BYTE *)v45;
          v47 = 1;
          break;
        case 2:
          *(_OWORD *)v44 = *(_OWORD *)v45;
          v48 = ((unint64_t)v44 + v110) & v109;
          v104 = v44;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v112 + 32))(v48, ((unint64_t)v45 + v110) & v109, v113);
          v49 = (v111 + v48) & v118;
          v50 = (v111 + (((unint64_t)v45 + v110) & v109)) & v118;
          v105(v49, v50, v120);
          v44 = v104;
          v34 = v23;
          v13 = ~v11;
          *(_QWORD *)((v108 + v49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v108 + v50) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v104 + v107) = *((_BYTE *)v45 + v107);
          v47 = 2;
          break;
        case 3:
          *(_OWORD *)v44 = *(_OWORD *)v45;
          v51 = ((unint64_t)v44 + v110) & v109;
          v52 = ((unint64_t)v45 + v110) & v109;
          v53 = v44;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v112 + 32))(v51, v52, v113);
          v54 = (v111 + v51) & v118;
          v55 = (v111 + v52) & v118;
          v105(v54, v55, v120);
          v44 = v53;
          v34 = v23;
          v13 = ~v11;
          *(_QWORD *)((v108 + v54) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v108 + v55) & 0xFFFFFFFFFFFFF8);
          v47 = 3;
          break;
        default:
          if (v23 <= 3)
            v46 = v23;
          else
            v46 = 4;
          __asm { BR              X12 }
          return result;
      }
      *((_BYTE *)v44 + v34) = v47;
      *(_BYTE *)(v121 + v25) = 1;
      v16 = v15 & ~v11;
    }
    else
    {
      *(_OWORD *)v121 = *(_OWORD *)v119;
      *(_BYTE *)(v121 + v25) = 0;
    }
    goto LABEL_62;
  }
  v28 = *(_QWORD *)(v7 + 64);
  v29 = *(_QWORD *)(v9 + 64);
  v118 = ~v8;
  v114 = v8 + 16;
  v116 = v28;
  v109 = ~v10;
  v110 = v10 + 16;
  v111 = v29 + v8;
  v30 = v28 + 7;
  v31 = (v28 + 7 + ((v29 + v8 + ((v10 + 16) & ~v10)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
  v32 = v31 + 8;
  v33 = v31 + 9;
  v107 = v32;
  v108 = v28 + 7;
  if (v33 <= v32)
    v33 = v32;
  if (v33 <= 2)
    v34 = 2;
  else
    v34 = v33;
  v35 = ((v11 + ((v8 + 16) & ~v8) + v28) & v13 | 1) + v34;
  if (v35 <= (v30 & 0xFFFFFFFFFFFFFFF8) + 16)
    v35 = (v30 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v35 <= 0x10)
    v25 = 16;
  else
    v25 = v35;
LABEL_62:
  v56 = v25 + 1;
  v57 = (_OWORD *)(((v12 | v11) + v25 + 1) & v13);
  v58 = (_OWORD *)(((v15 | v11) + v25 + 1) & v13);
  v59 = *((unsigned __int8 *)v57 + v25);
  v60 = *((unsigned __int8 *)v58 + v25);
  if (v59 > 2)
  {
    if (v60 > 2)
    {
      memcpy((void *)(((v12 | v11) + v25 + 1) & v13), v58, v25 + 1);
LABEL_99:
      v13 = ~v11;
      goto LABEL_100;
    }
    if (v60 == 2)
    {
      (*(void (**)(uint64_t, _OWORD *, uint64_t))(v7 + 32))(((v12 | v11) + v25 + 1) & v13, v58, v120);
      v13 = ~v11;
      *(_OWORD *)(((unint64_t)v57 + v108) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v58 + v108) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v57 + v25) = 2;
    }
    else if (v60 == 1)
    {
      *v57 = *v58;
      v66 = ((unint64_t)v57 + v114) & v118;
      v67 = ((unint64_t)v58 + v114) & v118;
      v68 = v34;
      v115 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32);
      v115(v66, v67, v120);
      v69 = v68;
      v13 = ~v11;
      v70 = (_WORD *)((v116 + v11 + v66) & v122);
      v71 = (_WORD *)((v116 + v11 + v67) & v122);
      switch(*((_BYTE *)v71 + v68))
      {
        case 0:
LABEL_118:
          v99 = 0;
          *v70 = *v71;
          break;
        case 1:
LABEL_119:
          *(_BYTE *)v70 = *(_BYTE *)v71;
          v99 = 1;
          break;
        case 2:
LABEL_120:
          *(_OWORD *)v70 = *(_OWORD *)v71;
          (*(void (**)(unint64_t))(v112 + 32))(((unint64_t)v70 + v110) & v109);
          v100 = (v111 + (((unint64_t)v70 + v110) & v109)) & v118;
          v101 = (v111 + (((unint64_t)v71 + v110) & v109)) & v118;
          v115(v100, v101, v120);
          v69 = v68;
          v13 = ~v11;
          *(_QWORD *)((v108 + v100) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v108 + v101) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v70 + v107) = *((_BYTE *)v71 + v107);
          v99 = 2;
          break;
        case 3:
LABEL_121:
          *(_OWORD *)v70 = *(_OWORD *)v71;
          v102 = ((unint64_t)v71 + v110) & v109;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v112 + 32))(((unint64_t)v70 + v110) & v109, v102, v113);
          v103 = (v111 + (((unint64_t)v70 + v110) & v109)) & v118;
          v115(v103, (v111 + v102) & v118, v120);
          v69 = v68;
          v13 = ~v11;
          *(_QWORD *)((v108 + v103) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v108 + ((v111 + v102) & v118)) & 0xFFFFFFFFFFFFF8);
          v99 = 3;
          break;
        default:
          if (v68 <= 3)
            v72 = v68;
          else
            v72 = 4;
          __asm { BR              X12 }
          return result;
      }
      *((_BYTE *)v70 + v69) = v99;
      *((_BYTE *)v57 + v25) = 1;
      v16 = v119;
    }
    else
    {
      *v57 = *v58;
      *((_BYTE *)v57 + v25) = 0;
    }
  }
  else
  {
    if (v60 > 2)
    {
      if (v59 == 2)
      {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(((v12 | v11) + v25 + 1) & v13, v120);
      }
      else if (v59 == 1)
      {
        v73 = v34;
        swift_bridgeObjectRelease();
        v74 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
        v74(((unint64_t)v57 + v114) & v118, v120);
        v75 = v73;
        v76 = (v116 + v11 + (((unint64_t)v57 + v114) & v118)) & v122;
        v77 = *(unsigned __int8 *)(v76 + v75);
        if (v77 >= 4)
        {
          if (v75 <= 3)
            v78 = v75;
          else
            v78 = 4;
          __asm { BR              X12 }
        }
        if (v77 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v112 + 8))((v110 + v76) & v109, v113);
          v74((v111 + ((v110 + v76) & v109)) & v118, v120);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      memcpy(v57, v58, v56);
      v16 = v119;
      goto LABEL_99;
    }
    if (v57 != v58)
    {
      if (v59 == 2)
      {
        v79 = v34;
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(((v12 | v11) + v25 + 1) & v13, v120);
      }
      else
      {
        if (v59 == 1)
        {
          v61 = v34;
          swift_bridgeObjectRelease();
          v106 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
          v106(((unint64_t)v57 + v114) & v118, v120);
          v62 = v61;
          v63 = (v116 + v11 + (((unint64_t)v57 + v114) & v118)) & v122;
          v64 = *(unsigned __int8 *)(v63 + v61);
          if (v64 >= 4)
          {
            if (v61 <= 3)
              v65 = v61;
            else
              v65 = 4;
            __asm { BR              X12 }
          }
          if (v64 >= 2)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v112 + 8))((v110 + v63) & v109, v113);
            v106((v111 + ((v110 + v63) & v109)) & v118, v120);
            v62 = v61;
          }
          goto LABEL_103;
        }
        v79 = v34;
        swift_bridgeObjectRelease();
      }
      v62 = v79;
LABEL_103:
      v94 = *((unsigned __int8 *)v58 + v25);
      if (v94 >= 3)
      {
        if (v25 <= 3)
          v95 = v25;
        else
          v95 = 4;
        __asm { BR              X12 }
      }
      v16 = v119;
      if (v94 == 2)
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v57, v58, v120);
        *(_OWORD *)(((unint64_t)v57 + v108) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v58 + v108) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v57 + v25) = 2;
      }
      else
      {
        if (v94 == 1)
        {
          *v57 = *v58;
          v96 = ((unint64_t)v57 + v114) & v118;
          v97 = ((unint64_t)v58 + v114) & v118;
          v68 = v62;
          v115 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32);
          v115(v96, v97, v120);
          v69 = v68;
          v13 = ~v11;
          v70 = (_WORD *)((v116 + v11 + v96) & v122);
          v71 = (_WORD *)((v116 + v11 + v97) & v122);
          switch(*((_BYTE *)v71 + v68))
          {
            case 0:
              goto LABEL_118;
            case 1:
              goto LABEL_119;
            case 2:
              goto LABEL_120;
            case 3:
              goto LABEL_121;
            default:
              if (v68 <= 3)
                v98 = v68;
              else
                v98 = 4;
              __asm { BR              X12 }
              return result;
          }
        }
        *v57 = *v58;
        *((_BYTE *)v57 + v25) = 0;
      }
      goto LABEL_99;
    }
  }
LABEL_100:
  v80 = ((v56 + v11) & v13) + v56;
  v81 = ((v121 | 7) + v80) & 0xFFFFFFFFFFFFFFF8;
  v82 = ((v16 | 7) + v80) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v81 = *(_QWORD *)v82;
  *(_QWORD *)(v81 + 8) = *(_QWORD *)(v82 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v81 + 16) = *(_BYTE *)(v82 + 16);
  *(_BYTE *)(v81 + 17) = *(_BYTE *)(v82 + 17);
  *(_BYTE *)(v81 + 18) = *(_BYTE *)(v82 + 18);
  v83 = *(_QWORD *)(*(_QWORD *)(v117 + 16) - 8);
  v84 = *(unsigned __int8 *)(v83 + 80);
  v85 = (v84 + 19 + v81) & ~v84;
  v86 = (v84 + 19 + v82) & ~v84;
  (*(void (**)(uint64_t, uint64_t))(v83 + 40))(v85, v86);
  v87 = *(_QWORD *)(v83 + 64);
  v88 = v85 + v87;
  v89 = v86 + v87;
  *(_BYTE *)v88 = *(_BYTE *)v89;
  v88 &= 0xFFFFFFFFFFFFFFF8;
  v89 &= 0xFFFFFFFFFFFFFFF8;
  v90 = *(_QWORD *)(v89 + 8);
  LOBYTE(v89) = *(_BYTE *)(v89 + 16);
  v91 = *(_QWORD *)(v88 + 8);
  v92 = *(_BYTE *)(v88 + 16);
  *(_QWORD *)(v88 + 8) = v90;
  *(_BYTE *)(v88 + 16) = v89;
  sub_221017894(v91, v92);
  return a1;
}

uint64_t sub_2210F3EBC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v31;

  v6 = *(_QWORD *)(sub_2212F5124() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(sub_2212F5058() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v10 | v7;
  v12 = v10 | v7 | 7;
  v13 = (v8 + 7 + ((*(_QWORD *)(v9 + 64) + v7 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v14 = v13 + 8;
  v15 = v13 + 9;
  if (v15 <= v14)
    v15 = v14;
  if (v15 <= 2)
    v15 = 2;
  v16 = v15 + ((((v7 + 16) & ~v7) + v8 + v12) & ~v12);
  if (v16 + 1 > ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v17 = v16 + 1;
  else
    v17 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  v18 = 16;
  if (v17 > 0x10)
    v18 = v17;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int *)(v20 + 84);
  if (v21 <= 0x7FFFFFFF)
    v22 = 0x7FFFFFFF;
  else
    v22 = *(_DWORD *)(v20 + 84);
  if (!a2)
    return 0;
  v23 = ((v18 + 1 + v12) & ~v12) + v18 + 1;
  v24 = *(unsigned __int8 *)(v20 + 80);
  v25 = v24 + 19;
  if (v22 < a2)
  {
    v26 = ((((v25 + ((v23 + ((v11 + 32) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v24) + *(_QWORD *)(v20 + 64)) & 0xFFFFFFFFFFFFFFF8)
        + 17;
    if (v26 < 4)
      v27 = ((a2 - v22 + 255) >> (8 * v26)) + 1;
    else
      v27 = 2;
    if (v27 >= 0x10000)
      v28 = 4;
    else
      v28 = 2;
    if (v27 < 0x100)
      v28 = 1;
    if (v27 >= 2)
      v29 = v28;
    else
      v29 = 0;
    __asm { BR              X17 }
  }
  if ((v21 & 0x80000000) != 0)
    return __swift_getEnumTagSinglePayload((v25 + ((((a1 + v12 + 32) & ~v12 | 7) + v23) & 0xFFFFFFFFFFFFFFF8)) & ~v24, v21, v19);
  v31 = *(_QWORD *)(a1 + 8);
  if (v31 >= 0xFFFFFFFF)
    LODWORD(v31) = -1;
  return (v31 + 1);
}

void sub_2210F40FC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  size_t v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;

  v8 = *(_QWORD *)(sub_2212F5124() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_QWORD *)(sub_2212F5058() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v12 | v9 | 7;
  v14 = (v10 + 7 + ((*(_QWORD *)(v11 + 64) + v9 + ((v12 + 16) & ~v12)) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;
  v16 = v14 + 9;
  if (v16 <= v15)
    v16 = v15;
  if (v16 <= 2)
    v16 = 2;
  v17 = v16 + ((((v9 + 16) & ~v9) + v10 + v13) & ~v13);
  if (v17 + 1 > ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v18 = v17 + 1;
  else
    v18 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 <= 0x10)
    v18 = 16;
  v19 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v19 + 84) <= 0x7FFFFFFFu)
    v20 = 0x7FFFFFFF;
  else
    v20 = *(_DWORD *)(v19 + 84);
  v21 = ((((*(unsigned __int8 *)(v19 + 80)
          + 19
          + ((((v18 + 1 + v13) & ~v13) + v18 + 1 + (((v12 | v9) + 32) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))
        + *(_QWORD *)(v19 + 64)) & 0xFFFFFFFFFFFFFFF8)
      + 17;
  if (v20 >= a3)
  {
    v24 = 0;
  }
  else
  {
    if (v21 <= 3)
      v22 = ((a3 - v20 + 255) >> (8 * v21)) + 1;
    else
      v22 = 2;
    if (v22 >= 0x10000)
      v23 = 4;
    else
      v23 = 2;
    if (v22 < 0x100)
      v23 = 1;
    if (v22 >= 2)
      v24 = v23;
    else
      v24 = 0;
  }
  if (v20 < a2)
  {
    if (v21 >= 4)
      v25 = ~v20 + a2;
    else
      v25 = (~(_BYTE)v20 + a2);
    bzero(a1, v21);
    if ((_DWORD)v21 == 1)
      *a1 = v25;
    else
      *(_DWORD *)a1 = v25;
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

void sub_2210F42FC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x2210F4384);
}

void sub_2210F4304()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x2210F430CLL);
  JUMPOUT(0x2210F4384);
}

void sub_2210F4320()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x2210F4384);
}

void sub_2210F4328()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x2210F4384);
}

void sub_2210F4330(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (v4)
  {
    if (a3 < 0)
      JUMPOUT(0x2210F433CLL);
    if (v4 < 0)
      JUMPOUT(0x2210F4378);
    *(_QWORD *)(v3 + 8) = (v4 - 1);
  }
  JUMPOUT(0x2210F4384);
}

uint64_t type metadata accessor for AutomaticSubscriptionPickerOptionLabelInternal(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AutomaticSubscriptionPickerOptionLabelInternal);
}

uint64_t sub_2210F43AC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2210F43E0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[16];
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = a2;
  v3 = sub_2212F3D2C();
  v10 = *(_QWORD *)(v3 - 8);
  v11 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v9 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C538);
  v7[14] = a1;
  v5 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 16);
  v7[15] = v5;
  type metadata accessor for Sublabels(255, v8, v5, v6);
  OUTLINED_FUNCTION_0_8();
  v7[10] = OUTLINED_FUNCTION_10_10();
  OUTLINED_FUNCTION_5_2();
}

void sub_2210F44A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v9 - 328) = a1;
  v10 = sub_2212F4830();
  OUTLINED_FUNCTION_2_22(*(_QWORD *)(v10 - 8));
  MEMORY[0x24BDAC7A8](v11);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657CE8);
  v12 = sub_2212F3348();
  OUTLINED_FUNCTION_2_22(*(_QWORD *)(v12 - 8));
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v9 - 368) = (char *)&a9 - v14;
  v15 = sub_2212F3348();
  *(_QWORD *)(v9 - 256) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v9 - 352) = (char *)&a9 - v16;
  v17 = MEMORY[0x22766BAC4](MEMORY[0x24BDF4700], v10);
  *(_QWORD *)(v9 - 392) = v17;
  sub_221108404((uint64_t)&qword_255657CE0);
  *(_QWORD *)(v9 - 104) = v17;
  *(_QWORD *)(v9 - 96) = v18;
  OUTLINED_FUNCTION_5_2();
}

void sub_2210F45D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  void (*v36)(char *, uint64_t);
  uint64_t v37;

  *(_QWORD *)(v14 - 384) = a1;
  v15 = MEMORY[0x24BDEDBB8];
  *(_QWORD *)(v14 - 120) = a1;
  *(_QWORD *)(v14 - 112) = v15;
  v16 = MEMORY[0x22766BAC4](v11, v12, v14 - 120);
  *(_QWORD *)(v14 - 376) = v16;
  *(_QWORD *)(v14 - 136) = v12;
  *(_QWORD *)(v14 - 128) = v16;
  v17 = MEMORY[0x22766BA58](0, v14 - 136, MEMORY[0x24BDF2F10], 0);
  OUTLINED_FUNCTION_2_22(*(_QWORD *)(v17 - 8));
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&a9 - v19;
  sub_2212F3E40();
  v21 = sub_2212F3348();
  OUTLINED_FUNCTION_2_22(*(_QWORD *)(v21 - 8));
  MEMORY[0x24BDAC7A8](v22);
  v23 = sub_2212F3348();
  *(_QWORD *)(v14 - 296) = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v14 - 360) = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v14 - 344) = (char *)&a9 - v26;
  sub_2212F38F4();
  v27 = *(_QWORD *)(v14 - 248);
  v28 = *(_QWORD *)(v14 - 280);
  *(_QWORD *)(v14 - 192) = *(_QWORD *)(v14 - 272);
  *(_QWORD *)(v14 - 184) = v28;
  *(_QWORD *)(v14 - 176) = v27;
  sub_2212F4824();
  v29 = *(_QWORD *)(v14 - 368);
  sub_2212F4374();
  OUTLINED_FUNCTION_29_11();
  v30(v10, v13);
  sub_2212F4A1C();
  v31 = *(_QWORD *)(v14 - 352);
  sub_2212F444C();
  OUTLINED_FUNCTION_29_11();
  v32(v29, v9);
  v33 = *(_QWORD *)(v14 - 240);
  sub_2212F3D14();
  v34 = *(_QWORD *)(v14 - 376);
  sub_2212F4308();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v14 - 232) + 8))(v33, *(_QWORD *)(v14 - 224));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 256) + 8))(v31, v12);
  swift_getKeyPath();
  *(_QWORD *)(v14 - 136) = v12;
  *(_QWORD *)(v14 - 128) = v34;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_221032BD4();
  swift_release();
  OUTLINED_FUNCTION_29_11();
  v36(v20, v17);
  sub_2210B43C0((uint64_t)&qword_255656B50);
  *(_QWORD *)(v14 - 152) = OpaqueTypeConformance2;
  *(_QWORD *)(v14 - 144) = v37;
  OUTLINED_FUNCTION_8_2();
}

uint64_t sub_2210F48F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v7 = *(_QWORD *)(v5 - 360);
  sub_2212F453C();
  OUTLINED_FUNCTION_29_11();
  v8(v4, v1);
  v9 = MEMORY[0x24BDEDB80];
  *(_QWORD *)(v5 - 168) = a1;
  *(_QWORD *)(v5 - 160) = v9;
  MEMORY[0x22766BAC4](v2, v3, v5 - 168);
  v10 = *(_QWORD *)(v5 - 344);
  sub_221088D68(v7, v3, v10);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 296) + 8);
  v11(v7, v3);
  sub_221087210(v10, v3, *(_QWORD *)(v5 - 216));
  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v10, v3);
}

void sub_2210F49C0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  int *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  _QWORD v103[2];
  _QWORD v104[2];

  v6 = a1;
  v94 = a4;
  v90 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v98 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for Sublabels(0, v8, v9, v10);
  v99 = *(_QWORD *)(v89 - 8);
  v11 = MEMORY[0x24BDAC7A8](v89);
  v93 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v100 = (uint64_t)&v74 - v13;
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C540);
  MEMORY[0x24BDAC7A8](v83);
  v86 = (uint64_t)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C548);
  MEMORY[0x24BDAC7A8](v79);
  v80 = (uint64_t)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C550);
  v16 = MEMORY[0x24BDAC7A8](v84);
  v78 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v81 = (uint64_t)&v74 - v18;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C558);
  MEMORY[0x24BDAC7A8](v87);
  v85 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C560);
  MEMORY[0x24BDAC7A8](v95);
  v82 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C568);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (int *)type metadata accessor for Fall2023TopRowContent(0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C538);
  v27 = MEMORY[0x24BDAC7A8](v96);
  v97 = (uint64_t)&v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v74 - v29;
  v91 = a2;
  v92 = a3;
  v32 = (int *)type metadata accessor for AutomaticSubscriptionPickerOptionLabelInternal(0, a2, a3, v31);
  v33 = *((_BYTE *)v6 + v32[15]);
  v34 = *v6;
  v35 = v6[1];
  v36 = *((_BYTE *)v6 + 16);
  v37 = v6[3];
  v38 = (uint64_t)v6 + v32[9];
  v88 = v21;
  if ((v33 & 1) != 0)
  {
    v76 = v24;
    v75 = v23;
    v77 = v30;
    v39 = (int *)v95;
    v40 = (uint64_t)v82;
    v41 = v37;
    sub_221014EB4(v38, (uint64_t)&v82[*(int *)(v95 + 36)], type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
    v42 = *((_BYTE *)v6 + v32[12]);
    v43 = *((_BYTE *)v6 + v32[13]);
    *(_QWORD *)v40 = v34;
    *(_QWORD *)(v40 + 8) = v35;
    *(_BYTE *)(v40 + 16) = v36;
    *(_QWORD *)(v40 + 24) = v41;
    *(_BYTE *)(v40 + v39[11]) = v42;
    *(_BYTE *)(v40 + v39[12]) = v43;
    *(_BYTE *)(v40 + v39[13]) = 1;
    v44 = v40 + v39[14];
    *(_QWORD *)v44 = swift_getKeyPath();
    *(_BYTE *)(v44 + 8) = 0;
    v45 = (uint64_t)v6 + v32[16];
    v46 = *(_QWORD *)v45;
    v47 = *(_BYTE *)(v45 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_221017C08(v46, v47);
    sub_22104359C();
    v49 = v48;
    sub_221017894(v46, v47);
    v50 = v89;
    if ((v49 & 1) != 0)
    {
      KeyPath = swift_getKeyPath();
      v52 = sub_2212F49D4();
      v54 = v53;
      v55 = v80;
      sub_221014FC0(v40, v80, &qword_25565C560);
      v56 = (uint64_t *)(v55 + *(int *)(v79 + 36));
      *v56 = v52;
      v56[1] = v54;
      v57 = (uint64_t)v78;
      sub_221014FC0(v55, (uint64_t)&v78[*(int *)(v84 + 36)], &qword_25565C548);
      *(_QWORD *)v57 = KeyPath;
      *(_BYTE *)(v57 + 8) = 0;
      sub_221014F5C(v55, &qword_25565C548);
      v58 = v81;
      sub_221015090(v57, v81, &qword_25565C550);
      sub_221014FC0(v58, v86, &qword_25565C550);
      swift_storeEnumTagMultiPayload();
      sub_2210F8F1C();
      sub_221108404((uint64_t)&unk_25565C590);
      v59 = (uint64_t)v85;
      sub_2212F3A14();
      sub_221014F5C(v58, &qword_25565C550);
    }
    else
    {
      sub_221014FC0(v40, v86, &qword_25565C560);
      swift_storeEnumTagMultiPayload();
      sub_2210F8F1C();
      sub_221108404((uint64_t)&unk_25565C590);
      v59 = (uint64_t)v85;
      sub_2212F3A14();
    }
    v30 = v77;
    sub_221014FC0(v59, (uint64_t)v75, &qword_25565C558);
    swift_storeEnumTagMultiPayload();
    sub_2210B43C0((uint64_t)&unk_25565C598);
    sub_2210F8FB8();
    sub_2212F3A14();
    sub_221014F5C(v59, &qword_25565C558);
    sub_221014F5C(v40, &qword_25565C560);
    v64 = (uint64_t)v93;
    v66 = v91;
    v65 = v92;
    v67 = v90;
  }
  else
  {
    v60 = v6;
    v61 = v37;
    sub_221014EB4(v38, (uint64_t)&v26[v24[5]], type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
    v62 = *((_BYTE *)v60 + v32[12]);
    v63 = *((_BYTE *)v60 + v32[13]);
    *(_QWORD *)v26 = v34;
    *((_QWORD *)v26 + 1) = v35;
    v26[16] = v36;
    *((_QWORD *)v26 + 3) = v61;
    v26[v24[6]] = v62;
    v26[v24[7]] = v63;
    v26[v24[8]] = 1;
    sub_221014EB4((uint64_t)v26, (uint64_t)v23, type metadata accessor for Fall2023TopRowContent);
    swift_storeEnumTagMultiPayload();
    sub_2210B43C0((uint64_t)&unk_25565C598);
    sub_2210F8FB8();
    swift_bridgeObjectRetain();
    v6 = v60;
    swift_bridgeObjectRetain();
    sub_2212F3A14();
    sub_221011A28((uint64_t)v26, type metadata accessor for Fall2023TopRowContent);
    v64 = (uint64_t)v93;
    v66 = v91;
    v65 = v92;
    v50 = v89;
    v67 = v90;
  }
  v68 = (uint64_t)v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v98, (uint64_t)v6 + v32[14], v66);
  sub_2210F5264(v68, *(uint64_t *)((char *)v6 + v32[10]), *(uint64_t *)((char *)v6 + v32[10] + 8), *((_BYTE *)v6 + v32[15]), v66, v65, v64);
  v69 = MEMORY[0x22766BAC4](&unk_221306290, v50);
  v70 = v100;
  sub_221088D68(v64, v50, v100);
  v71 = v99;
  v72 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
  swift_bridgeObjectRetain();
  v72(v64, v50);
  v73 = v97;
  sub_221014FC0((uint64_t)v30, v97, &qword_25565C538);
  v104[0] = v73;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16))(v64, v70, v50);
  v104[1] = v64;
  v103[0] = v96;
  v103[1] = v50;
  v101 = sub_2210F903C();
  v102 = v69;
  sub_22122F0B4((uint64_t)v104, 2, (uint64_t)v103);
  v72(v70, v50);
  sub_221014F5C((uint64_t)v30, &qword_25565C538);
  v72(v64, v50);
  sub_221014F5C(v73, &qword_25565C538);
}

uint64_t sub_2210F5264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v12;
  uint64_t v13;
  int *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;

  v12 = a4 & 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7, a1, a5);
  v14 = (int *)type metadata accessor for Sublabels(0, a5, a6, v13);
  v15 = (_QWORD *)(a7 + v14[9]);
  *v15 = a2;
  v15[1] = a3;
  *(_BYTE *)(a7 + v14[10]) = v12;
  v16 = a7 + v14[11];
  result = swift_getKeyPath();
  *(_QWORD *)v16 = result;
  *(_BYTE *)(v16 + 8) = 0;
  return result;
}

uint64_t sub_2210F52FC()
{
  unsigned __int8 v1;

  sub_2210F90CC();
  sub_2212F3798();
  return v1;
}

uint64_t sub_2210F5334()
{
  sub_2210F90CC();
  return sub_2212F37A4();
}

uint64_t type metadata accessor for Sublabels(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sublabels);
}

void sub_2210F537C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2210F49C0(*(uint64_t **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t type metadata accessor for Fall2023TopRowContent(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_25565C790);
}

uint64_t sub_2210F539C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t);
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565CB40);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565CB48);
  v5 = *(_QWORD *)(a1 + 16);
  swift_getTupleTypeMetadata3();
  v6 = sub_2212F4A94();
  MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v6);
  v7 = sub_2212F4830();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v17[-v12];
  sub_2212F38F4();
  v14 = *(_QWORD *)(a1 + 24);
  v18 = v5;
  v19 = v14;
  v20 = v2;
  sub_2212F4824();
  MEMORY[0x22766BAC4](MEMORY[0x24BDF4700], v7);
  sub_221088D68((uint64_t)v11, v7, (uint64_t)v13);
  v15 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v15(v11, v7);
  sub_221087210((uint64_t)v13, v7, a2);
  return ((uint64_t (*)(_BYTE *, uint64_t))v15)(v13, v7);
}

uint64_t sub_2210F552C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD v68[4];

  v50 = a3;
  v45 = a4;
  v52 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v44 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v51 = (uint64_t)&v41 - v8;
  v9 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = qword_255655B20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 != -1)
    swift_once();
  v13 = (id)qword_25568CA90;
  v48 = sub_2212F40D4();
  v15 = v14;
  v46 = v14;
  v49 = v16;
  v47 = v17 & 1;
  sub_2212F3F78();
  v19 = v18;
  v20 = a2;
  v22 = type metadata accessor for PrimaryLabels(0, a2, v50, v21);
  sub_221014EB4(a1 + *(int *)(v22 + 36), (uint64_t)v11, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
  sub_2212777C8();
  v24 = v23;
  v43 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29 & 1;
  v42 = sub_2212F3F3C();
  v31 = v51;
  sub_221088D68(a1 + *(int *)(v22 + 40), a2, v51);
  v32 = v48;
  v62 = v48;
  v63 = v15;
  LOBYTE(v15) = v47;
  v64 = v47;
  v65 = v49;
  v66 = v19;
  v67 = 0;
  v57 = v24;
  v58 = v26;
  v59 = v30;
  v60 = v28;
  v61 = v42;
  v68[0] = &v62;
  v68[1] = &v57;
  v33 = v44;
  v34 = v31;
  v35 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v44, v34, v20);
  v68[2] = v33;
  sub_221017C14(v32, v46, v15);
  swift_bridgeObjectRetain();
  v36 = v43;
  sub_221017C14(v43, v26, v30);
  swift_bridgeObjectRetain();
  swift_retain();
  v56[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CB40);
  v56[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CB48);
  v56[2] = v35;
  sub_22110798C((uint64_t)&unk_25565CB50);
  v53 = v37;
  sub_22110798C((uint64_t)&unk_25565CB60);
  v54 = v38;
  v55 = v50;
  sub_22122F0B4((uint64_t)v68, 3, (uint64_t)v56);
  v39 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
  v39(v51, v35);
  sub_221036880(v36, v26, v30);
  swift_release();
  swift_bridgeObjectRelease();
  sub_221036880(v48, v46, v47);
  swift_bridgeObjectRelease();
  v39((uint64_t)v33, v35);
  sub_221036880(v57, v58, v59);
  swift_release();
  swift_bridgeObjectRelease();
  sub_221036880(v62, v63, v64);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2210F5950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  int *v15;
  uint64_t result;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  v15 = (int *)type metadata accessor for PrimaryLabels(0, a8, a10, a4);
  sub_221015318(a5, a9 + v15[9], type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(a9 + v15[10], a6, a8);
  *(_BYTE *)(a9 + v15[11]) = a7;
  return result;
}

uint64_t sub_2210F59F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;

  v2 = v1 + *(int *)(a1 + 56);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_221017C08(*(_QWORD *)v2, v4);
  sub_22104359C();
  v6 = v5;
  sub_221017894(v3, v4);
  if ((v6 & 1) == 0)
    return 0;
  if (qword_255655D50 != -1)
    swift_once();
  if (byte_255661B81 != 2)
    return byte_255661B81 & 1;
  storekit_dyld_fall_2024_os_versions();
  return dyld_program_minos_at_least();
}

uint64_t sub_2210F5A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  void (*v18)(_BYTE *, uint64_t);
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C800);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  type metadata accessor for PrimaryLabels(255, v5, v6, v7);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C808);
  swift_getTupleTypeMetadata2();
  v8 = sub_2212F4A94();
  v9 = MEMORY[0x24BDF5428];
  MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v8);
  sub_2212F47C4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C810);
  swift_getTupleTypeMetadata3();
  v10 = sub_2212F4A94();
  MEMORY[0x22766BAC4](v9, v10);
  v11 = sub_2212F4830();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v20[-v16];
  sub_2212F38F4();
  v21 = v5;
  v22 = v6;
  v23 = v2;
  sub_2212F4824();
  MEMORY[0x22766BAC4](MEMORY[0x24BDF4700], v11);
  sub_221088D68((uint64_t)v15, v11, (uint64_t)v17);
  v18 = *(void (**)(_BYTE *, uint64_t))(v12 + 8);
  v18(v15, v11);
  sub_221087210((uint64_t)v17, v11, a2);
  return ((uint64_t (*)(_BYTE *, uint64_t))v18)(v17, v11);
}

uint64_t sub_2210F5C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t KeyPath;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char v73;
  _QWORD v74[3];
  uint64_t v75;

  v47 = a5;
  type metadata accessor for PrimaryLabels(255, a2, a3, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C808);
  swift_getTupleTypeMetadata2();
  v8 = sub_2212F4A94();
  MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v8);
  v9 = sub_2212F47C4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v40 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v54 = (char *)&v40 - v16;
  v18 = (int *)type metadata accessor for TopRowContent(0, a2, a3, v17);
  if ((sub_2210F59F0((uint64_t)v18) & 1) != 0 && *(_BYTE *)(a1 + v18[13]) == 1)
  {
    v53 = *(unsigned __int8 *)(a1 + v18[11]);
    KeyPath = swift_getKeyPath();
    LOBYTE(v45) = sub_2212F3ED0();
    v45 = v45;
    v46 = 0xC010000000000000;
    v19 = 0x4010000000000000;
    v20 = v74;
  }
  else
  {
    KeyPath = 0;
    v45 = 0;
    v44 = 0;
    v46 = 0;
    v19 = 2;
    v20 = &v75;
  }
  *(v20 - 32) = v19;
  v21 = sub_2212F37E0();
  MEMORY[0x24BDAC7A8](v21);
  *(&v40 - 4) = a2;
  *(&v40 - 3) = a3;
  v39 = a1;
  sub_2212F47B8();
  v22 = MEMORY[0x22766BAC4](MEMORY[0x24BDF4498], v9);
  sub_221088D68((uint64_t)v15, v9, (uint64_t)v54);
  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v15, v9);
  v24 = *(_BYTE *)(a1 + v18[12]) == 1;
  v43 = v23;
  v42 = v22;
  v41 = v9;
  if (v24)
  {
    LODWORD(v25) = sub_2212F3BAC();
    v26 = swift_getKeyPath();
    v52 = swift_getKeyPath();
    v51 = 1;
    v48 = 1;
    v25 = v25;
  }
  else
  {
    v25 = 0;
    v51 = 0;
    v26 = 0;
    v52 = 0;
    v48 = 0;
  }
  v40 = v25;
  v27 = v53;
  v65 = v53;
  v66 = KeyPath;
  v67 = 0;
  v68 = v45;
  v69 = v44;
  v70 = 0;
  v71 = v46;
  v72 = 0;
  v73 = 0;
  v74[0] = &v65;
  v28 = *(void (**)(void))(v10 + 16);
  v29 = v50;
  v30 = v41;
  v28();
  v31 = v51;
  v59 = v25;
  v60 = v51;
  v61 = v26;
  v62 = 0;
  v32 = v52;
  v63 = v52;
  v64 = v48;
  v74[1] = v29;
  v74[2] = &v59;
  LOBYTE(v39) = 0;
  v33 = v27;
  v34 = KeyPath;
  sub_2211001A0(v33, KeyPath, 0);
  sub_2211001C0(v25, v31, v26, 0, v32);
  v58[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C800);
  v58[1] = v30;
  v58[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C810);
  sub_22110029C((uint64_t)&unk_25565C818);
  v55 = v35;
  v56 = v42;
  sub_22110029C((uint64_t)&unk_25565C838);
  v57 = v36;
  sub_22122F0B4((uint64_t)v74, 3, (uint64_t)v58);
  LOBYTE(v39) = 0;
  sub_2211004B4(v53, v34, 0);
  sub_2211004D4(v40, v51, v26, 0, v52);
  v37 = v43;
  v43(v54, v30);
  sub_2211004D4(v59, v60, v61, v62, v63);
  v37(v50, v30);
  LOBYTE(v39) = v73;
  return sub_2211004B4(v65, v66, v67);
}

uint64_t sub_2210F61EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  _QWORD v62[3];

  v44 = a4;
  v47 = *(char **)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a3;
  v13 = type metadata accessor for PrimaryLabels(0, a2, a3, v12);
  v46 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v40 - v17;
  v19 = *(_QWORD *)(a1 + 8);
  v45 = *(_QWORD *)a1;
  LODWORD(v43) = *(unsigned __int8 *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 24);
  v22 = (int *)type metadata accessor for TopRowContent(0, a2, a3, v21);
  sub_221014EB4(a1 + v22[9], (uint64_t)v11, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
  (*((void (**)(char *, uint64_t, uint64_t))v47 + 2))(v8, a1 + v22[10], a2);
  sub_2210F5950(v45, v19, (char)v43, v20, (uint64_t)v11, (uint64_t)v8, *(_BYTE *)(a1 + v22[12]), a2, (uint64_t)v16, v42);
  v23 = MEMORY[0x22766BAC4](&unk_221306680, v13);
  v47 = v18;
  v42 = v23;
  sub_221088D68((uint64_t)v16, v13, (uint64_t)v18);
  v24 = *(uint64_t (**)(char *, uint64_t))(v46 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = v16;
  v45 = v13;
  v43 = v24;
  v24(v16, v13);
  if ((sub_2210F59F0((uint64_t)v22) & 1) != 0 || *(_BYTE *)(a1 + v22[13]) != 1)
  {
    v36 = 0;
    v34 = 0;
    v35 = 0;
    v29 = 0;
    v31 = 0;
    v41 = 0;
    v40 = 0;
    v26 = 2;
  }
  else
  {
    v26 = *(unsigned __int8 *)(a1 + v22[11]);
    KeyPath = swift_getKeyPath();
    LOBYTE(v35) = sub_2212F3EDC();
    sub_2212F2D48();
    v29 = v28;
    v31 = v30;
    v41 = v32;
    v40 = v33;
    j__swift_retain(KeyPath, 0);
    v34 = KeyPath;
    j_j__swift_release(KeyPath, 0);
    v35 = v35;
    v36 = 0x4024000000000000;
  }
  v37 = v45;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v16, v47, v45);
  v51 = v36;
  v52 = 0;
  v53 = v26;
  v54 = v34;
  v55 = 0;
  v56 = v35;
  v57 = v29;
  v58 = v31;
  v59 = v41;
  v60 = v40;
  v61 = 0;
  v62[0] = v16;
  v62[1] = &v51;
  sub_221100544(v36, 0, v26, v34, 0);
  v50[0] = v37;
  v50[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C808);
  v48 = v42;
  v49 = sub_221100560();
  sub_22122F0B4((uint64_t)v62, 2, (uint64_t)v50);
  sub_2211005DC(v36, 0, v26, v34, 0);
  v38 = v43;
  v43(v47, v37);
  sub_2211005DC(v51, v52, v53, v54, v55);
  return v38(v25, v37);
}

void sub_2210F6604(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v9 = a2 & 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C7D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v12 = sub_2212F49D4();
  v12[1] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565C7E0);
  sub_2210F66D4(a1, v9, a3, a4);
  sub_221014FC0((uint64_t)v12, a5, &qword_25565C7D8);
  sub_221014F5C((uint64_t)v12, &qword_25565C7D8);
}

uint64_t sub_2210F66D4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;

  v7 = a2 & 1;
  sub_221066D38(a1, a2 & 1);
  sub_221045458();
  sub_2210470E0(a1, v7);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  *(_QWORD *)(v8 + 32) = a1;
  *(_BYTE *)(v8 + 40) = v7;
  sub_221066D38(a1, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565C7E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565C560);
  sub_221108404((uint64_t)&unk_25565C7F0);
  sub_221108404((uint64_t)&unk_25565C590);
  sub_2210B43C0((uint64_t)&unk_25565C7F8);
  return sub_2212F48F0();
}

void sub_2210F6820(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  v3 = sub_2212F3840();
  MEMORY[0x24BDAC7A8](v3);
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25565C560);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter(0) + 36));
  if ((v7 & 8) != 0)
  {
    sub_2212F3834();
    sub_2212F3828();
    sub_2212F381C();
    sub_2212F3828();
    v8 = sub_2212F3858();
  }
  else if ((v7 & 6) != 0)
  {
    sub_22123B8DC();
  }
  else
  {
    swift_bridgeObjectRetain();
    v8 = sub_2212F384C();
  }
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = v11;
  v16 = &v6[v4[9]];
  sub_221277918();
  v17 = (uint64_t)&v16[*(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20)];
  v18 = _s11PriceStringOMa(0);
  __swift_storeEnumTagSinglePayload(v17, 1, 1, v18);
  *(_QWORD *)v6 = v12;
  *((_QWORD *)v6 + 1) = v13;
  v6[16] = v14 & 1;
  *((_QWORD *)v6 + 3) = v15;
  v6[v4[11]] = 0;
  v6[v4[12]] = v7 == 1;
  v6[v4[13]] = 1;
  v19 = &v6[v4[14]];
  *(_QWORD *)v19 = swift_getKeyPath();
  v19[8] = 0;
  sub_221015090((uint64_t)v6, v21, &qword_25565C560);
}

void sub_2210F6A50(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_2210F6604(*(_QWORD *)v2, *(_BYTE *)(v2 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

__n128 sub_2210F6A64@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __n128 result;
  __int128 v9;
  _OWORD v10[2];
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = sub_2212F38F4();
  sub_2210F6AD4(v1, (uint64_t)v10);
  v4 = v11;
  v5 = v12;
  v6 = v13;
  v7 = v14;
  result = (__n128)v10[0];
  v9 = v10[1];
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = 0x4014000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v6;
  *(_BYTE *)(a1 + 80) = v7;
  return result;
}

uint64_t sub_2210F6AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    KeyPath = swift_getKeyPath();
    v4 = sub_2212F3BAC() << 32;
  }
  else
  {
    KeyPath = 0;
    v4 = 0;
  }
  v5 = qword_255655B20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = (id)qword_25568CA90;
  v7 = sub_2212F40D4();
  v9 = v8;
  v11 = v10;
  v13 = v12 & 1;
  sub_2212F3F78();
  *(_QWORD *)a2 = KeyPath;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v9;
  *(_BYTE *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = v11;
  *(_QWORD *)(a2 + 48) = v14;
  *(_BYTE *)(a2 + 56) = 0;
  swift_retain();
  sub_221017C14(v7, v9, v13);
  swift_bridgeObjectRetain();
  sub_221036880(v7, v9, v13);
  swift_release();
  return swift_bridgeObjectRelease();
}

double sub_2210F6C28@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_2210F6A64(a1).n128_u64[0];
  return result;
}

uint64_t sub_2210F6C60@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  unsigned __int8 v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v2 = v1;
  v4 = type metadata accessor for Fall2023TopRowContent.SecondaryLabel(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v26 = (uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for Fall2023TopRowContent(0);
  if (*((_BYTE *)v2 + *(int *)(v9 + 28)) == 1)
    v10 = sub_2212F37D4();
  else
    v10 = sub_2212F37C8();
  v25 = v10;
  sub_2210F6E50(v2, (uint64_t)v27);
  v11 = v27[1];
  v24 = v27[0];
  v12 = v29;
  v22 = v30;
  v23 = v28;
  v13 = v31;
  v14 = v32;
  v15 = v33;
  v16 = v34;
  v17 = (uint64_t)v2 + *(int *)(v9 + 20);
  v18 = v35;
  sub_221014EB4(v17, (uint64_t)v8, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
  v19 = v26;
  sub_221014EB4((uint64_t)v8, v26, type metadata accessor for Fall2023TopRowContent.SecondaryLabel);
  *(_QWORD *)a1 = v25;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_QWORD *)(a1 + 24) = v24;
  *(_QWORD *)(a1 + 32) = v11;
  *(_BYTE *)(a1 + 40) = v23;
  *(_QWORD *)(a1 + 48) = v12;
  *(_BYTE *)(a1 + 56) = v22;
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v16;
  *(_BYTE *)(a1 + 96) = v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565C8C0);
  sub_221014EB4(v19, a1 + *(int *)(v20 + 48), type metadata accessor for Fall2023TopRowContent.SecondaryLabel);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_221100544(v13, v14, v15, v16, v18);
  sub_221011A28((uint64_t)v8, type metadata accessor for Fall2023TopRowContent.SecondaryLabel);
  sub_221011A28(v19, type metadata accessor for Fall2023TopRowContent.SecondaryLabel);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_2211005DC(v13, v14, v15, v16, v18);
}

uint64_t sub_2210F6E50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  int *v8;
  char v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;

  v5 = *a1;
  v4 = a1[1];
  v6 = *((_BYTE *)a1 + 16);
  v7 = a1[3];
  v8 = (int *)type metadata accessor for Fall2023TopRowContent(0);
  v9 = *((_BYTE *)a1 + v8[7]);
  if (*((_BYTE *)a1 + v8[8]) == 1)
  {
    v10 = *((unsigned __int8 *)a1 + v8[6]);
    KeyPath = swift_getKeyPath();
    j__swift_retain(KeyPath, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    j_j__swift_release(KeyPath, 0);
    v12 = 1;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = 0;
    KeyPath = 0;
    v10 = 2;
  }
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v12;
  *(_QWORD *)(a2 + 56) = v10;
  *(_QWORD *)(a2 + 64) = KeyPath;
  *(_BYTE *)(a2 + 72) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_221100544(0, v12, v10, KeyPath, 0);
  sub_2211005DC(0, v12, v10, KeyPath, 0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2210F6F80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v3 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  MEMORY[0x24BDAC7A8](v3);
  sub_221014EB4(v1, (uint64_t)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_2212777C8();
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  result = sub_2212F3F3C();
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_2210F702C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 + *(int *)(v3 + 36) + 8);
  (*(void (**)(char *))(v2 + 16))(v5);
  if (v7)
  {
    v8 = &v5[*(int *)(a1 + 44)];
    v9 = *(_QWORD *)v8;
    v10 = v8[8];
    sub_221017C08(*(_QWORD *)v8, v10);
    sub_22104359C();
    LOBYTE(v7) = v11;
    sub_221017894(v9, v10);
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  return v7 & 1;
}

uint64_t sub_2210F70F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[5];
  _QWORD v40[2];

  v38 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64);
  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v6 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v8 + 24);
  v31[1] = v10;
  v32 = v11;
  type metadata accessor for Sublabels.SublabelDivider(255, v6, v11, v12);
  type metadata accessor for TertiaryContent(255);
  swift_getTupleTypeMetadata2();
  v13 = sub_2212F4A94();
  v14 = sub_2212F3A20();
  v15 = MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v13);
  v16 = sub_22110062C();
  v40[0] = v15;
  v40[1] = v16;
  v35 = v14;
  v34 = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v14, v40);
  v39[1] = v6;
  v39[2] = v14;
  v39[3] = v11;
  v39[4] = v34;
  v33 = sub_2212F3B70();
  v17 = sub_2212F4674();
  v36 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v31 - v21;
  v23 = v10;
  v24 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v23, v37, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v24, a1);
  v25 = v4;
  v26 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v27 = swift_allocObject();
  v28 = v32;
  *(_QWORD *)(v27 + 16) = v6;
  *(_QWORD *)(v27 + 24) = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v27 + v26, (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_2212F465C();
  v39[0] = MEMORY[0x22766BAC4](MEMORY[0x24BDEFC70], v33);
  MEMORY[0x22766BAC4](MEMORY[0x24BDF3F50], v17, v39);
  sub_221088D68((uint64_t)v20, v17, (uint64_t)v22);
  v29 = *(void (**)(char *, uint64_t))(v36 + 8);
  v29(v20, v17);
  sub_221087210((uint64_t)v22, v17, v38);
  return ((uint64_t (*)(char *, uint64_t))v29)(v22, v17);
}

uint64_t sub_2210F73B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  int *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  char v64;
  _QWORD v65[4];
  _QWORD v66[3];

  v5 = a4;
  v57 = a5;
  v9 = type metadata accessor for Sublabels.SublabelDivider(255, a3, a4, a4);
  v10 = type metadata accessor for TertiaryContent(255);
  v11 = v9;
  swift_getTupleTypeMetadata2();
  v12 = sub_2212F4A94();
  v56 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v55 = (char *)&v48 - v14;
  v53 = (int *)v10;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (uint64_t *)((char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15);
  v54 = (uint64_t)&v48 - v18;
  v19 = sub_2212F3888();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_2212F3A20();
  v59 = *(_QWORD *)(v23 - 8);
  v60 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v58 = (char *)&v48 - v24;
  v26 = type metadata accessor for Sublabels(0, a3, v5, v25);
  LOBYTE(v5) = sub_2210F702C(v26);
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v52 = a1;
  v51(v22, a1, v19);
  if ((v5 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
LABEL_5:
    v49 = v11;
    v50 = MEMORY[0x22766BAC4](&unk_2213065E0, v11);
    sub_221088D68(v50, v11, v31);
    v32 = (uint64_t *)(a2 + *(int *)(v26 + 36));
    v34 = *v32;
    v33 = v32[1];
    v35 = a2;
    v36 = v53;
    v37 = (uint64_t)v17 + v53[5];
    v51((char *)v37, v52, v19);
    __swift_storeEnumTagSinglePayload(v37, 0, 1, v19);
    v38 = *(_BYTE *)(v35 + *(int *)(v26 + 40));
    *v17 = v34;
    v17[1] = v33;
    *((_BYTE *)v17 + v36[6]) = v38;
    v39 = v36[7];
    swift_bridgeObjectRetain();
    *(_QWORD *)((char *)v17 + v39) = sub_2212F3F3C();
    v40 = (char *)v17 + v36[8];
    *(_QWORD *)v40 = swift_getKeyPath();
    v40[8] = 0;
    v41 = v54;
    sub_221015318((uint64_t)v17, v54, type metadata accessor for TertiaryContent);
    sub_221014EB4(v41, (uint64_t)v17, type metadata accessor for TertiaryContent);
    v62 = v17;
    v66[0] = v49;
    v66[1] = v36;
    v65[2] = v50;
    sub_2210B43C0((uint64_t)&unk_25565C8D0);
    v65[3] = v42;
    v43 = v55;
    sub_22122F0B4((uint64_t)&v61, 2, (uint64_t)v66);
    sub_221011A28((uint64_t)v17, type metadata accessor for TertiaryContent);
    MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v12);
    sub_22110062C();
    v30 = (uint64_t)v58;
    sub_22113B0A4();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v43, v12);
    sub_221011A28(v41, type metadata accessor for TertiaryContent);
    goto LABEL_6;
  }
  v27 = sub_2210CA16C();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  if (!v27)
    goto LABEL_5;
  KeyPath = swift_getKeyPath();
  v29 = swift_getKeyPath();
  v61 = KeyPath;
  LOBYTE(v62) = 0;
  v63 = v29;
  v64 = 0;
  MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v12);
  sub_22110062C();
  v30 = (uint64_t)v58;
  sub_22113B11C();
  swift_release();
  swift_release();
LABEL_6:
  v44 = MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v12);
  v45 = sub_22110062C();
  v65[0] = v44;
  v65[1] = v45;
  v46 = v60;
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v60, v65);
  sub_221087210(v30, v46, v57);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 8))(v30, v46);
}

void sub_2210F7830(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v30 = a1;
  v1 = sub_2212F3D2C();
  v26 = *(_QWORD *)(v1 - 8);
  v27 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2212F48CC();
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CB88);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CB90);
  v28 = *(_QWORD *)(v10 - 8);
  v29 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CB98);
  MEMORY[0x24BDAC7A8](v25);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212F48C0();
  v15 = sub_2212F45C0();
  v16 = objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
  v17 = MEMORY[0x227669B98](v16);
  v31 = v15;
  v32 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656A60);
  sub_22110029C((uint64_t)&qword_255656A68);
  sub_221108404((uint64_t)&qword_255656A88);
  v18 = sub_2212F4644();
  LOBYTE(v15) = sub_2212F3ED0();
  v19 = v24;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v24);
  v20 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v20 = v18;
  v20[8] = v15;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  sub_2212F3D08();
  v21 = sub_221107A1C();
  sub_2212F4308();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v27);
  sub_221014F5C((uint64_t)v9, &qword_25565CB88);
  if (qword_255655B48 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v31 = v7;
  v32 = v21;
  swift_getOpaqueTypeConformance2();
  v22 = v29;
  sub_2212F438C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v22);
  sub_2212F3330();
  sub_221014F5C((uint64_t)v14, &qword_25565CB98);
}

void sub_2210F7B70(uint64_t a1@<X8>)
{
  sub_2210F7830(a1);
}

uint64_t sub_2210F7B80(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 & 1;
  sub_221066D38(a1, a2 & 1);
  sub_221045458();
  v10 = v9;
  sub_2210470E0(a1, v8);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = v10 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_221014EB4(v12, (uint64_t)v7, type metadata accessor for SubscriptionStoreCopyWriter);
      v14 = *((_QWORD *)v7 + 6);
      sub_221011A28((uint64_t)v7, type metadata accessor for SubscriptionStoreCopyWriter);
      if (v14)
        break;
      v12 += v13;
      if (!--v11)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_2210F7CA8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char v16;
  char v17;
  _BYTE v19[16];

  v9 = a4 & 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CB70);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CB78);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_221017C08(a3, v9);
  sub_22104359C();
  v17 = v16;
  sub_221017894(a3, v9);
  if ((v17 & 1) == 0)
    return __swift_storeEnumTagSinglePayload(a5, 1, 1, v13);
  v19[8] = a2 & 1;
  v19[0] = v9 != 0;
  if ((sub_2210F7B80(a1, a2 & 1) & 1) == 0)
    return __swift_storeEnumTagSinglePayload(a5, 1, 1, v13);
  sub_2210F7E44(v12);
  sub_221014FC0((uint64_t)v12, (uint64_t)v15, &qword_25565CB70);
  sub_221014F5C((uint64_t)v12, &qword_25565CB70);
  sub_221015090((uint64_t)v15, a5, &qword_25565CB78);
  return __swift_storeEnumTagSinglePayload(a5, 0, 1, v13);
}

uint64_t sub_2210F7E44@<X0>(char *a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v2 = (int *)type metadata accessor for TertiaryContent(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v23 - v6;
  v8 = sub_2212F48CC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v23 - v13;
  sub_2212F48C0();
  v15 = (uint64_t)v5 + v2[5];
  v16 = sub_2212F3888();
  __swift_storeEnumTagSinglePayload(v15, 1, 1, v16);
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v5 + v2[6]) = 1;
  v17 = v2[7];
  *(_QWORD *)((char *)v5 + v17) = sub_2212F3F3C();
  v18 = (char *)v5 + v2[8];
  *(_QWORD *)v18 = swift_getKeyPath();
  v18[8] = 0;
  sub_221015318((uint64_t)v5, (uint64_t)v7, type metadata accessor for TertiaryContent);
  v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v19(v12, v14, v8);
  sub_221014EB4((uint64_t)v7, (uint64_t)v5, type metadata accessor for TertiaryContent);
  v19(a1, v12, v8);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CB80);
  sub_221014EB4((uint64_t)v5, (uint64_t)&a1[*(int *)(v20 + 48)], type metadata accessor for TertiaryContent);
  sub_221011A28((uint64_t)v7, type metadata accessor for TertiaryContent);
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v14, v8);
  sub_221011A28((uint64_t)v5, type metadata accessor for TertiaryContent);
  return ((uint64_t (*)(char *, uint64_t))v21)(v12, v8);
}

uint64_t sub_2210F8030@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2210F7CA8(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

void sub_2210F8050(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CBC0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CBC8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CBD0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2212F37C8();
  v12 = type metadata accessor for TertiaryContent(0);
  v13 = *((_BYTE *)v1 + *(int *)(v12 + 24));
  v14 = 0x4024000000000000;
  if (!v13)
    v14 = 0;
  *(_QWORD *)v4 = v11;
  *((_QWORD *)v4 + 1) = v14;
  v4[16] = v13 ^ 1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CBD8);
  sub_2210F8228(v1, (uint64_t)&v4[*(int *)(v15 + 44)]);
  v16 = *(uint64_t *)((char *)v1 + *(int *)(v12 + 28));
  KeyPath = swift_getKeyPath();
  sub_221014FC0((uint64_t)v4, (uint64_t)v7, &qword_25565CBC0);
  v18 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  *v18 = KeyPath;
  v18[1] = v16;
  swift_retain();
  sub_221014F5C((uint64_t)v4, &qword_25565CBC0);
  LODWORD(v16) = sub_2212F3B94();
  sub_221014FC0((uint64_t)v7, (uint64_t)v10, &qword_25565CBC8);
  *(_DWORD *)&v10[*(int *)(v8 + 36)] = v16;
  sub_221014F5C((uint64_t)v7, &qword_25565CBC8);
  sub_221015090((uint64_t)v10, v20, &qword_25565CBD0);
}

void sub_2210F8228(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;

  v47 = a2;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CBE0);
  MEMORY[0x24BDAC7A8](v43);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CBE8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CBF0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v42 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CBF8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v44 = (uint64_t)&v42 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(qword_25565C9E8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v46 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v42 - v22;
  v24 = type metadata accessor for TertiaryContent(0);
  v25 = (uint64_t)a1 + *(int *)(v24 + 20);
  v45 = v23;
  sub_221014FC0(v25, (uint64_t)v23, qword_25565C9E8);
  v26 = a1[1];
  if (v26)
  {
    sub_2210F868C(*a1, v26, (uint64_t)a1, (uint64_t)v7);
    sub_221014FC0((uint64_t)v7, (uint64_t)v11, &qword_25565CBE8);
    *(_QWORD *)&v11[*(int *)(v8 + 36)] = 0x3FF0000000000000;
    sub_221014F5C((uint64_t)v7, &qword_25565CBE8);
    sub_221015090((uint64_t)v11, (uint64_t)v13, &qword_25565CBF0);
    sub_221014FC0((uint64_t)v13, (uint64_t)v4, &qword_25565CBF0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25565CC10);
    sub_221107AC4();
    sub_221107CF4();
    sub_2212F3A14();
    sub_221014F5C((uint64_t)v13, &qword_25565CBF0);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CC00);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v27);
    v28 = v44;
    sub_221015090((uint64_t)v17, v44, &qword_25565CBF8);
    v30 = (uint64_t)v46;
    v29 = v47;
    v31 = (uint64_t)v45;
  }
  else
  {
    v32 = (char *)a1 + *(int *)(v24 + 32);
    v33 = *(_QWORD *)v32;
    v34 = v32[8];
    sub_221017C08(*(_QWORD *)v32, v34);
    sub_22104359C();
    v36 = v35;
    sub_221017894(v33, v34);
    v30 = (uint64_t)v46;
    v29 = v47;
    v28 = v44;
    v31 = (uint64_t)v45;
    if ((v36 & 1) != 0)
    {
      KeyPath = swift_getKeyPath();
      *((_QWORD *)v4 + 1) = 0;
      *((_QWORD *)v4 + 2) = 0;
      *(_QWORD *)v4 = KeyPath;
      v4[24] = 0;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25565CC10);
      sub_221107AC4();
      sub_221107CF4();
      sub_2212F3A14();
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CC00);
      v39 = v28;
      v40 = 0;
    }
    else
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CC00);
      v39 = v28;
      v40 = 1;
    }
    __swift_storeEnumTagSinglePayload(v39, v40, 1, v38);
  }
  sub_221014FC0(v31, v30, qword_25565C9E8);
  sub_221014FC0(v28, (uint64_t)v17, &qword_25565CBF8);
  sub_221014FC0(v30, v29, qword_25565C9E8);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CC08);
  sub_221014FC0((uint64_t)v17, v29 + *(int *)(v41 + 48), &qword_25565CBF8);
  sub_221014F5C(v28, &qword_25565CBF8);
  sub_221014F5C(v31, qword_25565C9E8);
  sub_221014F5C((uint64_t)v17, &qword_25565CBF8);
  sub_221014F5C(v30, qword_25565C9E8);
}

void sub_2210F868C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v32 = a3;
  v36 = a4;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CC80);
  MEMORY[0x24BDAC7A8](v35);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CC60);
  MEMORY[0x24BDAC7A8](v31);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CC40);
  v10 = MEMORY[0x24BDAC7A8](v34);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v31 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CC30);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CC70);
  MEMORY[0x24BDAC7A8](v33);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a1;
  v38 = a2;
  v39 = 0;
  v40 = MEMORY[0x24BEE4AF8];
  v20 = qword_255655B48;
  swift_bridgeObjectRetain();
  if (v20 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_2212F438C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v32 + *(int *)(type metadata accessor for TertiaryContent(0) + 32);
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_221017C08(*(_QWORD *)v21, v23);
  sub_22104359C();
  v25 = v24;
  sub_221017894(v22, v23);
  if ((v25 & 1) != 0)
  {
    KeyPath = swift_getKeyPath();
    v27 = sub_2212F49D4();
    v29 = v28;
    sub_221014FC0((uint64_t)v19, (uint64_t)v9, &qword_25565CC70);
    v30 = (uint64_t *)&v9[*(int *)(v31 + 36)];
    *v30 = v27;
    v30[1] = v29;
    sub_221014FC0((uint64_t)v9, (uint64_t)&v12[*(int *)(v34 + 36)], &qword_25565CC60);
    *((_QWORD *)v12 + 1) = 0;
    *((_QWORD *)v12 + 2) = 0;
    *(_QWORD *)v12 = KeyPath;
    v12[24] = 0;
    sub_221014F5C((uint64_t)v9, &qword_25565CC60);
    sub_221015090((uint64_t)v12, (uint64_t)v14, &qword_25565CC40);
    sub_221014FC0((uint64_t)v14, (uint64_t)v7, &qword_25565CC40);
    swift_storeEnumTagMultiPayload();
    sub_221107BD4();
    sub_221107C70();
    sub_2212F3A14();
    sub_221014F5C((uint64_t)v14, &qword_25565CC40);
  }
  else
  {
    sub_221014FC0((uint64_t)v19, (uint64_t)v7, &qword_25565CC70);
    swift_storeEnumTagMultiPayload();
    sub_221107BD4();
    sub_221107C70();
    sub_2212F3A14();
  }
  sub_221015090((uint64_t)v17, v36, &qword_25565CC30);
  sub_221014F5C((uint64_t)v19, &qword_25565CC70);
}

double sub_2210F8A48@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v4;
  uint64_t v5;

  sub_2211FBE70(&v4);
  v2 = v5;
  result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = v2;
  return result;
}

void sub_2210F8A8C(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t *v18;
  _DWORD v19[4];
  uint64_t v20;
  uint64_t v21;

  v20 = a2;
  v21 = a4;
  v19[3] = a3 & 1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CCF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CD00);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CD08);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2212F402C();
  KeyPath = swift_getKeyPath();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CD10);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, a1, v17);
  v18 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  *v18 = KeyPath;
  v18[1] = v15;
  sub_22110819C();
  sub_2212F4140();
  sub_221014F5C((uint64_t)v7, &qword_25565CCF8);
  LODWORD(a1) = sub_2212F3B94();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v14, v11, v8);
  *(_DWORD *)&v14[*(int *)(v12 + 36)] = a1;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_255655B48 != -1)
    swift_once();
  sub_221108238();
  swift_bridgeObjectRetain();
  sub_2212F438C();
  swift_bridgeObjectRelease();
  sub_221014F5C((uint64_t)v14, &qword_25565CD08);
}

void sub_2210F8CB4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_2210F8A8C(a1, *(_QWORD *)v2, *(_BYTE *)(v2 + 8), a2);
}

void sub_2210F8CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CD30);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CD38);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565CD40);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v6, a1, v11);
  v12 = (uint64_t *)&v6[*(int *)(v4 + 36)];
  *v12 = KeyPath;
  v12[1] = a2;
  swift_retain();
  LODWORD(a2) = sub_2212F3B94();
  sub_221014FC0((uint64_t)v6, (uint64_t)v9, &qword_25565CD30);
  *(_DWORD *)&v9[*(int *)(v7 + 36)] = a2;
  sub_221014F5C((uint64_t)v6, &qword_25565CD30);
  if (qword_255655B48 != -1)
    swift_once();
  sub_2211082E4();
  swift_bridgeObjectRetain();
  sub_2212F438C();
  swift_bridgeObjectRelease();
  sub_221014F5C((uint64_t)v9, &qword_25565CD38);
}

void sub_2210F8E6C(uint64_t a1)
{
  uint64_t *v1;

  sub_2210F8CC0(a1, *v1);
}

uint64_t sub_2210F8E74()
{
  swift_getKeyPath();
  sub_2212F4194();
  return swift_release();
}

void sub_2210F8EE4()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_28_13() & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_2210F8F04()
{
  OUTLINED_FUNCTION_25_12();
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_2210F8F1C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_25565C570;
  if (!qword_25565C570)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C550);
    sub_221108404((uint64_t)&unk_25565C578);
    v3 = v2;
    sub_221108404((uint64_t)&unk_25565C588);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25565C570);
  }
  return result;
}

unint64_t sub_2210F8FB8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_25565C5A0;
  if (!qword_25565C5A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C558);
    v2 = sub_2210F8F1C();
    sub_221108404((uint64_t)&unk_25565C590);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v1, v4);
    atomic_store(result, (unint64_t *)&qword_25565C5A0);
  }
  return result;
}

unint64_t sub_2210F903C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_25565C5A8;
  if (!qword_25565C5A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565C538);
    sub_2210B43C0((uint64_t)&unk_25565C598);
    v3[0] = v2;
    v3[1] = sub_2210F8FB8();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25565C5A8);
  }
  return result;
}

unint64_t sub_2210F90CC()
{
  unint64_t result;

  result = qword_25565C5B0[0];
  if (!qword_25565C5B0[0])
  {
    result = MEMORY[0x22766BAC4](&unk_221306258, &_s43SubscriptionPickerOptionUsesLayoutGuidesKeyON);
    atomic_store(result, qword_25565C5B0);
  }
  return result;
}

ValueMetadata *_s43SubscriptionPickerOptionUsesLayoutGuidesKeyOMa()
{
  return &_s43SubscriptionPickerOptionUsesLayoutGuidesKeyON;
}

uint64_t sub_2210F9118()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2210F91A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
    *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
    v12 = ((unint64_t)v4 + v6 + 31) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)a2 + v6 + 31) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(_QWORD *)v13;
    v15 = *(_BYTE *)(v13 + 8);
    swift_bridgeObjectRetain();
    sub_221017C08(v14, v15);
    *(_QWORD *)v12 = v14;
    *(_BYTE *)(v12 + 8) = v15;
  }
  return v4;
}

uint64_t sub_2210F9290(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64) + a1;
  swift_bridgeObjectRelease();
  return sub_221017894(*(_QWORD *)((v4 + 31) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v4 + 31) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_2210F92E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  LOBYTE(v5) = *(_BYTE *)(v12 + 8);
  swift_bridgeObjectRetain();
  sub_221017C08(v13, v5);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = v5;
  return a1;
}

uint64_t sub_2210F9384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  LOBYTE(v7) = *(_BYTE *)(v12 + 8);
  sub_221017C08(*(_QWORD *)v12, v7);
  v14 = *(_QWORD *)v11;
  v15 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = v7;
  sub_221017894(v14, v15);
  return a1;
}

uint64_t sub_2210F9444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = v13;
  return a1;
}

uint64_t sub_2210F94CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  LOBYTE(v12) = *(_BYTE *)(v12 + 8);
  v14 = *(_QWORD *)v11;
  v15 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = v12;
  sub_221017894(v14, v15);
  return a1;
}

uint64_t sub_2210F9578(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFE)
    {
      v15 = *(_QWORD *)(((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      if ((v15 + 1) >= 2)
        return v15;
      else
        return 0;
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    v9 = ((v8 + 31) & 0xFFFFFFF8) + 9;
    v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2210F9600 + 4 * byte_221305E15[v13]))();
  }
}

void sub_2210F9698(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64) + 31) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v6 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (v6 < a2)
  {
    v11 = ~v6 + a2;
    v12 = (~(_BYTE)v6 + a2);
    if (v7 >= 4)
      v13 = v11;
    else
      v13 = v12;
    bzero(a1, v7);
    if ((_DWORD)v7 == 1)
      *a1 = v13;
    else
      *(_DWORD *)a1 = v13;
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_2210F97B0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2210F9830);
}

void sub_2210F97B8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2210F97C0);
  JUMPOUT(0x2210F9830);
}

void sub_2210F9804()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2210F9830);
}

void sub_2210F980C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2210F9830);
}

uint64_t sub_2210F9814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!(_DWORD)a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFE)
  {
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x2210F9820);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = a2;
LABEL_6:
    JUMPOUT(0x2210F9830);
  }
  return __swift_storeEnumTagSinglePayload(v6, a2, a3, a4);
}

uint64_t sub_2210F9848()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(319);
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2210F98F4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  void (*v44)(unint64_t, unint64_t, uint64_t);
  _WORD *v45;
  _WORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void (*v58)(unint64_t, unint64_t, uint64_t);
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  unsigned int v64;
  unint64_t v65;
  unint64_t v66;
  void (*v67)(unint64_t, unint64_t, uint64_t);
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  size_t v71;
  size_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t result;
  char v86;
  unint64_t v87;
  void (*v88)(unint64_t, unint64_t, uint64_t);
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  void (*v94)(unint64_t, unint64_t, uint64_t);
  void (*v95)(unint64_t, unint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  void (*v117)(uint64_t, unint64_t, uint64_t);
  void (*v118)(unint64_t, unint64_t, uint64_t);
  _QWORD *v119;

  v6 = sub_2212F5124();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = sub_2212F5058();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12 | v8 | 7;
  v116 = v8 + 16;
  v14 = *(_QWORD *)(v7 + 64);
  v15 = v13 + v14;
  v16 = (v13 + v14 + ((v9 + 16) & ~v9)) & ~v13;
  v17 = *(_QWORD *)(v11 + 64) + v8;
  v18 = v14 + 7;
  v19 = (v14 + 7 + ((v17 + ((v12 + 16) & ~v12)) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8;
  v20 = v19 + 8;
  v21 = v19 + 9;
  if (v21 <= v20)
    v21 = v20;
  if (v21 <= 2)
    v22 = 2;
  else
    v22 = v21;
  v23 = v22 + v16;
  if (v23 + 1 > (v18 & 0xFFFFFFFFFFFFFFF8) + 16)
    v24 = v23 + 1;
  else
    v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v24 <= 0x10)
    v25 = 16;
  else
    v25 = v24;
  v26 = *(_QWORD *)(a3 + 16);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_DWORD *)(v27 + 80);
  v29 = v28;
  if ((v13 | v28) == 7 && ((*(_DWORD *)(v11 + 80) | v8 | v28) & 0x100000) == 0)
  {
    v30 = v25 + 1;
    v31 = ((v25 + 1 + v13) & ~v13) + v25 + 1 + v28;
    if (((*(_QWORD *)(v27 + 64) + ((v31 + (((v12 | v9) + 32) & ~v13)) & ~v29) + 10) & 0xFFFFFFFFFFFFFFF8) + 9 <= 0x18)
    {
      v104 = v15;
      v100 = v12 + 16;
      v101 = *(_QWORD *)(v10 - 8);
      v98 = v20;
      v102 = v17;
      v103 = v10;
      v106 = v18;
      v114 = v22;
      v109 = v31;
      v110 = *(_QWORD *)(v26 - 8);
      v107 = *(_QWORD *)(v27 + 64);
      v108 = a1;
      v32 = ~v13;
      v33 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v33;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      *(_QWORD *)(a1 + 24) = a2[3];
      v111 = v26;
      v112 = a1 + v13 + 32;
      v115 = (_QWORD *)(v112 & ~v13);
      v113 = (uint64_t)a2 + v13 + 32;
      v119 = (_QWORD *)(v113 & ~v13);
      v34 = *((unsigned __int8 *)v119 + v25);
      v35 = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v34 >= 3)
      {
        if (v35 <= 3)
          v36 = v35;
        else
          v36 = 4;
        __asm { BR              X11 }
      }
      v39 = v35;
      v40 = v6;
      v105 = ~v9;
      v99 = ~v12;
      if (v34 == 2)
      {
        v41 = (_QWORD *)(v112 & ~v13);
        v48 = v39;
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v115, v119, v6);
        v49 = v48;
        *(_OWORD *)(((unint64_t)v115 + v106) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v119 + v106) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v115 + v48) = 2;
      }
      else
      {
        v41 = (_QWORD *)(v112 & ~v13);
        if (v34 == 1)
        {
          v96 = v39;
          *v115 = *v119;
          *(_QWORD *)((v112 & ~v13) + 8) = *(_QWORD *)((v113 & ~v13) + 8);
          v42 = ((unint64_t)v115 + v116) & v105;
          v43 = ((unint64_t)v119 + v116) & v105;
          v44 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
          swift_bridgeObjectRetain();
          v95 = v44;
          v44(v42, v43, v40);
          v45 = (_WORD *)((v104 + v42) & v32);
          v46 = (_WORD *)((v104 + v43) & v32);
          switch(*((_BYTE *)v46 + v114))
          {
            case 0:
              v51 = 0;
              *v45 = *v46;
              break;
            case 1:
              *(_BYTE *)v45 = *(_BYTE *)v46;
              v51 = 1;
              break;
            case 2:
              *(_QWORD *)v45 = *(_QWORD *)v46;
              *(_QWORD *)(((v104 + v42) & v32) + 8) = *(_QWORD *)(((v104 + v43) & v32) + 8);
              v52 = ((unint64_t)v45 + v100) & v99;
              v53 = ((unint64_t)v46 + v100) & v99;
              v94 = *(void (**)(unint64_t, unint64_t, uint64_t))(v101 + 16);
              swift_bridgeObjectRetain();
              v94(v52, v53, v103);
              v54 = (v102 + v52) & v105;
              v55 = (v102 + v53) & v105;
              v95(v54, v55, v40);
              *(_QWORD *)((v106 + v54) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v106 + v55) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v45 + v98) = *((_BYTE *)v46 + v98);
              v51 = 2;
              break;
            case 3:
              *(_QWORD *)v45 = *(_QWORD *)v46;
              *(_QWORD *)(((v104 + v42) & v32) + 8) = *(_QWORD *)(((v104 + v43) & v32) + 8);
              v56 = ((unint64_t)v45 + v100) & v99;
              v57 = ((unint64_t)v46 + v100) & v99;
              v58 = *(void (**)(unint64_t, unint64_t, uint64_t))(v101 + 16);
              swift_bridgeObjectRetain();
              v58(v56, v57, v103);
              v59 = (v102 + v56) & v105;
              v60 = (v102 + v57) & v105;
              v95(v59, v60, v40);
              *(_QWORD *)((v106 + v59) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v106 + v60) & 0xFFFFFFFFFFFFF8);
              v51 = 3;
              break;
            default:
              if (v114 <= 3)
                v47 = v114;
              else
                v47 = 4;
              __asm { BR              X12 }
              return result;
          }
          v49 = v96;
          *((_BYTE *)v45 + v114) = v51;
          v41 = (_QWORD *)(v112 & ~v13);
          *((_BYTE *)v115 + v96) = 1;
        }
        else
        {
          *v115 = *v119;
          *(_QWORD *)((v112 & ~v13) + 8) = *(_QWORD *)((v113 & ~v13) + 8);
          *((_BYTE *)v115 + v39) = 0;
          v50 = v39;
          swift_bridgeObjectRetain();
          v49 = v50;
        }
      }
      v61 = ~v29;
      v62 = (_QWORD *)(((v112 | v13) + v30) & v32);
      v63 = (_QWORD *)(((v113 | v13) + v30) & v32);
      v64 = *((unsigned __int8 *)v63 + v49);
      if (v64 > 2)
      {
        memcpy((void *)(((v112 | v13) + v30) & v32), (const void *)(((v113 | v13) + v30) & v32), v30);
      }
      else
      {
        if (v64 != 2)
        {
          if (v64 == 1)
          {
            v97 = v49;
            *v62 = *v63;
            *(_QWORD *)((((v112 | v13) + v30) & v32) + 8) = *(_QWORD *)((((v113 | v13) + v30) & v32) + 8);
            v65 = ((unint64_t)v62 + v116) & v105;
            v66 = ((unint64_t)v63 + v116) & v105;
            v67 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
            swift_bridgeObjectRetain();
            v67(v65, v66, v40);
            v68 = (v104 + v65) & v32;
            v69 = (v104 + v66) & v32;
            switch(*(_BYTE *)(v69 + v114))
            {
              case 0:
                v86 = 0;
                *(_WORD *)v68 = *(_WORD *)v69;
                break;
              case 1:
                *(_BYTE *)v68 = *(_BYTE *)v69;
                v86 = 1;
                break;
              case 2:
                *(_QWORD *)v68 = *(_QWORD *)v69;
                *(_QWORD *)(v68 + 8) = *(_QWORD *)(v69 + 8);
                v87 = (v100 + v68) & v99;
                v88 = *(void (**)(unint64_t, unint64_t, uint64_t))(v101 + 16);
                swift_bridgeObjectRetain();
                v117 = (void (*)(uint64_t, unint64_t, uint64_t))v67;
                v89 = (v100 + v69) & v99;
                v88(v87, v89, v103);
                v90 = (v102 + v87) & v105;
                v41 = v115;
                v117(v90, (v102 + v89) & v105, v40);
                *(_QWORD *)((v106 + v90) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v106 + ((v102 + v89) & v105)) & 0xFFFFFFFFFFFFF8);
                *(_BYTE *)(v68 + v98) = *(_BYTE *)(v69 + v98);
                v86 = 2;
                break;
              case 3:
                *(_QWORD *)v68 = *(_QWORD *)v69;
                *(_QWORD *)(v68 + 8) = *(_QWORD *)(v69 + 8);
                v91 = (v100 + v68) & v99;
                v92 = (v100 + v69) & v99;
                v118 = *(void (**)(unint64_t, unint64_t, uint64_t))(v101 + 16);
                swift_bridgeObjectRetain();
                v118(v91, v92, v103);
                v93 = (v102 + v91) & v105;
                v67(v93, (v102 + v92) & v105, v40);
                *(_QWORD *)((v106 + v93) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v106 + ((v102 + v92) & v105)) & 0xFFFFFFFFFFFFF8);
                v86 = 3;
                break;
              default:
                if (v106 <= 3)
                  v70 = v106;
                else
                  v70 = 4;
                __asm { BR              X12 }
                return result;
            }
            v75 = v110;
            v74 = v111;
            v38 = v108;
            v77 = v109;
            *(_BYTE *)(v68 + v114) = v86;
            *((_BYTE *)v62 + v97) = 1;
            v76 = v107;
            goto LABEL_49;
          }
          v76 = v107;
          *v62 = *v63;
          v62[1] = v63[1];
          *((_BYTE *)v62 + v49) = 0;
          swift_bridgeObjectRetain();
          v75 = v110;
          v74 = v111;
LABEL_48:
          v38 = v108;
          v77 = v109;
LABEL_49:
          v78 = ((unint64_t)v41 + v77) & v61;
          v79 = ((unint64_t)v119 + v77) & v61;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v75 + 16))(v78, v79, v74);
          v80 = (_BYTE *)(v78 + v76);
          v81 = v79 + v76;
          *v80 = *(_BYTE *)(v79 + v76);
          v80[1] = *(_BYTE *)(v79 + v76 + 1);
          v80[2] = *(_BYTE *)(v79 + v76 + 2);
          v82 = (v78 + v76 + 10) & 0xFFFFFFFFFFFFFFF8;
          v83 = (v81 + 10) & 0xFFFFFFFFFFFFFFF8;
          v84 = *(_QWORD *)v83;
          LOBYTE(v78) = *(_BYTE *)(v83 + 8);
          sub_221017C08(*(_QWORD *)v83, v78);
          *(_QWORD *)v82 = v84;
          *(_BYTE *)(v82 + 8) = v78;
          return v38;
        }
        v71 = ((v112 | v13) + v30) & v32;
        v72 = ((v113 | v13) + v30) & v32;
        v73 = v49;
        (*(void (**)(size_t, size_t, uint64_t))(v7 + 16))(v71, v72, v40);
        *(_OWORD *)(((unint64_t)v62 + v106) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v63 + v106) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v62 + v73) = 2;
      }
      v75 = v110;
      v74 = v111;
      v76 = v107;
      goto LABEL_48;
    }
  }
  v37 = *a2;
  *(_QWORD *)a1 = *a2;
  v38 = v37 + (((v13 | v29) + 16) & ~(v13 | v29));
  swift_retain();
  return v38;
}

uint64_t sub_2210FA214(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v50 = sub_2212F5124();
  v3 = *(_QWORD *)(v50 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = sub_2212F5058();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v4 | v7 | 7;
  v9 = a1 + v8 + 32;
  v10 = v9 & ~v8;
  v11 = v4 + 16;
  v12 = *(_QWORD *)(v3 + 64);
  v46 = v5;
  v47 = v8 + v12;
  v13 = (v8 + v12 + ((v4 + 16) & ~v4)) & ~v8;
  v43 = v7 + 16;
  v45 = v6;
  v44 = *(_QWORD *)(v6 + 64) + v4;
  v14 = v12 + 7;
  v15 = (v14 + ((v44 + ((v7 + 16) & ~v7)) & ~v4)) & 0xFFFFFFFFFFFFFFF8;
  v16 = v15 + 8;
  v17 = v15 + 9;
  if (v17 <= v16)
    v17 = v16;
  if (v17 <= 2)
    v18 = 2;
  else
    v18 = v17;
  v19 = v18 + v13;
  v20 = (v14 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 + 1 > v20)
    v21 = v19 + 1;
  else
    v21 = v20;
  if (v21 <= 0x10)
    v22 = 16;
  else
    v22 = v21;
  v23 = *(unsigned __int8 *)(v10 + v22);
  if (v23 >= 3)
  {
    if (v22 <= 3)
      v24 = v22;
    else
      v24 = 4;
    __asm { BR              X13 }
  }
  v25 = ~v8;
  v48 = ~v4;
  v42 = ~v7;
  if (v23 == 2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v9 & ~v8, v50);
  }
  else if (v23 == 1)
  {
    swift_bridgeObjectRelease();
    v26 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v26((v11 + v10) & v48, v50);
    v27 = (v47 + ((v11 + v10) & v48)) & v25;
    v28 = *(unsigned __int8 *)(v27 + v18);
    if (v28 >= 4)
    {
      if (v18 <= 3)
        v29 = v18;
      else
        v29 = 4;
      __asm { BR              X12 }
    }
    if (v28 >= 2)
    {
      swift_bridgeObjectRelease();
      v30 = (v43 + v27) & v42;
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v30, v46);
      v26((v44 + v30) & v48, v50);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v31 = ((v9 | v8) + v22 + 1) & v25;
  v32 = *(unsigned __int8 *)(v31 + v22);
  if (v32 <= 2)
  {
    if (v32 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(((v9 | v8) + v22 + 1) & v25, v50);
    }
    else if (v32 == 1)
    {
      swift_bridgeObjectRelease();
      v33 = (v11 + v31) & v48;
      v34 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      v34(v33, v50);
      v35 = (v47 + v33) & v25;
      v36 = *(unsigned __int8 *)(v35 + v18);
      if (v36 >= 4)
      {
        if (v18 <= 3)
          v37 = v18;
        else
          v37 = 4;
        __asm { BR              X12 }
      }
      if (v36 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))((v43 + v35) & v42, v46);
        v34((v44 + ((v43 + v35) & v42)) & v48, v50);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v38 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v39 = (v22 + 1 + v10 + *(unsigned __int8 *)(v38 + 80) + ((v22 + 1 + v8) & v25)) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  (*(void (**)(unint64_t))(v38 + 8))(v39);
  v40 = (*(_QWORD *)(v38 + 64) + v39 + 10) & 0xFFFFFFFFFFFFFFF8;
  return sub_221017894(*(_QWORD *)v40, *(_BYTE *)(v40 + 8));
}

uint64_t sub_2210FA648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  void (*v26)(void);
  unint64_t v27;
  _WORD *v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  unsigned int v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t);
  _WORD *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t result;
  char v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  void (*v64)(unint64_t, unint64_t, uint64_t);
  unint64_t v65;
  uint64_t v66;
  void (*v67)(unint64_t, unint64_t, uint64_t);
  void (*v68)(unint64_t, unint64_t, uint64_t);
  void (*v69)(void);
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  void (*v82)(unint64_t, unint64_t, uint64_t);
  uint64_t v83;
  void (*v84)(unint64_t);
  _QWORD *v85;
  unint64_t v86;
  uint64_t v87;
  _QWORD *v88;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v87 = sub_2212F5124();
  v6 = *(_QWORD *)(v87 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v75 = sub_2212F5058();
  v8 = *(_QWORD *)(v75 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 | v9 | 7;
  v81 = v10 + 32 + a1;
  v85 = (_QWORD *)(v81 & ~v10);
  v83 = v10 + 32 + a2;
  v76 = v7 + 16;
  v11 = *(_QWORD *)(v6 + 64);
  v77 = v10 + v11;
  v12 = (v10 + v11 + ((v7 + 16) & ~v7)) & ~v10;
  v72 = v9 + 16;
  v73 = v8;
  v74 = *(_QWORD *)(v8 + 64) + v7;
  v13 = v11 + 7;
  v14 = (v11 + 7 + ((v74 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;
  v16 = v14 + 9;
  v70 = v15;
  if (v16 <= v15)
    v16 = v15;
  if (v16 <= 2)
    v16 = 2;
  v86 = v16;
  v17 = v16 + v12;
  v79 = v13;
  if (v17 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
    v18 = v17 + 1;
  else
    v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 <= 0x10)
    v19 = 16;
  else
    v19 = v18;
  v88 = (_QWORD *)(v83 & ~v10);
  v20 = *((unsigned __int8 *)v88 + v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20 >= 3)
  {
    if (v19 <= 3)
      v21 = v19;
    else
      v21 = 4;
    __asm { BR              X11 }
  }
  v22 = ~v10;
  v78 = ~v7;
  v71 = ~v9;
  if (v20 == 2)
  {
    v23 = (_QWORD *)(v81 & ~v10);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(v85, v88, v87);
    *(_OWORD *)(((unint64_t)v85 + v79) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v88 + v79) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)v85 + v19) = 2;
    v29 = v86;
  }
  else
  {
    v23 = (_QWORD *)(v81 & ~v10);
    if (v20 == 1)
    {
      *v85 = *v88;
      *(_QWORD *)((v81 & ~v10) + 8) = *(_QWORD *)((v83 & ~v10) + 8);
      v24 = ((unint64_t)v85 + v76) & v78;
      v25 = ((unint64_t)v88 + v76) & v78;
      v26 = *(void (**)(void))(v6 + 16);
      swift_bridgeObjectRetain();
      v69 = v26;
      ((void (*)(unint64_t, unint64_t, uint64_t))v26)(v24, v25, v87);
      v27 = (v77 + v24) & v22;
      v28 = (_WORD *)((v77 + v25) & v22);
      v29 = v86;
      switch(*((_BYTE *)v28 + v86))
      {
        case 0:
          v31 = 0;
          *(_WORD *)v27 = *v28;
          break;
        case 1:
          *(_BYTE *)v27 = *(_BYTE *)v28;
          v31 = 1;
          break;
        case 2:
          *(_QWORD *)v27 = *(_QWORD *)v28;
          *(_QWORD *)(v27 + 8) = *(_QWORD *)(((v77 + v25) & v22) + 8);
          v32 = ((unint64_t)v28 + v72) & v71;
          v67 = *(void (**)(unint64_t, unint64_t, uint64_t))(v73 + 16);
          swift_bridgeObjectRetain();
          v67((v72 + v27) & v71, v32, v75);
          v29 = v86;
          v69();
          *(_QWORD *)((v79 + ((v74 + ((v72 + v27) & v71)) & v78)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v79 + ((v74 + v32) & v78)) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v27 + v70) = *((_BYTE *)v28 + v70);
          v31 = 2;
          break;
        case 3:
          *(_QWORD *)v27 = *(_QWORD *)v28;
          *(_QWORD *)(v27 + 8) = *(_QWORD *)(((v77 + v25) & v22) + 8);
          v33 = ((unint64_t)v28 + v72) & v71;
          v68 = *(void (**)(unint64_t, unint64_t, uint64_t))(v73 + 16);
          swift_bridgeObjectRetain();
          v34 = (v72 + v27) & v71;
          v68(v34, v33, v75);
          v29 = v86;
          v35 = (v74 + v34) & v78;
          v36 = (v74 + v33) & v78;
          ((void (*)(uint64_t, unint64_t, uint64_t))v69)(v35, v36, v87);
          *(_QWORD *)((v79 + v35) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v79 + v36) & 0xFFFFFFFFFFFFF8);
          v31 = 3;
          break;
        default:
          if (v86 <= 3)
            v30 = v86;
          else
            v30 = 4;
          __asm { BR              X12 }
          return result;
      }
      *(_BYTE *)(v27 + v29) = v31;
      *((_BYTE *)v85 + v19) = 1;
    }
    else
    {
      v29 = v86;
      *v85 = *v88;
      *(_QWORD *)((v81 & ~v10) + 8) = *(_QWORD *)((v83 & ~v10) + 8);
      *((_BYTE *)v85 + v19) = 0;
      swift_bridgeObjectRetain();
    }
  }
  v37 = (_QWORD *)(((v81 | v10) + v19 + 1) & v22);
  v38 = (_QWORD *)(((v83 | v10) + v19 + 1) & v22);
  v39 = *((unsigned __int8 *)v38 + v19);
  if (v39 > 2)
  {
    memcpy((void *)(((v81 | v10) + v19 + 1) & v22), (const void *)(((v83 | v10) + v19 + 1) & v22), v19 + 1);
LABEL_42:
    v46 = a3;
    goto LABEL_43;
  }
  if (v39 == 2)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(((v81 | v10) + v19 + 1) & v22, ((v83 | v10) + v19 + 1) & v22, v87);
    *(_OWORD *)(((unint64_t)v37 + v79) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v38 + v79) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)v37 + v19) = 2;
    goto LABEL_42;
  }
  if (v39 != 1)
  {
    *v37 = *v38;
    *(_QWORD *)((((v81 | v10) + v19 + 1) & v22) + 8) = *(_QWORD *)((((v83 | v10) + v19 + 1) & v22) + 8);
    *((_BYTE *)v37 + v19) = 0;
    swift_bridgeObjectRetain();
    goto LABEL_42;
  }
  *v37 = *v38;
  *(_QWORD *)((((v81 | v10) + v19 + 1) & v22) + 8) = *(_QWORD *)((((v83 | v10) + v19 + 1) & v22) + 8);
  v40 = ((unint64_t)v37 + v76) & v78;
  v41 = ((unint64_t)v38 + v76) & v78;
  v42 = *(void (**)(unint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v84 = v42;
  ((void (*)(unint64_t, unint64_t, uint64_t))v42)(v40, v41, v87);
  v43 = (_WORD *)((v77 + v40) & v22);
  v44 = (v77 + v41) & v22;
  switch(*(_BYTE *)(v44 + v29))
  {
    case 0:
      v59 = 0;
      *v43 = *(_WORD *)v44;
      break;
    case 1:
      *(_BYTE *)v43 = *(_BYTE *)v44;
      v59 = 1;
      break;
    case 2:
      *(_QWORD *)v43 = *(_QWORD *)v44;
      *(_QWORD *)(((v77 + v40) & v22) + 8) = *(_QWORD *)(v44 + 8);
      v60 = ((unint64_t)v43 + v72) & v71;
      v82 = *(void (**)(unint64_t, unint64_t, uint64_t))(v73 + 16);
      swift_bridgeObjectRetain();
      v82(v60, (v72 + v44) & v71, v75);
      v29 = v86;
      v61 = (v74 + v60) & v78;
      v84(v61);
      *(_QWORD *)((v79 + v61) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v79 + ((v74 + ((v72 + v44) & v71)) & v78)) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v43 + v70) = *(_BYTE *)(v44 + v70);
      v59 = 2;
      break;
    case 3:
      *(_QWORD *)v43 = *(_QWORD *)v44;
      *(_QWORD *)(((v77 + v40) & v22) + 8) = *(_QWORD *)(v44 + 8);
      v62 = ((unint64_t)v43 + v72) & v71;
      v63 = (v72 + v44) & v71;
      v64 = *(void (**)(unint64_t, unint64_t, uint64_t))(v73 + 16);
      swift_bridgeObjectRetain();
      v64(v62, v63, v75);
      v29 = v86;
      v65 = (v74 + v62) & v78;
      v66 = (v74 + v63) & v78;
      ((void (*)(unint64_t, uint64_t, uint64_t))v84)(v65, v66, v87);
      *(_QWORD *)((v79 + v65) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v79 + v66) & 0xFFFFFFFFFFFFF8);
      v59 = 3;
      break;
    default:
      if (v29 <= 3)
        v45 = v29;
      else
        v45 = 4;
      __asm { BR              X12 }
      return result;
  }
  v46 = a3;
  v23 = v85;
  *((_BYTE *)v43 + v29) = v59;
  *((_BYTE *)v37 + v19) = 1;
LABEL_43:
  v47 = *(_QWORD *)(*(_QWORD *)(v46 + 16) - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = ((v19 + 1 + v10) & v22) + v19 + 1 + v48;
  v50 = ((unint64_t)v23 + v49) & ~v48;
  v51 = ((unint64_t)v88 + v49) & ~v48;
  (*(void (**)(uint64_t, unint64_t))(v47 + 16))(v50, v51);
  v52 = *(_QWORD *)(v47 + 64);
  v53 = (_BYTE *)(v50 + v52);
  v54 = (_BYTE *)(v51 + v52);
  *v53 = *v54;
  v53[1] = v54[1];
  v53[2] = v54[2];
  v55 = (unint64_t)(v53 + 10) & 0xFFFFFFFFFFFFFFF8;
  v56 = (unint64_t)(v54 + 10) & 0xFFFFFFFFFFFFFFF8;
  v57 = *(_QWORD *)v56;
  LOBYTE(v51) = *(_BYTE *)(v56 + 8);
  sub_221017C08(*(_QWORD *)v56, v51);
  *(_QWORD *)v55 = v57;
  *(_BYTE *)(v55 + 8) = v51;
  return a1;
}

uint64_t sub_2210FAEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  unint64_t v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void (*v42)(unint64_t, unint64_t, uint64_t);
  _WORD *v43;
  _WORD *v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  void (*v54)(unint64_t, unint64_t, uint64_t);
  unint64_t v55;
  unint64_t v56;
  size_t v57;
  _QWORD *v58;
  _QWORD *v59;
  unsigned int v60;
  unsigned int v61;
  void (*v62)(unint64_t, uint64_t);
  unint64_t v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(unint64_t, uint64_t);
  unint64_t v73;
  unsigned int v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  size_t v92;
  unint64_t v93;
  size_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t result;
  void (*v104)(unint64_t, unint64_t, uint64_t);
  void (*v105)(unint64_t, unint64_t, uint64_t);
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  void (*v118)(uint64_t, uint64_t, uint64_t);
  void (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v124 = sub_2212F5124();
  v6 = *(_QWORD *)(v124 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v114 = sub_2212F5058();
  v8 = *(_QWORD *)(v114 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 | v9 | 7;
  v11 = v10 + 32 + a1;
  v12 = ~v10;
  v13 = v11 & ~v10;
  v14 = v10 + 32 + a2;
  v15 = v14 & ~v10;
  v125 = ~v10;
  v120 = v15;
  v121 = a3;
  v113 = v8;
  if (v13 != v15)
  {
    v115 = v7 + 16;
    v16 = *(_QWORD *)(v6 + 64);
    v17 = (v10 + ((v7 + 16) & ~v7) + v16) & v12;
    v110 = v9 + 16;
    v112 = *(_QWORD *)(v8 + 64) + v7;
    v117 = v16;
    v18 = (v16 + 7 + ((v112 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    v19 = v18 + 8;
    v20 = v18 + 9;
    v106 = v19;
    if (v20 <= v19)
      v20 = v19;
    if (v20 <= 2)
      v20 = 2;
    v123 = v20;
    v21 = (v17 | 1) + v20;
    v108 = v16 + 7;
    if (v21 <= ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
      v21 = ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v21 <= 0x10)
      v22 = 16;
    else
      v22 = v21;
    v23 = *(unsigned __int8 *)(v13 + v22);
    if (v23 >= 3)
    {
      if (v22 <= 3)
        v24 = v22;
      else
        v24 = 4;
      __asm { BR              X13 }
    }
    v122 = ~v7;
    v109 = ~v9;
    v107 = v10 + 32 + a2;
    if (v23 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11 & ~v10, v124);
    }
    else if (v23 == 1)
    {
      swift_bridgeObjectRelease();
      v33 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v33((v115 + v13) & v122, v124);
      v34 = (((v115 + v13) & v122) + v10 + v117) & v125;
      v35 = *(unsigned __int8 *)(v34 + v123);
      if (v35 >= 4)
      {
        if (v123 <= 3)
          v36 = v123;
        else
          v36 = 4;
        __asm { BR              X12 }
      }
      if (v35 >= 2)
      {
        swift_bridgeObjectRelease();
        v37 = (v110 + v34) & v109;
        (*(void (**)(unint64_t, uint64_t))(v113 + 8))(v37, v114);
        v33((v112 + v37) & v122, v124);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v38 = *(unsigned __int8 *)(v15 + v22);
    if (v38 >= 3)
    {
      if (v22 <= 3)
        v39 = v22;
      else
        v39 = 4;
      __asm { BR              X12 }
    }
    if (v38 == 2)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v11 & ~v10, v15, v124);
      *(_OWORD *)(((v13 | 7) + v117) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((v15 | 7) + v117) & 0xFFFFFFFFFFFFF8);
      *(_BYTE *)(v13 + v22) = 2;
    }
    else
    {
      if (v38 == 1)
      {
        *(_QWORD *)v13 = *(_QWORD *)v15;
        *(_QWORD *)((v11 & ~v10) + 8) = *(_QWORD *)(v15 + 8);
        v40 = (v115 + v13) & v122;
        v41 = (v115 + v15) & v122;
        v42 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
        swift_bridgeObjectRetain();
        v105 = v42;
        v42(v40, v41, v124);
        v43 = (_WORD *)((v40 + v10 + v117) & v125);
        v44 = (_WORD *)((v41 + v10 + v117) & v125);
        v45 = v123;
        switch(*((_BYTE *)v44 + v123))
        {
          case 0:
            v47 = 0;
            *v43 = *v44;
            break;
          case 1:
            *(_BYTE *)v43 = *(_BYTE *)v44;
            v47 = 1;
            break;
          case 2:
            *(_QWORD *)v43 = *(_QWORD *)v44;
            *(_QWORD *)(((v40 + v10 + v117) & v125) + 8) = *(_QWORD *)(((v41 + v10 + v117) & v125) + 8);
            v48 = ((unint64_t)v43 + v110) & v109;
            v49 = ((unint64_t)v44 + v110) & v109;
            v104 = *(void (**)(unint64_t, unint64_t, uint64_t))(v113 + 16);
            swift_bridgeObjectRetain();
            v104(v48, v49, v114);
            v50 = (v112 + v48) & v122;
            v51 = (v112 + v49) & v122;
            v105(v50, v51, v124);
            v45 = v123;
            *(_QWORD *)((v108 + v50) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v108 + v51) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v43 + v106) = *((_BYTE *)v44 + v106);
            v47 = 2;
            break;
          case 3:
            *(_QWORD *)v43 = *(_QWORD *)v44;
            *(_QWORD *)(((v40 + v10 + v117) & v125) + 8) = *(_QWORD *)(((v41 + v10 + v117) & v125) + 8);
            v52 = ((unint64_t)v43 + v110) & v109;
            v53 = ((unint64_t)v44 + v110) & v109;
            v54 = *(void (**)(unint64_t, unint64_t, uint64_t))(v113 + 16);
            swift_bridgeObjectRetain();
            v54(v52, v53, v114);
            v55 = (v112 + v52) & v122;
            v56 = (v112 + v53) & v122;
            v105(v55, v56, v124);
            v45 = v123;
            *(_QWORD *)((v108 + v55) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v108 + v56) & 0xFFFFFFFFFFFFF8);
            v47 = 3;
            break;
          default:
            if (v123 <= 3)
              v46 = v123;
            else
              v46 = 4;
            __asm { BR              X12 }
            return result;
        }
        v12 = ~v10;
        v14 = v107;
        *((_BYTE *)v43 + v45) = v47;
        *(_BYTE *)(v13 + v22) = 1;
        goto LABEL_57;
      }
      *(_QWORD *)v13 = *(_QWORD *)v15;
      *(_QWORD *)((v11 & ~v10) + 8) = *(_QWORD *)(v15 + 8);
      *(_BYTE *)(v13 + v22) = 0;
      swift_bridgeObjectRetain();
    }
    v12 = ~v10;
    v14 = v107;
    goto LABEL_57;
  }
  v25 = *(_QWORD *)(v6 + 64);
  v26 = *(_QWORD *)(v8 + 64);
  v122 = ~v7;
  v115 = v7 + 16;
  v117 = v25;
  v109 = ~v9;
  v110 = v9 + 16;
  v112 = v26 + v7;
  v27 = v25 + 7;
  v28 = (v25 + 7 + ((v26 + v7 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v29 = v28 + 8;
  v30 = v28 + 9;
  v106 = v29;
  if (v30 <= v29)
    v30 = v29;
  v31 = 2;
  if (v30 > 2)
    v31 = v30;
  v123 = v31;
  v32 = ((v10 + ((v7 + 16) & ~v7) + v25) & v12 | 1) + v31;
  v108 = v25 + 7;
  if (v32 <= (v27 & 0xFFFFFFFFFFFFFFF8) + 16)
    v32 = (v27 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v32 <= 0x10)
    v22 = 16;
  else
    v22 = v32;
LABEL_57:
  v57 = v22 + 1;
  v58 = (_QWORD *)(((v11 | v10) + v22 + 1) & v12);
  v59 = (_QWORD *)(((v14 | v10) + v22 + 1) & v12);
  v60 = *((unsigned __int8 *)v58 + v22);
  v61 = *((unsigned __int8 *)v59 + v22);
  if (v60 > 2)
  {
    if (v61 <= 2)
    {
      if (v61 == 2)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(((v11 | v10) + v22 + 1) & v12, ((v14 | v10) + v22 + 1) & v12, v124);
        v12 = ~v10;
        *(_OWORD *)(((unint64_t)v58 + v108) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v59 + v108) & 0xFFFFFFFFFFFFF8);
        v76 = 2;
      }
      else
      {
        if (v61 != 1)
        {
LABEL_105:
          *v58 = *v59;
          v58[1] = v59[1];
          *((_BYTE *)v58 + v22) = 0;
          swift_bridgeObjectRetain();
          goto LABEL_107;
        }
        *v58 = *v59;
        *(_QWORD *)((((v11 | v10) + v22 + 1) & v12) + 8) = *(_QWORD *)((((v14 | v10) + v22 + 1) & v12) + 8);
        v66 = ((unint64_t)v58 + v115) & v122;
        v67 = ((unint64_t)v59 + v115) & v122;
        v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
        swift_bridgeObjectRetain();
        v116 = v68;
        v68(v66, v67, v124);
        v69 = (v117 + v10 + v66) & v125;
        v70 = (v117 + v10 + v67) & v125;
        switch(*(_BYTE *)(v70 + v123))
        {
          case 0:
LABEL_109:
            v84 = 0;
            *(_WORD *)v69 = *(_WORD *)v70;
            break;
          case 1:
LABEL_110:
            *(_BYTE *)v69 = *(_BYTE *)v70;
            v84 = 1;
            break;
          case 2:
LABEL_111:
            *(_QWORD *)v69 = *(_QWORD *)v70;
            *(_QWORD *)(v69 + 8) = *(_QWORD *)(v70 + 8);
            v85 = (v110 + v69) & v109;
            v111 = (v110 + v70) & v109;
            v118 = *(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16);
            swift_bridgeObjectRetain();
            v118(v85, v111, v114);
            v86 = (v112 + v85) & v122;
            v116(v86, (v112 + v111) & v122, v124);
            *(_QWORD *)((v108 + v86) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v108 + ((v112 + v111) & v122)) & 0xFFFFFFFFFFFFF8);
            *(_BYTE *)(v69 + v106) = *(_BYTE *)(v70 + v106);
            v84 = 2;
            break;
          case 3:
LABEL_112:
            *(_QWORD *)v69 = *(_QWORD *)v70;
            *(_QWORD *)(v69 + 8) = *(_QWORD *)(v70 + 8);
            v87 = (v110 + v69) & v109;
            v88 = (v110 + v70) & v109;
            v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16);
            swift_bridgeObjectRetain();
            v119(v87, v88, v114);
            v89 = (v112 + v87) & v122;
            v116(v89, (v112 + v88) & v122, v124);
            *(_QWORD *)((v108 + v89) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v108 + ((v112 + v88) & v122)) & 0xFFFFFFFFFFFFF8);
            v84 = 3;
            break;
          default:
            if (v123 <= 3)
              v71 = v123;
            else
              v71 = 4;
            __asm { BR              X12 }
            return result;
        }
        v12 = ~v10;
        *(_BYTE *)(v69 + v123) = v84;
        v76 = 1;
      }
      *((_BYTE *)v58 + v22) = v76;
      goto LABEL_115;
    }
LABEL_90:
    memcpy(v58, v59, v57);
LABEL_107:
    v12 = ~v10;
    goto LABEL_115;
  }
  if (v61 > 2)
  {
    if (v60 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(((v11 | v10) + v22 + 1) & v12, v124);
    }
    else if (v60 == 1)
    {
      swift_bridgeObjectRelease();
      v72 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
      v72(((unint64_t)v58 + v115) & v122, v124);
      v73 = (v117 + v10 + (((unint64_t)v58 + v115) & v122)) & v125;
      v74 = *(unsigned __int8 *)(v73 + v123);
      if (v74 >= 4)
      {
        if (v123 <= 3)
          v75 = v123;
        else
          v75 = 4;
        __asm { BR              X12 }
      }
      if (v74 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v113 + 8))((v110 + v73) & v109, v114);
        v72((v112 + ((v110 + v73) & v109)) & v122, v124);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    goto LABEL_90;
  }
  if (v58 != v59)
  {
    if (v60 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(((v11 | v10) + v22 + 1) & v12, v124);
    }
    else if (v60 == 1)
    {
      swift_bridgeObjectRelease();
      v62 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
      v62(((unint64_t)v58 + v115) & v122, v124);
      v63 = (v117 + v10 + (((unint64_t)v58 + v115) & v122)) & v125;
      v64 = *(unsigned __int8 *)(v63 + v123);
      if (v64 >= 4)
      {
        if (v123 <= 3)
          v65 = v123;
        else
          v65 = 4;
        __asm { BR              X12 }
      }
      if (v64 >= 2)
      {
        swift_bridgeObjectRelease();
        v77 = (v110 + v63) & v109;
        (*(void (**)(unint64_t, uint64_t))(v113 + 8))(v77, v114);
        v62((v112 + v77) & v122, v124);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v78 = *((unsigned __int8 *)v59 + v22);
    if (v78 >= 3)
    {
      if (v22 <= 3)
        v79 = v22;
      else
        v79 = 4;
      __asm { BR              X12 }
    }
    if (v78 == 2)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(v58, v59, v124);
      *(_OWORD *)(((unint64_t)v58 + v108) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v59 + v108) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v58 + v22) = 2;
      goto LABEL_107;
    }
    if (v78 == 1)
    {
      *v58 = *v59;
      v58[1] = v59[1];
      v80 = ((unint64_t)v58 + v115) & v122;
      v81 = ((unint64_t)v59 + v115) & v122;
      v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      swift_bridgeObjectRetain();
      v116 = v82;
      v82(v80, v81, v124);
      v69 = (v117 + v10 + v80) & v125;
      v70 = (v117 + v10 + v81) & v125;
      switch(*(_BYTE *)(v70 + v123))
      {
        case 0:
          goto LABEL_109;
        case 1:
          goto LABEL_110;
        case 2:
          goto LABEL_111;
        case 3:
          goto LABEL_112;
        default:
          if (v123 <= 3)
            v83 = v123;
          else
            v83 = 4;
          __asm { BR              X12 }
          return result;
      }
    }
    goto LABEL_105;
  }
LABEL_115:
  v90 = *(_QWORD *)(*(_QWORD *)(v121 + 16) - 8);
  v91 = *(unsigned __int8 *)(v90 + 80);
  v92 = ((v57 + v10) & v12) + v57 + v91;
  v93 = (v92 + v13) & ~v91;
  v94 = (v92 + v120) & ~v91;
  (*(void (**)(unint64_t, size_t))(v90 + 24))(v93, v94);
  v95 = *(_QWORD *)(v90 + 64);
  v96 = (_BYTE *)(v93 + v95);
  v97 = (_BYTE *)(v94 + v95);
  *v96 = *v97;
  v96[1] = v97[1];
  v96[2] = v97[2];
  v98 = (unint64_t)(v96 + 10) & 0xFFFFFFFFFFFFFFF8;
  v99 = (unint64_t)(v97 + 10) & 0xFFFFFFFFFFFFFFF8;
  v100 = *(_QWORD *)v99;
  LOBYTE(v94) = *(_BYTE *)(v99 + 8);
  sub_221017C08(*(_QWORD *)v99, v94);
  v101 = *(_QWORD *)v98;
  v102 = *(_BYTE *)(v98 + 8);
  *(_QWORD *)v98 = v100;
  *(_BYTE *)(v98 + 8) = v94;
  sub_221017894(v101, v102);
  return a1;
}

_OWORD *sub_2210FBDAC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _WORD *v31;
  _WORD *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  unsigned int v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _WORD *v48;
  _WORD *v49;
  uint64_t v50;
  _OWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  unint64_t v62;
  unint64_t v63;
  char v64;
  _OWORD *result;
  char v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _WORD *v74;
  _WORD *v75;
  void (*v76)(void);
  unint64_t v77;
  uint64_t v78;
  void (*v79)(unint64_t, unint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _WORD *v88;
  _WORD *v89;
  uint64_t v90;
  _OWORD *v92;
  uint64_t v93;
  uint64_t v94;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v93 = sub_2212F5124();
  v6 = *(_QWORD *)(v93 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v84 = sub_2212F5058();
  v8 = *(_QWORD *)(v84 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 | v9 | 7;
  v92 = a1;
  v11 = (unint64_t)a1 + v10 + 32;
  v12 = (_OWORD *)(v11 & ~v10);
  v13 = (unint64_t)a2 + v10 + 32;
  v14 = (_OWORD *)(v13 & ~v10);
  v15 = v7 + 16;
  v16 = *(_QWORD *)(v6 + 64);
  v87 = v10 + v16;
  v17 = (v10 + v16 + ((v7 + 16) & ~v7)) & ~v10;
  v81 = v9 + 16;
  v83 = v8;
  v82 = *(_QWORD *)(v8 + 64) + v7;
  v18 = v16 + 7;
  v19 = (v16 + 7 + ((v82 + ((v9 + 16) & ~v9)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v20 = v19 + 8;
  v21 = v19 + 9;
  v77 = v20;
  if (v21 <= v20)
    v21 = v20;
  if (v21 <= 2)
    v22 = 2;
  else
    v22 = v21;
  v23 = v22 + v17;
  if (v23 + 1 > (v18 & 0xFFFFFFFFFFFFFFF8) + 16)
    v24 = v23 + 1;
  else
    v24 = (v18 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v24 <= 0x10)
    v25 = 16;
  else
    v25 = v24;
  v26 = *((unsigned __int8 *)v14 + v25);
  if (v26 >= 3)
  {
    if (v25 <= 3)
      v27 = v25;
    else
      v27 = 4;
    __asm { BR              X13 }
  }
  v28 = ~v10;
  v90 = ~v7;
  v80 = ~v9;
  v94 = v11 & ~v10;
  v78 = v7 + 16;
  if (v26 == 2)
  {
    v34 = v22;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(v11 & ~v10, v13 & ~v10, v93);
    v22 = v34;
    *(_OWORD *)(((unint64_t)v12 + v18) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v14 + v18) & 0xFFFFFFFFFFFFF8);
    v35 = 2;
  }
  else if (v26 == 1)
  {
    *v12 = *v14;
    v29 = ((unint64_t)v12 + v15) & v90;
    v30 = ((unint64_t)v14 + v15) & v90;
    v85 = v22;
    v76 = *(void (**)(void))(v6 + 32);
    ((void (*)(unint64_t, unint64_t, uint64_t))v76)(v29, v30, v93);
    v22 = v85;
    v31 = (_WORD *)((v87 + v29) & v28);
    v32 = (_WORD *)((v87 + v30) & v28);
    switch(*((_BYTE *)v32 + v85))
    {
      case 0:
        v36 = 0;
        *v31 = *v32;
        break;
      case 1:
        *(_BYTE *)v31 = *(_BYTE *)v32;
        v36 = 1;
        break;
      case 2:
        *(_OWORD *)v31 = *(_OWORD *)v32;
        v73 = ((unint64_t)v31 + v81) & v80;
        v74 = v31;
        (*(void (**)(void))(v83 + 32))();
        v76();
        v31 = v74;
        v22 = v85;
        *(_QWORD *)((v18 + ((v82 + v73) & v90)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v18
                                                                                   + ((v82
                                                                                     + (((unint64_t)v32 + v81) & v80)) & v90)) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v74 + v77) = *((_BYTE *)v32 + v77);
        v36 = 2;
        break;
      case 3:
        *(_OWORD *)v31 = *(_OWORD *)v32;
        v37 = ((unint64_t)v32 + v81) & v80;
        v38 = ((unint64_t)v31 + v81) & v80;
        v75 = v31;
        (*(void (**)(void))(v83 + 32))();
        v39 = (v82 + v38) & v90;
        v40 = (v82 + v37) & v90;
        ((void (*)(unint64_t, unint64_t, uint64_t))v76)(v39, v40, v93);
        v31 = v75;
        v22 = v85;
        *(_QWORD *)((v18 + v39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v18 + v40) & 0xFFFFFFFFFFFFF8);
        v36 = 3;
        break;
      default:
        if (v85 <= 3)
          v33 = v85;
        else
          v33 = 4;
        __asm { BR              X12 }
        return result;
    }
    v12 = (_OWORD *)(v11 & ~v10);
    *((_BYTE *)v31 + v22) = v36;
    v35 = 1;
  }
  else
  {
    v35 = 0;
    *v12 = *v14;
  }
  *((_BYTE *)v12 + v25) = v35;
  v41 = v25 + 1;
  v42 = (_OWORD *)(((v11 | v10) + v25 + 1) & v28);
  v43 = (_OWORD *)(((v13 | v10) + v25 + 1) & v28);
  v44 = *((unsigned __int8 *)v43 + v25);
  if (v44 > 2)
  {
    memcpy((void *)(((v11 | v10) + v25 + 1) & v28), v43, v25 + 1);
LABEL_43:
    v51 = v92;
    v52 = a3;
    goto LABEL_44;
  }
  if (v44 == 2)
  {
    (*(void (**)(unint64_t, _OWORD *, uint64_t))(v6 + 32))(((v11 | v10) + v25 + 1) & v28, v43, v93);
    *(_OWORD *)(((unint64_t)v42 + v18) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v43 + v18) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)v42 + v25) = 2;
    goto LABEL_43;
  }
  if (v44 != 1)
  {
    *v42 = *v43;
    *((_BYTE *)v42 + v25) = 0;
    goto LABEL_43;
  }
  *v42 = *v43;
  v45 = ((unint64_t)v42 + v78) & v90;
  v46 = ((unint64_t)v43 + v78) & v90;
  v86 = v22;
  v79 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v79(v45, v46, v93);
  v47 = v86;
  v48 = (_WORD *)((v87 + v45) & v28);
  v49 = (_WORD *)((v87 + v46) & v28);
  switch(*((_BYTE *)v49 + v86))
  {
    case 0:
      v66 = 0;
      *v48 = *v49;
      break;
    case 1:
      *(_BYTE *)v48 = *(_BYTE *)v49;
      v66 = 1;
      break;
    case 2:
      *(_OWORD *)v48 = *(_OWORD *)v49;
      v67 = ((unint64_t)v48 + v81) & v80;
      v88 = (_WORD *)((v87 + v45) & v28);
      (*(void (**)(unint64_t))(v83 + 32))(v67);
      v68 = (v82 + v67) & v90;
      v69 = (v82 + (((unint64_t)v49 + v81) & v80)) & v90;
      v79(v68, v69, v93);
      v47 = v86;
      v48 = v88;
      *(_QWORD *)((v18 + v68) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v18 + v69) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v88 + v77) = *((_BYTE *)v49 + v77);
      v66 = 2;
      break;
    case 3:
      *(_OWORD *)v48 = *(_OWORD *)v49;
      v70 = ((unint64_t)v48 + v81) & v80;
      v71 = ((unint64_t)v49 + v81) & v80;
      v89 = (_WORD *)((v87 + v45) & v28);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v83 + 32))(v70, v71, v84);
      v72 = (v82 + v70) & v90;
      v79(v72, (v82 + v71) & v90, v93);
      v47 = v86;
      v48 = v89;
      *(_QWORD *)((v18 + v72) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v18 + ((v82 + v71) & v90)) & 0xFFFFFFFFFFFFF8);
      v66 = 3;
      break;
    default:
      if (v86 <= 3)
        v50 = v86;
      else
        v50 = 4;
      __asm { BR              X12 }
      return result;
  }
  v51 = v92;
  v52 = a3;
  *((_BYTE *)v48 + v47) = v66;
  *((_BYTE *)v42 + v25) = 1;
LABEL_44:
  v53 = (v41 + v10) & v28;
  v54 = *(_QWORD *)(*(_QWORD *)(v52 + 16) - 8);
  v55 = *(unsigned __int8 *)(v54 + 80);
  v56 = v53 + v41 + v55;
  v57 = (v56 + v94) & ~v55;
  v58 = ((unint64_t)v14 + v56) & ~v55;
  (*(void (**)(uint64_t, unint64_t))(v54 + 32))(v57, v58);
  v59 = *(_QWORD *)(v54 + 64);
  v60 = (_BYTE *)(v57 + v59);
  v61 = (_BYTE *)(v58 + v59);
  *v60 = *v61;
  v60[1] = v61[1];
  v60[2] = v61[2];
  v62 = (unint64_t)(v60 + 10) & 0xFFFFFFFFFFFFFFF8;
  v63 = (unint64_t)(v61 + 10) & 0xFFFFFFFFFFFFFFF8;
  v64 = *(_BYTE *)(v63 + 8);
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *(_BYTE *)(v62 + 8) = v64;
  return v51;
}

uint64_t sub_2210FC524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void (*v36)(unint64_t, uint64_t);
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  _WORD *v43;
  _WORD *v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _WORD *v52;
  unint64_t v53;
  unint64_t v54;
  size_t v55;
  _OWORD *v56;
  _OWORD *v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _WORD *v69;
  _WORD *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(unint64_t, uint64_t);
  unint64_t v74;
  unsigned int v75;
  uint64_t v76;
  char v77;
  unsigned int v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  size_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  _BYTE *v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t result;
  _WORD *v102;
  void (*v103)(unint64_t, uint64_t, uint64_t);
  void (*v104)(unint64_t, uint64_t);
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(unint64_t, unint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v118 = sub_2212F5124();
  v7 = *(_QWORD *)(v118 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v111 = sub_2212F5058();
  v9 = *(_QWORD *)(v111 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 | v10 | 7;
  v12 = v11 + 32 + a1;
  v13 = ~v11;
  v14 = (_OWORD *)(v12 & ~v11);
  v15 = v11 + 32 + a2;
  v117 = v15 & ~v11;
  v119 = (unint64_t)v14;
  v120 = ~v11;
  v115 = a3;
  v110 = v9;
  if (v14 != (_OWORD *)v117)
  {
    v112 = v8 + 16;
    v16 = *(_QWORD *)(v7 + 64);
    v17 = (v11 + ((v8 + 16) & ~v8) + v16) & v13;
    v108 = v10 + 16;
    v109 = *(_QWORD *)(v9 + 64) + v8;
    v114 = v16;
    v18 = v16 + 7;
    v19 = (v18 + ((v109 + ((v10 + 16) & ~v10)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
    v20 = v19 + 8;
    v21 = v19 + 9;
    v105 = v20;
    v106 = v18;
    if (v21 <= v20)
      v21 = v20;
    if (v21 <= 2)
      v22 = 2;
    else
      v22 = v21;
    v23 = (v17 | 1) + v22;
    if (v23 <= (v18 & 0xFFFFFFFFFFFFFFF8) + 16)
      v23 = (v18 & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v23 <= 0x10)
      v24 = 16;
    else
      v24 = v23;
    v25 = *((unsigned __int8 *)v14 + v24);
    if (v25 >= 3)
    {
      if (v24 <= 3)
        v26 = v24;
      else
        v26 = 4;
      __asm { BR              X13 }
    }
    v116 = ~v8;
    v107 = ~v10;
    if (v25 != 2)
    {
      if (v25 == 1)
      {
        swift_bridgeObjectRelease();
        v35 = ((unint64_t)v14 + v112) & v116;
        v36 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
        v36(v35, v118);
        v33 = v22;
        v13 = ~v11;
        v37 = (v35 + v11 + v114) & v120;
        v38 = *(unsigned __int8 *)(v37 + v22);
        if (v38 >= 4)
        {
          if (v22 <= 3)
            v39 = v22;
          else
            v39 = 4;
          __asm { BR              X12 }
        }
        if (v38 < 2)
          goto LABEL_42;
        if (v38 == 3)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v110 + 8))((v108 + v37) & v107, v111);
          v36((v109 + ((v108 + v37) & v107)) & v116, v118);
          goto LABEL_35;
        }
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v110 + 8))((v108 + v37) & v107, v111);
        v36((v109 + ((v108 + v37) & v107)) & v116, v118);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v13 = ~v11;
      v33 = v22;
      goto LABEL_42;
    }
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12 & ~v11, v118);
LABEL_35:
    v33 = v22;
    v13 = ~v11;
LABEL_42:
    v40 = *(unsigned __int8 *)(v117 + v24);
    if (v40 >= 3)
    {
      if (v24 <= 3)
        v41 = v24;
      else
        v41 = 4;
      __asm { BR              X12 }
    }
    if (v40 == 2)
    {
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v119, v117, v118);
      v33 = v22;
      v13 = ~v11;
      *(_OWORD *)(((v119 | 7) + v114) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((v117 | 7) + v114) & 0xFFFFFFFFFFFFF8);
      *(_BYTE *)(v119 + v24) = 2;
    }
    else if (v40 == 1)
    {
      *(_OWORD *)v119 = *(_OWORD *)v117;
      v42 = (v112 + v119) & v116;
      v103 = *(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32);
      v103(v42, (v112 + v117) & v116, v118);
      v33 = v22;
      v13 = ~v11;
      v43 = (_WORD *)((v42 + v11 + v114) & v120);
      v44 = (_WORD *)((((v112 + v117) & v116) + v11 + v114) & v120);
      switch(*((_BYTE *)v44 + v22))
      {
        case 0:
          v46 = 0;
          *v43 = *v44;
          break;
        case 1:
          *(_BYTE *)v43 = *(_BYTE *)v44;
          v46 = 1;
          break;
        case 2:
          *(_OWORD *)v43 = *(_OWORD *)v44;
          v47 = ((unint64_t)v43 + v108) & v107;
          v102 = v43;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v110 + 32))(v47, ((unint64_t)v44 + v108) & v107, v111);
          v48 = (v109 + v47) & v116;
          v49 = (v109 + (((unint64_t)v44 + v108) & v107)) & v116;
          v103(v48, v49, v118);
          v43 = v102;
          v33 = v22;
          v13 = ~v11;
          *(_QWORD *)((v106 + v48) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v106 + v49) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v102 + v105) = *((_BYTE *)v44 + v105);
          v46 = 2;
          break;
        case 3:
          *(_OWORD *)v43 = *(_OWORD *)v44;
          v50 = ((unint64_t)v43 + v108) & v107;
          v51 = ((unint64_t)v44 + v108) & v107;
          v52 = v43;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v110 + 32))(v50, v51, v111);
          v53 = (v109 + v50) & v116;
          v54 = (v109 + v51) & v116;
          v103(v53, v54, v118);
          v43 = v52;
          v33 = v22;
          v13 = ~v11;
          *(_QWORD *)((v106 + v53) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v106 + v54) & 0xFFFFFFFFFFFFF8);
          v46 = 3;
          break;
        default:
          if (v22 <= 3)
            v45 = v22;
          else
            v45 = 4;
          __asm { BR              X12 }
          return result;
      }
      *((_BYTE *)v43 + v33) = v46;
      *(_BYTE *)(v119 + v24) = 1;
    }
    else
    {
      *(_OWORD *)v119 = *(_OWORD *)v117;
      *(_BYTE *)(v119 + v24) = 0;
    }
    goto LABEL_62;
  }
  v27 = *(_QWORD *)(v7 + 64);
  v28 = *(_QWORD *)(v9 + 64);
  v116 = ~v8;
  v112 = v8 + 16;
  v114 = v27;
  v107 = ~v10;
  v108 = v10 + 16;
  v109 = v28 + v8;
  v29 = v27 + 7;
  v30 = (v27 + 7 + ((v28 + v8 + ((v10 + 16) & ~v10)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
  v31 = v30 + 8;
  v32 = v30 + 9;
  v105 = v31;
  v106 = v27 + 7;
  if (v32 <= v31)
    v32 = v31;
  if (v32 <= 2)
    v33 = 2;
  else
    v33 = v32;
  v34 = ((v11 + ((v8 + 16) & ~v8) + v27) & v13 | 1) + v33;
  if (v34 <= (v29 & 0xFFFFFFFFFFFFFFF8) + 16)
    v34 = (v29 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v34 <= 0x10)
    v24 = 16;
  else
    v24 = v34;
LABEL_62:
  v55 = v24 + 1;
  v56 = (_OWORD *)(((v12 | v11) + v24 + 1) & v13);
  v57 = (_OWORD *)(((v15 | v11) + v24 + 1) & v13);
  v58 = *((unsigned __int8 *)v56 + v24);
  v59 = *((unsigned __int8 *)v57 + v24);
  if (v58 > 2)
  {
    if (v59 <= 2)
    {
      if (v59 == 2)
      {
        (*(void (**)(uint64_t, _OWORD *, uint64_t))(v7 + 32))(((v12 | v11) + v24 + 1) & v13, v57, v118);
        v13 = ~v11;
        *(_OWORD *)(((unint64_t)v56 + v106) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v57 + v106) & 0xFFFFFFFFFFFFF8);
        v77 = 2;
      }
      else
      {
        if (v59 != 1)
        {
          *v56 = *v57;
          *((_BYTE *)v56 + v24) = 0;
          goto LABEL_122;
        }
        *v56 = *v57;
        v65 = ((unint64_t)v56 + v112) & v116;
        v66 = ((unint64_t)v57 + v112) & v116;
        v67 = v33;
        v113 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32);
        v113(v65, v66, v118);
        v68 = v67;
        v13 = ~v11;
        v69 = (_WORD *)((v114 + v11 + v65) & v120);
        v70 = (_WORD *)((v114 + v11 + v66) & v120);
        switch(*((_BYTE *)v70 + v67))
        {
          case 0:
LABEL_116:
            v83 = 0;
            *v69 = *v70;
            break;
          case 1:
LABEL_117:
            *(_BYTE *)v69 = *(_BYTE *)v70;
            v83 = 1;
            break;
          case 2:
LABEL_118:
            *(_OWORD *)v69 = *(_OWORD *)v70;
            (*(void (**)(unint64_t))(v110 + 32))(((unint64_t)v69 + v108) & v107);
            v84 = (v109 + (((unint64_t)v69 + v108) & v107)) & v116;
            v85 = (v109 + (((unint64_t)v70 + v108) & v107)) & v116;
            v113(v84, v85, v118);
            v68 = v67;
            v13 = ~v11;
            *(_QWORD *)((v106 + v84) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v106 + v85) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v69 + v105) = *((_BYTE *)v70 + v105);
            v83 = 2;
            break;
          case 3:
LABEL_119:
            *(_OWORD *)v69 = *(_OWORD *)v70;
            v86 = ((unint64_t)v70 + v108) & v107;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v110 + 32))(((unint64_t)v69 + v108) & v107, v86, v111);
            v87 = (v109 + (((unint64_t)v69 + v108) & v107)) & v116;
            v113(v87, (v109 + v86) & v116, v118);
            v68 = v67;
            v13 = ~v11;
            *(_QWORD *)((v106 + v87) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v106 + ((v109 + v86) & v116)) & 0xFFFFFFFFFFFFF8);
            v83 = 3;
            break;
          default:
            if (v67 <= 3)
              v71 = v67;
            else
              v71 = 4;
            __asm { BR              X12 }
            return result;
        }
        *((_BYTE *)v69 + v68) = v83;
        v77 = 1;
      }
      *((_BYTE *)v56 + v24) = v77;
      goto LABEL_122;
    }
LABEL_96:
    memcpy(v56, v57, v55);
LABEL_97:
    v13 = ~v11;
    goto LABEL_122;
  }
  if (v59 > 2)
  {
    if (v58 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(((v12 | v11) + v24 + 1) & v13, v118);
    }
    else if (v58 == 1)
    {
      v72 = v33;
      swift_bridgeObjectRelease();
      v73 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
      v73(((unint64_t)v56 + v112) & v116, v118);
      v74 = (v114 + v11 + (((unint64_t)v56 + v112) & v116)) & v120;
      v75 = *(unsigned __int8 *)(v74 + v72);
      if (v75 >= 4)
      {
        if (v72 <= 3)
          v76 = v72;
        else
          v76 = 4;
        __asm { BR              X12 }
      }
      if (v75 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v110 + 8))((v108 + v74) & v107, v111);
        v73((v109 + ((v108 + v74) & v107)) & v116, v118);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    goto LABEL_96;
  }
  if (v56 != v57)
  {
    if (v58 == 2)
    {
      v60 = v33;
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(((v12 | v11) + v24 + 1) & v13, v118);
    }
    else if (v58 == 1)
    {
      v60 = v33;
      swift_bridgeObjectRelease();
      v104 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
      v104(((unint64_t)v56 + v112) & v116, v118);
      v61 = v60;
      v62 = (v114 + v11 + (((unint64_t)v56 + v112) & v116)) & v120;
      v63 = *(unsigned __int8 *)(v62 + v60);
      if (v63 >= 4)
      {
        if (v60 <= 3)
          v64 = v60;
        else
          v64 = 4;
        __asm { BR              X12 }
      }
      if (v63 < 2)
        goto LABEL_101;
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v110 + 8))((v108 + v62) & v107, v111);
      v104((v109 + ((v108 + v62) & v107)) & v116, v118);
    }
    else
    {
      v60 = v33;
      swift_bridgeObjectRelease();
    }
    v61 = v60;
LABEL_101:
    v78 = *((unsigned __int8 *)v57 + v24);
    if (v78 >= 3)
    {
      if (v24 <= 3)
        v79 = v24;
      else
        v79 = 4;
      __asm { BR              X12 }
    }
    if (v78 == 2)
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v56, v57, v118);
      *(_OWORD *)(((unint64_t)v56 + v106) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v57 + v106) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v56 + v24) = 2;
    }
    else
    {
      if (v78 == 1)
      {
        *v56 = *v57;
        v80 = ((unint64_t)v56 + v112) & v116;
        v81 = ((unint64_t)v57 + v112) & v116;
        v67 = v61;
        v113 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32);
        v113(v80, v81, v118);
        v68 = v67;
        v13 = ~v11;
        v69 = (_WORD *)((v114 + v11 + v80) & v120);
        v70 = (_WORD *)((v114 + v11 + v81) & v120);
        switch(*((_BYTE *)v70 + v67))
        {
          case 0:
            goto LABEL_116;
          case 1:
            goto LABEL_117;
          case 2:
            goto LABEL_118;
          case 3:
            goto LABEL_119;
          default:
            if (v67 <= 3)
              v82 = v67;
            else
              v82 = 4;
            __asm { BR              X12 }
            return result;
        }
      }
      *v56 = *v57;
      *((_BYTE *)v56 + v24) = 0;
    }
    goto LABEL_97;
  }
LABEL_122:
  v88 = *(_QWORD *)(*(_QWORD *)(v115 + 16) - 8);
  v89 = *(unsigned __int8 *)(v88 + 80);
  v90 = ((v55 + v11) & v13) + v55 + v89;
  v91 = (v90 + v119) & ~v89;
  v92 = (v90 + v117) & ~v89;
  (*(void (**)(unint64_t, unint64_t))(v88 + 40))(v91, v92);
  v93 = *(_QWORD *)(v88 + 64);
  v94 = (_BYTE *)(v91 + v93);
  v95 = (_BYTE *)(v92 + v93);
  *v94 = *v95;
  v94[1] = v95[1];
  v94[2] = v95[2];
  v96 = (unint64_t)(v94 + 10) & 0xFFFFFFFFFFFFFFF8;
  v97 = (unint64_t)(v95 + 10) & 0xFFFFFFFFFFFFFFF8;
  v98 = *(_QWORD *)v97;
  LOBYTE(v97) = *(_BYTE *)(v97 + 8);
  v99 = *(_QWORD *)v96;
  v100 = *(_BYTE *)(v96 + 8);
  *(_QWORD *)v96 = v98;
  *(_BYTE *)(v96 + 8) = v97;
  sub_221017894(v99, v100);
  return a1;
}

uint64_t sub_2210FD3F4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v30;

  v6 = *(_QWORD *)(sub_2212F5124() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(sub_2212F5058() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v10 | v7;
  v12 = v10 | v7 | 7;
  v13 = (v8 + 7 + ((*(_QWORD *)(v9 + 64) + v7 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v14 = v13 + 8;
  v15 = v13 + 9;
  if (v15 <= v14)
    v15 = v14;
  if (v15 <= 2)
    v15 = 2;
  v16 = v15 + ((((v7 + 16) & ~v7) + v8 + v12) & ~v12);
  if (v16 + 1 > ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v17 = v16 + 1;
  else
    v17 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  v18 = 16;
  if (v17 > 0x10)
    v18 = v17;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int *)(v20 + 84);
  if (v21 <= 0x7FFFFFFF)
    v22 = 0x7FFFFFFF;
  else
    v22 = *(_DWORD *)(v20 + 84);
  if (!a2)
    return 0;
  v23 = *(unsigned __int8 *)(v20 + 80);
  v24 = ((v18 + 1 + v12) & ~v12) + v18 + 1 + v23;
  if (v22 < a2)
  {
    v25 = ((*(_QWORD *)(v20 + 64) + ((v24 + ((v11 + 32) & ~v12)) & ~v23) + 10) & 0xFFFFFFFFFFFFFFF8) + 9;
    if (v25 < 4)
      v26 = ((a2 - v22 + 255) >> (8 * v25)) + 1;
    else
      v26 = 2;
    if (v26 >= 0x10000)
      v27 = 4;
    else
      v27 = 2;
    if (v26 < 0x100)
      v27 = 1;
    if (v26 >= 2)
      v28 = v27;
    else
      v28 = 0;
    __asm { BR              X16 }
  }
  if ((v21 & 0x80000000) != 0)
    return __swift_getEnumTagSinglePayload((v24 + ((a1 + v12 + 32) & ~v12)) & ~v23, v21, v19);
  v30 = *(_QWORD *)(a1 + 8);
  if (v30 >= 0xFFFFFFFF)
    LODWORD(v30) = -1;
  return (v30 + 1);
}

void sub_2210FD620(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;
  size_t v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;

  v8 = *(_QWORD *)(sub_2212F5124() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_QWORD *)(sub_2212F5058() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v12 | v9;
  v14 = v12 | v9 | 7;
  v15 = (v10 + 7 + ((*(_QWORD *)(v11 + 64) + v9 + ((v12 + 16) & ~v12)) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  v16 = v15 + 8;
  v17 = v15 + 9;
  if (v17 <= v16)
    v17 = v16;
  if (v17 <= 2)
    v17 = 2;
  v18 = v17 + ((((v9 + 16) & ~v9) + v10 + v14) & ~v14);
  if (v18 + 1 > ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v19 = v18 + 1;
  else
    v19 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= 0x10)
    v19 = 16;
  v20 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v20 + 84) <= 0x7FFFFFFFu)
    v21 = 0x7FFFFFFF;
  else
    v21 = *(_DWORD *)(v20 + 84);
  v22 = ((*(_QWORD *)(v20 + 64)
        + ((((v19 + 1 + v14) & ~v14) + v19 + 1 + *(unsigned __int8 *)(v20 + 80) + ((v13 + 32) & ~v14)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))
        + 10) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  if (v21 >= a3)
  {
    v25 = 0;
  }
  else
  {
    if (v22 <= 3)
      v23 = ((a3 - v21 + 255) >> (8 * v22)) + 1;
    else
      v23 = 2;
    if (v23 >= 0x10000)
      v24 = 4;
    else
      v24 = 2;
    if (v23 < 0x100)
      v24 = 1;
    if (v23 >= 2)
      v25 = v24;
    else
      v25 = 0;
  }
  if (v21 < a2)
  {
    v26 = ~v21 + a2;
    v27 = (~(_BYTE)v21 + a2);
    if (v22 >= 4)
      v28 = v26;
    else
      v28 = v27;
    bzero(a1, v22);
    if ((_DWORD)v22 == 1)
      *a1 = v28;
    else
      *(_DWORD *)a1 = v28;
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_2210FD818()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x2210FD894);
}

void sub_2210FD820()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x2210FD828);
  JUMPOUT(0x2210FD894);
}

void sub_2210FD83C()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x2210FD894);
}

void sub_2210FD844()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x2210FD894);
}

void sub_2210FD84C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (v4)
  {
    if (a3 < 0)
      JUMPOUT(0x2210FD858);
    if (v4 < 0)
      JUMPOUT(0x2210FD888);
    *(_QWORD *)(v3 + 8) = (v4 - 1);
  }
  JUMPOUT(0x2210FD894);
}

uint64_t type metadata accessor for TopRowContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TopRowContent);
}

uint64_t sub_2210FD8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_221066D38(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_2210FD900(uint64_t a1)
{
  return sub_2210470E0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_2210FD910(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_221066D38(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_2210470E0(v5, v6);
  return a1;
}

uint64_t sub_2210FD960(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_2210470E0(v5, v6);
  return a1;
}

uint64_t type metadata accessor for TopRowLayoutGuide(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TopRowLayoutGuide);
}

_QWORD *sub_2210FD9A8(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v73)(char *, char *, uint64_t);
  void (*v74)(char *, char *, uint64_t);
  char *v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  void (*v83)(char *, char *, uint64_t);
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = a3;
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 24) = a2[3];
    v8 = a3[5];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = _s11PriceStringOMa(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v32 = sub_2212F5124();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v9, v10, v32);
      v33 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v9 + *(int *)(v33 + 20)) = *(_OWORD *)((char *)v10 + *(int *)(v33 + 20));
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload != 1)
    {
      v34 = v10[1];
      *v9 = *v10;
      v9[1] = v34;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    }
    v89 = v6;
    v90 = v11;
    v13 = v10[1];
    *v9 = *v10;
    v9[1] = v13;
    v14 = _s22LocalizedPriceResourceVMa(0);
    v15 = *(int *)(v14 + 20);
    v16 = (char *)v9 + v15;
    v17 = (char *)v10 + v15;
    v18 = sub_2212F5124();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    v20 = *(int *)(v14 + 24);
    v21 = (char *)v9 + v20;
    v22 = (char *)v10 + v20;
    v23 = _s22LocalizedPriceResourceV6FormatOMa(0);
    v24 = swift_getEnumCaseMultiPayload();
    if (v24 == 3)
    {
      v35 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v35;
      v84 = v19;
      v36 = v18;
      v37 = (int *)_s15PricePropertiesVMa(0);
      v38 = v37[5];
      v76 = &v22[v38];
      v80 = &v21[v38];
      v39 = sub_2212F5058();
      v74 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
      swift_bridgeObjectRetain();
      v74(v80, v76, v39);
      v84(&v21[v37[6]], &v22[v37[6]], v36);
      *(_QWORD *)&v21[v37[7]] = *(_QWORD *)&v22[v37[7]];
    }
    else
    {
      if (v24 != 2)
      {
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        goto LABEL_13;
      }
      v25 = *((_QWORD *)v22 + 1);
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *((_QWORD *)v21 + 1) = v25;
      v83 = v19;
      v26 = v18;
      v27 = (int *)_s15PricePropertiesVMa(0);
      v28 = v27[5];
      v75 = &v22[v28];
      v79 = &v21[v28];
      v29 = sub_2212F5058();
      v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      v73(v79, v75, v29);
      v83(&v21[v27[6]], &v22[v27[6]], v26);
      *(_QWORD *)&v21[v27[7]] = *(_QWORD *)&v22[v27[7]];
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
      v21[*(int *)(v30 + 48)] = v22[*(int *)(v30 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_13:
    v6 = v89;
    v11 = v90;
LABEL_14:
    swift_storeEnumTagMultiPayload();
    v40 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    v41 = (_QWORD *)((char *)v9 + v40);
    v42 = (_QWORD *)((char *)v10 + v40);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10 + v40, 1, v11))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
LABEL_28:
      v71 = v6[7];
      *((_BYTE *)v4 + v6[6]) = *((_BYTE *)a2 + v6[6]);
      *((_BYTE *)v4 + v71) = *((_BYTE *)a2 + v71);
      *((_BYTE *)v4 + v6[8]) = *((_BYTE *)a2 + v6[8]);
      return v4;
    }
    v44 = swift_getEnumCaseMultiPayload();
    if (v44 == 2)
    {
      v64 = sub_2212F5124();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v41, v42, v64);
      v65 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v41 + *(int *)(v65 + 20)) = *(_OWORD *)((char *)v42 + *(int *)(v65 + 20));
    }
    else
    {
      if (v44 == 1)
      {
        v91 = v11;
        v45 = v42[1];
        *v41 = *v42;
        v41[1] = v45;
        v46 = _s22LocalizedPriceResourceVMa(0);
        v47 = *(int *)(v46 + 20);
        v87 = (char *)v41 + v47;
        v48 = (char *)v42 + v47;
        v49 = sub_2212F5124();
        v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
        swift_bridgeObjectRetain();
        v51 = v87;
        v88 = v49;
        v52 = v49;
        v53 = v50;
        v50(v51, v48, v52);
        v54 = *(int *)(v46 + 24);
        v55 = (char *)v41 + v54;
        v56 = (char *)v42 + v54;
        v57 = _s22LocalizedPriceResourceV6FormatOMa(0);
        v58 = swift_getEnumCaseMultiPayload();
        if (v58 == 3)
        {
          v67 = *((_QWORD *)v56 + 1);
          *(_QWORD *)v55 = *(_QWORD *)v56;
          *((_QWORD *)v55 + 1) = v67;
          v68 = (int *)_s15PricePropertiesVMa(0);
          v69 = v68[5];
          v82 = &v56[v69];
          v86 = &v55[v69];
          v70 = sub_2212F5058();
          v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
          swift_bridgeObjectRetain();
          v78(v86, v82, v70);
          v53(&v55[v68[6]], &v56[v68[6]], v88);
          *(_QWORD *)&v55[v68[7]] = *(_QWORD *)&v56[v68[7]];
        }
        else
        {
          if (v58 != 2)
          {
            memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
            goto LABEL_26;
          }
          v59 = *((_QWORD *)v56 + 1);
          *(_QWORD *)v55 = *(_QWORD *)v56;
          *((_QWORD *)v55 + 1) = v59;
          v60 = (int *)_s15PricePropertiesVMa(0);
          v61 = v60[5];
          v81 = &v56[v61];
          v85 = &v55[v61];
          v62 = sub_2212F5058();
          v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
          swift_bridgeObjectRetain();
          v77(v85, v81, v62);
          v53(&v55[v60[6]], &v56[v60[6]], v88);
          *(_QWORD *)&v55[v60[7]] = *(_QWORD *)&v56[v60[7]];
          v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
          v55[*(int *)(v63 + 48)] = v56[*(int *)(v63 + 48)];
        }
        swift_storeEnumTagMultiPayload();
LABEL_26:
        v11 = v91;
        goto LABEL_27;
      }
      v66 = v42[1];
      *v41 = *v42;
      v41[1] = v66;
      swift_bridgeObjectRetain();
    }
LABEL_27:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v11);
    goto LABEL_28;
  }
  v31 = *a2;
  *v4 = *a2;
  v4 = (_QWORD *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

