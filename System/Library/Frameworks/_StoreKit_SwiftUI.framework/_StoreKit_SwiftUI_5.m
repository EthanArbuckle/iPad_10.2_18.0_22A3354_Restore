_OWORD *sub_221275854(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  int EnumTagSinglePayload;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int v45;
  int *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  int v63;
  int *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;

  if (a1 != a2)
  {
    sub_221011A28((uint64_t)a1, _s11PriceStringOMa);
    v6 = _s11PriceStringOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v23 = sub_2212F5124();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
      v24 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v24 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v24 + 20));
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_13;
      }
      *a1 = *a2;
      v8 = _s22LocalizedPriceResourceVMa(0);
      v9 = *(int *)(v8 + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2212F5124();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
      v13(v10, v11, v12);
      v14 = *(int *)(v8 + 24);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
      v18 = swift_getEnumCaseMultiPayload();
      if (v18 == 3)
      {
        *(_OWORD *)v15 = *(_OWORD *)v16;
        v25 = (int *)_s15PricePropertiesVMa(0);
        v26 = v25[5];
        v83 = &v16[v26];
        v85 = &v15[v26];
        v27 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v85, v83, v27);
        v13(&v15[v25[6]], &v16[v25[6]], v12);
        *(_QWORD *)&v15[v25[7]] = *(_QWORD *)&v16[v25[7]];
      }
      else
      {
        if (v18 != 2)
        {
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          goto LABEL_12;
        }
        *(_OWORD *)v15 = *(_OWORD *)v16;
        v19 = (int *)_s15PricePropertiesVMa(0);
        v20 = v19[5];
        v82 = &v16[v20];
        v84 = &v15[v20];
        v21 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v84, v82, v21);
        v13(&v15[v19[6]], &v16[v19[6]], v12);
        *(_QWORD *)&v15[v19[7]] = *(_QWORD *)&v16[v19[7]];
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
        v15[*(int *)(v22 + 48)] = v16[*(int *)(v22 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_12:
    swift_storeEnumTagMultiPayload();
  }
LABEL_13:
  v28 = *(int *)(a3 + 20);
  v29 = (_OWORD *)((char *)a1 + v28);
  v30 = (_OWORD *)((char *)a2 + v28);
  v31 = _s11PriceStringOMa(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v31);
  v33 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31);
  if (EnumTagSinglePayload)
  {
    if (!v33)
    {
      v34 = swift_getEnumCaseMultiPayload();
      if (v34 == 2)
      {
        v69 = sub_2212F5124();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v29, v30, v69);
        v70 = _s20LocalizationResourceVMa();
        *(_OWORD *)((char *)v29 + *(int *)(v70 + 20)) = *(_OWORD *)((char *)v30 + *(int *)(v70 + 20));
      }
      else
      {
        if (v34 != 1)
        {
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
LABEL_38:
          __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
          return a1;
        }
        *v29 = *v30;
        v35 = _s22LocalizedPriceResourceVMa(0);
        v36 = *(int *)(v35 + 20);
        v37 = (char *)v29 + v36;
        v38 = (char *)v30 + v36;
        v39 = sub_2212F5124();
        v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
        v40(v37, v38, v39);
        v41 = *(int *)(v35 + 24);
        v42 = (char *)v29 + v41;
        v43 = (char *)v30 + v41;
        v44 = _s22LocalizedPriceResourceV6FormatOMa(0);
        v45 = swift_getEnumCaseMultiPayload();
        if (v45 == 3)
        {
          *(_OWORD *)v42 = *(_OWORD *)v43;
          v73 = (int *)_s15PricePropertiesVMa(0);
          v74 = v73[5];
          v88 = &v42[v74];
          v75 = &v43[v74];
          v76 = sub_2212F5058();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v88, v75, v76);
          v40(&v42[v73[6]], &v43[v73[6]], v39);
          *(_QWORD *)&v42[v73[7]] = *(_QWORD *)&v43[v73[7]];
        }
        else
        {
          if (v45 != 2)
          {
            memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
            goto LABEL_37;
          }
          *(_OWORD *)v42 = *(_OWORD *)v43;
          v46 = (int *)_s15PricePropertiesVMa(0);
          v47 = v46[5];
          v86 = &v42[v47];
          v48 = &v43[v47];
          v49 = sub_2212F5058();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v86, v48, v49);
          v40(&v42[v46[6]], &v43[v46[6]], v39);
          *(_QWORD *)&v42[v46[7]] = *(_QWORD *)&v43[v46[7]];
          v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
          v42[*(int *)(v50 + 48)] = v43[*(int *)(v50 + 48)];
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_37:
      swift_storeEnumTagMultiPayload();
      goto LABEL_38;
    }
    goto LABEL_22;
  }
  if (!v33)
  {
    if (a1 == a2)
      return a1;
    sub_221011A28((uint64_t)v29, _s11PriceStringOMa);
    v52 = swift_getEnumCaseMultiPayload();
    if (v52 == 2)
    {
      v71 = sub_2212F5124();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v29, v30, v71);
      v72 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v29 + *(int *)(v72 + 20)) = *(_OWORD *)((char *)v30 + *(int *)(v72 + 20));
    }
    else
    {
      if (v52 != 1)
      {
        v51 = *(_QWORD *)(v31 - 8);
        goto LABEL_23;
      }
      *v29 = *v30;
      v53 = _s22LocalizedPriceResourceVMa(0);
      v54 = *(int *)(v53 + 20);
      v55 = (char *)v29 + v54;
      v56 = (char *)v30 + v54;
      v57 = sub_2212F5124();
      v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32);
      v58(v55, v56, v57);
      v59 = *(int *)(v53 + 24);
      v60 = (char *)v29 + v59;
      v61 = (char *)v30 + v59;
      v62 = _s22LocalizedPriceResourceV6FormatOMa(0);
      v63 = swift_getEnumCaseMultiPayload();
      if (v63 == 3)
      {
        *(_OWORD *)v60 = *(_OWORD *)v61;
        v77 = (int *)_s15PricePropertiesVMa(0);
        v78 = v77[5];
        v89 = &v60[v78];
        v79 = &v61[v78];
        v80 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v89, v79, v80);
        v58(&v60[v77[6]], &v61[v77[6]], v57);
        *(_QWORD *)&v60[v77[7]] = *(_QWORD *)&v61[v77[7]];
      }
      else
      {
        if (v63 != 2)
        {
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
          goto LABEL_42;
        }
        *(_OWORD *)v60 = *(_OWORD *)v61;
        v64 = (int *)_s15PricePropertiesVMa(0);
        v65 = v64[5];
        v87 = &v60[v65];
        v66 = &v61[v65];
        v67 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v87, v66, v67);
        v58(&v60[v64[6]], &v61[v64[6]], v57);
        *(_QWORD *)&v60[v64[7]] = *(_QWORD *)&v61[v64[7]];
        v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
        v60[*(int *)(v68 + 48)] = v61[*(int *)(v68 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_42:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  sub_221011A28((uint64_t)v29, _s11PriceStringOMa);
LABEL_22:
  v51 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255657210) - 8);
LABEL_23:
  memcpy(v29, v30, *(_QWORD *)(v51 + 64));
  return a1;
}

uint64_t sub_221275FA4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_221275FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_11_48();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
    v8 = a1 + *(int *)(a3 + 20);
  }
  return OUTLINED_FUNCTION_4_0(v8, a2, v7);
}

uint64_t sub_221276010()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22127601C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_11_48();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
    v10 = a1 + *(int *)(a4 + 20);
  }
  return OUTLINED_FUNCTION_3_1(v10, a2, a2, v9);
}

void sub_221276084()
{
  unint64_t v0;
  unint64_t v1;

  _s11PriceStringOMa(319);
  if (v0 <= 0x3F)
  {
    sub_221012758(319, &qword_255657320, (void (*)(uint64_t))_s11PriceStringOMa);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_221276118(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    sub_22103D94C(*(_QWORD *)a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v10;
    v11 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v11;
    v12 = *(_QWORD *)(a2 + 64);
    v13 = a3[8];
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v12;
    v16 = sub_2212F5124();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    v19 = a3[10];
    *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    v22 = sub_2212F50D0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
    }
  }
  return a1;
}

uint64_t sub_2212762DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  sub_221015344(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_2212F5124();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 40);
  v7 = sub_2212F50D0();
  result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return result;
}

uint64_t sub_2212763B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_22103D94C(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v9;
  v10 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v10;
  v11 = *(_QWORD *)(a2 + 64);
  v12 = a3[8];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v11;
  v15 = sub_2212F5124();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v17 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_2212F50D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_221276548(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_22103D94C(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_221015344(v9, v10, v11);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[8];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_2212F5124();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (EnumTagSinglePayload)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_7:
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v20 = a3[10];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = sub_2212F50D0();
  v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23);
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23);
  if (!v24)
  {
    v26 = *(_QWORD *)(v23 - 8);
    if (!v25)
    {
      (*(void (**)(void *, const void *, uint64_t))(v26 + 24))(v21, v22, v23);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v21, v23);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
  return a1;
}

uint64_t sub_2212767A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = a3[8];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_2212F5124();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_2212F50D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_221276908(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  int EnumTagSinglePayload;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_221015344(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_2212F5124();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16);
  if (EnumTagSinglePayload)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v19 = *(_QWORD *)(v16 - 8);
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v14, v16);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v19 + 40))(v14, v15, v16);
LABEL_7:
  v21 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  v24 = sub_2212F50D0();
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
  if (!v25)
  {
    v27 = *(_QWORD *)(v24 - 8);
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v27 + 40))(v22, v23, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v22, v24);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
  return a1;
}

uint64_t sub_221276B28()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_221276B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 32);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
      v10 = *(int *)(a3 + 40);
    }
    return OUTLINED_FUNCTION_4_0(a1 + v10, a2, v9);
  }
}

uint64_t sub_221276BCC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_221276BD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 32);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
      v10 = *(int *)(a4 + 40);
    }
    return OUTLINED_FUNCTION_3_1(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SubscriptionStoreCopyWriter(uint64_t a1)
{
  return sub_22100CA0C(a1, (uint64_t *)&unk_255666328);
}

void sub_221276C80()
{
  unint64_t v0;
  unint64_t v1;

  sub_221012758(319, qword_255666338, (void (*)(uint64_t))MEMORY[0x24BDEA5F8]);
  if (v0 <= 0x3F)
  {
    sub_221012758(319, (unint64_t *)&qword_2556562B0, (void (*)(uint64_t))MEMORY[0x24BDEA588]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_221276D50(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = sub_2212F5124();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_22_16();
  OUTLINED_FUNCTION_63_12(v2);
  v10 = 1;
  if (__swift_getEnumTagSinglePayload(v5, 1, v7) == 1)
    goto LABEL_5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v4, v5, v7);
  a1(v4);
  if (!v3)
  {
    OUTLINED_FUNCTION_59_13();
    v10 = 0;
LABEL_5:
    v11 = _s22LocalizedPriceResourceVMa(0);
    __swift_storeEnumTagSinglePayload(a2, v10, 1, v11);
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_59_13();
LABEL_6:
  OUTLINED_FUNCTION_46_2();
}

uint64_t sub_221276E60(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if ((a4 & 1) == 0)
  {
    v6 = a3;
    a1(&v7, &v6);
    if (!v4)
      return v7;
  }
  return a3;
}

void sub_221276EB8(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;

  v8 = type metadata accessor for SubscriptionOptionGroupAccessorySubview();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_36_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556589F0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_22_16();
  OUTLINED_FUNCTION_63_12(v2);
  v11 = 1;
  if (__swift_getEnumTagSinglePayload(v5, 1, v8) == 1)
    goto LABEL_4;
  sub_221015318(v5, v4, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOptionGroupAccessorySubview);
  a1(v4);
  v12 = OUTLINED_FUNCTION_75_9();
  sub_221011A28(v12, v13);
  if (!v3)
  {
    v11 = 0;
LABEL_4:
    v14 = _s17AccessoryViewHostVMa();
    __swift_storeEnumTagSinglePayload(a2, v11, 1, v14);
  }
  OUTLINED_FUNCTION_46_2();
}

void sub_221276FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(_QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD v102[2];
  unint64_t v103;
  _QWORD v104[6];

  OUTLINED_FUNCTION_8_0();
  v3 = v2;
  v5 = v4;
  v98 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_3_4();
  v96 = v8;
  v94 = sub_2212F4FEC();
  v91 = *(_QWORD *)(v94 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_29();
  v82 = v10;
  OUTLINED_FUNCTION_14_4();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v81 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_3_4();
  v101 = v15;
  v16 = OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_29();
  v95 = v18;
  OUTLINED_FUNCTION_14_4();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v81 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v81 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = OUTLINED_FUNCTION_72_5();
  v92 = type metadata accessor for SubscriptionStoreControlOption(v26);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_1_1();
  v28 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_12_0();
  v32 = v30 - v31;
  MEMORY[0x24BDAC7A8](v33);
  v93 = (uint64_t)&v81 - v34;
  sub_221014EB4(v5, v1, type metadata accessor for SubscriptionStoreControlOption);
  v35 = sub_2211E6C24(v3, (uint64_t)v104);
  v99 = v5;
  v100 = v28;
  v97 = (uint64_t *)v3;
  if (v104[2] == 1)
  {
    v81 = 0;
    v83 = 1;
  }
  else
  {
    MEMORY[0x24BDAC7A8](v35);
    *(&v81 - 2) = v36;
    *(&v81 - 1) = v3;
    v81 = sub_2212A6C34((void (*)(uint64_t *__return_ptr, uint64_t *))sub_22127A0D0, (uint64_t)(&v81 - 4), v37, v38);
    v83 = v39 & 1;
  }
  v40 = v91;
  v41 = v1 + *(int *)(v16 + 20);
  v42 = *(_QWORD *)v41;
  v43 = *(unsigned __int8 *)(v41 + 8);
  v44 = OUTLINED_FUNCTION_87_4();
  sub_221014EB4(v44, v45, v46);
  if (v43 == 2)
  {
    v85 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
    v84 = v47;
  }
  else
  {
    v85 = v42;
    v84 = v43 & 1;
  }
  v48 = v101;
  OUTLINED_FUNCTION_74_5(v0);
  OUTLINED_FUNCTION_32_24(v1, (uint64_t)v25);
  v91 = sub_2212F4E18();
  v90 = v49;
  OUTLINED_FUNCTION_74_5((uint64_t)v25);
  v89 = sub_22127865C(v1);
  v88 = v50;
  OUTLINED_FUNCTION_32_24(v1, (uint64_t)v22);
  v87 = sub_2212F4E30();
  v86 = v51;
  OUTLINED_FUNCTION_74_5((uint64_t)v22);
  sub_2210144D4((uint64_t)v13);
  sub_2212F4F5C();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v94);
  OUTLINED_FUNCTION_6_26();
  OUTLINED_FUNCTION_80_7(v48, 0);
  v52 = 0;
  v53 = v48;
  if ((v83 & 1) == 0)
  {
    v54 = v82;
    OUTLINED_FUNCTION_76_10();
    sub_2212F4F08();
    OUTLINED_FUNCTION_53_11();
    v55 = v81;
    if (v54 >= v81)
    {
      OUTLINED_FUNCTION_76_10();
      sub_2212F4F08();
      OUTLINED_FUNCTION_53_11();
      if (v55 == v54)
        v52 = 4;
      else
        v52 = 2;
    }
    else
    {
      v52 = 8;
    }
    v53 = v101;
  }
  v56 = v43 == 2;
  v57 = v96;
  OUTLINED_FUNCTION_21_30(v1 + *(int *)(v92 + 20), v96);
  v58 = v100;
  v59 = v32 + *(int *)(v100 + 32);
  OUTLINED_FUNCTION_80_7(v59, 1);
  v60 = *(int *)(v58 + 36);
  *(_QWORD *)(v32 + v60) = 0;
  v61 = v32 + *(int *)(v58 + 40);
  v62 = OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_85_0(v61, v63, v64, v62);
  v65 = v84;
  *(_QWORD *)v32 = v85;
  *(_QWORD *)(v32 + 8) = v65;
  *(_BYTE *)(v32 + 16) = v56;
  v66 = v90;
  *(_QWORD *)(v32 + 24) = v91;
  *(_QWORD *)(v32 + 32) = v66;
  v67 = v88;
  *(_QWORD *)(v32 + 40) = v89;
  *(_QWORD *)(v32 + 48) = v67;
  v68 = v86;
  *(_QWORD *)(v32 + 56) = v87;
  *(_QWORD *)(v32 + 64) = v68;
  sub_22114B0F0(v53, v59, &qword_255659810);
  *(_QWORD *)(v32 + v60) = v52;
  sub_22114B0F0(v57, v61, &qword_255656240);
  v69 = v93;
  OUTLINED_FUNCTION_28_27(v32, v93);
  OUTLINED_FUNCTION_86_5(v70, type metadata accessor for SubscriptionStoreControlOption);
  v71 = v98;
  OUTLINED_FUNCTION_28_27(v69, v98);
  v72 = v95;
  sub_221014EB4(v99, v95, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
  v73 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
  v75 = v74;
  v76 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 8))(v72, v76);
  v77 = v97;
  sub_2211E6C24((uint64_t)v97, (uint64_t)v102);
  if (v103 < 2)
  {
    v80 = OUTLINED_FUNCTION_63();
  }
  else
  {
    if (v73 == v102[1] && v103 == v75)
    {
      sub_221043EC0(v77);
      v80 = OUTLINED_FUNCTION_63();
LABEL_24:
      OUTLINED_FUNCTION_64_10(v80, type metadata accessor for SubscriptionStoreControlOption);
      *(_QWORD *)(v71 + *(int *)(v100 + 36)) = 1;
      goto LABEL_25;
    }
    v79 = OUTLINED_FUNCTION_90_4();
    sub_221043EC0(v77);
    v80 = OUTLINED_FUNCTION_63();
    if ((v79 & 1) != 0)
      goto LABEL_24;
  }
  OUTLINED_FUNCTION_64_10(v80, type metadata accessor for SubscriptionStoreControlOption);
LABEL_25:
  OUTLINED_FUNCTION_19();
}

void sub_221277580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_8_0();
  v2 = sub_2212F5058();
  v20 = *(_QWORD *)(v2 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_12_0();
  v6 = v4 - v5;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_22_16();
  v11 = OUTLINED_FUNCTION_28_0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  v16 = *(int *)(v15 + 40);
  v21 = v0;
  sub_221014FC0(v0 + v16, v1, &qword_255656240);
  OUTLINED_FUNCTION_7_0(v1, 1, v11);
  if (v17)
  {
    sub_221014F5C(v1, &qword_255656240);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, v1, v11);
    sub_2212F5064();
    sub_2212F504C();
    v18 = sub_221042D1C((uint64_t)v9, v6);
    v19 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v19(v6, v2);
    v19((uint64_t)v9, v2);
    if ((v18 & 1) != 0)
    {
      OUTLINED_FUNCTION_91();
      sub_2212F384C();
      OUTLINED_FUNCTION_91_6();
      OUTLINED_FUNCTION_69_5((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_69_5((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  }
  if ((*(_QWORD *)(v21 + *(int *)(v15 + 36)) & 8) == 0)
    OUTLINED_FUNCTION_91();
  sub_2212F384C();
  OUTLINED_FUNCTION_91_6();
LABEL_10:
  OUTLINED_FUNCTION_19();
}

void sub_2212777C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;

  OUTLINED_FUNCTION_8_0();
  v2 = v1;
  OUTLINED_FUNCTION_118_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_7();
  v4 = sub_2211B1EAC();
  v6 = v5;
  v8 = v7 & 1;
  v9 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  OUTLINED_FUNCTION_20_26(v2 + *(int *)(v9 + 20), v0);
  v10 = OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_7_0(v0, 1, v10);
  if (v11)
  {
    sub_221014F5C(v0, &qword_255657210);
  }
  else
  {
    v12 = sub_2211B1EAC();
    v14 = v13;
    v16 = v15 & 1;
    sub_221011A28(v0, _s11PriceStringOMa);
    sub_2212F408C();
    sub_221036880(v12, v14, v16);
    swift_bridgeObjectRelease();
    sub_221036880(v4, v6, v8);
    v17 = OUTLINED_FUNCTION_84_0();
  }
  OUTLINED_FUNCTION_32_14(v17, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
  OUTLINED_FUNCTION_19();
}

void sub_221277918()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;

  OUTLINED_FUNCTION_8_0();
  v69 = v2;
  LODWORD(v65) = v3;
  HIDWORD(v66) = v4;
  v68 = v5;
  v63 = OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_3_4();
  v67 = v7;
  v8 = OUTLINED_FUNCTION_74_11();
  v61 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_29();
  v60 = v10;
  OUTLINED_FUNCTION_14_4();
  MEMORY[0x24BDAC7A8](v11);
  v59 = (uint64_t)&v56 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659818);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v13);
  v64 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_14_4();
  MEMORY[0x24BDAC7A8](v15);
  v57 = (char *)&v56 - v16;
  OUTLINED_FUNCTION_14_4();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v56 - v18;
  v20 = OUTLINED_FUNCTION_53_7();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_29();
  v58 = v22;
  OUTLINED_FUNCTION_14_4();
  MEMORY[0x24BDAC7A8](v23);
  v56 = (uint64_t)&v56 - v24;
  OUTLINED_FUNCTION_14_4();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v56 - v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v28);
  v29 = OUTLINED_FUNCTION_17_35();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_7();
  v31 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  sub_221014FC0(v0 + *(int *)(v31 + 40), v0, &qword_255656240);
  OUTLINED_FUNCTION_7_0(v0, 1, v29);
  if (v32)
  {
    sub_221014F5C(v0, &qword_255656240);
    v40 = v67;
    v41 = v69;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v1, v0, v29);
    v41 = v69;
    if (v69 == 4)
    {
      sub_221278CE0();
      OUTLINED_FUNCTION_7_0((uint64_t)v19, 1, v20);
      if (!v32)
      {
        OUTLINED_FUNCTION_22_21();
        OUTLINED_FUNCTION_28_27((uint64_t)v19, (uint64_t)v27);
        v53 = (uint64_t)v27;
LABEL_27:
        OUTLINED_FUNCTION_28_27(v53, v68);
        OUTLINED_FUNCTION_49_0();
        goto LABEL_28;
      }
      sub_221014F5C((uint64_t)v19, &qword_255659818);
    }
    if ((v65 & 1) != 0)
    {
      v65 = v20;
      v42 = v59;
      sub_2212F5064();
      v43 = v60;
      sub_2212F504C();
      sub_221014E78(&qword_255661640, (uint64_t (*)(uint64_t))MEMORY[0x24BDEA510], MEMORY[0x24BDEA528]);
      v44 = v62;
      v45 = sub_2212F52D4();
      v46 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v46(v43, v44);
      v47 = v42;
      v20 = v65;
      v46(v47, v44);
      if ((v45 & 1) == 0)
      {
        v48 = v57;
        sub_221278E08(v57);
        OUTLINED_FUNCTION_7_0((uint64_t)v48, 1, v20);
        if (!v32)
        {
          OUTLINED_FUNCTION_22_21();
          v54 = (uint64_t)v48;
          v55 = v56;
LABEL_26:
          OUTLINED_FUNCTION_28_27(v54, v55);
          v53 = v55;
          goto LABEL_27;
        }
        sub_221014F5C((uint64_t)v48, &qword_255659818);
      }
    }
    v49 = v64;
    sub_221278BBC();
    OUTLINED_FUNCTION_22_21();
    OUTLINED_FUNCTION_7_0(v49, 1, v20);
    if (!v32)
    {
      v54 = v49;
      v55 = v58;
      goto LABEL_26;
    }
    sub_221014F5C(v49, &qword_255659818);
    v40 = v67;
  }
  if (v41 != 4)
  {
    if ((v66 & 0x100000000) != 0)
    {
      v50 = v41;
      goto LABEL_21;
    }
    v51 = (_QWORD *)v40;
    v52 = 0;
LABEL_24:
    sub_221278A94(v52, v51);
    goto LABEL_25;
  }
  if ((v66 & 0x100000000) == 0)
  {
    v51 = (_QWORD *)v40;
    v52 = 1;
    goto LABEL_24;
  }
  v50 = 1;
LABEL_21:
  sub_221278730(v50, v33, v34, v35, v36, v37, v38, v39, v56, (uint64_t)v57, v58, v59, v60, v61, v62, v63, v64, v65, v66,
    v67);
LABEL_25:
  sub_221015318(v40, v68, _s11PriceStringOMa);
LABEL_28:
  OUTLINED_FUNCTION_19();
}

uint64_t sub_221277D38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  id v14;
  uint64_t v16;

  type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_41_10();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_72_5();
  type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(v6);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221014EB4(a1, (uint64_t)v9, v10);
  if (OUTLINED_FUNCTION_39_16() == 1)
  {
    sub_221015318((uint64_t)v9, v1, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
    sub_221014EB4(v1, v2, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
    sub_2212777C8();
    OUTLINED_FUNCTION_88_7();
    OUTLINED_FUNCTION_32_14(v11, type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
    v12 = v1;
    v13 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair;
  }
  else
  {
    v2 = *((_QWORD *)v9 + 1);
    if (qword_255655B20 != -1)
      swift_once();
    v14 = (id)qword_25568CA90;
    sub_2212F40D4();
    OUTLINED_FUNCTION_88_7();
    v13 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource;
    v12 = a1;
  }
  sub_221011A28(v12, v13);
  return v2;
}

void sub_221277ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  char v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  OUTLINED_FUNCTION_8_0();
  v1 = v0;
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659818);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_4();
  v106 = v5;
  v105 = OUTLINED_FUNCTION_53_7();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_3_4();
  v104 = v7;
  v8 = OUTLINED_FUNCTION_6_26();
  v108 = *(_QWORD *)(v8 - 8);
  v109 = v8;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_3_4();
  v107 = v10;
  v11 = OUTLINED_FUNCTION_74_11();
  v110 = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_12_0();
  v15 = v13 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v101 - v17;
  v19 = type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration(0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_42_18(v21, v101);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v22);
  v23 = OUTLINED_FUNCTION_17_35();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_3_4();
  v112 = v25;
  v26 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  sub_221014FC0(v0 + *(int *)(v26 + 40), v0, &qword_255656240);
  OUTLINED_FUNCTION_7_0(v0, 1, v23);
  if (v27)
  {
    sub_221014F5C(v0, &qword_255656240);
    OUTLINED_FUNCTION_45_15(v28, v29, v30, v31, v32, v33, v34, v35, v101, v102, v103, v104, v105, (uint64_t)v106, v107, v108, v109, v110, v111,
      v112);
    v37 = *(_QWORD *)(v0 + 56);
    v36 = *(_QWORD *)(v0 + 64);
    v38 = OUTLINED_FUNCTION_89_6();
    OUTLINED_FUNCTION_291();
    OUTLINED_FUNCTION_37_17();
    OUTLINED_FUNCTION_78_8(v39, v40, v41, v42, v43, v44, v45, v46, v101, v102, v103, v104, v105, (uint64_t)v106, v107, v108, v109, v110, v111,
      v112);
    v47 = (_QWORD *)(v3 + *(int *)(v38 + 20));
    *v47 = v37;
    v47[1] = v36;
    OUTLINED_FUNCTION_75_9();
    OUTLINED_FUNCTION_38_2();
  }
  else
  {
    v102 = v3;
    v103 = v19;
    v48 = OUTLINED_FUNCTION_97_1();
    v49(v48);
    sub_2212F5064();
    sub_2212F504C();
    sub_221014E78(&qword_255661640, (uint64_t (*)(uint64_t))MEMORY[0x24BDEA510], MEMORY[0x24BDEA528]);
    v50 = v23;
    v51 = sub_2212F52D4();
    v52 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    v52(v15, v11);
    v52((uint64_t)v18, v11);
    if ((v51 & 1) != 0)
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255665C78);
      v54 = v111;
      v55 = v111 + *(int *)(v53 + 48);
      OUTLINED_FUNCTION_45_15(v53, v56, v57, v58, v59, v60, v61, v62, v101, v102, v103, v104, v105, (uint64_t)v106, v107, v108, v109, v110, v111,
        v112);
      v64 = *(_QWORD *)(v1 + 56);
      v63 = *(_QWORD *)(v1 + 64);
      v65 = OUTLINED_FUNCTION_89_6();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_37_17();
      OUTLINED_FUNCTION_78_8(v66, v67, v68, v69, v70, v71, v72, v73, v101, v102, v103, v104, v105, (uint64_t)v106, v107, v108, v109, v110, v111,
        v112);
      v74 = (_QWORD *)(v54 + *(int *)(v65 + 20));
      *v74 = v64;
      v74[1] = v63;
      v75 = v107;
      v76 = v112;
      sub_2212F50B8();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v76, v50);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 32))(v55, v75, v109);
      *(_OWORD *)(v55 + *(int *)(_s20LocalizationResourceVMa() + 20)) = xmmword_221300410;
    }
    else
    {
      v77 = v106;
      sub_221278E08(v106);
      OUTLINED_FUNCTION_7_0((uint64_t)v77, 1, v105);
      v54 = v111;
      if (v27)
      {
        sub_221014F5C((uint64_t)v77, &qword_255659818);
        OUTLINED_FUNCTION_45_15(v78, v79, v80, v81, v82, v83, v84, v85, v101, v102, v103, v104, v105, (uint64_t)v106, v107, v108, v109, v110, v111,
          v112);
        v87 = *(_QWORD *)(v1 + 56);
        v86 = *(_QWORD *)(v1 + 64);
        v88 = OUTLINED_FUNCTION_89_6();
        OUTLINED_FUNCTION_291();
        OUTLINED_FUNCTION_37_17();
        OUTLINED_FUNCTION_78_8(v89, v90, v91, v92, v93, v94, v95, v96, v101, v102, v103, v104, v105, (uint64_t)v106, v107, v108, v109, v110, v111,
          v112);
        v97 = (_QWORD *)(v54 + *(int *)(v88 + 20));
        *v97 = v87;
        v97[1] = v86;
      }
      else
      {
        v98 = (uint64_t)v77;
        v99 = v104;
        OUTLINED_FUNCTION_28_27(v98, v104);
        __swift_instantiateConcreteTypeFromMangledName(qword_255665C80);
        sub_221014EB4(v99, v54, _s22LocalizedPriceResourceVMa);
        sub_221277918();
        sub_221011A28(v99, _s22LocalizedPriceResourceVMa);
      }
      OUTLINED_FUNCTION_54_10();
    }
    v100 = v102;
    swift_storeEnumTagMultiPayload();
    sub_221015318(v54, v100, type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration);
  }
  OUTLINED_FUNCTION_19();
}

uint64_t sub_2212782F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_8_0();
  v35 = v1;
  v36 = v2;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_22_16();
  __swift_instantiateConcreteTypeFromMangledName(qword_255656110);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_12_0();
  v10 = v8 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - v12;
  v14 = sub_221295DF0();
  v16 = v15;
  v18 = v17 & 1;
  sub_221014FC0(v4, (uint64_t)v13, qword_255656110);
  OUTLINED_FUNCTION_7_0((uint64_t)v13, 1, v5);
  if (v19)
  {
    sub_221014F5C((uint64_t)v13, qword_255656110);
    sub_221015344(v14, v16, v18);
  }
  else
  {
    v33 = v16;
    v34 = v4;
    v20 = &v13[*(int *)(v5 + 20)];
    v21 = *(_QWORD *)v20;
    v22 = v20[8];
    sub_221014EB4((uint64_t)v13, v0, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
    if (v22 == 2)
    {
      v21 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
      v24 = v23;
    }
    else
    {
      v24 = v22 & 1;
    }
    v25 = v22 == 2;
    OUTLINED_FUNCTION_58_12(v0);
    OUTLINED_FUNCTION_58_12((uint64_t)v13);
    v26 = v33;
    v27 = sub_221295FA0(v14, v33, v18, v21, v24, v25);
    sub_221015344(v21, v24, v25);
    sub_221015344(v14, v26, v18);
    v4 = v34;
    if ((v27 & 1) != 0)
      return 0;
  }
  sub_221014FC0(v4, v10, qword_255656110);
  v28 = OUTLINED_FUNCTION_7_0(v10, 1, v5);
  if (v19)
  {
    OUTLINED_FUNCTION_54_5(v28, qword_255656110);
    return 0;
  }
  swift_getKeyPath();
  sub_221150D14();
  v30 = v29;
  v31 = swift_release();
  OUTLINED_FUNCTION_32_14(v31, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
  return v30;
}

uint64_t sub_22127851C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t result;
  char v20;
  _BYTE v22[8];
  uint64_t v23;
  unint64_t v24;

  v8 = type metadata accessor for Subscription();
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = *a1;
  sub_221014EB4(a2, (uint64_t)v10, v12);
  v13 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
  v15 = v14;
  v16 = sub_2212F51B4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v10, v16);
  sub_2211E6C24(a3, (uint64_t)v22);
  if (v24 < 2)
  {
    result = swift_bridgeObjectRelease();
  }
  else
  {
    if (v13 == v23 && v24 == v15)
    {
      result = swift_bridgeObjectRelease();
LABEL_11:
      v11 = 0;
      v20 = 1;
      goto LABEL_12;
    }
    v18 = sub_2212F5CDC();
    result = swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      goto LABEL_11;
  }
  v20 = 0;
LABEL_12:
  *(_QWORD *)a4 = v11;
  *(_BYTE *)(a4 + 8) = v20;
  return result;
}

uint64_t sub_22127865C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;

  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_32_24(a1, (uint64_t)v4);
  v5 = sub_2212F4E0C();
  v7 = v6;
  OUTLINED_FUNCTION_74_5((uint64_t)v4);
  v8 = sub_2212251F8(v5, v7);
  OUTLINED_FUNCTION_76_3();
  v9 = 0;
  if ((v8 & 1) == 0)
  {
    sub_221014EB4(a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Subscription);
    v9 = sub_2212F4E0C();
    OUTLINED_FUNCTION_58_12((uint64_t)v4);
  }
  return v9;
}

void sub_221278730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;

  OUTLINED_FUNCTION_8_0();
  a19 = v24;
  a20 = v25;
  v27 = v26;
  v29 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_19_31();
  OUTLINED_FUNCTION_84_5();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_27_26(v20 + *(int *)(v34 + 32));
  v35 = OUTLINED_FUNCTION_7_0(v22, 1, v21);
  if (v36)
  {
    OUTLINED_FUNCTION_67_9(v35, &qword_255659810);
    sub_221278848();
  }
  else
  {
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 32);
    v37(v33, v22, v21);
    v39 = *(_QWORD *)(v20 + 56);
    v38 = *(_QWORD *)(v20 + 64);
    v40 = OUTLINED_FUNCTION_53_7();
    v41 = OUTLINED_FUNCTION_49_14(v40);
    ((void (*)(uint64_t))v37)(v41);
    v42 = (char *)v29 + *(int *)(v22 + 24);
    *v42 = v27;
    v42[1] = 1;
    _s22LocalizedPriceResourceV6FormatOMa(0);
    OUTLINED_FUNCTION_38_2();
    *v29 = v39;
    v29[1] = v38;
    OUTLINED_FUNCTION_11_48();
    OUTLINED_FUNCTION_49_0();
    swift_bridgeObjectRetain();
  }
  OUTLINED_FUNCTION_19();
}

void sub_221278848()
{
  __int128 *v0;
  uint64_t v1;
  __int128 *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  char v16;
  uint64_t v17;
  unint64_t v18;

  OUTLINED_FUNCTION_8_0();
  v2 = v0;
  v4 = v3;
  v5 = type metadata accessor for SKLogger();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_1_1();
  if (qword_255655C08 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v5, (uint64_t)qword_25568CE88);
  sub_221014EB4(v7, v1, (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
  *(_QWORD *)&v15 = 0;
  *((_QWORD *)&v15 + 1) = 0xE000000000000000;
  sub_2212F5964();
  v17 = 0;
  v18 = 0xE000000000000000;
  OUTLINED_FUNCTION_91();
  sub_2212F540C();
  v8 = *((_BYTE *)v2 + 16);
  v15 = *v2;
  v16 = v8;
  sub_2212F5A90();
  v9 = sub_2212F57F0();
  swift_bridgeObjectRetain_n();
  v10 = sub_2212F2C1C();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = swift_slowAlloc();
    *(_QWORD *)&v15 = swift_slowAlloc();
    *(_DWORD *)v12 = 136446466;
    v17 = sub_221115C44(0, 0xE000000000000000, (uint64_t *)&v15);
    OUTLINED_FUNCTION_57_13();
    *(_WORD *)(v12 + 12) = 2082;
    swift_bridgeObjectRetain();
    v17 = sub_221115C44(0, 0xE000000000000000, (uint64_t *)&v15);
    OUTLINED_FUNCTION_57_13();
    OUTLINED_FUNCTION_4_11();
    _os_log_impl(&dword_221005000, v10, v11, "%{public}s%{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_2_4();
  }

  v13 = OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_86_5(v13, (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
  v14 = *((_QWORD *)v2 + 8);
  *v4 = *((_QWORD *)v2 + 7);
  v4[1] = v14;
  OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_291();
  OUTLINED_FUNCTION_19();
}

void sub_221278A94(char a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_19_31();
  OUTLINED_FUNCTION_84_5();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_27_26(v2 + *(int *)(v12 + 32));
  v13 = OUTLINED_FUNCTION_7_0(v4, 1, v3);
  if (v14)
  {
    OUTLINED_FUNCTION_67_9(v13, &qword_255659810);
    sub_221278848();
  }
  else
  {
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    v15(v11, v4, v3);
    v17 = *(_QWORD *)(v2 + 56);
    v16 = *(_QWORD *)(v2 + 64);
    v18 = OUTLINED_FUNCTION_53_7();
    v19 = OUTLINED_FUNCTION_49_14(v18);
    ((void (*)(uint64_t))v15)(v19);
    *((_BYTE *)a2 + *(int *)(v4 + 24)) = a1 & 1;
    _s22LocalizedPriceResourceV6FormatOMa(0);
    OUTLINED_FUNCTION_49_0();
    *a2 = v17;
    a2[1] = v16;
    OUTLINED_FUNCTION_11_48();
    OUTLINED_FUNCTION_49_0();
    swift_bridgeObjectRetain();
  }
}

void sub_221278BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_8_0();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_18_36();
  OUTLINED_FUNCTION_152_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_118_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_20_26(v0 + *(int *)(v11 + 40), (uint64_t)v10);
  OUTLINED_FUNCTION_7_0((uint64_t)v10, 1, v1);
  if (v12)
  {
    v13 = OUTLINED_FUNCTION_53_7();
    OUTLINED_FUNCTION_85_0(v5, v14, v15, v13);
  }
  else
  {
    OUTLINED_FUNCTION_44_16();
    OUTLINED_FUNCTION_27_26(v0 + *(int *)(v11 + 32));
    MEMORY[0x24BDAC7A8](v16);
    OUTLINED_FUNCTION_73_9();
    *(_BYTE *)(v17 - 16) = 0;
    OUTLINED_FUNCTION_43_15((void (*)(uint64_t))sub_22127A0B0);
    OUTLINED_FUNCTION_68_9();
    OUTLINED_FUNCTION_69_5(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  OUTLINED_FUNCTION_19();
}

void sub_221278CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_8_0();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_18_36();
  OUTLINED_FUNCTION_152_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_118_1();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  OUTLINED_FUNCTION_20_26(v0 + *(int *)(v11 + 40), (uint64_t)v10);
  OUTLINED_FUNCTION_7_0((uint64_t)v10, 1, v1);
  if (v12)
  {
    v13 = OUTLINED_FUNCTION_53_7();
    OUTLINED_FUNCTION_85_0(v5, v14, v15, v13);
  }
  else
  {
    OUTLINED_FUNCTION_44_16();
    OUTLINED_FUNCTION_27_26(v0 + *(int *)(v11 + 32));
    MEMORY[0x24BDAC7A8](v16);
    OUTLINED_FUNCTION_73_9();
    *(_BYTE *)(v17 - 16) = 1;
    OUTLINED_FUNCTION_43_15((void (*)(uint64_t))sub_22127A0EC);
    OUTLINED_FUNCTION_68_9();
    OUTLINED_FUNCTION_69_5(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  OUTLINED_FUNCTION_19();
}

uint64_t sub_221278E08@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v3 = sub_2212F5124();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  sub_221014FC0(v1 + *(int *)(v10 + 32), (uint64_t)v9, &qword_255659810);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v3) == 1)
  {
    v11 = _s22LocalizedPriceResourceVMa(0);
    v12 = (uint64_t)a1;
    v13 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    v14 = *(_QWORD *)(v1 + 56);
    v24 = *(_QWORD *)(v1 + 64);
    v25 = v14;
    v15 = _s22LocalizedPriceResourceVMa(0);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&a1[*(int *)(v15 + 20)], v6, v3);
    v16 = (uint64_t *)&a1[*(int *)(v15 + 24)];
    swift_bridgeObjectRetain();
    v17 = sub_2212F507C();
    v19 = v18;
    v20 = _s15PricePropertiesVMa(0);
    sub_2212F5064();
    sub_2212F50B8();
    v21 = sub_2212F5070();
    *v16 = v17;
    v16[1] = v19;
    *(uint64_t *)((char *)v16 + *(int *)(v20 + 28)) = v21;
    _s22LocalizedPriceResourceV6FormatOMa(0);
    swift_storeEnumTagMultiPayload();
    v22 = v24;
    *(_QWORD *)a1 = v25;
    *((_QWORD *)a1 + 1) = v22;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v12 = (uint64_t)a1;
    v13 = 0;
    v11 = v15;
  }
  return __swift_storeEnumTagSinglePayload(v12, v13, 1, v11);
}

void sub_221278FF0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = sub_2212F2B20();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_2212F5340();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_2212F5124();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_255657218);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  sub_221014FC0(v1 + *(int *)(v15 + 32), (uint64_t)v11, &qword_255659810);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5) == 1)
  {
    v16 = sub_2212F29B8();
    v17 = (uint64_t)v14;
    v18 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_22123A158();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v16 = sub_2212F29B8();
    v17 = (uint64_t)v14;
    v18 = 0;
  }
  __swift_storeEnumTagSinglePayload(v17, v18, 1, v16);
  sub_2212F29B8();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16) == 1)
  {
    sub_2212F52E0();
    sub_2212F2B14();
    sub_22123B11C();
    sub_221014F5C((uint64_t)v14, qword_255657218);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, v14, v16);
  }
}

uint64_t sub_22127925C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v7 = *(_QWORD *)(a2 + 64);
  v19 = *(_QWORD *)(a2 + 56);
  v8 = _s22LocalizedPriceResourceVMa(0);
  v9 = (char *)a4 + *(int *)(v8 + 20);
  v10 = sub_2212F5124();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
  v11 = (_QWORD *)((char *)a4 + *(int *)(v8 + 24));
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255657208) + 48);
  swift_bridgeObjectRetain();
  v13 = sub_2212F507C();
  v15 = v14;
  v16 = _s15PricePropertiesVMa(0);
  sub_2212F5064();
  sub_2212F50B8();
  v17 = sub_2212F5070();
  *v11 = v13;
  v11[1] = v15;
  *(uint64_t *)((char *)v11 + *(int *)(v16 + 28)) = v17;
  *((_BYTE *)v11 + v12) = a3;
  _s22LocalizedPriceResourceV6FormatOMa(0);
  result = swift_storeEnumTagMultiPayload();
  *a4 = v19;
  a4[1] = v7;
  return result;
}

void sub_22127936C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  char v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  uint64_t *v51;
  uint64_t v52;
  char v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  OUTLINED_FUNCTION_8_0();
  v4 = v3;
  v6 = v5;
  v80 = OUTLINED_FUNCTION_28_0();
  v74 = *(_QWORD *)(v80 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_3_4();
  v73 = v8;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656308);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_42_18(v10, v71);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v11);
  v75 = (uint64_t)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_14_4();
  MEMORY[0x24BDAC7A8](v13);
  v77 = (uint64_t)&v71 - v14;
  OUTLINED_FUNCTION_14_4();
  MEMORY[0x24BDAC7A8](v15);
  v78 = (uint64_t)&v71 - v16;
  v17 = OUTLINED_FUNCTION_6_26();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_21_0();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666398);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_35_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_100_6();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_71_8();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v71 - v24;
  v26 = *v6;
  v27 = *v4;
  v28 = v4[1];
  if ((v6[2] & 1) != 0)
  {
    if ((v4[2] & 1) == 0)
      goto LABEL_10;
    v29 = v26 == v27 && v6[1] == v28;
    if (!v29)
    {
      OUTLINED_FUNCTION_90_4();
      OUTLINED_FUNCTION_60_10();
      if ((v30 & 1) == 0)
        goto LABEL_10;
    }
  }
  else if ((v4[2] & 1) != 0 || v26 != v27 || ((((v6[1] & 1) == 0) ^ v28) & 1) == 0)
  {
    goto LABEL_10;
  }
  if (v6[3] != v4[3] || v6[4] != v4[4])
  {
    OUTLINED_FUNCTION_90_4();
    OUTLINED_FUNCTION_60_10();
    if ((v32 & 1) == 0)
      goto LABEL_10;
  }
  v33 = v6[6];
  v34 = v4[6];
  if (v33)
  {
    if (!v34)
      goto LABEL_10;
    if (v6[5] != v4[5] || v33 != v34)
    {
      OUTLINED_FUNCTION_90_4();
      OUTLINED_FUNCTION_60_10();
      if ((v36 & 1) == 0)
        goto LABEL_10;
    }
  }
  else if (v34)
  {
    goto LABEL_10;
  }
  if (v6[7] != v4[7] || v6[8] != v4[8])
  {
    OUTLINED_FUNCTION_90_4();
    OUTLINED_FUNCTION_60_10();
    if ((v38 & 1) == 0)
      goto LABEL_10;
  }
  v39 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  v72 = v17;
  v40 = v39;
  sub_221014FC0((uint64_t)v6 + *(int *)(v39 + 32), (uint64_t)v25, &qword_255659810);
  v71 = v40;
  OUTLINED_FUNCTION_21_30((uint64_t)v4 + *(int *)(v40 + 32), v2);
  v41 = v0 + *(int *)(v19 + 48);
  OUTLINED_FUNCTION_21_30((uint64_t)v25, v0);
  v42 = OUTLINED_FUNCTION_75_9();
  v43 = v72;
  sub_221014FC0(v42, v44, &qword_255659810);
  v45 = OUTLINED_FUNCTION_7_0(v0, 1, v43);
  if (v29)
  {
    OUTLINED_FUNCTION_18_17(v2);
    OUTLINED_FUNCTION_18_17((uint64_t)v25);
    v47 = OUTLINED_FUNCTION_7_0(v41, 1, v43);
    if (v29)
    {
      OUTLINED_FUNCTION_54_5(v47, &qword_255659810);
LABEL_43:
      v57 = v71;
      if (*(uint64_t *)((char *)v6 + *(int *)(v71 + 36)) != *(uint64_t *)((char *)v4 + *(int *)(v71 + 36)))
        goto LABEL_10;
      v58 = (uint64_t)v6 + *(int *)(v71 + 40);
      v59 = v78;
      OUTLINED_FUNCTION_21_30(v58, v78);
      v60 = (uint64_t)v4 + *(int *)(v57 + 40);
      v61 = v77;
      OUTLINED_FUNCTION_21_30(v60, v77);
      v62 = v79;
      v63 = v79 + *(int *)(v76 + 48);
      OUTLINED_FUNCTION_21_30(v59, v79);
      OUTLINED_FUNCTION_21_30(v61, v63);
      v64 = v80;
      OUTLINED_FUNCTION_7_0(v62, 1, v80);
      if (v29)
      {
        OUTLINED_FUNCTION_14_20(v61);
        OUTLINED_FUNCTION_14_20(v59);
        v65 = OUTLINED_FUNCTION_7_0(v63, 1, v64);
        if (v29)
        {
          OUTLINED_FUNCTION_67_9(v65, &qword_255656240);
          goto LABEL_10;
        }
      }
      else
      {
        v66 = v75;
        sub_221014FC0(v62, v75, &qword_255656240);
        OUTLINED_FUNCTION_7_0(v63, 1, v64);
        if (!v67)
        {
          v69 = v73;
          v68 = v74;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32))(v73, v63, v64);
          sub_221014E78((unint64_t *)&qword_255656310, (uint64_t (*)(uint64_t))MEMORY[0x24BDEA588], MEMORY[0x24BDEA5A0]);
          sub_2212F52D4();
          v70 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
          v70(v69, v64);
          OUTLINED_FUNCTION_14_20(v61);
          OUTLINED_FUNCTION_14_20(v59);
          v70(v66, v64);
          OUTLINED_FUNCTION_14_20(v62);
          goto LABEL_10;
        }
        sub_221014F5C(v61, &qword_255656240);
        sub_221014F5C(v59, &qword_255656240);
        OUTLINED_FUNCTION_69_5(v66, *(uint64_t (**)(uint64_t, uint64_t))(v74 + 8));
      }
      v51 = &qword_255656308;
      v52 = v62;
      goto LABEL_41;
    }
LABEL_40:
    v51 = &qword_255666398;
    v52 = v0;
LABEL_41:
    sub_221014F5C(v52, v51);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_81_6(v45, v46, &qword_255659810);
  OUTLINED_FUNCTION_7_0(v41, 1, v43);
  if (v48)
  {
    OUTLINED_FUNCTION_18_17(v2);
    OUTLINED_FUNCTION_18_17((uint64_t)v25);
    v49 = OUTLINED_FUNCTION_87_4();
    v50(v49);
    goto LABEL_40;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v1, v41, v43);
  sub_221014E78(&qword_25565CDA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEA5F8], MEMORY[0x24BDEA610]);
  v53 = sub_2212F52D4();
  v54 = *(void (**)(uint64_t))(v18 + 8);
  v55 = OUTLINED_FUNCTION_97_1();
  v54(v55);
  OUTLINED_FUNCTION_18_17(v2);
  OUTLINED_FUNCTION_18_17((uint64_t)v25);
  v56 = OUTLINED_FUNCTION_87_4();
  v54(v56);
  OUTLINED_FUNCTION_18_17(v0);
  if ((v53 & 1) != 0)
    goto LABEL_43;
LABEL_10:
  OUTLINED_FUNCTION_19();
}

uint64_t sub_221279908@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return sub_22103D94C(v2, v3, v4);
}

void sub_221279920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_21_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_1_1();
  sub_2211B223C();
  v6 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  sub_221014FC0(v0 + *(int *)(v6 + 20), v2, &qword_255657210);
  OUTLINED_FUNCTION_7_0(v2, 1, v3);
  if (v7)
  {
    sub_2212F5DF0();
  }
  else
  {
    sub_221015318(v2, v1, _s11PriceStringOMa);
    sub_2212F5DF0();
    sub_2211B223C();
    OUTLINED_FUNCTION_58_12(v1);
  }
}

void sub_221279A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(_QWORD);
  uint64_t v50;
  uint64_t (*v51)(_QWORD);

  OUTLINED_FUNCTION_8_0();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  v28 = v27;
  v29 = OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_21_0();
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666390);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_35_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_100_6();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_71_8();
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&a9 - v36;
  sub_2211B241C();
  if ((v38 & 1) != 0)
  {
    v39 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
    OUTLINED_FUNCTION_20_26(v28 + *(int *)(v39 + 20), (uint64_t)v37);
    OUTLINED_FUNCTION_20_26(v26 + *(int *)(v39 + 20), v22);
    v40 = v20 + *(int *)(v31 + 48);
    OUTLINED_FUNCTION_20_26((uint64_t)v37, v20);
    v41 = OUTLINED_FUNCTION_75_9();
    OUTLINED_FUNCTION_20_26(v41, v42);
    v43 = OUTLINED_FUNCTION_7_0(v20, 1, v29);
    if (!v46)
    {
      OUTLINED_FUNCTION_81_6(v43, v44, &qword_255657210);
      OUTLINED_FUNCTION_7_0(v40, 1, v29);
      if (!v46)
      {
        sub_221015318(v40, v21, _s11PriceStringOMa);
        sub_2211B241C();
        v48 = OUTLINED_FUNCTION_97_1();
        sub_221011A28(v48, v49);
        OUTLINED_FUNCTION_18_17(v22);
        OUTLINED_FUNCTION_18_17((uint64_t)v37);
        v50 = OUTLINED_FUNCTION_87_4();
        sub_221011A28(v50, v51);
        OUTLINED_FUNCTION_18_17(v20);
        goto LABEL_11;
      }
      OUTLINED_FUNCTION_14_20(v22);
      OUTLINED_FUNCTION_14_20((uint64_t)v37);
      OUTLINED_FUNCTION_86_5(v47, _s11PriceStringOMa);
LABEL_10:
      OUTLINED_FUNCTION_54_5(v45, &qword_255666390);
      goto LABEL_11;
    }
    OUTLINED_FUNCTION_18_17(v22);
    OUTLINED_FUNCTION_18_17((uint64_t)v37);
    v45 = OUTLINED_FUNCTION_7_0(v40, 1, v29);
    if (!v46)
      goto LABEL_10;
    OUTLINED_FUNCTION_54_5(v45, &qword_255657210);
  }
LABEL_11:
  OUTLINED_FUNCTION_19();
}

uint64_t sub_221279C2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = OUTLINED_FUNCTION_11_48();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_35_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_21_0();
  sub_2212F5DD8();
  sub_2211B223C();
  v6 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  sub_221014FC0(v1 + *(int *)(v6 + 20), v2, &qword_255657210);
  OUTLINED_FUNCTION_7_0(v2, 1, v3);
  if (v7)
  {
    sub_2212F5DF0();
  }
  else
  {
    sub_221015318(v2, v0, _s11PriceStringOMa);
    sub_2212F5DF0();
    sub_2211B223C();
    sub_221011A28(v0, _s11PriceStringOMa);
  }
  return sub_2212F5E08();
}

#error "221279E54: call analysis failed (funcsize=118)"

uint64_t sub_221279F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v4 = _s11PriceStringOMa(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212F5DD8();
  sub_2211B223C();
  sub_221014FC0(v2 + *(int *)(a2 + 20), (uint64_t)v9, &qword_255657210);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4) == 1)
  {
    sub_2212F5DF0();
  }
  else
  {
    sub_221015318((uint64_t)v9, (uint64_t)v6, _s11PriceStringOMa);
    sub_2212F5DF0();
    sub_2211B223C();
    sub_221011A28((uint64_t)v6, _s11PriceStringOMa);
  }
  return sub_2212F5E08();
}

void sub_22127A07C()
{
  sub_221014E78(&qword_255666380, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair, (uint64_t)&unk_2213160B8);
}

uint64_t sub_22127A0B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_22127925C(a1, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 32), a2);
}

uint64_t sub_22127A0D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22127851C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_22127A0EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_22127A0B0(a1, a2);
}

uint64_t OUTLINED_FUNCTION_11_48()
{
  return _s11PriceStringOMa(0);
}

uint64_t OUTLINED_FUNCTION_17_35()
{
  return sub_2212F50D0();
}

uint64_t OUTLINED_FUNCTION_18_36()
{
  return sub_2212F50D0();
}

uint64_t OUTLINED_FUNCTION_19_31()
{
  return sub_2212F5124();
}

void OUTLINED_FUNCTION_20_26(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_221014FC0(a1, a2, v2);
}

void OUTLINED_FUNCTION_21_30(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_221014FC0(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_22_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_27_26(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_221014FC0(a1, v1, v2);
}

void OUTLINED_FUNCTION_28_27(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_221015318(a1, a2, v2);
}

void OUTLINED_FUNCTION_37_17()
{
  uint64_t v0;

  sub_221278FF0(v0);
}

uint64_t OUTLINED_FUNCTION_39_16()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_42_18(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_43_15(void (*a1)(uint64_t))
{
  uint64_t v1;

  sub_221276D50(a1, v1);
}

uint64_t OUTLINED_FUNCTION_44_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v0, v1);
}

void OUTLINED_FUNCTION_45_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_221278730(0, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t OUTLINED_FUNCTION_49_14(uint64_t a1)
{
  uint64_t v1;

  return v1 + *(int *)(a1 + 20);
}

uint64_t OUTLINED_FUNCTION_53_11()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t OUTLINED_FUNCTION_54_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 88), v1);
}

uint64_t OUTLINED_FUNCTION_57_13()
{
  return sub_2212F5898();
}

void OUTLINED_FUNCTION_58_12(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_221011A28(a1, v1);
}

uint64_t OUTLINED_FUNCTION_59_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_60_10()
{
  return 0;
}

void OUTLINED_FUNCTION_63_12(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_221014FC0(a1, v1, v2);
}

void OUTLINED_FUNCTION_64_10(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_221011A28(v2, a2);
}

void OUTLINED_FUNCTION_67_9(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_221014F5C(v2, a2);
}

void OUTLINED_FUNCTION_68_9()
{
  uint64_t v0;
  uint64_t *v1;

  sub_221014F5C(v0, v1);
}

uint64_t OUTLINED_FUNCTION_72_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_74_11()
{
  return sub_2212F5058();
}

uint64_t OUTLINED_FUNCTION_75_9()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_76_10()
{
  uint64_t v0;

  sub_2210144D4(v0);
}

void OUTLINED_FUNCTION_78_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_221278730(1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t OUTLINED_FUNCTION_80_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_81_6(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_221014FC0(v3, v4, a3);
}

void OUTLINED_FUNCTION_86_5(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_221011A28(v2, a2);
}

uint64_t OUTLINED_FUNCTION_87_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_89_6()
{
  return type metadata accessor for CompactSubscriptionPickerOptionLabelConfiguration.Standard(0);
}

void sub_22127A380()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_16_33() & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_22127A3A0()
{
  OUTLINED_FUNCTION_14_39();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_22127A3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  char v24;

  v24 = a4;
  v11 = *a3;
  v12 = a3[1];
  v13 = *((_BYTE *)a3 + 16);
  v14 = (int *)type metadata accessor for StorePlaceholderView(0, a5, a6, a4);
  v15 = a7 + v14[12];
  *(_BYTE *)v15 = sub_22106F9EC() & 1;
  *(_QWORD *)(v15 + 8) = v16;
  v17 = a7 + v14[13];
  *(_QWORD *)v17 = swift_getKeyPath();
  *(_OWORD *)(v17 + 8) = 0u;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_BYTE *)(v17 + 40) = 0;
  v18 = a7 + v14[14];
  *(_QWORD *)v18 = swift_getKeyPath();
  *(_BYTE *)(v18 + 8) = 0;
  v19 = a7 + v14[15];
  *(_QWORD *)v19 = swift_getKeyPath();
  *(_BYTE *)(v19 + 8) = 0;
  v20 = *(_QWORD *)(a5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(a7, a1, a5);
  v21 = sub_22127B720(a2);
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(a1, a5);
  *(_QWORD *)(a7 + v14[9]) = v21;
  v23 = a7 + v14[10];
  *(_QWORD *)v23 = v11;
  *(_QWORD *)(v23 + 8) = v12;
  *(_BYTE *)(v23 + 16) = v13;
  *(_BYTE *)(a7 + v14[11]) = v24;
  return result;
}

uint64_t type metadata accessor for StorePlaceholderView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StorePlaceholderView);
}

uint64_t sub_22127A510@<X0>(char a1@<W0>, char a2@<W1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  int *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  *(_QWORD *)(a4 + 24) = swift_getKeyPath();
  *(_BYTE *)(a4 + 32) = 0;
  *(_QWORD *)(a4 + 40) = swift_getKeyPath();
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 64) = 0u;
  *(_BYTE *)(a4 + 80) = 0;
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2556664B0);
  v9 = (uint64_t *)(a4 + v8[13]);
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
  swift_storeEnumTagMultiPayload();
  v10 = a4 + v8[14];
  *(_QWORD *)v10 = swift_getKeyPath();
  *(_BYTE *)(v10 + 8) = 0;
  v11 = a4 + v8[15];
  *(_QWORD *)v11 = swift_getKeyPath();
  *(_BYTE *)(v11 + 8) = 0;
  *(_BYTE *)a4 = a1;
  result = a3();
  *(_BYTE *)(a4 + 16) = a2;
  return result;
}

uint64_t sub_22127A610(uint64_t a1)
{
  return sub_22127A62C(a1, &qword_2556664D0, (uint64_t)&type metadata for AutomaticProductViewStyle, &qword_2556664D8);
}

uint64_t sub_22127A62C(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_13_0();
  sub_221036990(a1, v9 - v8, (uint64_t (*)(_QWORD))type metadata accessor for ProductViewStyleConfiguration);
  sub_2212F3C48();
  sub_221017AD4(a4, a2, (uint64_t)&unk_221314000);
  return sub_2212F4854();
}

void sub_22127A6E0()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_16_33() & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_22127A700()
{
  OUTLINED_FUNCTION_14_39();
  OUTLINED_FUNCTION_6_0();
}

void sub_22127A720(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;

  v3 = v2;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Product.TaskState(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22127A868(v3, v6, *(_QWORD *)(a1 + 24), v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, v6);
  LODWORD(v7) = *(unsigned __int8 *)(v3 + *(int *)(a1 + 44));
  v13 = v3 + *(int *)(a1 + 60);
  v14 = *(_QWORD *)v13;
  v15 = *(unsigned __int8 *)(v13 + 8);
  sub_221017C08(*(_QWORD *)v13, *(_BYTE *)(v13 + 8));
  sub_221044EE4();
  v17 = v16;
  sub_221047104(v14, v15);
  sub_2212AD878(0, (uint64_t)v12, 0, v7, v17, v6, a2);
}

id sub_22127A868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v20;
  uint64_t v21;
  uint64_t v22;

  v8 = type metadata accessor for SKLogger();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1 + *(int *)(type metadata accessor for StorePlaceholderView(0, a2, a3, v11) + 40);
  if (*(_BYTE *)(v12 + 16))
  {
    if (*(_BYTE *)(v12 + 16) == 1)
    {
      if (qword_255655C08 != -1)
        swift_once();
      v13 = __swift_project_value_buffer(v8, (uint64_t)qword_25568CE88);
      sub_221036990(v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
      v14 = sub_2212F57F0();
      v15 = sub_2212F2C1C();
      v16 = v14;
      if (os_log_type_enabled(v15, v14))
      {
        v17 = swift_slowAlloc();
        v18 = swift_slowAlloc();
        v22 = v18;
        *(_DWORD *)v17 = 136446466;
        v21 = sub_221115C44(0, 0xE000000000000000, &v22);
        sub_2212F5898();
        *(_WORD *)(v17 + 12) = 2082;
        v21 = sub_221115C44(0xD00000000000002FLL, 0x80000002212FAED0, &v22);
        sub_2212F5898();
        _os_log_impl(&dword_221005000, v15, v16, "%{public}s%{public}s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22766BBA8](v18, -1, -1);
        MEMORY[0x22766BBA8](v17, -1, -1);
      }

      sub_221011A28((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SKLogger);
      type metadata accessor for Product.TaskState(0);
      return (id)swift_storeEnumTagMultiPayload();
    }
    else
    {
      type metadata accessor for Product.TaskState(0);
      return (id)swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    v20 = *(void **)v12;
    *a4 = *(_QWORD *)v12;
    type metadata accessor for Product.TaskState(0);
    swift_storeEnumTagMultiPayload();
    return v20;
  }
}

void sub_22127AB18(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  __int128 *v44;
  __int128 v45;
  ValueMetadata *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (**v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  ValueMetadata *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  _OWORD v95[2];
  _BYTE v96[8];

  v3 = v2;
  v90 = a2;
  v83 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v79 = v5;
  OUTLINED_FUNCTION_19_4((uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666430);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_19_4((uint64_t)&v71 - v10);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666438);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_29();
  v82 = v12;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_19_4((uint64_t)&v71 - v14);
  type metadata accessor for ProductViewStyleConfiguration();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_13_0();
  v18 = v17 - v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255662B98);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_13_0();
  v22 = v21 - v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556564C8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_13_0();
  v27 = v26 - v25;
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556564D0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v71 - v32;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666440);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v35);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666448);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v37);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666450);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v39);
  v40 = *(_QWORD *)(*(_QWORD *)(v3 + *(int *)(a1 + 36)) + 16);
  if (v40 == 1)
  {
    v72 = v30;
    v73 = v27;
    v74 = v33;
    v44 = (__int128 *)(v3 + *(int *)(a1 + 52));
    v45 = v44[1];
    v94 = *v44;
    v95[0] = v45;
    *(_OWORD *)((char *)v95 + 9) = *(__int128 *)((char *)v44 + 25);
    sub_221036890((uint64_t)&v94, (uint64_t)v96, &qword_255658530);
    sub_22119E934((uint64_t)v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22105BD60);
    sub_221044D70();
    sub_22119E934((uint64_t)&v94, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_221046E30);
    v46 = v91;
    swift_release();
    v93 = v92;
    sub_2210368C4((uint64_t)&v93);
    if (v46 == &type metadata for AutomaticProductViewStyle)
    {
      sub_22127A720(a1, v18);
      ProductView.init<>(_:)();
      v62 = sub_2211DCE34();
      v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = 0u;
      *(_OWORD *)(v63 + 32) = 0u;
      *(_QWORD *)(v63 + 48) = 0;
      v64 = v73;
      sub_221036BA4(v22, v73, &qword_255662B98);
      v65 = (uint64_t (**)(uint64_t))(v64 + *(int *)(v23 + 36));
      *v65 = sub_22127CA24;
      v65[1] = 0;
      v65[2] = (uint64_t (*)(uint64_t))&type metadata for LargeProductViewStyle;
      v65[3] = (uint64_t (*)(uint64_t))v62;
      v65[4] = (uint64_t (*)(uint64_t))v63;
      sub_221014F5C(v22, &qword_255662B98);
      v66 = sub_2212F4A10();
      v67 = (uint64_t)v72;
      sub_221016488(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0x7FF0000000000000, 0, v66, v68);
      sub_221014F5C(v64, &qword_2556564C8);
      v42 = &qword_2556564D0;
      v69 = (uint64_t)v74;
      sub_221036890(v67, (uint64_t)v74, &qword_2556564D0);
      OUTLINED_FUNCTION_13_42(v69, v75);
      OUTLINED_FUNCTION_17_36();
      sub_22127C85C();
      v70 = v76;
      OUTLINED_FUNCTION_15_34();
      sub_221036BA4(v70, v86, &qword_255666450);
      OUTLINED_FUNCTION_7_51();
      sub_22127C7F0();
      sub_22127C988();
      sub_2212F3A14();
      sub_221014F5C(v70, &qword_255666450);
      v43 = v69;
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (v40)
  {
LABEL_5:
    v47 = &v8[*(int *)(v80 + 36)];
    *(_QWORD *)v47 = swift_getKeyPath();
    *(_OWORD *)(v47 + 8) = 0u;
    *(_OWORD *)(v47 + 24) = 0u;
    v47[40] = 0;
    v48 = *(_QWORD *)(a1 + 16);
    v49 = *(_QWORD *)(a1 + 24);
    sub_22127B274(v3, v48, v49, v50, (uint64_t)v8);
    v51 = (uint64_t)v8;
    v52 = v84;
    sub_221036890(v51, v84, &qword_255666430);
    v53 = v83;
    v54 = v81;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v81, v3, a1);
    v55 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    v56 = swift_allocObject();
    *(_QWORD *)(v56 + 16) = v48;
    *(_QWORD *)(v56 + 24) = v49;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v53 + 32))(v56 + v55, v54, a1);
    v57 = swift_allocObject();
    *(_QWORD *)(v57 + 16) = sub_22127C77C;
    *(_QWORD *)(v57 + 24) = v56;
    v58 = v82;
    sub_221036BA4(v52, v82, &qword_255666430);
    v59 = (_QWORD *)(v58 + *(int *)(v89 + 36));
    *v59 = sub_22127C7E8;
    v59[1] = v57;
    sub_221014F5C(v52, &qword_255666430);
    v42 = &qword_255666438;
    v60 = v58;
    v61 = v85;
    sub_221036890(v60, v85, &qword_255666438);
    OUTLINED_FUNCTION_13_42(v61, v86);
    OUTLINED_FUNCTION_17_36();
    sub_22127C7F0();
    sub_22127C988();
    sub_2212F3A14();
    v43 = v61;
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_7_51();
  sub_22127C85C();
  v41 = v76;
  OUTLINED_FUNCTION_15_34();
  v42 = &qword_255666450;
  OUTLINED_FUNCTION_13_42(v41, v86);
  OUTLINED_FUNCTION_7_51();
  sub_22127C7F0();
  sub_22127C988();
  sub_2212F3A14();
  v43 = v41;
LABEL_7:
  sub_221014F5C(v43, v42);
}

uint64_t sub_22127B274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v29 = a5;
  v8 = type metadata accessor for StorePlaceholderView(0, a2, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v26 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556664A0);
  v27 = *(_QWORD *)(v12 - 8);
  v28 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(a1 + *(int *)(v8 + 36));
  v26[1] = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, v11, v8);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556664A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556664B0);
  sub_221017AD4(&qword_2556664B8, &qword_2556664A8, MEMORY[0x24BEE12D8]);
  sub_221017AD4(&qword_2556664C0, &qword_2556664B0, (uint64_t)&unk_22130D818);
  sub_2212F48E4();
  v17 = (char *)(a1 + *(int *)(v8 + 48));
  v18 = *v17;
  v19 = *((_QWORD *)v17 + 1);
  LOBYTE(v30) = v18;
  v31 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658350);
  sub_2212F4764();
  LOBYTE(a1) = v32;
  KeyPath = swift_getKeyPath();
  v22 = v27;
  v21 = v28;
  v23 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v29, v14, v28);
  v24 = v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556664C8) + 36);
  *(_QWORD *)v24 = KeyPath;
  *(_BYTE *)(v24 + 8) = a1;
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v21);
}

uint64_t sub_22127B4CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;

  v8 = type metadata accessor for StorePlaceholderView(0, a3, a4, a4);
  return sub_22127A510(*a1 != *(_QWORD *)(*(_QWORD *)(a2 + *(int *)(v8 + 36)) + 16) - 1, *(_BYTE *)(a2 + *(int *)(v8 + 44)), (uint64_t (*)(void))sub_22127CBB8, a5);
}

void sub_22127B564(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  __int128 v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;
  __int128 v18;
  _OWORD v19[2];
  _BYTE v20[48];

  v8 = type metadata accessor for ProductViewStyleConfiguration();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StorePlaceholderView(0, a2, a3, v11);
  v13 = (__int128 *)(a1 + *(int *)(v12 + 52));
  v14 = v13[1];
  v18 = *v13;
  v19[0] = v14;
  *(_OWORD *)((char *)v19 + 9) = *(__int128 *)((char *)v13 + 25);
  sub_221036890((uint64_t)&v18, (uint64_t)v20, &qword_255658530);
  sub_22119E934((uint64_t)v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22105BD60);
  sub_221044D70();
  sub_22119E934((uint64_t)&v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_221046E30);
  sub_22127A720(v12, (uint64_t)v10);
  v15 = ((uint64_t (*)(char *))v16[0])(v10);
  swift_release();
  v17 = v16[4];
  sub_2210368C4((uint64_t)&v17);
  sub_221011A28((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ProductViewStyleConfiguration);
  *a4 = v15;
}

uint64_t sub_22127B694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for StorePlaceholderView(0, a3, a4, a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658350);
  return sub_2212F4770();
}

uint64_t sub_22127B720(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    result = swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    v5 = v2 + 4;
    v6 = (uint64_t *)(result + 40);
    while (1)
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      if (v3)
      {
        result = swift_bridgeObjectRetain();
      }
      else
      {
        v9 = v2[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_28;
        v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        v11 = v10 <= 1 ? 1 : v10;
        __swift_instantiateConcreteTypeFromMangledName(qword_2556663A0);
        v12 = (_QWORD *)swift_allocObject();
        v13 = (uint64_t)(_swift_stdlib_malloc_size_2(v12) - 32) / 24;
        v12[2] = v11;
        v12[3] = 2 * v13;
        v14 = v12 + 4;
        v15 = v2[3] >> 1;
        v5 = &v12[3 * v15 + 4];
        v3 = (v13 & 0x7FFFFFFFFFFFFFFFLL) - v15;
        if (v2[2])
        {
          if (v12 != v2 || v14 >= &v2[3 * v15 + 4])
            memmove(v14, v2 + 4, 24 * v15);
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        result = swift_release();
        v2 = v12;
      }
      v17 = __OFSUB__(v3--, 1);
      if (v17)
        break;
      v6 += 2;
      *v5 = v4;
      v5[1] = v7;
      v5[2] = v8;
      v5 += 3;
      if (v1 == ++v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v3 = 0;
LABEL_23:
  v18 = v2[3];
  if (v18 < 2)
    return (uint64_t)v2;
  v19 = v18 >> 1;
  v17 = __OFSUB__(v19, v3);
  v20 = v19 - v3;
  if (!v17)
  {
    v2[2] = v20;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_22127B8BC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_22127B968(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8)
     + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(void **)v13;
    v15 = *(_QWORD *)(v13 + 8);
    v16 = *(_BYTE *)(v13 + 16);
    swift_bridgeObjectRetain();
    sub_2210D43B0(v14, v15, v16);
    *(_QWORD *)v12 = v14;
    *(_QWORD *)(v12 + 8) = v15;
    *(_BYTE *)(v12 + 16) = v16;
    *(_BYTE *)(v12 + 17) = *(_BYTE *)(v13 + 17);
    v17 = (v12 + 25) & 0xFFFFFFFFFFFFFFF8;
    v18 = (v13 + 25) & 0xFFFFFFFFFFFFFFF8;
    *(_BYTE *)v17 = *(_BYTE *)v18;
    *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
    v19 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
    v20 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_QWORD *)(v20 + 24);
    v25 = *(_QWORD *)(v20 + 32);
    v26 = *(_BYTE *)(v20 + 40);
    swift_retain();
    sub_22105BD60(v21, v22, v23, v24, v25, v26);
    *(_QWORD *)v19 = v21;
    *(_QWORD *)(v19 + 8) = v22;
    *(_QWORD *)(v19 + 16) = v23;
    *(_QWORD *)(v19 + 24) = v24;
    *(_QWORD *)(v19 + 32) = v25;
    *(_BYTE *)(v19 + 40) = v26;
    v27 = (v17 + 71) & 0xFFFFFFFFFFFFFFF8;
    v28 = (v18 + 71) & 0xFFFFFFFFFFFFFFF8;
    v29 = *(_QWORD *)v28;
    LOBYTE(v22) = *(_BYTE *)(v28 + 8);
    sub_221017C08(*(_QWORD *)v28, v22);
    *(_QWORD *)v27 = v29;
    *(_BYTE *)(v27 + 8) = v22;
    v30 = (v17 + 87) & 0xFFFFFFFFFFFFFFF8;
    v31 = (v18 + 87) & 0xFFFFFFFFFFFFFFF8;
    v32 = *(_QWORD *)v31;
    LOBYTE(v22) = *(_BYTE *)(v31 + 8);
    sub_221017C08(*(_QWORD *)v31, v22);
    *(_QWORD *)v30 = v32;
    *(_BYTE *)(v30 + 8) = v22;
  }
  return v4;
}

double sub_22127BB44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  double result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = ((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  v4 &= 0xFFFFFFFFFFFFFFF8;
  sub_2210D43FC(*(void **)v4, *(_QWORD *)(v4 + 8), *(_BYTE *)(v4 + 16));
  v5 = (v4 + 25) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_221046E30(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_BYTE *)(v6 + 40));
  sub_221047104(*(_QWORD *)((v5 + 71) & 0xFFFFFFFFFFFFFFF8), *(unsigned __int8 *)(((v5 + 71) & 0xFFFFFFFFFFFFFFF8) + 8));
  *(_QWORD *)&result = sub_221047104(*(_QWORD *)((v5 + 87) & 0xFFFFFFFFFFFFFFF8), *(unsigned __int8 *)(((v5 + 87) & 0xFFFFFFFFFFFFFFF8) + 8)).n128_u64[0];
  return result;
}

uint64_t sub_22127BBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(void **)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v13 = *(_BYTE *)(v10 + 16);
  swift_bridgeObjectRetain();
  sub_2210D43B0(v11, v12, v13);
  *(_QWORD *)v9 = v11;
  *(_QWORD *)(v9 + 8) = v12;
  *(_BYTE *)(v9 + 16) = v13;
  *(_BYTE *)(v9 + 17) = *(_BYTE *)(v10 + 17);
  v14 = (v9 + 25) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v10 + 25) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  v16 = (v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  v20 = *(_QWORD *)(v17 + 16);
  v21 = *(_QWORD *)(v17 + 24);
  v22 = *(_QWORD *)(v17 + 32);
  v23 = *(_BYTE *)(v17 + 40);
  swift_retain();
  sub_22105BD60(v18, v19, v20, v21, v22, v23);
  *(_QWORD *)v16 = v18;
  *(_QWORD *)(v16 + 8) = v19;
  *(_QWORD *)(v16 + 16) = v20;
  *(_QWORD *)(v16 + 24) = v21;
  *(_QWORD *)(v16 + 32) = v22;
  *(_BYTE *)(v16 + 40) = v23;
  v24 = (v14 + 71) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v15 + 71) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)v25;
  LOBYTE(v19) = *(_BYTE *)(v25 + 8);
  sub_221017C08(*(_QWORD *)v25, v19);
  *(_QWORD *)v24 = v26;
  *(_BYTE *)(v24 + 8) = v19;
  v27 = (v14 + 87) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v15 + 87) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_QWORD *)v28;
  LOBYTE(v19) = *(_BYTE *)(v28 + 8);
  sub_221017C08(*(_QWORD *)v28, v19);
  *(_QWORD *)v27 = v29;
  *(_BYTE *)(v27 + 8) = v19;
  return a1;
}

uint64_t sub_22127BD58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 + a2;
  v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v7 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = v9 & 0xFFFFFFFFFFFFFFF8;
  v12 = *(void **)(v9 & 0xFFFFFFFFFFFFFFF8);
  v13 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8);
  LOBYTE(v9) = *(_BYTE *)((v9 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_2210D43B0(v12, v13, v9);
  v14 = *(void **)v10;
  v15 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v10 = v12;
  *(_QWORD *)(v10 + 8) = v13;
  v16 = *(_BYTE *)(v10 + 16);
  *(_BYTE *)(v10 + 16) = v9;
  sub_2210D43FC(v14, v15, v16);
  *(_BYTE *)(v10 + 17) = *(_BYTE *)(v11 + 17);
  v17 = (v10 + 25) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v11 + 25) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v17 = *(_BYTE *)v18;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  swift_retain();
  swift_release();
  v19 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v20;
  v22 = *(_QWORD *)(v20 + 8);
  v23 = *(_QWORD *)(v20 + 16);
  v24 = *(_QWORD *)(v20 + 24);
  v25 = *(_QWORD *)(v20 + 32);
  v26 = *(_BYTE *)(v20 + 40);
  sub_22105BD60(*(_QWORD *)v20, v22, v23, v24, v25, v26);
  v27 = *(_QWORD *)v19;
  v28 = *(_QWORD *)(v19 + 8);
  v29 = *(_QWORD *)(v19 + 16);
  v30 = *(_QWORD *)(v19 + 24);
  v31 = *(_QWORD *)(v19 + 32);
  v32 = *(_BYTE *)(v19 + 40);
  *(_QWORD *)v19 = v21;
  *(_QWORD *)(v19 + 8) = v22;
  *(_QWORD *)(v19 + 16) = v23;
  *(_QWORD *)(v19 + 24) = v24;
  *(_QWORD *)(v19 + 32) = v25;
  *(_BYTE *)(v19 + 40) = v26;
  sub_221046E30(v27, v28, v29, v30, v31, v32);
  v33 = (v17 + 71) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v18 + 71) & 0xFFFFFFFFFFFFFFF8;
  v35 = *(_QWORD *)v34;
  LOBYTE(v22) = *(_BYTE *)(v34 + 8);
  sub_221017C08(*(_QWORD *)v34, v22);
  v36 = *(_QWORD *)v33;
  v37 = *(unsigned __int8 *)(v33 + 8);
  *(_QWORD *)v33 = v35;
  *(_BYTE *)(v33 + 8) = v22;
  sub_221047104(v36, v37);
  v38 = (v17 + 87) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v18 + 87) & 0xFFFFFFFFFFFFFFF8;
  v40 = *(_QWORD *)v39;
  LOBYTE(v22) = *(_BYTE *)(v39 + 8);
  sub_221017C08(*(_QWORD *)v39, v22);
  v41 = *(_QWORD *)v38;
  v42 = *(unsigned __int8 *)(v38 + 8);
  *(_QWORD *)v38 = v40;
  *(_BYTE *)(v38 + 8) = v22;
  sub_221047104(v41, v42);
  return a1;
}

uint64_t sub_22127BF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 *v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 17) = *(_BYTE *)(v10 + 17);
  v12 = (_OWORD *)((v9 + 25) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_OWORD *)((v10 + 25) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = (_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (__int128 *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = *v15;
  v16 = v15[1];
  *(_OWORD *)((char *)v14 + 25) = *(__int128 *)((char *)v15 + 25);
  *v14 = v17;
  v14[1] = v16;
  v18 = ((unint64_t)v12 + 71) & 0xFFFFFFFFFFFFFFF8;
  v19 = ((unint64_t)v13 + 71) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = v20;
  v21 = ((unint64_t)v12 + 87) & 0xFFFFFFFFFFFFFFF8;
  v22 = ((unint64_t)v13 + 87) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v18) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = v18;
  return a1;
}

uint64_t sub_22127C00C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 16);
  v12 = *(void **)v9;
  v13 = *(_QWORD *)(v9 + 8);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v14 = *(_BYTE *)(v9 + 16);
  *(_BYTE *)(v9 + 16) = v11;
  sub_2210D43FC(v12, v13, v14);
  *(_BYTE *)(v9 + 17) = *(_BYTE *)(v10 + 17);
  v15 = (v9 + 25) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v10 + 25) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v15 = *(_BYTE *)v16;
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(v16 + 8);
  swift_release();
  v17 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)(v17 + 32);
  v19 = *(_BYTE *)(v17 + 40);
  v20 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v20;
  v22 = *(_QWORD *)(v20 + 8);
  v23 = *(_QWORD *)(v20 + 16);
  v24 = *(_QWORD *)(v20 + 24);
  v25 = *(_QWORD *)(v20 + 32);
  v26 = *(_BYTE *)(v20 + 40);
  v27 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v17;
  *(_OWORD *)(v20 + 16) = v27;
  *(_QWORD *)(v20 + 32) = v18;
  *(_BYTE *)(v20 + 40) = v19;
  sub_221046E30(v21, v22, v23, v24, v25, v26);
  v28 = (v15 + 71) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v16 + 71) & 0xFFFFFFFFFFFFFFF8;
  v30 = *(_QWORD *)v29;
  LOBYTE(v29) = *(_BYTE *)(v29 + 8);
  v31 = *(_QWORD *)v28;
  v32 = *(unsigned __int8 *)(v28 + 8);
  *(_QWORD *)v28 = v30;
  *(_BYTE *)(v28 + 8) = v29;
  sub_221047104(v31, v32);
  v33 = (v15 + 87) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v16 + 87) & 0xFFFFFFFFFFFFFFF8;
  v35 = *(_QWORD *)v34;
  LOBYTE(v34) = *(_BYTE *)(v34 + 8);
  v36 = *(_QWORD *)v33;
  v37 = *(unsigned __int8 *)(v33 + 8);
  *(_QWORD *)v33 = v35;
  *(_BYTE *)(v33 + 8) = v34;
  sub_221047104(v36, v37);
  return a1;
}

uint64_t sub_22127C158(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v15 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    v9 = ((((((((v8 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 25) & 0xFFFFFFF8) + 87) & 0xFFFFFFF8) + 9;
    v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_22127C1F8 + 4 * byte_221316180[v13]))();
  }
}

void sub_22127C288(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8)
       + 87) & 0xFFFFFFFFFFFFFFF8)
     + 9;
  if (v6 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (v6 < a2)
  {
    v11 = ~v6 + a2;
    v12 = (~(_BYTE)v6 + a2);
    if (v7 >= 4)
      v13 = v11;
    else
      v13 = v12;
    bzero(a1, v7);
    if ((_DWORD)v7 == 1)
      *a1 = v13;
    else
      *(_DWORD *)a1 = v13;
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_22127C3B8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x22127C428);
}

void sub_22127C3C0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x22127C3C8);
  JUMPOUT(0x22127C428);
}

void sub_22127C404()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x22127C428);
}

void sub_22127C40C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x22127C428);
}

uint64_t sub_22127C414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!(_DWORD)a2)
    JUMPOUT(0x22127C428);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x22127C424);
    JUMPOUT(0x22127C420);
  }
  return __swift_storeEnumTagSinglePayload(v5, a2, a3, a4);
}

uint64_t sub_22127C440()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_22127C474(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  size_t v33;
  int64_t v34;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  BOOL v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;

  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_255662490);
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_29();
  v54 = v2;
  MEMORY[0x24BDAC7A8](v3);
  v53 = (_QWORD *)((char *)v45 - v4);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v45 - v6;
  v55 = v8;
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v52 = v10;
  v45[0] = a1;
  if (v10)
  {
    v46 = (v9 + 32) & ~v9;
    v12 = MEMORY[0x24BEE4AF8] + v46;
    v13 = sub_2212F51B4();
    v14 = 0;
    v15 = 0;
    v16 = *(_QWORD *)(v13 - 8);
    v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v18 = *(_QWORD *)(v16 + 72);
    v50 = v16;
    v51 = v13;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    v48 = v18;
    v49 = v19;
    v45[1] = v9 | 7;
    v20 = v11;
    v21 = v47;
    while (1)
    {
      v22 = v54 + *(int *)(v21 + 48);
      v23 = v51;
      v49(v22, v17, v51);
      v24 = v53;
      v25 = (char *)v53 + *(int *)(v21 + 48);
      *v53 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v25, v22, v23);
      v26 = (uint64_t)v24;
      v27 = (uint64_t)v7;
      sub_221036890(v26, (uint64_t)v7, &qword_255662490);
      if (v15)
      {
        v11 = v20;
      }
      else
      {
        v28 = v20[3];
        if ((uint64_t)((v28 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_34;
        v29 = v28 & 0xFFFFFFFFFFFFFFFELL;
        if (v29 <= 1)
          v30 = 1;
        else
          v30 = v29;
        __swift_instantiateConcreteTypeFromMangledName(&qword_255666428);
        v31 = *(_QWORD *)(v55 + 72);
        v32 = v46;
        v11 = (_QWORD *)swift_allocObject();
        v33 = _swift_stdlib_malloc_size_2(v11);
        if (!v31)
          goto LABEL_35;
        v34 = v33 - v32;
        if (v33 - v32 == 0x8000000000000000 && v31 == -1)
          goto LABEL_36;
        v36 = v34 / v31;
        v11[2] = v30;
        v11[3] = 2 * (v34 / v31);
        v37 = (char *)v11 + v32;
        v38 = v20[3];
        v39 = (v38 >> 1) * v31;
        if (v20[2])
        {
          if (v11 < v20 || v37 >= (char *)v20 + v46 + v39)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v11 != v20)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v20[2] = 0;
        }
        v12 = (uint64_t)&v37[v39];
        v15 = (v36 & 0x7FFFFFFFFFFFFFFFLL) - (v38 >> 1);
        swift_release();
        v21 = v47;
      }
      v41 = __OFSUB__(v15--, 1);
      if (v41)
        break;
      ++v14;
      v7 = (char *)v27;
      sub_221036890(v27, v12, &qword_255662490);
      v12 += *(_QWORD *)(v55 + 72);
      v17 += v48;
      v20 = v11;
      if (v52 == v14)
        goto LABEL_29;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v15 = 0;
LABEL_29:
  swift_bridgeObjectRelease();
  v42 = v11[3];
  if (v42 >= 2)
  {
    v43 = v42 >> 1;
    v41 = __OFSUB__(v43, v15);
    v44 = v43 - v15;
    if (v41)
    {
LABEL_37:
      __break(1u);
      return;
    }
    v11[2] = v44;
  }
}

uint64_t sub_22127C77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  type metadata accessor for StorePlaceholderView(0, v6, v7, a4);
  OUTLINED_FUNCTION_9_50();
  return sub_22127B694(a1, v8, v6, v7);
}

uint64_t sub_22127C7C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22127C7E8(_QWORD *a1)
{
  uint64_t v1;

  return sub_22112AE08(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

unint64_t sub_22127C7F0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_255666458;
  if (!qword_255666458)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666450);
    v2 = sub_22127C85C();
    v3[0] = MEMORY[0x24BDF5138];
    v3[1] = v2;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255666458);
  }
  return result;
}

unint64_t sub_22127C85C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255666460;
  if (!qword_255666460)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556564D0);
    v2[0] = sub_22127C8C8();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255666460);
  }
  return result;
}

unint64_t sub_22127C8C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255666468;
  if (!qword_255666468)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556564C8);
    sub_221017AD4(&qword_255666470, &qword_255662B98, (uint64_t)&protocol conformance descriptor for ProductView<A, B>);
    v3[0] = v2;
    v3[1] = sub_22127C94C();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255666468);
  }
  return result;
}

unint64_t sub_22127C94C()
{
  unint64_t result;

  result = qword_255666478;
  if (!qword_255666478)
  {
    result = MEMORY[0x22766BAC4](&unk_22131856C, &type metadata for AnyProductViewStyleModifier);
    atomic_store(result, (unint64_t *)&qword_255666478);
  }
  return result;
}

unint64_t sub_22127C988()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255666480;
  if (!qword_255666480)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666438);
    sub_221017AD4(&qword_255666488, &qword_255666430, (uint64_t)&unk_22130D7C8);
    v3 = v2;
    sub_221017AD4(&qword_255662488, &qword_255662480, MEMORY[0x24BDF09B0]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255666480);
  }
  return result;
}

uint64_t sub_22127CA24(uint64_t a1)
{
  return sub_22127A62C(a1, &qword_255666490, (uint64_t)&type metadata for LargeProductViewStyle, &qword_255666498);
}

uint64_t sub_22127CA50()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    swift_release();
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for StorePlaceholderView(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*((_QWORD *)v6 - 1) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8, v5);
  swift_bridgeObjectRelease();
  sub_2210D43FC(*(void **)(v8 + v6[10]), *(_QWORD *)(v8 + v6[10] + 8), *(_BYTE *)(v8 + v6[10] + 16));
  swift_release();
  v9 = v8 + v6[13];
  sub_221046E30(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), *(_BYTE *)(v9 + 40));
  OUTLINED_FUNCTION_21_13(v6[14]);
  OUTLINED_FUNCTION_21_13(v6[15]);
  return swift_deallocObject();
}

uint64_t sub_22127CB60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  type metadata accessor for StorePlaceholderView(0, v6, v7, a2);
  OUTLINED_FUNCTION_9_50();
  return sub_22127B4CC(a1, v8, v6, v7, a3);
}

void sub_22127CBB8(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  sub_22127B564(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_22127CBD8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2556664E0;
  if (!qword_2556664E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556664E8);
    v2[0] = sub_22127C7F0();
    v2[1] = sub_22127C988();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2556664E0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_7_51()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_13_42(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_221036BA4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_14_39()
{
  return sub_22112A520();
}

uint64_t OUTLINED_FUNCTION_15_34()
{
  return sub_2212F3A14();
}

uint64_t OUTLINED_FUNCTION_16_33()
{
  return sub_22112A4E8();
}

uint64_t OUTLINED_FUNCTION_17_36()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_22127CCA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = sub_2212F3840();
  MEMORY[0x24BDAC7A8](v3);
  v4 = (int *)type metadata accessor for SubscriptionOptionButtonModel();
  v5 = v1 + v4[7];
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 < 2)
    goto LABEL_7;
  if (v6 == 2)
  {
    if ((*(_BYTE *)(v1 + v4[5]) & 1) == 0 && *(_BYTE *)(v1 + v4[6]) != 1)
    {
      sub_221277580();
LABEL_15:
      *(_QWORD *)a1 = v10;
      *(_QWORD *)(a1 + 8) = v11;
      *(_BYTE *)(a1 + 16) = v12 & 1;
      *(_QWORD *)(a1 + 24) = v13;
      OUTLINED_FUNCTION_2_24();
      return swift_storeEnumTagMultiPayload();
    }
LABEL_7:
    v9 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_3_22() + 36));
    if ((v9 & 8) != 0)
    {
      sub_2212F3834();
      sub_2212F3828();
      sub_2212F381C();
      sub_2212F3828();
      v10 = sub_2212F3858();
    }
    else if ((v9 & 6) != 0)
    {
      sub_22123B8DC();
    }
    else
    {
      swift_bridgeObjectRetain();
      v10 = sub_2212F384C();
    }
    goto LABEL_15;
  }
  if (v6 == 3)
  {
    sub_221277918();
    v7 = a1 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    OUTLINED_FUNCTION_2_56();
    v8 = _s11PriceStringOMa(0);
    __swift_storeEnumTagSinglePayload(v7, 0, 1, v8);
  }
  else
  {
    v14 = *(_QWORD *)(v5 + 32);
    v15 = *(_BYTE *)(v5 + 24);
    v16 = *(_QWORD *)(v5 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = OUTLINED_FUNCTION_1_26();
    sub_221046F8C(v17, v18);
    v19 = OUTLINED_FUNCTION_1_26();
    sub_2210470B0(v19, v20);
    *(_QWORD *)a1 = v16;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = v15 & 1;
    *(_QWORD *)(a1 + 24) = v14;
  }
  OUTLINED_FUNCTION_2_24();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_22127CF10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = type metadata accessor for SubscriptionOptionButtonModel();
  v4 = (_QWORD *)(v1 + *(int *)(v3 + 28));
  v5 = v4[2];
  if (v5 >= 4)
  {
    v10 = v4[6];
    if (v10)
    {
      v11 = v4[7];
      v12 = v4[8];
      *(_QWORD *)a1 = v4[5];
      *(_QWORD *)(a1 + 8) = v10;
      *(_BYTE *)(a1 + 16) = v11 & 1;
      *(_QWORD *)(a1 + 24) = v12;
      v13 = OUTLINED_FUNCTION_2_24();
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload(a1, 0, 1, v13);
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
  }
  else
  {
    if (*(_BYTE *)(v1 + *(int *)(v3 + 20)) == 1)
    {
      *(_QWORD *)a1 = sub_2212F384C();
      *(_QWORD *)(a1 + 8) = v6;
      *(_BYTE *)(a1 + 16) = v7 & 1;
      *(_QWORD *)(a1 + 24) = v8;
      v9 = OUTLINED_FUNCTION_2_24();
LABEL_8:
      swift_storeEnumTagMultiPayload();
      return OUTLINED_FUNCTION_3_1(a1, 0, 1, v9);
    }
    if (v5 <= 2)
    {
      sub_221277918();
      v15 = a1 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
      OUTLINED_FUNCTION_2_56();
      v16 = _s11PriceStringOMa(0);
      __swift_storeEnumTagSinglePayload(v15, 0, 1, v16);
      v9 = OUTLINED_FUNCTION_2_24();
      goto LABEL_8;
    }
  }
  v17 = OUTLINED_FUNCTION_2_24();
  return OUTLINED_FUNCTION_3_1(a1, 1, 1, v17);
}

uint64_t type metadata accessor for SubscriptionOptionButtonModel()
{
  uint64_t result;

  result = qword_255666548;
  if (!qword_255666548)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_22127D0D0(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _OWORD *v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    sub_22103D94C(*(_QWORD *)a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v10;
    v11 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v11;
    v12 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v12;
    v13 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
    v14 = v13[8];
    v15 = (void *)(a1 + v14);
    v16 = (const void *)(a2 + v14);
    v17 = sub_2212F5124();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
    }
    *(_QWORD *)(a1 + v13[9]) = *(_QWORD *)(a2 + v13[9]);
    v20 = v13[10];
    v21 = (void *)(a1 + v20);
    v22 = (const void *)(a2 + v20);
    v23 = sub_2212F50D0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
    }
    v25 = a3[6];
    *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
    *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
    v26 = a3[7];
    v27 = a1 + v26;
    v28 = a2 + v26;
    LOBYTE(v25) = *(_BYTE *)(a2 + v26);
    v29 = (_BYTE *)(a1 + v26);
    *v29 = v25;
    v30 = v29 + 8;
    v31 = *(_QWORD *)(v28 + 16);
    if (v31 >= 4)
    {
      *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
      *(_QWORD *)(v27 + 16) = v31;
      *(_BYTE *)(v27 + 24) = *(_BYTE *)(v28 + 24);
      *(_QWORD *)(v27 + 32) = *(_QWORD *)(v28 + 32);
      v34 = *(_QWORD *)(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v34)
      {
        *(_QWORD *)(v27 + 40) = *(_QWORD *)(v28 + 40);
        *(_QWORD *)(v27 + 48) = v34;
        *(_BYTE *)(v27 + 56) = *(_BYTE *)(v28 + 56);
        *(_QWORD *)(v27 + 64) = *(_QWORD *)(v28 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v35 = *(_OWORD *)(v28 + 56);
        *(_OWORD *)(v27 + 40) = *(_OWORD *)(v28 + 40);
        *(_OWORD *)(v27 + 56) = v35;
      }
    }
    else
    {
      v32 = *(_OWORD *)(v28 + 24);
      *v30 = *(_OWORD *)(v28 + 8);
      v30[1] = v32;
      v33 = *(_OWORD *)(v28 + 56);
      v30[2] = *(_OWORD *)(v28 + 40);
      v30[3] = v33;
    }
    *(_BYTE *)(v27 + 72) = *(_BYTE *)(v28 + 72);
  }
  return a1;
}

unint64_t sub_22127D364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;

  sub_221015344(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for SubscriptionStoreCopyWriter(0);
  v5 = a1 + *(int *)(v4 + 32);
  v6 = sub_2212F5124();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(v4 + 40);
  v8 = sub_2212F50D0();
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + *(int *)(a2 + 28);
  result = *(_QWORD *)(v9 + 16);
  if (result >= 4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(v9 + 48);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_22127D484(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _OWORD *v28;
  unint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_22103D94C(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v9;
  v10 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v10;
  v11 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v11;
  v12 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  v13 = v12[8];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_2212F5124();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  *(_QWORD *)(a1 + v12[9]) = *(_QWORD *)(a2 + v12[9]);
  v18 = v12[10];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_2212F50D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  }
  v23 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[7];
  v25 = a1 + v24;
  v26 = a2 + v24;
  LOBYTE(v23) = *(_BYTE *)(a2 + v24);
  v27 = (_BYTE *)(a1 + v24);
  *v27 = v23;
  v28 = v27 + 8;
  v29 = *(_QWORD *)(v26 + 16);
  if (v29 >= 4)
  {
    *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 16) = v29;
    *(_BYTE *)(v25 + 24) = *(_BYTE *)(v26 + 24);
    *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
    v32 = *(_QWORD *)(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32)
    {
      *(_QWORD *)(v25 + 40) = *(_QWORD *)(v26 + 40);
      *(_QWORD *)(v25 + 48) = v32;
      *(_BYTE *)(v25 + 56) = *(_BYTE *)(v26 + 56);
      *(_QWORD *)(v25 + 64) = *(_QWORD *)(v26 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v33 = *(_OWORD *)(v26 + 56);
      *(_OWORD *)(v25 + 40) = *(_OWORD *)(v26 + 40);
      *(_OWORD *)(v25 + 56) = v33;
    }
  }
  else
  {
    v30 = *(_OWORD *)(v26 + 24);
    *v28 = *(_OWORD *)(v26 + 8);
    v28[1] = v30;
    v31 = *(_OWORD *)(v26 + 56);
    v28[2] = *(_OWORD *)(v26 + 40);
    v28[3] = v31;
  }
  *(_BYTE *)(v25 + 72) = *(_BYTE *)(v26 + 72);
  return a1;
}

uint64_t sub_22127D6EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  int EnumTagSinglePayload;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  __int128 *v33;
  unint64_t v34;
  unint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_22103D94C(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_221015344(v9, v10, v11);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  v13 = v12[8];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = sub_2212F5124();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16);
  if (EnumTagSinglePayload)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v19 = *(_QWORD *)(v16 - 8);
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v14, v16);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v19 + 24))(v14, v15, v16);
LABEL_7:
  *(_QWORD *)(a1 + v12[9]) = *(_QWORD *)(a2 + v12[9]);
  v21 = v12[10];
  v22 = (void *)(a1 + v21);
  v23 = (const void *)(a2 + v21);
  v24 = sub_2212F50D0();
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v27 = *(_QWORD *)(v24 - 8);
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v27 + 8))(v22, v24);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v27 + 24))(v22, v23, v24);
LABEL_13:
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v29 = a3[7];
  v30 = a1 + v29;
  v31 = a2 + v29;
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v32 = (__int128 *)(a1 + v29 + 8);
  v33 = (__int128 *)(v31 + 8);
  v34 = *(_QWORD *)(a1 + v29 + 16);
  v35 = *(_QWORD *)(v31 + 16);
  if (v34 < 4)
  {
    if (v35 < 4)
    {
      v36 = *v33;
      v37 = *(_OWORD *)(v31 + 24);
      v38 = *(_OWORD *)(v31 + 56);
      v32[2] = *(_OWORD *)(v31 + 40);
      v32[3] = v38;
LABEL_16:
      *v32 = v36;
      v32[1] = v37;
      goto LABEL_29;
    }
    *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
    *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
    *(_BYTE *)(v30 + 24) = *(_BYTE *)(v31 + 24);
    *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
    v42 = *(_QWORD *)(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v42)
    {
      v43 = *(_OWORD *)(v31 + 56);
      *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
      *(_OWORD *)(v30 + 56) = v43;
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v35 < 4)
  {
    sub_2210E9BC8((uint64_t)v32);
    v39 = *(_OWORD *)(v31 + 56);
    v41 = *v33;
    v40 = *(_OWORD *)(v31 + 24);
    v32[2] = *(_OWORD *)(v31 + 40);
    v32[3] = v39;
    *v32 = v41;
    v32[1] = v40;
    goto LABEL_29;
  }
  *(_QWORD *)(v30 + 8) = *(_QWORD *)(v31 + 8);
  *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v30 + 24) = *(_BYTE *)(v31 + 24);
  *(_QWORD *)(v30 + 32) = *(_QWORD *)(v31 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = (__int128 *)(v30 + 40);
  v44 = (__int128 *)(v31 + 40);
  v45 = *(_QWORD *)(v31 + 48);
  if (!*(_QWORD *)(v30 + 48))
  {
    if (!v45)
    {
      v36 = *v44;
      v37 = *(_OWORD *)(v31 + 56);
      goto LABEL_16;
    }
LABEL_27:
    *(_QWORD *)(v30 + 40) = *(_QWORD *)(v31 + 40);
    *(_QWORD *)(v30 + 48) = *(_QWORD *)(v31 + 48);
    *(_BYTE *)(v30 + 56) = *(_BYTE *)(v31 + 56);
    *(_QWORD *)(v30 + 64) = *(_QWORD *)(v31 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  if (v45)
  {
    *(_QWORD *)(v30 + 40) = *(_QWORD *)(v31 + 40);
    *(_QWORD *)(v30 + 48) = *(_QWORD *)(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v30 + 56) = *(_BYTE *)(v31 + 56);
    *(_QWORD *)(v30 + 64) = *(_QWORD *)(v31 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2210A3354(v30 + 40);
    v46 = *(_OWORD *)(v31 + 56);
    *v32 = *v44;
    *(_OWORD *)(v30 + 56) = v46;
  }
LABEL_29:
  *(_BYTE *)(v30 + 72) = *(_BYTE *)(v31 + 72);
  return a1;
}

uint64_t sub_22127DB0C(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  v7 = v6[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_2212F5124();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v12 = v6[10];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_2212F50D0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v17 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  memcpy((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), 0x49uLL);
  return a1;
}

uint64_t sub_22127DCAC(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  int EnumTagSinglePayload;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  unint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v39;
  __int128 v40;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_221015344(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  v13 = (int *)type metadata accessor for SubscriptionStoreCopyWriter(0);
  v14 = v13[8];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = sub_2212F5124();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (EnumTagSinglePayload)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v20 = *(_QWORD *)(v17 - 8);
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v15, v17);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659810);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v20 + 40))(v15, v16, v17);
LABEL_7:
  *(_QWORD *)(a1 + v13[9]) = *(_QWORD *)(a2 + v13[9]);
  v22 = v13[10];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  v25 = sub_2212F50D0();
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v25);
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v28 = *(_QWORD *)(v25 - 8);
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v23, v25);
LABEL_12:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v28 + 40))(v23, v24, v25);
LABEL_13:
  v30 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v31 = a3[7];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_BYTE *)(a1 + v31) = *(_BYTE *)(a2 + v31);
  v34 = (_OWORD *)(a1 + v31 + 8);
  if (*(_QWORD *)(a1 + v31 + 16) >= 4uLL)
  {
    v35 = *(_QWORD *)(v33 + 16);
    if (v35 >= 4)
    {
      *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
      *(_QWORD *)(v32 + 16) = v35;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v32 + 24) = *(_BYTE *)(v33 + 24);
      *(_QWORD *)(v32 + 32) = *(_QWORD *)(v33 + 32);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v32 + 48))
      {
        v39 = *(_QWORD *)(v33 + 48);
        if (v39)
        {
          *(_QWORD *)(v32 + 40) = *(_QWORD *)(v33 + 40);
          *(_QWORD *)(v32 + 48) = v39;
          swift_bridgeObjectRelease();
          *(_BYTE *)(v32 + 56) = *(_BYTE *)(v33 + 56);
          *(_QWORD *)(v32 + 64) = *(_QWORD *)(v33 + 64);
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
        sub_2210A3354(v32 + 40);
      }
      v40 = *(_OWORD *)(v33 + 56);
      *(_OWORD *)(v32 + 40) = *(_OWORD *)(v33 + 40);
      *(_OWORD *)(v32 + 56) = v40;
      goto LABEL_17;
    }
    sub_2210E9BC8((uint64_t)v34);
  }
  v36 = *(_OWORD *)(v33 + 24);
  *v34 = *(_OWORD *)(v33 + 8);
  v34[1] = v36;
  v37 = *(_OWORD *)(v33 + 56);
  v34[2] = *(_OWORD *)(v33 + 40);
  v34[3] = v37;
LABEL_17:
  *(_BYTE *)(v32 + 72) = *(_BYTE *)(v33 + 72);
  return a1;
}

uint64_t sub_22127DFBC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22127DFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = OUTLINED_FUNCTION_3_22();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 16);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 4;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_22127E04C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22127E058(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_3_22();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return OUTLINED_FUNCTION_3_1(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = (a2 + 3);
  return result;
}

uint64_t sub_22127E0C4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SubscriptionStoreCopyWriter(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void OUTLINED_FUNCTION_2_56()
{
  sub_221277918();
}

unint64_t sub_22127E14C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_221017C08(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(int *)(a3 + 20);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (_QWORD *)(a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(qword_255656688);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_2212F2DF0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v14 = *(int *)(a3 + 24);
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255657138);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2212F3480();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22127E2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_221017894(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(qword_255656688);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_2212F2DF0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657138);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_2212F3480();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_22127E394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_221017C08(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  __swift_instantiateConcreteTypeFromMangledName(qword_255656688);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2212F2DF0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657138);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_2212F3480();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22127E4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_221017C08(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_221017894(v8, v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 20);
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    sub_22101763C(a1 + v10, qword_255656688);
    __swift_instantiateConcreteTypeFromMangledName(qword_255656688);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2212F2DF0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v14 = *(int *)(a3 + 24);
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    sub_22101763C(a1 + v14, &qword_255657138);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255657138);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_2212F3480();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22127E640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_255656688);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_2212F2DF0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 24);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657138);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_2212F3480();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22127E778(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_221017894(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    v10 = *(int *)(a3 + 20);
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    sub_22101763C(a1 + v10, qword_255656688);
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_255656688);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_2212F2DF0();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    v15 = *(int *)(a3 + 24);
    v16 = (void *)(a1 + v15);
    v17 = (char *)a2 + v15;
    sub_22101763C(a1 + v15, &qword_255657138);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657138);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_2212F3480();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22127E8E4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22127E8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_25565A450);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 20);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(qword_25565E0B8);
      v10 = *(int *)(a3 + 24);
    }
    return __swift_getEnumTagSinglePayload(a1 + v10, a2, v9);
  }
}

uint64_t sub_22127E988()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22127E994(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_25565A450);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(qword_25565E0B8);
      v10 = *(int *)(a4 + 24);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StoreKitProminentButtonStyle(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_2556665E0);
}

void sub_22127EA40()
{
  unint64_t v0;
  unint64_t v1;

  sub_221034354(319, (unint64_t *)&qword_255656710, (void (*)(uint64_t))MEMORY[0x24BDEB418]);
  if (v0 <= 0x3F)
  {
    sub_221034354(319, qword_25565E128, (void (*)(uint64_t))MEMORY[0x24BDEDCA8]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_22127EAF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22127EB00()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v22;

  v0 = sub_2212F3414();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (_OWORD *)((char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_2212F3480();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - v8;
  type metadata accessor for StoreKitProminentButtonStyle(0);
  sub_221046028();
  sub_2212F3474();
  v10 = sub_2212F345C();
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  v11(v9, v3);
  if ((v10 & 1) != 0
    || (sub_221046028(), sub_2212F3450(), v12 = sub_2212F345C(), v11(v6, v3), v11(v9, v3), (v12 & 1) != 0))
  {
    v13 = (char *)v2 + *(int *)(v0 + 20);
    v14 = *MEMORY[0x24BDEEB68];
    v15 = sub_2212F387C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
    __asm { FMOV            V0.2D, #14.0 }
    *v2 = _Q0;
    sub_2210B43C0((uint64_t)&qword_255656958);
  }
  else
  {
    sub_221046028();
    sub_2210B43C0((uint64_t)&unk_255666750);
  }
  return sub_2212F4950();
}

uint64_t sub_22127ECE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t KeyPath;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t result;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  double v124;
  uint64_t v125;
  double v126;
  uint64_t v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD v173[2];
  uint64_t v174;
  char v175[8];
  _QWORD v176[2];
  char v177[8];
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187[4];
  _QWORD v188[2];
  char v189[8];
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;

  v174 = a1;
  v1 = sub_2212F3324();
  OUTLINED_FUNCTION_15_35(v1, (uint64_t)&v191);
  v173[0] = v2;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_3_4();
  v172 = v4;
  OUTLINED_FUNCTION_12_6();
  v5 = sub_2212F34A4();
  OUTLINED_FUNCTION_15_35(v5, (uint64_t)&v190);
  v171 = v6;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_3_4();
  v169 = v8;
  OUTLINED_FUNCTION_12_6();
  v181 = sub_2212F3258();
  v168 = *(_QWORD *)(v181 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657F18);
  v12 = OUTLINED_FUNCTION_1_7(v11, (uint64_t)&v184);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_3_4();
  v182 = v13;
  OUTLINED_FUNCTION_12_6();
  v14 = sub_2212F4038();
  v184 = *(_QWORD *)(v14 - 8);
  v185 = v14;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_3_4();
  v183 = v16;
  OUTLINED_FUNCTION_12_6();
  v17 = sub_2212F3C9C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_13_0();
  v21 = v20 - v19;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255663D78);
  v23 = OUTLINED_FUNCTION_1_7(v22, (uint64_t)&v192);
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_13_0();
  v26 = v25 - v24;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666620);
  v28 = OUTLINED_FUNCTION_1_7(v27, (uint64_t)&v193);
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_13_0();
  v31 = v30 - v29;
  v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666628);
  v178 = *(_QWORD *)(v180 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_13_0();
  v35 = v34 - v33;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666630);
  v37 = OUTLINED_FUNCTION_1_7(v36, (uint64_t)&v195);
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_13_0();
  v40 = v39 - v38;
  v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666638);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_13_0();
  v44 = v43 - v42;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666640);
  v46 = OUTLINED_FUNCTION_1_7(v45, (uint64_t)&v194);
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_13_0();
  v49 = v48 - v47;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666648);
  OUTLINED_FUNCTION_15_35(v50, (uint64_t)v175);
  v153 = v51;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v52);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v53);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666650);
  v55 = OUTLINED_FUNCTION_1_7(v54, (uint64_t)&v172);
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v56);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666658);
  v58 = OUTLINED_FUNCTION_1_7(v57, (uint64_t)v173);
  MEMORY[0x24BDAC7A8](v58);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v59);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666660);
  v61 = OUTLINED_FUNCTION_1_7(v60, (uint64_t)v176);
  MEMORY[0x24BDAC7A8](v61);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v62);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666668);
  v64 = OUTLINED_FUNCTION_1_7(v63, (uint64_t)v177);
  MEMORY[0x24BDAC7A8](v64);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v65);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666670);
  v67 = OUTLINED_FUNCTION_1_7(v66, (uint64_t)&v179);
  MEMORY[0x24BDAC7A8](v67);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v68);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666678);
  v70 = OUTLINED_FUNCTION_1_7(v69, (uint64_t)&v181);
  MEMORY[0x24BDAC7A8](v70);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v71);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666680);
  v73 = OUTLINED_FUNCTION_1_7(v72, (uint64_t)&v185);
  MEMORY[0x24BDAC7A8](v73);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v74);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666688);
  v76 = OUTLINED_FUNCTION_1_7(v75, (uint64_t)&v186);
  MEMORY[0x24BDAC7A8](v76);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v77);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666690);
  v79 = OUTLINED_FUNCTION_1_7(v78, (uint64_t)v188);
  MEMORY[0x24BDAC7A8](v79);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v80);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666698);
  OUTLINED_FUNCTION_15_35(v81, (uint64_t)v189);
  v165 = v82;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v83);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v84);
  sub_2212F3CA8();
  KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v26, v21, v17);
  OUTLINED_FUNCTION_3_5();
  v87 = v26 + v86;
  *(_QWORD *)v87 = KeyPath;
  *(_QWORD *)(v87 + 8) = 1;
  *(_BYTE *)(v87 + 16) = 0;
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v21, v17);
  v88 = swift_getKeyPath();
  sub_221014FC0(v26, v31, &qword_255663D78);
  v89 = (uint64_t *)(v31 + *(int *)(v176[0] + 36));
  *v89 = v88;
  v89[1] = 0x3FB999999999999ALL;
  OUTLINED_FUNCTION_6_37(v26);
  sub_2212F3F9C();
  sub_22127FB5C();
  sub_2212F4140();
  v90 = v31;
  v91 = v181;
  sub_22101763C(v90, &qword_255666620);
  v92 = sub_2212BFEE4();
  v187[3] = v91;
  v188[0] = MEMORY[0x24BDECB90];
  __swift_allocate_boxed_opaque_existential_1(v187);
  sub_2212F324C();
  v93 = sub_2212F456C();
  v189[0] = 1;
  v188[1] = v93;
  v186 = v92;
  OUTLINED_FUNCTION_3_5();
  OUTLINED_FUNCTION_7_52((uint64_t)&v186, v40 + v94);
  v95 = v178;
  v96 = v180;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v178 + 16))(v40, v35, v180);
  OUTLINED_FUNCTION_6_40((uint64_t)&v186);
  v97 = v35;
  v98 = v176[1];
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v97, v96);
  LOBYTE(v92) = sub_2212F3EC4();
  sub_2212F2D48();
  v100 = v99;
  v102 = v101;
  v104 = v103;
  v106 = v105;
  OUTLINED_FUNCTION_21_30(v40, v44);
  v107 = v44 + *(int *)(v179 + 36);
  *(_BYTE *)v107 = v92;
  *(_QWORD *)(v107 + 8) = v100;
  *(_QWORD *)(v107 + 16) = v102;
  *(_QWORD *)(v107 + 24) = v104;
  *(_QWORD *)(v107 + 32) = v106;
  *(_BYTE *)(v107 + 40) = 0;
  v108 = v40;
  v109 = v182;
  OUTLINED_FUNCTION_16_34(v108);
  v110 = v49 + *(int *)(v98 + 36);
  v111 = v110 + *(int *)(type metadata accessor for DynamicButtonHeightModifier(0) + 20);
  v186 = 0x4049000000000000;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v184 + 104))(v183, *MEMORY[0x24BDF18F0], v185);
  sub_221008548();
  sub_2212F2EC8();
  *(_QWORD *)v111 = 0x4049000000000000;
  *(_BYTE *)(v111 + 8) = 0;
  sub_221015090(v44, v49, &qword_255666638);
  v112 = *MEMORY[0x24BDECEC0];
  v113 = sub_2212F330C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 104))(v109, v112, v113);
  sub_2210B43C0((uint64_t)&qword_255657F60);
  result = sub_2212F52D4();
  if ((result & 1) != 0)
  {
    sub_22127FBF4();
    sub_2210B50B0((uint64_t)&qword_255657F80);
    sub_2212F4278();
    OUTLINED_FUNCTION_6_37(v109);
    sub_22101763C(v49, &qword_255666640);
    v115 = sub_2212F4A10();
    v117 = v116;
    OUTLINED_FUNCTION_22_22(v154, v152, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v153 + 16));
    OUTLINED_FUNCTION_3_5();
    v119 = v154 + v118;
    *(_OWORD *)v119 = xmmword_2212FD660;
    *(_OWORD *)(v119 + 16) = xmmword_2212FD660;
    *(_QWORD *)(v119 + 40) = 0;
    *(_QWORD *)(v119 + 48) = 0;
    *(_QWORD *)(v119 + 32) = 0x4076800000000000;
    *(_OWORD *)(v119 + 56) = xmmword_2212FBF90;
    *(_OWORD *)(v119 + 72) = xmmword_2212FBF90;
    *(_WORD *)(v119 + 88) = 1;
    *(_QWORD *)(v119 + 96) = v115;
    *(_QWORD *)(v119 + 104) = v117;
    OUTLINED_FUNCTION_13_43();
    sub_2212F324C();
    v120 = OUTLINED_FUNCTION_12_44();
    OUTLINED_FUNCTION_3_5();
    v122 = v155 + v121;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v168 + 16))(v155 + v121, v167, v91);
    v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556666D8);
    *(_QWORD *)(v122 + *(int *)(v123 + 52)) = v120;
    *(_WORD *)(v122 + *(int *)(v123 + 56)) = 256;
    OUTLINED_FUNCTION_7_52(v154, v155);
    (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v167, v91);
    OUTLINED_FUNCTION_6_40(v154);
    if ((sub_2212F3CB4() & 1) != 0)
      v124 = 0.8;
    else
      v124 = 1.0;
    OUTLINED_FUNCTION_7_52(v155, v157);
    OUTLINED_FUNCTION_3_5();
    *(double *)(v157 + v125) = v124;
    OUTLINED_FUNCTION_6_40(v155);
    if ((sub_2212F3CB4() & 1) != 0)
      v126 = 0.2;
    else
      v126 = 0.0;
    OUTLINED_FUNCTION_7_52(v157, v158);
    OUTLINED_FUNCTION_3_5();
    *(double *)(v158 + v127) = v126;
    OUTLINED_FUNCTION_6_40(v157);
    if ((sub_2212F3CB4() & 1) != 0)
      v128 = 0.97;
    else
      v128 = 1.0;
    sub_2212F4ADC();
    v130 = v129;
    v132 = v131;
    OUTLINED_FUNCTION_7_52(v158, v159);
    v133 = v159 + *(int *)(v156 + 36);
    *(double *)v133 = v128;
    *(double *)(v133 + 8) = v128;
    *(_QWORD *)(v133 + 16) = v130;
    *(_QWORD *)(v133 + 24) = v132;
    OUTLINED_FUNCTION_6_40(v158);
    v134 = sub_2212F4A40();
    v135 = sub_2212F3CB4();
    sub_221014FC0(v159, v161, &qword_255666670);
    OUTLINED_FUNCTION_3_5();
    v137 = v161 + v136;
    *(_QWORD *)v137 = v134;
    *(_BYTE *)(v137 + 8) = v135 & 1;
    OUTLINED_FUNCTION_6_37(v159);
    v138 = sub_2212F45B4();
    v186 = sub_2212F45CC();
    v187[0] = v138;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255656A60);
    sub_2210B4EB0((uint64_t)&qword_255656A68);
    sub_2210B50B0((uint64_t)&qword_255656A88);
    sub_2212F4644();
    v139 = *(_QWORD *)v170;
    v140 = *(_BYTE *)(v170 + 8);
    sub_221017C08(*(_QWORD *)v170, v140);
    sub_22104359C();
    sub_221017894(v139, v140);
    v141 = sub_2212F45E4();
    swift_release();
    v142 = OUTLINED_FUNCTION_12_44();
    OUTLINED_FUNCTION_21_30(v161, v162);
    v143 = v162 + *(int *)(v160 + 36);
    *(_QWORD *)v143 = v141;
    *(_QWORD *)(v143 + 8) = v142;
    *(_WORD *)(v143 + 16) = 256;
    OUTLINED_FUNCTION_16_34(v161);
    v144 = OUTLINED_FUNCTION_12_44();
    OUTLINED_FUNCTION_21_30(v162, v163);
    OUTLINED_FUNCTION_3_5();
    v146 = v163 + v145;
    *(_QWORD *)v146 = v144;
    *(_BYTE *)(v146 + 8) = 0;
    OUTLINED_FUNCTION_16_34(v162);
    sub_2212F348C();
    v147 = OUTLINED_FUNCTION_12_44();
    v148 = v166 + *(int *)(v164 + 36);
    v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556666E0);
    OUTLINED_FUNCTION_22_22(v148 + *(int *)(v149 + 40), v169, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v171 + 16));
    *(_QWORD *)v148 = v147;
    *(_BYTE *)(v148 + 8) = 0;
    OUTLINED_FUNCTION_7_52(v163, v166);
    OUTLINED_FUNCTION_13_43();
    OUTLINED_FUNCTION_6_40(v163);
    v150 = v172;
    sub_2212F34B0();
    sub_22127FD44();
    sub_2210B43C0((uint64_t)&qword_255663E50);
    v151 = v173[1];
    sub_2212F41A0();
    (*(void (**)(uint64_t, uint64_t))(v173[0] + 8))(v150, v151);
    sub_22101763C(v166, &qword_255666690);
    return (*(uint64_t (**)(uint64_t))(v165 + 32))(v174);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22127F998(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556564B0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + *(int *)(type metadata accessor for DynamicButtonHeightModifier(0) + 20) + 8) & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
    sub_2212F2EE0();
  }
  sub_2212F4A10();
  sub_2210164B8();
  sub_221015090((uint64_t)v5, a1, &qword_2556564B0);
}

void sub_22127FABC(uint64_t a1@<X8>)
{
  char v2;

  *(_QWORD *)a1 = sub_2212F3738();
  *(_BYTE *)(a1 + 8) = v2 & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_22127FAEC()
{
  sub_2212F3744();
  OUTLINED_FUNCTION_6_0();
}

void sub_22127FB18(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_2212F3624();
  *a1 = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_22127FB3C()
{
  sub_2212F3630();
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_22127FB5C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2556666A0;
  if (!qword_2556666A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666620);
    v2 = sub_22121DE9C();
    sub_2210B50B0((uint64_t)&qword_255657CD0);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2556666A0);
  }
  return result;
}

uint64_t type metadata accessor for DynamicButtonHeightModifier(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_2556667B0);
}

unint64_t sub_22127FBF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2556666A8;
  if (!qword_2556666A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666640);
    sub_2210B4D94((uint64_t)&unk_2556666B0);
    v3 = v2;
    sub_2210B43C0((uint64_t)&unk_2556666D0);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2556666A8);
  }
  return result;
}

unint64_t sub_22127FC98()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_2556666B8;
  if (!qword_2556666B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666630);
    v4[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666620);
    v4[3] = sub_22127FB5C();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_2210B50B0((uint64_t)&unk_2556666C0);
    v4[0] = OpaqueTypeConformance2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2556666B8);
  }
  return result;
}

unint64_t sub_22127FD44()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2556666E8;
  if (!qword_2556666E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666690);
    v2 = sub_22127FDC8();
    sub_2210B50B0((uint64_t)&unk_255666748);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2556666E8);
  }
  return result;
}

unint64_t sub_22127FDC8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2556666F0;
  if (!qword_2556666F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666688);
    v2 = sub_22127FE4C();
    sub_2210B50B0((uint64_t)&qword_255663E78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2556666F0);
  }
  return result;
}

unint64_t sub_22127FE4C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2556666F8;
  if (!qword_2556666F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666680);
    v2 = sub_22127FED0();
    sub_2210B50B0((uint64_t)&unk_255666738);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2556666F8);
  }
  return result;
}

unint64_t sub_22127FED0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255666700;
  if (!qword_255666700)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666678);
    sub_2210B4D94((uint64_t)&unk_255666708);
    v3 = v2;
    sub_2210B50B0((uint64_t)&qword_255663E40);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255666700);
  }
  return result;
}

void sub_22127FF74()
{
  sub_2210B4D94((uint64_t)&unk_255666710);
}

void sub_22127FF98()
{
  sub_2210B4D94((uint64_t)&unk_255666718);
}

unint64_t sub_22127FFBC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255666720;
  if (!qword_255666720)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666658);
    v2 = sub_221280040();
    sub_2210B50B0((uint64_t)&unk_255666730);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255666720);
  }
  return result;
}

unint64_t sub_221280040()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[6];

  result = qword_255666728;
  if (!qword_255666728)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666650);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666640);
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657F18);
    v4 = sub_22127FBF4();
    sub_2210B50B0((uint64_t)&qword_255657F80);
    v6[2] = v2;
    v6[3] = v3;
    v6[4] = v4;
    v6[5] = v5;
    v6[0] = swift_getOpaqueTypeConformance2();
    v6[1] = sub_221052360();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v6);
    atomic_store(result, (unint64_t *)&qword_255666728);
  }
  return result;
}

uint64_t *sub_221280118(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
  }
  return a1;
}

uint64_t sub_2212801B4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_2212801EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_22128025C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  return a1;
}

uint64_t sub_2212802CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_22128033C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_2212803AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212803B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_2212803F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212803FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_255655ED0);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

void sub_221280438()
{
  unint64_t v0;

  sub_2210C2908();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2212804A8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666690);
  sub_2212F3324();
  sub_22127FD44();
  sub_2210B43C0((uint64_t)&qword_255663E50);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_221280530()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_221280544()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2556667E8;
  if (!qword_2556667E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556564B0);
    sub_2210B50B0((uint64_t)&unk_2556667F0);
    v3[0] = v2;
    v3[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2556667E8);
  }
  return result;
}

void OUTLINED_FUNCTION_6_40(uint64_t a1)
{
  uint64_t *v1;

  sub_22101763C(a1, v1);
}

void OUTLINED_FUNCTION_7_52(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_221014FC0(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_12_44()
{
  return sub_22127EB00();
}

uint64_t OUTLINED_FUNCTION_13_43()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_15_35@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

void OUTLINED_FUNCTION_16_34(uint64_t a1)
{
  uint64_t *v1;

  sub_22101763C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_22_22@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

void sub_221280610()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(319);
  if (v0 <= 0x3F)
  {
    sub_2211737AC();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_2212806EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, unint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _WORD *v44;
  unint64_t v45;
  uint64_t v46;
  size_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(uint64_t, unint64_t, uint64_t);
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  unsigned int v63;
  unint64_t v64;
  unint64_t v65;
  void (*v66)(unint64_t, uint64_t, uint64_t);
  _WORD *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  unsigned int v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  void (*v81)(uint64_t, uint64_t, uint64_t);
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  size_t v86;
  uint64_t v87;
  char v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  void (*v95)(unint64_t, unint64_t, uint64_t);
  uint64_t v96;
  char v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  void (*v104)(unint64_t, unint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  unsigned int v109;
  unint64_t v110;
  unint64_t v111;
  void (*v112)(uint64_t, unint64_t, uint64_t);
  unint64_t v113;
  _WORD *v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  void (*v121)(unint64_t, unint64_t, uint64_t);
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  __int128 v130;
  __int128 v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t result;
  char v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  void (*v144)(unint64_t, unint64_t, uint64_t);
  uint64_t v145;
  void (*v146)(unint64_t, unint64_t, uint64_t);
  void (*v147)(uint64_t, unint64_t, uint64_t);
  void (*v148)(unint64_t, uint64_t, uint64_t);
  uint64_t v149;
  void (*v150)(uint64_t, unint64_t, uint64_t);
  uint64_t v151;
  void (*v152)(unint64_t, unint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  size_t v163;
  void (*__n)(uint64_t, uint64_t, uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  void (*v170)(unint64_t, unint64_t, uint64_t);
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  void (*v177)(uint64_t, unint64_t, uint64_t);
  uint64_t v178;

  v6 = sub_2212F5124();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v169 = v8 + 16;
  v176 = v7;
  v178 = v6;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = sub_2212F5058();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v8 | v13 | 7;
  v15 = *(_QWORD *)(v12 + 64) + v8;
  v16 = v10 + 7;
  v17 = (v10 + 7 + ((v15 + ((v13 + 16) & ~v13)) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8;
  v18 = v17 + 8;
  v19 = v17 + 9;
  v168 = v18;
  if (v19 <= v18)
    v19 = v18;
  if (v19 <= 2)
    v19 = 2;
  v174 = v10 + 7;
  v175 = v19;
  v20 = v19 + ((v14 + v10 + ((v8 + 16) & ~(unint64_t)v8)) & ~v14);
  if (v20 + 1 > (v16 & 0xFFFFFFFFFFFFFFF8) + 16)
    v21 = v20 + 1;
  else
    v21 = (v16 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v21 <= 0x10)
    v22 = 16;
  else
    v22 = v21;
  v23 = v22 + 1 + v14;
  if ((v23 & (unint64_t)~v14) + v22 + 1 <= 0x20)
    v24 = 32;
  else
    v24 = (v23 & ~v14) + v22 + 1;
  v25 = *(_QWORD *)(a3 + 16);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_DWORD *)(v26 + 80);
  if ((v14 | v27) != 7
    || ((*(_DWORD *)(v12 + 80) | v8 | *(_DWORD *)(v26 + 80)) & 0x100000) != 0
    || (v28 = v24 + 1 + v14,
        v29 = *(_QWORD *)(v26 + 64),
        ((((((v27 + 16 + ((v24 + 8 + (v28 & ~v14)) & 0xFFFFFFFFFFFFFFF8)) & ~v27) + v29) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8)
      + 9 > 0x18))
  {
    v32 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v32 + (((v14 | v27) + 16) & ~(v14 | v27));
    swift_retain();
    return a1;
  }
  v30 = *((unsigned __int8 *)a2 + v24);
  v165 = v27 + 16;
  v166 = *(_QWORD *)(v25 - 8);
  if (v30 >= 2)
  {
    if (v24 <= 3)
      v31 = v24;
    else
      v31 = 4;
    __asm { BR              X13 }
  }
  v161 = ~v9;
  v171 = ~v14;
  v153 = ~v13;
  v154 = v15;
  v157 = v13 + 16;
  v158 = *(_QWORD *)(v11 - 8);
  v155 = v11;
  v156 = v14 + v10;
  v162 = v22 + 1 + v14;
  v163 = v22 + 1;
  v167 = v25;
  if (v30 != 1)
  {
    v35 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v35;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_BYTE *)(a1 + v24) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36 = ~v14;
    goto LABEL_59;
  }
  v33 = *((unsigned __int8 *)a2 + v22);
  if (v33 >= 3)
  {
    if (v22 <= 3)
      v34 = v22;
    else
      v34 = 4;
    __asm { BR              X12 }
  }
  v159 = *(_QWORD *)(v26 + 64);
  if (v33 == 2)
  {
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v176 + 16))(a1, a2, v178);
    v48 = v22 + 1 + v14;
    v47 = v22 + 1;
    *(_OWORD *)((a1 + v10 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v10 + 7) & 0xFFFFFFFFFFFFF8);
    v49 = 2;
  }
  else
  {
    if (v33 != 1)
    {
      v50 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v50;
      *(_BYTE *)(a1 + v22) = 0;
      swift_bridgeObjectRetain();
      v48 = v22 + 1 + v14;
      v47 = v22 + 1;
      goto LABEL_46;
    }
    v149 = v22;
    v37 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v37;
    v38 = (uint64_t)a2 + v9;
    v39 = (a1 + v9 + 16) & v161;
    v40 = (v38 + 16) & v161;
    v41 = *(void (**)(uint64_t, unint64_t, uint64_t))(v176 + 16);
    swift_bridgeObjectRetain();
    v147 = v41;
    v41(v39, v40, v178);
    v42 = v10 + v14;
    v43 = (v39 + v10 + v14) & v171;
    v44 = (_WORD *)((v40 + v42) & v171);
    v45 = v175;
    v22 = v149;
    switch(*((_BYTE *)v44 + v175))
    {
      case 0:
        v51 = 0;
        *(_WORD *)v43 = *v44;
        break;
      case 1:
        *(_BYTE *)v43 = *(_BYTE *)v44;
        v51 = 1;
        break;
      case 2:
        *(_QWORD *)v43 = *(_QWORD *)v44;
        *(_QWORD *)(v43 + 8) = *(_QWORD *)(((v40 + v42) & v171) + 8);
        v52 = (v157 + v43) & v153;
        v53 = ((unint64_t)v44 + v157) & v153;
        v150 = *(void (**)(uint64_t, unint64_t, uint64_t))(v158 + 16);
        swift_bridgeObjectRetain();
        v150(v52, v53, v155);
        v54 = (v154 + v52) & v161;
        v55 = (v154 + v53) & v161;
        v147(v54, v55, v178);
        v45 = v175;
        *(_QWORD *)((v174 + v54) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v174 + v55) & 0xFFFFFFFFFFFFF8);
        *(_BYTE *)(v168 + v43) = *((_BYTE *)v44 + v168);
        v51 = 2;
        break;
      case 3:
        *(_QWORD *)v43 = *(_QWORD *)v44;
        *(_QWORD *)(v43 + 8) = *(_QWORD *)(((v40 + v42) & v171) + 8);
        v56 = (v157 + v43) & v153;
        v57 = ((unint64_t)v44 + v157) & v153;
        v58 = *(void (**)(uint64_t, unint64_t, uint64_t))(v158 + 16);
        swift_bridgeObjectRetain();
        v58(v56, v57, v155);
        v59 = (v154 + v56) & v161;
        v60 = (v154 + v57) & v161;
        v147(v59, v60, v178);
        v45 = v175;
        *(_QWORD *)((v174 + v59) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v174 + v60) & 0xFFFFFFFFFFFFF8);
        v51 = 3;
        break;
      default:
        if (v175 <= 3)
          v46 = v175;
        else
          v46 = 4;
        __asm { BR              X12 }
        return result;
    }
    v48 = v162;
    v47 = v163;
    *(_BYTE *)(v43 + v45) = v51;
    v49 = 1;
  }
  *(_BYTE *)(a1 + v22) = v49;
LABEL_46:
  v36 = v171;
  v61 = (_QWORD *)((v48 + a1) & v171);
  v62 = (_QWORD *)(((unint64_t)a2 + v48) & v171);
  v63 = *((unsigned __int8 *)v62 + v22);
  if (v63 > 2)
  {
    memcpy((void *)((v48 + a1) & v171), (const void *)(((unint64_t)a2 + v48) & v171), v47);
  }
  else if (v63 == 2)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v176 + 16))((v48 + a1) & v171, ((unint64_t)a2 + v48) & v171, v178);
    *(_OWORD *)(((unint64_t)v61 + v174) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v62 + v174) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)v61 + v22) = 2;
  }
  else
  {
    if (v63 == 1)
    {
      *v61 = *v62;
      *(_QWORD *)(((v48 + a1) & v171) + 8) = *(_QWORD *)((((unint64_t)a2 + v48) & v171) + 8);
      v151 = (v48 + a1) & v171;
      v64 = ((unint64_t)v61 + v169) & v161;
      v65 = ((unint64_t)v62 + v169) & v161;
      v66 = *(void (**)(unint64_t, uint64_t, uint64_t))(v176 + 16);
      swift_bridgeObjectRetain();
      v148 = v66;
      v66(v64, v65, v178);
      v67 = (_WORD *)((v156 + v64) & v171);
      v68 = (v156 + v65) & v171;
      switch(*(_BYTE *)(v68 + v175))
      {
        case 0:
          v88 = 0;
          *v67 = *(_WORD *)v68;
          break;
        case 1:
          *(_BYTE *)v67 = *(_BYTE *)v68;
          v88 = 1;
          break;
        case 2:
          *(_QWORD *)v67 = *(_QWORD *)v68;
          *(_QWORD *)(((v156 + v64) & v171) + 8) = *(_QWORD *)(v68 + 8);
          v89 = ((unint64_t)v67 + v157) & v153;
          v90 = (v157 + v68) & v153;
          v146 = *(void (**)(unint64_t, unint64_t, uint64_t))(v158 + 16);
          swift_bridgeObjectRetain();
          v146(v89, v90, v155);
          v91 = (v154 + v89) & v161;
          v92 = (v154 + v90) & v161;
          v148(v91, v92, v178);
          *(_QWORD *)((v174 + v91) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v174 + v92) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v67 + v168) = *(_BYTE *)(v68 + v168);
          v88 = 2;
          break;
        case 3:
          *(_QWORD *)v67 = *(_QWORD *)v68;
          *(_QWORD *)(((v156 + v64) & v171) + 8) = *(_QWORD *)(v68 + 8);
          v93 = ((unint64_t)v67 + v157) & v153;
          v94 = (v157 + v68) & v153;
          v95 = *(void (**)(unint64_t, unint64_t, uint64_t))(v158 + 16);
          swift_bridgeObjectRetain();
          v95(v93, v94, v155);
          v96 = (v154 + v94) & v161;
          v148((v154 + v93) & v161, v96, v178);
          *(_QWORD *)((v174 + ((v154 + v93) & v161)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v174 + v96) & 0xFFFFFFFFFFFFF8);
          v88 = 3;
          break;
        default:
          if (v175 <= 3)
            v69 = v175;
          else
            v69 = 4;
          __asm { BR              X12 }
          return result;
      }
      *((_BYTE *)v67 + v175) = v88;
      *(_BYTE *)(v151 + v22) = 1;
      v29 = v159;
      v36 = v171;
      goto LABEL_58;
    }
    *v61 = *v62;
    *(_QWORD *)(((v48 + a1) & v171) + 8) = *(_QWORD *)((((unint64_t)a2 + v48) & v171) + 8);
    *((_BYTE *)v61 + v22) = 0;
    swift_bridgeObjectRetain();
  }
  v29 = v159;
LABEL_58:
  *(_BYTE *)(a1 + v24) = 1;
LABEL_59:
  v70 = ~v27;
  v71 = (_QWORD *)((v28 + a1) & v36);
  v72 = (_QWORD *)(((unint64_t)a2 + v28) & v36);
  v73 = *((unsigned __int8 *)v72 + v24);
  if (v73 > 1)
  {
    memcpy((void *)((v28 + a1) & v36), v72, v24 + 1);
    goto LABEL_68;
  }
  if (v73 == 1)
  {
    v74 = *((unsigned __int8 *)v72 + v22);
    if (v74 >= 3)
    {
      if (v22 <= 3)
        v75 = v22;
      else
        v75 = 4;
      __asm { BR              X12 }
    }
    v160 = v29;
    if (v74 == 2)
    {
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v176 + 16))((v28 + a1) & v36, v72, v178);
      *(_OWORD *)(((unint64_t)v71 + v174) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v72 + v174) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v71 + v22) = 2;
    }
    else
    {
      if (v74 == 1)
      {
        *v71 = *v72;
        *(_QWORD *)(((v28 + a1) & v36) + 8) = v72[1];
        v79 = ((unint64_t)v71 + v169) & v161;
        v80 = ((unint64_t)v72 + v169) & v161;
        v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(v176 + 16);
        swift_bridgeObjectRetain();
        __n = v81;
        v81(v79, v80, v178);
        v82 = (v156 + v79) & v36;
        v83 = (v156 + v80) & v36;
        v84 = v175;
        switch(*(_BYTE *)(v83 + v175))
        {
          case 0:
            v97 = 0;
            *(_WORD *)v82 = *(_WORD *)v83;
            break;
          case 1:
            *(_BYTE *)v82 = *(_BYTE *)v83;
            v97 = 1;
            break;
          case 2:
            *(_QWORD *)v82 = *(_QWORD *)v83;
            *(_QWORD *)(v82 + 8) = *(_QWORD *)(v83 + 8);
            v98 = (v157 + v82) & v153;
            v99 = (v157 + v83) & v153;
            v152 = *(void (**)(unint64_t, unint64_t, uint64_t))(v158 + 16);
            swift_bridgeObjectRetain();
            v152(v98, v99, v155);
            v100 = (v154 + v98) & v161;
            v101 = (v154 + v99) & v161;
            __n(v100, v101, v178);
            v84 = v175;
            *(_QWORD *)((v174 + v100) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v174 + v101) & 0xFFFFFFFFFFFFF8);
            *(_BYTE *)(v82 + v168) = *(_BYTE *)(v83 + v168);
            v97 = 2;
            break;
          case 3:
            *(_QWORD *)v82 = *(_QWORD *)v83;
            *(_QWORD *)(v82 + 8) = *(_QWORD *)(v83 + 8);
            v102 = (v157 + v82) & v153;
            v103 = (v157 + v83) & v153;
            v104 = *(void (**)(unint64_t, unint64_t, uint64_t))(v158 + 16);
            swift_bridgeObjectRetain();
            v104(v102, v103, v155);
            v105 = (v154 + v102) & v161;
            v106 = (v154 + v103) & v161;
            __n(v105, v106, v178);
            v84 = v175;
            *(_QWORD *)((v174 + v105) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v174 + v106) & 0xFFFFFFFFFFFFF8);
            v97 = 3;
            break;
          default:
            if (v175 <= 3)
              v85 = v175;
            else
              v85 = 4;
            __asm { BR              X12 }
            return result;
        }
        v87 = v162;
        v86 = v163;
        *(_BYTE *)(v82 + v84) = v97;
        *((_BYTE *)v71 + v22) = 1;
        v36 = v171;
LABEL_91:
        v107 = (_QWORD *)(((unint64_t)v71 + v87) & v36);
        v108 = (_QWORD *)(((unint64_t)v72 + v87) & v36);
        v109 = *((unsigned __int8 *)v108 + v22);
        if (v109 > 2)
        {
          memcpy((void *)(((unint64_t)v71 + v87) & v36), (const void *)(((unint64_t)v72 + v87) & v36), v86);
        }
        else if (v109 == 2)
        {
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v176 + 16))(((unint64_t)v71 + v87) & v36, ((unint64_t)v72 + v87) & v36, v178);
          *(_OWORD *)(((unint64_t)v107 + v174) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v108 + v174) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v107 + v22) = 2;
        }
        else
        {
          if (v109 == 1)
          {
            *v107 = *v108;
            *(_QWORD *)((((unint64_t)v71 + v87) & v36) + 8) = *(_QWORD *)((((unint64_t)v72 + v87) & v36)
                                                                               + 8);
            v110 = ((unint64_t)v107 + v169) & v161;
            v111 = ((unint64_t)v108 + v169) & v161;
            v112 = *(void (**)(uint64_t, unint64_t, uint64_t))(v176 + 16);
            swift_bridgeObjectRetain();
            v177 = v112;
            v112(v110, v111, v178);
            v113 = (v156 + v110) & v171;
            v114 = (_WORD *)((v156 + v111) & v171);
            switch(*((_BYTE *)v114 + v175))
            {
              case 0:
                v137 = 0;
                *(_WORD *)v113 = *v114;
                break;
              case 1:
                *(_BYTE *)v113 = *(_BYTE *)v114;
                v137 = 1;
                break;
              case 2:
                *(_QWORD *)v113 = *(_QWORD *)v114;
                *(_QWORD *)(v113 + 8) = *(_QWORD *)(((v156 + v111) & v171) + 8);
                v138 = (v157 + v113) & v153;
                v139 = ((unint64_t)v114 + v157) & v153;
                v170 = *(void (**)(unint64_t, unint64_t, uint64_t))(v158 + 16);
                v172 = v113;
                swift_bridgeObjectRetain();
                v170(v138, v139, v155);
                v140 = (v154 + v138) & v161;
                v141 = (v154 + v139) & v161;
                v177(v140, v141, v178);
                v113 = v172;
                *(_QWORD *)((v174 + v140) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v174 + v141) & 0xFFFFFFFFFFFFF8);
                *(_BYTE *)(v172 + v168) = *((_BYTE *)v114 + v168);
                v137 = 2;
                break;
              case 3:
                *(_QWORD *)v113 = *(_QWORD *)v114;
                *(_QWORD *)(v113 + 8) = *(_QWORD *)(((v156 + v111) & v171) + 8);
                v142 = (v157 + v113) & v153;
                v143 = ((unint64_t)v114 + v157) & v153;
                v144 = *(void (**)(unint64_t, unint64_t, uint64_t))(v158 + 16);
                v173 = v113;
                swift_bridgeObjectRetain();
                v144(v142, v143, v155);
                v145 = (v154 + v142) & v161;
                v177(v145, (v154 + v143) & v161, v178);
                v113 = v173;
                *(_QWORD *)((v174 + v145) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v174 + ((v154 + v143) & v161)) & 0xFFFFFFFFFFFFF8);
                v137 = 3;
                break;
              default:
                if (v175 <= 3)
                  v115 = v175;
                else
                  v115 = 4;
                __asm { BR              X12 }
                return result;
            }
            v77 = v165;
            v76 = v166;
            v29 = v160;
            v78 = v24 + 8;
            *(_BYTE *)(v113 + v175) = v137;
            *((_BYTE *)v107 + v22) = 1;
            goto LABEL_103;
          }
          *v107 = *v108;
          *(_QWORD *)((((unint64_t)v71 + v87) & v36) + 8) = *(_QWORD *)((((unint64_t)v72 + v87) & v36) + 8);
          *((_BYTE *)v107 + v22) = 0;
          swift_bridgeObjectRetain();
        }
        v77 = v165;
        v76 = v166;
        v29 = v160;
        v78 = v24 + 8;
LABEL_103:
        *((_BYTE *)v71 + v24) = 1;
        goto LABEL_104;
      }
      *v71 = *v72;
      *(_QWORD *)(((v28 + a1) & v36) + 8) = v72[1];
      *((_BYTE *)v71 + v22) = 0;
      swift_bridgeObjectRetain();
    }
    v87 = v162;
    v86 = v163;
    goto LABEL_91;
  }
  *v71 = *v72;
  *(_QWORD *)(((v28 + a1) & v36) + 8) = v72[1];
  *(_BYTE *)(((v28 + a1) & v36) + 0x10) = *((_BYTE *)v72 + 16);
  *(_QWORD *)(((v28 + a1) & v36) + 0x18) = v72[3];
  *((_BYTE *)v71 + v24) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_68:
  v77 = v27 + 16;
  v76 = v166;
  v78 = v24 + 8;
LABEL_104:
  v116 = (_QWORD *)(((unint64_t)v71 + v78) & 0xFFFFFFFFFFFFFFF8);
  v117 = (_QWORD *)(((unint64_t)v72 + v78) & 0xFFFFFFFFFFFFFFF8);
  v118 = v117[1];
  *v116 = *v117;
  v116[1] = v118;
  v119 = ((unint64_t)v116 + v77) & v70;
  v120 = ((unint64_t)v117 + v77) & v70;
  v121 = *(void (**)(unint64_t, unint64_t, uint64_t))(v76 + 16);
  swift_retain();
  v121(v119, v120, v167);
  *(_BYTE *)(v119 + v29) = *(_BYTE *)(v120 + v29);
  v122 = (v119 + v29) & 0xFFFFFFFFFFFFFFF8;
  v123 = (v120 + v29) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v122 + 8) = *(_QWORD *)(v123 + 8);
  v124 = (v122 + 23) & 0xFFFFFFFFFFFFFFF8;
  v125 = (v123 + 23) & 0xFFFFFFFFFFFFFFF8;
  v126 = *(_QWORD *)v125;
  LOBYTE(v119) = *(_BYTE *)(v125 + 8);
  swift_bridgeObjectRetain();
  sub_221017C08(v126, v119);
  *(_QWORD *)v124 = v126;
  *(_BYTE *)(v124 + 8) = v119;
  v127 = (v122 + 39) & 0xFFFFFFFFFFFFFFF8;
  v128 = (v123 + 39) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_BYTE *)(v128 + 40) & 1) != 0)
  {
    v129 = *(_QWORD *)(v128 + 24);
    if (v129 >= 6)
    {
      *(_QWORD *)(v127 + 24) = v129;
      *(_QWORD *)(v127 + 32) = *(_QWORD *)(v128 + 32);
      (**(void (***)(unint64_t))(v129 - 8))((v122 + 39) & 0xFFFFFFFFFFFFFFF8);
    }
    else
    {
      v130 = *(_OWORD *)v128;
      v131 = *(_OWORD *)(v128 + 16);
      *(_QWORD *)(v127 + 32) = *(_QWORD *)(v128 + 32);
      *(_OWORD *)v127 = v130;
      *(_OWORD *)(v127 + 16) = v131;
    }
    *(_BYTE *)(v127 + 40) = 1;
  }
  else
  {
    *(_QWORD *)v127 = *(_QWORD *)v128;
    *(_BYTE *)(v127 + 40) = 0;
    swift_retain();
  }
  v132 = (v122 + 87) & 0xFFFFFFFFFFFFFFF8;
  v133 = (v123 + 87) & 0xFFFFFFFFFFFFFFF8;
  v134 = *(_QWORD *)v133;
  v135 = *(_BYTE *)(v133 + 8);
  sub_221017C08(*(_QWORD *)v133, v135);
  *(_QWORD *)v132 = v134;
  *(_BYTE *)(v132 + 8) = v135;
  return a1;
}

uint64_t sub_221281798(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v67 = sub_2212F5124();
  v3 = *(_QWORD *)(v67 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v65 = v4 + 16;
  v5 = *(_QWORD *)(v3 + 64);
  v6 = sub_2212F5058();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v4 | v8 | 7;
  v63 = v6;
  v64 = v9 + v5;
  v60 = v8 + 16;
  v61 = v7;
  v62 = *(_QWORD *)(v7 + 64) + v4;
  v10 = (v5 + 7 + ((v62 + ((v8 + 16) & ~v8)) & ~v4)) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 8;
  v12 = v10 + 9;
  if (v12 <= v11)
    v12 = v11;
  if (v12 <= 2)
    v13 = 2;
  else
    v13 = v12;
  v14 = v13 + ((v9 + v5 + ((v4 + 16) & ~v4)) & ~v9);
  if (v14 + 1 > ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v15 = v14 + 1;
  else
    v15 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v15 <= 0x10)
    v16 = 16;
  else
    v16 = v15;
  v17 = v16 + 1 + v9;
  if ((v17 & (unint64_t)~v9) + v16 + 1 <= 0x20)
    v18 = 32;
  else
    v18 = (v17 & ~v9) + v16 + 1;
  v19 = *(unsigned __int8 *)(a1 + v18);
  if (v19 >= 2)
  {
    if (v18 <= 3)
      v20 = v18;
    else
      v20 = 4;
    __asm { BR              X13 }
  }
  v66 = ~v4;
  v21 = ~v9;
  v59 = ~v8;
  if (v19 != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v22 = *(unsigned __int8 *)(a1 + v16);
  if (v22 >= 3)
  {
    if (v16 <= 3)
      v23 = v16;
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  if (v22 == 2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v67);
  }
  else if (v22 == 1)
  {
    swift_bridgeObjectRelease();
    v24 = (a1 + v4 + 16) & v66;
    v58 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v58(v24, v67);
    v25 = (v24 + v5 + v9) & v21;
    v26 = *(unsigned __int8 *)(v25 + v13);
    if (v26 >= 4)
    {
      if (v13 <= 3)
        v27 = v13;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    if (v26 >= 2)
    {
      swift_bridgeObjectRelease();
      v28 = (v60 + v25) & v59;
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v28, v63);
      v58((v62 + v28) & v66, v67);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v29 = (v17 + a1) & v21;
  v30 = *(unsigned __int8 *)(v29 + v16);
  if (v30 <= 2)
  {
    if (v30 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))((v17 + a1) & v21, v67);
      goto LABEL_51;
    }
    if (v30 == 1)
    {
      swift_bridgeObjectRelease();
      v31 = (v65 + v29) & v66;
      v32 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      v32(v31, v67);
      v33 = (v64 + v31) & v21;
      v34 = *(unsigned __int8 *)(v33 + v13);
      if (v34 >= 4)
      {
        if (v13 <= 3)
          v35 = v13;
        else
          v35 = 4;
        __asm { BR              X12 }
      }
      if (v34 >= 2)
      {
        swift_bridgeObjectRelease();
        v36 = (v60 + v33) & v59;
        (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v36, v63);
        v32((v62 + v36) & v66, v67);
      }
      goto LABEL_51;
    }
LABEL_27:
    swift_bridgeObjectRelease();
  }
LABEL_51:
  v37 = (v18 + v9 + a1 + 1) & v21;
  v38 = *(unsigned __int8 *)(v37 + v18);
  if (v38 > 1)
    goto LABEL_83;
  if (v38 != 1)
  {
    swift_bridgeObjectRelease();
LABEL_59:
    swift_bridgeObjectRelease();
    goto LABEL_83;
  }
  v39 = *(unsigned __int8 *)(v37 + v16);
  if (v39 >= 3)
  {
    if (v16 <= 3)
      v40 = v16;
    else
      v40 = 4;
    __asm { BR              X12 }
  }
  if (v39 == 2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v37, v67);
  }
  else if (v39 == 1)
  {
    swift_bridgeObjectRelease();
    v41 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v41((v65 + v37) & v66, v67);
    v42 = (v64 + ((v65 + v37) & v66)) & v21;
    v43 = *(unsigned __int8 *)(v42 + v13);
    if (v43 >= 4)
    {
      if (v13 <= 3)
        v44 = v13;
      else
        v44 = 4;
      __asm { BR              X12 }
    }
    if (v43 >= 2)
    {
      swift_bridgeObjectRelease();
      v45 = (v60 + v42) & v59;
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v45, v63);
      v41((v62 + v45) & v66, v67);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v46 = (v17 + v37) & v21;
  v47 = *(unsigned __int8 *)(v46 + v16);
  if (v47 <= 2)
  {
    if (v47 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))((v17 + v37) & v21, v67);
    }
    else
    {
      if (v47 != 1)
        goto LABEL_59;
      swift_bridgeObjectRelease();
      v48 = (v65 + v46) & v66;
      v49 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      v49(v48, v67);
      v50 = (v64 + v48) & v21;
      v51 = *(unsigned __int8 *)(v50 + v13);
      if (v51 >= 4)
      {
        if (v13 <= 3)
          v52 = v13;
        else
          v52 = 4;
        __asm { BR              X12 }
      }
      if (v51 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v61 + 8))((v60 + v50) & v59, v63);
        v49((v62 + ((v60 + v50) & v59)) & v66, v67);
      }
    }
  }
LABEL_83:
  swift_release();
  v53 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v54 = (((v18 + v37 + 8) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  (*(void (**)(unint64_t))(v53 + 8))(v54);
  v55 = (v54 + *(_QWORD *)(v53 + 64)) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  sub_221017894(*(_QWORD *)((v55 + 23) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v55 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
  v56 = (v55 + 39) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_BYTE *)(v56 + 40) & 1) != 0)
  {
    if (*(_QWORD *)(v56 + 24) >= 6uLL)
      __swift_destroy_boxed_opaque_existential_1(v56);
  }
  else
  {
    swift_release();
  }
  return sub_221017894(*(_QWORD *)((v55 + 87) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v55 + 87) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_221281F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _WORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(uint64_t, unint64_t, uint64_t);
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  void (*v55)(uint64_t);
  unint64_t v56;
  _WORD *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  unsigned int v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void (*v74)(unint64_t, unint64_t, uint64_t);
  _WORD *v75;
  _WORD *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  void (*v86)(unint64_t, unint64_t, uint64_t);
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  unsigned int v91;
  unint64_t v92;
  unint64_t v93;
  void (*v94)(uint64_t, unint64_t, uint64_t);
  unint64_t v95;
  _WORD *v96;
  uint64_t v97;
  char v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  __int128 v125;
  __int128 v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t result;
  void (*v132)(unint64_t, unint64_t, uint64_t);
  void (*v133)(uint64_t, unint64_t, uint64_t);
  unint64_t v134;
  void (*v135)(unint64_t, unint64_t, uint64_t);
  void (*v136)(unint64_t, unint64_t, uint64_t);
  void (*v137)(uint64_t, unint64_t, uint64_t);
  void (*v138)(uint64_t);
  void (*v139)(unint64_t, unint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  size_t __n;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(unint64_t, unint64_t, uint64_t);
  void (*v158)(unint64_t, unint64_t, uint64_t);
  uint64_t v159;
  void (*v160)(uint64_t, unint64_t, uint64_t);
  uint64_t v161;

  v161 = sub_2212F5124();
  v6 = *(_QWORD *)(v161 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v150 = v7 + 16;
  v159 = v6;
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_2212F5058();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v7 | v11 | 7;
  v151 = v12 + v8;
  v146 = v11 + 16;
  v147 = v10;
  v148 = *(_QWORD *)(v10 + 64) + v7;
  v149 = v9;
  v13 = v8 + 7;
  v14 = (v8 + 7 + ((v148 + ((v11 + 16) & ~v11)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;
  v16 = v14 + 9;
  v144 = v15;
  if (v16 <= v15)
    v16 = v15;
  if (v16 <= 2)
    v17 = 2;
  else
    v17 = v16;
  v18 = v17 + ((v12 + v8 + ((v7 + 16) & ~v7)) & ~v12);
  v153 = v8 + 7;
  if (v18 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
    v19 = v18 + 1;
  else
    v19 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= 0x10)
    v20 = 16;
  else
    v20 = v19;
  v21 = v20 + 1;
  v156 = v20 + 1 + v12;
  if ((v156 & (unint64_t)~v12) + v20 + 1 <= 0x20)
    v22 = 32;
  else
    v22 = (v156 & ~v12) + v20 + 1;
  v23 = *(unsigned __int8 *)(a2 + v22);
  if (v23 >= 2)
  {
    if (v22 <= 3)
      v24 = v22;
    else
      v24 = 4;
    __asm { BR              X13 }
  }
  v154 = ~v7;
  v25 = ~v12;
  v145 = ~v11;
  v155 = v17;
  if (v23 != 1)
  {
    v28 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v28;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + v22) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_61;
  }
  v26 = *(unsigned __int8 *)(a2 + v20);
  if (v26 >= 3)
  {
    if (v20 <= 3)
      v27 = v20;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  if (v26 == 2)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v159 + 16))(a1, a2, v161);
    *(_OWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
    *(_BYTE *)(a1 + v20) = 2;
  }
  else if (v26 == 1)
  {
    v140 = a3;
    v29 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v29;
    v30 = a2 + v7;
    v31 = (a1 + v7 + 16) & v154;
    v32 = (v30 + 16) & v154;
    v33 = *(void (**)(uint64_t, unint64_t, uint64_t))(v159 + 16);
    swift_bridgeObjectRetain();
    v137 = v33;
    v33(v31, v32, v161);
    v34 = v8 + v12;
    v35 = (v31 + v8 + v12) & v25;
    v36 = (_WORD *)((v32 + v34) & v25);
    v37 = v155;
    switch(*((_BYTE *)v36 + v155))
    {
      case 0:
        v40 = 0;
        *(_WORD *)v35 = *v36;
        break;
      case 1:
        *(_BYTE *)v35 = *(_BYTE *)v36;
        v40 = 1;
        break;
      case 2:
        *(_QWORD *)v35 = *(_QWORD *)v36;
        *(_QWORD *)(v35 + 8) = *(_QWORD *)(((v32 + v34) & v25) + 8);
        v41 = (v146 + v35) & v145;
        v42 = ((unint64_t)v36 + v146) & v145;
        v133 = *(void (**)(uint64_t, unint64_t, uint64_t))(v147 + 16);
        swift_bridgeObjectRetain();
        v133(v41, v42, v149);
        v43 = (v148 + v41) & v154;
        v44 = (v148 + v42) & v154;
        v137(v43, v44, v161);
        v37 = v155;
        *(_QWORD *)((v153 + v43) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v153 + v44) & 0xFFFFFFFFFFFFF8);
        *(_BYTE *)(v144 + v35) = *((_BYTE *)v36 + v144);
        v40 = 2;
        break;
      case 3:
        *(_QWORD *)v35 = *(_QWORD *)v36;
        *(_QWORD *)(v35 + 8) = *(_QWORD *)(((v32 + v34) & v25) + 8);
        v45 = (v146 + v35) & v145;
        v46 = ((unint64_t)v36 + v146) & v145;
        v47 = *(void (**)(uint64_t, unint64_t, uint64_t))(v147 + 16);
        swift_bridgeObjectRetain();
        v47(v45, v46, v149);
        v48 = (v148 + v45) & v154;
        v49 = (v148 + v46) & v154;
        v137(v48, v49, v161);
        v37 = v155;
        *(_QWORD *)((v153 + v48) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v153 + v49) & 0xFFFFFFFFFFFFF8);
        v40 = 3;
        break;
      default:
        if (v155 <= 3)
          v38 = v155;
        else
          v38 = 4;
        __asm { BR              X12 }
        return result;
    }
    *(_BYTE *)(v35 + v37) = v40;
    *(_BYTE *)(a1 + v20) = 1;
    a3 = v140;
  }
  else
  {
    v39 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v39;
    *(_BYTE *)(a1 + v20) = 0;
    swift_bridgeObjectRetain();
  }
  v50 = (_QWORD *)((v156 + a1) & v25);
  v51 = (_QWORD *)((v156 + a2) & v25);
  v52 = *((unsigned __int8 *)v51 + v20);
  if (v52 > 2)
  {
    v21 = v20 + 1;
    memcpy((void *)((v156 + a1) & v25), (const void *)((v156 + a2) & v25), v20 + 1);
  }
  else
  {
    if (v52 == 2)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v159 + 16))((v156 + a1) & v25, (v156 + a2) & v25, v161);
      *(_OWORD *)(((unint64_t)v50 + v153) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v51 + v153) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v50 + v20) = 2;
    }
    else
    {
      if (v52 == 1)
      {
        v141 = a3;
        *v50 = *v51;
        *(_QWORD *)(((v156 + a1) & v25) + 8) = *(_QWORD *)(((v156 + a2) & v25) + 8);
        v53 = ((unint64_t)v50 + v150) & v154;
        v54 = ((unint64_t)v51 + v150) & v154;
        v55 = *(void (**)(uint64_t))(v159 + 16);
        swift_bridgeObjectRetain();
        v138 = v55;
        ((void (*)(unint64_t, unint64_t, uint64_t))v55)(v53, v54, v161);
        v56 = (v151 + v53) & v25;
        v57 = (_WORD *)((v151 + v54) & v25);
        v58 = v155;
        switch(*((_BYTE *)v57 + v155))
        {
          case 0:
            v60 = 0;
            *(_WORD *)v56 = *v57;
            break;
          case 1:
            *(_BYTE *)v56 = *(_BYTE *)v57;
            v60 = 1;
            break;
          case 2:
            *(_QWORD *)v56 = *(_QWORD *)v57;
            *(_QWORD *)(v56 + 8) = *(_QWORD *)(((v151 + v54) & v25) + 8);
            v134 = v56;
            v61 = (v146 + v56) & v145;
            v132 = *(void (**)(unint64_t, unint64_t, uint64_t))(v147 + 16);
            swift_bridgeObjectRetain();
            v132(v61, ((unint64_t)v57 + v146) & v145, v149);
            v62 = (v148 + v61) & v154;
            v56 = v134;
            v138(v62);
            v58 = v155;
            *(_QWORD *)((v153 + v62) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v153
                                                                        + ((v148
                                                                          + (((unint64_t)v57 + v146) & v145)) & v154)) & 0xFFFFFFFFFFFFF8);
            *(_BYTE *)(v134 + v144) = *((_BYTE *)v57 + v144);
            v60 = 2;
            break;
          case 3:
            *(_QWORD *)v56 = *(_QWORD *)v57;
            *(_QWORD *)(v56 + 8) = *(_QWORD *)(((v151 + v54) & v25) + 8);
            v63 = (v146 + v56) & v145;
            v64 = ((unint64_t)v57 + v146) & v145;
            v135 = *(void (**)(unint64_t, unint64_t, uint64_t))(v147 + 16);
            swift_bridgeObjectRetain();
            v135(v63, v64, v149);
            v65 = (v148 + v63) & v154;
            v66 = (v148 + v64) & v154;
            ((void (*)(uint64_t, unint64_t, uint64_t))v138)(v65, v66, v161);
            v58 = v155;
            *(_QWORD *)((v153 + v65) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v153 + v66) & 0xFFFFFFFFFFFFF8);
            v60 = 3;
            break;
          default:
            if (v155 <= 3)
              v59 = v155;
            else
              v59 = 4;
            __asm { BR              X12 }
            return result;
        }
        v21 = v20 + 1;
        *(_BYTE *)(v56 + v58) = v60;
        *((_BYTE *)v50 + v20) = 1;
        a3 = v141;
        goto LABEL_60;
      }
      *v50 = *v51;
      *(_QWORD *)(((v156 + a1) & v25) + 8) = *(_QWORD *)(((v156 + a2) & v25) + 8);
      *((_BYTE *)v50 + v20) = 0;
      swift_bridgeObjectRetain();
    }
    v21 = v20 + 1;
  }
LABEL_60:
  *(_BYTE *)(a1 + v22) = 1;
LABEL_61:
  v67 = (_QWORD *)((v12 + a1 + v22 + 1) & v25);
  v68 = (_QWORD *)((v12 + a2 + v22 + 1) & v25);
  v69 = *((unsigned __int8 *)v68 + v22);
  if (v69 > 1)
  {
    memcpy((void *)((v12 + a1 + v22 + 1) & v25), v68, v22 + 1);
  }
  else if (v69 == 1)
  {
    v70 = *((unsigned __int8 *)v68 + v20);
    if (v70 >= 3)
    {
      if (v20 <= 3)
        v71 = v20;
      else
        v71 = 4;
      __asm { BR              X12 }
    }
    __n = v21;
    if (v70 == 2)
    {
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v159 + 16))((v12 + a1 + v22 + 1) & v25, v68, v161);
      *(_OWORD *)(((unint64_t)v67 + v153) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v68 + v153) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v67 + v20) = 2;
    }
    else if (v70 == 1)
    {
      v142 = a3;
      *v67 = *v68;
      *(_QWORD *)(((v12 + a1 + v22 + 1) & v25) + 8) = v68[1];
      v72 = ((unint64_t)v67 + v150) & v154;
      v73 = ((unint64_t)v68 + v150) & v154;
      v74 = *(void (**)(unint64_t, unint64_t, uint64_t))(v159 + 16);
      swift_bridgeObjectRetain();
      v139 = v74;
      v74(v72, v73, v161);
      v75 = (_WORD *)((v151 + v72) & v25);
      v76 = (_WORD *)((v151 + v73) & v25);
      v77 = v155;
      switch(*((_BYTE *)v76 + v155))
      {
        case 0:
          v79 = 0;
          *v75 = *v76;
          break;
        case 1:
          *(_BYTE *)v75 = *(_BYTE *)v76;
          v79 = 1;
          break;
        case 2:
          *(_QWORD *)v75 = *(_QWORD *)v76;
          *(_QWORD *)(((v151 + v72) & v25) + 8) = *(_QWORD *)(((v151 + v73) & v25) + 8);
          v80 = ((unint64_t)v75 + v146) & v145;
          v81 = ((unint64_t)v76 + v146) & v145;
          v136 = *(void (**)(unint64_t, unint64_t, uint64_t))(v147 + 16);
          swift_bridgeObjectRetain();
          v136(v80, v81, v149);
          v82 = (v148 + v80) & v154;
          v83 = (v148 + v81) & v154;
          v139(v82, v83, v161);
          v77 = v155;
          *(_QWORD *)((v153 + v82) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v153 + v83) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v75 + v144) = *((_BYTE *)v76 + v144);
          v79 = 2;
          break;
        case 3:
          *(_QWORD *)v75 = *(_QWORD *)v76;
          *(_QWORD *)(((v151 + v72) & v25) + 8) = *(_QWORD *)(((v151 + v73) & v25) + 8);
          v84 = ((unint64_t)v75 + v146) & v145;
          v85 = ((unint64_t)v76 + v146) & v145;
          v86 = *(void (**)(unint64_t, unint64_t, uint64_t))(v147 + 16);
          swift_bridgeObjectRetain();
          v86(v84, v85, v149);
          v87 = (v148 + v84) & v154;
          v88 = (v148 + v85) & v154;
          v139(v87, v88, v161);
          v77 = v155;
          *(_QWORD *)((v153 + v87) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v153 + v88) & 0xFFFFFFFFFFFFF8);
          v79 = 3;
          break;
        default:
          if (v155 <= 3)
            v78 = v155;
          else
            v78 = 4;
          __asm { BR              X12 }
          return result;
      }
      *((_BYTE *)v75 + v77) = v79;
      *((_BYTE *)v67 + v20) = 1;
      a3 = v142;
    }
    else
    {
      *v67 = *v68;
      *(_QWORD *)(((v12 + a1 + v22 + 1) & v25) + 8) = v68[1];
      *((_BYTE *)v67 + v20) = 0;
      swift_bridgeObjectRetain();
    }
    v89 = (_QWORD *)(((unint64_t)v67 + v156) & v25);
    v90 = (_QWORD *)(((unint64_t)v68 + v156) & v25);
    v91 = *((unsigned __int8 *)v90 + v20);
    if (v91 > 2)
    {
      memcpy((void *)(((unint64_t)v67 + v156) & v25), (const void *)(((unint64_t)v68 + v156) & v25), __n);
    }
    else if (v91 == 2)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v159 + 16))(((unint64_t)v67 + v156) & v25, ((unint64_t)v68 + v156) & v25, v161);
      *(_OWORD *)(((unint64_t)v89 + v153) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v90 + v153) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v89 + v20) = 2;
    }
    else if (v91 == 1)
    {
      v143 = a3;
      *v89 = *v90;
      *(_QWORD *)((((unint64_t)v67 + v156) & v25) + 8) = *(_QWORD *)((((unint64_t)v68 + v156) & v25) + 8);
      v92 = ((unint64_t)v89 + v150) & v154;
      v93 = ((unint64_t)v90 + v150) & v154;
      v94 = *(void (**)(uint64_t, unint64_t, uint64_t))(v159 + 16);
      swift_bridgeObjectRetain();
      v160 = v94;
      v94(v92, v93, v161);
      v95 = (v151 + v92) & v25;
      v96 = (_WORD *)((v151 + v93) & v25);
      switch(*((_BYTE *)v96 + v155))
      {
        case 0:
          v98 = 0;
          *(_WORD *)v95 = *v96;
          break;
        case 1:
          *(_BYTE *)v95 = *(_BYTE *)v96;
          v98 = 1;
          break;
        case 2:
          *(_QWORD *)v95 = *(_QWORD *)v96;
          *(_QWORD *)(v95 + 8) = *(_QWORD *)(((v151 + v93) & v25) + 8);
          v99 = (v146 + v95) & v145;
          v157 = *(void (**)(unint64_t, unint64_t, uint64_t))(v147 + 16);
          swift_bridgeObjectRetain();
          v157(v99, ((unint64_t)v96 + v146) & v145, v149);
          v100 = (v148 + v99) & v154;
          v101 = (v148 + (((unint64_t)v96 + v146) & v145)) & v154;
          v160(v100, v101, v161);
          *(_QWORD *)((v153 + v100) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v153 + v101) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v95 + v144) = *((_BYTE *)v96 + v144);
          v98 = 2;
          break;
        case 3:
          *(_QWORD *)v95 = *(_QWORD *)v96;
          *(_QWORD *)(v95 + 8) = *(_QWORD *)(((v151 + v93) & v25) + 8);
          v102 = (v146 + v95) & v145;
          v103 = ((unint64_t)v96 + v146) & v145;
          v158 = *(void (**)(unint64_t, unint64_t, uint64_t))(v147 + 16);
          swift_bridgeObjectRetain();
          v158(v102, v103, v149);
          v104 = (v148 + v102) & v154;
          v160(v104, (v148 + v103) & v154, v161);
          *(_QWORD *)((v153 + v104) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v153 + ((v148 + v103) & v154)) & 0xFFFFFFFFFFFFF8);
          v98 = 3;
          break;
        default:
          if (v155 <= 3)
            v97 = v155;
          else
            v97 = 4;
          __asm { BR              X12 }
          return result;
      }
      *(_BYTE *)(v95 + v155) = v98;
      *((_BYTE *)v89 + v20) = 1;
      a3 = v143;
    }
    else
    {
      *v89 = *v90;
      *(_QWORD *)((((unint64_t)v67 + v156) & v25) + 8) = *(_QWORD *)((((unint64_t)v68 + v156) & v25) + 8);
      *((_BYTE *)v89 + v20) = 0;
      swift_bridgeObjectRetain();
    }
    *((_BYTE *)v67 + v22) = 1;
  }
  else
  {
    *v67 = *v68;
    *(_QWORD *)(((v12 + a1 + v22 + 1) & v25) + 8) = v68[1];
    *(_BYTE *)(((v12 + a1 + v22 + 1) & v25) + 0x10) = *((_BYTE *)v68 + 16);
    *(_QWORD *)(((v12 + a1 + v22 + 1) & v25) + 0x18) = v68[3];
    *((_BYTE *)v67 + v22) = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v105 = (_QWORD *)(((unint64_t)v67 + v22 + 8) & 0xFFFFFFFFFFFFFFF8);
  v106 = (_QWORD *)(((unint64_t)v68 + v22 + 8) & 0xFFFFFFFFFFFFFFF8);
  v107 = v106[1];
  *v105 = *v106;
  v105[1] = v107;
  v108 = *(_QWORD *)(a3 + 16);
  v109 = *(_QWORD *)(v108 - 8);
  v110 = *(unsigned __int8 *)(v109 + 80);
  v111 = ((unint64_t)v105 + v110 + 16) & ~v110;
  v112 = ((unint64_t)v106 + v110 + 16) & ~v110;
  v113 = *(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 16);
  swift_retain();
  v113(v111, v112, v108);
  v114 = *(_QWORD *)(v109 + 64);
  v115 = v111 + v114;
  v116 = v112 + v114;
  *(_BYTE *)v115 = *(_BYTE *)v116;
  v117 = v115 & 0xFFFFFFFFFFFFFFF8;
  v118 = v116 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v115 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFFF8) + 8);
  v119 = ((v115 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v120 = ((v116 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v121 = *(_QWORD *)v120;
  LOBYTE(v111) = *(_BYTE *)(v120 + 8);
  swift_bridgeObjectRetain();
  sub_221017C08(v121, v111);
  *(_QWORD *)v119 = v121;
  *(_BYTE *)(v119 + 8) = v111;
  v122 = (v117 + 39) & 0xFFFFFFFFFFFFFFF8;
  v123 = (v118 + 39) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_BYTE *)(v123 + 40) & 1) != 0)
  {
    v124 = *(_QWORD *)(v123 + 24);
    if (v124 >= 6)
    {
      *(_QWORD *)(v122 + 24) = v124;
      *(_QWORD *)(v122 + 32) = *(_QWORD *)(v123 + 32);
      (**(void (***)(unint64_t))(v124 - 8))((v117 + 39) & 0xFFFFFFFFFFFFFFF8);
    }
    else
    {
      v125 = *(_OWORD *)v123;
      v126 = *(_OWORD *)(v123 + 16);
      *(_QWORD *)(v122 + 32) = *(_QWORD *)(v123 + 32);
      *(_OWORD *)v122 = v125;
      *(_OWORD *)(v122 + 16) = v126;
    }
    *(_BYTE *)(v122 + 40) = 1;
  }
  else
  {
    *(_QWORD *)v122 = *(_QWORD *)v123;
    *(_BYTE *)(v122 + 40) = 0;
    swift_retain();
  }
  v127 = (v117 + 87) & 0xFFFFFFFFFFFFFFF8;
  v128 = (v118 + 87) & 0xFFFFFFFFFFFFFFF8;
  v129 = *(_QWORD *)v128;
  v130 = *(_BYTE *)(v128 + 8);
  sub_221017C08(*(_QWORD *)v128, v130);
  *(_QWORD *)v127 = v129;
  *(_BYTE *)(v127 + 8) = v130;
  return a1;
}

uint64_t sub_221282FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, unint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _WORD *v46;
  unint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void (*v57)(uint64_t, unint64_t, uint64_t);
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t v64;
  void (*v65)(unint64_t, unint64_t, uint64_t);
  _WORD *v66;
  _WORD *v67;
  unint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  void (*v77)(unint64_t, unint64_t, uint64_t);
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  size_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  uint64_t v109;
  unsigned int v110;
  uint64_t v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  void (*v124)(unint64_t, unint64_t, uint64_t);
  unint64_t v125;
  uint64_t v126;
  _WORD *v127;
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unsigned int v145;
  uint64_t v146;
  void (*v147)(uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(uint64_t, uint64_t);
  unint64_t v158;
  unsigned int v159;
  uint64_t v160;
  void (*v161)(uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  unint64_t v178;
  _QWORD *v179;
  _QWORD *v180;
  unsigned int v181;
  unint64_t v182;
  unint64_t v183;
  void (*v184)(unint64_t, unint64_t, uint64_t);
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  void (*v188)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  unsigned int v193;
  uint64_t v194;
  unint64_t v195;
  void (*v196)(unint64_t, uint64_t);
  uint64_t v197;
  unsigned int v198;
  uint64_t v199;
  unint64_t v200;
  unint64_t v201;
  unint64_t v202;
  unsigned int v203;
  uint64_t v204;
  unint64_t v205;
  void (*v206)(unint64_t, uint64_t);
  uint64_t v207;
  unsigned int v208;
  uint64_t v209;
  void (*v210)(uint64_t, uint64_t);
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unsigned int v215;
  uint64_t v216;
  unsigned int v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  void (*v221)(void);
  unint64_t v222;
  _WORD *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char v231;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  unint64_t v235;
  unint64_t v236;
  uint64_t v237;
  unint64_t v238;
  unsigned int v239;
  unint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char v245;
  unint64_t v246;
  unint64_t v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  _QWORD *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  unint64_t v263;
  unint64_t v264;
  unint64_t v265;
  unint64_t v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char v270;
  unint64_t v271;
  unint64_t v272;
  unint64_t v273;
  __int128 v274;
  __int128 v275;
  unint64_t v276;
  unint64_t v277;
  uint64_t v278;
  char v279;
  uint64_t v280;
  char v281;
  uint64_t result;
  void (*v283)(unint64_t, unint64_t, size_t);
  unint64_t v284;
  void (*v285)(unint64_t, unint64_t, size_t);
  unint64_t v286;
  void (*v287)(unint64_t, unint64_t, size_t);
  void (*v288)(uint64_t, unint64_t, uint64_t);
  void (*v289)(unint64_t, unint64_t, size_t);
  void (*v290)(void);
  uint64_t v291;
  uint64_t v292;
  void (*v293)(uint64_t, unint64_t, uint64_t);
  uint64_t v294;
  uint64_t v295;
  void (*v296)(uint64_t, uint64_t);
  void (*v297)(uint64_t, uint64_t);
  uint64_t v298;
  void (*v299)(uint64_t, unint64_t, uint64_t);
  unint64_t v300;
  unint64_t v301;
  unint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  size_t __n;
  size_t __na;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  void (*v333)(unint64_t, unint64_t, uint64_t);
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  unint64_t v343;
  uint64_t v344;
  void (*v345)(unint64_t, unint64_t, size_t);
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  void (*v350)(uint64_t, uint64_t, uint64_t);
  void (*v351)(unint64_t, unint64_t, size_t);
  uint64_t v353;
  void (*v354)(unint64_t, unint64_t, uint64_t);
  size_t v355;

  v3 = a3;
  if (a1 != a2)
  {
    v348 = sub_2212F5124();
    v6 = *(_QWORD *)(v348 - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    v309 = v7 + 16;
    v8 = *(_QWORD *)(v6 + 64);
    v9 = sub_2212F5058();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v12 = v7 | v11 | 7;
    v313 = v12 + v8;
    v328 = v11 + 16;
    v332 = v10;
    v337 = *(_QWORD *)(v10 + 64) + v7;
    v341 = v9;
    v13 = v8 + 7;
    v14 = (v8 + 7 + ((v337 + ((v11 + 16) & ~v11)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    v15 = v14 + 8;
    v16 = v14 + 9;
    v302 = v15;
    if (v16 <= v15)
      v16 = v15;
    if (v16 <= 2)
      v16 = 2;
    v343 = v16;
    v17 = v16 + ((v12 + v8 + ((v7 + 16) & ~v7)) & ~v12);
    v318 = v8 + 7;
    if (v17 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
      v18 = v17 + 1;
    else
      v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v18 <= 0x10)
      v19 = 16;
    else
      v19 = v18;
    v20 = v19 + 1 + v12;
    if ((v20 & (unint64_t)~v12) + v19 + 1 <= 0x20)
      v21 = 32;
    else
      v21 = (v20 & ~v12) + v19 + 1;
    v22 = *(unsigned __int8 *)(a1 + v21);
    if (v22 >= 2)
    {
      if (v21 <= 3)
        v23 = v21;
      else
        v23 = 4;
      __asm { BR              X13 }
    }
    v346 = ~v7;
    v353 = ~v12;
    v325 = ~v11;
    if (v22 == 1)
    {
      v24 = *(unsigned __int8 *)(a1 + v19);
      if (v24 >= 3)
      {
        if (v19 <= 3)
          v25 = v19;
        else
          v25 = 4;
        __asm { BR              X12 }
      }
      if (v24 == 2)
      {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v348);
      }
      else if (v24 == 1)
      {
        swift_bridgeObjectRelease();
        v296 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v296((a1 + v7 + 16) & v346, v348);
        v26 = (((a1 + v7 + 16) & v346) + v8 + v12) & v353;
        v27 = *(unsigned __int8 *)(v26 + v343);
        if (v27 >= 4)
        {
          if (v343 <= 3)
            v28 = v343;
          else
            v28 = 4;
          __asm { BR              X12 }
        }
        if (v27 >= 2)
        {
          swift_bridgeObjectRelease();
          v29 = (v328 + v26) & v325;
          (*(void (**)(uint64_t, uint64_t))(v332 + 8))(v29, v341);
          v296((v337 + v29) & v346, v348);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v30 = (v20 + a1) & v353;
      v31 = *(unsigned __int8 *)(v30 + v19);
      if (v31 > 2)
      {
LABEL_51:
        v37 = *(unsigned __int8 *)(a2 + v21);
        if (v37 >= 2)
        {
          if (v21 <= 3)
            v38 = v21;
          else
            v38 = 4;
          __asm { BR              X12 }
        }
        if (v37 != 1)
        {
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_BYTE *)(a1 + v21) = 0;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v3 = a3;
          goto LABEL_98;
        }
        v39 = *(unsigned __int8 *)(a2 + v19);
        if (v39 >= 3)
        {
          if (v19 <= 3)
            v40 = v19;
          else
            v40 = 4;
          __asm { BR              X12 }
        }
        if (v39 == 2)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v348);
          *(_OWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
          v49 = 2;
        }
        else
        {
          if (v39 != 1)
          {
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            *(_BYTE *)(a1 + v19) = 0;
            swift_bridgeObjectRetain();
            goto LABEL_79;
          }
          v298 = v19 + 1 + v12;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          v41 = (a1 + v7 + 16) & v346;
          v42 = (a2 + v7 + 16) & v346;
          v43 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16);
          swift_bridgeObjectRetain();
          v293 = v43;
          v43(v41, v42, v348);
          v44 = v8 + v12;
          v45 = (v41 + v8 + v12) & v353;
          v46 = (_WORD *)((v42 + v44) & v353);
          v47 = v343;
          v20 = v298;
          switch(*((_BYTE *)v46 + v343))
          {
            case 0:
              v50 = 0;
              *(_WORD *)v45 = *v46;
              break;
            case 1:
              *(_BYTE *)v45 = *(_BYTE *)v46;
              v50 = 1;
              break;
            case 2:
              *(_QWORD *)v45 = *(_QWORD *)v46;
              *(_QWORD *)(v45 + 8) = *(_QWORD *)(((v42 + v44) & v353) + 8);
              v51 = (v328 + v45) & v325;
              v52 = ((unint64_t)v46 + v328) & v325;
              v299 = *(void (**)(uint64_t, unint64_t, uint64_t))(v332 + 16);
              swift_bridgeObjectRetain();
              v299(v51, v52, v341);
              v53 = (v337 + v51) & v346;
              v54 = (v337 + v52) & v346;
              v293(v53, v54, v348);
              v47 = v343;
              *(_QWORD *)((v318 + v53) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v318 + v54) & 0xFFFFFFFFFFFFF8);
              *(_BYTE *)(v302 + v45) = *((_BYTE *)v46 + v302);
              v50 = 2;
              break;
            case 3:
              *(_QWORD *)v45 = *(_QWORD *)v46;
              *(_QWORD *)(v45 + 8) = *(_QWORD *)(((v42 + v44) & v353) + 8);
              v55 = (v328 + v45) & v325;
              v56 = ((unint64_t)v46 + v328) & v325;
              v57 = *(void (**)(uint64_t, unint64_t, uint64_t))(v332 + 16);
              swift_bridgeObjectRetain();
              v57(v55, v56, v341);
              v58 = (v337 + v55) & v346;
              v59 = (v337 + v56) & v346;
              v293(v58, v59, v348);
              v47 = v343;
              *(_QWORD *)((v318 + v58) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v318 + v59) & 0xFFFFFFFFFFFFF8);
              v50 = 3;
              break;
            default:
              if (v343 <= 3)
                v48 = v343;
              else
                v48 = 4;
              __asm { BR              X12 }
              return result;
          }
          *(_BYTE *)(v45 + v47) = v50;
          v49 = 1;
        }
        *(_BYTE *)(a1 + v19) = v49;
LABEL_79:
        v60 = (_QWORD *)((v20 + a1) & v353);
        v61 = (_QWORD *)((v20 + a2) & v353);
        v62 = *((unsigned __int8 *)v61 + v19);
        if (v62 > 2)
        {
          memcpy((void *)((v20 + a1) & v353), (const void *)((v20 + a2) & v353), v19 + 1);
        }
        else
        {
          if (v62 == 2)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))((v20 + a1) & v353, (v20 + a2) & v353, v348);
            *(_OWORD *)(((unint64_t)v60 + v318) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v61 + v318) & 0xFFFFFFFFFFFFF8);
            v70 = 2;
LABEL_96:
            *((_BYTE *)v60 + v19) = v70;
            goto LABEL_97;
          }
          if (v62 == 1)
          {
            *v60 = *v61;
            *(_QWORD *)(((v20 + a1) & v353) + 8) = *(_QWORD *)(((v20 + a2) & v353) + 8);
            v63 = ((unint64_t)v60 + v309) & v346;
            v64 = ((unint64_t)v61 + v309) & v346;
            v65 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
            swift_bridgeObjectRetain();
            v65(v63, v64, v348);
            v66 = (_WORD *)((v313 + v63) & v353);
            v67 = (_WORD *)((v313 + v64) & v353);
            v68 = v343;
            switch(*((_BYTE *)v67 + v343))
            {
              case 0:
                v71 = 0;
                *v66 = *v67;
                break;
              case 1:
                *(_BYTE *)v66 = *(_BYTE *)v67;
                v71 = 1;
                break;
              case 2:
                *(_QWORD *)v66 = *(_QWORD *)v67;
                *(_QWORD *)(((v313 + v63) & v353) + 8) = *(_QWORD *)(((v313 + v64) & v353) + 8);
                v72 = ((unint64_t)v66 + v328) & v325;
                v333 = *(void (**)(unint64_t, unint64_t, uint64_t))(v332 + 16);
                swift_bridgeObjectRetain();
                v354 = v65;
                v73 = ((unint64_t)v67 + v328) & v325;
                v333(v72, v73, v341);
                v74 = (v337 + v72) & v346;
                v354(v74, (v337 + v73) & v346, v348);
                v68 = v343;
                *(_QWORD *)((v318 + v74) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v318 + ((v337 + v73) & v346)) & 0xFFFFFFFFFFFFF8);
                *((_BYTE *)v66 + v302) = *((_BYTE *)v67 + v302);
                v71 = 2;
                break;
              case 3:
                *(_QWORD *)v66 = *(_QWORD *)v67;
                *(_QWORD *)(((v313 + v63) & v353) + 8) = *(_QWORD *)(((v313 + v64) & v353) + 8);
                v75 = ((unint64_t)v66 + v328) & v325;
                v76 = ((unint64_t)v67 + v328) & v325;
                v77 = *(void (**)(unint64_t, unint64_t, uint64_t))(v332 + 16);
                swift_bridgeObjectRetain();
                v77(v75, v76, v341);
                v78 = (v337 + v75) & v346;
                v65(v78, (v337 + v76) & v346, v348);
                v68 = v343;
                *(_QWORD *)((v318 + v78) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v318 + ((v337 + v76) & v346)) & 0xFFFFFFFFFFFFF8);
                v71 = 3;
                break;
              default:
                if (v343 <= 3)
                  v69 = v343;
                else
                  v69 = 4;
                __asm { BR              X12 }
                return result;
            }
            *((_BYTE *)v66 + v68) = v71;
            v70 = 1;
            goto LABEL_96;
          }
          *v60 = *v61;
          *(_QWORD *)(((v20 + a1) & v353) + 8) = *(_QWORD *)(((v20 + a2) & v353) + 8);
          *((_BYTE *)v60 + v19) = 0;
          swift_bridgeObjectRetain();
        }
LABEL_97:
        v3 = a3;
        *(_BYTE *)(a1 + v21) = 1;
        goto LABEL_98;
      }
      if (v31 == 2)
      {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))((v20 + a1) & v353, v348);
        goto LABEL_51;
      }
      if (v31 == 1)
      {
        swift_bridgeObjectRelease();
        v32 = (v309 + v30) & v346;
        v297 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v297(v32, v348);
        v33 = (v313 + v32) & v353;
        v34 = *(unsigned __int8 *)(v33 + v343);
        if (v34 >= 4)
        {
          if (v343 <= 3)
            v35 = v343;
          else
            v35 = 4;
          __asm { BR              X12 }
        }
        if (v34 >= 2)
        {
          swift_bridgeObjectRelease();
          v36 = (v328 + v33) & v325;
          (*(void (**)(uint64_t, uint64_t))(v332 + 8))(v36, v341);
          v297((v337 + v36) & v346, v348);
        }
        goto LABEL_51;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
LABEL_98:
  v79 = sub_2212F5124();
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(unsigned __int8 *)(v80 + 80);
  v347 = ~v81;
  v344 = v81 + 16;
  v82 = *(_QWORD *)(v80 + 64);
  v83 = sub_2212F5058();
  v84 = *(_QWORD *)(v83 - 8);
  v85 = *(unsigned __int8 *)(v84 + 80);
  v86 = v81 | v85 | 7;
  v349 = ~v86;
  v87 = v86 + v82;
  v88 = (v86 + v82 + ((v81 + 16) & ~v81)) & ~v86;
  v89 = ~v85;
  v90 = v85 + 16;
  v91 = *(_QWORD *)(v84 + 64);
  v92 = v91 + v81;
  v93 = v82 + 7;
  v94 = (v82 + 7 + ((v91 + v81 + ((v85 + 16) & ~v85)) & ~v81)) & 0xFFFFFFFFFFFFFFF8;
  v95 = v94 + 8;
  v96 = v94 + 9;
  if (v96 <= v95)
    v96 = v95;
  if (v96 <= 2)
    v97 = 2;
  else
    v97 = v96;
  if (v97 + v88 + 1 > (v93 & 0xFFFFFFFFFFFFFFF8) + 16)
    v98 = v97 + v88 + 1;
  else
    v98 = (v93 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v98 <= 0x10)
    v99 = 16;
  else
    v99 = v98;
  v100 = v99 + 1;
  v101 = v99 + 1 + v86;
  if ((v101 & (unint64_t)~v86) + v99 + 1 <= 0x20)
    v102 = 32;
  else
    v102 = (v101 & ~v86) + v99 + 1;
  v355 = v102 + 1;
  v103 = v102 + 1 + v86;
  v104 = (v103 + a1) & ~v86;
  v105 = (v103 + a2) & ~v86;
  v106 = *(unsigned __int8 *)(v104 + v102);
  v107 = *(unsigned __int8 *)(v105 + v102);
  if (v106 <= 1)
  {
    if (v107 <= 1)
    {
      if (v104 == v105)
        goto LABEL_269;
      v338 = *(_QWORD *)(v83 - 8);
      v342 = v79;
      __n = v83;
      v326 = v92;
      v329 = v90;
      v334 = v89;
      v294 = v93;
      v300 = v95;
      if (v106 == 1)
      {
        v108 = *(unsigned __int8 *)(v104 + v99);
        if (v108 >= 3)
        {
          if (v99 <= 3)
            v109 = v99;
          else
            v109 = 4;
          __asm { BR              X12 }
        }
        v321 = v101;
        if (v108 == 2)
        {
          v161 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
          v162 = v79;
          v163 = v99;
          v164 = v80;
          v165 = v87;
          v166 = v97;
          v167 = v101;
          v161(v104, v162);
          v119 = v167;
          v97 = v166;
          v120 = v165;
          v80 = v164;
          v121 = v163;
        }
        else if (v108 == 1)
        {
          v305 = v99;
          v156 = v87;
          swift_bridgeObjectRelease();
          v157 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
          v157((v344 + v104) & v347, v342);
          v120 = v156;
          v158 = (v156 + ((v344 + v104) & v347)) & v349;
          v159 = *(unsigned __int8 *)(v158 + v97);
          if (v159 >= 4)
          {
            if (v97 <= 3)
              v160 = v97;
            else
              v160 = 4;
            __asm { BR              X12 }
          }
          v121 = v305;
          v119 = v321;
          if (v159 >= 2)
          {
            if (v159 == 3)
            {
              swift_bridgeObjectRelease();
              v200 = (v329 + v158) & v334;
              (*(void (**)(unint64_t, size_t))(v338 + 8))(v200, __n);
              v157((v326 + v200) & v347, v342);
              v119 = v321;
              v120 = v156;
              v121 = v305;
            }
            else
            {
              swift_bridgeObjectRelease();
              v201 = (v329 + v158) & v334;
              (*(void (**)(unint64_t, size_t))(v338 + 8))(v201, __n);
              v157((v326 + v201) & v347, v342);
              v121 = v305;
              v120 = v156;
              v119 = v321;
            }
          }
        }
        else
        {
          v316 = v80;
          v168 = v87;
          v169 = v99;
          swift_bridgeObjectRelease();
          v121 = v169;
          v120 = v168;
          v80 = v316;
          v119 = v321;
        }
        v202 = (v119 + v104) & v349;
        v203 = *(unsigned __int8 *)(v202 + v121);
        if (v203 > 2)
        {
LABEL_221:
          v215 = *(unsigned __int8 *)(v105 + v102);
          if (v215 >= 2)
          {
            if (v102 <= 3)
              v216 = v102;
            else
              v216 = 4;
            __asm { BR              X12 }
          }
          v3 = a3;
          if (v215 == 1)
          {
            v217 = *(unsigned __int8 *)(v105 + v121);
            if (v217 >= 3)
            {
              if (v121 <= 3)
                v218 = v121;
              else
                v218 = 4;
              __asm { BR              X12 }
            }
            v312 = v120;
            if (v217 == 2)
            {
              v225 = v121;
              v226 = v97;
              v227 = v119;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16))(v104, v105, v342);
              v228 = v227;
              v97 = v226;
              v138 = v225;
              v137 = v294;
              *(_OWORD *)((v294 + v104) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v294 + v105) & 0xFFFFFFFFFFFFF8);
              *(_BYTE *)(v104 + v225) = 2;
            }
            else if (v217 == 1)
            {
              v322 = v119;
              v308 = v121;
              *(_QWORD *)v104 = *(_QWORD *)v105;
              *(_QWORD *)(v104 + 8) = *(_QWORD *)(v105 + 8);
              v219 = (v344 + v104) & v347;
              v220 = (v344 + v105) & v347;
              v221 = *(void (**)(void))(v80 + 16);
              swift_bridgeObjectRetain();
              v290 = v221;
              ((void (*)(unint64_t, unint64_t, uint64_t))v221)(v219, v220, v342);
              v222 = (v312 + v219) & v349;
              v223 = (_WORD *)((v312 + v220) & v349);
              switch(*((_BYTE *)v223 + v97))
              {
                case 0:
                  v231 = 0;
                  *(_WORD *)v222 = *v223;
                  goto LABEL_245;
                case 1:
                  *(_BYTE *)v222 = *(_BYTE *)v223;
                  v231 = 1;
LABEL_245:
                  v138 = v308;
                  v137 = v294;
                  goto LABEL_249;
                case 2:
                  *(_QWORD *)v222 = *(_QWORD *)v223;
                  *(_QWORD *)(v222 + 8) = *(_QWORD *)(((v312 + v220) & v349) + 8);
                  v286 = v222;
                  v232 = (v329 + v222) & v334;
                  v233 = ((unint64_t)v223 + v329) & v334;
                  v283 = *(void (**)(unint64_t, unint64_t, size_t))(v338 + 16);
                  swift_bridgeObjectRetain();
                  v283(v232, v233, __n);
                  v284 = (v326 + v233) & v347;
                  v234 = (v326 + v232) & v347;
                  v222 = v286;
                  v290();
                  v137 = v294;
                  *(_QWORD *)((v294 + v234) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v294 + v284) & 0xFFFFFFFFFFFFF8);
                  *(_BYTE *)(v286 + v300) = *((_BYTE *)v223 + v300);
                  v231 = 2;
                  goto LABEL_248;
                case 3:
                  *(_QWORD *)v222 = *(_QWORD *)v223;
                  *(_QWORD *)(v222 + 8) = *(_QWORD *)(((v312 + v220) & v349) + 8);
                  v235 = (v329 + v222) & v334;
                  v236 = ((unint64_t)v223 + v329) & v334;
                  v287 = *(void (**)(unint64_t, unint64_t, size_t))(v338 + 16);
                  swift_bridgeObjectRetain();
                  v287(v235, v236, __n);
                  v237 = (v326 + v235) & v347;
                  v238 = (v326 + v236) & v347;
                  ((void (*)(uint64_t, unint64_t, uint64_t))v290)(v237, v238, v342);
                  v137 = v294;
                  *(_QWORD *)((v294 + v237) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v294 + v238) & 0xFFFFFFFFFFFFF8);
                  v231 = 3;
LABEL_248:
                  v138 = v308;
LABEL_249:
                  v228 = v322;
                  *(_BYTE *)(v222 + v97) = v231;
                  *(_BYTE *)(v104 + v138) = 1;
                  break;
                default:
                  if (v97 <= 3)
                    v224 = v97;
                  else
                    v224 = 4;
                  __asm { BR              X12 }
                  return result;
              }
            }
            else
            {
              v229 = v119;
              *(_QWORD *)v104 = *(_QWORD *)v105;
              *(_QWORD *)(v104 + 8) = *(_QWORD *)(v105 + 8);
              *(_BYTE *)(v104 + v121) = 0;
              v230 = v121;
              swift_bridgeObjectRetain();
              v138 = v230;
              v137 = v294;
              v228 = v229;
            }
            v179 = (_QWORD *)((v228 + v104) & v349);
            v180 = (_QWORD *)((v228 + v105) & v349);
            v239 = *((unsigned __int8 *)v180 + v138);
            if (v239 <= 2)
            {
              if (v239 != 2)
              {
                if (v239 == 1)
                {
                  v306 = v138;
                  *v179 = *v180;
                  *(_QWORD *)(((v228 + v104) & v349) + 8) = *(_QWORD *)(((v228 + v105) & v349) + 8);
                  v240 = ((unint64_t)v179 + v344) & v347;
                  v241 = ((unint64_t)v180 + v344) & v347;
                  v184 = *(void (**)(unint64_t, unint64_t, uint64_t))(v80 + 16);
                  swift_bridgeObjectRetain();
                  v184(v240, v241, v342);
                  v185 = (v312 + v240) & v349;
                  v186 = (v312 + v241) & v349;
                  v190 = v334;
                  v189 = v338;
                  v191 = v329;
                  switch(*(_BYTE *)(v186 + v97))
                  {
                    case 0:
                      goto LABEL_263;
                    case 1:
                      goto LABEL_264;
                    case 2:
                      goto LABEL_265;
                    case 3:
                      goto LABEL_266;
                    default:
                      if (v97 <= 3)
                        v242 = v97;
                      else
                        v242 = 4;
                      __asm { BR              X12 }
                      return result;
                  }
                }
LABEL_259:
                *v179 = *v180;
                v179[1] = v180[1];
                *((_BYTE *)v179 + v138) = 0;
                swift_bridgeObjectRetain();
                goto LABEL_268;
              }
              v188 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v80 + 16);
              goto LABEL_261;
            }
            goto LABEL_258;
          }
LABEL_232:
          *(_QWORD *)v104 = *(_QWORD *)v105;
          *(_QWORD *)(v104 + 8) = *(_QWORD *)(v105 + 8);
          *(_BYTE *)(v104 + 16) = *(_BYTE *)(v105 + 16);
          *(_QWORD *)(v104 + 24) = *(_QWORD *)(v105 + 24);
          *(_BYTE *)(v104 + v102) = 0;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_269;
        }
        if (v203 != 2)
        {
          if (v203 == 1)
          {
            v307 = v121;
            v204 = v120;
            swift_bridgeObjectRelease();
            v205 = (v344 + v202) & v347;
            v206 = *(void (**)(unint64_t, uint64_t))(v80 + 8);
            v206(v205, v342);
            v120 = v204;
            v207 = (v204 + v205) & v349;
            v208 = *(unsigned __int8 *)(v207 + v97);
            if (v208 >= 4)
            {
              if (v97 <= 3)
                v209 = v97;
              else
                v209 = 4;
              __asm { BR              X12 }
            }
            v121 = v307;
            v119 = v321;
            if (v208 >= 2)
            {
              if (v208 == 3)
              {
                swift_bridgeObjectRelease();
                v213 = (v329 + v207) & v334;
                (*(void (**)(uint64_t, size_t))(v338 + 8))(v213, __n);
                v206((v326 + v213) & v347, v342);
                v119 = v321;
                v120 = v204;
                v121 = v307;
              }
              else
              {
                swift_bridgeObjectRelease();
                v214 = (v329 + v207) & v334;
                (*(void (**)(uint64_t, size_t))(v338 + 8))(v214, __n);
                v206((v326 + v214) & v347, v342);
                v121 = v307;
                v120 = v204;
                v119 = v321;
              }
            }
          }
          else
          {
            v317 = v80;
            v211 = v120;
            v212 = v121;
            swift_bridgeObjectRelease();
            v121 = v212;
            v120 = v211;
            v80 = v317;
            v119 = v321;
          }
          goto LABEL_221;
        }
        v210 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
        v114 = v121;
        v115 = v80;
        v116 = v120;
        v117 = v97;
        v118 = v119;
        v210((v119 + v104) & v349, v342);
      }
      else
      {
        v114 = v99;
        v115 = v80;
        v116 = v87;
        v117 = v97;
        v118 = v101;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v119 = v118;
      v97 = v117;
      v120 = v116;
      v80 = v115;
      v121 = v114;
      goto LABEL_221;
    }
    if (v106 == 1)
    {
      v112 = *(unsigned __int8 *)(v104 + v99);
      v327 = v92;
      if (v112 >= 3)
      {
        if (v99 <= 3)
          v113 = v99;
        else
          v113 = 4;
        __asm { BR              X12 }
      }
      v292 = v97;
      __na = v83;
      v336 = v89;
      v340 = *(_QWORD *)(v83 - 8);
      v331 = v90;
      v315 = v80;
      if (v112 == 2)
      {
        v147 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
        v148 = v99;
        v149 = v87;
        v150 = v101;
        v147(v104, v79);
        v151 = v150;
        v142 = v149;
        v152 = v148;
      }
      else if (v112 == 1)
      {
        v320 = v101;
        v304 = v99;
        v311 = v87;
        swift_bridgeObjectRelease();
        v141 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
        v141((v344 + v104) & v347, v79);
        v142 = v311;
        v143 = v97;
        v144 = (v311 + ((v344 + v104) & v347)) & v349;
        v145 = *(unsigned __int8 *)(v144 + v143);
        if (v145 >= 4)
        {
          if (v143 <= 3)
            v146 = v143;
          else
            v146 = 4;
          __asm { BR              X12 }
        }
        v152 = v304;
        v151 = v320;
        if (v145 >= 2)
        {
          if (v145 == 3)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, size_t))(v340 + 8))((v331 + v144) & v336, __na);
            v141((v327 + ((v331 + v144) & v336)) & v347, v79);
            v151 = v320;
            v152 = v304;
            v142 = v311;
          }
          else
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, size_t))(v340 + 8))((v331 + v144) & v336, __na);
            v141((v327 + ((v331 + v144) & v336)) & v347, v79);
            v152 = v304;
            v142 = v311;
            v151 = v320;
          }
        }
      }
      else
      {
        v153 = v101;
        v154 = v87;
        v155 = v99;
        swift_bridgeObjectRelease();
        v152 = v155;
        v142 = v154;
        v151 = v153;
      }
      v192 = (v151 + v104) & v349;
      v193 = *(unsigned __int8 *)(v192 + v152);
      if (v193 > 2)
        goto LABEL_216;
      if (v193 == 2)
      {
        (*(void (**)(uint64_t, uint64_t))(v315 + 8))((v151 + v104) & v349, v79);
        goto LABEL_216;
      }
      if (v193 == 1)
      {
        v194 = v142;
        swift_bridgeObjectRelease();
        v195 = (v344 + v192) & v347;
        v196 = *(void (**)(unint64_t, uint64_t))(v315 + 8);
        v196(v195, v79);
        v197 = (v194 + v195) & v349;
        v198 = *(unsigned __int8 *)(v197 + v292);
        if (v198 >= 4)
        {
          if (v292 <= 3)
            v199 = v292;
          else
            v199 = 4;
          __asm { BR              X12 }
        }
        if (v198 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, size_t))(v340 + 8))((v331 + v197) & v336, __na);
          v196((v327 + ((v331 + v197) & v336)) & v347, v79);
        }
        goto LABEL_216;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_216:
    memcpy((void *)v104, (const void *)v105, v355);
    goto LABEL_269;
  }
  if (v107 > 1)
    goto LABEL_216;
  if (v107 != 1)
    goto LABEL_232;
  v110 = *(unsigned __int8 *)(v105 + v99);
  v326 = v92;
  if (v110 >= 3)
  {
    if (v99 <= 3)
      v111 = v99;
    else
      v111 = 4;
    __asm { BR              X12 }
  }
  v339 = *(_QWORD *)(v83 - 8);
  v342 = v79;
  __n = v83;
  v330 = v90;
  v335 = v89;
  v310 = v87;
  v314 = v80;
  if (v110 == 2)
  {
    v129 = *(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16);
    v130 = v97;
    v131 = v93;
    v132 = v79;
    v133 = v99;
    v134 = v95;
    v135 = v101;
    v129(v104, v105, v132);
    v136 = v134;
    v137 = v131;
    v97 = v130;
    v138 = v133;
    *(_OWORD *)((v137 + v104) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v137 + v105) & 0xFFFFFFFFFFFFF8);
    *(_BYTE *)(v104 + v133) = 2;
  }
  else
  {
    v291 = v97;
    v301 = v95;
    v319 = v101;
    if (v110 == 1)
    {
      v295 = v93;
      v303 = v99;
      *(_QWORD *)v104 = *(_QWORD *)v105;
      *(_QWORD *)(v104 + 8) = *(_QWORD *)(v105 + 8);
      v122 = (v344 + v104) & v347;
      v123 = (v344 + v105) & v347;
      v124 = *(void (**)(unint64_t, unint64_t, uint64_t))(v80 + 16);
      swift_bridgeObjectRetain();
      v124(v122, v123, v79);
      v125 = (v310 + v122) & v349;
      v126 = v310 + v123;
      v97 = v291;
      v127 = (_WORD *)(v126 & v349);
      switch(*(_BYTE *)((v126 & v349) + v291))
      {
        case 0:
          v170 = 0;
          *(_WORD *)v125 = *v127;
          goto LABEL_170;
        case 1:
          *(_BYTE *)v125 = *(_BYTE *)v127;
          v170 = 1;
LABEL_170:
          v138 = v303;
          v137 = v295;
          goto LABEL_173;
        case 2:
          *(_QWORD *)v125 = *(_QWORD *)v127;
          *(_QWORD *)(v125 + 8) = *(_QWORD *)((v126 & v349) + 8);
          v171 = (v330 + v125) & v335;
          v288 = (void (*)(uint64_t, unint64_t, uint64_t))v124;
          v172 = ((unint64_t)v127 + v330) & v335;
          v285 = *(void (**)(unint64_t, unint64_t, size_t))(v339 + 16);
          swift_bridgeObjectRetain();
          v285(v171, v172, __n);
          v173 = (v326 + v171) & v347;
          v174 = (v326 + v172) & v347;
          v288(v173, v174, v342);
          v137 = v295;
          v136 = v301;
          *(_QWORD *)((v295 + v173) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v295 + v174) & 0xFFFFFFFFFFFFF8);
          *(_BYTE *)(v125 + v301) = *((_BYTE *)v127 + v301);
          v170 = 2;
          v138 = v303;
          goto LABEL_174;
        case 3:
          *(_QWORD *)v125 = *(_QWORD *)v127;
          *(_QWORD *)(v125 + 8) = *(_QWORD *)((v126 & v349) + 8);
          v175 = (v330 + v125) & v335;
          v176 = ((unint64_t)v127 + v330) & v335;
          v289 = *(void (**)(unint64_t, unint64_t, size_t))(v339 + 16);
          swift_bridgeObjectRetain();
          v289(v175, v176, __n);
          v177 = (v326 + v175) & v347;
          v178 = (v326 + v176) & v347;
          v124(v177, v178, v342);
          v137 = v295;
          *(_QWORD *)((v295 + v177) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v295 + v178) & 0xFFFFFFFFFFFFF8);
          v170 = 3;
          v138 = v303;
LABEL_173:
          v136 = v301;
LABEL_174:
          v135 = v319;
          *(_BYTE *)(v125 + v291) = v170;
          *(_BYTE *)(v104 + v138) = 1;
          break;
        default:
          if (v291 <= 3)
            v128 = v291;
          else
            v128 = 4;
          __asm { BR              X12 }
          return result;
      }
    }
    else
    {
      v139 = v93;
      *(_QWORD *)v104 = *(_QWORD *)v105;
      *(_QWORD *)(v104 + 8) = *(_QWORD *)(v105 + 8);
      *(_BYTE *)(v104 + v99) = 0;
      v140 = v99;
      swift_bridgeObjectRetain();
      v138 = v140;
      v137 = v139;
      v97 = v291;
      v136 = v301;
      v135 = v319;
    }
  }
  v179 = (_QWORD *)((v135 + v104) & v349);
  v180 = (_QWORD *)((v135 + v105) & v349);
  v181 = *((unsigned __int8 *)v180 + v138);
  if (v181 <= 2)
  {
    if (v181 != 2)
    {
      if (v181 == 1)
      {
        v294 = v137;
        v300 = v136;
        v306 = v138;
        *v179 = *v180;
        *(_QWORD *)(((v135 + v104) & v349) + 8) = *(_QWORD *)(((v135 + v105) & v349) + 8);
        v182 = ((unint64_t)v179 + v344) & v347;
        v183 = ((unint64_t)v180 + v344) & v347;
        v184 = *(void (**)(unint64_t, unint64_t, uint64_t))(v314 + 16);
        swift_bridgeObjectRetain();
        v184(v182, v183, v342);
        v185 = (v310 + v182) & v349;
        v186 = (v310 + v183) & v349;
        v190 = v335;
        v189 = v339;
        v191 = v330;
        switch(*(_BYTE *)(v186 + v97))
        {
          case 0:
LABEL_263:
            v245 = 0;
            *(_WORD *)v185 = *(_WORD *)v186;
            break;
          case 1:
LABEL_264:
            *(_BYTE *)v185 = *(_BYTE *)v186;
            v245 = 1;
            break;
          case 2:
LABEL_265:
            *(_QWORD *)v185 = *(_QWORD *)v186;
            *(_QWORD *)(v185 + 8) = *(_QWORD *)(v186 + 8);
            v246 = (v191 + v185) & v190;
            v350 = (void (*)(uint64_t, uint64_t, uint64_t))v184;
            v247 = (v191 + v186) & v190;
            v345 = *(void (**)(unint64_t, unint64_t, size_t))(v189 + 16);
            swift_bridgeObjectRetain();
            v345(v246, v247, __n);
            v248 = (v326 + v246) & v347;
            v249 = (v326 + v247) & v347;
            v350(v248, v249, v342);
            *(_QWORD *)((v294 + v248) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v294 + v249) & 0xFFFFFFFFFFFFF8);
            *(_BYTE *)(v185 + v300) = *(_BYTE *)(v186 + v300);
            v245 = 2;
            break;
          case 3:
LABEL_266:
            *(_QWORD *)v185 = *(_QWORD *)v186;
            *(_QWORD *)(v185 + 8) = *(_QWORD *)(v186 + 8);
            v250 = (v191 + v185) & v190;
            v251 = (v191 + v186) & v190;
            v351 = *(void (**)(unint64_t, unint64_t, size_t))(v189 + 16);
            swift_bridgeObjectRetain();
            v351(v250, v251, __n);
            v252 = (v326 + v250) & v347;
            v253 = (v326 + v251) & v347;
            v184(v252, v253, v342);
            *(_QWORD *)((v294 + v252) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v294 + v253) & 0xFFFFFFFFFFFFF8);
            v245 = 3;
            break;
          default:
            if (v97 <= 3)
              v187 = v97;
            else
              v187 = 4;
            __asm { BR              X12 }
            return result;
        }
        *(_BYTE *)(v185 + v97) = v245;
        *((_BYTE *)v179 + v306) = 1;
        goto LABEL_268;
      }
      goto LABEL_259;
    }
    v188 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v314 + 16);
LABEL_261:
    v243 = v137;
    v244 = v138;
    v188(v179, v180, v342);
    *(_OWORD *)(((unint64_t)v179 + v243) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v180 + v243) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)v179 + v244) = 2;
    goto LABEL_268;
  }
LABEL_258:
  memcpy(v179, v180, v100);
LABEL_268:
  v3 = a3;
  *(_BYTE *)(v104 + v102) = 1;
LABEL_269:
  v254 = (_QWORD *)(((v104 | 7) + v355) & 0xFFFFFFFFFFFFFFF8);
  v255 = (_QWORD *)(((v105 | 7) + v355) & 0xFFFFFFFFFFFFFFF8);
  v256 = v255[1];
  *v254 = *v255;
  v254[1] = v256;
  swift_retain();
  swift_release();
  v257 = *(_QWORD *)(*(_QWORD *)(v3 + 16) - 8);
  v258 = *(unsigned __int8 *)(v257 + 80);
  v259 = ((unint64_t)v254 + v258 + 16) & ~v258;
  v260 = ((unint64_t)v255 + v258 + 16) & ~v258;
  (*(void (**)(uint64_t, uint64_t))(v257 + 24))(v259, v260);
  v261 = *(_QWORD *)(v257 + 64);
  v262 = v259 + v261;
  v263 = v260 + v261;
  *(_BYTE *)v262 = *(_BYTE *)v263;
  v264 = v262 & 0xFFFFFFFFFFFFFFF8;
  v265 = v263 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v262 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v263 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v266 = (v264 + 23) & 0xFFFFFFFFFFFFFFF8;
  v267 = (v265 + 23) & 0xFFFFFFFFFFFFFFF8;
  v268 = *(_QWORD *)v267;
  LOBYTE(v260) = *(_BYTE *)(v267 + 8);
  sub_221017C08(*(_QWORD *)v267, v260);
  v269 = *(_QWORD *)v266;
  v270 = *(_BYTE *)(v266 + 8);
  *(_QWORD *)v266 = v268;
  *(_BYTE *)(v266 + 8) = v260;
  sub_221017894(v269, v270);
  v271 = (v264 + 39) & 0xFFFFFFFFFFFFFFF8;
  v272 = (v265 + 39) & 0xFFFFFFFFFFFFFFF8;
  if (v271 != v272)
  {
    sub_2210ABD44((v264 + 39) & 0xFFFFFFFFFFFFFFF8, &qword_2556563B0);
    if ((*(_BYTE *)(v272 + 40) & 1) != 0)
    {
      v273 = *(_QWORD *)(v272 + 24);
      if (v273 >= 6)
      {
        *(_QWORD *)(v271 + 24) = v273;
        *(_QWORD *)(v271 + 32) = *(_QWORD *)(v272 + 32);
        (**(void (***)(unint64_t, unint64_t))(v273 - 8))((v264 + 39) & 0xFFFFFFFFFFFFFFF8, (v265 + 39) & 0xFFFFFFFFFFFFFFF8);
      }
      else
      {
        v274 = *(_OWORD *)v272;
        v275 = *(_OWORD *)(v272 + 16);
        *(_QWORD *)(v271 + 32) = *(_QWORD *)(v272 + 32);
        *(_OWORD *)v271 = v274;
        *(_OWORD *)(v271 + 16) = v275;
      }
      *(_BYTE *)(v271 + 40) = 1;
    }
    else
    {
      *(_QWORD *)v271 = *(_QWORD *)v272;
      *(_BYTE *)(v271 + 40) = 0;
      swift_retain();
    }
  }
  v276 = (v264 + 87) & 0xFFFFFFFFFFFFFFF8;
  v277 = (v265 + 87) & 0xFFFFFFFFFFFFFFF8;
  v278 = *(_QWORD *)v277;
  v279 = *(_BYTE *)(v277 + 8);
  sub_221017C08(*(_QWORD *)v277, v279);
  v280 = *(_QWORD *)v276;
  v281 = *(_BYTE *)(v276 + 8);
  *(_QWORD *)v276 = v278;
  *(_BYTE *)(v276 + 8) = v279;
  sub_221017894(v280, v281);
  return a1;
}

_OWORD *sub_221285264(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  __int128 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _WORD *v32;
  _WORD *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _WORD *v43;
  unint64_t v44;
  unint64_t v45;
  _OWORD *v46;
  _OWORD *v47;
  unsigned int v48;
  unint64_t v49;
  _WORD *v50;
  _WORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _OWORD *v61;
  _OWORD *v62;
  unsigned int v63;
  unsigned int v64;
  uint64_t v65;
  __int128 v66;
  _WORD *v67;
  _WORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  _OWORD *v80;
  _OWORD *v81;
  unsigned int v82;
  unint64_t v83;
  uint64_t v84;
  _WORD *v85;
  _WORD *v86;
  uint64_t v87;
  char v88;
  char v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  _OWORD *v94;
  _OWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  char v105;
  _OWORD *v106;
  __int128 *v107;
  __int128 v108;
  __int128 v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  _OWORD *result;
  unint64_t v114;
  _WORD *v115;
  void (*v116)(uint64_t, uint64_t, uint64_t);
  void (*v117)(void);
  void (*v118)(unint64_t, unint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  size_t __n;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(unint64_t, unint64_t, uint64_t);
  uint64_t v138;

  v138 = sub_2212F5124();
  v6 = *(_QWORD *)(v138 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v130 = v7 + 16;
  v136 = v6;
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_2212F5058();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v7 | v11 | 7;
  v128 = v9;
  v129 = v12 + v8;
  v125 = v11 + 16;
  v126 = v10;
  v127 = *(_QWORD *)(v10 + 64) + v7;
  v13 = v8 + 7;
  v14 = (v8 + 7 + ((v127 + ((v11 + 16) & ~v11)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;
  v16 = v14 + 9;
  v123 = v15;
  if (v16 <= v15)
    v16 = v15;
  if (v16 <= 2)
    v17 = 2;
  else
    v17 = v16;
  v18 = v17 + ((v12 + v8 + ((v7 + 16) & ~v7)) & ~v12);
  if (v18 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
    v19 = v18 + 1;
  else
    v19 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= 0x10)
    v20 = 16;
  else
    v20 = v19;
  v21 = v20 + 1 + v12;
  __n = v20 + 1;
  v132 = v8 + 7;
  if ((v21 & (unint64_t)~v12) + v20 + 1 <= 0x20)
    v22 = 32;
  else
    v22 = (v21 & ~v12) + v20 + 1;
  v23 = *((unsigned __int8 *)a2 + v22);
  if (v23 >= 2)
  {
    if (v22 <= 3)
      v24 = v22;
    else
      v24 = 4;
    __asm { BR              X13 }
  }
  v135 = ~v7;
  v25 = ~v12;
  v124 = ~v11;
  if (v23 != 1)
  {
    v28 = a2[1];
    *a1 = *a2;
    a1[1] = v28;
    *((_BYTE *)a1 + v22) = 0;
    goto LABEL_62;
  }
  v26 = *((unsigned __int8 *)a2 + v20);
  if (v26 >= 3)
  {
    if (v20 <= 3)
      v27 = v20;
    else
      v27 = 4;
    __asm { BR              X12 }
  }
  v133 = a3;
  if (v26 == 2)
  {
    v35 = v17;
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v136 + 32))(a1, a2, v138);
    v17 = v35;
    *(_OWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
    v36 = 2;
  }
  else
  {
    if (v26 != 1)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v20) = 0;
      goto LABEL_43;
    }
    *a1 = *a2;
    v29 = (char *)a2 + v7;
    v30 = ((unint64_t)a1 + v7 + 16) & v135;
    v31 = (unint64_t)(v29 + 16) & v135;
    v116 = *(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 32);
    v119 = v17;
    v116(v30, v31, v138);
    v17 = v119;
    v32 = (_WORD *)((v30 + v8 + v12) & v25);
    v33 = (_WORD *)((v31 + v8 + v12) & v25);
    switch(*((_BYTE *)v33 + v119))
    {
      case 0:
        v37 = 0;
        *v32 = *v33;
        break;
      case 1:
        *(_BYTE *)v32 = *(_BYTE *)v33;
        v37 = 1;
        break;
      case 2:
        *(_OWORD *)v32 = *(_OWORD *)v33;
        v38 = ((unint64_t)v32 + v125) & v124;
        v115 = v32;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v126 + 32))(v38, ((unint64_t)v33 + v125) & v124, v128);
        v39 = (v127 + v38) & v135;
        v40 = (v127 + (((unint64_t)v33 + v125) & v124)) & v135;
        v116(v39, v40, v138);
        v32 = v115;
        *(_QWORD *)((v132 + v39) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v132 + v40) & 0xFFFFFFFFFFFFF8);
        v17 = v119;
        *((_BYTE *)v115 + v123) = *((_BYTE *)v33 + v123);
        v37 = 2;
        break;
      case 3:
        *(_OWORD *)v32 = *(_OWORD *)v33;
        v41 = ((unint64_t)v32 + v125) & v124;
        v42 = ((unint64_t)v33 + v125) & v124;
        v43 = v32;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v126 + 32))(v41, v42, v128);
        v44 = (v127 + v41) & v135;
        v45 = (v127 + v42) & v135;
        v116(v44, v45, v138);
        v32 = v43;
        v17 = v119;
        *(_QWORD *)((v132 + v44) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v132 + v45) & 0xFFFFFFFFFFFFF8);
        v37 = 3;
        break;
      default:
        if (v119 <= 3)
          v34 = v119;
        else
          v34 = 4;
        __asm { BR              X12 }
        return result;
    }
    *((_BYTE *)v32 + v17) = v37;
    v36 = 1;
  }
  *((_BYTE *)a1 + v20) = v36;
LABEL_43:
  v46 = (_OWORD *)(((unint64_t)a1 + v21) & v25);
  v47 = (_OWORD *)(((unint64_t)a2 + v21) & v25);
  v48 = *((unsigned __int8 *)v47 + v20);
  if (v48 > 2)
  {
    v53 = v17;
    memcpy((void *)(((unint64_t)a1 + v21) & v25), (const void *)(((unint64_t)a2 + v21) & v25), __n);
    v17 = v53;
  }
  else
  {
    if (v48 == 2)
    {
      v54 = v17;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v136 + 32))(((unint64_t)a1 + v21) & v25, ((unint64_t)a2 + v21) & v25, v138);
      v17 = v54;
      *(_OWORD *)(((unint64_t)v46 + v132) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v47 + v132) & 0xFFFFFFFFFFFFF8);
      v55 = 2;
LABEL_60:
      *((_BYTE *)v46 + v20) = v55;
      goto LABEL_61;
    }
    if (v48 == 1)
    {
      *v46 = *v47;
      v49 = ((unint64_t)v47 + v130) & v135;
      v117 = *(void (**)(void))(v136 + 32);
      v120 = v17;
      ((void (*)(unint64_t, unint64_t, uint64_t))v117)(((unint64_t)v46 + v130) & v135, v49, v138);
      v17 = v120;
      v50 = (_WORD *)((v129 + (((unint64_t)v46 + v130) & v135)) & v25);
      v51 = (_WORD *)((v129 + v49) & v25);
      switch(*((_BYTE *)v51 + v120))
      {
        case 0:
          v56 = 0;
          *v50 = *v51;
          break;
        case 1:
          *(_BYTE *)v50 = *(_BYTE *)v51;
          v56 = 1;
          break;
        case 2:
          *(_OWORD *)v50 = *(_OWORD *)v51;
          v114 = ((unint64_t)v50 + v125) & v124;
          (*(void (**)(void))(v126 + 32))();
          v117();
          v50 = (_WORD *)((v129 + (((unint64_t)v46 + v130) & v135)) & v25);
          *(_QWORD *)((v132 + ((v127 + v114) & v135)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v132
                                                                                         + ((v127
                                                                                           + (((unint64_t)v51
                                                                                             + v125) & v124)) & v135)) & 0xFFFFFFFFFFFFF8);
          v17 = v120;
          *((_BYTE *)v50 + v123) = *((_BYTE *)v51 + v123);
          v56 = 2;
          break;
        case 3:
          *(_OWORD *)v50 = *(_OWORD *)v51;
          v57 = ((unint64_t)v51 + v125) & v124;
          v58 = ((unint64_t)v50 + v125) & v124;
          (*(void (**)(void))(v126 + 32))();
          v59 = (v127 + v58) & v135;
          v60 = (v127 + v57) & v135;
          ((void (*)(unint64_t, unint64_t, uint64_t))v117)(v59, v60, v138);
          v50 = (_WORD *)((v129 + (((unint64_t)v46 + v130) & v135)) & v25);
          v17 = v120;
          *(_QWORD *)((v132 + v59) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v132 + v60) & 0xFFFFFFFFFFFFF8);
          v56 = 3;
          break;
        default:
          if (v120 <= 3)
            v52 = v120;
          else
            v52 = 4;
          __asm { BR              X12 }
          return result;
      }
      *((_BYTE *)v50 + v17) = v56;
      v55 = 1;
      goto LABEL_60;
    }
    *v46 = *v47;
    *((_BYTE *)v46 + v20) = 0;
  }
LABEL_61:
  a3 = v133;
  *((_BYTE *)a1 + v22) = 1;
LABEL_62:
  v61 = (_OWORD *)(((unint64_t)a1 + v12 + v22 + 1) & v25);
  v62 = (_OWORD *)(((unint64_t)a2 + v12 + v22 + 1) & v25);
  v63 = *((unsigned __int8 *)v62 + v22);
  if (v63 > 1)
  {
    memcpy((void *)(((unint64_t)a1 + v12 + v22 + 1) & v25), v62, v22 + 1);
    goto LABEL_105;
  }
  if (v63 == 1)
  {
    v64 = *((unsigned __int8 *)v62 + v20);
    if (v64 >= 3)
    {
      if (v20 <= 3)
        v65 = v20;
      else
        v65 = 4;
      __asm { BR              X12 }
    }
    v134 = a3;
    if (v64 == 2)
    {
      v70 = ((unint64_t)a1 + v12 + v22 + 1) & v25;
      v71 = v17;
      (*(void (**)(uint64_t, _OWORD *, uint64_t))(v136 + 32))(v70, v62, v138);
      v17 = v71;
      *(_OWORD *)(((unint64_t)v61 + v132) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v62 + v132) & 0xFFFFFFFFFFFFF8);
      v72 = 2;
    }
    else if (v64 == 1)
    {
      *v61 = *v62;
      v118 = *(void (**)(unint64_t, unint64_t, uint64_t))(v136 + 32);
      v121 = v17;
      v118(((unint64_t)v61 + v130) & v135, ((unint64_t)v62 + v130) & v135, v138);
      v17 = v121;
      v67 = (_WORD *)((v129 + (((unint64_t)v61 + v130) & v135)) & v25);
      v68 = (_WORD *)((v129 + (((unint64_t)v62 + v130) & v135)) & v25);
      switch(*((_BYTE *)v68 + v121))
      {
        case 0:
          v73 = 0;
          *v67 = *v68;
          break;
        case 1:
          *(_BYTE *)v67 = *(_BYTE *)v68;
          v73 = 1;
          break;
        case 2:
          *(_OWORD *)v67 = *(_OWORD *)v68;
          v74 = ((unint64_t)v67 + v125) & v124;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v126 + 32))(v74, ((unint64_t)v68 + v125) & v124, v128);
          v75 = (v127 + v74) & v135;
          v76 = (v127 + (((unint64_t)v68 + v125) & v124)) & v135;
          v118(v75, v76, v138);
          v67 = (_WORD *)((v129 + (((unint64_t)v61 + v130) & v135)) & v25);
          *(_QWORD *)((v132 + v75) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v132 + v76) & 0xFFFFFFFFFFFFF8);
          v17 = v121;
          *((_BYTE *)v67 + v123) = *((_BYTE *)v68 + v123);
          v73 = 2;
          break;
        case 3:
          *(_OWORD *)v67 = *(_OWORD *)v68;
          v77 = ((unint64_t)v67 + v125) & v124;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v126 + 32))(v77, ((unint64_t)v68 + v125) & v124, v128);
          v78 = (v127 + v77) & v135;
          v79 = (v127 + (((unint64_t)v68 + v125) & v124)) & v135;
          v118(v78, v79, v138);
          v67 = (_WORD *)((v129 + (((unint64_t)v61 + v130) & v135)) & v25);
          v17 = v121;
          *(_QWORD *)((v132 + v78) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v132 + v79) & 0xFFFFFFFFFFFFF8);
          v73 = 3;
          break;
        default:
          if (v121 <= 3)
            v69 = v121;
          else
            v69 = 4;
          __asm { BR              X12 }
          return result;
      }
      *((_BYTE *)v67 + v17) = v73;
      v72 = 1;
    }
    else
    {
      v72 = 0;
      *v61 = *v62;
    }
    *((_BYTE *)v61 + v20) = v72;
    v80 = (_OWORD *)(((unint64_t)v61 + v21) & v25);
    v81 = (_OWORD *)(((unint64_t)v62 + v21) & v25);
    v82 = *((unsigned __int8 *)v81 + v20);
    if (v82 > 2)
    {
      memcpy((void *)(((unint64_t)v61 + v21) & v25), (const void *)(((unint64_t)v62 + v21) & v25), __n);
    }
    else
    {
      if (v82 == 2)
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v136 + 32))(((unint64_t)v61 + v21) & v25, ((unint64_t)v62 + v21) & v25, v138);
        *(_OWORD *)(((unint64_t)v80 + v132) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v81 + v132) & 0xFFFFFFFFFFFFF8);
        v88 = 2;
LABEL_103:
        *((_BYTE *)v80 + v20) = v88;
        goto LABEL_104;
      }
      if (v82 == 1)
      {
        *v80 = *v81;
        v83 = ((unint64_t)v81 + v130) & v135;
        v122 = v17;
        v137 = *(void (**)(unint64_t, unint64_t, uint64_t))(v136 + 32);
        v137(((unint64_t)v80 + v130) & v135, v83, v138);
        v84 = v122;
        v85 = (_WORD *)((v129 + (((unint64_t)v80 + v130) & v135)) & v25);
        v86 = (_WORD *)((v129 + v83) & v25);
        switch(*((_BYTE *)v86 + v122))
        {
          case 0:
            v89 = 0;
            *v85 = *v86;
            break;
          case 1:
            *(_BYTE *)v85 = *(_BYTE *)v86;
            v89 = 1;
            break;
          case 2:
            *(_OWORD *)v85 = *(_OWORD *)v86;
            (*(void (**)(unint64_t))(v126 + 32))(((unint64_t)v85 + v125) & v124);
            v90 = (v127 + (((unint64_t)v85 + v125) & v124)) & v135;
            v91 = (v127 + (((unint64_t)v86 + v125) & v124)) & v135;
            v137(v90, v91, v138);
            *(_QWORD *)((v132 + v90) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v132 + v91) & 0xFFFFFFFFFFFFF8);
            v84 = v122;
            *((_BYTE *)v85 + v123) = *((_BYTE *)v86 + v123);
            v89 = 2;
            break;
          case 3:
            *(_OWORD *)v85 = *(_OWORD *)v86;
            v92 = ((unint64_t)v86 + v125) & v124;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v126 + 32))(((unint64_t)v85 + v125) & v124, v92, v128);
            v93 = (v127 + (((unint64_t)v85 + v125) & v124)) & v135;
            v137(v93, (v127 + v92) & v135, v138);
            v84 = v122;
            *(_QWORD *)((v132 + v93) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v132 + ((v127 + v92) & v135)) & 0xFFFFFFFFFFFFF8);
            v89 = 3;
            break;
          default:
            if (v122 <= 3)
              v87 = v122;
            else
              v87 = 4;
            __asm { BR              X12 }
            return result;
        }
        *((_BYTE *)v85 + v84) = v89;
        v88 = 1;
        goto LABEL_103;
      }
      *v80 = *v81;
      *((_BYTE *)v80 + v20) = 0;
    }
LABEL_104:
    a3 = v134;
    *((_BYTE *)v61 + v22) = 1;
    goto LABEL_105;
  }
  v66 = v62[1];
  *v61 = *v62;
  *(_OWORD *)((((unint64_t)a1 + v12 + v22 + 1) & v25) + 0x10) = v66;
  *((_BYTE *)v61 + v22) = 0;
LABEL_105:
  v94 = (_OWORD *)(((unint64_t)v61 + v22 + 8) & 0xFFFFFFFFFFFFFFF8);
  v95 = (_OWORD *)(((unint64_t)v62 + v22 + 8) & 0xFFFFFFFFFFFFFFF8);
  *v94 = *v95;
  v96 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v97 = *(unsigned __int8 *)(v96 + 80);
  v98 = ((unint64_t)v94 + v97 + 16) & ~v97;
  v99 = ((unint64_t)v95 + v97 + 16) & ~v97;
  (*(void (**)(uint64_t, uint64_t))(v96 + 32))(v98, v99);
  v100 = *(_QWORD *)(v96 + 64);
  v101 = v98 + v100;
  v102 = v99 + v100;
  *(_BYTE *)v101 = *(_BYTE *)v102;
  v101 &= 0xFFFFFFFFFFFFFFF8;
  v102 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v101 + 8) = *(_QWORD *)(v102 + 8);
  v103 = (v101 + 23) & 0xFFFFFFFFFFFFFFF8;
  v104 = (v102 + 23) & 0xFFFFFFFFFFFFFFF8;
  v105 = *(_BYTE *)(v104 + 8);
  *(_QWORD *)v103 = *(_QWORD *)v104;
  *(_BYTE *)(v103 + 8) = v105;
  v106 = (_OWORD *)((v101 + 39) & 0xFFFFFFFFFFFFFFF8);
  v107 = (__int128 *)((v102 + 39) & 0xFFFFFFFFFFFFFFF8);
  v109 = *v107;
  v108 = v107[1];
  *(_OWORD *)((char *)v106 + 25) = *(__int128 *)((char *)v107 + 25);
  *v106 = v109;
  v106[1] = v108;
  v110 = (v101 + 87) & 0xFFFFFFFFFFFFFFF8;
  v111 = (v102 + 87) & 0xFFFFFFFFFFFFFFF8;
  v112 = *(_QWORD *)v111;
  *(_BYTE *)(v110 + 8) = *(_BYTE *)(v111 + 8);
  *(_QWORD *)v110 = v112;
  return a1;
}

_OWORD *sub_2212860D8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unsigned int v31;
  unint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _WORD *v46;
  _WORD *v47;
  unint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _OWORD *v56;
  _OWORD *v57;
  unsigned int v58;
  unint64_t v59;
  void (*v60)(unint64_t, unint64_t, uint64_t);
  _WORD *v61;
  _WORD *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  size_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  uint64_t v96;
  unsigned int v97;
  uint64_t v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _WORD *v112;
  _WORD *v113;
  uint64_t v114;
  void (*v115)(unint64_t, unint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(unint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unsigned int v130;
  uint64_t v131;
  void (*v132)(unint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _OWORD *v137;
  uint64_t v138;
  uint64_t v139;
  size_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unsigned int v147;
  uint64_t v148;
  void (*v149)(unint64_t, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _OWORD *v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  char v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  _OWORD *v172;
  _OWORD *v173;
  unsigned int v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _WORD *v179;
  _WORD *v180;
  uint64_t v181;
  void (*v182)(_OWORD *, _OWORD *, uint64_t);
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unsigned int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  void (*v191)(unint64_t, uint64_t);
  uint64_t v192;
  unint64_t v193;
  unsigned int v194;
  uint64_t v195;
  unint64_t v196;
  unint64_t v197;
  unint64_t v198;
  unsigned int v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  void (*v204)(unint64_t, uint64_t);
  unint64_t v205;
  unsigned int v206;
  uint64_t v207;
  void (*v208)(unint64_t, uint64_t);
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char v212;
  unint64_t v213;
  unint64_t v214;
  unint64_t v215;
  unint64_t v216;
  _WORD *v217;
  unint64_t v218;
  size_t v219;
  uint64_t v220;
  uint64_t v221;
  unsigned int v222;
  uint64_t v223;
  unsigned int v224;
  uint64_t v225;
  __int128 v226;
  uint64_t v227;
  _WORD *v228;
  _WORD *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char v234;
  char v235;
  unint64_t v236;
  unint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unsigned int v240;
  unint64_t v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _WORD *v245;
  _WORD *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char v250;
  unint64_t v251;
  unint64_t v252;
  unint64_t v253;
  unint64_t v254;
  _OWORD *v255;
  _OWORD *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  unint64_t v263;
  unint64_t v264;
  unint64_t v265;
  unint64_t v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char v270;
  _OWORD *v271;
  _OWORD *v272;
  __int128 v273;
  __int128 v274;
  unint64_t v275;
  unint64_t v276;
  uint64_t v277;
  uint64_t v278;
  char v279;
  _OWORD *result;
  unint64_t v281;
  void (*v282)(unint64_t, unint64_t, uint64_t);
  void (*v283)(unint64_t, uint64_t);
  void (*v284)(void);
  unint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _OWORD *v288;
  void (*v289)(unint64_t, uint64_t);
  void (*v290)(unint64_t, uint64_t);
  void (*v291)(uint64_t, uint64_t, uint64_t);
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  size_t __n;
  size_t __na;
  size_t __nb;
  size_t __nc;
  size_t __nd;
  size_t __ne;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  unint64_t v339;
  unint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  _WORD *v345;
  unint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  void (*v350)(unint64_t, unint64_t, uint64_t);
  void (*v351)(unint64_t, unint64_t, uint64_t);
  uint64_t v352;
  uint64_t v353;
  uint64_t v355;
  size_t v356;

  v3 = a3;
  v5 = a1;
  if (a1 != a2)
  {
    v352 = sub_2212F5124();
    v6 = *(_QWORD *)(v352 - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    v304 = v7 + 16;
    v8 = *(_QWORD *)(v6 + 64);
    v9 = sub_2212F5058();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v12 = v7 | v11 | 7;
    v300 = v12 + v8;
    v327 = v11 + 16;
    v331 = v10;
    v335 = *(_QWORD *)(v10 + 64) + v7;
    v341 = v9;
    v13 = v8 + 7;
    v14 = (v8 + 7 + ((v335 + ((v11 + 16) & ~v11)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    v15 = v14 + 8;
    v16 = v14 + 9;
    v294 = v15;
    if (v16 <= v15)
      v16 = v15;
    if (v16 <= 2)
      v16 = 2;
    v346 = v16;
    v17 = v16 + ((v12 + v8 + ((v7 + 16) & ~v7)) & ~v12);
    v312 = v8 + 7;
    if (v17 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
      v18 = v17 + 1;
    else
      v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v18 <= 0x10)
      v19 = 16;
    else
      v19 = v18;
    v20 = v19 + 1 + v12;
    if ((v20 & (unint64_t)~v12) + v19 + 1 <= 0x20)
      v21 = 32;
    else
      v21 = (v20 & ~v12) + v19 + 1;
    v22 = *((unsigned __int8 *)v5 + v21);
    if (v22 >= 2)
    {
      if (v21 <= 3)
        v23 = v21;
      else
        v23 = 4;
      __asm { BR              X13 }
    }
    v348 = ~v7;
    v355 = ~v12;
    v323 = ~v11;
    if (v22 == 1)
    {
      v24 = *((unsigned __int8 *)v5 + v19);
      if (v24 >= 3)
      {
        if (v19 <= 3)
          v25 = v19;
        else
          v25 = 4;
        __asm { BR              X12 }
      }
      if (v24 == 2)
      {
        (*(void (**)(_OWORD *, uint64_t))(v6 + 8))(v5, v352);
      }
      else if (v24 == 1)
      {
        swift_bridgeObjectRelease();
        v289 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
        v289(((unint64_t)v5 + v7 + 16) & v348, v352);
        v26 = ((((unint64_t)v5 + v7 + 16) & v348) + v8 + v12) & v355;
        v27 = *(unsigned __int8 *)(v26 + v346);
        if (v27 >= 4)
        {
          if (v346 <= 3)
            v28 = v346;
          else
            v28 = 4;
          __asm { BR              X12 }
        }
        if (v27 >= 2)
        {
          swift_bridgeObjectRelease();
          v29 = (v327 + v26) & v323;
          (*(void (**)(uint64_t, uint64_t))(v331 + 8))(v29, v341);
          v289((v335 + v29) & v348, v352);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v30 = ((unint64_t)v5 + v20) & v355;
      v31 = *(unsigned __int8 *)(v30 + v19);
      if (v31 > 2)
      {
LABEL_51:
        v37 = *((unsigned __int8 *)a2 + v21);
        if (v37 >= 2)
        {
          if (v21 <= 3)
            v38 = v21;
          else
            v38 = 4;
          __asm { BR              X12 }
        }
        if (v37 != 1)
        {
          v41 = 0;
          v42 = a2[1];
          *v5 = *a2;
          v5[1] = v42;
          goto LABEL_91;
        }
        v39 = *((unsigned __int8 *)a2 + v19);
        if (v39 >= 3)
        {
          if (v19 <= 3)
            v40 = v19;
          else
            v40 = 4;
          __asm { BR              X12 }
        }
        if (v39 == 2)
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(v5, a2, v352);
          *(_OWORD *)(((unint64_t)v5 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
          v50 = 2;
        }
        else
        {
          if (v39 != 1)
          {
            *v5 = *a2;
            *((_BYTE *)v5 + v19) = 0;
LABEL_79:
            v56 = (_OWORD *)(((unint64_t)v5 + v20) & v355);
            v57 = (_OWORD *)(((unint64_t)a2 + v20) & v355);
            v58 = *((unsigned __int8 *)v57 + v19);
            if (v58 > 2)
            {
              memcpy((void *)(((unint64_t)v5 + v20) & v355), (const void *)(((unint64_t)a2 + v20) & v355), v19 + 1);
            }
            else if (v58 == 2)
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)v5 + v20) & v355, ((unint64_t)a2 + v20) & v355, v352);
              *(_OWORD *)(((unint64_t)v56 + v312) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v57
                                                                                            + v312) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v56 + v19) = 2;
            }
            else
            {
              if (v58 == 1)
              {
                *v56 = *v57;
                v59 = ((unint64_t)v57 + v304) & v348;
                v60 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
                v60(((unint64_t)v56 + v304) & v348, v59, v352);
                v61 = (_WORD *)((v300 + (((unint64_t)v56 + v304) & v348)) & v355);
                v62 = (_WORD *)((v300 + v59) & v355);
                v63 = v346;
                switch(*((_BYTE *)v62 + v346))
                {
                  case 0:
                    v159 = 0;
                    *v61 = *v62;
                    break;
                  case 1:
                    *(_BYTE *)v61 = *(_BYTE *)v62;
                    v159 = 1;
                    break;
                  case 2:
                    *(_OWORD *)v61 = *(_OWORD *)v62;
                    (*(void (**)(unint64_t))(v331 + 32))(((unint64_t)v61 + v327) & v323);
                    v160 = (v335 + (((unint64_t)v61 + v327) & v323)) & v348;
                    v161 = (v335 + (((unint64_t)v62 + v327) & v323)) & v348;
                    v60(v160, v161, v352);
                    v63 = v346;
                    *(_QWORD *)((v312 + v160) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v312 + v161) & 0xFFFFFFFFFFFFF8);
                    *((_BYTE *)v61 + v294) = *((_BYTE *)v62 + v294);
                    v159 = 2;
                    break;
                  case 3:
                    *(_OWORD *)v61 = *(_OWORD *)v62;
                    v162 = ((unint64_t)v62 + v327) & v323;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v331 + 32))(((unint64_t)v61 + v327) & v323, v162, v341);
                    v163 = (v335 + (((unint64_t)v61 + v327) & v323)) & v348;
                    v60(v163, (v335 + v162) & v348, v352);
                    v63 = v346;
                    *(_QWORD *)((v312 + v163) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v312 + ((v335 + v162) & v348)) & 0xFFFFFFFFFFFFF8);
                    v159 = 3;
                    break;
                  default:
                    if (v346 <= 3)
                      v64 = v346;
                    else
                      v64 = 4;
                    __asm { BR              X12 }
                    return result;
                }
                *((_BYTE *)v61 + v63) = v159;
                v41 = 1;
                *((_BYTE *)v56 + v19) = 1;
                goto LABEL_91;
              }
              *v56 = *v57;
              *((_BYTE *)v56 + v19) = 0;
            }
            v41 = 1;
LABEL_91:
            v3 = a3;
            *((_BYTE *)v5 + v21) = v41;
            goto LABEL_92;
          }
          *v5 = *a2;
          v43 = ((unint64_t)v5 + v7 + 16) & v348;
          v44 = ((unint64_t)a2 + v7 + 16) & v348;
          v291 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
          v291(v43, v44, v352);
          v45 = v8 + v12;
          v46 = (_WORD *)((v43 + v8 + v12) & v355);
          v47 = (_WORD *)((v44 + v45) & v355);
          v48 = v346;
          switch(*((_BYTE *)v47 + v346))
          {
            case 0:
              v51 = 0;
              *v46 = *v47;
              break;
            case 1:
              *(_BYTE *)v46 = *(_BYTE *)v47;
              v51 = 1;
              break;
            case 2:
              *(_OWORD *)v46 = *(_OWORD *)v47;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v331 + 32))(((unint64_t)v46 + v327) & v323, ((unint64_t)v47 + v327) & v323, v341);
              v52 = (v335 + (((unint64_t)v46 + v327) & v323)) & v348;
              v53 = (v335 + (((unint64_t)v47 + v327) & v323)) & v348;
              v291(v52, v53, v352);
              v48 = v346;
              *(_QWORD *)((v312 + v52) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v312 + v53) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v46 + v294) = *((_BYTE *)v47 + v294);
              v51 = 2;
              break;
            case 3:
              *(_OWORD *)v46 = *(_OWORD *)v47;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v331 + 32))(((unint64_t)v46 + v327) & v323, ((unint64_t)v47 + v327) & v323, v341);
              v54 = (v335 + (((unint64_t)v46 + v327) & v323)) & v348;
              v55 = (v335 + (((unint64_t)v47 + v327) & v323)) & v348;
              v291(v54, v55, v352);
              v48 = v346;
              *(_QWORD *)((v312 + v54) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v312 + v55) & 0xFFFFFFFFFFFFF8);
              v51 = 3;
              break;
            default:
              if (v346 <= 3)
                v49 = v346;
              else
                v49 = 4;
              __asm { BR              X12 }
              return result;
          }
          *((_BYTE *)v46 + v48) = v51;
          v50 = 1;
        }
        *((_BYTE *)v5 + v19) = v50;
        goto LABEL_79;
      }
      if (v31 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v5 + v20) & v355, v352);
        goto LABEL_51;
      }
      if (v31 == 1)
      {
        swift_bridgeObjectRelease();
        v32 = (v304 + v30) & v348;
        v290 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
        v290(v32, v352);
        v33 = (v300 + v32) & v355;
        v34 = *(unsigned __int8 *)(v33 + v346);
        if (v34 >= 4)
        {
          if (v346 <= 3)
            v35 = v346;
          else
            v35 = 4;
          __asm { BR              X12 }
        }
        if (v34 >= 2)
        {
          swift_bridgeObjectRelease();
          v36 = (v327 + v33) & v323;
          (*(void (**)(uint64_t, uint64_t))(v331 + 8))(v36, v341);
          v290((v335 + v36) & v348, v352);
        }
        goto LABEL_51;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
LABEL_92:
  v65 = sub_2212F5124();
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(unsigned __int8 *)(v66 + 80);
  v353 = ~v67;
  v349 = v67 + 16;
  v68 = *(_QWORD *)(v66 + 64);
  v69 = sub_2212F5058();
  v70 = *(_QWORD *)(v69 - 8);
  v71 = *(unsigned __int8 *)(v70 + 80);
  v72 = v67 | v71 | 7;
  v73 = ~v72;
  v74 = v72 + v68;
  v75 = (v72 + v68 + ((v67 + 16) & ~v67)) & ~v72;
  v76 = ~v71;
  v77 = v71 + 16;
  v78 = *(_QWORD *)(v70 + 64);
  v79 = v78 + v67;
  v80 = v68 + 7;
  v81 = (v68 + 7 + ((v78 + v67 + ((v71 + 16) & ~v71)) & ~v67)) & 0xFFFFFFFFFFFFFFF8;
  v82 = v81 + 8;
  v83 = v81 + 9;
  if (v83 <= v82)
    v83 = v82;
  if (v83 <= 2)
    v84 = 2;
  else
    v84 = v83;
  if (v84 + v75 + 1 > (v80 & 0xFFFFFFFFFFFFFFF8) + 16)
    v85 = v84 + v75 + 1;
  else
    v85 = (v80 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v85 <= 0x10)
    v86 = 16;
  else
    v86 = v85;
  v87 = v86 + 1;
  v88 = v86 + 1 + v72;
  if ((v88 & (unint64_t)~v72) + v86 + 1 <= 0x20)
    v89 = 32;
  else
    v89 = (v88 & ~v72) + v86 + 1;
  v356 = v89 + 1;
  v90 = v89 + 1 + v72;
  v91 = ((unint64_t)v5 + v90) & ~v72;
  v92 = ((unint64_t)a2 + v90) & ~v72;
  v93 = *(unsigned __int8 *)(v91 + v89);
  v94 = *(unsigned __int8 *)(v92 + v89);
  if (v93 <= 1)
  {
    if (v94 <= 1)
    {
      if (v91 == v92)
        goto LABEL_272;
      v347 = v65;
      v324 = v69;
      v328 = v79;
      v336 = v76;
      v342 = *(_QWORD *)(v69 - 8);
      v332 = v77;
      v285 = v82;
      v286 = v80;
      v288 = v5;
      if (v93 == 1)
      {
        v95 = *(unsigned __int8 *)(v91 + v86);
        if (v95 >= 3)
        {
          if (v86 <= 3)
            v96 = v86;
          else
            v96 = 4;
          __asm { BR              X12 }
        }
        __nb = v86;
        if (v95 == 2)
        {
          v149 = *(void (**)(unint64_t, uint64_t))(v66 + 8);
          v150 = v65;
          v151 = v84;
          v152 = v86;
          v153 = v73;
          v154 = v74;
          v155 = v66;
          v156 = (_OWORD *)v92;
          v157 = v88;
          v149(v91, v150);
          v108 = v157;
          v92 = (unint64_t)v156;
          v66 = v155;
          v109 = v154;
          v110 = v153;
          v86 = v152;
          v111 = v151;
        }
        else
        {
          v297 = v73;
          v303 = v88;
          if (v95 == 1)
          {
            v307 = v84;
            v145 = v74;
            swift_bridgeObjectRelease();
            v283 = *(void (**)(unint64_t, uint64_t))(v66 + 8);
            v283((v349 + v91) & v353, v347);
            v109 = v145;
            v110 = v297;
            v111 = v307;
            v146 = (v145 + ((v349 + v91) & v353)) & v297;
            v147 = *(unsigned __int8 *)(v146 + v307);
            if (v147 >= 4)
            {
              if (v307 <= 3)
                v148 = v307;
              else
                v148 = 4;
              __asm { BR              X12 }
            }
            v86 = __nb;
            v108 = v303;
            if (v147 >= 2)
            {
              if (v147 == 3)
              {
                swift_bridgeObjectRelease();
                v196 = (v332 + v146) & v336;
                (*(void (**)(unint64_t, uint64_t))(v342 + 8))(v196, v324);
                v283((v328 + v196) & v353, v347);
                v110 = v297;
                v108 = v303;
                v109 = v145;
                v86 = __nb;
                v111 = v307;
              }
              else
              {
                swift_bridgeObjectRelease();
                v197 = (v332 + v146) & v336;
                (*(void (**)(unint64_t, uint64_t))(v342 + 8))(v197, v324);
                v283((v328 + v197) & v353, v347);
                v108 = v303;
                v111 = v307;
                v86 = __nb;
                v110 = v297;
                v109 = v145;
              }
            }
          }
          else
          {
            v315 = v74;
            v158 = v84;
            swift_bridgeObjectRelease();
            v111 = v158;
            v109 = v315;
            v86 = __nb;
            v110 = v297;
            v108 = v303;
          }
        }
        v198 = (v108 + v91) & v110;
        v199 = *(unsigned __int8 *)(v198 + v86);
        if (v199 > 2)
        {
LABEL_225:
          v222 = *(unsigned __int8 *)(v92 + v89);
          if (v222 >= 2)
          {
            if (v89 <= 3)
              v223 = v89;
            else
              v223 = 4;
            __asm { BR              X12 }
          }
          v3 = a3;
          v5 = v288;
          if (v222 == 1)
          {
            v224 = *(unsigned __int8 *)(v92 + v86);
            if (v224 >= 3)
            {
              if (v86 <= 3)
                v225 = v86;
              else
                v225 = 4;
              __asm { BR              X12 }
            }
            v227 = v108;
            v316 = v109;
            if (v224 == 2)
            {
              v231 = v111;
              v232 = v86;
              v233 = v110;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v66 + 32))(v91, v92, v347);
              v110 = v233;
              v86 = v232;
              v111 = v231;
              v80 = v286;
              *(_OWORD *)((v286 + v91) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v286 + v92) & 0xFFFFFFFFFFFFF8);
              v234 = 2;
            }
            else if (v224 == 1)
            {
              __nd = v86;
              *(_OWORD *)v91 = *(_OWORD *)v92;
              v310 = v111;
              v299 = v110;
              v284 = *(void (**)(void))(v66 + 32);
              ((void (*)(unint64_t, unint64_t, uint64_t))v284)((v349 + v91) & v353, (v349 + v92) & v353, v347);
              v111 = v310;
              v110 = v299;
              v228 = (_WORD *)((v316 + ((v349 + v91) & v353)) & v299);
              v229 = (_WORD *)((v316 + ((v349 + v92) & v353)) & v299);
              v80 = v286;
              switch(*((_BYTE *)v229 + v310))
              {
                case 0:
                  v235 = 0;
                  *v228 = *v229;
                  break;
                case 1:
                  *(_BYTE *)v228 = *(_BYTE *)v229;
                  v235 = 1;
                  break;
                case 2:
                  *(_OWORD *)v228 = *(_OWORD *)v229;
                  v281 = ((unint64_t)v228 + v332) & v336;
                  (*(void (**)(void))(v342 + 32))();
                  v284();
                  v228 = (_WORD *)((v316 + ((v349 + v91) & v353)) & v299);
                  v110 = v299;
                  v111 = v310;
                  *(_QWORD *)((v286 + ((v328 + v281) & v353)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v286
                                                                                                 + ((v328 + (((unint64_t)v229 + v332) & v336)) & v353)) & 0xFFFFFFFFFFFFF8);
                  *((_BYTE *)v228 + v285) = *((_BYTE *)v229 + v285);
                  v235 = 2;
                  break;
                case 3:
                  *(_OWORD *)v228 = *(_OWORD *)v229;
                  v236 = ((unint64_t)v229 + v332) & v336;
                  v237 = ((unint64_t)v228 + v332) & v336;
                  (*(void (**)(void))(v342 + 32))();
                  v238 = (v328 + v237) & v353;
                  v239 = (v328 + v236) & v353;
                  ((void (*)(unint64_t, unint64_t, uint64_t))v284)(v238, v239, v347);
                  v228 = (_WORD *)((v316 + ((v349 + v91) & v353)) & v299);
                  v110 = v299;
                  v111 = v310;
                  *(_QWORD *)((v286 + v238) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v286 + v239) & 0xFFFFFFFFFFFFF8);
                  v235 = 3;
                  break;
                default:
                  if (v310 <= 3)
                    v230 = v310;
                  else
                    v230 = 4;
                  __asm { BR              X12 }
                  return result;
              }
              v86 = __nd;
              *((_BYTE *)v228 + v111) = v235;
              v234 = 1;
            }
            else
            {
              v80 = v286;
              v234 = 0;
              *(_OWORD *)v91 = *(_OWORD *)v92;
            }
            *(_BYTE *)(v91 + v86) = v234;
            v172 = (_OWORD *)((v227 + v91) & v110);
            v173 = (_OWORD *)((v227 + v92) & v110);
            v240 = *((unsigned __int8 *)v173 + v86);
            if (v240 <= 2)
            {
              if (v240 != 2)
              {
                if (v240 == 1)
                {
                  __ne = v86;
                  *v172 = *v173;
                  v241 = ((unint64_t)v172 + v349) & v353;
                  v242 = ((unint64_t)v173 + v349) & v353;
                  v311 = v111;
                  v243 = v110;
                  v351 = *(void (**)(unint64_t, unint64_t, uint64_t))(v66 + 32);
                  v351(v241, v242, v347);
                  v244 = v311;
                  v245 = (_WORD *)((v316 + v241) & v243);
                  v246 = (_WORD *)((v316 + v242) & v243);
                  v249 = v336;
                  switch(*((_BYTE *)v246 + v311))
                  {
                    case 0:
                      v250 = 0;
                      *v245 = *v246;
                      break;
                    case 1:
                      *(_BYTE *)v245 = *(_BYTE *)v246;
                      v250 = 1;
                      break;
                    case 2:
                      *(_OWORD *)v245 = *(_OWORD *)v246;
                      v251 = ((unint64_t)v245 + v332) & v336;
                      v340 = ((unint64_t)v246 + v332) & v336;
                      (*(void (**)(unint64_t))(v342 + 32))(((unint64_t)v245 + v332) & v249);
                      v252 = (v328 + v251) & v353;
                      v351(v252, (v328 + v340) & v353, v347);
                      v244 = v311;
                      *(_QWORD *)((v286 + v252) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v286 + ((v328 + v340) & v353)) & 0xFFFFFFFFFFFFF8);
                      *((_BYTE *)v245 + v285) = *((_BYTE *)v246 + v285);
                      v250 = 2;
                      break;
                    case 3:
                      *(_OWORD *)v245 = *(_OWORD *)v246;
                      v253 = ((unint64_t)v246 + v332) & v336;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v342 + 32))(((unint64_t)v245 + v332) & v336, v253, v324);
                      v254 = (v328 + (((unint64_t)v245 + v332) & v336)) & v353;
                      v351(v254, (v328 + v253) & v353, v347);
                      v244 = v311;
                      *(_QWORD *)((v286 + v254) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v286 + ((v328 + v253) & v353)) & 0xFFFFFFFFFFFFF8);
                      v250 = 3;
                      break;
                    default:
                      if (v311 <= 3)
                        v247 = v311;
                      else
                        v247 = 4;
                      __asm { BR              X12 }
                      return result;
                  }
                  v219 = __ne;
                  *((_BYTE *)v245 + v244) = v250;
LABEL_270:
                  *((_BYTE *)v172 + v219) = 1;
                  goto LABEL_271;
                }
LABEL_261:
                *v172 = *v173;
                *((_BYTE *)v172 + v86) = 0;
                goto LABEL_271;
              }
              v182 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(v66 + 32);
              goto LABEL_263;
            }
            goto LABEL_260;
          }
LABEL_236:
          v226 = *(_OWORD *)(v92 + 16);
          *(_OWORD *)v91 = *(_OWORD *)v92;
          *(_OWORD *)(v91 + 16) = v226;
          *(_BYTE *)(v91 + v89) = 0;
          goto LABEL_272;
        }
        if (v199 != 2)
        {
          if (v199 == 1)
          {
            v200 = v108;
            v309 = v111;
            v201 = v110;
            v202 = v109;
            swift_bridgeObjectRelease();
            v203 = (v349 + v198) & v353;
            v204 = *(void (**)(unint64_t, uint64_t))(v66 + 8);
            v204(v203, v347);
            v109 = v202;
            v110 = v201;
            v111 = v309;
            v205 = (v202 + v203) & v201;
            v206 = *(unsigned __int8 *)(v205 + v309);
            if (v206 >= 4)
            {
              if (v309 <= 3)
                v207 = v309;
              else
                v207 = 4;
              __asm { BR              X12 }
            }
            v86 = __nb;
            v108 = v200;
            if (v206 >= 2)
            {
              if (v206 == 3)
              {
                swift_bridgeObjectRelease();
                v220 = (v332 + v205) & v336;
                (*(void (**)(uint64_t, uint64_t))(v342 + 8))(v220, v324);
                v204((v328 + v220) & v353, v347);
                v108 = v200;
                v109 = v202;
                v110 = v201;
                v86 = __nb;
                v111 = v309;
              }
              else
              {
                swift_bridgeObjectRelease();
                v221 = (v332 + v205) & v336;
                (*(void (**)(uint64_t, uint64_t))(v342 + 8))(v221, v324);
                v204((v328 + v221) & v353, v347);
                v111 = v309;
                v86 = __nb;
                v110 = v201;
                v109 = v202;
                v108 = v200;
              }
            }
          }
          else
          {
            v298 = v110;
            v209 = v108;
            v210 = v109;
            v211 = v111;
            swift_bridgeObjectRelease();
            v111 = v211;
            v86 = __nb;
            v110 = v298;
            v109 = v210;
            v108 = v209;
          }
          goto LABEL_225;
        }
        v208 = *(void (**)(unint64_t, uint64_t))(v66 + 8);
        v101 = v111;
        v102 = v86;
        v103 = v110;
        v104 = v109;
        v105 = v66;
        v106 = (_OWORD *)v92;
        v107 = v108;
        v208((v108 + v91) & v110, v347);
      }
      else
      {
        v101 = v84;
        v102 = v86;
        v103 = v73;
        v104 = v74;
        v105 = v66;
        v106 = (_OWORD *)v92;
        v107 = v88;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v108 = v107;
      v92 = (unint64_t)v106;
      v66 = v105;
      v109 = v104;
      v110 = v103;
      v86 = v102;
      v111 = v101;
      goto LABEL_225;
    }
    if (v93 == 1)
    {
      v99 = *(unsigned __int8 *)(v91 + v86);
      v330 = v79;
      if (v99 >= 3)
      {
        if (v86 <= 3)
          v100 = v86;
        else
          v100 = 4;
        __asm { BR              X12 }
      }
      v326 = v69;
      v338 = v76;
      v344 = *(_QWORD *)(v69 - 8);
      v334 = v77;
      v293 = v66;
      if (v99 == 2)
      {
        v132 = *(void (**)(unint64_t, uint64_t))(v66 + 8);
        v133 = v84;
        v134 = v86;
        v135 = v73;
        v136 = v74;
        v137 = (_OWORD *)v92;
        v138 = v88;
        v132(v91, v65);
        v139 = v138;
        v92 = (unint64_t)v137;
        v127 = v136;
        v128 = v135;
        v140 = v134;
        v126 = v133;
      }
      else if (v99 == 1)
      {
        v124 = v88;
        v314 = v74;
        __na = v86;
        v306 = v84;
        v296 = v73;
        swift_bridgeObjectRelease();
        v125 = *(void (**)(unint64_t, uint64_t))(v66 + 8);
        v125((v349 + v91) & v353, v65);
        v126 = v306;
        v127 = v314;
        v128 = v296;
        v129 = (v314 + ((v349 + v91) & v353)) & v296;
        v130 = *(unsigned __int8 *)(v129 + v306);
        if (v130 >= 4)
        {
          if (v306 <= 3)
            v131 = v306;
          else
            v131 = 4;
          __asm { BR              X12 }
        }
        v140 = __na;
        v139 = v124;
        if (v130 >= 2)
        {
          if (v130 == 3)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v344 + 8))((v334 + v129) & v338, v326);
            v125((v330 + ((v334 + v129) & v338)) & v353, v65);
            v139 = v124;
            v127 = v314;
            v140 = __na;
            v128 = v296;
            v126 = v306;
          }
          else
          {
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v344 + 8))((v334 + v129) & v338, v326);
            v125((v330 + ((v334 + v129) & v338)) & v353, v65);
            v126 = v306;
            v127 = v314;
            v140 = __na;
            v128 = v296;
            v139 = v124;
          }
        }
      }
      else
      {
        v302 = v88;
        v141 = v74;
        v142 = v73;
        v143 = v86;
        v144 = v84;
        swift_bridgeObjectRelease();
        v126 = v144;
        v140 = v143;
        v128 = v142;
        v127 = v141;
        v139 = v302;
      }
      v185 = (v139 + v91) & v128;
      v186 = *(unsigned __int8 *)(v185 + v140);
      if (v186 > 2)
        goto LABEL_220;
      if (v186 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v293 + 8))((v139 + v91) & v128, v65);
        goto LABEL_220;
      }
      if (v186 == 1)
      {
        v187 = v126;
        v188 = v128;
        v189 = v127;
        swift_bridgeObjectRelease();
        v190 = (v349 + v185) & v353;
        v191 = *(void (**)(unint64_t, uint64_t))(v293 + 8);
        v191(v190, v65);
        v192 = v187;
        v193 = (v189 + v190) & v188;
        v194 = *(unsigned __int8 *)(v193 + v192);
        if (v194 >= 4)
        {
          if (v192 <= 3)
            v195 = v192;
          else
            v195 = 4;
          __asm { BR              X12 }
        }
        if (v194 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v344 + 8))((v334 + v193) & v338, v326);
          v191((v330 + ((v334 + v193) & v338)) & v353, v65);
        }
        goto LABEL_220;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_220:
    memcpy((void *)v91, (const void *)v92, v356);
    goto LABEL_272;
  }
  if (v94 > 1)
    goto LABEL_220;
  if (v94 != 1)
    goto LABEL_236;
  v97 = *(unsigned __int8 *)(v92 + v86);
  v329 = v79;
  if (v97 >= 3)
  {
    if (v86 <= 3)
      v98 = v86;
    else
      v98 = 4;
    __asm { BR              X12 }
  }
  v301 = v88;
  v347 = v65;
  v325 = v69;
  v337 = v76;
  v343 = *(_QWORD *)(v69 - 8);
  v333 = v77;
  v292 = v66;
  v313 = v74;
  if (v97 == 2)
  {
    v115 = *(void (**)(unint64_t, unint64_t, uint64_t))(v66 + 32);
    v116 = v65;
    v117 = v84;
    v118 = v86;
    v119 = v82;
    v120 = v80;
    v121 = v73;
    v115(v91, v92, v116);
    v73 = v121;
    v80 = v120;
    v82 = v119;
    v86 = v118;
    v84 = v117;
    *(_OWORD *)((v80 + v91) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v80 + v92) & 0xFFFFFFFFFFFFF8);
    v122 = 2;
LABEL_141:
    v123 = v301;
    goto LABEL_174;
  }
  if (v97 != 1)
  {
    v122 = 0;
    *(_OWORD *)v91 = *(_OWORD *)v92;
    goto LABEL_141;
  }
  __n = v86;
  *(_OWORD *)v91 = *(_OWORD *)v92;
  v305 = v84;
  v295 = v73;
  v282 = *(void (**)(unint64_t, unint64_t, uint64_t))(v66 + 32);
  v282((v349 + v91) & v353, (v349 + v92) & v353, v65);
  v84 = v305;
  v73 = v295;
  v112 = (_WORD *)((v313 + ((v349 + v91) & v353)) & v295);
  v113 = (_WORD *)((v313 + ((v349 + v92) & v353)) & v295);
  switch(*((_BYTE *)v113 + v305))
  {
    case 0:
      v164 = 0;
      *v112 = *v113;
      break;
    case 1:
      *(_BYTE *)v112 = *(_BYTE *)v113;
      v164 = 1;
      break;
    case 2:
      *(_OWORD *)v112 = *(_OWORD *)v113;
      v165 = ((unint64_t)v112 + v333) & v337;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v343 + 32))(v165, ((unint64_t)v113 + v333) & v337, v325);
      v166 = (v329 + v165) & v353;
      v167 = (v329 + (((unint64_t)v113 + v333) & v337)) & v353;
      v282(v166, v167, v347);
      v112 = (_WORD *)((v313 + ((v349 + v91) & v353)) & v295);
      v73 = v295;
      v84 = v305;
      *(_QWORD *)((v80 + v166) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v80 + v167) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v112 + v82) = *((_BYTE *)v113 + v82);
      v164 = 2;
      break;
    case 3:
      *(_OWORD *)v112 = *(_OWORD *)v113;
      v168 = ((unint64_t)v113 + v333) & v337;
      v169 = ((unint64_t)v112 + v333) & v337;
      (*(void (**)(void))(v343 + 32))();
      v170 = (v329 + v169) & v353;
      v171 = (v329 + v168) & v353;
      v282(v170, v171, v347);
      v112 = (_WORD *)((v313 + ((v349 + v91) & v353)) & v295);
      v73 = v295;
      v84 = v305;
      *(_QWORD *)((v80 + v170) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v80 + v171) & 0xFFFFFFFFFFFFF8);
      v164 = 3;
      break;
    default:
      if (v305 <= 3)
        v114 = v305;
      else
        v114 = 4;
      __asm { BR              X12 }
      return result;
  }
  v86 = __n;
  v123 = v301;
  *((_BYTE *)v112 + v84) = v164;
  v122 = 1;
LABEL_174:
  *(_BYTE *)(v91 + v86) = v122;
  v172 = (_OWORD *)((v123 + v91) & v73);
  v173 = (_OWORD *)((v123 + v92) & v73);
  v174 = *((unsigned __int8 *)v173 + v86);
  if (v174 <= 2)
  {
    if (v174 != 2)
    {
      if (v174 == 1)
      {
        v287 = v80;
        __nc = v86;
        *v172 = *v173;
        v175 = ((unint64_t)v172 + v349) & v353;
        v176 = ((unint64_t)v173 + v349) & v353;
        v308 = v84;
        v177 = v73;
        v350 = *(void (**)(unint64_t, unint64_t, uint64_t))(v292 + 32);
        v350(v175, v176, v347);
        v178 = v308;
        v179 = (_WORD *)((v313 + v175) & v177);
        v180 = (_WORD *)((v313 + v176) & v177);
        v184 = v337;
        v183 = v343;
        switch(*((_BYTE *)v180 + v308))
        {
          case 0:
            v212 = 0;
            *v179 = *v180;
            break;
          case 1:
            *(_BYTE *)v179 = *(_BYTE *)v180;
            v212 = 1;
            break;
          case 2:
            *(_OWORD *)v179 = *(_OWORD *)v180;
            v213 = ((unint64_t)v179 + v333) & v337;
            v339 = ((unint64_t)v180 + v333) & v337;
            v345 = v179;
            (*(void (**)(unint64_t))(v183 + 32))(((unint64_t)v179 + v333) & v184);
            v214 = (v329 + v213) & v353;
            v350(v214, (v329 + v339) & v353, v347);
            v179 = v345;
            v178 = v308;
            *(_QWORD *)((v287 + v214) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v287 + ((v329 + v339) & v353)) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v345 + v82) = *((_BYTE *)v180 + v82);
            v212 = 2;
            break;
          case 3:
            *(_OWORD *)v179 = *(_OWORD *)v180;
            v215 = ((unint64_t)v179 + v333) & v337;
            v216 = ((unint64_t)v180 + v333) & v337;
            v217 = v179;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v343 + 32))(v215, v216, v325);
            v218 = (v329 + v215) & v353;
            v350(v218, (v329 + v216) & v353, v347);
            v179 = v217;
            v178 = v308;
            *(_QWORD *)((v287 + v218) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v287 + ((v329 + v216) & v353)) & 0xFFFFFFFFFFFFF8);
            v212 = 3;
            break;
          default:
            if (v308 <= 3)
              v181 = v308;
            else
              v181 = 4;
            __asm { BR              X12 }
            return result;
        }
        v219 = __nc;
        *((_BYTE *)v179 + v178) = v212;
        goto LABEL_270;
      }
      goto LABEL_261;
    }
    v182 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(v292 + 32);
LABEL_263:
    v248 = v86;
    v182(v172, v173, v347);
    *(_OWORD *)(((unint64_t)v172 + v80) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v173 + v80) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)v172 + v248) = 2;
    goto LABEL_271;
  }
LABEL_260:
  memcpy(v172, v173, v87);
LABEL_271:
  v3 = a3;
  *(_BYTE *)(v91 + v89) = 1;
LABEL_272:
  v255 = (_OWORD *)(((v91 | 7) + v356) & 0xFFFFFFFFFFFFFFF8);
  v256 = (_OWORD *)(((v92 | 7) + v356) & 0xFFFFFFFFFFFFFFF8);
  *v255 = *v256;
  swift_release();
  v257 = *(_QWORD *)(*(_QWORD *)(v3 + 16) - 8);
  v258 = *(unsigned __int8 *)(v257 + 80);
  v259 = ((unint64_t)v255 + v258 + 16) & ~v258;
  v260 = ((unint64_t)v256 + v258 + 16) & ~v258;
  (*(void (**)(uint64_t, uint64_t))(v257 + 40))(v259, v260);
  v261 = *(_QWORD *)(v257 + 64);
  v262 = v259 + v261;
  v263 = v260 + v261;
  *(_BYTE *)v262 = *(_BYTE *)v263;
  v264 = v262 & 0xFFFFFFFFFFFFFFF8;
  v265 = v263 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v262 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v263 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  v266 = (v264 + 23) & 0xFFFFFFFFFFFFFFF8;
  v267 = (v265 + 23) & 0xFFFFFFFFFFFFFFF8;
  v268 = *(_QWORD *)v267;
  LOBYTE(v267) = *(_BYTE *)(v267 + 8);
  v269 = *(_QWORD *)v266;
  v270 = *(_BYTE *)(v266 + 8);
  *(_QWORD *)v266 = v268;
  *(_BYTE *)(v266 + 8) = v267;
  sub_221017894(v269, v270);
  v271 = (_OWORD *)((v264 + 39) & 0xFFFFFFFFFFFFFFF8);
  v272 = (_OWORD *)((v265 + 39) & 0xFFFFFFFFFFFFFFF8);
  if (v271 != v272)
  {
    sub_2210ABD44((v264 + 39) & 0xFFFFFFFFFFFFFFF8, &qword_2556563B0);
    v273 = *(_OWORD *)((char *)v272 + 25);
    v274 = v272[1];
    *v271 = *v272;
    v271[1] = v274;
    *(_OWORD *)((char *)v271 + 25) = v273;
  }
  v275 = (v264 + 87) & 0xFFFFFFFFFFFFFFF8;
  v276 = (v265 + 87) & 0xFFFFFFFFFFFFFFF8;
  v277 = *(_QWORD *)v276;
  LOBYTE(v276) = *(_BYTE *)(v276 + 8);
  v278 = *(_QWORD *)v275;
  v279 = *(_BYTE *)(v275 + 8);
  *(_QWORD *)v275 = v277;
  *(_BYTE *)(v275 + 8) = v276;
  sub_221017894(v278, v279);
  return v5;
}

uint64_t sub_221288314(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t *v33;
  unint64_t v34;

  v6 = *(_QWORD *)(sub_2212F5124() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(sub_2212F5058() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 | v10 | 7;
  v12 = (v8 + 7 + ((*(_QWORD *)(v9 + 64) + v7 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;
  v14 = v12 + 9;
  if (v14 <= v13)
    v14 = v13;
  if (v14 <= 2)
    v14 = 2;
  v15 = v14 + ((((v7 + 16) & ~v7) + v8 + v11) & ~v11);
  if (v15 + 1 > ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v16 = v15 + 1;
  else
    v16 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v16 <= 0x10)
    v16 = 16;
  v17 = v16 + 1;
  v18 = (v16 + 1 + v11) & ~v11;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int *)(v20 + 84);
  if (v21 <= 0x7FFFFFFF)
    v22 = 0x7FFFFFFF;
  else
    v22 = *(_DWORD *)(v20 + 84);
  v23 = v18 + v17;
  if (v23 <= 0x20)
    v23 = 32;
  if (!a2)
    return 0;
  v24 = v23 + v11 + 1;
  v25 = v23 + 8;
  v26 = *(unsigned __int8 *)(v20 + 80);
  v27 = v26 + 16;
  if (v22 < a2)
  {
    v28 = ((((((v27 + ((v25 + (v24 & ~v11)) & 0xFFFFFFFFFFFFFFF8)) & ~v26) + *(_QWORD *)(v20 + 64)) & 0xFFFFFFFFFFFFFFF8)
          + 87) & 0xFFFFFFFFFFFFFFF8)
        + 9;
    if (v28 < 4)
      v29 = ((a2 - v22 + 255) >> (8 * v28)) + 1;
    else
      v29 = 2;
    if (v29 >= 0x10000)
      v30 = 4;
    else
      v30 = 2;
    if (v29 < 0x100)
      v30 = 1;
    if (v29 >= 2)
      v31 = v30;
    else
      v31 = 0;
    __asm { BR              X0 }
  }
  v33 = (unint64_t *)((v25 + ((v24 + a1) & ~v11)) & 0xFFFFFFFFFFFFFFF8);
  if ((v21 & 0x80000000) != 0)
    return __swift_getEnumTagSinglePayload(((unint64_t)v33 + v27) & ~v26, v21, v19);
  v34 = *v33;
  if (v34 >= 0xFFFFFFFF)
    LODWORD(v34) = -1;
  return (v34 + 1);
}

void sub_221288564(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  size_t v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;

  v8 = *(_QWORD *)(sub_2212F5124() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_QWORD *)(sub_2212F5058() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 | v12 | 7;
  v14 = (v10 + 7 + ((*(_QWORD *)(v11 + 64) + v9 + ((v12 + 16) & ~v12)) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;
  v16 = v14 + 9;
  if (v16 <= v15)
    v16 = v15;
  if (v16 <= 2)
    v16 = 2;
  v17 = v16 + ((((v9 + 16) & ~v9) + v10 + v13) & ~v13);
  if (v17 + 1 > ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v18 = v17 + 1;
  else
    v18 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 <= 0x10)
    v18 = 16;
  v19 = v18 + 1;
  v20 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v20 + 84) <= 0x7FFFFFFFu)
    v21 = 0x7FFFFFFF;
  else
    v21 = *(_DWORD *)(v20 + 84);
  v22 = ((v19 + v13) & ~v13) + v19;
  v23 = 32;
  if (v22 > 0x20)
    v23 = v22;
  v24 = ((((((*(unsigned __int8 *)(v20 + 80) + 16 + ((v23 + 8 + ((v23 + v13 + 1) & ~v13)) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))
          + *(_QWORD *)(v20 + 64)) & 0xFFFFFFFFFFFFFFF8)
        + 87) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  if (v21 >= a3)
  {
    v27 = 0;
  }
  else
  {
    if (v24 <= 3)
      v25 = ((a3 - v21 + 255) >> (8 * v24)) + 1;
    else
      v25 = 2;
    if (v25 >= 0x10000)
      v26 = 4;
    else
      v26 = 2;
    if (v25 < 0x100)
      v26 = 1;
    if (v25 >= 2)
      v27 = v26;
    else
      v27 = 0;
  }
  if (v21 < a2)
  {
    if (v24 >= 4)
      v28 = ~v21 + a2;
    else
      v28 = (~(_BYTE)v21 + a2);
    bzero(a1, v24);
    if ((_DWORD)v24 == 1)
      *a1 = v28;
    else
      *(_DWORD *)a1 = v28;
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

void sub_22128877C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x2212887F8);
}

void sub_221288784()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x22128878CLL);
  JUMPOUT(0x2212887F8);
}

void sub_2212887AC()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x2212887F8);
}

void sub_2212887B4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x2212887F8);
}

void sub_2212887BC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (v4)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if ((v4 & 0x80000000) == 0)
        JUMPOUT(0x2212887F4);
      JUMPOUT(0x2212887ECLL);
    }
    JUMPOUT(0x2212887C8);
  }
  JUMPOUT(0x2212887F8);
}

uint64_t type metadata accessor for SubscriptionStoreButtonInternal(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubscriptionStoreButtonInternal);
}

uint64_t sub_221288820()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_221288854(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255658AE8);
  v3 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v31 = (uint64_t)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v27 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659808);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0);
  v29 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (uint64_t)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v28 = (uint64_t)v27 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return MEMORY[0x24BEE4AF8];
  v27[0] = a1;
  v27[1] = v1;
  v15 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v30 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x24BEE4AF8];
  do
  {
    v17 = v32;
    v18 = *(int *)(v32 + 48);
    v19 = (uint64_t)&v7[v18];
    v20 = v15 + v18;
    sub_22128AB4C(v15, (uint64_t)v7);
    sub_22128F25C(v20, v19, &qword_255659808);
    v21 = *(int *)(v17 + 48);
    v22 = v31;
    v23 = v31 + v21;
    sub_22128B2CC((uint64_t)v7, v31, type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
    sub_22128B284(v19, v23);
    sub_22128F25C(v23, (uint64_t)v10, &qword_255659808);
    sub_2210ABD44(v22, &qword_255658AE8);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v34) == 1)
    {
      sub_2210ABD44((uint64_t)v10, &qword_255659808);
    }
    else
    {
      v24 = v28;
      sub_22128B2CC((uint64_t)v10, v28, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
      sub_22128B2CC(v24, v33, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_221153050();
      v25 = *(_QWORD *)(v16 + 16);
      if (v25 >= *(_QWORD *)(v16 + 24) >> 1)
        v16 = sub_221153050();
      *(_QWORD *)(v16 + 16) = v25 + 1;
      sub_22128B2CC(v33, v16+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v25, type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair);
    }
    v15 += v30;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_221288B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[7];

  v3 = v2;
  v21 = a2;
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v28[2] = MEMORY[0x24BDF1FA8];
  v28[3] = v5;
  v28[4] = MEMORY[0x24BDF1F80];
  v28[5] = v4;
  v6 = sub_2212F46D4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255656B80);
  v10 = sub_2212F3348();
  v20 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - v14;
  v25 = v5;
  v26 = v4;
  v27 = v3;
  v22 = v5;
  v23 = v4;
  v24 = v3;
  sub_2212F46C8();
  sub_2212F3F48();
  v16 = MEMORY[0x22766BAC4](MEMORY[0x24BDF41A8], v6);
  sub_2212F4404();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_221024548(&qword_255656B78, &qword_255656B80);
  v28[0] = v16;
  v28[1] = v17;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v10, v28);
  sub_221088D68((uint64_t)v12, v10, (uint64_t)v15);
  v18 = *(void (**)(char *, uint64_t))(v20 + 8);
  v18(v12, v10);
  sub_221087210((uint64_t)v15, v10, v21);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v10);
}

uint64_t sub_221288D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22128AB4C(a1, (uint64_t)v6);
  result = sub_221277D38((uint64_t)v6);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v8;
  *(_BYTE *)(a2 + 16) = v9 & 1;
  *(_QWORD *)(a2 + 24) = v10;
  return result;
}

uint64_t sub_221288DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel(0, v9, v10, v11);
  sub_221088D68(a1 + *(int *)(v12 + 36), a2, (uint64_t)v8);
  sub_221087210((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_221288E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  sub_22128B2CC(a1, a5, type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
  v10 = a5 + *(int *)(type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel(0, a3, a4, v9) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v10, a2, a3);
}

uint64_t sub_221288F08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  _BYTE v20[24];
  uint64_t v21;
  _BYTE v22[40];

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(_BYTE *)(v1 + *(int *)(v7 + 48)) == 2)
    return 0;
  v9 = v1 + *(int *)(a1 + 56);
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_221017C08(*(_QWORD *)v9, v11);
  sub_2210451EC();
  v13 = v12;
  v14 = v12;
  sub_221017894(v10, v11);
  if (v14 == 2)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
    if ((v13 & 1) != 0)
    {
      sub_221043454();
      sub_221079680((uint64_t)v22, (uint64_t)v20);
      if ((unint64_t)(v21 - 1) < 2)
      {
        sub_2210176A8((uint64_t)v22);
        (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, a1);
        return 1;
      }
      sub_2210796BC((uint64_t)v20);
      sub_2210176A8((uint64_t)v22);
    }
  }
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, a1);
  v15 = v2 + *(int *)(a1 + 64);
  v16 = *(_QWORD *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  sub_221017C08(*(_QWORD *)v15, v17);
  sub_22104359C();
  v19 = v18;
  sub_221017894(v16, v17);
  if ((v19 & 1) != 0)
    return 1;
  else
    return 2;
}

void sub_2212890B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_2212F38DC();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_4();
  v3 = sub_2212F3D2C();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_3_4();
  type metadata accessor for MultilineButtonLabel();
  type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v4);
  sub_2212F3A20();
  sub_221023FE4(&qword_255666878, (void (*)(uint64_t))type metadata accessor for MultilineButtonLabel);
  OUTLINED_FUNCTION_5_2();
}

void sub_2212891AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = v1;
  *(_QWORD *)(v2 - 96) = a1;
  OUTLINED_FUNCTION_10_13();
}

void sub_2212891C0()
{
  OUTLINED_FUNCTION_20_27();
  OUTLINED_FUNCTION_5_2();
}

void sub_2212891D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_21_31();
  sub_2212F3348();
  OUTLINED_FUNCTION_25_29();
  OUTLINED_FUNCTION_14_2();
  sub_2212F3E40();
  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666880);
  OUTLINED_FUNCTION_0_8();
  v1 = OUTLINED_FUNCTION_10_10();
  MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v1);
  v2 = sub_2212F4830();
  OUTLINED_FUNCTION_2_22(*(_QWORD *)(v2 - 8));
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_2212F3348();
  OUTLINED_FUNCTION_2_22(*(_QWORD *)(v4 - 8));
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x22766BAC4](MEMORY[0x24BDF4700], v2, v6);
  *(_QWORD *)(v0 - 336) = v7;
  v8 = MEMORY[0x24BDEF830];
  *(_QWORD *)(v0 - 120) = v7;
  *(_QWORD *)(v0 - 112) = v8;
  OUTLINED_FUNCTION_3_3();
}

uint64_t sub_2212892F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[96];

  *(_QWORD *)(v5 - 328) = a1;
  *(_QWORD *)(v5 - 136) = v2;
  *(_QWORD *)(v5 - 128) = a1;
  v6 = MEMORY[0x22766BA58](0, v5 - 136, MEMORY[0x24BDF2F10], 0);
  OUTLINED_FUNCTION_2_22(*(_QWORD *)(v6 - 8));
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v25[-v8];
  v10 = sub_2212F3348();
  *(_QWORD *)(v5 - 296) = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v5 - 320) = &v25[-v14];
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v5 - 280) = &v25[-v16];
  v17 = *(_QWORD *)(v5 - 272);
  *(_QWORD *)(v5 - 176) = *(_QWORD *)(v5 - 264);
  *(_QWORD *)(v5 - 168) = v17;
  *(_QWORD *)(v5 - 160) = *(_QWORD *)(v5 - 256);
  sub_221074860();
  sub_2212F4824();
  sub_2212F41E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 304) + 8))(v1, v4);
  v18 = *(_QWORD *)(v5 - 248);
  sub_2212F3D14();
  v19 = *(_QWORD *)(v5 - 328);
  sub_2212F4308();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 240) + 8))(v18, *(_QWORD *)(v5 - 232));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 288) + 8))(v3, v2);
  swift_getKeyPath();
  *(_QWORD *)(v5 - 136) = v2;
  *(_QWORD *)(v5 - 128) = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_221032BD4();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 312) + 8))(v9, v6);
  sub_2212F38D0();
  v21 = *(_QWORD *)(v5 - 320);
  sub_2212F333C();
  OUTLINED_FUNCTION_53_1(*(_QWORD *)(v5 - 216));
  OUTLINED_FUNCTION_35_20((uint64_t)v12);
  sub_221023FE4(&qword_255656B50, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  *(_QWORD *)(v5 - 152) = OpaqueTypeConformance2;
  *(_QWORD *)(v5 - 144) = v22;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v10, v5 - 152);
  v23 = *(_QWORD *)(v5 - 280);
  sub_221088D68(v21, v10, v23);
  OUTLINED_FUNCTION_35_20(v21);
  sub_221087210(v23, v10, *(_QWORD *)(v5 - 200));
  return OUTLINED_FUNCTION_35_20(v23);
}

uint64_t sub_2212895EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[6];
  _QWORD v108[13];
  _QWORD v109[2];
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD v114[2];
  _QWORD v115[2];
  _QWORD v116[2];
  _QWORD v117[2];
  _QWORD v118[3];

  v103 = a4;
  v104 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659728);
  MEMORY[0x24BDAC7A8](v6);
  v101 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  MEMORY[0x24BDAC7A8](v102);
  v82 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v83 = (uint64_t)&v81 - v10;
  v11 = sub_2212F38DC();
  v98 = *(_QWORD *)(v11 - 8);
  v99 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v97 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SubscriptionStoreButtonInternal(0, a2, a3, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v14;
  v94 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v81 - v17;
  type metadata accessor for MultilineButtonLabel();
  v20 = type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel(255, a2, a3, v19);
  v21 = sub_2212F3A20();
  sub_221023FE4(&qword_255666878, (void (*)(uint64_t))type metadata accessor for MultilineButtonLabel);
  v23 = v22;
  v24 = MEMORY[0x22766BAC4](&unk_221316AB0, v20);
  v118[0] = v23;
  v118[1] = v24;
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v21, v118);
  v88 = sub_2212F4848();
  v87 = MEMORY[0x22766BAC4](MEMORY[0x24BDF4750], v88);
  v25 = sub_2212F47AC();
  v92 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v86 = (char *)&v81 - v26;
  v27 = sub_2212F3348();
  v95 = *(_QWORD *)(v27 - 8);
  v90 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v85 = (char *)&v81 - v28;
  type metadata accessor for SubscribeButtonTopCaptionModifier();
  v29 = sub_2212F3348();
  v30 = *(_QWORD *)(v29 - 8);
  v93 = v29;
  v96 = v30;
  MEMORY[0x24BDAC7A8](v29);
  v89 = (char *)&v81 - v31;
  sub_2212F3E40();
  v84 = sub_2212F3348();
  v106 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v100 = (char *)&v81 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v91 = (char *)&v81 - v34;
  v36 = MEMORY[0x24BDAC7A8](v35);
  v105 = (uint64_t)&v81 - v37;
  v38 = v18;
  v39 = v18;
  v40 = v104;
  v41 = v16;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v39, v104, v16, v36);
  v42 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = a2;
  *(_QWORD *)(v43 + 24) = a3;
  v44 = v43 + v42;
  v45 = v41;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v44, v38, v41);
  v108[8] = a2;
  v108[9] = a3;
  v46 = a2;
  v108[10] = v40;
  v47 = v40;
  v48 = v86;
  sub_2212F4794();
  v49 = MEMORY[0x22766BAC4](MEMORY[0x24BDF43B0], v25);
  v50 = v85;
  MEMORY[0x227669B20](v49, v25, &type metadata for PrimaryButtonViewModifier, v49);
  v51 = v25;
  v52 = v84;
  (*(void (**)(char *, uint64_t))(v92 + 8))(v48, v51);
  v108[2] = v46;
  v108[3] = a3;
  v108[4] = v47;
  v107[2] = v46;
  v107[3] = a3;
  v107[4] = v47;
  LOBYTE(v48) = sub_221288F08(v45) == 1;
  v53 = sub_22128AA04();
  v117[0] = v49;
  v117[1] = v53;
  v54 = MEMORY[0x24BDED308];
  v55 = v90;
  v56 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v90, v117);
  v57 = v89;
  sub_221170648((uint64_t (*)(__n128))sub_22128A9EC, (uint64_t)v108, (uint64_t (*)(uint64_t))sub_22128A9F8, (uint64_t)v107, (char)v48, v55, v56);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v50, v55);
  v58 = v97;
  sub_2212F38D0();
  sub_221023FE4(&qword_255666890, (void (*)(uint64_t))type metadata accessor for SubscribeButtonTopCaptionModifier);
  v116[0] = v56;
  v116[1] = v59;
  v60 = v93;
  v61 = MEMORY[0x22766BAC4](v54, v93, v116);
  v62 = (uint64_t)v91;
  v63 = v58;
  sub_2212F43B0();
  v64 = v104;
  (*(void (**)(char *, uint64_t))(v98 + 8))(v63, v99);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v57, v60);
  sub_221023FE4(&qword_255656B50, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
  v115[0] = v61;
  v115[1] = v65;
  v66 = (uint64_t)v101;
  v67 = MEMORY[0x22766BAC4](v54, v52, v115);
  sub_221088D68(v62, v52, v105);
  v68 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
  v68(v62, v52);
  sub_22128F25C(v64 + *(int *)(v45 + 36), v66, &qword_255659728);
  if (__swift_getEnumTagSinglePayload(v66, 1, v102) == 1)
  {
    sub_2210ABD44(v66, &qword_255659728);
LABEL_6:
    v71 = 0;
    v73 = 0;
    v77 = 0;
    v75 = 0;
    goto LABEL_7;
  }
  v69 = v83;
  sub_22128B2CC(v66, v83, type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
  if (sub_221288F08(v45) != 2)
  {
    sub_2210ABD14(v69, type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
    goto LABEL_6;
  }
  v70 = v82;
  sub_22128AB4C(v69, v82);
  v71 = sub_221277D38(v70);
  v73 = v72;
  v75 = v74;
  v77 = v76 & 1;
  sub_2210ABD14(v69, type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
LABEL_7:
  v78 = v105;
  v79 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v100, v105, v52);
  v110 = v71;
  v111 = v73;
  v112 = v77;
  v113 = v75;
  v114[0] = v79;
  v114[1] = &v110;
  sub_22113A4C4(v71, v73, v77, v75);
  v109[0] = v52;
  v109[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_255666880);
  v108[11] = v67;
  v108[12] = sub_22128AA40();
  sub_22122F0B4((uint64_t)v114, 2, (uint64_t)v109);
  sub_221131324(v71, v73, v77, v75);
  v68(v78, v52);
  sub_221131324(v110, v111, v112, v113);
  return ((uint64_t (*)(char *, uint64_t))v68)(v79, v52);
}

uint64_t sub_221289D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for SubscriptionStoreButtonInternal(0, a2, a3, a4);
  return (*(uint64_t (**)(void))(a1 + *(int *)(v5 + 40)))();
}

uint64_t sub_221289D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  void (*v19)(_BYTE *, uint64_t);
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];

  type metadata accessor for MultilineButtonLabel();
  v9 = type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel(255, a2, a3, v8);
  v10 = sub_2212F3A20();
  sub_221023FE4(&qword_255666878, (void (*)(uint64_t))type metadata accessor for MultilineButtonLabel);
  v25[0] = v11;
  v25[1] = MEMORY[0x22766BAC4](&unk_221316AB0, v9);
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v10, v25);
  v12 = sub_2212F4848();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v21[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v21[-v17];
  v22 = a2;
  v23 = a3;
  v24 = a1;
  sub_221050128();
  sub_2212F483C();
  MEMORY[0x22766BAC4](MEMORY[0x24BDF4750], v12);
  sub_221088D68((uint64_t)v15, v12, (uint64_t)v18);
  v19 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
  v19(v15, v12);
  sub_221087210((uint64_t)v18, v12, a4);
  return ((uint64_t (*)(_BYTE *, uint64_t))v19)(v18, v12);
}

uint64_t sub_221289F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];

  v50 = a4;
  v42 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v43 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel(0, v8, v9, v10);
  v44 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v46 = (uint64_t)&v41 - v15;
  v16 = type metadata accessor for MultilineButtonLabel();
  MEMORY[0x24BDAC7A8](v16);
  v41 = (uint64_t)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659728);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v41 - v25;
  v47 = v16;
  v27 = sub_2212F3A20();
  v48 = *(_QWORD *)(v27 - 8);
  v49 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v41 - v28;
  v45 = a3;
  v31 = type metadata accessor for SubscriptionStoreButtonInternal(0, a2, a3, v30);
  sub_22128F25C(a1 + *(int *)(v31 + 36), (uint64_t)v20, &qword_255659728);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21) == 1)
  {
    sub_2210ABD44((uint64_t)v20, &qword_255659728);
  }
  else
  {
    sub_22128B2CC((uint64_t)v20, (uint64_t)v26, type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
    if (!sub_221288F08(v31))
    {
      v35 = v41;
      sub_22128AB4C(a1, v41);
      sub_22128AB4C((uint64_t)v26, v35 + *(int *)(v47 + 20));
      sub_221023FE4(&qword_255666878, (void (*)(uint64_t))type metadata accessor for MultilineButtonLabel);
      MEMORY[0x22766BAC4](&unk_221316AB0, v11);
      sub_22113B0A4();
      sub_2210ABD14(v35, (uint64_t (*)(_QWORD))type metadata accessor for MultilineButtonLabel);
      sub_2210ABD14((uint64_t)v26, type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
      goto LABEL_7;
    }
    sub_2210ABD14((uint64_t)v26, type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource);
  }
  sub_22128AB4C(a1, (uint64_t)v23);
  v32 = (uint64_t)v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v43, a1 + *(int *)(v31 + 44), a2);
  sub_221288E9C((uint64_t)v23, v32, a2, v45, (uint64_t)v13);
  MEMORY[0x22766BAC4](&unk_221316AB0, v11);
  v33 = v46;
  sub_221088D68((uint64_t)v13, v11, v46);
  v34 = *(void (**)(char *, uint64_t))(v44 + 8);
  v34(v13, v11);
  sub_221087210(v33, v11, (uint64_t)v13);
  sub_221023FE4(&qword_255666878, (void (*)(uint64_t))type metadata accessor for MultilineButtonLabel);
  sub_22113B11C();
  v34(v13, v11);
  v34((char *)v33, v11);
LABEL_7:
  sub_221023FE4(&qword_255666878, (void (*)(uint64_t))type metadata accessor for MultilineButtonLabel);
  v37 = v36;
  v38 = MEMORY[0x22766BAC4](&unk_221316AB0, v11);
  v51[0] = v37;
  v51[1] = v38;
  v39 = v49;
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v49, v51);
  sub_221087210((uint64_t)v29, v39, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v29, v39);
}

void sub_22128A3A8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;

  v7 = type metadata accessor for SubscriptionStoreButtonInternal(0, a2, a3, a4);
  sub_22128F25C(a1 + *(int *)(v7 + 36), a5, &qword_255659728);
}

uint64_t sub_22128A3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for SubscriptionStoreButtonInternal(0, a2, a3, a4);
  return sub_221288854(*(_QWORD *)(a1 + *(int *)(v5 + 52)));
}

uint64_t sub_22128A42C()
{
  uint64_t result;
  char v1;

  sub_2210BBC4C();
  result = sub_2212F2E80();
  if ((v1 & 1) != 0)
    return sub_2212F2E74();
  return result;
}

uint64_t type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubscriptionStoreButtonInternal.SingleLineLabel);
}

uint64_t sub_22128A494@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2212895EC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_22128A4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for SubscriptionStoreButtonInternal(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*((_QWORD *)v6 - 1) + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = v4 + v8;
  type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    OUTLINED_FUNCTION_11_34();
    goto LABEL_7;
  }
  v10 = _s11PriceStringOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v12 = OUTLINED_FUNCTION_6_26();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v4 + v8, v12);
      break;
    case 1:
      OUTLINED_FUNCTION_11_34();
      v13 = OUTLINED_FUNCTION_53_7();
      v14 = OUTLINED_FUNCTION_6_26();
      OUTLINED_FUNCTION_1_54(v14);
      v15 = v9 + *(int *)(v13 + 24);
      OUTLINED_FUNCTION_13_44();
      v16 = OUTLINED_FUNCTION_29_20();
      if (v16 == 3 || v16 == 2)
      {
        swift_bridgeObjectRelease();
        v65 = v15 + *(int *)(OUTLINED_FUNCTION_4_44() + 20);
        v17 = OUTLINED_FUNCTION_5_44();
        OUTLINED_FUNCTION_11_49(v17, v18, v19, v20, v21, v22, v23, v24, v65);
        v25 = OUTLINED_FUNCTION_27_27();
        v27(v25, v26);
      }
      break;
    case 0:
      OUTLINED_FUNCTION_11_34();
      break;
  }
  v28 = v9 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v28, 1, v10))
  {
    v31 = swift_getEnumCaseMultiPayload();
    if (v31 == 2)
    {
      v50 = OUTLINED_FUNCTION_6_26();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v28, v50);
      goto LABEL_13;
    }
    if (v31 == 1)
    {
      OUTLINED_FUNCTION_22_23();
      v51 = OUTLINED_FUNCTION_53_7();
      v52 = v28 + *(int *)(v51 + 20);
      v53 = OUTLINED_FUNCTION_6_26();
      v67 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8);
      v67(v52, v53);
      v54 = v28 + *(int *)(v51 + 24);
      OUTLINED_FUNCTION_13_44();
      v55 = swift_getEnumCaseMultiPayload();
      if (v55 == 3 || v55 == 2)
      {
        OUTLINED_FUNCTION_22_23();
        v56 = OUTLINED_FUNCTION_4_44();
        v57 = OUTLINED_FUNCTION_5_44();
        OUTLINED_FUNCTION_12_45(v57);
        v67(v54 + *(int *)(v56 + 24), v53);
      }
      goto LABEL_13;
    }
    if (v31)
      goto LABEL_13;
LABEL_7:
    swift_bridgeObjectRelease();
  }
LABEL_13:
  v29 = v9 + v6[9];
  if (OUTLINED_FUNCTION_240())
    goto LABEL_31;
  if (OUTLINED_FUNCTION_10_41() != 1)
  {
    OUTLINED_FUNCTION_3_53();
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  _s11PriceStringOMa(0);
  v30 = OUTLINED_FUNCTION_10_41();
  switch(v30)
  {
    case 2:
      OUTLINED_FUNCTION_6_26();
      v32 = OUTLINED_FUNCTION_33_22();
      goto LABEL_29;
    case 1:
      OUTLINED_FUNCTION_3_53();
      v34 = OUTLINED_FUNCTION_53_7();
      v35 = OUTLINED_FUNCTION_6_26();
      OUTLINED_FUNCTION_1_54(v35);
      v36 = v29 + *(int *)(v34 + 24);
      OUTLINED_FUNCTION_13_44();
      v37 = OUTLINED_FUNCTION_29_20();
      if (v37 != 3 && v37 != 2)
        break;
      swift_bridgeObjectRelease();
      v66 = v36 + *(int *)(OUTLINED_FUNCTION_4_44() + 20);
      v38 = OUTLINED_FUNCTION_5_44();
      OUTLINED_FUNCTION_11_49(v38, v39, v40, v41, v42, v43, v44, v45, v66);
      v32 = OUTLINED_FUNCTION_27_27();
LABEL_29:
      v33(v32);
      break;
    case 0:
      OUTLINED_FUNCTION_3_53();
      break;
  }
  v46 = v29 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  if (OUTLINED_FUNCTION_240())
    goto LABEL_31;
  v49 = OUTLINED_FUNCTION_10_41();
  switch(v49)
  {
    case 2:
      OUTLINED_FUNCTION_6_26();
      v58 = OUTLINED_FUNCTION_33_22();
      v59(v58);
      break;
    case 1:
      OUTLINED_FUNCTION_3_53();
      v60 = v46 + *(int *)(OUTLINED_FUNCTION_53_7() + 20);
      v61 = OUTLINED_FUNCTION_6_26();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v60, v61);
      OUTLINED_FUNCTION_13_44();
      v62 = swift_getEnumCaseMultiPayload();
      if (v62 == 3 || v62 == 2)
      {
        OUTLINED_FUNCTION_3_53();
        OUTLINED_FUNCTION_4_44();
        OUTLINED_FUNCTION_5_44();
        v63 = OUTLINED_FUNCTION_32_25();
        v64(v63);
        OUTLINED_FUNCTION_17_37();
      }
      break;
    case 0:
      goto LABEL_24;
  }
LABEL_31:
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9 + v6[11], v5);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_3(v6[14]);
  v47 = v9 + v6[15];
  if ((*(_BYTE *)(v47 + 40) & 1) != 0)
  {
    if (*(_QWORD *)(v47 + 24) >= 6uLL)
      __swift_destroy_boxed_opaque_existential_1(v47);
  }
  else
  {
    swift_release();
  }
  OUTLINED_FUNCTION_0_3(v6[16]);
  return swift_deallocObject();
}

uint64_t sub_22128A990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SubscriptionStoreButtonInternal(0, v5, v6, a4) - 8)
                          + 80);
  return sub_221289D58(v4 + ((v7 + 32) & ~v7), v5, v6, v8);
}

uint64_t sub_22128A9E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_221289D8C(v1[4], v1[2], v1[3], a1);
}

void sub_22128A9EC(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_22128A3A8(v2[4], v2[2], v2[3], a1, a2);
}

uint64_t sub_22128A9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_22128A3E8(v4[4], v4[2], v4[3], a4);
}

unint64_t sub_22128AA04()
{
  unint64_t result;

  result = qword_255666888;
  if (!qword_255666888)
  {
    result = MEMORY[0x22766BAC4](&unk_221316A60, &type metadata for PrimaryButtonViewModifier);
    atomic_store(result, (unint64_t *)&qword_255666888);
  }
  return result;
}

unint64_t sub_22128AA40()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_255666898;
  if (!qword_255666898)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666880);
    v2 = sub_22128AAA4();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255666898);
  }
  return result;
}

unint64_t sub_22128AAA4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_2556668A0;
  if (!qword_2556668A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556668A8);
    v2 = sub_22128AB10();
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2556668A0);
  }
  return result;
}

unint64_t sub_22128AB10()
{
  unint64_t result;

  result = qword_2556668B0[0];
  if (!qword_2556668B0[0])
  {
    result = MEMORY[0x22766BAC4](&unk_221316A10, &type metadata for BottomCaptionViewModifier);
    atomic_store(result, qword_2556668B0);
  }
  return result;
}

uint64_t sub_22128AB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22128AB90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t OpaqueTypeConformance2;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v40 = a1;
  v1 = sub_2212F3D2C();
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for StoreKitProminentButtonStyle(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666938);
  v33 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666940);
  v34 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v29 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666948);
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v30 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = swift_getKeyPath();
  v5[8] = 0;
  v11 = (uint64_t *)&v5[*(int *)(v3 + 20)];
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(qword_255656688);
  swift_storeEnumTagMultiPayload();
  v12 = (uint64_t *)&v5[*(int *)(v3 + 24)];
  *v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657138);
  swift_storeEnumTagMultiPayload();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666950);
  sub_221024548(&qword_255666958, &qword_255666950);
  v15 = v14;
  sub_221023FE4(&qword_255657AD8, (void (*)(uint64_t))type metadata accessor for StoreKitProminentButtonStyle);
  v17 = v16;
  sub_2212F4320();
  sub_2210ABD14((uint64_t)v5, type metadata accessor for StoreKitProminentButtonStyle);
  *(_QWORD *)v5 = swift_getKeyPath();
  v5[8] = 0;
  v18 = (uint64_t *)&v5[*(int *)(v3 + 20)];
  *v18 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v19 = (uint64_t *)&v5[*(int *)(v3 + 24)];
  *v19 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v41 = v13;
  v42 = v3;
  v43 = v15;
  v44 = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v21 = v29;
  v22 = v31;
  sub_2212F43A4();
  sub_2210ABD14((uint64_t)v5, type metadata accessor for StoreKitProminentButtonStyle);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v22);
  v23 = v35;
  sub_2212F3D14();
  v41 = v22;
  v42 = v3;
  v43 = OpaqueTypeConformance2;
  v44 = v17;
  v24 = v30;
  v25 = v32;
  v26 = swift_getOpaqueTypeConformance2();
  sub_2212F4308();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v39);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v25);
  if (qword_255655B48 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v41 = v25;
  v42 = v26;
  swift_getOpaqueTypeConformance2();
  v27 = v37;
  sub_2212F438C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v24, v27);
}

uint64_t sub_22128AFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v22 = a1;
  v25 = a2;
  v23 = sub_2212F3D2C();
  v2 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666960);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666968);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666970);
  v24 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2212F3F3C();
  KeyPath = swift_getKeyPath();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666978);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v7, v22, v16);
  v17 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  *v17 = KeyPath;
  v17[1] = v14;
  v18 = swift_getKeyPath();
  sub_22128F25C((uint64_t)v7, (uint64_t)v10, &qword_255666960);
  v19 = &v10[*(int *)(v8 + 36)];
  *(_QWORD *)v19 = v18;
  v19[8] = 1;
  sub_2210ABD44((uint64_t)v7, &qword_255666960);
  sub_2212F3D14();
  v20 = sub_22128F294();
  sub_2212F4308();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v23);
  sub_2210ABD44((uint64_t)v10, &qword_255666968);
  if (qword_255655B48 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v26 = v8;
  v27 = v20;
  swift_getOpaqueTypeConformance2();
  sub_2212F438C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v13, v11);
}

uint64_t sub_22128B284(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_22128B2CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_9_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_22128B304@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_221289F44(v1[4], v1[2], v1[3], a1);
}

ValueMetadata *type metadata accessor for BottomCaptionViewModifier()
{
  return &type metadata for BottomCaptionViewModifier;
}

ValueMetadata *type metadata accessor for PrimaryButtonViewModifier()
{
  return &type metadata for PrimaryButtonViewModifier;
}

uint64_t sub_22128B330()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(319);
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22128B3B8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  size_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, unint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _WORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void (*v63)(uint64_t, unint64_t, uint64_t);
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  unsigned int v68;
  unint64_t v69;
  unint64_t v70;
  void (*v71)(unint64_t, unint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t result;
  char v81;
  unint64_t v82;
  unint64_t v83;
  void (*v84)(unint64_t, unint64_t, uint64_t);
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  void (*v88)(unint64_t, unint64_t, uint64_t);
  uint64_t v89;
  void (*v90)(uint64_t, unint64_t, uint64_t);
  uint64_t v91;
  void (*v92)(uint64_t, unint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v6 = sub_2212F5124();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v110 = v8 + 16;
  v111 = v6;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = sub_2212F5058();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = v8 | v13 | 7;
  v15 = *(_QWORD *)(v12 + 64) + v8;
  v16 = v10 + 7;
  v17 = (v10 + 7 + ((v15 + ((v13 + 16) & ~v13)) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8;
  v18 = v17 + 8;
  v19 = v17 + 9;
  if (v19 <= v18)
    v19 = v18;
  if (v19 <= 2)
    v20 = 2;
  else
    v20 = v19;
  v21 = v20 + ((v14 + v10 + ((v8 + 16) & ~(unint64_t)v8)) & ~v14);
  if (v21 + 1 > (v16 & 0xFFFFFFFFFFFFFFF8) + 16)
    v22 = v21 + 1;
  else
    v22 = (v16 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v22 <= 0x10)
    v23 = 16;
  else
    v23 = v22;
  v24 = v23 + 1;
  v25 = v23 + 1 + v14;
  if ((v25 & (unint64_t)~v14) + v23 + 1 <= 0x20)
    v26 = 32;
  else
    v26 = (v25 & ~v14) + v23 + 1;
  v27 = *(_QWORD *)(a3 + 16);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_DWORD *)(v28 + 80);
  if ((v14 | v29) == 7 && ((*(_DWORD *)(v12 + 80) | v8 | v29) & 0x100000) == 0)
  {
    v30 = v26 + v29 + 1;
    if ((v30 & ~(unint64_t)v29) + *(_QWORD *)(v28 + 64) <= 0x18)
    {
      v31 = *((unsigned __int8 *)a2 + v26);
      v109 = v10 + 7;
      v107 = v18;
      if (v31 >= 2)
      {
        if (v26 <= 3)
          v32 = v26;
        else
          v32 = 4;
        __asm { BR              X14 }
      }
      if (v31 != 1)
      {
        v36 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v36;
        *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
        *(_QWORD *)(a1 + 24) = a2[3];
        *(_BYTE *)(a1 + v26) = 0;
        v37 = v27;
        v38 = ~(unint64_t)v29;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v39 = v38;
        v40 = v37;
LABEL_60:
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v28 + 16))((v30 + a1) & v39, ((unint64_t)a2 + v30) & v39, v40);
        return a1;
      }
      v34 = *((unsigned __int8 *)a2 + v23);
      v103 = ~(unint64_t)v29;
      if (v34 >= 3)
      {
        if (v23 <= 3)
          v35 = v23;
        else
          v35 = 4;
        __asm { BR              X13 }
      }
      v101 = ~v9;
      v108 = ~v14;
      v96 = ~v13;
      v97 = v15;
      v102 = v20;
      v99 = v13 + 16;
      v100 = *(_QWORD *)(v11 - 8);
      v105 = v26;
      v106 = v27;
      v104 = v26 + v29 + 1;
      v98 = v11;
      v95 = v14 + v10;
      if (v34 == 2)
      {
        v52 = v23;
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v111);
        v53 = v52;
        *(_OWORD *)((a1 + v10 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v10 + 7) & 0xFFFFFFFFFFFFF8);
        *(_BYTE *)(a1 + v52) = 2;
      }
      else
      {
        if (v34 == 1)
        {
          v91 = *(_QWORD *)(v27 - 8);
          v93 = v23;
          v41 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v41;
          v42 = (uint64_t)a2 + v9;
          v43 = (a1 + v9 + 16) & v101;
          v44 = (v42 + 16) & v101;
          v45 = *(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16);
          swift_bridgeObjectRetain();
          v90 = v45;
          v45(v43, v44, v111);
          v46 = v102;
          v47 = v10 + v14;
          v48 = ~v14;
          v49 = (v43 + v10 + v14) & v108;
          v50 = (_WORD *)((v44 + v47) & v108);
          v28 = v91;
          switch(*((_BYTE *)v50 + v102))
          {
            case 0:
              v56 = 0;
              *(_WORD *)v49 = *v50;
              break;
            case 1:
              *(_BYTE *)v49 = *(_BYTE *)v50;
              v56 = 1;
              break;
            case 2:
              *(_QWORD *)v49 = *(_QWORD *)v50;
              *(_QWORD *)(v49 + 8) = *(_QWORD *)(((v44 + v47) & v108) + 8);
              v57 = (v99 + v49) & v96;
              v58 = ((unint64_t)v50 + v99) & v96;
              v92 = *(void (**)(uint64_t, unint64_t, uint64_t))(v100 + 16);
              swift_bridgeObjectRetain();
              v92(v57, v58, v98);
              v59 = (v97 + v57) & v101;
              v60 = (v97 + v58) & v101;
              v90(v59, v60, v111);
              v48 = v108;
              v46 = v102;
              *(_QWORD *)((v109 + v59) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v109 + v60) & 0xFFFFFFFFFFFFF8);
              *(_BYTE *)(v107 + v49) = *((_BYTE *)v50 + v107);
              v56 = 2;
              break;
            case 3:
              *(_QWORD *)v49 = *(_QWORD *)v50;
              *(_QWORD *)(v49 + 8) = *(_QWORD *)(((v44 + v47) & v108) + 8);
              v61 = (v99 + v49) & v96;
              v62 = ((unint64_t)v50 + v99) & v96;
              v63 = *(void (**)(uint64_t, unint64_t, uint64_t))(v100 + 16);
              swift_bridgeObjectRetain();
              v63(v61, v62, v98);
              v64 = (v97 + v61) & v101;
              v65 = (v97 + v62) & v101;
              v90(v64, v65, v111);
              v48 = v108;
              v46 = v102;
              *(_QWORD *)((v109 + v64) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v109 + v65) & 0xFFFFFFFFFFFFF8);
              v56 = 3;
              break;
            default:
              if (v102 <= 3)
                v51 = v102;
              else
                v51 = 4;
              __asm { BR              X12 }
              return result;
          }
          v53 = v93;
          *(_BYTE *)(v49 + v46) = v56;
          *(_BYTE *)(a1 + v93) = 1;
LABEL_47:
          v66 = (_QWORD *)((v25 + a1) & v48);
          v67 = (_QWORD *)(((unint64_t)a2 + v25) & v48);
          v68 = *((unsigned __int8 *)v67 + v53);
          if (v68 > 2)
          {
            memcpy((void *)((v25 + a1) & v48), (const void *)(((unint64_t)a2 + v25) & v48), v24);
          }
          else if (v68 == 2)
          {
            v77 = (v25 + a1) & v48;
            v78 = v53;
            (*(void (**)(uint64_t, _QWORD *, uint64_t))(v7 + 16))(v77, v67, v111);
            *(_OWORD *)(((unint64_t)v66 + v109) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v67 + v109) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v66 + v78) = 2;
          }
          else
          {
            if (v68 == 1)
            {
              v94 = v53;
              *v66 = *v67;
              *(_QWORD *)(((v25 + a1) & v48) + 8) = *(_QWORD *)((((unint64_t)a2 + v25) & v48) + 8);
              v69 = ((unint64_t)v66 + v110) & v101;
              v70 = ((unint64_t)v67 + v110) & v101;
              v71 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
              v72 = v48;
              swift_bridgeObjectRetain();
              v71(v69, v70, v111);
              v73 = v102;
              v74 = (v95 + v69) & v72;
              v75 = (v95 + v70) & v72;
              switch(*(_BYTE *)(v75 + v102))
              {
                case 0:
                  v81 = 0;
                  *(_WORD *)v74 = *(_WORD *)v75;
                  break;
                case 1:
                  *(_BYTE *)v74 = *(_BYTE *)v75;
                  v81 = 1;
                  break;
                case 2:
                  *(_QWORD *)v74 = *(_QWORD *)v75;
                  *(_QWORD *)(v74 + 8) = *(_QWORD *)(v75 + 8);
                  v82 = (v99 + v74) & v96;
                  v83 = (v99 + v75) & v96;
                  v84 = *(void (**)(unint64_t, unint64_t, uint64_t))(v100 + 16);
                  swift_bridgeObjectRetain();
                  v84(v82, v83, v98);
                  v85 = (v97 + v82) & v101;
                  v71(v85, (v97 + v83) & v101, v111);
                  v73 = v102;
                  *(_QWORD *)((v109 + v85) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v109 + ((v97 + v83) & v101)) & 0xFFFFFFFFFFFFF8);
                  *(_BYTE *)(v74 + v107) = *(_BYTE *)(v75 + v107);
                  v81 = 2;
                  break;
                case 3:
                  *(_QWORD *)v74 = *(_QWORD *)v75;
                  *(_QWORD *)(v74 + 8) = *(_QWORD *)(v75 + 8);
                  v86 = (v99 + v74) & v96;
                  v87 = (v99 + v75) & v96;
                  v88 = *(void (**)(unint64_t, unint64_t, uint64_t))(v100 + 16);
                  swift_bridgeObjectRetain();
                  v88(v86, v87, v98);
                  v89 = (v97 + v86) & v101;
                  v71(v89, (v97 + v87) & v101, v111);
                  v73 = v102;
                  *(_QWORD *)((v109 + v89) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v109 + ((v97 + v87) & v101)) & 0xFFFFFFFFFFFFF8);
                  v81 = 3;
                  break;
                default:
                  if (v102 <= 3)
                    v76 = v102;
                  else
                    v76 = 4;
                  __asm { BR              X12 }
                  return result;
              }
              v79 = v105;
              v40 = v106;
              v39 = v103;
              v30 = v104;
              *(_BYTE *)(v74 + v73) = v81;
              *((_BYTE *)v66 + v94) = 1;
              goto LABEL_59;
            }
            *v66 = *v67;
            *(_QWORD *)(((v25 + a1) & v48) + 8) = *(_QWORD *)((((unint64_t)a2 + v25) & v48) + 8);
            *((_BYTE *)v66 + v53) = 0;
            swift_bridgeObjectRetain();
          }
          v79 = v105;
          v40 = v106;
          v39 = v103;
          v30 = v104;
LABEL_59:
          *(_BYTE *)(a1 + v79) = 1;
          goto LABEL_60;
        }
        v54 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v54;
        *(_BYTE *)(a1 + v23) = 0;
        v55 = v23;
        swift_bridgeObjectRetain();
        v53 = v55;
      }
      v48 = v108;
      goto LABEL_47;
    }
  }
  v33 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v33 + (((v14 | v29) + 16) & ~(v14 | v29));
  swift_retain();
  return a1;
}

uint64_t sub_22128BC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v3 = sub_2212F5124();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v48 = v5 + 16;
  v49 = v3;
  v6 = *(_QWORD *)(v4 + 64);
  v7 = sub_2212F5058();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v5 | v9 | 7;
  v11 = (v6 + 7 + ((*(_QWORD *)(v8 + 64) + v5 + ((v9 + 16) & ~v9)) & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  v12 = v11 + 8;
  v13 = v11 + 9;
  if (v13 <= v12)
    v13 = v12;
  if (v13 <= 2)
    v14 = 2;
  else
    v14 = v13;
  v15 = v14 + ((v10 + v6 + ((v5 + 16) & ~v5)) & ~v10);
  if (v15 + 1 > ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v16 = v15 + 1;
  else
    v16 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v16 <= 0x10)
    v17 = 16;
  else
    v17 = v16;
  v18 = v17 + 1 + v10;
  if ((v18 & (unint64_t)~v10) + v17 + 1 <= 0x20)
    v19 = 32;
  else
    v19 = (v18 & ~v10) + v17 + 1;
  v20 = *(unsigned __int8 *)(a1 + v19);
  if (v20 >= 2)
  {
    if (v19 <= 3)
      v21 = v19;
    else
      v21 = 4;
    __asm { BR              X13 }
  }
  if (v20 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = a2;
    return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v24 + 16) - 8) + 8))((a1 + v19 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v24 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v24 + 16) - 8) + 80));
  }
  v22 = *(unsigned __int8 *)(a1 + v17);
  if (v22 >= 3)
  {
    if (v17 <= 3)
      v23 = v17;
    else
      v23 = 4;
    __asm { BR              X13 }
  }
  v46 = v7;
  v47 = ~v5;
  v25 = ~v10;
  v43 = ~v9;
  v44 = v9 + 16;
  v45 = *(_QWORD *)(v8 + 64) + v5;
  v41 = v10 + v6;
  v42 = *(_QWORD *)(v7 - 8);
  if (v22 == 2)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v49);
  }
  else
  {
    if (v22 == 1)
    {
      swift_bridgeObjectRelease();
      v26 = (a1 + v5 + 16) & v47;
      v40 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v40(v26, v49);
      v27 = v26 + v6 + v10;
      v28 = ~v10;
      v29 = v27 & v25;
      v30 = *(unsigned __int8 *)((v27 & v25) + v14);
      if (v30 >= 4)
      {
        if (v14 <= 3)
          v31 = v14;
        else
          v31 = 4;
        __asm { BR              X12 }
      }
      if (v30 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))((v44 + v29) & v43, v46);
        v40((v45 + ((v44 + v29) & v43)) & v47, v49);
      }
      goto LABEL_39;
    }
    swift_bridgeObjectRelease();
  }
  v28 = ~v10;
LABEL_39:
  v32 = (v18 + a1) & v28;
  v33 = *(unsigned __int8 *)(v32 + v17);
  v24 = a2;
  if (v33 <= 2)
  {
    if (v33 == 2)
    {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))((v18 + a1) & v28, v49);
    }
    else if (v33 == 1)
    {
      swift_bridgeObjectRelease();
      v34 = (v48 + v32) & v47;
      v35 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v35(v34, v49);
      v36 = (v41 + v34) & v28;
      v37 = *(unsigned __int8 *)(v36 + v14);
      if (v37 >= 4)
      {
        if (v14 <= 3)
          v38 = v14;
        else
          v38 = 4;
        __asm { BR              X12 }
      }
      if (v37 >= 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))((v44 + v36) & v43, v46);
        v35((v45 + ((v44 + v36) & v43)) & v47, v49);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v24 + 16) - 8) + 8))((a1 + v19 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v24 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v24 + 16) - 8) + 80));
}

uint64_t sub_22128C13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _WORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(uint64_t, unint64_t, uint64_t);
  uint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  unsigned int v54;
  unint64_t v55;
  unint64_t v56;
  void (*v57)(unint64_t, unint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t result;
  char v65;
  unint64_t v66;
  unint64_t v67;
  void (*v68)(unint64_t, unint64_t, uint64_t);
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  void (*v72)(unint64_t, unint64_t, uint64_t);
  uint64_t v73;
  void (*v74)(uint64_t, unint64_t, uint64_t);
  uint64_t v75;
  void (*v76)(uint64_t, unint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v92 = sub_2212F5124();
  v6 = *(_QWORD *)(v92 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v90 = v7 + 16;
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_2212F5058();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v7 | v11 | 7;
  v13 = v8 + 7;
  v14 = (v8 + 7 + ((*(_QWORD *)(v10 + 64) + v7 + ((v11 + 16) & ~v11)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;
  v16 = v14 + 9;
  v88 = v15;
  if (v16 <= v15)
    v16 = v15;
  if (v16 <= 2)
    v17 = 2;
  else
    v17 = v16;
  v18 = v17 + ((v12 + v8 + ((v7 + 16) & ~v7)) & ~v12);
  v91 = v8 + 7;
  if (v18 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
    v19 = v18 + 1;
  else
    v19 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= 0x10)
    v20 = 16;
  else
    v20 = v19;
  v21 = v20 + 1;
  v22 = v20 + 1 + v12;
  if ((v22 & (unint64_t)~v12) + v20 + 1 <= 0x20)
    v23 = 32;
  else
    v23 = (v22 & ~v12) + v20 + 1;
  v24 = *(unsigned __int8 *)(a2 + v23);
  if (v24 >= 2)
  {
    if (v23 <= 3)
      v25 = v23;
    else
      v25 = 4;
    __asm { BR              X13 }
  }
  if (v24 == 1)
  {
    v26 = *(unsigned __int8 *)(a2 + v20);
    if (v26 >= 3)
    {
      if (v20 <= 3)
        v27 = v20;
      else
        v27 = 4;
      __asm { BR              X13 }
    }
    v85 = ~v7;
    v86 = v17;
    v89 = ~v12;
    v80 = ~v11;
    v81 = *(_QWORD *)(v10 + 64) + v7;
    v83 = v11 + 16;
    v84 = *(_QWORD *)(v9 - 8);
    v87 = a3;
    v82 = v9;
    v79 = v12 + v8;
    if (v26 == 2)
    {
      v40 = v20;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v92);
      *(_OWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      *(_BYTE *)(a1 + v40) = 2;
    }
    else
    {
      if (v26 == 1)
      {
        v75 = v6;
        v77 = v20;
        v29 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v29;
        v30 = a2 + v7;
        v31 = (a1 + v7 + 16) & v85;
        v32 = (v30 + 16) & v85;
        v33 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16);
        swift_bridgeObjectRetain();
        v74 = v33;
        v33(v31, v32, v92);
        v34 = v86;
        v35 = v8 + v12;
        v36 = ~v12;
        v37 = (v31 + v8 + v12) & v89;
        v38 = (_WORD *)((v32 + v35) & v89);
        v6 = v75;
        switch(*((_BYTE *)v38 + v86))
        {
          case 0:
            v42 = 0;
            *(_WORD *)v37 = *v38;
            break;
          case 1:
            *(_BYTE *)v37 = *(_BYTE *)v38;
            v42 = 1;
            break;
          case 2:
            *(_QWORD *)v37 = *(_QWORD *)v38;
            *(_QWORD *)(v37 + 8) = *(_QWORD *)(((v32 + v35) & v89) + 8);
            v43 = (v83 + v37) & v80;
            v44 = ((unint64_t)v38 + v83) & v80;
            v76 = *(void (**)(uint64_t, unint64_t, uint64_t))(v84 + 16);
            swift_bridgeObjectRetain();
            v76(v43, v44, v82);
            v45 = (v81 + v43) & v85;
            v46 = (v81 + v44) & v85;
            v74(v45, v46, v92);
            v34 = v86;
            *(_QWORD *)((v91 + v45) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v91 + v46) & 0xFFFFFFFFFFFFF8);
            v36 = v89;
            *(_BYTE *)(v88 + v37) = *((_BYTE *)v38 + v88);
            v42 = 2;
            break;
          case 3:
            *(_QWORD *)v37 = *(_QWORD *)v38;
            *(_QWORD *)(v37 + 8) = *(_QWORD *)(((v32 + v35) & v89) + 8);
            v47 = (v83 + v37) & v80;
            v48 = ((unint64_t)v38 + v83) & v80;
            v49 = *(void (**)(uint64_t, unint64_t, uint64_t))(v84 + 16);
            swift_bridgeObjectRetain();
            v49(v47, v48, v82);
            v50 = (v81 + v47) & v85;
            v51 = (v81 + v48) & v85;
            v74(v50, v51, v92);
            v36 = v89;
            v34 = v86;
            *(_QWORD *)((v91 + v50) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v91 + v51) & 0xFFFFFFFFFFFFF8);
            v42 = 3;
            break;
          default:
            if (v86 <= 3)
              v39 = v86;
            else
              v39 = 4;
            __asm { BR              X12 }
            return result;
        }
        v40 = v77;
        *(_BYTE *)(v37 + v34) = v42;
        *(_BYTE *)(a1 + v77) = 1;
LABEL_43:
        v52 = (_QWORD *)((v22 + a1) & v36);
        v53 = (_QWORD *)((v22 + a2) & v36);
        v54 = *((unsigned __int8 *)v53 + v40);
        if (v54 > 2)
        {
          memcpy((void *)((v22 + a1) & v36), (const void *)((v22 + a2) & v36), v21);
        }
        else if (v54 == 2)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))((v22 + a1) & v36, (v22 + a2) & v36, v92);
          *(_OWORD *)(((unint64_t)v52 + v91) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v53 + v91) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v52 + v40) = 2;
        }
        else
        {
          if (v54 == 1)
          {
            v78 = v40;
            *v52 = *v53;
            *(_QWORD *)(((v22 + a1) & v36) + 8) = *(_QWORD *)(((v22 + a2) & v36) + 8);
            v55 = ((unint64_t)v52 + v90) & v85;
            v56 = ((unint64_t)v53 + v90) & v85;
            v57 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
            v58 = v36;
            swift_bridgeObjectRetain();
            v57(v55, v56, v92);
            v59 = v86;
            v60 = (v79 + v55) & v58;
            v61 = (v79 + v56) & v58;
            switch(*(_BYTE *)(v61 + v86))
            {
              case 0:
                v65 = 0;
                *(_WORD *)v60 = *(_WORD *)v61;
                break;
              case 1:
                *(_BYTE *)v60 = *(_BYTE *)v61;
                v65 = 1;
                break;
              case 2:
                *(_QWORD *)v60 = *(_QWORD *)v61;
                *(_QWORD *)(v60 + 8) = *(_QWORD *)(v61 + 8);
                v66 = (v83 + v60) & v80;
                v67 = (v83 + v61) & v80;
                v68 = *(void (**)(unint64_t, unint64_t, uint64_t))(v84 + 16);
                swift_bridgeObjectRetain();
                v68(v66, v67, v82);
                v69 = (v81 + v66) & v85;
                v57(v69, (v81 + v67) & v85, v92);
                v59 = v86;
                *(_QWORD *)((v91 + v69) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v91 + ((v81 + v67) & v85)) & 0xFFFFFFFFFFFFF8);
                *(_BYTE *)(v60 + v88) = *(_BYTE *)(v61 + v88);
                v65 = 2;
                break;
              case 3:
                *(_QWORD *)v60 = *(_QWORD *)v61;
                *(_QWORD *)(v60 + 8) = *(_QWORD *)(v61 + 8);
                v70 = (v83 + v60) & v80;
                v71 = (v83 + v61) & v80;
                v72 = *(void (**)(unint64_t, unint64_t, uint64_t))(v84 + 16);
                swift_bridgeObjectRetain();
                v72(v70, v71, v82);
                v73 = (v81 + v70) & v85;
                v57(v73, (v81 + v71) & v85, v92);
                v59 = v86;
                *(_QWORD *)((v91 + v73) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v91 + ((v81 + v71) & v85)) & 0xFFFFFFFFFFFFF8);
                v65 = 3;
                break;
              default:
                if (v86 <= 3)
                  v62 = v86;
                else
                  v62 = 4;
                __asm { BR              X12 }
                return result;
            }
            a3 = v87;
            *(_BYTE *)(v60 + v59) = v65;
            *((_BYTE *)v52 + v78) = 1;
            goto LABEL_55;
          }
          *v52 = *v53;
          *(_QWORD *)(((v22 + a1) & v36) + 8) = *(_QWORD *)(((v22 + a2) & v36) + 8);
          *((_BYTE *)v52 + v40) = 0;
          swift_bridgeObjectRetain();
        }
        a3 = v87;
LABEL_55:
        *(_BYTE *)(a1 + v23) = 1;
        goto LABEL_56;
      }
      v41 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v41;
      *(_BYTE *)(a1 + v20) = 0;
      v40 = v20;
      swift_bridgeObjectRetain();
    }
    v36 = v89;
    goto LABEL_43;
  }
  v28 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v28;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + v23) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_56:
  v63 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v63 + 16))((v23 + *(unsigned __int8 *)(v63 + 80) + 1 + a1) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80), (v23 + *(unsigned __int8 *)(v63 + 80) + 1 + a2) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
  return a1;
}

uint64_t sub_22128C990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, unint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _WORD *v46;
  unint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void (*v57)(uint64_t, unint64_t, uint64_t);
  uint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  unsigned int v62;
  unint64_t v63;
  unint64_t v64;
  void (*v65)(unint64_t, unint64_t, uint64_t);
  _WORD *v66;
  _WORD *v67;
  unint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t result;
  void (*v96)(uint64_t, unint64_t, uint64_t);
  void (*v97)(uint64_t, uint64_t);
  void (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  void (*v100)(uint64_t, unint64_t, uint64_t);
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(unint64_t, unint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(unint64_t, unint64_t, uint64_t);
  void (*v117)(unint64_t, unint64_t, uint64_t);

  v3 = a3;
  if (a1 != a2)
  {
    v114 = sub_2212F5124();
    v6 = *(_QWORD *)(v114 - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    v102 = v7 + 16;
    v8 = *(_QWORD *)(v6 + 64);
    v9 = sub_2212F5058();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v12 = v7 | v11 | 7;
    v103 = v12 + v8;
    v106 = v11 + 16;
    v107 = v10;
    v109 = *(_QWORD *)(v10 + 64) + v7;
    v110 = v9;
    v13 = v8 + 7;
    v14 = (v8 + 7 + ((v109 + ((v11 + 16) & ~v11)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    v15 = v14 + 8;
    v16 = v14 + 9;
    v101 = v15;
    if (v16 <= v15)
      v16 = v15;
    if (v16 <= 2)
      v16 = 2;
    v111 = v16;
    v17 = v16 + ((v12 + v8 + ((v7 + 16) & ~v7)) & ~v12);
    v104 = v8 + 7;
    if (v17 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
      v18 = v17 + 1;
    else
      v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v18 <= 0x10)
      v19 = 16;
    else
      v19 = v18;
    v20 = v19 + 1 + v12;
    if ((v20 & (unint64_t)~v12) + v19 + 1 <= 0x20)
      v21 = 32;
    else
      v21 = (v20 & ~v12) + v19 + 1;
    v22 = *(unsigned __int8 *)(a1 + v21);
    if (v22 >= 2)
    {
      if (v21 <= 3)
        v23 = v21;
      else
        v23 = 4;
      __asm { BR              X13 }
    }
    v112 = ~v7;
    v115 = ~v12;
    v105 = ~v11;
    if (v22 == 1)
    {
      v24 = *(unsigned __int8 *)(a1 + v19);
      if (v24 >= 3)
      {
        if (v19 <= 3)
          v25 = v19;
        else
          v25 = 4;
        __asm { BR              X12 }
      }
      if (v24 == 2)
      {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v114);
      }
      else if (v24 == 1)
      {
        swift_bridgeObjectRelease();
        v97 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v97((a1 + v7 + 16) & v112, v114);
        v26 = (((a1 + v7 + 16) & v112) + v8 + v12) & v115;
        v27 = *(unsigned __int8 *)(v26 + v111);
        if (v27 >= 4)
        {
          if (v111 <= 3)
            v28 = v111;
          else
            v28 = 4;
          __asm { BR              X12 }
        }
        if (v27 >= 2)
        {
          swift_bridgeObjectRelease();
          v29 = (v106 + v26) & v105;
          (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v29, v110);
          v97((v109 + v29) & v112, v114);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v30 = (v20 + a1) & v115;
      v31 = *(unsigned __int8 *)(v30 + v19);
      if (v31 > 2)
      {
LABEL_51:
        v37 = *(unsigned __int8 *)(a2 + v21);
        if (v37 >= 2)
        {
          if (v21 <= 3)
            v38 = v21;
          else
            v38 = 4;
          __asm { BR              X12 }
        }
        if (v37 != 1)
        {
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_BYTE *)(a1 + v21) = 0;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v3 = a3;
          goto LABEL_98;
        }
        v39 = *(unsigned __int8 *)(a2 + v19);
        if (v39 >= 3)
        {
          if (v19 <= 3)
            v40 = v19;
          else
            v40 = 4;
          __asm { BR              X12 }
        }
        if (v39 == 2)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v114);
          *(_OWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
          v49 = 2;
        }
        else
        {
          if (v39 != 1)
          {
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            *(_BYTE *)(a1 + v19) = 0;
            swift_bridgeObjectRetain();
            goto LABEL_79;
          }
          v99 = v19 + 1 + v12;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          v41 = (a1 + v7 + 16) & v112;
          v42 = (a2 + v7 + 16) & v112;
          v43 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16);
          swift_bridgeObjectRetain();
          v96 = v43;
          v43(v41, v42, v114);
          v44 = v8 + v12;
          v45 = (v41 + v8 + v12) & v115;
          v46 = (_WORD *)((v42 + v44) & v115);
          v47 = v111;
          v20 = v99;
          switch(*((_BYTE *)v46 + v111))
          {
            case 0:
              v50 = 0;
              *(_WORD *)v45 = *v46;
              break;
            case 1:
              *(_BYTE *)v45 = *(_BYTE *)v46;
              v50 = 1;
              break;
            case 2:
              *(_QWORD *)v45 = *(_QWORD *)v46;
              *(_QWORD *)(v45 + 8) = *(_QWORD *)(((v42 + v44) & v115) + 8);
              v51 = (v106 + v45) & v105;
              v52 = ((unint64_t)v46 + v106) & v105;
              v100 = *(void (**)(uint64_t, unint64_t, uint64_t))(v107 + 16);
              swift_bridgeObjectRetain();
              v100(v51, v52, v110);
              v53 = (v109 + v51) & v112;
              v54 = (v109 + v52) & v112;
              v96(v53, v54, v114);
              v47 = v111;
              *(_QWORD *)((v104 + v53) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v104 + v54) & 0xFFFFFFFFFFFFF8);
              *(_BYTE *)(v101 + v45) = *((_BYTE *)v46 + v101);
              v50 = 2;
              break;
            case 3:
              *(_QWORD *)v45 = *(_QWORD *)v46;
              *(_QWORD *)(v45 + 8) = *(_QWORD *)(((v42 + v44) & v115) + 8);
              v55 = (v106 + v45) & v105;
              v56 = ((unint64_t)v46 + v106) & v105;
              v57 = *(void (**)(uint64_t, unint64_t, uint64_t))(v107 + 16);
              swift_bridgeObjectRetain();
              v57(v55, v56, v110);
              v58 = (v109 + v55) & v112;
              v59 = (v109 + v56) & v112;
              v96(v58, v59, v114);
              v47 = v111;
              *(_QWORD *)((v104 + v58) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v104 + v59) & 0xFFFFFFFFFFFFF8);
              v50 = 3;
              break;
            default:
              if (v111 <= 3)
                v48 = v111;
              else
                v48 = 4;
              __asm { BR              X12 }
              return result;
          }
          *(_BYTE *)(v45 + v47) = v50;
          v49 = 1;
        }
        *(_BYTE *)(a1 + v19) = v49;
LABEL_79:
        v60 = (_QWORD *)((v20 + a1) & v115);
        v61 = (_QWORD *)((v20 + a2) & v115);
        v62 = *((unsigned __int8 *)v61 + v19);
        if (v62 > 2)
        {
          memcpy((void *)((v20 + a1) & v115), (const void *)((v20 + a2) & v115), v19 + 1);
        }
        else
        {
          if (v62 == 2)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))((v20 + a1) & v115, (v20 + a2) & v115, v114);
            *(_OWORD *)(((unint64_t)v60 + v104) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v61 + v104) & 0xFFFFFFFFFFFFF8);
            v70 = 2;
LABEL_96:
            *((_BYTE *)v60 + v19) = v70;
            goto LABEL_97;
          }
          if (v62 == 1)
          {
            *v60 = *v61;
            *(_QWORD *)(((v20 + a1) & v115) + 8) = *(_QWORD *)(((v20 + a2) & v115) + 8);
            v63 = ((unint64_t)v60 + v102) & v112;
            v64 = ((unint64_t)v61 + v102) & v112;
            v65 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
            swift_bridgeObjectRetain();
            v65(v63, v64, v114);
            v66 = (_WORD *)((v103 + v63) & v115);
            v67 = (_WORD *)((v103 + v64) & v115);
            v68 = v111;
            switch(*((_BYTE *)v67 + v111))
            {
              case 0:
                v71 = 0;
                *v66 = *v67;
                break;
              case 1:
                *(_BYTE *)v66 = *(_BYTE *)v67;
                v71 = 1;
                break;
              case 2:
                *(_QWORD *)v66 = *(_QWORD *)v67;
                *(_QWORD *)(((v103 + v63) & v115) + 8) = *(_QWORD *)(((v103 + v64) & v115) + 8);
                v72 = ((unint64_t)v66 + v106) & v105;
                v108 = *(void (**)(unint64_t, unint64_t, uint64_t))(v107 + 16);
                swift_bridgeObjectRetain();
                v116 = v65;
                v73 = ((unint64_t)v67 + v106) & v105;
                v108(v72, v73, v110);
                v74 = (v109 + v72) & v112;
                v116(v74, (v109 + v73) & v112, v114);
                v68 = v111;
                *(_QWORD *)((v104 + v74) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v104 + ((v109 + v73) & v112)) & 0xFFFFFFFFFFFFF8);
                *((_BYTE *)v66 + v101) = *((_BYTE *)v67 + v101);
                v71 = 2;
                break;
              case 3:
                *(_QWORD *)v66 = *(_QWORD *)v67;
                *(_QWORD *)(((v103 + v63) & v115) + 8) = *(_QWORD *)(((v103 + v64) & v115) + 8);
                v75 = ((unint64_t)v66 + v106) & v105;
                v76 = ((unint64_t)v67 + v106) & v105;
                v117 = *(void (**)(unint64_t, unint64_t, uint64_t))(v107 + 16);
                swift_bridgeObjectRetain();
                v117(v75, v76, v110);
                v77 = (v109 + v75) & v112;
                v65(v77, (v109 + v76) & v112, v114);
                v68 = v111;
                *(_QWORD *)((v104 + v77) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v104 + ((v109 + v76) & v112)) & 0xFFFFFFFFFFFFF8);
                v71 = 3;
                break;
              default:
                if (v111 <= 3)
                  v69 = v111;
                else
                  v69 = 4;
                __asm { BR              X12 }
                return result;
            }
            *((_BYTE *)v66 + v68) = v71;
            v70 = 1;
            goto LABEL_96;
          }
          *v60 = *v61;
          *(_QWORD *)(((v20 + a1) & v115) + 8) = *(_QWORD *)(((v20 + a2) & v115) + 8);
          *((_BYTE *)v60 + v19) = 0;
          swift_bridgeObjectRetain();
        }
LABEL_97:
        v3 = a3;
        *(_BYTE *)(a1 + v21) = 1;
        goto LABEL_98;
      }
      if (v31 == 2)
      {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))((v20 + a1) & v115, v114);
        goto LABEL_51;
      }
      if (v31 == 1)
      {
        swift_bridgeObjectRelease();
        v32 = (v102 + v30) & v112;
        v98 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v98(v32, v114);
        v33 = (v103 + v32) & v115;
        v34 = *(unsigned __int8 *)(v33 + v111);
        if (v34 >= 4)
        {
          if (v111 <= 3)
            v35 = v111;
          else
            v35 = 4;
          __asm { BR              X12 }
        }
        if (v34 >= 2)
        {
          swift_bridgeObjectRelease();
          v36 = (v106 + v33) & v105;
          (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v36, v110);
          v98((v109 + v36) & v112, v114);
        }
        goto LABEL_51;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
LABEL_98:
  v78 = sub_2212F5124();
  v79 = sub_2212F5058();
  v80 = *(_QWORD *)(v78 - 8);
  v81 = *(unsigned __int8 *)(v80 + 80);
  v82 = *(_QWORD *)(v80 + 64);
  v83 = *(_QWORD *)(v79 - 8);
  v84 = *(unsigned __int8 *)(v83 + 80);
  v85 = v81 | v84 | 7;
  v86 = (((v81 + 16) & ~v81) + v82 + v85) & ~v85;
  v87 = v82 + 7;
  v88 = (v87 + ((*(_QWORD *)(v83 + 64) + v81 + ((v84 + 16) & ~v84)) & ~v81)) & 0xFFFFFFFFFFFFFFF8;
  v89 = v88 + 9;
  v90 = v88 + 8;
  if (v89 > v90)
    v90 = v89;
  if (v90 <= 2)
    v90 = 2;
  v91 = v90 + v86;
  v92 = (v87 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v91 + 1 > v92)
    v92 = v91 + 1;
  if (v92 <= 0x10)
    v92 = 16;
  v93 = ((v92 + 1 + v85) & ~v85) + v92 + 1;
  if (v93 <= 0x20)
    v93 = 32;
  v94 = *(_QWORD *)(*(_QWORD *)(v3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v94 + 24))((v93 + *(unsigned __int8 *)(v94 + 80) + 1 + a1) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80), (v93 + *(unsigned __int8 *)(v94 + 80) + 1 + a2) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80));
  return a1;
}

_OWORD *sub_22128D634(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  size_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _WORD *v36;
  _WORD *v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  size_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  unsigned int v54;
  unint64_t v55;
  void (*v56)(unint64_t, unint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _WORD *v60;
  _WORD *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *result;
  char v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _OWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v94 = sub_2212F5124();
  v6 = *(_QWORD *)(v94 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v92 = v7 + 16;
  v93 = v6;
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_2212F5058();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v7 | v11 | 7;
  v13 = v11 + 16;
  v14 = *(_QWORD *)(v10 + 64);
  v15 = v8 + 7;
  v16 = (v8 + 7 + ((v14 + v7 + ((v11 + 16) & ~v11)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v17 = v16 + 8;
  v18 = v16 + 9;
  if (v18 <= v17)
    v18 = v17;
  if (v18 <= 2)
    v19 = 2;
  else
    v19 = v18;
  v20 = v19 + ((v12 + v8 + ((v7 + 16) & ~v7)) & ~v12);
  if (v20 + 1 > (v15 & 0xFFFFFFFFFFFFFFF8) + 16)
    v21 = v20 + 1;
  else
    v21 = (v15 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v21 <= 0x10)
    v22 = 16;
  else
    v22 = v21;
  v23 = v22 + 1;
  v24 = v22 + 1 + v12;
  if ((v24 & (unint64_t)~v12) + v22 + 1 <= 0x20)
    v25 = 32;
  else
    v25 = (v24 & ~v12) + v22 + 1;
  v26 = *((unsigned __int8 *)a2 + v25);
  if (v26 >= 2)
  {
    if (v25 <= 3)
      v27 = v25;
    else
      v27 = 4;
    __asm { BR              X13 }
  }
  if (v26 == 1)
  {
    v28 = *((unsigned __int8 *)a2 + v22);
    if (v28 >= 3)
    {
      if (v22 <= 3)
        v29 = v22;
      else
        v29 = 4;
      __asm { BR              X13 }
    }
    v89 = *(_QWORD *)(v9 - 8);
    v90 = ~v7;
    v31 = ~v12;
    v86 = ~v11;
    v87 = v14 + v7;
    v91 = a3;
    v88 = v9;
    v85 = v12 + v8;
    if (v28 == 2)
    {
      v39 = a2;
      v40 = v22;
      v41 = v19;
      v81 = a2;
      v42 = v25;
      v43 = v22 + 1;
      v44 = v22 + 1 + v12;
      v45 = v11 + 16;
      v46 = v17;
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v93 + 32))(a1, v39, v94);
      v31 = ~v12;
      v17 = v46;
      v13 = v45;
      v24 = v44;
      v23 = v43;
      v25 = v42;
      a2 = v81;
      v15 = v8 + 7;
      v19 = v41;
      v22 = v40;
      *(_OWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v81 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)a1 + v40) = 2;
    }
    else if (v28 == 1)
    {
      v78 = v17;
      v80 = v8 + 7;
      v83 = v22;
      *a1 = *a2;
      v32 = (char *)a2 + v7;
      v33 = ((unint64_t)a1 + v7 + 16) & v90;
      v34 = (unint64_t)(v32 + 16) & v90;
      v75 = ~v12;
      v76 = v19;
      v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 32);
      v74(v33, v34, v94);
      v31 = ~v12;
      v19 = v76;
      v35 = v8 + v12;
      v36 = (_WORD *)((v33 + v8 + v12) & ~v12);
      v37 = (_WORD *)((v34 + v35) & ~v12);
      switch(*((_BYTE *)v37 + v76))
      {
        case 0:
          v47 = 0;
          *v36 = *v37;
          goto LABEL_39;
        case 1:
          *(_BYTE *)v36 = *(_BYTE *)v37;
          v47 = 1;
LABEL_39:
          v15 = v80;
          v22 = v83;
          goto LABEL_42;
        case 2:
          *(_OWORD *)v36 = *(_OWORD *)v37;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v89 + 32))(((unint64_t)v36 + v13) & v86, ((unint64_t)v37 + v13) & v86, v88);
          v48 = (v87 + (((unint64_t)v36 + v13) & v86)) & v90;
          v49 = (v87 + (((unint64_t)v37 + v13) & v86)) & v90;
          v74(v48, v49, v94);
          v31 = v75;
          v19 = v76;
          v17 = v78;
          v15 = v80;
          *(_QWORD *)((v80 + v48) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v80 + v49) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v36 + v78) = *((_BYTE *)v37 + v78);
          v47 = 2;
          v22 = v83;
          goto LABEL_43;
        case 3:
          *(_OWORD *)v36 = *(_OWORD *)v37;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v89 + 32))(((unint64_t)v36 + v13) & v86, ((unint64_t)v37 + v13) & v86, v88);
          v50 = (v87 + (((unint64_t)v36 + v13) & v86)) & v90;
          v51 = (v87 + (((unint64_t)v37 + v13) & v86)) & v90;
          v74(v50, v51, v94);
          v31 = v75;
          v19 = v76;
          v15 = v80;
          v22 = v83;
          *(_QWORD *)((v80 + v50) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v80 + v51) & 0xFFFFFFFFFFFFF8);
          v47 = 3;
LABEL_42:
          v17 = v78;
LABEL_43:
          *((_BYTE *)v36 + v19) = v47;
          *((_BYTE *)a1 + v22) = 1;
          break;
        default:
          if (v76 <= 3)
            v38 = v76;
          else
            v38 = 4;
          __asm { BR              X12 }
          return result;
      }
    }
    else
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v22) = 0;
    }
    v52 = (_OWORD *)(((unint64_t)a1 + v24) & v31);
    v53 = (_OWORD *)(((unint64_t)a2 + v24) & v31);
    v54 = *((unsigned __int8 *)v53 + v22);
    if (v54 > 2)
    {
      memcpy((void *)(((unint64_t)a1 + v24) & v31), (const void *)(((unint64_t)a2 + v24) & v31), v23);
    }
    else if (v54 == 2)
    {
      v63 = ((unint64_t)a1 + v24) & v31;
      v64 = ((unint64_t)a2 + v24) & v31;
      v65 = v22;
      v66 = v15;
      (*(void (**)(unint64_t, unint64_t, uint64_t, unint64_t))(v93 + 32))(v63, v64, v94, v17);
      *(_OWORD *)(((unint64_t)v52 + v66) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v53 + v66) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v52 + v65) = 2;
    }
    else
    {
      if (v54 == 1)
      {
        v77 = v13;
        v79 = v17;
        v82 = v15;
        v84 = v22;
        *v52 = *v53;
        v55 = ((unint64_t)v53 + v92) & v90;
        v56 = *(void (**)(unint64_t, unint64_t, uint64_t))(v93 + 32);
        v57 = v19;
        v58 = v31;
        v56(((unint64_t)v52 + v92) & v90, v55, v94);
        v59 = v57;
        v60 = (_WORD *)((v85 + (((unint64_t)v52 + v92) & v90)) & v58);
        v61 = (_WORD *)((v85 + v55) & v58);
        switch(*((_BYTE *)v61 + v57))
        {
          case 0:
            v69 = 0;
            *v60 = *v61;
            break;
          case 1:
            *(_BYTE *)v60 = *(_BYTE *)v61;
            v69 = 1;
            break;
          case 2:
            *(_OWORD *)v60 = *(_OWORD *)v61;
            (*(void (**)(unint64_t))(v89 + 32))(((unint64_t)v60 + v77) & v86);
            v70 = (v87 + (((unint64_t)v60 + v77) & v86)) & v90;
            v71 = (v87 + (((unint64_t)v61 + v77) & v86)) & v90;
            v56(v70, v71, v94);
            v59 = v57;
            *(_QWORD *)((v82 + v70) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v82 + v71) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v60 + v79) = *((_BYTE *)v61 + v79);
            v69 = 2;
            break;
          case 3:
            *(_OWORD *)v60 = *(_OWORD *)v61;
            v72 = ((unint64_t)v61 + v77) & v86;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v89 + 32))(((unint64_t)v60 + v77) & v86, v72, v88);
            v73 = (v87 + (((unint64_t)v60 + v77) & v86)) & v90;
            v56(v73, (v87 + v72) & v90, v94);
            v59 = v57;
            *(_QWORD *)((v82 + v73) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v82 + ((v87 + v72) & v90)) & 0xFFFFFFFFFFFFF8);
            v69 = 3;
            break;
          default:
            if (v57 <= 3)
              v62 = v57;
            else
              v62 = 4;
            __asm { BR              X12 }
            return result;
        }
        a3 = v91;
        *((_BYTE *)v60 + v59) = v69;
        *((_BYTE *)v52 + v84) = 1;
        goto LABEL_56;
      }
      *v52 = *v53;
      *((_BYTE *)v52 + v22) = 0;
    }
    a3 = v91;
LABEL_56:
    *((_BYTE *)a1 + v25) = 1;
    goto LABEL_57;
  }
  v30 = a2[1];
  *a1 = *a2;
  a1[1] = v30;
  *((_BYTE *)a1 + v25) = 0;
LABEL_57:
  v67 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v67 + 32))(((unint64_t)a1 + v25 + *(unsigned __int8 *)(v67 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80), ((unint64_t)a2 + v25 + *(unsigned __int8 *)(v67 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
  return a1;
}

_OWORD *sub_22128DE5C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unsigned int v31;
  unint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _WORD *v46;
  _WORD *v47;
  unint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _OWORD *v56;
  _OWORD *v57;
  unsigned int v58;
  unint64_t v59;
  void (*v60)(unint64_t, unint64_t, uint64_t);
  _WORD *v61;
  _WORD *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  _OWORD *result;
  char v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  void (*v88)(unint64_t, uint64_t);
  void (*v89)(unint64_t, uint64_t);
  void (*v90)(uint64_t, uint64_t, uint64_t);
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;

  v3 = a3;
  if (a1 != a2)
  {
    v103 = sub_2212F5124();
    v6 = *(_QWORD *)(v103 - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    v93 = v7 + 16;
    v8 = *(_QWORD *)(v6 + 64);
    v9 = sub_2212F5058();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v12 = v7 | v11 | 7;
    v92 = v12 + v8;
    v96 = v11 + 16;
    v97 = v10;
    v98 = *(_QWORD *)(v10 + 64) + v7;
    v99 = v9;
    v13 = v8 + 7;
    v14 = (v8 + 7 + ((v98 + ((v11 + 16) & ~v11)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
    v15 = v14 + 8;
    v16 = v14 + 9;
    v91 = v15;
    if (v16 <= v15)
      v16 = v15;
    if (v16 <= 2)
      v16 = 2;
    v100 = v16;
    v17 = v16 + ((v12 + v8 + ((v7 + 16) & ~v7)) & ~v12);
    v94 = v8 + 7;
    if (v17 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
      v18 = v17 + 1;
    else
      v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v18 <= 0x10)
      v19 = 16;
    else
      v19 = v18;
    v20 = v19 + 1 + v12;
    if ((v20 & (unint64_t)~v12) + v19 + 1 <= 0x20)
      v21 = 32;
    else
      v21 = (v20 & ~v12) + v19 + 1;
    v22 = *((unsigned __int8 *)a1 + v21);
    if (v22 >= 2)
    {
      if (v21 <= 3)
        v23 = v21;
      else
        v23 = 4;
      __asm { BR              X13 }
    }
    v101 = ~v7;
    v104 = ~v12;
    v95 = ~v11;
    if (v22 == 1)
    {
      v24 = *((unsigned __int8 *)a1 + v19);
      if (v24 >= 3)
      {
        if (v19 <= 3)
          v25 = v19;
        else
          v25 = 4;
        __asm { BR              X12 }
      }
      if (v24 == 2)
      {
        (*(void (**)(_OWORD *, uint64_t))(v6 + 8))(a1, v103);
      }
      else if (v24 == 1)
      {
        swift_bridgeObjectRelease();
        v88 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
        v88(((unint64_t)a1 + v7 + 16) & v101, v103);
        v26 = ((((unint64_t)a1 + v7 + 16) & v101) + v8 + v12) & v104;
        v27 = *(unsigned __int8 *)(v26 + v100);
        if (v27 >= 4)
        {
          if (v100 <= 3)
            v28 = v100;
          else
            v28 = 4;
          __asm { BR              X12 }
        }
        if (v27 >= 2)
        {
          swift_bridgeObjectRelease();
          v29 = (v96 + v26) & v95;
          (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v29, v99);
          v88((v98 + v29) & v101, v103);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v30 = ((unint64_t)a1 + v20) & v104;
      v31 = *(unsigned __int8 *)(v30 + v19);
      if (v31 > 2)
      {
LABEL_51:
        v37 = *((unsigned __int8 *)a2 + v21);
        if (v37 >= 2)
        {
          if (v21 <= 3)
            v38 = v21;
          else
            v38 = 4;
          __asm { BR              X12 }
        }
        if (v37 != 1)
        {
          v41 = 0;
          v42 = a2[1];
          *a1 = *a2;
          a1[1] = v42;
          goto LABEL_91;
        }
        v39 = *((unsigned __int8 *)a2 + v19);
        if (v39 >= 3)
        {
          if (v19 <= 3)
            v40 = v19;
          else
            v40 = 4;
          __asm { BR              X12 }
        }
        if (v39 == 2)
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v103);
          *(_OWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFF8);
          v50 = 2;
        }
        else
        {
          if (v39 != 1)
          {
            *a1 = *a2;
            *((_BYTE *)a1 + v19) = 0;
LABEL_79:
            v56 = (_OWORD *)(((unint64_t)a1 + v20) & v104);
            v57 = (_OWORD *)(((unint64_t)a2 + v20) & v104);
            v58 = *((unsigned __int8 *)v57 + v19);
            if (v58 > 2)
            {
              memcpy((void *)(((unint64_t)a1 + v20) & v104), (const void *)(((unint64_t)a2 + v20) & v104), v19 + 1);
            }
            else if (v58 == 2)
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)a1 + v20) & v104, ((unint64_t)a2 + v20) & v104, v103);
              *(_OWORD *)(((unint64_t)v56 + v94) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v57 + v94) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v56 + v19) = 2;
            }
            else
            {
              if (v58 == 1)
              {
                *v56 = *v57;
                v59 = ((unint64_t)v57 + v93) & v101;
                v60 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
                v60(((unint64_t)v56 + v93) & v101, v59, v103);
                v61 = (_WORD *)((v92 + (((unint64_t)v56 + v93) & v101)) & v104);
                v62 = (_WORD *)((v92 + v59) & v104);
                v63 = v100;
                switch(*((_BYTE *)v62 + v100))
                {
                  case 0:
                    v83 = 0;
                    *v61 = *v62;
                    break;
                  case 1:
                    *(_BYTE *)v61 = *(_BYTE *)v62;
                    v83 = 1;
                    break;
                  case 2:
                    *(_OWORD *)v61 = *(_OWORD *)v62;
                    (*(void (**)(unint64_t))(v97 + 32))(((unint64_t)v61 + v96) & v95);
                    v84 = (v98 + (((unint64_t)v61 + v96) & v95)) & v101;
                    v85 = (v98 + (((unint64_t)v62 + v96) & v95)) & v101;
                    v60(v84, v85, v103);
                    v63 = v100;
                    *(_QWORD *)((v94 + v84) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v94 + v85) & 0xFFFFFFFFFFFFF8);
                    *((_BYTE *)v61 + v91) = *((_BYTE *)v62 + v91);
                    v83 = 2;
                    break;
                  case 3:
                    *(_OWORD *)v61 = *(_OWORD *)v62;
                    v86 = ((unint64_t)v62 + v96) & v95;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v97 + 32))(((unint64_t)v61 + v96) & v95, v86, v99);
                    v87 = (v98 + (((unint64_t)v61 + v96) & v95)) & v101;
                    v60(v87, (v98 + v86) & v101, v103);
                    v63 = v100;
                    *(_QWORD *)((v94 + v87) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v94 + ((v98 + v86) & v101)) & 0xFFFFFFFFFFFFF8);
                    v83 = 3;
                    break;
                  default:
                    if (v100 <= 3)
                      v64 = v100;
                    else
                      v64 = 4;
                    __asm { BR              X12 }
                    return result;
                }
                *((_BYTE *)v61 + v63) = v83;
                v41 = 1;
                *((_BYTE *)v56 + v19) = 1;
                goto LABEL_91;
              }
              *v56 = *v57;
              *((_BYTE *)v56 + v19) = 0;
            }
            v41 = 1;
LABEL_91:
            v3 = a3;
            *((_BYTE *)a1 + v21) = v41;
            goto LABEL_92;
          }
          *a1 = *a2;
          v43 = ((unint64_t)a1 + v7 + 16) & v101;
          v44 = ((unint64_t)a2 + v7 + 16) & v101;
          v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
          v90(v43, v44, v103);
          v45 = v8 + v12;
          v46 = (_WORD *)((v43 + v8 + v12) & v104);
          v47 = (_WORD *)((v44 + v45) & v104);
          v48 = v100;
          switch(*((_BYTE *)v47 + v100))
          {
            case 0:
              v51 = 0;
              *v46 = *v47;
              break;
            case 1:
              *(_BYTE *)v46 = *(_BYTE *)v47;
              v51 = 1;
              break;
            case 2:
              *(_OWORD *)v46 = *(_OWORD *)v47;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v97 + 32))(((unint64_t)v46 + v96) & v95, ((unint64_t)v47 + v96) & v95, v99);
              v52 = (v98 + (((unint64_t)v46 + v96) & v95)) & v101;
              v53 = (v98 + (((unint64_t)v47 + v96) & v95)) & v101;
              v90(v52, v53, v103);
              v48 = v100;
              *(_QWORD *)((v94 + v52) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v94 + v53) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v46 + v91) = *((_BYTE *)v47 + v91);
              v51 = 2;
              break;
            case 3:
              *(_OWORD *)v46 = *(_OWORD *)v47;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v97 + 32))(((unint64_t)v46 + v96) & v95, ((unint64_t)v47 + v96) & v95, v99);
              v54 = (v98 + (((unint64_t)v46 + v96) & v95)) & v101;
              v55 = (v98 + (((unint64_t)v47 + v96) & v95)) & v101;
              v90(v54, v55, v103);
              v48 = v100;
              *(_QWORD *)((v94 + v54) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v94 + v55) & 0xFFFFFFFFFFFFF8);
              v51 = 3;
              break;
            default:
              if (v100 <= 3)
                v49 = v100;
              else
                v49 = 4;
              __asm { BR              X12 }
              return result;
          }
          *((_BYTE *)v46 + v48) = v51;
          v50 = 1;
        }
        *((_BYTE *)a1 + v19) = v50;
        goto LABEL_79;
      }
      if (v31 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)a1 + v20) & v104, v103);
        goto LABEL_51;
      }
      if (v31 == 1)
      {
        swift_bridgeObjectRelease();
        v32 = (v93 + v30) & v101;
        v89 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
        v89(v32, v103);
        v33 = (v92 + v32) & v104;
        v34 = *(unsigned __int8 *)(v33 + v100);
        if (v34 >= 4)
        {
          if (v100 <= 3)
            v35 = v100;
          else
            v35 = 4;
          __asm { BR              X12 }
        }
        if (v34 >= 2)
        {
          swift_bridgeObjectRelease();
          v36 = (v96 + v33) & v95;
          (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v36, v99);
          v89((v98 + v36) & v101, v103);
        }
        goto LABEL_51;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
LABEL_92:
  v65 = sub_2212F5124();
  v66 = sub_2212F5058();
  v67 = *(_QWORD *)(v65 - 8);
  v68 = *(unsigned __int8 *)(v67 + 80);
  v69 = *(_QWORD *)(v67 + 64);
  v70 = *(_QWORD *)(v66 - 8);
  v71 = *(unsigned __int8 *)(v70 + 80);
  v72 = v68 | v71 | 7;
  v73 = (((v68 + 16) & ~v68) + v69 + v72) & ~v72;
  v74 = v69 + 7;
  v75 = (v74 + ((*(_QWORD *)(v70 + 64) + v68 + ((v71 + 16) & ~v71)) & ~v68)) & 0xFFFFFFFFFFFFFFF8;
  v76 = v75 + 9;
  v77 = v75 + 8;
  if (v76 > v77)
    v77 = v76;
  if (v77 <= 2)
    v77 = 2;
  v78 = v77 + v73;
  v79 = (v74 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v78 + 1 > v79)
    v79 = v78 + 1;
  if (v79 <= 0x10)
    v79 = 16;
  v80 = ((v79 + 1 + v72) & ~v72) + v79 + 1;
  if (v80 <= 0x20)
    v80 = 32;
  v81 = *(_QWORD *)(*(_QWORD *)(v3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v81 + 40))(((unint64_t)a1 + v80 + *(unsigned __int8 *)(v81 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80), ((unint64_t)a2 + v80 + *(unsigned __int8 *)(v81 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
  return a1;
}

uint64_t sub_22128EA4C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;

  v6 = *(_QWORD *)(sub_2212F5124() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(sub_2212F5058() - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 | v10 | 7;
  v12 = (v8 + 7 + ((*(_QWORD *)(v9 + 64) + v7 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;
  v14 = v12 + 9;
  if (v14 <= v13)
    v14 = v13;
  if (v14 <= 2)
    v14 = 2;
  v15 = v14 + ((((v7 + 16) & ~v7) + v8 + v11) & ~v11);
  if (v15 + 1 > ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v16 = v15 + 1;
  else
    v16 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v16 <= 0x10)
    v16 = 16;
  v17 = v16 + 1;
  v18 = (v16 + 1 + v11) & ~v11;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int *)(v20 + 84);
  if (v21 <= 0xFE)
    v22 = 254;
  else
    v22 = *(_DWORD *)(v20 + 84);
  v23 = v18 + v17;
  if (v23 <= 0x20)
    v23 = 32;
  if (!a2)
    return 0;
  v24 = *(unsigned __int8 *)(v20 + 80);
  v25 = v23 + v24 + 1;
  if (a2 <= v22)
    goto LABEL_35;
  v26 = (v25 & ~v24) + *(_QWORD *)(v20 + 64);
  v27 = 8 * v26;
  if (v26 <= 3)
  {
    v30 = ((a2 - v22 + ~(-1 << v27)) >> v27) + 1;
    if (HIWORD(v30))
    {
      v28 = *(_DWORD *)(a1 + v26);
      if (!v28)
        goto LABEL_35;
      goto LABEL_26;
    }
    if (v30 > 0xFF)
    {
      v28 = *(unsigned __int16 *)(a1 + v26);
      if (!*(_WORD *)(a1 + v26))
        goto LABEL_35;
      goto LABEL_26;
    }
    if (v30 < 2)
    {
LABEL_35:
      if (v21 > 0xFE)
        return __swift_getEnumTagSinglePayload((v25 + a1) & ~v24, v21, v19);
      v33 = *(unsigned __int8 *)(a1 + v23);
      if (v33 >= 2)
        return (v33 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v28 = *(unsigned __int8 *)(a1 + v26);
  if (!*(_BYTE *)(a1 + v26))
    goto LABEL_35;
LABEL_26:
  v31 = (v28 - 1) << v27;
  if (v26 > 3)
    v31 = 0;
  if ((_DWORD)v26)
  {
    if (v26 <= 3)
      v32 = v26;
    else
      v32 = 4;
    __asm { BR              X12 }
  }
  return v22 + v31 + 1;
}

void sub_22128EC90(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unint64_t v23;
  size_t v24;
  char v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  int v29;

  v8 = *(_QWORD *)(sub_2212F5124() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_QWORD *)(sub_2212F5058() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 | v12 | 7;
  v14 = (v10 + 7 + ((*(_QWORD *)(v11 + 64) + v9 + ((v12 + 16) & ~v12)) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;
  v16 = v14 + 9;
  if (v16 <= v15)
    v16 = v15;
  if (v16 <= 2)
    v16 = 2;
  v17 = v16 + ((((v9 + 16) & ~v9) + v10 + v13) & ~v13);
  if (v17 + 1 > ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v18 = v17 + 1;
  else
    v18 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 <= 0x10)
    v18 = 16;
  v19 = v18 + 1;
  v20 = (v19 + v13) & ~v13;
  v21 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v21 + 84) <= 0xFEu)
    v22 = 254;
  else
    v22 = *(_DWORD *)(v21 + 84);
  v23 = v20 + v19;
  if (v23 <= 0x20)
    v23 = 32;
  v24 = ((v23 + *(unsigned __int8 *)(v21 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))
      + *(_QWORD *)(v21 + 64);
  v25 = 8 * v24;
  if (a3 <= v22)
  {
    v26 = 0;
  }
  else if (v24 <= 3)
  {
    v28 = ((a3 - v22 + ~(-1 << v25)) >> v25) + 1;
    if (HIWORD(v28))
    {
      v26 = 4u;
    }
    else if (v28 >= 0x100)
    {
      v26 = 2;
    }
    else
    {
      v26 = v28 > 1;
    }
  }
  else
  {
    v26 = 1u;
  }
  if (v22 < a2)
  {
    v27 = ~v22 + a2;
    if (v24 < 4)
    {
      if ((_DWORD)v24)
      {
        v29 = v27 & ~(-1 << v25);
        bzero(a1, v24);
        if ((_DWORD)v24 == 3)
        {
          *(_WORD *)a1 = v29;
          a1[2] = BYTE2(v29);
        }
        else if ((_DWORD)v24 == 2)
        {
          *(_WORD *)a1 = v29;
        }
        else
        {
          *a1 = v29;
        }
      }
    }
    else
    {
      bzero(a1, v24);
      *(_DWORD *)a1 = v27;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_22128EFAC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x22128EF94);
}

void sub_22128EFBC()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x22128EF94);
}

void sub_22128EFC4()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x22128EF94);
}

void sub_22128EFD0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = a1[1];
  type metadata accessor for MultilineButtonLabel();
  type metadata accessor for SubscriptionStoreButtonInternal.SingleLineLabel(255, v1, v2, v3);
  OUTLINED_FUNCTION_28_1();
  sub_2212F3A20();
  sub_221023FE4(&qword_255666878, (void (*)(uint64_t))type metadata accessor for MultilineButtonLabel);
  OUTLINED_FUNCTION_5_2();
}

void sub_22128F04C()
{
  OUTLINED_FUNCTION_10_13();
}

void sub_22128F060()
{
  OUTLINED_FUNCTION_20_27();
  OUTLINED_FUNCTION_5_2();
}

void sub_22128F074()
{
  OUTLINED_FUNCTION_21_31();
  sub_2212F3348();
  OUTLINED_FUNCTION_25_29();
  OUTLINED_FUNCTION_14_2();
  sub_2212F3E40();
  OUTLINED_FUNCTION_28_1();
  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666880);
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_0_8();
  OUTLINED_FUNCTION_10_10();
  OUTLINED_FUNCTION_3_3();
}

void sub_22128F0E8()
{
  OUTLINED_FUNCTION_28_1();
  sub_2212F4830();
  OUTLINED_FUNCTION_28_1();
  sub_2212F3348();
  OUTLINED_FUNCTION_3_3();
}

void sub_22128F118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;

  a13 = a1;
  a14 = MEMORY[0x24BDEF830];
  v16 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v15, &a13);
  a11 = v15;
  a12 = v16;
  MEMORY[0x22766BA58](255, &a11, MEMORY[0x24BDF2F10], 0);
  sub_2212F3348();
  a11 = v15;
  a12 = v16;
  swift_getOpaqueTypeConformance2();
  sub_221023FE4(&qword_255656B50, v14);
  OUTLINED_FUNCTION_10_13();
}

uint64_t sub_22128F1CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22128F1DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22128F1EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22128F220@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_221288D6C(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_22128F22C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_221288DF0(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

void sub_22128F25C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_9_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_22128F294()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255666980;
  if (!qword_255666980)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666968);
    v2 = sub_22128F318();
    sub_221024548(&qword_255657CE0, &qword_255657CE8);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255666980);
  }
  return result;
}

unint64_t sub_22128F318()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255666988;
  if (!qword_255666988)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666960);
    sub_221024548(&qword_255666990, &qword_255666978);
    v3 = v2;
    sub_221024548(&qword_255656B78, &qword_255656B80);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255666988);
  }
  return result;
}

void sub_22128F3B4()
{
  sub_2212F46D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255656B80);
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_5_2();
}

void sub_22128F418()
{
  uint64_t *v0;

  sub_221024548(&qword_255656B78, v0);
  OUTLINED_FUNCTION_3_3();
}

unint64_t sub_22128F460()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  uint64_t v6;
  _QWORD v7[6];

  result = qword_255666998;
  if (!qword_255666998)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556669A0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666940);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666938);
    type metadata accessor for StoreKitProminentButtonStyle(255);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666950);
    sub_221024548(&qword_255666958, &qword_255666950);
    sub_221023FE4(&qword_255657AD8, (void (*)(uint64_t))type metadata accessor for StoreKitProminentButtonStyle);
    v4 = v3;
    v7[4] = swift_getOpaqueTypeConformance2();
    v7[5] = v4;
    v7[2] = v2;
    v7[3] = swift_getOpaqueTypeConformance2();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_221023FE4(&qword_255656B50, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    v7[0] = OpaqueTypeConformance2;
    v7[1] = v6;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v7);
    atomic_store(result, (unint64_t *)&qword_255666998);
  }
  return result;
}

unint64_t sub_22128F5CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_2556669A8;
  if (!qword_2556669A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2556669B0);
    v4[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666968);
    v4[3] = sub_22128F294();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_221023FE4(&qword_255656B50, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
    v4[0] = OpaqueTypeConformance2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2556669A8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_54(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_3_53()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_4_44()
{
  return _s15PricePropertiesVMa(0);
}

uint64_t OUTLINED_FUNCTION_5_44()
{
  return sub_2212F5058();
}

uint64_t OUTLINED_FUNCTION_10_41()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_11_49(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(a9, a1);
}

uint64_t OUTLINED_FUNCTION_12_45(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_13_44()
{
  return _s22LocalizedPriceResourceV6FormatOMa(0);
}

uint64_t OUTLINED_FUNCTION_17_37()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  return v3(v1 + *(int *)(v2 + 24), v0);
}

uint64_t OUTLINED_FUNCTION_20_27()
{
  return sub_2212F4848();
}

uint64_t OUTLINED_FUNCTION_21_31()
{
  return sub_2212F47AC();
}

uint64_t OUTLINED_FUNCTION_22_23()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_25_29()
{
  return type metadata accessor for SubscribeButtonTopCaptionModifier();
}

uint64_t OUTLINED_FUNCTION_27_27()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 24);
}

uint64_t OUTLINED_FUNCTION_29_20()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_32_25()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_33_22()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_35_20(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_22128F77C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char v35;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a1 + 48);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  if (v5)
  {
    if (v6)
    {
      v7 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v6;
      *(_QWORD *)(a1 + 56) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656338);
  v10 = *(int *)(v9 + 60);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for Subscription();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    if (!v15)
    {
      v27 = sub_2212F51B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v11, v12, v27);
      v28 = *(int *)(v13 + 20);
      v29 = &v11[v28];
      v30 = &v12[v28];
      v31 = v30[8];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      v29[8] = v31;
      v32 = *(int *)(v13 + 24);
      v33 = &v11[v32];
      v34 = &v12[v32];
      v35 = v34[8];
      *(_QWORD *)v33 = *(_QWORD *)v34;
      v33[8] = v35;
      goto LABEL_14;
    }
    sub_22105B020((uint64_t)v11);
    goto LABEL_13;
  }
  if (v15)
  {
LABEL_13:
    v25 = __swift_instantiateConcreteTypeFromMangledName(qword_255656110);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_14;
  }
  v16 = sub_2212F51B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, v12, v16);
  v17 = *(int *)(v13 + 20);
  v18 = &v11[v17];
  v19 = &v12[v17];
  v20 = v19[8];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v20;
  v21 = *(int *)(v13 + 24);
  v22 = &v11[v21];
  v23 = &v12[v21];
  v24 = v23[8];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = v24;
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_14:
  *(_BYTE *)(a1 + *(int *)(v9 + 64)) = *(_BYTE *)(a2 + *(int *)(v9 + 64));
  return a1;
}

uint64_t sub_22128F9E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a1 + 48);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  if (v5)
  {
    if (v4)
    {
      v6 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v4;
      *(_QWORD *)(a1 + 56) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v7 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v4;
    *(_QWORD *)(a1 + 56) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656338);
  v10 = *(int *)(v9 + 60);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = type metadata accessor for Subscription();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    if (!v15)
    {
      v25 = sub_2212F51B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v11, v12, v25);
      v26 = *(int *)(v13 + 20);
      v27 = &v11[v26];
      v28 = &v12[v26];
      *(_QWORD *)v27 = *(_QWORD *)v28;
      v27[8] = v28[8];
      v29 = *(int *)(v13 + 24);
      v30 = &v11[v29];
      v31 = &v12[v29];
      *(_QWORD *)v30 = *(_QWORD *)v31;
      v30[8] = v31[8];
      goto LABEL_14;
    }
    sub_22105B020((uint64_t)v11);
    goto LABEL_13;
  }
  if (v15)
  {
LABEL_13:
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_255656110);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_14;
  }
  v16 = sub_2212F51B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
  v17 = *(int *)(v13 + 20);
  v18 = &v11[v17];
  v19 = &v12[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = *(int *)(v13 + 24);
  v21 = &v11[v20];
  v22 = &v12[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_14:
  *(_BYTE *)(a1 + *(int *)(v9 + 64)) = *(_BYTE *)(a2 + *(int *)(v9 + 64));
  return a1;
}

uint64_t sub_22128FC10()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22128FC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_63();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_22128FC44()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22128FC50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_63();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t type metadata accessor for SubscriptionStoreButtonsView()
{
  uint64_t result;

  result = qword_255666A10;
  if (!qword_255666A10)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22128FCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;

  sub_22114BD04(319, a2, a3, a4);
  if (v4 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_22128FD1C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_22128FD2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666A48);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656478);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v3 = sub_2212F38E8();
  *((_QWORD *)v3 + 1) = 0x4044000000000000;
  v3[16] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255666A50);
  v15 = v0;
  swift_bridgeObjectRetain();
  sub_221144FD4();
  v8 = v7;
  swift_bridgeObjectRelease();
  v16 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255663778);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255666A58);
  sub_221024548(&qword_255663780, &qword_255663778);
  sub_221024548(&qword_255666A60, &qword_255666A58);
  sub_221023FE4(&qword_2556637A8, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section);
  sub_2212F48F0();
  LOBYTE(v8) = sub_2212F3EC4();
  sub_22102EDB4((uint64_t)v3, (uint64_t)v6, &qword_255666A48);
  v9 = &v6[*(int *)(v4 + 36)];
  *v9 = v8;
  *(_OWORD *)(v9 + 8) = 0u;
  *(_OWORD *)(v9 + 24) = 0u;
  v9[40] = 1;
  sub_22101763C((uint64_t)v3, &qword_255666A48);
  v10 = sub_2212F4A10();
  v13 = 1;
  v12 = 1;
  sub_22101663C(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v12, 0, v13, v10, v11);
  sub_22101763C((uint64_t)v6, &qword_255656478);
}

void sub_22128FF9C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = sub_2212F38E8();
  *(_QWORD *)(a2 + 8) = 0x4020000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666A68);
  sub_22128FFE8(a1, a2 + *(int *)(v4 + 44));
}

void sub_22128FFE8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666A70);
  MEMORY[0x24BDAC7A8](v3);
  v32 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v30 = (uint64_t)&v28 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666A78);
  MEMORY[0x24BDAC7A8](v7);
  v29 = (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666A80);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v28 - v16;
  v18 = (int *)type metadata accessor for SubscriptionStoreControlStyleConfiguration.Section(0);
  v19 = (uint64_t)v17;
  sub_22102EDB4(a1 + v18[5], (uint64_t)v17, &qword_25565E618);
  if (qword_255655C58 != -1)
    swift_once();
  v20 = qword_25568CED0;
  *(_QWORD *)v11 = sub_2212F38E8();
  *((_QWORD *)v11 + 1) = v20;
  v11[16] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255666A88);
  v33 = *(_QWORD *)(a1 + v18[6]);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565C3C0);
  type metadata accessor for SubscriptionStoreButton();
  sub_221024548(&qword_25565C3C8, &qword_25565C3C0);
  sub_221023FE4(&qword_255657400, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreButton);
  sub_221023FE4(qword_25565C3D8, (void (*)(uint64_t))type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option);
  sub_2212F48F0();
  v21 = a1 + v18[7];
  v22 = v30;
  sub_22102EDB4(v21, v30, &qword_25565E620);
  v23 = v19;
  sub_22102EDB4(v19, (uint64_t)v14, &qword_255666A80);
  v24 = v29;
  sub_22102EDB4((uint64_t)v11, v29, &qword_255666A78);
  v25 = v32;
  sub_22102EDB4(v22, v32, &qword_255666A70);
  v26 = v31;
  sub_22102EDB4((uint64_t)v14, v31, &qword_255666A80);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666A90);
  sub_22102EDB4(v24, v26 + *(int *)(v27 + 48), &qword_255666A78);
  sub_22102EDB4(v25, v26 + *(int *)(v27 + 64), &qword_255666A70);
  sub_22101763C(v22, &qword_255666A70);
  sub_22101763C((uint64_t)v11, &qword_255666A78);
  sub_22101763C(v23, &qword_255666A80);
  sub_22101763C(v25, &qword_255666A70);
  sub_22101763C(v24, &qword_255666A78);
  sub_22101763C((uint64_t)v14, &qword_255666A80);
}

uint64_t sub_221290384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212904AC(a1, (uint64_t)v6);
  v7 = (int *)type metadata accessor for SubscriptionStoreButton();
  v8 = a2 + v7[5];
  *(_BYTE *)(v8 + 48) = 0;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_OWORD *)v8 = 0u;
  v9 = a2 + v7[6];
  *(_QWORD *)v9 = swift_getKeyPath();
  *(_QWORD *)(v9 + 8) = 0;
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_WORD *)(v9 + 32) = 0;
  v10 = a2 + v7[7];
  *(_QWORD *)v10 = swift_getKeyPath();
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_WORD *)(v10 + 72) = 0;
  v11 = a2 + v7[8];
  *(_QWORD *)v11 = swift_getKeyPath();
  *(_BYTE *)(v11 + 8) = 0;
  v12 = a2 + v7[9];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_BYTE *)(v12 + 8) = 0;
  return sub_22129050C((uint64_t)v6, a2);
}

uint64_t sub_2212904AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22129050C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscriptionStoreControlStyleConfiguration.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for AccessoryViewModifier()
{
  return &type metadata for AccessoryViewModifier;
}

unint64_t sub_221290564()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255666A98;
  if (!qword_255666A98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255656480);
    v2[0] = sub_2212905D0();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255666A98);
  }
  return result;
}

unint64_t sub_2212905D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255666AA0;
  if (!qword_255666AA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255656478);
    sub_221024548(&qword_255666AA8, &qword_255666A48);
    v3[0] = v2;
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255666AA0);
  }
  return result;
}

uint64_t sub_221290654()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_221290664(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666AB0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666AB8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2212F3FFC();
  KeyPath = swift_getKeyPath();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666AC0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, a1, v12);
  v13 = (uint64_t *)&v6[*(int *)(v4 + 36)];
  *v13 = KeyPath;
  v13[1] = v10;
  LODWORD(a1) = sub_2212F3BAC();
  sub_22102EDB4((uint64_t)v6, (uint64_t)v9, &qword_255666AB0);
  *(_DWORD *)&v9[*(int *)(v7 + 36)] = a1;
  sub_22101763C((uint64_t)v6, &qword_255666AB0);
  sub_22102EDB4((uint64_t)v9, a2, &qword_255666AB8);
  sub_22101763C((uint64_t)v9, &qword_255666AB8);
}

unint64_t sub_2212907C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255666AC8;
  if (!qword_255666AC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666AD0);
    v2[0] = sub_221290834();
    v2[1] = sub_221129040();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255666AC8);
  }
  return result;
}

unint64_t sub_221290834()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255666AD8;
  if (!qword_255666AD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666AB8);
    v2 = sub_2212908B8();
    sub_221024548(&qword_25565CCD8, &qword_25565CCE0);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255666AD8);
  }
  return result;
}

unint64_t sub_2212908B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255666AE0;
  if (!qword_255666AE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666AB0);
    sub_221024548(&qword_255666AE8, &qword_255666AC0);
    v3 = v2;
    sub_221024548(&qword_255656B78, &qword_255656B80);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255666AE0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_63()
{
  return type metadata accessor for SubscriptionStoreControlStyleConfiguration(0);
}

uint64_t sub_221290964(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v124)(char *, char *, uint64_t);
  void (*v125)(char *, char *, uint64_t);
  void (*v126)(char *, char *, uint64_t);
  void (*v127)(char *, char *, uint64_t);
  char *v128;
  char *v129;
  void (*v130)(char *, char *, uint64_t);
  void (*v131)(char *, char *, uint64_t);
  void (*v132)(char *, char *, uint64_t);
  void (*v133)(char *, char *, uint64_t);
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  void (*v148)(char *, char *, uint64_t);
  void (*v149)(char *, char *, uint64_t);
  char *v150;
  void (*v151)(char *, char *, uint64_t);
  void (*v152)(char *, char *, uint64_t);
  void (*v153)(char *, char *, uint64_t);
  char *v154;
  uint64_t v155;
  char *v156;
  void (*v157)(char *, char *, uint64_t);
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v27 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v27;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      *(_QWORD *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    v7 = _s11PriceStringOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v28 = sub_2212F5124();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
      v29 = _s20LocalizationResourceVMa();
      *(_OWORD *)(a1 + *(int *)(v29 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v29 + 20));
      goto LABEL_15;
    }
    if (EnumCaseMultiPayload != 1)
    {
      v30 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v30;
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    v9 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v9;
    v10 = _s22LocalizedPriceResourceVMa(0);
    v11 = *(int *)(v10 + 20);
    v12 = a1 + v11;
    v13 = (uint64_t)a2 + v11;
    v14 = sub_2212F5124();
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    v16 = *(int *)(v10 + 24);
    v17 = (char *)(a1 + v16);
    v18 = (char *)a2 + v16;
    v19 = _s22LocalizedPriceResourceV6FormatOMa(0);
    v20 = swift_getEnumCaseMultiPayload();
    if (v20 == 3)
    {
      v31 = *((_QWORD *)v18 + 1);
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = v31;
      v149 = (void (*)(char *, char *, uint64_t))v15;
      v32 = (int *)_s15PricePropertiesVMa(0);
      v33 = v32[5];
      v135 = &v18[v33];
      v143 = &v17[v33];
      v34 = sub_2212F5058();
      v127 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      v127(v143, v135, v34);
      v149(&v17[v32[6]], &v18[v32[6]], v14);
      *(_QWORD *)&v17[v32[7]] = *(_QWORD *)&v18[v32[7]];
    }
    else
    {
      if (v20 != 2)
      {
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
LABEL_15:
        swift_storeEnumTagMultiPayload();
        v35 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
        v36 = (_QWORD *)(a1 + v35);
        v37 = (uint64_t *)((char *)a2 + v35);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v35, 1, v7))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          goto LABEL_28;
        }
        v39 = swift_getEnumCaseMultiPayload();
        if (v39 == 2)
        {
          v57 = sub_2212F5124();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v36, v37, v57);
          v58 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)v36 + *(int *)(v58 + 20)) = *(_OWORD *)((char *)v37 + *(int *)(v58 + 20));
        }
        else if (v39 == 1)
        {
          v40 = v37[1];
          *v36 = *v37;
          v36[1] = v40;
          v41 = _s22LocalizedPriceResourceVMa(0);
          v42 = *(int *)(v41 + 20);
          v154 = (char *)v36 + v42;
          v158 = v41;
          v150 = (char *)v37 + v42;
          v43 = sub_2212F5124();
          v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
          swift_bridgeObjectRetain();
          v46 = v150;
          v45 = v154;
          v151 = v44;
          v155 = v43;
          v44(v45, v46, v43);
          v47 = *(int *)(v158 + 24);
          v48 = (char *)v36 + v47;
          v49 = (char *)v37 + v47;
          v50 = _s22LocalizedPriceResourceV6FormatOMa(0);
          v51 = swift_getEnumCaseMultiPayload();
          if (v51 == 3)
          {
            v60 = *((_QWORD *)v49 + 1);
            *(_QWORD *)v48 = *(_QWORD *)v49;
            *((_QWORD *)v48 + 1) = v60;
            v61 = (int *)_s15PricePropertiesVMa(0);
            v62 = v61[5];
            v129 = &v49[v62];
            v137 = &v48[v62];
            v63 = sub_2212F5058();
            v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
            swift_bridgeObjectRetain();
            v125(v137, v129, v63);
            v151(&v48[v61[6]], &v49[v61[6]], v155);
            *(_QWORD *)&v48[v61[7]] = *(_QWORD *)&v49[v61[7]];
          }
          else
          {
            if (v51 != 2)
            {
              memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
              goto LABEL_27;
            }
            v52 = *((_QWORD *)v49 + 1);
            *(_QWORD *)v48 = *(_QWORD *)v49;
            *((_QWORD *)v48 + 1) = v52;
            v53 = (int *)_s15PricePropertiesVMa(0);
            v54 = v53[5];
            v128 = &v49[v54];
            v136 = &v48[v54];
            v55 = sub_2212F5058();
            v124 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
            swift_bridgeObjectRetain();
            v124(v136, v128, v55);
            v151(&v48[v53[6]], &v49[v53[6]], v155);
            *(_QWORD *)&v48[v53[7]] = *(_QWORD *)&v49[v53[7]];
            v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
            v48[*(int *)(v56 + 48)] = v49[*(int *)(v56 + 48)];
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          v59 = v37[1];
          *v36 = *v37;
          v36[1] = v59;
          swift_bridgeObjectRetain();
        }
LABEL_27:
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v7);
LABEL_28:
        swift_storeEnumTagMultiPayload();
        v64 = *(int *)(a3 + 20);
        v65 = a1 + v64;
        v66 = (uint64_t)a2 + v64;
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          v86 = *(_QWORD *)(v66 + 8);
          *(_QWORD *)v65 = *(_QWORD *)v66;
          *(_QWORD *)(v65 + 8) = v86;
          *(_BYTE *)(v65 + 16) = *(_BYTE *)(v66 + 16);
          *(_QWORD *)(v65 + 24) = *(_QWORD *)(v66 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_54:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        v67 = _s11PriceStringOMa(0);
        v68 = swift_getEnumCaseMultiPayload();
        if (v68 == 2)
        {
          v87 = sub_2212F5124();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v65, v66, v87);
          v88 = _s20LocalizationResourceVMa();
          *(_OWORD *)(v65 + *(int *)(v88 + 20)) = *(_OWORD *)(v66 + *(int *)(v88 + 20));
          goto LABEL_41;
        }
        if (v68 != 1)
        {
          v89 = *(_QWORD *)(v66 + 8);
          *(_QWORD *)v65 = *(_QWORD *)v66;
          *(_QWORD *)(v65 + 8) = v89;
          swift_bridgeObjectRetain();
          goto LABEL_41;
        }
        v159 = v67;
        v69 = *(_QWORD *)(v66 + 8);
        *(_QWORD *)v65 = *(_QWORD *)v66;
        *(_QWORD *)(v65 + 8) = v69;
        v70 = _s22LocalizedPriceResourceVMa(0);
        v71 = *(int *)(v70 + 20);
        v72 = v65 + v71;
        v73 = v66 + v71;
        v74 = sub_2212F5124();
        v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 16);
        swift_bridgeObjectRetain();
        v75(v72, v73, v74);
        v76 = *(int *)(v70 + 24);
        v77 = (char *)(v65 + v76);
        v78 = (char *)(v66 + v76);
        v79 = _s22LocalizedPriceResourceV6FormatOMa(0);
        v80 = swift_getEnumCaseMultiPayload();
        if (v80 == 3)
        {
          v90 = *((_QWORD *)v78 + 1);
          *(_QWORD *)v77 = *(_QWORD *)v78;
          *((_QWORD *)v77 + 1) = v90;
          v153 = (void (*)(char *, char *, uint64_t))v75;
          v91 = (int *)_s15PricePropertiesVMa(0);
          v92 = v91[5];
          v139 = &v78[v92];
          v145 = &v77[v92];
          v93 = sub_2212F5058();
          v131 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16);
          swift_bridgeObjectRetain();
          v131(v145, v139, v93);
          v153(&v77[v91[6]], &v78[v91[6]], v74);
          *(_QWORD *)&v77[v91[7]] = *(_QWORD *)&v78[v91[7]];
        }
        else
        {
          if (v80 != 2)
          {
            memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
            goto LABEL_40;
          }
          v81 = *((_QWORD *)v78 + 1);
          *(_QWORD *)v77 = *(_QWORD *)v78;
          *((_QWORD *)v77 + 1) = v81;
          v82 = (int *)_s15PricePropertiesVMa(0);
          v83 = v82[5];
          v138 = &v78[v83];
          v144 = &v77[v83];
          v152 = (void (*)(char *, char *, uint64_t))v75;
          v84 = sub_2212F5058();
          v130 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16);
          swift_bridgeObjectRetain();
          v130(v144, v138, v84);
          v152(&v77[v82[6]], &v78[v82[6]], v74);
          *(_QWORD *)&v77[v82[7]] = *(_QWORD *)&v78[v82[7]];
          v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
          v77[*(int *)(v85 + 48)] = v78[*(int *)(v85 + 48)];
        }
        swift_storeEnumTagMultiPayload();
LABEL_40:
        v67 = v159;
LABEL_41:
        swift_storeEnumTagMultiPayload();
        v94 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
        v95 = (_QWORD *)(v65 + v94);
        v96 = (_QWORD *)(v66 + v94);
        if (__swift_getEnumTagSinglePayload(v66 + v94, 1, v67))
        {
          v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
          memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          goto LABEL_54;
        }
        v98 = swift_getEnumCaseMultiPayload();
        if (v98 == 2)
        {
          v116 = sub_2212F5124();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v116 - 8) + 16))(v95, v96, v116);
          v117 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)v95 + *(int *)(v117 + 20)) = *(_OWORD *)((char *)v96 + *(int *)(v117 + 20));
        }
        else if (v98 == 1)
        {
          v99 = v96[1];
          *v95 = *v96;
          v95[1] = v99;
          v100 = _s22LocalizedPriceResourceVMa(0);
          v101 = *(int *)(v100 + 20);
          v156 = (char *)v96 + v101;
          v160 = (char *)v95 + v101;
          v102 = sub_2212F5124();
          v103 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16);
          swift_bridgeObjectRetain();
          v105 = v156;
          v104 = v160;
          v157 = v103;
          v161 = v102;
          v103(v104, v105, v102);
          v106 = *(int *)(v100 + 24);
          v107 = (char *)v95 + v106;
          v108 = (char *)v96 + v106;
          v109 = _s22LocalizedPriceResourceV6FormatOMa(0);
          v110 = swift_getEnumCaseMultiPayload();
          if (v110 == 3)
          {
            v119 = *((_QWORD *)v108 + 1);
            *(_QWORD *)v107 = *(_QWORD *)v108;
            *((_QWORD *)v107 + 1) = v119;
            v120 = (int *)_s15PricePropertiesVMa(0);
            v121 = v120[5];
            v141 = &v108[v121];
            v147 = &v107[v121];
            v122 = sub_2212F5058();
            v133 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 16);
            swift_bridgeObjectRetain();
            v133(v147, v141, v122);
            v157(&v107[v120[6]], &v108[v120[6]], v161);
            *(_QWORD *)&v107[v120[7]] = *(_QWORD *)&v108[v120[7]];
          }
          else
          {
            if (v110 != 2)
            {
              memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
              goto LABEL_53;
            }
            v111 = *((_QWORD *)v108 + 1);
            *(_QWORD *)v107 = *(_QWORD *)v108;
            *((_QWORD *)v107 + 1) = v111;
            v112 = (int *)_s15PricePropertiesVMa(0);
            v113 = v112[5];
            v140 = &v108[v113];
            v146 = &v107[v113];
            v114 = sub_2212F5058();
            v132 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v114 - 8) + 16);
            swift_bridgeObjectRetain();
            v132(v146, v140, v114);
            v157(&v107[v112[6]], &v108[v112[6]], v161);
            *(_QWORD *)&v107[v112[7]] = *(_QWORD *)&v108[v112[7]];
            v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
            v107[*(int *)(v115 + 48)] = v108[*(int *)(v115 + 48)];
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          v118 = v96[1];
          *v95 = *v96;
          v95[1] = v118;
          swift_bridgeObjectRetain();
        }
LABEL_53:
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v67);
        goto LABEL_54;
      }
      v21 = *((_QWORD *)v18 + 1);
      *(_QWORD *)v17 = *(_QWORD *)v18;
      *((_QWORD *)v17 + 1) = v21;
      v22 = (int *)_s15PricePropertiesVMa(0);
      v23 = v22[5];
      v134 = &v18[v23];
      v142 = &v17[v23];
      v148 = (void (*)(char *, char *, uint64_t))v15;
      v24 = sub_2212F5058();
      v126 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v126(v142, v134, v24);
      v148(&v17[v22[6]], &v18[v22[6]], v14);
      *(_QWORD *)&v17[v22[7]] = *(_QWORD *)&v18[v22[7]];
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
      v17[*(int *)(v25 + 48)] = v18[*(int *)(v25 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  v26 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v26 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t sub_2212914F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t result;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);

  type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v4 = _s11PriceStringOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = sub_2212F5124();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
      break;
    case 1:
      swift_bridgeObjectRelease();
      v6 = _s22LocalizedPriceResourceVMa(0);
      v7 = a1 + *(int *)(v6 + 20);
      v8 = sub_2212F5124();
      v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v9(v7, v8);
      v10 = a1 + *(int *)(v6 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      v11 = swift_getEnumCaseMultiPayload();
      if (v11 == 3 || v11 == 2)
      {
        swift_bridgeObjectRelease();
        v12 = _s15PricePropertiesVMa(0);
        v13 = v10 + *(int *)(v12 + 20);
        v14 = sub_2212F5058();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        v9(v10 + *(int *)(v12 + 24), v8);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  v16 = a1 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v16, 1, v4))
  {
    v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 2)
    {
      v49 = sub_2212F5124();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v16, v49);
      goto LABEL_13;
    }
    if (v21 == 1)
    {
      swift_bridgeObjectRelease();
      v33 = _s22LocalizedPriceResourceVMa(0);
      v34 = v16 + *(int *)(v33 + 20);
      v35 = sub_2212F5124();
      v36 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8);
      v36(v34, v35);
      v37 = v16 + *(int *)(v33 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      v38 = swift_getEnumCaseMultiPayload();
      if (v38 == 3 || v38 == 2)
      {
        swift_bridgeObjectRelease();
        v39 = _s15PricePropertiesVMa(0);
        v40 = v37 + *(int *)(v39 + 20);
        v41 = sub_2212F5058();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
        v36(v37 + *(int *)(v39 + 24), v35);
      }
      goto LABEL_13;
    }
    if (v21)
      goto LABEL_13;
LABEL_7:
    swift_bridgeObjectRelease();
  }
LABEL_13:
  v17 = a1 + *(int *)(a2 + 20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v18 = _s11PriceStringOMa(0);
  v19 = swift_getEnumCaseMultiPayload();
  switch(v19)
  {
    case 2:
      v31 = sub_2212F5124();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v17, v31);
      break;
    case 1:
      swift_bridgeObjectRelease();
      v22 = _s22LocalizedPriceResourceVMa(0);
      v23 = v17 + *(int *)(v22 + 20);
      v24 = sub_2212F5124();
      v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8);
      v25(v23, v24);
      v26 = v17 + *(int *)(v22 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      v27 = swift_getEnumCaseMultiPayload();
      if (v27 == 3 || v27 == 2)
      {
        swift_bridgeObjectRelease();
        v28 = _s15PricePropertiesVMa(0);
        v29 = v26 + *(int *)(v28 + 20);
        v30 = sub_2212F5058();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
        v25(v26 + *(int *)(v28 + 24), v24);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      break;
  }
  v32 = v17 + *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  result = __swift_getEnumTagSinglePayload(v32, 1, v18);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 2)
    {
      v50 = sub_2212F5124();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v32, v50);
    }
    if ((_DWORD)result == 1)
    {
      swift_bridgeObjectRelease();
      v42 = _s22LocalizedPriceResourceVMa(0);
      v43 = v32 + *(int *)(v42 + 20);
      v44 = sub_2212F5124();
      v51 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8);
      v51(v43, v44);
      v45 = v32 + *(int *)(v42 + 24);
      _s22LocalizedPriceResourceV6FormatOMa(0);
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 3 || (_DWORD)result == 2)
      {
        swift_bridgeObjectRelease();
        v46 = _s15PricePropertiesVMa(0);
        v47 = v45 + *(int *)(v46 + 20);
        v48 = sub_2212F5058();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
        return ((uint64_t (*)(uint64_t, uint64_t))v51)(v45 + *(int *)(v46 + 24), v44);
      }
      return result;
    }
    if ((_DWORD)result)
      return result;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_221291A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  int *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  uint64_t v122;
  uint64_t v123;
  void (*v125)(char *, char *, uint64_t);
  void (*v126)(char *, char *, uint64_t);
  void (*v127)(char *, char *, uint64_t);
  void (*v128)(char *, char *, uint64_t);
  char *v129;
  char *v130;
  void (*v131)(char *, char *, uint64_t);
  void (*v132)(char *, char *, uint64_t);
  void (*v133)(char *, char *, uint64_t);
  void (*v134)(char *, char *, uint64_t);
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  void (*v150)(char *, char *, uint64_t);
  void (*v151)(char *, char *, uint64_t);
  void (*v152)(char *, char *, uint64_t);
  char *v153;
  uint64_t v154;
  char *v155;
  void (*v156)(char *, char *, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;

  type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v27 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v27;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_27;
  }
  v6 = _s11PriceStringOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v28 = sub_2212F5124();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
    v29 = _s20LocalizationResourceVMa();
    *(_OWORD *)(a1 + *(int *)(v29 + 20)) = *(_OWORD *)(a2 + *(int *)(v29 + 20));
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v30 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v30;
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  v8 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v8;
  v9 = _s22LocalizedPriceResourceVMa(0);
  v10 = *(int *)(v9 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_2212F5124();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
  v15 = *(int *)(v9 + 24);
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = _s22LocalizedPriceResourceV6FormatOMa(0);
  v19 = swift_getEnumCaseMultiPayload();
  if (v19 == 3)
  {
    v158 = a3;
    v31 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v31;
    v32 = (int *)_s15PricePropertiesVMa(0);
    v33 = v32[5];
    v136 = &v17[v33];
    v144 = &v16[v33];
    v34 = (void (*)(char *, char *, uint64_t))v14;
    v35 = sub_2212F5058();
    v128 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
    a3 = v158;
    swift_bridgeObjectRetain();
    v128(v144, v136, v35);
    v34(&v16[v32[6]], &v17[v32[6]], v13);
    *(_QWORD *)&v16[v32[7]] = *(_QWORD *)&v17[v32[7]];
    goto LABEL_11;
  }
  if (v19 == 2)
  {
    v20 = (void (*)(char *, char *, uint64_t))v14;
    v21 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v21;
    v157 = a3;
    v22 = (int *)_s15PricePropertiesVMa(0);
    v23 = v22[5];
    v135 = &v17[v23];
    v143 = &v16[v23];
    v24 = sub_2212F5058();
    v127 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v127(v143, v135, v24);
    v20(&v16[v22[6]], &v17[v22[6]], v13);
    v25 = v22[7];
    a3 = v157;
    *(_QWORD *)&v16[v25] = *(_QWORD *)&v17[v25];
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
    v16[*(int *)(v26 + 48)] = v17[*(int *)(v26 + 48)];
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
LABEL_13:
  swift_storeEnumTagMultiPayload();
  v36 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  v37 = (_QWORD *)(a1 + v36);
  v38 = (_QWORD *)(a2 + v36);
  if (__swift_getEnumTagSinglePayload(a2 + v36, 1, v6))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_27;
  }
  v40 = swift_getEnumCaseMultiPayload();
  if (v40 == 2)
  {
    v58 = sub_2212F5124();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v37, v38, v58);
    v59 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)v37 + *(int *)(v59 + 20)) = *(_OWORD *)((char *)v38 + *(int *)(v59 + 20));
  }
  else
  {
    if (v40 == 1)
    {
      v159 = a3;
      v41 = v38[1];
      *v37 = *v38;
      v37[1] = v41;
      v42 = _s22LocalizedPriceResourceVMa(0);
      v43 = *(int *)(v42 + 20);
      v149 = (char *)v38 + v43;
      v153 = (char *)v37 + v43;
      v44 = sub_2212F5124();
      v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      v47 = v149;
      v46 = v153;
      v150 = v45;
      v154 = v44;
      v45(v46, v47, v44);
      v48 = *(int *)(v42 + 24);
      v49 = (char *)v37 + v48;
      v50 = (char *)v38 + v48;
      v51 = _s22LocalizedPriceResourceV6FormatOMa(0);
      v52 = swift_getEnumCaseMultiPayload();
      if (v52 == 3)
      {
        v61 = *((_QWORD *)v50 + 1);
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = v61;
        v62 = (int *)_s15PricePropertiesVMa(0);
        v63 = v62[5];
        v130 = &v50[v63];
        v138 = &v49[v63];
        v64 = sub_2212F5058();
        v126 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
        swift_bridgeObjectRetain();
        v126(v138, v130, v64);
        v150(&v49[v62[6]], &v50[v62[6]], v154);
        *(_QWORD *)&v49[v62[7]] = *(_QWORD *)&v50[v62[7]];
      }
      else
      {
        if (v52 != 2)
        {
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          goto LABEL_25;
        }
        v53 = *((_QWORD *)v50 + 1);
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = v53;
        v54 = (int *)_s15PricePropertiesVMa(0);
        v55 = v54[5];
        v129 = &v50[v55];
        v137 = &v49[v55];
        v56 = sub_2212F5058();
        v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v125(v137, v129, v56);
        v150(&v49[v54[6]], &v50[v54[6]], v154);
        *(_QWORD *)&v49[v54[7]] = *(_QWORD *)&v50[v54[7]];
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
        v49[*(int *)(v57 + 48)] = v50[*(int *)(v57 + 48)];
      }
      swift_storeEnumTagMultiPayload();
LABEL_25:
      a3 = v159;
      goto LABEL_26;
    }
    v60 = v38[1];
    *v37 = *v38;
    v37[1] = v60;
    swift_bridgeObjectRetain();
  }
LABEL_26:
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v6);
LABEL_27:
  swift_storeEnumTagMultiPayload();
  v65 = *(int *)(a3 + 20);
  v66 = a1 + v65;
  v67 = a2 + v65;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v68 = _s11PriceStringOMa(0);
    v69 = swift_getEnumCaseMultiPayload();
    if (v69 == 2)
    {
      v88 = sub_2212F5124();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v66, v67, v88);
      v89 = _s20LocalizationResourceVMa();
      *(_OWORD *)(v66 + *(int *)(v89 + 20)) = *(_OWORD *)(v67 + *(int *)(v89 + 20));
      goto LABEL_40;
    }
    if (v69 != 1)
    {
      v90 = *(_QWORD *)(v67 + 8);
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *(_QWORD *)(v66 + 8) = v90;
      swift_bridgeObjectRetain();
      goto LABEL_40;
    }
    v160 = v68;
    v70 = *(_QWORD *)(v67 + 8);
    *(_QWORD *)v66 = *(_QWORD *)v67;
    *(_QWORD *)(v66 + 8) = v70;
    v71 = _s22LocalizedPriceResourceVMa(0);
    v72 = *(int *)(v71 + 20);
    v73 = v66 + v72;
    v74 = v67 + v72;
    v75 = sub_2212F5124();
    v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 16);
    swift_bridgeObjectRetain();
    v76(v73, v74, v75);
    v77 = *(int *)(v71 + 24);
    v78 = (char *)(v66 + v77);
    v79 = (char *)(v67 + v77);
    v80 = _s22LocalizedPriceResourceV6FormatOMa(0);
    v81 = swift_getEnumCaseMultiPayload();
    if (v81 == 3)
    {
      v91 = *((_QWORD *)v79 + 1);
      *(_QWORD *)v78 = *(_QWORD *)v79;
      *((_QWORD *)v78 + 1) = v91;
      v152 = (void (*)(char *, char *, uint64_t))v76;
      v92 = (int *)_s15PricePropertiesVMa(0);
      v93 = v92[5];
      v140 = &v79[v93];
      v146 = &v78[v93];
      v94 = sub_2212F5058();
      v132 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16);
      swift_bridgeObjectRetain();
      v132(v146, v140, v94);
      v152(&v78[v92[6]], &v79[v92[6]], v75);
      *(_QWORD *)&v78[v92[7]] = *(_QWORD *)&v79[v92[7]];
    }
    else
    {
      if (v81 != 2)
      {
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        goto LABEL_39;
      }
      v82 = *((_QWORD *)v79 + 1);
      *(_QWORD *)v78 = *(_QWORD *)v79;
      *((_QWORD *)v78 + 1) = v82;
      v83 = (int *)_s15PricePropertiesVMa(0);
      v84 = v83[5];
      v139 = &v79[v84];
      v145 = &v78[v84];
      v151 = (void (*)(char *, char *, uint64_t))v76;
      v85 = sub_2212F5058();
      v131 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16);
      swift_bridgeObjectRetain();
      v131(v145, v139, v85);
      v151(&v78[v83[6]], &v79[v83[6]], v75);
      *(_QWORD *)&v78[v83[7]] = *(_QWORD *)&v79[v83[7]];
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
      v78[*(int *)(v86 + 48)] = v79[*(int *)(v86 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_39:
    v68 = v160;
LABEL_40:
    swift_storeEnumTagMultiPayload();
    v95 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    v96 = (_QWORD *)(v66 + v95);
    v97 = (_QWORD *)(v67 + v95);
    if (__swift_getEnumTagSinglePayload(v67 + v95, 1, v68))
    {
      v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
      memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
      goto LABEL_53;
    }
    v99 = swift_getEnumCaseMultiPayload();
    if (v99 == 2)
    {
      v117 = sub_2212F5124();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v117 - 8) + 16))(v96, v97, v117);
      v118 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v96 + *(int *)(v118 + 20)) = *(_OWORD *)((char *)v97 + *(int *)(v118 + 20));
    }
    else if (v99 == 1)
    {
      v100 = v97[1];
      *v96 = *v97;
      v96[1] = v100;
      v101 = _s22LocalizedPriceResourceVMa(0);
      v102 = *(int *)(v101 + 20);
      v155 = (char *)v97 + v102;
      v161 = (char *)v96 + v102;
      v103 = sub_2212F5124();
      v104 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
      swift_bridgeObjectRetain();
      v106 = v155;
      v105 = v161;
      v156 = v104;
      v162 = v103;
      v104(v105, v106, v103);
      v107 = *(int *)(v101 + 24);
      v108 = (char *)v96 + v107;
      v109 = (char *)v97 + v107;
      v110 = _s22LocalizedPriceResourceV6FormatOMa(0);
      v111 = swift_getEnumCaseMultiPayload();
      if (v111 == 3)
      {
        v120 = *((_QWORD *)v109 + 1);
        *(_QWORD *)v108 = *(_QWORD *)v109;
        *((_QWORD *)v108 + 1) = v120;
        v121 = (int *)_s15PricePropertiesVMa(0);
        v122 = v121[5];
        v142 = &v109[v122];
        v148 = &v108[v122];
        v123 = sub_2212F5058();
        v134 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16);
        swift_bridgeObjectRetain();
        v134(v148, v142, v123);
        v156(&v108[v121[6]], &v109[v121[6]], v162);
        *(_QWORD *)&v108[v121[7]] = *(_QWORD *)&v109[v121[7]];
      }
      else
      {
        if (v111 != 2)
        {
          memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
          goto LABEL_52;
        }
        v112 = *((_QWORD *)v109 + 1);
        *(_QWORD *)v108 = *(_QWORD *)v109;
        *((_QWORD *)v108 + 1) = v112;
        v113 = (int *)_s15PricePropertiesVMa(0);
        v114 = v113[5];
        v141 = &v109[v114];
        v147 = &v108[v114];
        v115 = sub_2212F5058();
        v133 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16);
        swift_bridgeObjectRetain();
        v133(v147, v141, v115);
        v156(&v108[v113[6]], &v109[v113[6]], v162);
        *(_QWORD *)&v108[v113[7]] = *(_QWORD *)&v109[v113[7]];
        v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
        v108[*(int *)(v116 + 48)] = v109[*(int *)(v116 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v119 = v97[1];
      *v96 = *v97;
      v96[1] = v119;
      swift_bridgeObjectRetain();
    }
LABEL_52:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v68);
    goto LABEL_53;
  }
  v87 = *(_QWORD *)(v67 + 8);
  *(_QWORD *)v66 = *(_QWORD *)v67;
  *(_QWORD *)(v66 + 8) = v87;
  *(_BYTE *)(v66 + 16) = *(_BYTE *)(v67 + 16);
  *(_QWORD *)(v66 + 24) = *(_QWORD *)(v67 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_53:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22129258C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  int v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  int v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  int v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v104)(char *, char *, uint64_t);
  void (*v105)(char *, char *, uint64_t);
  void (*v106)(char *, char *, uint64_t);
  void (*v107)(char *, char *, uint64_t);
  char *v108;
  char *v109;
  void (*v110)(char *, char *, uint64_t);
  void (*v111)(char *, char *, uint64_t);
  void (*v112)(char *, char *, uint64_t);
  void (*v113)(char *, char *, uint64_t);
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  void (*v128)(char *, char *, uint64_t);
  void (*v129)(char *, char *, uint64_t);
  char *v130;
  void (*v131)(char *, char *, uint64_t);
  void (*v132)(char *, char *, uint64_t);
  void (*v133)(char *, char *, uint64_t);
  char *v134;
  uint64_t v135;
  char *v136;
  void (*v137)(char *, char *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;

  if (a1 != a2)
  {
    sub_221293198(a1);
    type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    v6 = _s11PriceStringOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v23 = sub_2212F5124();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
      v24 = _s20LocalizationResourceVMa();
      *(_OWORD *)(a1 + *(int *)(v24 + 20)) = *(_OWORD *)(a2 + *(int *)(v24 + 20));
      goto LABEL_15;
    }
    if (EnumCaseMultiPayload != 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    v138 = a3;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    v8 = _s22LocalizedPriceResourceVMa(0);
    v9 = *(int *)(v8 + 20);
    v10 = a1 + v9;
    v11 = a2 + v9;
    v12 = sub_2212F5124();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = *(int *)(v8 + 24);
    v15 = (char *)(a1 + v14);
    v16 = (char *)(a2 + v14);
    v17 = _s22LocalizedPriceResourceV6FormatOMa(0);
    v18 = swift_getEnumCaseMultiPayload();
    if (v18 == 3)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
      v129 = (void (*)(char *, char *, uint64_t))v13;
      v25 = (int *)_s15PricePropertiesVMa(0);
      v26 = v25[5];
      v115 = &v16[v26];
      v123 = &v15[v26];
      v27 = sub_2212F5058();
      v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v107(v123, v115, v27);
      v129(&v15[v25[6]], &v16[v25[6]], v12);
      *(_QWORD *)&v15[v25[7]] = *(_QWORD *)&v16[v25[7]];
    }
    else
    {
      if (v18 != 2)
      {
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        goto LABEL_14;
      }
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
      v19 = (int *)_s15PricePropertiesVMa(0);
      v20 = v19[5];
      v114 = &v16[v20];
      v122 = &v15[v20];
      v128 = (void (*)(char *, char *, uint64_t))v13;
      v21 = sub_2212F5058();
      v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v106(v122, v114, v21);
      v128(&v15[v19[6]], &v16[v19[6]], v12);
      *(_QWORD *)&v15[v19[7]] = *(_QWORD *)&v16[v19[7]];
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
      v15[*(int *)(v22 + 48)] = v16[*(int *)(v22 + 48)];
    }
    swift_storeEnumTagMultiPayload();
LABEL_14:
    a3 = v138;
LABEL_15:
    swift_storeEnumTagMultiPayload();
    v28 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    v29 = (_QWORD *)(a1 + v28);
    v30 = (_QWORD *)(a2 + v28);
    if (__swift_getEnumTagSinglePayload(a2 + v28, 1, v6))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      goto LABEL_28;
    }
    v32 = swift_getEnumCaseMultiPayload();
    if (v32 == 2)
    {
      v48 = sub_2212F5124();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v29, v30, v48);
      v49 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v29 + *(int *)(v49 + 20)) = *(_OWORD *)((char *)v30 + *(int *)(v49 + 20));
    }
    else if (v32 == 1)
    {
      *v29 = *v30;
      v29[1] = v30[1];
      v33 = _s22LocalizedPriceResourceVMa(0);
      v34 = *(int *)(v33 + 20);
      v134 = (char *)v29 + v34;
      v139 = v33;
      v130 = (char *)v30 + v34;
      v35 = sub_2212F5124();
      v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
      swift_bridgeObjectRetain();
      v38 = v130;
      v37 = v134;
      v131 = v36;
      v135 = v35;
      v36(v37, v38, v35);
      v39 = *(int *)(v139 + 24);
      v40 = (char *)v29 + v39;
      v41 = (char *)v30 + v39;
      v42 = _s22LocalizedPriceResourceV6FormatOMa(0);
      v43 = swift_getEnumCaseMultiPayload();
      if (v43 == 3)
      {
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
        v50 = (int *)_s15PricePropertiesVMa(0);
        v51 = v50[5];
        v109 = &v41[v51];
        v117 = &v40[v51];
        v52 = sub_2212F5058();
        v105 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v105(v117, v109, v52);
        v131(&v40[v50[6]], &v41[v50[6]], v135);
        *(_QWORD *)&v40[v50[7]] = *(_QWORD *)&v41[v50[7]];
      }
      else
      {
        if (v43 != 2)
        {
          memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
          goto LABEL_27;
        }
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
        v44 = (int *)_s15PricePropertiesVMa(0);
        v45 = v44[5];
        v108 = &v41[v45];
        v116 = &v40[v45];
        v46 = sub_2212F5058();
        v104 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        v104(v116, v108, v46);
        v131(&v40[v44[6]], &v41[v44[6]], v135);
        *(_QWORD *)&v40[v44[7]] = *(_QWORD *)&v41[v44[7]];
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
        v40[*(int *)(v47 + 48)] = v41[*(int *)(v47 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *v29 = *v30;
      v29[1] = v30[1];
      swift_bridgeObjectRetain();
    }
LABEL_27:
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v6);
LABEL_28:
    swift_storeEnumTagMultiPayload();
    v53 = *(int *)(a3 + 20);
    v54 = a1 + v53;
    v55 = a2 + v53;
    sub_221293198(a1 + v53);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *(_QWORD *)(v54 + 8) = *(_QWORD *)(v55 + 8);
      *(_BYTE *)(v54 + 16) = *(_BYTE *)(v55 + 16);
      *(_QWORD *)(v54 + 24) = *(_QWORD *)(v55 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_53:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v56 = _s11PriceStringOMa(0);
    v57 = swift_getEnumCaseMultiPayload();
    if (v57 == 2)
    {
      v73 = sub_2212F5124();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v54, v55, v73);
      v74 = _s20LocalizationResourceVMa();
      *(_OWORD *)(v54 + *(int *)(v74 + 20)) = *(_OWORD *)(v55 + *(int *)(v74 + 20));
      goto LABEL_40;
    }
    if (v57 != 1)
    {
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *(_QWORD *)(v54 + 8) = *(_QWORD *)(v55 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_40;
    }
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *(_QWORD *)(v54 + 8) = *(_QWORD *)(v55 + 8);
    v58 = _s22LocalizedPriceResourceVMa(0);
    v59 = *(int *)(v58 + 20);
    v60 = v54 + v59;
    v61 = v55 + v59;
    v62 = sub_2212F5124();
    v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
    swift_bridgeObjectRetain();
    v63(v60, v61, v62);
    v64 = *(int *)(v58 + 24);
    v65 = (char *)(v54 + v64);
    v66 = (char *)(v55 + v64);
    v67 = _s22LocalizedPriceResourceV6FormatOMa(0);
    v68 = swift_getEnumCaseMultiPayload();
    if (v68 == 3)
    {
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
      v133 = (void (*)(char *, char *, uint64_t))v63;
      v75 = (int *)_s15PricePropertiesVMa(0);
      v76 = v75[5];
      v119 = &v66[v76];
      v125 = &v65[v76];
      v77 = sub_2212F5058();
      v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
      swift_bridgeObjectRetain();
      v111(v125, v119, v77);
      v133(&v65[v75[6]], &v66[v75[6]], v62);
      *(_QWORD *)&v65[v75[7]] = *(_QWORD *)&v66[v75[7]];
    }
    else
    {
      if (v68 != 2)
      {
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
LABEL_40:
        swift_storeEnumTagMultiPayload();
        v78 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
        v79 = (_QWORD *)(v54 + v78);
        v80 = (_QWORD *)(v55 + v78);
        if (__swift_getEnumTagSinglePayload(v55 + v78, 1, v56))
        {
          v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
          memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
          goto LABEL_53;
        }
        v82 = swift_getEnumCaseMultiPayload();
        if (v82 == 2)
        {
          v98 = sub_2212F5124();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v79, v80, v98);
          v99 = _s20LocalizationResourceVMa();
          *(_OWORD *)((char *)v79 + *(int *)(v99 + 20)) = *(_OWORD *)((char *)v80 + *(int *)(v99 + 20));
        }
        else if (v82 == 1)
        {
          *v79 = *v80;
          v79[1] = v80[1];
          v83 = _s22LocalizedPriceResourceVMa(0);
          v84 = *(int *)(v83 + 20);
          v136 = (char *)v80 + v84;
          v140 = (char *)v79 + v84;
          v85 = sub_2212F5124();
          v86 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16);
          swift_bridgeObjectRetain();
          v88 = v136;
          v87 = v140;
          v137 = v86;
          v141 = v85;
          v86(v87, v88, v85);
          v89 = *(int *)(v83 + 24);
          v90 = (char *)v79 + v89;
          v91 = (char *)v80 + v89;
          v92 = _s22LocalizedPriceResourceV6FormatOMa(0);
          v93 = swift_getEnumCaseMultiPayload();
          if (v93 == 3)
          {
            *(_QWORD *)v90 = *(_QWORD *)v91;
            *((_QWORD *)v90 + 1) = *((_QWORD *)v91 + 1);
            v100 = (int *)_s15PricePropertiesVMa(0);
            v101 = v100[5];
            v121 = &v91[v101];
            v127 = &v90[v101];
            v102 = sub_2212F5058();
            v113 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16);
            swift_bridgeObjectRetain();
            v113(v127, v121, v102);
            v137(&v90[v100[6]], &v91[v100[6]], v141);
            *(_QWORD *)&v90[v100[7]] = *(_QWORD *)&v91[v100[7]];
          }
          else
          {
            if (v93 != 2)
            {
              memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
              goto LABEL_52;
            }
            *(_QWORD *)v90 = *(_QWORD *)v91;
            *((_QWORD *)v90 + 1) = *((_QWORD *)v91 + 1);
            v94 = (int *)_s15PricePropertiesVMa(0);
            v95 = v94[5];
            v120 = &v91[v95];
            v126 = &v90[v95];
            v96 = sub_2212F5058();
            v112 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 16);
            swift_bridgeObjectRetain();
            v112(v126, v120, v96);
            v137(&v90[v94[6]], &v91[v94[6]], v85);
            *(_QWORD *)&v90[v94[7]] = *(_QWORD *)&v91[v94[7]];
            v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
            v90[*(int *)(v97 + 48)] = v91[*(int *)(v97 + 48)];
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          *v79 = *v80;
          v79[1] = v80[1];
          swift_bridgeObjectRetain();
        }
LABEL_52:
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v56);
        goto LABEL_53;
      }
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
      v69 = (int *)_s15PricePropertiesVMa(0);
      v70 = v69[5];
      v118 = &v66[v70];
      v124 = &v65[v70];
      v132 = (void (*)(char *, char *, uint64_t))v63;
      v71 = sub_2212F5058();
      v110 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
      swift_bridgeObjectRetain();
      v110(v124, v118, v71);
      v132(&v65[v69[6]], &v66[v69[6]], v62);
      *(_QWORD *)&v65[v69[7]] = *(_QWORD *)&v66[v69[7]];
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
      v65[*(int *)(v72 + 48)] = v66[*(int *)(v72 + 48)];
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_40;
  }
  return a1;
}

uint64_t sub_221293198(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_2212931D4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *);
  uint64_t v42;
  _OWORD *v43;
  _OWORD *v44;
  uint64_t v45;
  int v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  _OWORD *v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  int v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD *v82;
  _OWORD *v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  int v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  uint64_t v103;
  uint64_t v104;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(char *, char *, uint64_t);
  void (*v127)(char *, char *, uint64_t);
  void (*v128)(char *, char *, uint64_t);

  v6 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    goto LABEL_30;
  }
  v7 = _s11PriceStringOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v25 = sub_2212F5124();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
    v26 = _s20LocalizationResourceVMa();
    *(_OWORD *)((char *)a1 + *(int *)(v26 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v26 + 20));
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      goto LABEL_14;
    }
    *a1 = *a2;
    v9 = _s22LocalizedPriceResourceVMa(0);
    v10 = *(int *)(v9 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2212F5124();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
    v14(v11, v12, v13);
    v15 = *(int *)(v9 + 24);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = _s22LocalizedPriceResourceV6FormatOMa(0);
    v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 3)
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
      v124 = a3;
      v27 = (int *)_s15PricePropertiesVMa(0);
      v28 = v27[5];
      v109 = &v17[v28];
      v117 = &v16[v28];
      v29 = sub_2212F5058();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v117, v109, v29);
      v14(&v16[v27[6]], &v17[v27[6]], v13);
      v30 = v27[7];
      a3 = v124;
      *(_QWORD *)&v16[v30] = *(_QWORD *)&v17[v30];
    }
    else
    {
      if (v19 != 2)
      {
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        goto LABEL_13;
      }
      *(_OWORD *)v16 = *(_OWORD *)v17;
      v123 = a3;
      v20 = (int *)_s15PricePropertiesVMa(0);
      v21 = v20[5];
      v108 = &v17[v21];
      v116 = &v16[v21];
      v22 = sub_2212F5058();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v116, v108, v22);
      v14(&v16[v20[6]], &v17[v20[6]], v13);
      v23 = v20[7];
      a3 = v123;
      *(_QWORD *)&v16[v23] = *(_QWORD *)&v17[v23];
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
      v16[*(int *)(v24 + 48)] = v17[*(int *)(v24 + 48)];
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_13:
  swift_storeEnumTagMultiPayload();
LABEL_14:
  v31 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
  v32 = (_OWORD *)((char *)a1 + v31);
  v33 = (_OWORD *)((char *)a2 + v31);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2 + v31, 1, v7))
  {
    v35 = swift_getEnumCaseMultiPayload();
    if (v35 == 2)
    {
      v51 = sub_2212F5124();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v32, v33, v51);
      v52 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v32 + *(int *)(v52 + 20)) = *(_OWORD *)((char *)v33 + *(int *)(v52 + 20));
LABEL_27:
      swift_storeEnumTagMultiPayload();
      goto LABEL_28;
    }
    if (v35 != 1)
    {
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_28:
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v7);
      goto LABEL_29;
    }
    v125 = a3;
    *v32 = *v33;
    v36 = _s22LocalizedPriceResourceVMa(0);
    v37 = *(int *)(v36 + 20);
    v38 = (char *)v32 + v37;
    v39 = (char *)v33 + v37;
    v40 = sub_2212F5124();
    v41 = *(void (**)(char *, char *))(*(_QWORD *)(v40 - 8) + 32);
    v118 = v40;
    v41(v38, v39);
    v42 = *(int *)(v36 + 24);
    v43 = (_OWORD *)((char *)v32 + v42);
    v44 = (_OWORD *)((char *)v33 + v42);
    v45 = _s22LocalizedPriceResourceV6FormatOMa(0);
    v46 = swift_getEnumCaseMultiPayload();
    if (v46 == 3)
    {
      *v43 = *v44;
      v53 = (int *)_s15PricePropertiesVMa(0);
      v54 = v53[5];
      v107 = (char *)v44 + v54;
      v111 = (char *)v43 + v54;
      v55 = sub_2212F5058();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v111, v107, v55);
      ((void (*)(char *, char *, uint64_t))v41)((char *)v43 + v53[6], (char *)v44 + v53[6], v118);
      *(_QWORD *)((char *)v43 + v53[7]) = *(_QWORD *)((char *)v44 + v53[7]);
    }
    else
    {
      if (v46 != 2)
      {
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        goto LABEL_26;
      }
      *v43 = *v44;
      v47 = (int *)_s15PricePropertiesVMa(0);
      v48 = v47[5];
      v106 = (char *)v44 + v48;
      v110 = (char *)v43 + v48;
      v49 = sub_2212F5058();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v110, v106, v49);
      ((void (*)(char *, char *, uint64_t))v41)((char *)v43 + v47[6], (char *)v44 + v47[6], v118);
      *(_QWORD *)((char *)v43 + v47[7]) = *(_QWORD *)((char *)v44 + v47[7]);
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
      *((_BYTE *)v43 + *(int *)(v50 + 48)) = *((_BYTE *)v44 + *(int *)(v50 + 48));
    }
    swift_storeEnumTagMultiPayload();
LABEL_26:
    a3 = v125;
    goto LABEL_27;
  }
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
  memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
LABEL_29:
  swift_storeEnumTagMultiPayload();
LABEL_30:
  v56 = *(int *)(a3 + 20);
  v57 = (_OWORD *)((char *)a1 + v56);
  v58 = (_OWORD *)((char *)a2 + v56);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v59 = _s11PriceStringOMa(0);
    v60 = swift_getEnumCaseMultiPayload();
    if (v60 == 2)
    {
      v76 = sub_2212F5124();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v57, v58, v76);
      v77 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v57 + *(int *)(v77 + 20)) = *(_OWORD *)((char *)v58 + *(int *)(v77 + 20));
    }
    else
    {
      if (v60 != 1)
      {
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        goto LABEL_43;
      }
      *v57 = *v58;
      v61 = _s22LocalizedPriceResourceVMa(0);
      v62 = *(int *)(v61 + 20);
      v63 = (char *)v57 + v62;
      v64 = (char *)v58 + v62;
      v65 = sub_2212F5124();
      v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32);
      v66(v63, v64, v65);
      v67 = *(int *)(v61 + 24);
      v68 = (char *)v57 + v67;
      v69 = (char *)v58 + v67;
      v70 = _s22LocalizedPriceResourceV6FormatOMa(0);
      v71 = swift_getEnumCaseMultiPayload();
      if (v71 == 3)
      {
        *(_OWORD *)v68 = *(_OWORD *)v69;
        v127 = v66;
        v78 = (int *)_s15PricePropertiesVMa(0);
        v79 = v78[5];
        v113 = &v69[v79];
        v120 = &v68[v79];
        v80 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v120, v113, v80);
        v127(&v68[v78[6]], &v69[v78[6]], v65);
        *(_QWORD *)&v68[v78[7]] = *(_QWORD *)&v69[v78[7]];
      }
      else
      {
        if (v71 != 2)
        {
          memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
          goto LABEL_42;
        }
        *(_OWORD *)v68 = *(_OWORD *)v69;
        v126 = v66;
        v72 = (int *)_s15PricePropertiesVMa(0);
        v73 = v72[5];
        v112 = &v69[v73];
        v119 = &v68[v73];
        v74 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v119, v112, v74);
        v126(&v68[v72[6]], &v69[v72[6]], v65);
        *(_QWORD *)&v68[v72[7]] = *(_QWORD *)&v69[v72[7]];
        v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
        v68[*(int *)(v75 + 48)] = v69[*(int *)(v75 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_42:
    swift_storeEnumTagMultiPayload();
LABEL_43:
    v81 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    v82 = (_OWORD *)((char *)v57 + v81);
    v83 = (_OWORD *)((char *)v58 + v81);
    if (__swift_getEnumTagSinglePayload((uint64_t)v58 + v81, 1, v59))
    {
      v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
      memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
LABEL_57:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v85 = swift_getEnumCaseMultiPayload();
    if (v85 == 2)
    {
      v100 = sub_2212F5124();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v82, v83, v100);
      v101 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v82 + *(int *)(v101 + 20)) = *(_OWORD *)((char *)v83 + *(int *)(v101 + 20));
    }
    else
    {
      if (v85 != 1)
      {
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
LABEL_56:
        __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v59);
        goto LABEL_57;
      }
      *v82 = *v83;
      v86 = _s22LocalizedPriceResourceVMa(0);
      v87 = *(int *)(v86 + 20);
      v88 = (char *)v82 + v87;
      v89 = (char *)v83 + v87;
      v90 = sub_2212F5124();
      v128 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32);
      v128(v88, v89, v90);
      v91 = *(int *)(v86 + 24);
      v92 = (char *)v82 + v91;
      v93 = (char *)v83 + v91;
      v94 = _s22LocalizedPriceResourceV6FormatOMa(0);
      v95 = swift_getEnumCaseMultiPayload();
      if (v95 == 3)
      {
        *(_OWORD *)v92 = *(_OWORD *)v93;
        v102 = (int *)_s15PricePropertiesVMa(0);
        v103 = v102[5];
        v115 = &v93[v103];
        v122 = &v92[v103];
        v104 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v122, v115, v104);
        v128(&v92[v102[6]], &v93[v102[6]], v90);
        *(_QWORD *)&v92[v102[7]] = *(_QWORD *)&v93[v102[7]];
      }
      else
      {
        if (v95 != 2)
        {
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
          goto LABEL_55;
        }
        *(_OWORD *)v92 = *(_OWORD *)v93;
        v96 = (int *)_s15PricePropertiesVMa(0);
        v97 = v96[5];
        v114 = &v93[v97];
        v121 = &v92[v97];
        v98 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v121, v114, v98);
        v128(&v92[v96[6]], &v93[v96[6]], v90);
        *(_QWORD *)&v92[v96[7]] = *(_QWORD *)&v93[v96[7]];
        v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
        v92[*(int *)(v99 + 48)] = v93[*(int *)(v99 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_55:
    swift_storeEnumTagMultiPayload();
    goto LABEL_56;
  }
  memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  return a1;
}

_OWORD *sub_221293C00(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  int v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  _OWORD *v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  int v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD *v79;
  _OWORD *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  int v92;
  int *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  uint64_t v101;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  void (*v115)(char *, char *);
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  void (*v120)(char *, char *, uint64_t);
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  void (*v123)(char *, char *, uint64_t);
  void (*v124)(char *, char *, uint64_t);
  void (*v125)(char *, char *, uint64_t);

  if (a1 == a2)
    return a1;
  sub_221293198((uint64_t)a1);
  v6 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = _s11PriceStringOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v24 = sub_2212F5124();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
      v25 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)a1 + *(int *)(v25 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v25 + 20));
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_15;
      }
      *a1 = *a2;
      v9 = _s22LocalizedPriceResourceVMa(0);
      v10 = *(int *)(v9 + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2212F5124();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
      v14(v11, v12, v13);
      v15 = *(int *)(v9 + 24);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = _s22LocalizedPriceResourceV6FormatOMa(0);
      v19 = swift_getEnumCaseMultiPayload();
      if (v19 == 3)
      {
        *(_OWORD *)v16 = *(_OWORD *)v17;
        v121 = v14;
        v26 = (int *)_s15PricePropertiesVMa(0);
        v27 = v26[5];
        v106 = &v17[v27];
        v114 = &v16[v27];
        v28 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v114, v106, v28);
        v121(&v16[v26[6]], &v17[v26[6]], v13);
        *(_QWORD *)&v16[v26[7]] = *(_QWORD *)&v17[v26[7]];
      }
      else
      {
        if (v19 != 2)
        {
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          goto LABEL_14;
        }
        *(_OWORD *)v16 = *(_OWORD *)v17;
        v120 = v14;
        v20 = (int *)_s15PricePropertiesVMa(0);
        v21 = v20[5];
        v105 = &v17[v21];
        v113 = &v16[v21];
        v22 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v113, v105, v22);
        v120(&v16[v20[6]], &v17[v20[6]], v13);
        *(_QWORD *)&v16[v20[7]] = *(_QWORD *)&v17[v20[7]];
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
        v16[*(int *)(v23 + 48)] = v17[*(int *)(v23 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_14:
    swift_storeEnumTagMultiPayload();
LABEL_15:
    v29 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    v30 = (_OWORD *)((char *)a1 + v29);
    v31 = (_OWORD *)((char *)a2 + v29);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v29, 1, v7))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
LABEL_29:
      swift_storeEnumTagMultiPayload();
      goto LABEL_30;
    }
    v33 = swift_getEnumCaseMultiPayload();
    if (v33 == 2)
    {
      v48 = sub_2212F5124();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v30, v31, v48);
      v49 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v30 + *(int *)(v49 + 20)) = *(_OWORD *)((char *)v31 + *(int *)(v49 + 20));
    }
    else
    {
      if (v33 != 1)
      {
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_28:
        __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v7);
        goto LABEL_29;
      }
      *v30 = *v31;
      v34 = _s22LocalizedPriceResourceVMa(0);
      v35 = *(int *)(v34 + 20);
      v36 = (char *)v30 + v35;
      v37 = (char *)v31 + v35;
      v38 = sub_2212F5124();
      v115 = *(void (**)(char *, char *))(*(_QWORD *)(v38 - 8) + 32);
      v122 = v38;
      v115(v36, v37);
      v39 = *(int *)(v34 + 24);
      v40 = (_OWORD *)((char *)v30 + v39);
      v41 = (_OWORD *)((char *)v31 + v39);
      v42 = _s22LocalizedPriceResourceV6FormatOMa(0);
      v43 = swift_getEnumCaseMultiPayload();
      if (v43 == 3)
      {
        *v40 = *v41;
        v50 = (int *)_s15PricePropertiesVMa(0);
        v51 = v50[5];
        v104 = (char *)v41 + v51;
        v108 = (char *)v40 + v51;
        v52 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v108, v104, v52);
        ((void (*)(char *, char *, uint64_t))v115)((char *)v40 + v50[6], (char *)v41 + v50[6], v122);
        *(_QWORD *)((char *)v40 + v50[7]) = *(_QWORD *)((char *)v41 + v50[7]);
      }
      else
      {
        if (v43 != 2)
        {
          memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
          goto LABEL_27;
        }
        *v40 = *v41;
        v44 = (int *)_s15PricePropertiesVMa(0);
        v45 = v44[5];
        v103 = (char *)v41 + v45;
        v107 = (char *)v40 + v45;
        v46 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v107, v103, v46);
        ((void (*)(char *, char *, uint64_t))v115)((char *)v40 + v44[6], (char *)v41 + v44[6], v122);
        *(_QWORD *)((char *)v40 + v44[7]) = *(_QWORD *)((char *)v41 + v44[7]);
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
        *((_BYTE *)v40 + *(int *)(v47 + 48)) = *((_BYTE *)v41 + *(int *)(v47 + 48));
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_27:
    swift_storeEnumTagMultiPayload();
    goto LABEL_28;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_30:
  v53 = *(int *)(a3 + 20);
  v54 = (_OWORD *)((char *)a1 + v53);
  v55 = (_OWORD *)((char *)a2 + v53);
  sub_221293198((uint64_t)a1 + v53);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v56 = _s11PriceStringOMa(0);
    v57 = swift_getEnumCaseMultiPayload();
    if (v57 == 2)
    {
      v73 = sub_2212F5124();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v54, v55, v73);
      v74 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v54 + *(int *)(v74 + 20)) = *(_OWORD *)((char *)v55 + *(int *)(v74 + 20));
    }
    else
    {
      if (v57 != 1)
      {
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        goto LABEL_43;
      }
      *v54 = *v55;
      v58 = _s22LocalizedPriceResourceVMa(0);
      v59 = *(int *)(v58 + 20);
      v60 = (char *)v54 + v59;
      v61 = (char *)v55 + v59;
      v62 = sub_2212F5124();
      v63 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32);
      v63(v60, v61, v62);
      v64 = *(int *)(v58 + 24);
      v65 = (char *)v54 + v64;
      v66 = (char *)v55 + v64;
      v67 = _s22LocalizedPriceResourceV6FormatOMa(0);
      v68 = swift_getEnumCaseMultiPayload();
      if (v68 == 3)
      {
        *(_OWORD *)v65 = *(_OWORD *)v66;
        v124 = v63;
        v75 = (int *)_s15PricePropertiesVMa(0);
        v76 = v75[5];
        v110 = &v66[v76];
        v117 = &v65[v76];
        v77 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v117, v110, v77);
        v124(&v65[v75[6]], &v66[v75[6]], v62);
        *(_QWORD *)&v65[v75[7]] = *(_QWORD *)&v66[v75[7]];
      }
      else
      {
        if (v68 != 2)
        {
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
          goto LABEL_42;
        }
        *(_OWORD *)v65 = *(_OWORD *)v66;
        v123 = v63;
        v69 = (int *)_s15PricePropertiesVMa(0);
        v70 = v69[5];
        v109 = &v66[v70];
        v116 = &v65[v70];
        v71 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v116, v109, v71);
        v123(&v65[v69[6]], &v66[v69[6]], v62);
        *(_QWORD *)&v65[v69[7]] = *(_QWORD *)&v66[v69[7]];
        v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
        v65[*(int *)(v72 + 48)] = v66[*(int *)(v72 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_42:
    swift_storeEnumTagMultiPayload();
LABEL_43:
    v78 = *(int *)(type metadata accessor for SubscriptionStoreCopyWriter.AccessibilityPair(0) + 20);
    v79 = (_OWORD *)((char *)v54 + v78);
    v80 = (_OWORD *)((char *)v55 + v78);
    if (__swift_getEnumTagSinglePayload((uint64_t)v55 + v78, 1, v56))
    {
      v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657210);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
LABEL_57:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v82 = swift_getEnumCaseMultiPayload();
    if (v82 == 2)
    {
      v97 = sub_2212F5124();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v79, v80, v97);
      v98 = _s20LocalizationResourceVMa();
      *(_OWORD *)((char *)v79 + *(int *)(v98 + 20)) = *(_OWORD *)((char *)v80 + *(int *)(v98 + 20));
    }
    else
    {
      if (v82 != 1)
      {
        memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
LABEL_56:
        __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v56);
        goto LABEL_57;
      }
      *v79 = *v80;
      v83 = _s22LocalizedPriceResourceVMa(0);
      v84 = *(int *)(v83 + 20);
      v85 = (char *)v79 + v84;
      v86 = (char *)v80 + v84;
      v87 = sub_2212F5124();
      v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32);
      v125(v85, v86, v87);
      v88 = *(int *)(v83 + 24);
      v89 = (char *)v79 + v88;
      v90 = (char *)v80 + v88;
      v91 = _s22LocalizedPriceResourceV6FormatOMa(0);
      v92 = swift_getEnumCaseMultiPayload();
      if (v92 == 3)
      {
        *(_OWORD *)v89 = *(_OWORD *)v90;
        v99 = (int *)_s15PricePropertiesVMa(0);
        v100 = v99[5];
        v112 = &v90[v100];
        v119 = &v89[v100];
        v101 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 32))(v119, v112, v101);
        v125(&v89[v99[6]], &v90[v99[6]], v87);
        *(_QWORD *)&v89[v99[7]] = *(_QWORD *)&v90[v99[7]];
      }
      else
      {
        if (v92 != 2)
        {
          memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
          goto LABEL_55;
        }
        *(_OWORD *)v89 = *(_OWORD *)v90;
        v93 = (int *)_s15PricePropertiesVMa(0);
        v94 = v93[5];
        v111 = &v90[v94];
        v118 = &v89[v94];
        v95 = sub_2212F5058();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 32))(v118, v111, v95);
        v125(&v89[v93[6]], &v90[v93[6]], v87);
        *(_QWORD *)&v89[v93[7]] = *(_QWORD *)&v90[v93[7]];
        v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657208);
        v89[*(int *)(v96 + 48)] = v90[*(int *)(v96 + 48)];
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_55:
    swift_storeEnumTagMultiPayload();
    goto LABEL_56;
  }
  memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  return a1;
}

uint64_t sub_22129463C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_221294648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_64();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t sub_221294670()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22129467C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_64();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t type metadata accessor for MultilineButtonLabel()
{
  uint64_t result;

  result = qword_255666B48;
  if (!qword_255666B48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2212946E0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_221294748()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_221294758@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_2212F38E8();
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666B80);
  return sub_2212947A0(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_2212947A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v44 = a1;
  v47 = a2;
  v3 = type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666B88);
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666B90);
  MEMORY[0x24BDAC7A8](v43);
  v41 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v42 = (uint64_t)&v41 - v11;
  sub_22128AB4C(a1, (uint64_t)v5);
  v12 = sub_221277D38((uint64_t)v5);
  v14 = v13;
  v16 = v15;
  v18 = v17 & 1;
  KeyPath = swift_getKeyPath();
  v48 = v12;
  v49 = v14;
  v50 = v18;
  v51 = v16;
  v52 = KeyPath;
  v53 = 1;
  v54 = 0;
  sub_2212F3F9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255666B98);
  sub_221294AEC();
  sub_2212F4140();
  sub_221036880(v12, v14, v18);
  swift_release();
  swift_bridgeObjectRelease();
  v20 = sub_2212F3F48();
  v21 = swift_getKeyPath();
  v23 = v45;
  v22 = v46;
  v24 = (uint64_t)v41;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v41, v8, v46);
  v25 = (uint64_t *)(v24 + *(int *)(v43 + 36));
  *v25 = v21;
  v25[1] = v20;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
  v26 = v42;
  sub_221294B78(v24, v42);
  v27 = type metadata accessor for MultilineButtonLabel();
  sub_22128AB4C(v44 + *(int *)(v27 + 20), (uint64_t)v5);
  v28 = sub_221277D38((uint64_t)v5);
  v30 = v29;
  v32 = v31;
  LOBYTE(v8) = v33 & 1;
  v34 = swift_getKeyPath();
  v35 = sub_2212F3FFC();
  v36 = swift_getKeyPath();
  v37 = v26;
  sub_221294BC0(v26, v24);
  v38 = v47;
  sub_221294BC0(v24, v47);
  v39 = v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255666BA8) + 48);
  *(_QWORD *)v39 = v28;
  *(_QWORD *)(v39 + 8) = v30;
  *(_BYTE *)(v39 + 16) = (_BYTE)v8;
  *(_QWORD *)(v39 + 24) = v32;
  *(_QWORD *)(v39 + 32) = v34;
  *(_QWORD *)(v39 + 40) = 1;
  *(_BYTE *)(v39 + 48) = 0;
  *(_QWORD *)(v39 + 56) = v36;
  *(_QWORD *)(v39 + 64) = v35;
  sub_221017C14(v28, v30, (char)v8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_221294C08(v37);
  sub_221036880(v28, v30, (char)v8);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_221294C08(v24);
}

unint64_t sub_221294AEC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255666BA0;
  if (!qword_255666BA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666B98);
    v2 = sub_221018504(&qword_25565CFC0, &qword_25565CFC8, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255666BA0);
  }
  return result;
}

uint64_t sub_221294B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_221294BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_221294C08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666B90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_221294C48()
{
  return sub_221018504(&qword_255666BB0, qword_255666BB8, MEMORY[0x24BDF4700]);
}

uint64_t OUTLINED_FUNCTION_0_64()
{
  return type metadata accessor for SubscriptionStoreCopyWriter.StringKeyOrResource(0);
}

void sub_221294C84()
{
  qword_25568D138 = (uint64_t)&unk_24E6F0DC8;
}

uint64_t sub_221294C98()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  void *v35;
  unint64_t v37;

  v2 = *(_QWORD *)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  v4 = *(unsigned __int8 *)(v0 + 17);
  v5 = *(unsigned __int8 *)(v0 + 18);
  v6 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(v6, sel_mainBundle);
  v8 = objc_msgSend(v7, sel_bundleIdentifier);

  if (v8)
  {
    v9 = sub_2212F537C();
    v11 = v10;

    sub_22108CF9C(v9, v11);
    v12 = v3;
    v14 = v13;
    v37 = v1;
    v15 = v4;
    v17 = v16;
    swift_bridgeObjectRelease();
    v18 = sub_2212F2AA8();
    v20 = v19;
    v21 = v14;
    v3 = v12;
    v22 = v17;
    v4 = v15;
    v1 = v37;
    sub_221054AE8(v21, v22);
  }
  else
  {
    v18 = 0;
    v20 = 0xE000000000000000;
  }
  v23 = sub_2212251F8(v18, v20);
  swift_bridgeObjectRelease();
  sub_22111EE14(v0);
  if ((v23 & 1) != 0)
    return 0;
  sub_2212B4A98(v2, v1, v3 | (v4 << 8) | (v5 << 16));
  if (!v24)
    return 0;
  v25 = v24;
  v26 = sub_2212B4D14();
  if (!v26)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v27 = sub_2211D2818((uint64_t)v26, v25, 1);
  if (qword_255655DB0 != -1)
    swift_once();
  v28 = *(_QWORD *)(qword_25568D138 + 16);
  if (v28)
  {
    v29 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      v31 = *(v29 - 1);
      v30 = *v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32 = sub_2211D351C(v31, v30);
      v34 = v33;
      swift_bridgeObjectRelease();
      if ((v34 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&qword_255657FF8);
        sub_2212F5AA8();
        swift_bridgeObjectRelease();
        v35 = *(void **)(*(_QWORD *)(v27 + 56) + 8 * v32);
        sub_221054AAC();
        sub_2212F5AC0();
        swift_bridgeObjectRelease();

      }
      swift_bridgeObjectRelease();
      v29 += 2;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
  }
  return v27;
}

uint64_t initializeWithCopy for StoreViewAppearanceEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 55) = *(_DWORD *)(a2 + 55);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StoreViewAppearanceEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  return a1;
}

__n128 __swift_memcpy59_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 43) = *(_OWORD *)(a2 + 43);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for StoreViewAppearanceEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreViewAppearanceEvent(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 59))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreViewAppearanceEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 58) = 0;
    *(_WORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 59) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 59) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreViewAppearanceEvent()
{
  return &type metadata for StoreViewAppearanceEvent;
}

uint64_t sub_2212951D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD v5[2];

  v3 = *(_QWORD *)(*(_QWORD *)(a3 - 16) + 8);
  v5[0] = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  v5[1] = v3;
  return MEMORY[0x22766BAC4](&unk_221316F68, a1, v5);
}

uint64_t sub_221295210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if ((sub_2212F52D4() & 1) == 0)
    return 0;
  type metadata accessor for Pair(0, a3, a4, v6);
  return sub_2212F52D4() & 1;
}

uint64_t sub_221295290()
{
  sub_2212F5238();
  return sub_2212F5238();
}

uint64_t sub_2212952DC()
{
  sub_2212F5DD8();
  sub_221295290();
  return sub_2212F5E08();
}

uint64_t sub_221295338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_221295210(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_221295348()
{
  return sub_2212952DC();
}

uint64_t sub_221295354()
{
  return sub_221295290();
}

uint64_t sub_221295360()
{
  sub_2212F5DD8();
  sub_221295290();
  return sub_2212F5E08();
}

uint64_t type metadata accessor for Pair(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Pair);
}

uint64_t sub_2212953C0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_22129544C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_221295528 + 4 * byte_221316F00[v21 - 1]))();
}

void sub_22129559C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t *sub_221295790(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2212F51B4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
  }
  return a1;
}

uint64_t sub_221295840(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2212F51B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_221295874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  return a1;
}

uint64_t sub_2212958F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  return a1;
}

uint64_t sub_221295980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  return a1;
}

uint64_t sub_221295A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  return a1;
}

uint64_t sub_221295A88()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_221295A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;
  int v9;

  v6 = OUTLINED_FUNCTION_14_9();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 2)
    v9 = ((v8 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v9 = -2;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_221295B28()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_221295B34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_14_9();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = a2 + 2;
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t type metadata accessor for Subscription()
{
  uint64_t result;

  result = qword_255666C98;
  if (!qword_255666C98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_221295BD8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F51B4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for Subscription.ID(uint64_t a1)
{
  return sub_221015344(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s17_StoreKit_SwiftUI12SubscriptionV2IDOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22103D94C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Subscription.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_22103D94C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_221015344(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Subscription.ID(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_221015344(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Subscription.ID(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Subscription.ID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_221295DCC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_221295DD4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Subscription.ID()
{
  return &type metadata for Subscription.ID;
}

uint64_t sub_221295DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  OUTLINED_FUNCTION_18_0();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_15();
  v3 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 20) + 8);
  sub_221199550(v0, v0);
  if (v3 == 2)
    _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
  sub_22105B020(v0);
  return OUTLINED_FUNCTION_6_41();
}

uint64_t sub_221295E7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = OUTLINED_FUNCTION_14_9();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_13_0();
  v12 = v11 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656318);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_13_0();
  v16 = v15 - v14;
  sub_2212F4E3C();
  v17 = OUTLINED_FUNCTION_13_11();
  if (__swift_getEnumTagSinglePayload(v16, 1, v17) == 1)
  {
    OUTLINED_FUNCTION_10_42();
    v18 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_10_42();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
    sub_221295FF8(v12, a2, a3 & 1, a4);
    v18 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  v19 = OUTLINED_FUNCTION_18_0();
  return __swift_storeEnumTagSinglePayload(a4, v18, 1, v19);
}

uint64_t sub_221295FA0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) != 0)
    {
      if (a1 == a4 && a2 == a5)
        return 1;
      else
        return sub_2212F5CDC();
    }
    else
    {
      return 0;
    }
  }
  else if ((a6 & 1) != 0)
  {
    return 0;
  }
  else
  {
    return (a1 == a4) & (((a2 & 1) == 0) ^ a5);
  }
}

uint64_t sub_221295FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  int EnumTagSinglePayload;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  uint64_t v25;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255656318);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_13_0();
  v11 = v10 - v9;
  v12 = OUTLINED_FUNCTION_14_9();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_15();
  v14 = OUTLINED_FUNCTION_18_0();
  v15 = a4 + *(int *)(v14 + 24);
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  OUTLINED_FUNCTION_14_40(v4);
  sub_2212F4E3C();
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(v4, v12);
  v17 = OUTLINED_FUNCTION_13_11();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v11, 1, v17);
  result = sub_221236D9C(v11);
  if (EnumTagSinglePayload == 1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_14_40(a4);
    v20 = sub_2212F5178();
    v22 = sub_22115286C(v20, v21);
    v24 = v23;
    result = ((uint64_t (*)(uint64_t, uint64_t))v16)(a1, v12);
    v25 = a4 + *(int *)(v14 + 20);
    *(_QWORD *)v25 = v22;
    *(_BYTE *)(v25 + 8) = v24;
    *(_QWORD *)v15 = a2;
    *(_BYTE *)(v15 + 8) = a3 & 1;
  }
  return result;
}

uint64_t sub_221296148()
{
  sub_2212F5DFC();
  return sub_2212F5DF0();
}

uint64_t sub_221296178(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (a1 == a3) & (a2 ^ a4 ^ 1u);
}

void sub_221296190()
{
  OUTLINED_FUNCTION_32_9();
  sub_2212F5DFC();
  sub_2212F5DF0();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_0_21();
}

void sub_2212961D4()
{
  sub_221296190();
}

uint64_t sub_2212961E0()
{
  return sub_221296148();
}

uint64_t sub_2212961EC()
{
  sub_2212F5DD8();
  sub_2212F5DFC();
  sub_2212F5DF0();
  return sub_2212F5E08();
}

uint64_t sub_221296244(uint64_t a1, uint64_t a2)
{
  return sub_221296178(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_QWORD *)a2, *(unsigned __int8 *)(a2 + 8));
}

uint64_t sub_221296260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;

  v4 = OUTLINED_FUNCTION_13_11();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v61 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v68 = (char *)&v61 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656318);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v61 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v61 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v61 - v23;
  v25 = *(int *)(OUTLINED_FUNCTION_18_0() + 24);
  v26 = (_QWORD *)(a1 + v25);
  if ((*(_BYTE *)(a1 + v25 + 8) & 1) == 0)
  {
    v27 = a2 + v25;
    if ((*(_BYTE *)(v27 + 8) & 1) == 0 && *v26 == *(_QWORD *)v27)
    {
      sub_221295DF0();
      v28 = sub_221295DF0();
      v30 = v29;
      v32 = v31 & 1;
      v33 = OUTLINED_FUNCTION_6_41();
      v36 = sub_221295FA0(v33, v34, v35, v28, v30, v32);
      sub_221015344(v28, v30, v32);
      v37 = OUTLINED_FUNCTION_6_41();
      sub_221015344(v37, v38, v39);
      return v36 & 1;
    }
  }
  v61 = v18;
  v62 = v15;
  v64 = v10;
  v65 = v7;
  v66 = v5;
  v67 = v4;
  v41 = sub_221295DF0();
  v43 = v42;
  v45 = v44 & 1;
  v63 = a2;
  v46 = sub_221295DF0();
  v48 = v47;
  v50 = v49 & 1;
  v51 = sub_221295FA0(v41, v43, v45, v46, v47, v49 & 1);
  sub_221015344(v46, v48, v50);
  sub_221015344(v41, v43, v45);
  if ((v51 & 1) == 0)
  {
    v58 = 0;
    return v58 & 1;
  }
  sub_2212F4E3C();
  sub_221152B64((uint64_t)v24, (uint64_t)v21);
  v52 = v67;
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v67) == 1)
  {
    v60 = (uint64_t)v21;
LABEL_14:
    result = sub_221236D9C(v60);
    __break(1u);
    return result;
  }
  v53 = v66;
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v68, v21, v52);
  sub_221236D9C((uint64_t)v24);
  v54 = (uint64_t)v64;
  OUTLINED_FUNCTION_11_50((uint64_t)v64);
  v55 = (uint64_t)v61;
  sub_2212F4E3C();
  v56 = (uint64_t)v62;
  sub_221152B64(v55, (uint64_t)v62);
  if (__swift_getEnumTagSinglePayload(v56, 1, v52) == 1)
  {
    v60 = v56;
    goto LABEL_14;
  }
  v57 = (uint64_t)v65;
  OUTLINED_FUNCTION_11_50((uint64_t)v65);
  OUTLINED_FUNCTION_10_42();
  v58 = sub_2212F4F80();
  v59 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v59(v57, v52);
  v59(v54, v52);
  return v58 & 1;
}

uint64_t sub_2212965A0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_9();
  sub_22108DF44((unint64_t *)&qword_255661B88, (uint64_t (*)(uint64_t))MEMORY[0x24BDEA690], MEMORY[0x24BDEA6A0]);
  sub_2212F5238();
  v1 = OUTLINED_FUNCTION_18_0();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 20) + 8) != 2)
  {
    OUTLINED_FUNCTION_97_4();
    sub_2212F5DFC();
  }
  OUTLINED_FUNCTION_97_4();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 24) + 8) == 1)
    return OUTLINED_FUNCTION_97_4();
  OUTLINED_FUNCTION_97_4();
  return sub_2212F5DE4();
}

uint64_t sub_22129667C()
{
  OUTLINED_FUNCTION_32_9();
  sub_2212965A0();
  return OUTLINED_FUNCTION_68_0();
}

void sub_2212966AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {
    sub_2212F5DE4();
    sub_2212F53DC();
  }
  else
  {
    sub_2212F5DE4();
    sub_2212F5DFC();
    sub_2212F5DF0();
    OUTLINED_FUNCTION_17_0();
  }
}

void sub_221296710(uint64_t a1, uint64_t a2, char a3)
{
  char v5;
  _BYTE v6[72];

  v5 = a3 & 1;
  OUTLINED_FUNCTION_32_9();
  sub_2212966AC((uint64_t)v6, a1, a2, v5);
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_0_21();
}

uint64_t sub_221296760()
{
  sub_2212F5DD8();
  sub_2212965A0();
  return sub_2212F5E08();
}

void sub_221296798()
{
  uint64_t v0;

  sub_221296710(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_2212967A4(uint64_t a1)
{
  uint64_t v1;

  sub_2212966AC(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

void sub_2212967B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_2212F5DD8();
  sub_2212966AC((uint64_t)v4, v1, v2, v3);
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_0_21();
}

uint64_t sub_2212967F4(uint64_t a1, uint64_t a2)
{
  return sub_221295FA0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_221296814@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  result = sub_221295DF0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_221296840()
{
  return sub_22108DF44((unint64_t *)&qword_2556608D8, (uint64_t (*)(uint64_t))type metadata accessor for Subscription, (uint64_t)&unk_221317114);
}

uint64_t getEnumTagSinglePayload for Subscription.CompactID(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Subscription.CompactID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Subscription.CompactID()
{
  return &type metadata for Subscription.CompactID;
}

unint64_t sub_221296910()
{
  unint64_t result;

  result = qword_255666CD8[0];
  if (!qword_255666CD8[0])
  {
    result = MEMORY[0x22766BAC4](&unk_221317148, &type metadata for Subscription.CompactID);
    atomic_store(result, qword_255666CD8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_6_41()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_10_42()
{
  uint64_t v0;

  return sub_221236D9C(v0);
}

uint64_t OUTLINED_FUNCTION_11_50(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_14_40(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

uint64_t sub_22129697C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v0 = sub_2212F2EEC();
  if (v1 <= 0x3F)
  {
    v2 = sub_2212F52C8();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout2();
      swift_initEnumMetadataSinglePayload();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_221296A34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)(a3 + 16);
    v8 = sub_2212F2EEC();
    v9 = sub_2212F52C8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v12 = *(int *)(TupleTypeMetadata2 + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v15((char *)a1 + v12, v14, v7);
      v15(&v13[*(int *)(v9 + 36)], &v14[*(int *)(v9 + 36)], v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
    }
  }
  return a1;
}

char *sub_221296B80(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  char *v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = *(_QWORD *)(a3 + 16);
  v7 = sub_2212F2EEC();
  v8 = sub_2212F52C8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v10 = *(int *)(TupleTypeMetadata2 + 48);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v13(&a1[v10], v12, v6);
    v13(&v11[*(int *)(v8 + 36)], &v12[*(int *)(v8 + 36)], v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  }
  return a1;
}

char *sub_221296CA4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);

  v6 = *(_QWORD *)(a3 + 16);
  v7 = sub_2212F2EEC();
  v8 = sub_2212F52C8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, TupleTypeMetadata2);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(a1, a2, v7);
      v17 = *(int *)(TupleTypeMetadata2 + 48);
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
      v20(&a1[v17], v19, v6);
      v20(&v18[*(int *)(v8 + 36)], &v19[*(int *)(v8 + 36)], v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 8))(a1, TupleTypeMetadata2);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  v12 = *(int *)(TupleTypeMetadata2 + 48);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v15(&a1[v12], v14, v6);
  v15(&v13[*(int *)(v8 + 36)], &v14[*(int *)(v8 + 36)], v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  return a1;
}

char *sub_221296E4C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  char *v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = *(_QWORD *)(a3 + 16);
  v7 = sub_2212F2EEC();
  v8 = sub_2212F52C8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v10 = *(int *)(TupleTypeMetadata2 + 48);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v13(&a1[v10], v12, v6);
    v13(&v11[*(int *)(v8 + 36)], &v12[*(int *)(v8 + 36)], v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  }
  return a1;
}

char *sub_221296F70(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);

  v6 = *(_QWORD *)(a3 + 16);
  v7 = sub_2212F2EEC();
  v8 = sub_2212F52C8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, TupleTypeMetadata2);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(a1, a2, v7);
      v17 = *(int *)(TupleTypeMetadata2 + 48);
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
      v20(&a1[v17], v19, v6);
      v20(&v18[*(int *)(v8 + 36)], &v19[*(int *)(v8 + 36)], v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 8))(a1, TupleTypeMetadata2);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  v12 = *(int *)(TupleTypeMetadata2 + 48);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v15(&a1[v12], v14, v6);
  v15(&v13[*(int *)(v8 + 36)], &v14[*(int *)(v8 + 36)], v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  return a1;
}

uint64_t sub_221297118()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_221297124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  sub_2212F2EEC();
  OUTLINED_FUNCTION_0_65();
  sub_2212F52C8();
  v4 = OUTLINED_FUNCTION_1_55();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

uint64_t sub_2212971B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212971BC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  sub_2212F2EEC();
  OUTLINED_FUNCTION_0_65();
  sub_2212F52C8();
  v6 = OUTLINED_FUNCTION_1_55();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_221297244(uint64_t a1)
{
  uint64_t TupleTypeMetadata2;

  sub_2212F2EEC();
  sub_2212F52C8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return __swift_getEnumTagSinglePayload(a1, 1, TupleTypeMetadata2);
}

uint64_t sub_2212972C0(uint64_t a1, uint64_t a2)
{
  uint64_t TupleTypeMetadata2;

  sub_2212F2EEC();
  sub_2212F52C8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, TupleTypeMetadata2);
}

uint64_t type metadata accessor for OptionalScaledMetric.Storage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalScaledMetric.Storage);
}

uint64_t sub_221297358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for OptionalScaledMetric.Storage(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2212973C4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(type metadata accessor for OptionalScaledMetric.Storage(0, v6, *(_QWORD *)(a3 + 24), a4) - 8);
  v8 = *(_DWORD *)(v7 + 80);
  if ((v8 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v8 + 16) & ~(unint64_t)v8));
    swift_retain();
  }
  else
  {
    v9 = sub_2212F2EEC();
    v10 = sub_2212F52C8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2))
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v13 = *(int *)(TupleTypeMetadata2 + 48);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v16((char *)a1 + v13, v15, v6);
      v16(&v14[*(int *)(v10 + 36)], &v15[*(int *)(v10 + 36)], v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
    }
  }
  return a1;
}

uint64_t sub_22129751C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = sub_2212F2EEC();
  OUTLINED_FUNCTION_0_65();
  v5 = sub_2212F52C8();
  v6 = OUTLINED_FUNCTION_1_55();
  result = __swift_getEnumTagSinglePayload(a1, 1, v6);
  if (!(_DWORD)result)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v8 = a1 + *(int *)(v6 + 48);
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v9(v8, v3);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8 + *(int *)(v5 + 36), v3);
  }
  return result;
}

char *sub_22129760C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = sub_2212F2EEC();
  v8 = sub_2212F52C8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2))
  {
    v11 = type metadata accessor for OptionalScaledMetric.Storage(0, v5, v6, v10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v12 = *(int *)(TupleTypeMetadata2 + 48);
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
    v15(&a1[v12], v14, v5);
    v15(&v13[*(int *)(v8 + 36)], &v14[*(int *)(v8 + 36)], v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  }
  return a1;
}

char *sub_22129773C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = sub_2212F2EEC();
  v8 = sub_2212F52C8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, TupleTypeMetadata2);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(a1, a2, v7);
      v19 = *(int *)(TupleTypeMetadata2 + 48);
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 24);
      v22(&a1[v19], v21, v5);
      v22(&v20[*(int *)(v8 + 36)], &v21[*(int *)(v8 + 36)], v5);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 8))(a1, TupleTypeMetadata2);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = type metadata accessor for OptionalScaledMetric.Storage(0, v5, v6, v12);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  v13 = *(int *)(TupleTypeMetadata2 + 48);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  v16(&a1[v13], v15, v5);
  v16(&v14[*(int *)(v8 + 36)], &v15[*(int *)(v8 + 36)], v5);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  return a1;
}

char *sub_2212978F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = sub_2212F2EEC();
  v8 = sub_2212F52C8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2))
  {
    v11 = type metadata accessor for OptionalScaledMetric.Storage(0, v5, v6, v10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v12 = *(int *)(TupleTypeMetadata2 + 48);
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
    v15(&a1[v12], v14, v5);
    v15(&v13[*(int *)(v8 + 36)], &v14[*(int *)(v8 + 36)], v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  }
  return a1;
}

char *sub_221297A20(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = sub_2212F2EEC();
  v8 = sub_2212F52C8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, TupleTypeMetadata2);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, TupleTypeMetadata2);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(a1, a2, v7);
      v19 = *(int *)(TupleTypeMetadata2 + 48);
      v20 = &a1[v19];
      v21 = &a2[v19];
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 40);
      v22(&a1[v19], v21, v5);
      v22(&v20[*(int *)(v8 + 36)], &v21[*(int *)(v8 + 36)], v5);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 8))(a1, TupleTypeMetadata2);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v17 = type metadata accessor for OptionalScaledMetric.Storage(0, v5, v6, v12);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  v13 = *(int *)(TupleTypeMetadata2 + 48);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
  v16(&a1[v13], v15, v5);
  v16(&v14[*(int *)(v8 + 36)], &v15[*(int *)(v8 + 36)], v5);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, TupleTypeMetadata2);
  return a1;
}

uint64_t sub_221297BD4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_221297BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  v6 = type metadata accessor for OptionalScaledMetric.Storage(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  return __swift_getEnumTagSinglePayload(a1, a2, v6);
}

uint64_t sub_221297C18()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_221297C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  v6 = type metadata accessor for OptionalScaledMetric.Storage(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), a4);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v6);
}

uint64_t type metadata accessor for OptionalScaledMetric(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalScaledMetric);
}

uint64_t OUTLINED_FUNCTION_0_65()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_1_55()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t sub_221297C84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_1_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, a1, a2);
  v6 = sub_2212F4854();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, a2);
  return v6;
}

uint64_t sub_221297D14()
{
  sub_2211F5614();
  return sub_2212F3798();
}

void sub_221297D48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_1_1();
  sub_221014EB4(a1, v1, type metadata accessor for SubscriptionStorePolicyConfiguration);
  sub_2211F5614();
  sub_2212F37A4();
  sub_221043E50(a1, type metadata accessor for SubscriptionStorePolicyConfiguration);
  OUTLINED_FUNCTION_17_0();
}

uint64_t sub_221297DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v12;

  v1 = v0;
  type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  OUTLINED_FUNCTION_4();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v12 - v6;
  sub_221014EB4(v1, (uint64_t)&v12 - v6, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_221043E50((uint64_t)v7, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  if (EnumCaseMultiPayload != 2)
    return 1;
  v9 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  sub_221014EB4(v1 + *(int *)(v9 + 20), (uint64_t)v5, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  v10 = swift_getEnumCaseMultiPayload() != 2;
  sub_221043E50((uint64_t)v5, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  return v10;
}

void static SubscriptionStorePolicyKind.termsOfService.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static SubscriptionStorePolicyKind.privacyPolicy.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void View.subscriptionStorePolicyDestination(url:for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (**v12)();
  uint64_t (*(*v13)(uint64_t))(uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;

  OUTLINED_FUNCTION_8_0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666DF8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_13_0();
  v12 = (uint64_t (**)())(v11 - v10);
  if (*v5)
    v13 = sub_221298EC4;
  else
    v13 = sub_221298D4C;
  v14 = OUTLINED_FUNCTION_4_23();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = 0;
  v15 = (char *)v12 + *(int *)(v8 + 28);
  v16 = OUTLINED_FUNCTION_11_42();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, v7, v16);
  type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  swift_storeEnumTagMultiPayload();
  *v12 = sub_2211FA3A8;
  v12[1] = (uint64_t (*)())v14;
  MEMORY[0x227669B20](v12, v3, v8, v1);
  sub_221298FB8((uint64_t)v12);
  OUTLINED_FUNCTION_19();
}

uint64_t sub_221297FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v7;

  *a5 = a1;
  a5[1] = a2;
  v7 = (char *)a5 + *(int *)(type metadata accessor for PolicyConfigurationModifier(0, a4, a3, a4) + 28);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v7, a3, a4);
}

void View.subscriptionStorePolicyDestination<A>(for:destination:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  void (*v5)(void);
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (**v15)();
  uint64_t (*(*v16)(uint64_t))(uint64_t);
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_8_0();
  v20 = v0;
  v2 = v1;
  v19 = v3;
  v5 = v4;
  v7 = v6;
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_13_0();
  v10 = v9 - v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666DF8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_13_0();
  v15 = (uint64_t (**)())(v14 - v13);
  if (*v7)
    v16 = sub_221298EC4;
  else
    v16 = sub_221298D4C;
  v17 = OUTLINED_FUNCTION_4_23();
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = 0;
  v18 = (uint64_t *)((char *)v15 + *(int *)(v11 + 28));
  v5();
  *v18 = sub_221297C84(v10, v2);
  type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  swift_storeEnumTagMultiPayload();
  *v15 = sub_22129B4A8;
  v15[1] = (uint64_t (*)())v17;
  MEMORY[0x227669B20](v15, v19, v11, v20);
  sub_221298FB8((uint64_t)v15);
  OUTLINED_FUNCTION_19();
}

void View.subscriptionStorePolicyForegroundStyle<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_8_0();
  v24 = v0;
  v23 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_13_0();
  v13 = v12 - v11;
  v16 = type metadata accessor for PolicyConfigurationModifier(0, v14, v14, v15);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v22 - v18);
  v20 = (_QWORD *)OUTLINED_FUNCTION_4_23();
  v20[2] = v7;
  v20[3] = v5;
  v21 = v23;
  v20[4] = v3;
  v20[5] = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v9, v5);
  sub_221297FDC((uint64_t)sub_221299010, (uint64_t)v20, v13, v5, v19);
  MEMORY[0x227669B20](v19, v7, v16, v3);
  (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  OUTLINED_FUNCTION_19();
}

uint64_t (*sub_221298270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v10 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  sub_221014EB4(a1, (uint64_t)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SubscriptionStorePolicyConfiguration);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = a5;
  sub_221015318((uint64_t)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v14 + v13, type metadata accessor for SubscriptionStorePolicyConfiguration);
  return sub_22129B24C;
}

uint64_t sub_221298354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  int *v15;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[40];
  uint64_t v21[5];

  v9 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v20[-v13];
  sub_221014EB4(v4, (uint64_t)&v20[-v13], type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  v15 = (int *)type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  sub_221014EB4(v4 + v15[5], (uint64_t)v11, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  v21[3] = a2;
  v21[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_1, a1, a2);
  sub_22129B2A8(v4 + v15[7], (uint64_t)v20);
  v17 = a4 + v15[6];
  *(_QWORD *)(v17 + 32) = 0;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  v18 = a4 + v15[7];
  *(_QWORD *)(v18 + 32) = 0;
  *(_OWORD *)v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  sub_221015318((uint64_t)v14, a4, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  sub_221015318((uint64_t)v11, a4 + v15[5], type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  sub_22129B178((uint64_t)v21, v17);
  return sub_22129B178((uint64_t)v20, v18);
}

void View.subscriptionStorePolicyForegroundStyle<A, B>(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_8_0();
  v37 = v0;
  v32 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v35 = v12;
  v36 = v13;
  v31 = OUTLINED_FUNCTION_0_8();
  MEMORY[0x24BDAC7A8](v31);
  v15 = (char *)&v29 - v14;
  v19 = type metadata accessor for PolicyConfigurationModifier(0, v16, v17, v18);
  v20 = *(_QWORD *)(v19 - 8);
  v33 = v19;
  v34 = v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (uint64_t *)((char *)&v29 - v21);
  v23 = (_QWORD *)OUTLINED_FUNCTION_4_23();
  v30 = v11;
  v23[2] = v11;
  v23[3] = v9;
  v23[4] = v7;
  v23[5] = v5;
  v24 = v32;
  v23[6] = v3;
  v23[7] = v24;
  v25 = (_QWORD *)OUTLINED_FUNCTION_4_23();
  v25[2] = v11;
  v25[3] = v9;
  v25[4] = v7;
  v25[5] = v5;
  v25[6] = v3;
  v25[7] = v24;
  v25[8] = sub_221299028;
  v25[9] = v23;
  v26 = v31;
  v27 = &v15[*(int *)(v31 + 48)];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v15, v35, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v27, v36, v7);
  sub_221297FDC((uint64_t)sub_22129905C, (uint64_t)v25, (uint64_t)v15, v26, v22);
  v28 = v33;
  MEMORY[0x227669B20](v22, v30, v33, v5);
  (*(void (**)(_QWORD *, uint64_t))(v34 + 8))(v22, v28);
  OUTLINED_FUNCTION_19();
}

uint64_t (*sub_221298654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  unint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v14 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  sub_221014EB4(a1, (uint64_t)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
  v18 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = a4;
  v19[5] = a5;
  v19[6] = a6;
  v19[7] = a7;
  sub_221015318((uint64_t)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v19 + v18, type metadata accessor for SubscriptionStorePolicyConfiguration);
  return sub_22129B0E8;
}

uint64_t sub_221298744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, __n128);
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a6;
  v26 = a2;
  v29 = a7;
  v30 = a8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v28 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v25 - v16;
  v19 = (char *)&v25 + *(int *)(v18 + 48) - v16;
  v27 = *(_QWORD *)(a4 - 8);
  v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v27 + 16);
  v20((char *)&v25 - v16, a1, a4, v15);
  v21 = *(_QWORD *)(a5 - 8);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v22(v19, v26, a5);
  v23 = (uint64_t)&v13[*(int *)(TupleTypeMetadata2 + 48)];
  ((void (*)(char *, char *, uint64_t))v20)(v13, v17, a4);
  v22((char *)v23, (uint64_t)v19, a5);
  sub_2212988C8((uint64_t)v13, v23, a4, a5, v32, v30, v29);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v17, TupleTypeMetadata2);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v13, a4);
}

uint64_t sub_2212988C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, __n128);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[5];
  uint64_t v68[6];

  v8 = v7;
  v62 = a6;
  v63 = a7;
  v59 = a5;
  v66 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  MEMORY[0x24BDAC7A8](v66);
  v60 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  MEMORY[0x24BDAC7A8](v14);
  v65 = (uint64_t)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v54 - v17;
  v56 = (uint64_t)&v54 - v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v20 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v54 = TupleTypeMetadata2;
  v61 = v20;
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v64 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v54 - v23;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v54 - v27;
  v30 = (char *)&v54 + *(int *)(v29 + 48) - v27;
  v31 = a3;
  v32 = *(_QWORD *)(a3 - 8);
  v33 = *(void (**)(char *, uint64_t, __n128))(v32 + 16);
  v57 = v32;
  v34 = a1;
  v35 = v31;
  v33((char *)&v54 - v27, v34, v26);
  v36 = a4;
  v55 = *(_QWORD *)(a4 - 8);
  v37 = *(void (**)(char *, uint64_t))(v55 + 16);
  v38 = a2;
  v39 = v36;
  v37(v30, v38);
  sub_221014EB4(v8, (uint64_t)v18, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  sub_221014EB4(v8 + *(int *)(v66 + 20), v65, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  v40 = v54;
  v58 = &v24[*(int *)(v54 + 48)];
  v41 = v58;
  ((void (*)(char *, char *, uint64_t))v33)(v24, v28, v35);
  ((void (*)(char *, char *, uint64_t))v37)(v41, v30, v39);
  v68[3] = v35;
  v68[4] = v59;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v68);
  (*(void (**)(uint64_t *, char *, uint64_t))(v32 + 32))(boxed_opaque_existential_1, v24, v35);
  v43 = v40;
  v44 = &v64[*(int *)(v40 + 48)];
  ((void (*)(void))v33)();
  ((void (*)(char *, char *, uint64_t))v37)(v44, v30, v39);
  v45 = v39;
  v67[3] = v39;
  v67[4] = v62;
  v46 = __swift_allocate_boxed_opaque_existential_1(v67);
  v47 = v55;
  (*(void (**)(uint64_t *, char *, uint64_t))(v55 + 32))(v46, v44, v45);
  v48 = v66;
  v49 = (uint64_t)v60;
  v50 = (uint64_t)&v60[*(int *)(v66 + 24)];
  *(_QWORD *)(v50 + 32) = 0;
  *(_OWORD *)v50 = 0u;
  *(_OWORD *)(v50 + 16) = 0u;
  v51 = v48;
  v52 = v49 + *(int *)(v48 + 28);
  *(_QWORD *)(v52 + 32) = 0;
  *(_OWORD *)v52 = 0u;
  *(_OWORD *)(v52 + 16) = 0u;
  sub_221015318(v56, v49, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  sub_221015318(v65, v49 + *(int *)(v51 + 20), type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  sub_22129B178((uint64_t)v68, v50);
  sub_22129B178((uint64_t)v67, v52);
  sub_221015318(v49, v63, type metadata accessor for SubscriptionStorePolicyConfiguration);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v28, v43);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v64, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v58, v45);
}

void sub_221298C2C()
{
  OUTLINED_FUNCTION_32_9();
  sub_2212F5DE4();
  sub_2212F5E08();
  OUTLINED_FUNCTION_13_15();
}

uint64_t (*sub_221298C60(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9))(uint64_t a1)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*result)(uint64_t);

  v14 = a2();
  v16 = v15;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = a8;
  v17[7] = a9;
  result = sub_22129B02C;
  v17[8] = v14;
  v17[9] = v16;
  return result;
}

uint64_t sub_221298CE8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

void sub_221298D44()
{
  sub_221298C2C();
}

uint64_t (*sub_221298D4C(uint64_t a1))(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  sub_221014EB4(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SubscriptionStorePolicyConfiguration);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  sub_221015318((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, type metadata accessor for SubscriptionStorePolicyConfiguration);
  return sub_22129B2F4;
}

uint64_t sub_221298E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[40];
  _BYTE v10[40];

  sub_221014EB4(a1, a3, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  v5 = (int *)type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  sub_221014EB4(a2 + v5[5], a3 + v5[5], type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  sub_22129B2A8(a2 + v5[6], (uint64_t)v10);
  sub_22129B2A8(a2 + v5[7], (uint64_t)v9);
  v6 = a3 + v5[6];
  *(_QWORD *)(v6 + 32) = 0;
  *(_OWORD *)v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  v7 = a3 + v5[7];
  *(_QWORD *)(v7 + 32) = 0;
  *(_OWORD *)v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  sub_22129B178((uint64_t)v10, v6);
  return sub_22129B178((uint64_t)v9, v7);
}

uint64_t (*sub_221298EC4(uint64_t a1))(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  sub_221014EB4(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SubscriptionStorePolicyConfiguration);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  sub_221015318((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, type metadata accessor for SubscriptionStorePolicyConfiguration);
  return sub_22129B390;
}

uint64_t sub_221298F80()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_255666F18);
}

uint64_t sub_221298FB8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255666DF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PolicyConfigurationModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PolicyConfigurationModifier);
}

uint64_t sub_221299004()
{
  return OUTLINED_FUNCTION_17_6();
}

uint64_t (*sub_221299010(uint64_t a1))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v1;

  return sub_221298270(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_22129901C()
{
  return OUTLINED_FUNCTION_17_6();
}

uint64_t (*sub_221299028(uint64_t a1))@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v1;

  return sub_221298654(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_221299038()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t (*sub_22129905C(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  return sub_221298C60(a1, *(uint64_t (**)(void))(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_22129908C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[40];
  _BYTE v11[40];

  sub_221014EB4(a2, a3, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  v6 = (int *)type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  sub_221014EB4(a1, a3 + v6[5], type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  sub_22129B2A8(a2 + v6[6], (uint64_t)v11);
  sub_22129B2A8(a2 + v6[7], (uint64_t)v10);
  v7 = a3 + v6[6];
  *(_QWORD *)(v7 + 32) = 0;
  *(_OWORD *)v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  v8 = a3 + v6[7];
  *(_QWORD *)(v8 + 32) = 0;
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  sub_22129B178((uint64_t)v11, v7);
  return sub_22129B178((uint64_t)v10, v8);
}

uint64_t SubscriptionStorePolicyKind.hash(into:)()
{
  return sub_2212F5DE4();
}

BOOL static SubscriptionStorePolicyKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void SubscriptionStorePolicyKind.hashValue.getter()
{
  OUTLINED_FUNCTION_32_9();
  sub_2212F5DE4();
  sub_2212F5E08();
  OUTLINED_FUNCTION_13_15();
}

unint64_t sub_2212991D8()
{
  unint64_t result;

  result = qword_255666E00;
  if (!qword_255666E00)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for SubscriptionStorePolicyKind, &type metadata for SubscriptionStorePolicyKind);
    atomic_store(result, (unint64_t *)&qword_255666E00);
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStorePolicyKind()
{
  return &type metadata for SubscriptionStorePolicyKind;
}

void sub_22129922C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_26_16();
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_16_29(qword_255666E08, v0, (uint64_t)&unk_221317458);
  OUTLINED_FUNCTION_5_29();
}

void sub_22129927C()
{
  OUTLINED_FUNCTION_16_13();
}

void sub_221299284()
{
  uint64_t v0;

  OUTLINED_FUNCTION_26_16();
  OUTLINED_FUNCTION_14_2();
  OUTLINED_FUNCTION_16_29(qword_255666E08, v0, (uint64_t)&unk_221317458);
  OUTLINED_FUNCTION_5_29();
}

void sub_2212992D8()
{
  OUTLINED_FUNCTION_16_13();
}

void sub_2212992E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for PolicyConfigurationModifier(255, *(_QWORD *)(a1 + 8), a3, a4);
  OUTLINED_FUNCTION_11_36();
  MEMORY[0x22766BAC4](&unk_221317458, v4);
  OUTLINED_FUNCTION_5_29();
}

void sub_22129932C()
{
  OUTLINED_FUNCTION_16_13();
}

void sub_221299334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_0_8();
  type metadata accessor for PolicyConfigurationModifier(255, v1, v2, v3);
  OUTLINED_FUNCTION_11_36();
  MEMORY[0x22766BAC4](&unk_221317458, v0);
  OUTLINED_FUNCTION_5_29();
}

void sub_22129938C()
{
  OUTLINED_FUNCTION_16_13();
}

uint64_t _s17_StoreKit_SwiftUI27SubscriptionStorePolicyKindVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2212993E0 + 4 * byte_221317295[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_221299414 + 4 * byte_221317290[v4]))();
}

uint64_t sub_221299414(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22129941C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x221299424);
  return result;
}

uint64_t sub_221299430(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x221299438);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_22129943C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_221299444(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStorePolicyKind.Internal()
{
  return &type metadata for SubscriptionStorePolicyKind.Internal;
}

uint64_t *sub_221299460(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
    goto LABEL_7;
  }
  if (!EnumCaseMultiPayload)
  {
    v9 = sub_2212F2A24();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_7:
    swift_storeEnumTagMultiPayload();
    goto LABEL_9;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_9:
  v11 = a3[5];
  v12 = (uint64_t *)((char *)a1 + v11);
  v13 = (uint64_t *)((char *)a2 + v11);
  v14 = swift_getEnumCaseMultiPayload();
  if (v14 == 1)
  {
    *v12 = *v13;
    swift_retain();
  }
  else
  {
    if (v14)
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      goto LABEL_15;
    }
    v15 = sub_2212F2A24();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(uint64_t *)((char *)a2 + v16 + 24);
  if (v19)
  {
    v20 = *((_QWORD *)v18 + 4);
    *((_QWORD *)v17 + 3) = v19;
    *((_QWORD *)v17 + 4) = v20;
    (**(void (***)(void))(v19 - 8))();
  }
  else
  {
    v21 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v21;
    *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
  }
  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(uint64_t *)((char *)a2 + v22 + 24);
  if (v25)
  {
    v26 = *((_QWORD *)v24 + 4);
    *((_QWORD *)v23 + 3) = v25;
    *((_QWORD *)v23 + 4) = v26;
    (**(void (***)(void))(v25 - 8))();
  }
  else
  {
    v27 = *((_OWORD *)v24 + 1);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v27;
    *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
  }
  return a1;
}

uint64_t sub_22129964C(uint64_t a1, int *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
  }
  else if (!EnumCaseMultiPayload)
  {
    v5 = sub_2212F2A24();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  v6 = a1 + a2[5];
  v7 = swift_getEnumCaseMultiPayload();
  if (v7 == 1)
  {
    swift_release();
  }
  else if (!v7)
  {
    v8 = sub_2212F2A24();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  v9 = a1 + a2[6];
  if (*(_QWORD *)(v9 + 24))
    __swift_destroy_boxed_opaque_existential_1(v9);
  result = a1 + a2[7];
  if (*(_QWORD *)(result + 24))
    return __swift_destroy_boxed_opaque_existential_1(result);
  return result;
}

_QWORD *sub_22129973C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  v6 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
    goto LABEL_5;
  }
  if (!EnumCaseMultiPayload)
  {
    v8 = sub_2212F2A24();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_5:
    swift_storeEnumTagMultiPayload();
    goto LABEL_7;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_7:
  v9 = a3[5];
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  v12 = swift_getEnumCaseMultiPayload();
  if (v12 == 1)
  {
    *v10 = *v11;
    swift_retain();
    goto LABEL_11;
  }
  if (!v12)
  {
    v13 = sub_2212F2A24();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_13:
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(_QWORD *)((char *)a2 + v14 + 24);
  if (v17)
  {
    v18 = *((_QWORD *)v16 + 4);
    *((_QWORD *)v15 + 3) = v17;
    *((_QWORD *)v15 + 4) = v18;
    (**(void (***)(void))(v17 - 8))();
  }
  else
  {
    v19 = *((_OWORD *)v16 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v19;
    *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
  }
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)((char *)a2 + v20 + 24);
  if (v23)
  {
    v24 = *((_QWORD *)v22 + 4);
    *((_QWORD *)v21 + 3) = v23;
    *((_QWORD *)v21 + 4) = v24;
    (**(void (***)(void))(v23 - 8))();
  }
  else
  {
    v25 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_OWORD *)v21 + 1) = v25;
    *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
  }
  return a1;
}

_QWORD *sub_2212998FC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;

  if (a1 == a2)
    goto LABEL_14;
  sub_221043E50((uint64_t)a1, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  v6 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_8;
    }
    v8 = sub_2212F2A24();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
LABEL_8:
  v9 = a3[5];
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  sub_221043E50((uint64_t)a1 + v9, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  v12 = swift_getEnumCaseMultiPayload();
  if (v12 == 1)
  {
    *v10 = *v11;
    swift_retain();
    goto LABEL_12;
  }
  if (!v12)
  {
    v13 = sub_2212F2A24();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    goto LABEL_14;
  }
  memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_14:
  v14 = a3[6];
  v15 = (uint64_t)a1 + v14;
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = *(_QWORD *)((char *)a2 + v14 + 24);
  if (*(_QWORD *)((char *)a1 + v14 + 24))
  {
    if (v17)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v15, v16);
      goto LABEL_21;
    }
    __swift_destroy_boxed_opaque_existential_1(v15);
  }
  else if (v17)
  {
    *(_QWORD *)(v15 + 24) = v17;
    *(_QWORD *)(v15 + 32) = v16[4];
    (**(void (***)(uint64_t, char *))(v17 - 8))(v15, (char *)v16);
    goto LABEL_21;
  }
  v18 = *(_OWORD *)v16;
  v19 = *((_OWORD *)v16 + 1);
  *(_QWORD *)(v15 + 32) = v16[4];
  *(_OWORD *)v15 = v18;
  *(_OWORD *)(v15 + 16) = v19;
LABEL_21:
  v20 = a3[7];
  v21 = (uint64_t)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *((_QWORD *)v22 + 3);
  if (!*(_QWORD *)((char *)a1 + v20 + 24))
  {
    if (v23)
    {
      *(_QWORD *)(v21 + 24) = v23;
      *(_QWORD *)(v21 + 32) = *((_QWORD *)v22 + 4);
      (**(void (***)(uint64_t, char *))(v23 - 8))(v21, v22);
      return a1;
    }
LABEL_27:
    v24 = *(_OWORD *)v22;
    v25 = *((_OWORD *)v22 + 1);
    *(_QWORD *)(v21 + 32) = *((_QWORD *)v22 + 4);
    *(_OWORD *)v21 = v24;
    *(_OWORD *)(v21 + 16) = v25;
    return a1;
  }
  if (!v23)
  {
    __swift_destroy_boxed_opaque_existential_1(v21);
    goto LABEL_27;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v21, (uint64_t *)v22);
  return a1;
}

char *sub_221299B44(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  char *v17;
  char *v18;
  __int128 v19;

  v6 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v11 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = &a1[v12];
  v15 = &a2[v12];
  v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
  v17 = &a1[v13];
  v18 = &a2[v13];
  *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);
  v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  return a1;
}

char *sub_221299C78(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  __int128 v18;

  if (a1 != a2)
  {
    sub_221043E50((uint64_t)a1, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
    v6 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v7 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_221043E50((uint64_t)&a1[v8], type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v11 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  v12 = a3[6];
  v13 = (uint64_t)&a1[v12];
  v14 = &a2[v12];
  if (*(_QWORD *)&a1[v12 + 24])
    __swift_destroy_boxed_opaque_existential_1(v13);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
  v16 = a3[7];
  v17 = &a1[v16];
  if (*(_QWORD *)&a1[v16 + 24])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v16]);
  v18 = *(_OWORD *)&a2[v16 + 16];
  *(_OWORD *)v17 = *(_OWORD *)&a2[v16];
  *((_OWORD *)v17 + 1) = v18;
  *((_QWORD *)v17 + 4) = *(_QWORD *)&a2[v16 + 32];
  return a1;
}

uint64_t sub_221299DF8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_221299E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_221299E8C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_221299E98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = a2;
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t type metadata accessor for SubscriptionStorePolicyConfiguration(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_255666E68);
}

uint64_t sub_221299F1C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_221299F90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v8 = sub_2212F2A24();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22129A064(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
    return swift_release();
  if (!(_DWORD)result)
  {
    v3 = sub_2212F2A24();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *sub_22129A0C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = sub_2212F2A24();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_22129A170(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_221043E50((uint64_t)a1, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = sub_2212F2A24();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_22129A234(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_2212F2A24();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_22129A2BC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_221043E50((uint64_t)a1, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_2212F2A24();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_22129A35C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F2A24();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_22129A3CC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_22129A448(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *a2;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    *a1 = v7;
    a1 = (_QWORD *)(v7 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = v7;
    a1[1] = v10;
    v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_22129A50C(uint64_t a1, uint64_t a2)
{
  swift_release();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_22129A550(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v10(v8, v9, v5);
  return a1;
}

_QWORD *sub_22129A5C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

_OWORD *sub_22129A630(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_OWORD *sub_22129A680(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_22129A6E8(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_22;
  v10 = ((v8 + 16) & ~v8) + *(_QWORD *)(v5 + 64);
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(_WORD *)((char *)a1 + v10))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_22:
      if ((v6 & 0x80000000) != 0)
        return __swift_getEnumTagSinglePayload(((unint64_t)a1 + v8 + 16) & ~v8, v6, v4);
      v16 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((_BYTE *)a1 + v10))
    goto LABEL_22;
LABEL_15:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return v7 + v15 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_22129A7BC + 4 * byte_22131729A[(v10 - 1)]))();
}

void sub_22129A828(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  char v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << v8)) >> v8) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v12 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

unint64_t sub_22129AA1C()
{
  unint64_t result;

  result = qword_255666FD0;
  if (!qword_255666FD0)
  {
    result = MEMORY[0x22766BAC4](&unk_221317430, &type metadata for SubscriptionStorePolicyKind.Internal);
    atomic_store(result, (unint64_t *)&qword_255666FD0);
  }
  return result;
}

uint64_t sub_22129AA58()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_22129AA8C()
{
  int *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  v0 = (int *)type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v12 - v7;
  __swift_allocate_value_buffer((uint64_t)v0, qword_255666DE0);
  v9 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_255666DE0);
  v15 = 0;
  memset(v14, 0, sizeof(v14));
  v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v10 = (uint64_t)&v2[v0[6]];
  *(_QWORD *)(v10 + 32) = 0;
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  v11 = (uint64_t)&v2[v0[7]];
  *(_QWORD *)(v11 + 32) = 0;
  *(_OWORD *)v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  sub_221015318((uint64_t)v8, (uint64_t)v2, type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  sub_221015318((uint64_t)v5, (uint64_t)&v2[v0[5]], type metadata accessor for SubscriptionStorePolicyConfiguration.Destination);
  sub_22129B178((uint64_t)v14, v10);
  sub_22129B178((uint64_t)v12, v11);
  sub_221015318((uint64_t)v2, v9, type metadata accessor for SubscriptionStorePolicyConfiguration);
}

uint64_t sub_22129AC30()
{
  uint64_t v0;

  if (qword_255655DB8 != -1)
    swift_once();
  v0 = type metadata accessor for SubscriptionStorePolicyConfiguration(0);
  return __swift_project_value_buffer(v0, (uint64_t)qword_255666DE0);
}

void sub_22129AC78(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_22129AC30();
  sub_221014EB4(v2, a1, type metadata accessor for SubscriptionStorePolicyConfiguration);
}

uint64_t sub_22129ACA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];

  v23 = a1;
  v24 = a3;
  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x22766BAC4](&unk_221317458, v7);
  v8 = sub_2212F3B4C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255665110);
  v9 = sub_2212F3348();
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v21 - v13;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a2);
  v15 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(a2 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v16 + v15, (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  v17 = MEMORY[0x22766BAC4](MEMORY[0x24BDEFB78], v8);
  sub_2212F4344();
  swift_release();
  swift_release();
  sub_221017AD4(&qword_255665108, &qword_255665110, MEMORY[0x24BDF1248]);
  v25[0] = v17;
  v25[1] = v18;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v9, v25);
  sub_221088D68((uint64_t)v11, v9, (uint64_t)v14);
  v19 = *(void (**)(char *, uint64_t))(v22 + 8);
  v19(v11, v9);
  sub_221087210((uint64_t)v14, v9, v24);
  return ((uint64_t (*)(char *, uint64_t))v19)(v14, v9);
}

uint64_t sub_22129AED4(uint64_t a1, uint64_t (**a2)(void), uint64_t a3)
{
  void (*v6)(char *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = (void (*)(char *))(*a2)();
  sub_221043E50(a1, type metadata accessor for SubscriptionStorePolicyConfiguration);
  v9 = type metadata accessor for PolicyConfigurationModifier(0, a3, v7, v8);
  v6((char *)a2 + *(int *)(v9 + 28));
  return swift_release();
}

uint64_t sub_22129AF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for PolicyConfigurationModifier(0, v5, a3, a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 24) & ~v7);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8 + *(int *)(v6 + 28), v5);
  return swift_deallocObject();
}

uint64_t sub_22129AFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PolicyConfigurationModifier(0, v6, a3, a4) - 8)
                          + 80);
  return sub_22129AED4(a1, (uint64_t (**)(void))(v4 + ((v7 + 24) & ~v7)), v6);
}

uint64_t sub_22129B02C(uint64_t a1)
{
  uint64_t v1;

  return sub_221298CE8(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 64));
}

uint64_t sub_22129B05C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_10_43();
  v1 = OUTLINED_FUNCTION_2_57();
  if (v1 == 1)
  {
    OUTLINED_FUNCTION_12_30();
  }
  else if (!v1)
  {
    v2 = OUTLINED_FUNCTION_11_42();
    OUTLINED_FUNCTION_8_4(v2);
  }
  v3 = OUTLINED_FUNCTION_6_42();
  if (v3 == 1)
  {
    OUTLINED_FUNCTION_26_26();
  }
  else if (!v3)
  {
    v4 = OUTLINED_FUNCTION_11_42();
    OUTLINED_FUNCTION_5_3(v4);
  }
  v5 = OUTLINED_FUNCTION_28_23(*(int *)(v0 + 24));
  if (v6)
    __swift_destroy_boxed_opaque_existential_1(v5);
  v7 = OUTLINED_FUNCTION_28_23(*(int *)(v0 + 28));
  if (v8)
    __swift_destroy_boxed_opaque_existential_1(v7);
  OUTLINED_FUNCTION_21_32();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t sub_22129B0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[6];
  v10 = v3[7];
  OUTLINED_FUNCTION_18_37();
  return sub_221298744(a1, a2, (uint64_t)v3 + ((v11 + 64) & ~v11), v7, v8, v9, a3, v10);
}

uint64_t sub_22129B178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255661008);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22129B1C0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_10_43();
  v1 = OUTLINED_FUNCTION_2_57();
  if (v1 == 1)
  {
    OUTLINED_FUNCTION_12_30();
  }
  else if (!v1)
  {
    v2 = OUTLINED_FUNCTION_11_42();
    OUTLINED_FUNCTION_8_4(v2);
  }
  v3 = OUTLINED_FUNCTION_6_42();
  if (v3 == 1)
  {
    OUTLINED_FUNCTION_26_26();
  }
  else if (!v3)
  {
    v4 = OUTLINED_FUNCTION_11_42();
    OUTLINED_FUNCTION_5_3(v4);
  }
  v5 = OUTLINED_FUNCTION_28_23(*(int *)(v0 + 24));
  if (v6)
    __swift_destroy_boxed_opaque_existential_1(v5);
  v7 = OUTLINED_FUNCTION_28_23(*(int *)(v0 + 28));
  if (v8)
    __swift_destroy_boxed_opaque_existential_1(v7);
  OUTLINED_FUNCTION_21_32();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t sub_22129B24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 40);
  OUTLINED_FUNCTION_18_37();
  return sub_221298354(a1, v5, v6, a2);
}

uint64_t sub_22129B2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255661008);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22129B2F4(uint64_t a1)
{
  return sub_22129B39C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_221298E08);
}

uint64_t objectdestroy_31Tm()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_10_43();
  v1 = OUTLINED_FUNCTION_2_57();
  if (v1 == 1)
  {
    OUTLINED_FUNCTION_12_30();
  }
  else if (!v1)
  {
    v2 = OUTLINED_FUNCTION_11_42();
    OUTLINED_FUNCTION_8_4(v2);
  }
  v3 = OUTLINED_FUNCTION_6_42();
  if (v3 == 1)
  {
    OUTLINED_FUNCTION_26_26();
  }
  else if (!v3)
  {
    v4 = OUTLINED_FUNCTION_11_42();
    OUTLINED_FUNCTION_5_3(v4);
  }
  v5 = OUTLINED_FUNCTION_28_23(*(int *)(v0 + 24));
  if (v6)
    __swift_destroy_boxed_opaque_existential_1(v5);
  v7 = OUTLINED_FUNCTION_28_23(*(int *)(v0 + 28));
  if (v8)
    __swift_destroy_boxed_opaque_existential_1(v7);
  OUTLINED_FUNCTION_21_32();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t sub_22129B390(uint64_t a1)
{
  return sub_22129B39C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_22129908C);
}

uint64_t sub_22129B39C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_18_37();
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

ValueMetadata *_s33PolicyConfigurationEnvironmentKeyOMa()
{
  return &_s33PolicyConfigurationEnvironmentKeyON;
}

void sub_22129B3FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v4 = type metadata accessor for PolicyConfigurationModifier(255, *a1, a3, a4);
  MEMORY[0x22766BAC4](&unk_221317458, v4);
  v5 = sub_2212F3B4C();
  OUTLINED_FUNCTION_26_16();
  v6 = OUTLINED_FUNCTION_14_2();
  v7 = MEMORY[0x22766BAC4](MEMORY[0x24BDEFB78], v5);
  OUTLINED_FUNCTION_16_29(&qword_255665108, v8, MEMORY[0x24BDF1248]);
  v10[0] = v7;
  v10[1] = v9;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v6, v10);
  OUTLINED_FUNCTION_16_13();
}

uint64_t OUTLINED_FUNCTION_2_57()
{
  type metadata accessor for SubscriptionStorePolicyConfiguration.Destination(0);
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_6_42()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_10_43()
{
  return type metadata accessor for SubscriptionStorePolicyConfiguration(0);
}

uint64_t OUTLINED_FUNCTION_18_37()
{
  return type metadata accessor for SubscriptionStorePolicyConfiguration(0);
}

uint64_t OUTLINED_FUNCTION_21_32()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_26_26()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for SubscriptionPickerOptionEffectiveTint()
{
  return &type metadata for SubscriptionPickerOptionEffectiveTint;
}

uint64_t sub_22129B550()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_2212F3258();
  MEMORY[0x24BDAC7A8](v0);
  if (qword_255655D50 != -1)
    swift_once();
  if (byte_255661B81 == 2)
  {
    storekit_dyld_fall_2024_os_versions();
    if ((dyld_program_minos_at_least() & 1) == 0)
      goto LABEL_5;
LABEL_9:
    __swift_instantiateConcreteTypeFromMangledName(&qword_255666FD8);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_2212FEA40;
    v4 = MEMORY[0x24BDECB90];
    *(_QWORD *)(v3 + 56) = v0;
    *(_QWORD *)(v3 + 64) = v4;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v3 + 32));
    sub_2212F324C();
    *(_QWORD *)(v3 + 72) = sub_2212F456C();
    *(_BYTE *)(v3 + 80) = 1;
    *(_QWORD *)(v3 + 88) = sub_2212F456C();
    *(_BYTE *)(v3 + 136) = 0;
    *(_QWORD *)(v3 + 144) = sub_2212F459C();
    *(_BYTE *)(v3 + 192) = 0;
    sub_2212F45F0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255666FE0);
    sub_22129B7CC();
    sub_221018504((unint64_t *)&qword_255666FF0, &qword_255666FE0, (uint64_t)&unk_221301F78);
    sub_2212F4644();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255657FD8);
    sub_221018504(&qword_255666FF8, &qword_255657FD8, (uint64_t)&unk_22131A128);
    return sub_2212F2F70();
  }
  if ((byte_255661B81 & 1) != 0)
    goto LABEL_9;
LABEL_5:
  if (!sub_2212F34E0())
  {
LABEL_11:
    sub_2212F324C();
    return sub_2212F2F70();
  }
  sub_2212F45CC();
  v1 = sub_2212F4584();
  swift_release();
  if ((v1 & 1) == 0)
  {
    swift_release();
    goto LABEL_11;
  }
  sub_2212F456C();
  v2 = sub_2212F2F70();
  swift_release();
  return v2;
}

uint64_t sub_22129B7A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22129B550();
  *a1 = result;
  return result;
}

unint64_t sub_22129B7CC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_255666FE8;
  if (!qword_255666FE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666FE0);
    v2 = sub_22102450C();
    result = MEMORY[0x22766BAC4](&unk_221301BFC, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255666FE8);
  }
  return result;
}

uint64_t PurchaseAction.callAsFunction(_:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  v5 = sub_2212F4EA8();
  *(_QWORD *)(v4 + 40) = v5;
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 56) = swift_task_alloc();
  *(_OWORD *)(v4 + 64) = *v3;
  return swift_task_switch();
}

uint64_t sub_22129B89C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_2212F4E90();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_221129910;
  return sub_2212F51A8();
}

void EnvironmentValues.purchase.getter(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (void *)sub_2212F3570();
  v3 = v2;
  if (!v2)
    goto LABEL_5;
  v4 = objc_msgSend(v2, sel_scene);

  if (!v4)
  {
    v3 = 0;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v5 = objc_msgSend(v4, sel__sceneIdentifier);
  v3 = (void *)sub_2212F537C();
  v7 = v6;

LABEL_6:
  *a1 = v3;
  a1[1] = v7;
}

ValueMetadata *type metadata accessor for PurchaseAction()
{
  return &type metadata for PurchaseAction;
}

void sub_22129B9B0(float *a1@<X0>, float *a2@<X1>, float *a3@<X8>)
{
  *a3 = j__powf(*a1, *a2);
}

unint64_t sub_22129B9DC(uint64_t a1)
{
  unint64_t result;

  result = sub_22129BA00();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22129BA00()
{
  unint64_t result;

  result = qword_255667008;
  if (!qword_255667008)
  {
    result = MEMORY[0x22766BAC4](MEMORY[0x24BEE1500], MEMORY[0x24BEE14E8]);
    atomic_store(result, (unint64_t *)&qword_255667008);
  }
  return result;
}

void sub_22129BA3C(long double *a1@<X0>, long double *a2@<X1>, long double *a3@<X8>)
{
  *a3 = j__pow(*a1, *a2);
}

unint64_t sub_22129BA68(uint64_t a1)
{
  unint64_t result;

  result = sub_22129BA8C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22129BA8C()
{
  unint64_t result;

  result = qword_255667010;
  if (!qword_255667010)
  {
    result = MEMORY[0x22766BAC4](MEMORY[0x24BEE13E0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_255667010);
  }
  return result;
}

unint64_t sub_22129BACC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_22129BAF8();
  result = sub_22129BB34();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_22129BAF8()
{
  unint64_t result;

  result = qword_255667018;
  if (!qword_255667018)
  {
    result = MEMORY[0x22766BAC4](MEMORY[0x24BEE5100], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_255667018);
  }
  return result;
}

unint64_t sub_22129BB34()
{
  unint64_t result;

  result = qword_255667020;
  if (!qword_255667020)
  {
    result = MEMORY[0x22766BAC4](MEMORY[0x24BEE50C8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_255667020);
  }
  return result;
}

unint64_t sub_22129BB74()
{
  unint64_t result;

  result = qword_255667028;
  if (!qword_255667028)
  {
    result = MEMORY[0x22766BAC4](&unk_221317648, MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_255667028);
  }
  return result;
}

double sub_22129BBB0()
{
  void *v0;
  double v1;

  sub_2210EAFD8();
  swift_retain();
  v0 = (void *)sub_2212F5814();
  v1 = sub_22129BC20();

  return v1;
}

double sub_22129BC20()
{
  void *v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  v5[1] = *MEMORY[0x24BDAC8D0];
  v5[0] = 0;
  v3 = 0;
  v4 = 0;
  v2 = 0;
  objc_msgSend(v0, sel_getRed_green_blue_alpha_, v5, &v4, &v3, &v2);
  return *(double *)v5;
}

void sub_22129BC9C(double *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = sub_22129BBB0();
  *a2 = v7;
  *a3 = v8;
  *a4 = v9;
}

unint64_t sub_22129BCF0()
{
  unint64_t result;

  result = qword_255667058;
  if (!qword_255667058)
  {
    result = MEMORY[0x22766BAC4](&unk_221317610, MEMORY[0x24BEE14E8]);
    atomic_store(result, (unint64_t *)&qword_255667058);
  }
  return result;
}

float sub_22129BD2C()
{
  float v0;
  float v1;

  sub_2212F4608();
  v1 = v0;
  OUTLINED_FUNCTION_0_66();
  sub_2212F4620();
  OUTLINED_FUNCTION_0_66();
  sub_2212F4614();
  return v1;
}

void sub_22129BD90(float *a1, _DWORD *a2, _DWORD *a3, _DWORD *a4)
{
  int v7;
  int v8;
  int v9;

  *a1 = sub_22129BD2C();
  *a2 = v7;
  *a3 = v8;
  *a4 = v9;
}

double sub_22129BDE4()
{
  CGColor *v0;
  CGColor *v1;
  CGColorSpace *v2;
  CGColorSpace *v3;
  CGColorSpaceModel Model;
  CGColorRef CopyByMatchingToColorSpace;
  CGColorSpace *DeviceRGB;
  uint64_t v7;
  double v8;

  v1 = v0;
  v2 = CGColorGetColorSpace(v0);
  if (v2 && (v3 = v2, Model = CGColorSpaceGetModel(v2), v3, Model == kCGColorSpaceModelRGB))
  {
    CopyByMatchingToColorSpace = v1;
  }
  else
  {
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace(DeviceRGB, kCGRenderingIntentDefault, v1, 0);

    if (!CopyByMatchingToColorSpace)
    {
LABEL_9:
      CGColorGetAlpha(v1);
      v8 = 0.0;
      goto LABEL_10;
    }
  }
  CopyByMatchingToColorSpace = CopyByMatchingToColorSpace;
  v7 = sub_2212F57C0();

  if (!v7)
    goto LABEL_9;
  if (*(_QWORD *)(v7 + 16) != 4)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v8 = *(double *)(v7 + 32);
  swift_bridgeObjectRelease();
LABEL_10:

  return v8;
}

void sub_22129BEE0(double *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  sub_22129BEF8(a1, a2, a3, a4, a5, a6, sub_22129BDE4);
}

void sub_22129BEEC(double *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  sub_22129BEF8(a1, a2, a3, a4, a5, a6, sub_22129BC20);
}

void sub_22129BEF8(double *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t a5, uint64_t a6, double (*a7)(void))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = a7();
  *a2 = v10;
  *a3 = v11;
  *a4 = v12;
}

uint64_t sub_22129BF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t OUTLINED_FUNCTION_23_24(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_22129BF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

float OUTLINED_FUNCTION_0_66()
{
  float v0;

  return v0;
}

ValueMetadata *type metadata accessor for AnySubscriptionOfferViewStyle()
{
  return &type metadata for AnySubscriptionOfferViewStyle;
}

uint64_t sub_22129BF88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22129BF98@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_22129BFC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v19 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v7 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v18 - v14;
  sub_221234BA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v2, v3, v8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_getAssociatedConformanceWitness();
  sub_221088D68((uint64_t)v12, AssociatedTypeWitness, (uint64_t)v15);
  v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v12, AssociatedTypeWitness);
  sub_221087210((uint64_t)v15, AssociatedTypeWitness, v19);
  return ((uint64_t (*)(char *, uint64_t))v16)(v15, AssociatedTypeWitness);
}

uint64_t sub_22129C14C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t (**v1)(void);

  return sub_22129BF98(*v1, a1);
}

uint64_t sub_22129C154()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  if (v1 <= 0x3F)
  {
    result = sub_2212F3C60();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_22129C1DC(_OWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  void **v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (*a2)
    {
      v7 = a2[1];
      *v4 = *a2;
      v4[1] = v7;
      swift_retain();
    }
    else
    {
      *a1 = *(_OWORD *)a2;
    }
    v9 = (int *)type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
    v10 = v9[5];
    v11 = (_QWORD *)((char *)v4 + v10);
    v12 = (void **)((char *)a2 + v10);
    v13 = type metadata accessor for Product.TaskState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v17 = sub_2212F51B4();
      (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v11, v12, v17);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        goto LABEL_12;
      }
      v15 = *v12;
      v16 = v15;
      *v11 = v15;
    }
    swift_storeEnumTagMultiPayload();
LABEL_12:
    *(_QWORD *)((char *)v4 + v9[6]) = *(_QWORD *)((char *)a2 + v9[6]);
    *(_QWORD *)((char *)v4 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
    *((_BYTE *)v4 + v9[8]) = *((_BYTE *)a2 + v9[8]);
    v18 = *(int *)(a3 + 36);
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_2212F3C60();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_retain();
    swift_retain();
    v22(v19, v20, v21);
    return v4;
  }
  v8 = *a2;
  *v4 = *a2;
  v4 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t sub_22129C374(_QWORD *a1, uint64_t a2)
{
  id *v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  if (*a1)
    swift_release();
  v4 = (id *)((char *)a1 + *(int *)(type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration() + 20));
  type metadata accessor for Product.TaskState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v6 = sub_2212F51B4();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else if (!EnumCaseMultiPayload)
  {

  }
  swift_release();
  swift_release();
  v7 = (char *)a1 + *(int *)(a2 + 36);
  v8 = sub_2212F3C60();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *sub_22129C444(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  void **v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);

  if (*a2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = (int *)type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  v8 = v7[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (void **)((char *)a2 + v8);
  v11 = type metadata accessor for Product.TaskState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v15 = sub_2212F51B4();
    (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      goto LABEL_10;
    }
    v13 = *v10;
    v14 = v13;
    *v9 = v13;
  }
  swift_storeEnumTagMultiPayload();
LABEL_10:
  *(_QWORD *)((char *)a1 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
  *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
  *((_BYTE *)a1 + v7[8]) = *((_BYTE *)a2 + v7[8]);
  v16 = *(int *)(a3 + 36);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_2212F3C60();
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  swift_retain();
  swift_retain();
  v20(v17, v18, v19);
  return a1;
}

_QWORD *sub_22129C5B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  void **v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v9 = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  v10 = (int *)v9;
  if (a1 != a2)
  {
    v11 = *(int *)(v9 + 20);
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (void **)((char *)a2 + v11);
    sub_22112FFAC((uint64_t)a1 + v11);
    v14 = type metadata accessor for Product.TaskState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v18 = sub_2212F51B4();
      (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, v13, v18);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        goto LABEL_15;
      }
      v16 = *v13;
      v17 = v16;
      *v12 = v16;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  *(_QWORD *)((char *)a1 + v10[6]) = *(_QWORD *)((char *)a2 + v10[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + v10[7]) = *(_QWORD *)((char *)a2 + v10[7]);
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + v10[8]) = *((_BYTE *)a2 + v10[8]);
  v19 = *(int *)(a3 + 36);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2212F3C60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

_QWORD *sub_22129C768(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  if (*a2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = (int *)type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Product.TaskState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2212F51B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  *(_QWORD *)((char *)a1 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
  *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
  *((_BYTE *)a1 + v7[8]) = *((_BYTE *)a2 + v7[8]);
  v13 = *(int *)(a3 + 36);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_2212F3C60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

_QWORD *sub_22129C898(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v9 = type metadata accessor for SubscriptionOfferViewStyleProtocolConfiguration();
  v10 = (int *)v9;
  if (a1 != a2)
  {
    v11 = *(int *)(v9 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    sub_22112FFAC((uint64_t)a1 + v11);
    v14 = type metadata accessor for Product.TaskState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2212F51B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  *(_QWORD *)((char *)a1 + v10[6]) = *(_QWORD *)((char *)a2 + v10[6]);
  swift_release();
  *(_QWORD *)((char *)a1 + v10[7]) = *(_QWORD *)((char *)a2 + v10[7]);
  swift_release();
  *((_BYTE *)a1 + v10[8]) = *((_BYTE *)a2 + v10[8]);
  v16 = *(int *)(a3 + 36);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_2212F3C60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t sub_22129CA10()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22129CA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_9_10();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_2_53();
    v8 = v4 + *(int *)(a3 + 36);
  }
  return __swift_getEnumTagSinglePayload(v8, v3, v7);
}

uint64_t sub_22129CA74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22129CA80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_9_10();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v9 = OUTLINED_FUNCTION_2_53();
    v10 = v5 + *(int *)(a4 + 36);
  }
  return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

uint64_t type metadata accessor for AnySubscriptionOfferViewStyle.WrapperView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnySubscriptionOfferViewStyle.WrapperView);
}

uint64_t sub_22129CAEC()
{
  return MEMORY[0x24BDF4760];
}

uint64_t sub_22129CAF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22129CB2C()
{
  swift_getAssociatedTypeWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_22129CB8C(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  double v11;
  double v12;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v6 = 0;
    v7 = (unsigned __int8 *)(a3 + 32);
    while (1)
    {
      v8 = *(unsigned __int8 *)(a3 + v6 + 32);
      OUTLINED_FUNCTION_0_67();
      if (v11 <= a1 && v12 > a1)
        break;
      if (v4 == ++v6)
      {
        if (!*(_QWORD *)(a3 + 16))
          goto LABEL_11;
        v8 = *v7;
        OUTLINED_FUNCTION_0_67();
        if (v11 <= a1)
        {
          v9 = *(_QWORD *)(a3 + 16);
          if (!v9)
            goto LABEL_11;
          v8 = v7[v9 - 1];
        }
        break;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 8;
  }
  return v8;
}

BOOL sub_22129CC58()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  double Height;
  void *v16;
  uint64_t KeyPath;
  uint64_t v18;
  CGRect v19;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657AB0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212F360C();
  v3 = sub_2212F3BDC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1)
  {
    sub_2212213E8((uint64_t)v2);
  }
  else
  {
    v4 = *(_QWORD *)(v3 - 8);
    v5 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v2, v3);
    v6 = *MEMORY[0x24BDEFEE8];
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    if (v5 == v6)
      return 0;
  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v8 = objc_msgSend(v7, sel_userInterfaceIdiom);

  if (v8 != (id)1)
    return 0;
  v9 = (void *)sub_2212F3570();
  if (!v9)
    goto LABEL_11;
  v10 = v9;
  v11 = objc_msgSend(v9, sel_scene);

  if (!v11)
    goto LABEL_11;
  objc_opt_self();
  v12 = (void *)swift_dynamicCastObjCClass();
  if (!v12)
  {

LABEL_11:
    v13 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    goto LABEL_12;
  }
  v13 = objc_msgSend(v12, sel_screen);

LABEL_12:
  objc_msgSend(v13, sel_bounds);
  Height = CGRectGetHeight(v19);
  v16 = sub_22122117C();
  KeyPath = swift_getKeyPath();
  LODWORD(v16) = sub_22129CB8C(Height, KeyPath, (uint64_t)v16);

  swift_release();
  return v16 > 2;
}

void sub_22129CE64(char *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(double *)v1 = OUTLINED_FUNCTION_1_56(a1);
  *(_QWORD *)(v1 + 8) = v2;
}

void sub_22129CE84(char *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(double *)v1 = OUTLINED_FUNCTION_1_56(a1);
  *(_QWORD *)(v1 + 8) = v2;
}

uint64_t OUTLINED_FUNCTION_0_67()
{
  return swift_getAtKeyPath();
}

double OUTLINED_FUNCTION_1_56(char *a1)
{
  return sub_2212211C8(*a1);
}

uint64_t View.productIconBorder()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BYTE v6[8];
  uint64_t v7;
  uint64_t v8;

  v6[0] = 0;
  v7 = sub_2212F4A10();
  v8 = v4;
  return MEMORY[0x227669B20](v6, a1, &type metadata for InAppPurchaseIconFrameViewModifier, a2);
}

uint64_t View.productIconBorder(showAppIcon:alignment:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE v6[8];
  uint64_t v7;
  uint64_t v8;

  v6[0] = a1;
  v7 = a2;
  v8 = a3;
  return MEMORY[0x227669B20](v6, a4, &type metadata for InAppPurchaseIconFrameViewModifier, a5);
}

uint64_t sub_22129CF58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2212F3348();
  v4[0] = v1;
  v4[1] = sub_22129CFAC();
  return MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_22129CFAC()
{
  unint64_t result;

  result = qword_255667178;
  if (!qword_255667178)
  {
    result = MEMORY[0x22766BAC4](&unk_221308174, &type metadata for InAppPurchaseIconFrameViewModifier);
    atomic_store(result, (unint64_t *)&qword_255667178);
  }
  return result;
}

uint64_t sub_22129CFE8()
{
  unsigned __int8 v1;

  sub_2210CEF98();
  OUTLINED_FUNCTION_0_43();
  return v1;
}

BOOL sub_22129D018()
{
  sub_2210CEF98();
  OUTLINED_FUNCTION_0_43();
  return (sub_2212F2DD8() & 1) == 0;
}

void sub_22129D058()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_4_45();
  OUTLINED_FUNCTION_6_0();
}

void sub_22129D074()
{
  OUTLINED_FUNCTION_1_57();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_22129D08C()
{
  sub_2210CEF98();
  return sub_2212F37A4();
}

uint64_t View.productDescriptionHidden(_:)(char a1)
{
  swift_getKeyPath();
  *(_BYTE *)(swift_allocObject() + 16) = a1;
  sub_2212F4344();
  swift_release();
  return swift_release();
}

void sub_22129D15C()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_4_45();
  OUTLINED_FUNCTION_6_0();
}

void sub_22129D178()
{
  OUTLINED_FUNCTION_1_57();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_22129D190(char *a1, char a2)
{
  uint64_t result;
  char v5;

  result = sub_2212F2DD8();
  if ((result & 1) == 0)
  {
    if ((a2 & 1) != 0)
      v5 = 2;
    else
      v5 = 1;
    *a1 = v5;
  }
  return result;
}

uint64_t sub_22129D1D0()
{
  return swift_deallocObject();
}

uint64_t sub_22129D1E0(char *a1)
{
  uint64_t v1;

  return sub_22129D190(a1, *(_BYTE *)(v1 + 16));
}

uint64_t View._productDescription(_:)(char a1, uint64_t a2, uint64_t a3)
{
  char v4;

  v4 = a1;
  return MEMORY[0x227669B20](&v4, a2, &type metadata for ProductDescriptionVisibilityModifier, a3);
}

unint64_t sub_22129D21C()
{
  unint64_t result;

  result = qword_255667180;
  if (!qword_255667180)
  {
    result = MEMORY[0x22766BAC4](&unk_2213178B8, &type metadata for ProductDescriptionVisibilityModifier);
    atomic_store(result, (unint64_t *)&qword_255667180);
  }
  return result;
}

_BYTE *sub_22129D258(_BYTE *result, char a2)
{
  if (a2 != 3)
    *result = a2;
  return result;
}

uint64_t sub_22129D26C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  KeyPath = swift_getKeyPath();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255667188);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, a1, v7);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255667190);
  v9 = a3 + *(int *)(result + 36);
  *(_QWORD *)v9 = KeyPath;
  *(_BYTE *)(v9 + 8) = a2;
  return result;
}

uint64_t sub_22129D2E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;

  return sub_22129D26C(a1, *v2, a2);
}

void StoreContent.productDescription(_:)(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5;

  v5 = a1;
  sub_22129D21C();
  sub_221232D58((uint64_t)&v5, a2, (uint64_t)&type metadata for ProductDescriptionVisibilityModifier, a3);
}

void sub_22129D34C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565B678);
  sub_2212F3348();
  sub_221018504(&qword_25565B670, &qword_25565B678, MEMORY[0x24BDF1248]);
  OUTLINED_FUNCTION_5_29();
}

void sub_22129D3C4()
{
  sub_2212F3348();
  sub_22129D21C();
  OUTLINED_FUNCTION_5_29();
}

void sub_22129D410()
{
  sub_22129D21C();
  type metadata accessor for ModifiedStoreContent();
}

uint64_t sub_22129D444(uint64_t a1)
{
  return MEMORY[0x22766BAC4](&unk_221313C88, a1);
}

uint64_t storeEnumTagSinglePayload for ProductDescriptionVisibilityModifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22129D4B0 + 4 * byte_221317835[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22129D4E4 + 4 * byte_221317830[v4]))();
}

uint64_t sub_22129D4E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22129D4EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22129D4F4);
  return result;
}

uint64_t sub_22129D500(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22129D508);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22129D50C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22129D514(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProductDescriptionVisibilityModifier()
{
  return &type metadata for ProductDescriptionVisibilityModifier;
}

uint64_t sub_22129D530()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *_s42ProductDescriptionVisibilityEnvironmentKeyOMa()
{
  return &_s42ProductDescriptionVisibilityEnvironmentKeyON;
}

unint64_t sub_22129D554()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255667198;
  if (!qword_255667198)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255667190);
    v2[0] = sub_221018504(&qword_2556671A0, &qword_255667188, MEMORY[0x24BDEFB78]);
    v2[1] = sub_221018504(&qword_2556671A8, &qword_2556671B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255667198);
  }
  return result;
}

uint64_t sub_22129D5F0()
{
  sub_22129D640();
  return sub_2212F3138();
}

unint64_t sub_22129D640()
{
  unint64_t result;

  result = qword_2556671B8[0];
  if (!qword_2556671B8[0])
  {
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEB328], MEMORY[0x24BDEB320]);
    atomic_store(result, qword_2556671B8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_57()
{
  return sub_22129D08C();
}

uint64_t OUTLINED_FUNCTION_4_45()
{
  return sub_22129CFE8();
}

void sub_22129D694()
{
  unint64_t v0;

  sub_22129F05C();
  if (v0 <= 0x3F)
    type metadata accessor for PromotionalIconLoadingView.IconType();
}

uint64_t *sub_22129D738(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  size_t v18;
  unint64_t v19;
  size_t v20;
  size_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  char v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  void *v38;
  const void *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  size_t __n;
  size_t v46;
  size_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v6 = sub_2212F2A24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  if (*(_DWORD *)(v7 + 84))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = *(_QWORD *)(v7 + 64) + 1;
  v11 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(a3 + 24);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v10 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v14;
  v16 = v14 | *(_DWORD *)(v12 + 80);
  v17 = v16 & 0xF8 | 7u;
  v18 = v9 + v17;
  v19 = *(_QWORD *)(v12 + 64);
  if (*(_DWORD *)(v12 + 84))
    v20 = *(_QWORD *)(v12 + 64);
  else
    v20 = v19 + 1;
  v21 = v20 + v14;
  if (*(_DWORD *)(v13 + 84))
    v22 = *(_QWORD *)(v13 + 64);
  else
    v22 = *(_QWORD *)(v13 + 64) + 1;
  v23 = (v21 & ~(unint64_t)v14) + v22;
  if (v23 <= v19)
    v23 = *(_QWORD *)(v12 + 64);
  if (v23 <= 0x10)
    v24 = 16;
  else
    v24 = v23;
  if (((v16 | v8) & 0x1000F8) != 0 || ((v24 + (v18 & ~v17) + 8) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26
                   + ((((v16 | v8) & 0xF8 | 7u) + 16) & ~(unint64_t)((v16 | v8) & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    __n = v20;
    v46 = v22;
    v47 = v21;
    v48 = v10;
    v49 = v11;
    v50 = v24;
    v27 = ~v17;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
    {
      memcpy(a1, a2, v9);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    }
    v29 = v50 + 1;
    v30 = ((unint64_t)a1 + v18) & v27;
    v31 = ((unint64_t)a2 + v18) & v27;
    v32 = ~v15;
    switch(*(_BYTE *)(v31 + v50))
    {
      case 0:
        v33 = *(_QWORD *)(v31 + 8);
        *(_QWORD *)v30 = *(_QWORD *)v31;
        *(_QWORD *)((((unint64_t)a1 + v18) & v27) + 8) = v33;
        *(_BYTE *)(v30 + v50) = 0;
        swift_retain();
        break;
      case 1:
        if (__swift_getEnumTagSinglePayload(v31, 1, v49))
        {
          memcpy((void *)v30, (const void *)v31, __n);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v30, v31, v49);
          __swift_storeEnumTagSinglePayload(v30, 0, 1, v49);
        }
        v38 = (void *)((v47 + v30) & v32);
        v39 = (const void *)((v47 + v31) & v32);
        if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v48))
        {
          memcpy(v38, v39, v46);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v38, v39, v48);
          __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v48);
        }
        *(_BYTE *)(v30 + v50) = 1;
        break;
      case 2:
        v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
        v35 = v50;
        v34(v30, v31, v49);
        v36 = 2;
        goto LABEL_31;
      case 3:
        v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
        v35 = v50;
        v37(v30, v31, v49);
        v36 = 3;
LABEL_31:
        *(_BYTE *)(v30 + v35) = v36;
        break;
      default:
        memcpy((void *)v30, (const void *)v31, v50 + 1);
        break;
    }
    v40 = ((v30 | 7) + v29) & 0xFFFFFFFFFFFFFFF8;
    v41 = ((v31 | 7) + v29) & 0xFFFFFFFFFFFFFFF8;
    v42 = *(_QWORD *)v41;
    v43 = *(_BYTE *)(v41 + 8);
    j__swift_retain(*(_QWORD *)v41);
    *(_QWORD *)v40 = v42;
    *(_BYTE *)(v40 + 8) = v43;
  }
  return a1;
}

uint64_t sub_22129DA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v4 = sub_2212F2A24();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1, v4);
  v6 = *(_QWORD *)(v4 - 8);
  if (!EnumTagSinglePayload)
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v7 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v13 = *(_QWORD *)(v6 + 64) + a1;
  if (!*(_DWORD *)(v6 + 84))
    ++v13;
  v12 = (v11 | *(_DWORD *)(v9 + 80)) & 0xF8 | 7u;
  v14 = (v13 + v12) & ~v12;
  v15 = *(_QWORD *)(v9 + 64);
  if (*(_DWORD *)(v9 + 84))
    v16 = *(_QWORD *)(v9 + 64);
  else
    v16 = v15 + 1;
  v17 = v16 + v11;
  if (*(_DWORD *)(v10 + 84))
    v18 = *(_QWORD *)(v10 + 64);
  else
    v18 = *(_QWORD *)(v10 + 64) + 1;
  if (v18 + (v17 & ~(unint64_t)v11) > v15)
    v15 = v18 + (v17 & ~(unint64_t)v11);
  if (v15 <= 0x10)
    v19 = 16;
  else
    v19 = v15;
  v20 = ~(unint64_t)v11;
  switch(*(_BYTE *)(v14 + v19))
  {
    case 0:
      swift_release();
      break;
    case 1:
      if (!__swift_getEnumTagSinglePayload(v14, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
      if (!__swift_getEnumTagSinglePayload((v17 + v14) & v20, 1, v7))
        (*(void (**)(unint64_t, uint64_t))(v10 + 8))((v17 + v14) & v20, v7);
      break;
    case 2:
    case 3:
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
      break;
    default:
      return j_j__swift_release(*(_QWORD *)((v14 + v19 + 8) & 0xFFFFFFFFFFFFFFF8));
  }
  return j_j__swift_release(*(_QWORD *)((v14 + v19 + 8) & 0xFFFFFFFFFFFFFFF8));
}

void *sub_22129DBEC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  uint64_t v8;
  int v9;
  size_t v10;
  size_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  size_t v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  void *v35;
  const void *v36;
  unint64_t v37;
  void *v38;

  v6 = sub_2212F2A24();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  v8 = *(_QWORD *)(v6 - 8);
  if (EnumTagSinglePayload)
  {
    v9 = *(_DWORD *)(v8 + 84);
    v10 = *(_QWORD *)(v8 + 64);
    if (v9)
      v11 = v10;
    else
      v11 = v10 + 1;
    memcpy(a1, a2, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    v9 = *(_DWORD *)(v8 + 84);
    v10 = *(_QWORD *)(v8 + 64);
  }
  if (v9)
    v12 = v10;
  else
    v12 = v10 + 1;
  v14 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v13 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = (v17 | *(_DWORD *)(v15 + 80)) & 0xF8 | 7u;
  v19 = v12 + v18;
  v38 = a1;
  v20 = ((unint64_t)a1 + v19) & ~v18;
  v21 = ((unint64_t)a2 + v19) & ~v18;
  v22 = *(_QWORD *)(v15 + 64);
  if (*(_DWORD *)(v15 + 84))
    v23 = *(_QWORD *)(v15 + 64);
  else
    v23 = v22 + 1;
  v24 = v23 + v17;
  if (*(_DWORD *)(v16 + 84))
    v25 = *(_QWORD *)(v16 + 64);
  else
    v25 = *(_QWORD *)(v16 + 64) + 1;
  if ((v24 & ~(unint64_t)v17) + v25 > v22)
    v22 = (v24 & ~(unint64_t)v17) + v25;
  if (v22 <= 0x10)
    v26 = 16;
  else
    v26 = v22;
  switch(*(_BYTE *)(v21 + v26))
  {
    case 0:
      v27 = *(_QWORD *)(v21 + 8);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *(_QWORD *)(v20 + 8) = v27;
      *(_BYTE *)(v20 + v26) = 0;
      swift_retain();
      break;
    case 1:
      v37 = ~(unint64_t)v17;
      if (__swift_getEnumTagSinglePayload(v21, 1, v14))
      {
        memcpy((void *)v20, (const void *)v21, v23);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v20, v21, v14);
        __swift_storeEnumTagSinglePayload(v20, 0, 1, v14);
      }
      v35 = (void *)((v24 + v20) & v37);
      v36 = (const void *)((v24 + v21) & v37);
      if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v13))
      {
        memcpy(v35, v36, v25);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v35, v36, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v13);
      }
      v29 = v38;
      *(_BYTE *)(v20 + v26) = 1;
      goto LABEL_30;
    case 2:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v20, v21, v14);
      v28 = 2;
      goto LABEL_28;
    case 3:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v20, v21, v14);
      v28 = 3;
LABEL_28:
      *(_BYTE *)(v20 + v26) = v28;
      break;
    default:
      memcpy((void *)v20, (const void *)v21, v26 + 1);
      break;
  }
  v29 = v38;
LABEL_30:
  v30 = ((v20 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8;
  v31 = ((v21 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8;
  v32 = *(_QWORD *)v31;
  v33 = *(_BYTE *)(v31 + 8);
  j__swift_retain(*(_QWORD *)v31);
  *(_QWORD *)v30 = v32;
  *(_BYTE *)(v30 + 8) = v33;
  return v29;
}

void *sub_22129DEB8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  size_t v22;
  size_t v23;
  size_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  size_t v30;
  uint64_t v31;
  char v32;
  void *v33;
  const void *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void *result;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v6 = sub_2212F2A24();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  v9 = *(_QWORD *)(v6 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
  }
  if (*(_DWORD *)(v9 + 84))
    v10 = *(_QWORD *)(v9 + 64);
  else
    v10 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v11 = *(_QWORD *)(v9 + 64);
  else
    v11 = *(_QWORD *)(v9 + 64) + 1;
  v13 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(a3 + 24);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v12 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = (v16 | *(_DWORD *)(v14 + 80)) & 0xF8 | 7u;
  v18 = v11 + v17;
  v19 = ((unint64_t)a1 + v18) & ~v17;
  v20 = ((unint64_t)a2 + v18) & ~v17;
  v21 = *(_QWORD *)(v14 + 64);
  if (*(_DWORD *)(v14 + 84))
    v22 = *(_QWORD *)(v14 + 64);
  else
    v22 = v21 + 1;
  v23 = v22 + v16;
  if (*(_DWORD *)(v15 + 84))
    v24 = *(_QWORD *)(v15 + 64);
  else
    v24 = *(_QWORD *)(v15 + 64) + 1;
  if ((v23 & ~(unint64_t)v16) + v24 > v21)
    v21 = (v23 & ~(unint64_t)v16) + v24;
  if (v21 <= 0x10)
    v25 = 16;
  else
    v25 = v21;
  if (*(unsigned __int8 *)(v20 + v25) > 3u)
  {
    switch(*(_BYTE *)(v19 + v25))
    {
      case 0:
        swift_release();
        break;
      case 1:
        v26 = ~(unint64_t)v16;
        v27 = v12;
        if (!__swift_getEnumTagSinglePayload(v19, 1, v13))
          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
        if (!__swift_getEnumTagSinglePayload((v23 + v19) & v26, 1, v27))
          (*(void (**)(size_t, uint64_t))(v15 + 8))((v23 + v19) & v26, v27);
        break;
      case 2:
      case 3:
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
        break;
      default:
        goto LABEL_28;
    }
LABEL_39:
    memcpy((void *)v19, (const void *)v20, v25 + 1);
  }
  else if (v19 != v20)
  {
    v41 = ~(unint64_t)v16;
    v43 = v12;
    switch(*(_BYTE *)(v19 + v25))
    {
      case 0:
        swift_release();
        goto LABEL_52;
      case 1:
        if (!__swift_getEnumTagSinglePayload(v19, 1, v13))
          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
        if (!__swift_getEnumTagSinglePayload((v23 + v19) & v41, 1, v43))
          (*(void (**)(size_t, uint64_t))(v15 + 8))((v23 + v19) & v41, v43);
        goto LABEL_52;
      case 2:
      case 3:
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
LABEL_52:
        switch(*(_BYTE *)(v20 + v25))
        {
          case 0:
            goto LABEL_53;
          case 1:
            if (__swift_getEnumTagSinglePayload(v20, 1, v13))
            {
              memcpy((void *)v19, (const void *)v20, v22);
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v19, v20, v13);
              __swift_storeEnumTagSinglePayload(v19, 0, 1, v13);
            }
            v30 = v23 + v19;
            v29 = v41;
            goto LABEL_60;
          case 2:
            goto LABEL_54;
          case 3:
            goto LABEL_55;
          default:
            if (v25 <= 3)
              v28 = v25;
            else
              v28 = 4;
            __asm { BR              X12 }
            return result;
        }
      default:
        break;
    }
LABEL_28:
    switch(*(_BYTE *)(v20 + v25))
    {
      case 0:
LABEL_53:
        v31 = *(_QWORD *)(v20 + 8);
        *(_QWORD *)v19 = *(_QWORD *)v20;
        *(_QWORD *)(v19 + 8) = v31;
        *(_BYTE *)(v19 + v25) = 0;
        swift_retain();
        break;
      case 1:
        v42 = ~(unint64_t)v16;
        v43 = v12;
        if (__swift_getEnumTagSinglePayload(v20, 1, v13))
        {
          memcpy((void *)v19, (const void *)v20, v22);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v19, v20, v13);
          __swift_storeEnumTagSinglePayload(v19, 0, 1, v13);
        }
        v29 = v42;
        v30 = v23 + v19;
LABEL_60:
        v33 = (void *)(v30 & v29);
        v34 = (const void *)((v23 + v20) & v29);
        if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v43))
        {
          memcpy(v33, v34, v24);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v33, v34, v43);
          __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v43);
        }
        v32 = 1;
        goto LABEL_64;
      case 2:
LABEL_54:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v19, v20, v13);
        v32 = 2;
        goto LABEL_64;
      case 3:
LABEL_55:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v19, v20, v13);
        v32 = 3;
LABEL_64:
        *(_BYTE *)(v19 + v25) = v32;
        break;
      default:
        goto LABEL_39;
    }
  }
  v35 = ((v19 | 7) + v25 + 1) & 0xFFFFFFFFFFFFFFF8;
  v36 = ((v20 | 7) + v25 + 1) & 0xFFFFFFFFFFFFFFF8;
  v37 = *(_QWORD *)v36;
  v38 = *(_BYTE *)(v36 + 8);
  j__swift_retain(*(_QWORD *)v36);
  v39 = *(_QWORD *)v35;
  *(_QWORD *)v35 = v37;
  *(_BYTE *)(v35 + 8) = v38;
  j_j__swift_release(v39);
  return a1;
}

void *sub_22129E3EC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  uint64_t v8;
  int v9;
  size_t v10;
  size_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  size_t v23;
  size_t v24;
  size_t v25;
  uint64_t v26;
  char v27;
  void *v28;
  const void *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v34;
  uint64_t v35;

  v6 = sub_2212F2A24();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  v8 = *(_QWORD *)(v6 - 8);
  if (EnumTagSinglePayload)
  {
    v9 = *(_DWORD *)(v8 + 84);
    v10 = *(_QWORD *)(v8 + 64);
    if (v9)
      v11 = v10;
    else
      v11 = v10 + 1;
    memcpy(a1, a2, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    v9 = *(_DWORD *)(v8 + 84);
    v10 = *(_QWORD *)(v8 + 64);
  }
  if (v9)
    v12 = v10;
  else
    v12 = v10 + 1;
  v14 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v13 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = (v17 | *(_DWORD *)(v15 + 80)) & 0xF8 | 7u;
  v19 = v12 + v18;
  v20 = ((unint64_t)a1 + v19) & ~v18;
  v21 = ((unint64_t)a2 + v19) & ~v18;
  v22 = *(_QWORD *)(v15 + 64);
  if (*(_DWORD *)(v15 + 84))
    v23 = *(_QWORD *)(v15 + 64);
  else
    v23 = v22 + 1;
  v24 = v23 + v17;
  if (*(_DWORD *)(v16 + 84))
    v25 = *(_QWORD *)(v16 + 64);
  else
    v25 = *(_QWORD *)(v16 + 64) + 1;
  if ((v24 & ~(unint64_t)v17) + v25 > v22)
    v22 = (v24 & ~(unint64_t)v17) + v25;
  if (v22 <= 0x10)
    v26 = 16;
  else
    v26 = v22;
  switch(*(_BYTE *)(v21 + v26))
  {
    case 0:
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *(_BYTE *)(v20 + v26) = 0;
      break;
    case 1:
      v34 = ~(unint64_t)v17;
      v35 = v13;
      if (__swift_getEnumTagSinglePayload(v21, 1, v14))
      {
        memcpy((void *)v20, (const void *)v21, v23);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v20, v21, v14);
        __swift_storeEnumTagSinglePayload(v20, 0, 1, v14);
      }
      v28 = (void *)((v24 + v20) & v34);
      v29 = (const void *)((v24 + v21) & v34);
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v35))
      {
        memcpy(v28, v29, v25);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v28, v29, v35);
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v35);
      }
      v27 = 1;
      goto LABEL_33;
    case 2:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v20, v21, v14);
      v27 = 2;
      goto LABEL_33;
    case 3:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v20, v21, v14);
      v27 = 3;
LABEL_33:
      *(_BYTE *)(v20 + v26) = v27;
      break;
    default:
      memcpy((void *)v20, (const void *)v21, v26 + 1);
      break;
  }
  v30 = ((v21 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)v30;
  v32 = ((v20 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(v30 + 8);
  *(_QWORD *)v32 = v31;
  return a1;
}

void *sub_22129E69C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  size_t v22;
  size_t v23;
  size_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  size_t v30;
  char v31;
  void *v32;
  const void *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *result;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v6 = sub_2212F2A24();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  v9 = *(_QWORD *)(v6 - 8);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
  }
  if (*(_DWORD *)(v9 + 84))
    v10 = *(_QWORD *)(v9 + 64);
  else
    v10 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v11 = *(_QWORD *)(v9 + 64);
  else
    v11 = *(_QWORD *)(v9 + 64) + 1;
  v13 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(a3 + 24);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v12 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = (v16 | *(_DWORD *)(v14 + 80)) & 0xF8 | 7u;
  v18 = v11 + v17;
  v19 = ((unint64_t)a1 + v18) & ~v17;
  v20 = ((unint64_t)a2 + v18) & ~v17;
  v21 = *(_QWORD *)(v14 + 64);
  if (*(_DWORD *)(v14 + 84))
    v22 = *(_QWORD *)(v14 + 64);
  else
    v22 = v21 + 1;
  v23 = v22 + v16;
  if (*(_DWORD *)(v15 + 84))
    v24 = *(_QWORD *)(v15 + 64);
  else
    v24 = *(_QWORD *)(v15 + 64) + 1;
  if ((v23 & ~(unint64_t)v16) + v24 > v21)
    v21 = (v23 & ~(unint64_t)v16) + v24;
  if (v21 <= 0x10)
    v25 = 16;
  else
    v25 = v21;
  if (*(unsigned __int8 *)(v20 + v25) > 3u)
  {
    switch(*(_BYTE *)(v19 + v25))
    {
      case 0:
        swift_release();
        break;
      case 1:
        v26 = ~(unint64_t)v16;
        v27 = v12;
        if (!__swift_getEnumTagSinglePayload(v19, 1, v13))
          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
        if (!__swift_getEnumTagSinglePayload((v23 + v19) & v26, 1, v27))
          (*(void (**)(size_t, uint64_t))(v15 + 8))((v23 + v19) & v26, v27);
        break;
      case 2:
      case 3:
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
        break;
      default:
        goto LABEL_28;
    }
LABEL_39:
    memcpy((void *)v19, (const void *)v20, v25 + 1);
  }
  else if (v19 != v20)
  {
    v39 = ~(unint64_t)v16;
    v41 = v12;
    switch(*(_BYTE *)(v19 + v25))
    {
      case 0:
        swift_release();
        goto LABEL_52;
      case 1:
        if (!__swift_getEnumTagSinglePayload(v19, 1, v13))
          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
        if (!__swift_getEnumTagSinglePayload((v23 + v19) & v39, 1, v41))
          (*(void (**)(size_t, uint64_t))(v15 + 8))((v23 + v19) & v39, v41);
        goto LABEL_52;
      case 2:
      case 3:
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
LABEL_52:
        switch(*(_BYTE *)(v20 + v25))
        {
          case 0:
            goto LABEL_53;
          case 1:
            if (__swift_getEnumTagSinglePayload(v20, 1, v13))
            {
              memcpy((void *)v19, (const void *)v20, v22);
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v19, v20, v13);
              __swift_storeEnumTagSinglePayload(v19, 0, 1, v13);
            }
            v30 = v23 + v19;
            v29 = v39;
            goto LABEL_60;
          case 2:
            goto LABEL_54;
          case 3:
            goto LABEL_55;
          default:
            if (v25 <= 3)
              v28 = v25;
            else
              v28 = 4;
            __asm { BR              X12 }
            return result;
        }
      default:
        break;
    }
LABEL_28:
    switch(*(_BYTE *)(v20 + v25))
    {
      case 0:
LABEL_53:
        *(_OWORD *)v19 = *(_OWORD *)v20;
        *(_BYTE *)(v19 + v25) = 0;
        break;
      case 1:
        v40 = ~(unint64_t)v16;
        v41 = v12;
        if (__swift_getEnumTagSinglePayload(v20, 1, v13))
        {
          memcpy((void *)v19, (const void *)v20, v22);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v19, v20, v13);
          __swift_storeEnumTagSinglePayload(v19, 0, 1, v13);
        }
        v29 = v40;
        v30 = v23 + v19;
LABEL_60:
        v32 = (void *)(v30 & v29);
        v33 = (const void *)((v23 + v20) & v29);
        if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v41))
        {
          memcpy(v32, v33, v24);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v32, v33, v41);
          __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v41);
        }
        v31 = 1;
        goto LABEL_64;
      case 2:
LABEL_54:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v19, v20, v13);
        v31 = 2;
        goto LABEL_64;
      case 3:
LABEL_55:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v19, v20, v13);
        v31 = 3;
LABEL_64:
        *(_BYTE *)(v19 + v25) = v31;
        break;
      default:
        goto LABEL_39;
    }
  }
  v34 = ((v19 | 7) + v25 + 1) & 0xFFFFFFFFFFFFFFF8;
  v35 = ((v20 | 7) + v25 + 1) & 0xFFFFFFFFFFFFFFF8;
  v36 = *(_QWORD *)v35;
  LOBYTE(v35) = *(_BYTE *)(v35 + 8);
  v37 = *(_QWORD *)v34;
  *(_QWORD *)v34 = v36;
  *(_BYTE *)(v34 + 8) = v35;
  j_j__swift_release(v37);
  return a1;
}

uint64_t sub_22129EBC0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int EnumTagSinglePayload;
  unsigned int v29;

  v6 = sub_2212F2A24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  if ((_DWORD)v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0xFE)
    v10 = 254;
  else
    v10 = v9;
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = *(_QWORD *)(v7 + 64);
  if (!(_DWORD)v8)
    ++v13;
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = *(_DWORD *)(v14 + 84);
  v17 = *(_QWORD *)(v14 + 64);
  if (*(_DWORD *)(v11 + 84))
    v18 = *(_QWORD *)(v11 + 64);
  else
    v18 = v12 + 1;
  if (!v16)
    ++v17;
  v19 = v17 + ((v18 + v15) & ~(unint64_t)v15);
  if (v19 <= v12)
    v19 = *(_QWORD *)(v11 + 64);
  if (v19 <= 0x10)
    v19 = 16;
  if (!a2)
    return 0;
  v20 = (*(_DWORD *)(v11 + 80) | v15) & 0xF8 | 7u;
  v21 = v13 + v20;
  v22 = v19 + 8;
  if (v10 < a2)
  {
    v23 = ((v22 + (v21 & ~(_DWORD)v20)) & 0xFFFFFFF8) + 9;
    if (v23 < 4)
      v24 = ((a2 - v10 + 255) >> (8 * v23)) + 1;
    else
      v24 = 2;
    if (v24 >= 0x10000)
      v25 = 4;
    else
      v25 = 2;
    if (v24 < 0x100)
      v25 = 1;
    if (v24 >= 2)
      v26 = v25;
    else
      v26 = 0;
    __asm { BR              X17 }
  }
  if (v9 < 0xFE)
  {
    v29 = *(unsigned __int8 *)(((v22 + ((v21 + a1) & ~v20)) & 0xFFFFFFFFFFFFF8) + 8);
    if (v29 > 1)
      return (v29 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v8, v6);
    if (EnumTagSinglePayload >= 2)
      return EnumTagSinglePayload - 1;
    else
      return 0;
  }
}

void sub_22129ED94(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  size_t v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  int v30;

  v8 = 0;
  v9 = *(_QWORD *)(sub_2212F2A24() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v11 <= 0xFE)
    v12 = 254;
  else
    v12 = v11;
  v13 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = *(_QWORD *)(v9 + 64);
  if (v10)
    v16 = v15;
  else
    v16 = v15 + 1;
  v18 = v13 + 80;
  v17 = *(_DWORD *)(v13 + 80);
  v19 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v20 = *(_DWORD *)(v19 + 80);
  if (*(_DWORD *)(v18 + 4))
    v21 = v14;
  else
    v21 = v14 + 1;
  v22 = (v17 | v20) & 0xF8 | 7u;
  if (*(_DWORD *)(v19 + 84))
    v23 = *(_QWORD *)(v19 + 64);
  else
    v23 = *(_QWORD *)(v19 + 64) + 1;
  v24 = v23 + ((v21 + v20) & ~(unint64_t)*(_DWORD *)(v19 + 80));
  if (v24 <= v14)
    v24 = v14;
  if (v24 <= 0x10)
    v24 = 16;
  v25 = ((v24 + 8 + ((v16 + v22) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v12 < a3)
  {
    if (v25 <= 3)
      v26 = ((a3 - v12 + 255) >> (8 * v25)) + 1;
    else
      v26 = 2;
    if (v26 >= 0x10000)
      v27 = 4;
    else
      v27 = 2;
    if (v26 < 0x100)
      v27 = 1;
    if (v26 >= 2)
      v8 = v27;
    else
      v8 = 0;
  }
  if (v12 < a2)
  {
    v28 = ~v12 + a2;
    v29 = (~(_BYTE)v12 + a2);
    if (v25 >= 4)
      v30 = v28;
    else
      v30 = v29;
    bzero(a1, v25);
    if ((_DWORD)v25 == 1)
      *a1 = v30;
    else
      *(_DWORD *)a1 = v30;
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_22129EF34()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x22129F018);
}

void sub_22129EF3C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x22129EF44);
  JUMPOUT(0x22129F018);
}

void sub_22129EFA8()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x22129F018);
}

void sub_22129EFD4()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x22129F018);
}

void sub_22129EFDC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x22129F018);
}

void sub_22129EFE4(size_t a1@<X1>, unsigned int a2@<W8>)
{
  int v2;
  char *v3;
  unsigned int v4;
  uint64_t v5;

  *(_WORD *)&v3[v5] = 0;
  if (v4)
  {
    if (a2 < 0xFE)
      JUMPOUT(0x22129EFB0);
    if (a2 >= v4)
      JUMPOUT(0x22129EFF0);
    if ((_DWORD)a1)
    {
      if (a1 <= 3)
        v2 = a1;
      else
        v2 = 4;
      bzero(v3, a1);
      __asm { BR              X10 }
    }
  }
  JUMPOUT(0x22129F018);
}

void sub_22129F02C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x22129F018);
}

void sub_22129F03C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x22129F018);
}

void sub_22129F044()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x22129F018);
}

void type metadata accessor for PromotionalIconLoadingView()
{
  JUMPOUT(0x22766BA10);
}

void sub_22129F05C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255667240[0])
  {
    sub_2212F2A24();
    v0 = sub_2212F5844();
    if (!v1)
      atomic_store(v0, qword_255667240);
  }
}

void type metadata accessor for PromotionalIconLoadingView.IconType()
{
  JUMPOUT(0x22766BA10);
}

uint64_t sub_22129F0BC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[6];
  uint64_t v8;
  uint64_t v9;

  v7[4] = MEMORY[0x24BEE4AF0] + 64;
  v0 = sub_2212F5844();
  if (v1 <= 0x3F)
  {
    v2 = sub_2212F5844();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout2();
      v7[5] = v7;
      v4 = swift_checkMetadataState();
      v0 = v4;
      if (v5 <= 0x3F)
      {
        v8 = *(_QWORD *)(v4 - 8) + 64;
        v9 = v8;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v0;
}

uint64_t *sub_22129F1A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  size_t v10;
  uint64_t v11;
  int v12;
  size_t v13;
  unint64_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  const void *v23;
  uint64_t *result;
  unint64_t v25;

  v4 = a1;
  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_DWORD *)(v7 + 80);
  if (*(_DWORD *)(v7 + 84))
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = v8 + 1;
  v11 = *(_QWORD *)(v5 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v10 + v12;
  v14 = v13 & ~(unint64_t)v12;
  if (*(_DWORD *)(v11 + 84))
    v15 = *(_QWORD *)(v11 + 64);
  else
    v15 = *(_QWORD *)(v11 + 64) + 1;
  if (v14 + v15 > v8)
    v8 = v14 + v15;
  if (v8 <= 0x10)
    v16 = 16;
  else
    v16 = v8;
  if (((v9 | v12) & 0x1000F8) != 0 || (unint64_t)(v16 + 1) > 0x18)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18
                   + ((((v9 | v12) & 0xF8 | 7u) + 16) & ~(unint64_t)((v9 | v12) & 0xF8 | 7u)));
LABEL_18:
    swift_retain();
  }
  else
  {
    switch(*((_BYTE *)a2 + v16))
    {
      case 0:
        v20 = a2[1];
        *v4 = *a2;
        v4[1] = v20;
        *((_BYTE *)v4 + v16) = 0;
        goto LABEL_18;
      case 1:
        v25 = ~(unint64_t)v12;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
        {
          memcpy(v4, a2, v10);
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v4, a2, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v6);
        }
        v22 = (void *)(((unint64_t)v4 + v13) & v25);
        v23 = (const void *)(((unint64_t)a2 + v13) & v25);
        if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v5))
        {
          memcpy(v22, v23, v15);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v22, v23, v5);
          __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v5);
        }
        v21 = 1;
        goto LABEL_34;
      case 2:
        (*(void (**)(uint64_t *, uint64_t *, _QWORD))(v7 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
        v21 = 2;
        goto LABEL_34;
      case 3:
        (*(void (**)(uint64_t *, uint64_t *, _QWORD))(v7 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
        v21 = 3;
LABEL_34:
        *((_BYTE *)v4 + v16) = v21;
        break;
      default:
        if (v16 <= 3)
          v19 = v16;
        else
          v19 = 4;
        __asm { BR              X13 }
        return result;
    }
  }
  return v4;
}

uint64_t sub_22129F414(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = v6 + 1;
  v8 = *(_QWORD *)(v3 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v7 + v9) & ~v9;
  if (*(_DWORD *)(v8 + 84))
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  v13 = v12 + v11;
  if (v13 > v6)
    v6 = v13;
  if (v6 <= 0x10)
    v6 = 16;
  v15 = ~v9;
  switch(*(_BYTE *)(a1 + v6))
  {
    case 0:
      return swift_release();
    case 1:
      if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
      result = __swift_getEnumTagSinglePayload((v10 + a1) & v15, 1, v3);
      if ((_DWORD)result)
        return result;
      v16 = *(uint64_t (**)(void))(v8 + 8);
      return v16();
    case 2:
    case 3:
      v16 = *(uint64_t (**)(void))(v5 + 8);
      return v16();
    default:
      if (v6 <= 3)
        v14 = v6;
      else
        v14 = 4;
      __asm { BR              X14 }
      return result;
  }
}

_QWORD *sub_22129F5B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  const void *v19;
  _QWORD *result;
  size_t __n;

  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = v8 + 1;
  v10 = *(_QWORD *)(v5 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  if (((v9 + v11) & ~v11) + v13 > v8)
    v8 = ((v9 + v11) & ~v11) + v13;
  if (v8 <= 0x10)
    v14 = 16;
  else
    v14 = v8;
  v16 = ~v11;
  switch(*((_BYTE *)a2 + v14))
  {
    case 0:
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      *((_BYTE *)a1 + v14) = 0;
      swift_retain();
      return a1;
    case 1:
      __n = v13;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
      {
        memcpy(a1, a2, v9);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      }
      v19 = (const void *)(((unint64_t)a2 + v12) & v16);
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v5))
      {
        memcpy((void *)(((unint64_t)a1 + v12) & v16), v19, __n);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v16, v19, v5);
        __swift_storeEnumTagSinglePayload(((unint64_t)a1 + v12) & v16, 0, 1, v5);
      }
      v18 = 1;
      goto LABEL_27;
    case 2:
      (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v7 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
      v18 = 2;
      goto LABEL_27;
    case 3:
      (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v7 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
      v18 = 3;
LABEL_27:
      *((_BYTE *)a1 + v14) = v18;
      return a1;
    default:
      if (v14 <= 3)
        v15 = v14;
      else
        v15 = 4;
      __asm { BR              X13 }
      return result;
  }
}

_QWORD *sub_22129F7EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  const void *v20;
  _QWORD *result;
  size_t __n;
  uint64_t v23;

  if (a1 != a2)
  {
    v6 = *(_QWORD *)(a3 + 16);
    v5 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    if (*(_DWORD *)(v7 + 84))
      v9 = *(_QWORD *)(v7 + 64);
    else
      v9 = v8 + 1;
    v10 = *(_QWORD *)(v5 - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v12 = v9 + v11;
    if (*(_DWORD *)(v10 + 84))
      v13 = *(_QWORD *)(v10 + 64);
    else
      v13 = *(_QWORD *)(v10 + 64) + 1;
    if (((v9 + v11) & ~v11) + v13 > v8)
      v8 = ((v9 + v11) & ~v11) + v13;
    if (v8 <= 0x10)
      v14 = 16;
    else
      v14 = v8;
    __n = v13;
    v23 = ~v11;
    switch(*((_BYTE *)a1 + v14))
    {
      case 0:
        swift_release();
        break;
      case 1:
        if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6))
          (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(a1, v6);
        if (!__swift_getEnumTagSinglePayload(((unint64_t)a1 + v12) & v23, 1, v5))
          (*(void (**)(unint64_t))(v10 + 8))(((unint64_t)a1 + v12) & v23);
        break;
      case 2:
      case 3:
        (*(void (**)(_QWORD *))(v7 + 8))(a1);
        break;
      default:
        if (v14 <= 3)
          v15 = v14;
        else
          v15 = 4;
        __asm { BR              X13 }
        return result;
    }
    switch(*((_BYTE *)a2 + v14))
    {
      case 0:
        v17 = a2[1];
        *a1 = *a2;
        a1[1] = v17;
        *((_BYTE *)a1 + v14) = 0;
        swift_retain();
        return a1;
      case 1:
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
        {
          memcpy(a1, a2, v9);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
        }
        v19 = (void *)(((unint64_t)a1 + v12) & v23);
        v20 = (const void *)(((unint64_t)a2 + v12) & v23);
        if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v5))
        {
          memcpy(v19, v20, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v19, v20, v5);
          __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v5);
        }
        v18 = 1;
        goto LABEL_40;
      case 2:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
        v18 = 2;
        goto LABEL_40;
      case 3:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
        v18 = 3;
LABEL_40:
        *((_BYTE *)a1 + v14) = v18;
        break;
      default:
        if (v14 <= 3)
          v16 = v14;
        else
          v16 = 4;
        __asm { BR              X12 }
        return result;
    }
  }
  return a1;
}

_OWORD *sub_22129FB2C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  const void *v19;
  _OWORD *result;
  size_t __n;

  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = v8 + 1;
  v10 = *(_QWORD *)(v5 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  if (*(_DWORD *)(v10 + 84))
    v13 = *(_QWORD *)(v10 + 64);
  else
    v13 = *(_QWORD *)(v10 + 64) + 1;
  if (((v9 + v11) & ~v11) + v13 > v8)
    v8 = ((v9 + v11) & ~v11) + v13;
  if (v8 <= 0x10)
    v14 = 16;
  else
    v14 = v8;
  v16 = ~v11;
  switch(*((_BYTE *)a2 + v14))
  {
    case 0:
      v17 = 0;
      *a1 = *a2;
      break;
    case 1:
      __n = v13;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
      {
        memcpy(a1, a2, v9);
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      }
      v18 = ((unint64_t)a1 + v12) & v16;
      v19 = (const void *)(((unint64_t)a2 + v12) & v16);
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v5))
      {
        memcpy((void *)(((unint64_t)a1 + v12) & v16), v19, __n);
        v17 = 1;
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v10 + 32))(((unint64_t)a1 + v12) & v16, v19, v5);
        v17 = 1;
        __swift_storeEnumTagSinglePayload(v18, 0, 1, v5);
      }
      break;
    case 2:
      (*(void (**)(_OWORD *, _OWORD *, _QWORD))(v7 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
      v17 = 2;
      break;
    case 3:
      (*(void (**)(_OWORD *, _OWORD *, _QWORD))(v7 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
      v17 = 3;
      break;
    default:
      if (v14 <= 3)
        v15 = v14;
      else
        v15 = 4;
      __asm { BR              X13 }
      return result;
  }
  *((_BYTE *)a1 + v14) = v17;
  return a1;
}

_OWORD *sub_22129FD60(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  const void *v19;
  _OWORD *result;
  size_t __n;
  uint64_t v22;

  if (a1 != a2)
  {
    v6 = *(_QWORD *)(a3 + 16);
    v5 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)(v7 + 64);
    if (*(_DWORD *)(v7 + 84))
      v9 = *(_QWORD *)(v7 + 64);
    else
      v9 = v8 + 1;
    v10 = *(_QWORD *)(v5 - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v12 = v9 + v11;
    if (*(_DWORD *)(v10 + 84))
      v13 = *(_QWORD *)(v10 + 64);
    else
      v13 = *(_QWORD *)(v10 + 64) + 1;
    if (((v9 + v11) & ~v11) + v13 > v8)
      v8 = ((v9 + v11) & ~v11) + v13;
    if (v8 <= 0x10)
      v14 = 16;
    else
      v14 = v8;
    __n = v13;
    v22 = ~v11;
    switch(*((_BYTE *)a1 + v14))
    {
      case 0:
        swift_release();
        break;
      case 1:
        if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6))
          (*(void (**)(_OWORD *, uint64_t))(v7 + 8))(a1, v6);
        if (!__swift_getEnumTagSinglePayload(((unint64_t)a1 + v12) & v22, 1, v5))
          (*(void (**)(unint64_t))(v10 + 8))(((unint64_t)a1 + v12) & v22);
        break;
      case 2:
      case 3:
        (*(void (**)(_OWORD *))(v7 + 8))(a1);
        break;
      default:
        if (v14 <= 3)
          v15 = v14;
        else
          v15 = 4;
        __asm { BR              X13 }
        return result;
    }
    switch(*((_BYTE *)a2 + v14))
    {
      case 0:
        v17 = 0;
        *a1 = *a2;
        break;
      case 1:
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
        {
          memcpy(a1, a2, v9);
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
        }
        v18 = (void *)(((unint64_t)a1 + v12) & v22);
        v19 = (const void *)(((unint64_t)a2 + v12) & v22);
        if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v5))
        {
          memcpy(v18, v19, __n);
          v17 = 1;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v18, v19, v5);
          v17 = 1;
          __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v5);
        }
        break;
      case 2:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
        v17 = 2;
        break;
      case 3:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
        v17 = 3;
        break;
      default:
        if (v14 <= 3)
          v16 = v14;
        else
          v16 = 4;
        __asm { BR              X12 }
        return result;
    }
    *((_BYTE *)a1 + v14) = v17;
  }
  return a1;
}

uint64_t sub_2212A00A0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v19;
  int v20;
  unsigned int v21;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = v4 == 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_DWORD *)(v7 + 84);
  v10 = *(_QWORD *)(v7 + 64);
  if (v6)
    v11 = v5 + 1;
  else
    v11 = v5;
  v12 = (v11 + v8) & ~v8;
  if (!v9)
    ++v10;
  v13 = v10 + v12;
  if (v13 > v5)
    v5 = v13;
  v14 = 16;
  if (v5 > 0x10)
    v14 = v5;
  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_28;
  v15 = v14 + 1;
  v16 = 8 * (v14 + 1);
  if ((v14 + 1) <= 3)
  {
    v19 = ((a2 + ~(-1 << v16) - 252) >> v16) + 1;
    if (HIWORD(v19))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v19 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v19 < 2)
    {
LABEL_28:
      v21 = *(unsigned __int8 *)(a1 + v14);
      if (v21 >= 4)
        return (v21 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_28;
LABEL_21:
  v20 = (v17 - 1) << v16;
  if (v15 > 3)
    v20 = 0;
  if (!(_DWORD)v15)
    return (v20 + 253);
  if (v15 > 3)
    LODWORD(v15) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2212A019C + 4 * byte_221317A15[(v15 - 1)]))();
}

void sub_2212A01E8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  int v6;
  unint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  size_t v16;
  char v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v6 == 0;
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_DWORD *)(v9 + 84);
  v12 = *(_QWORD *)(v9 + 64);
  if (v8)
    v13 = v7 + 1;
  else
    v13 = v7;
  v14 = (v13 + v10) & ~v10;
  if (!v11)
    ++v12;
  v15 = v12 + v14;
  if (v15 > v7)
    v7 = v15;
  if (v7 <= 0x10)
    v7 = 16;
  v16 = v7 + 1;
  v17 = 8 * (v7 + 1);
  if (a3 < 0xFD)
  {
    v18 = 0;
  }
  else if (v16 <= 3)
  {
    v20 = ((a3 + ~(-1 << v17) - 252) >> v17) + 1;
    if (HIWORD(v20))
    {
      v18 = 4u;
    }
    else if (v20 >= 0x100)
    {
      v18 = 2;
    }
    else
    {
      v18 = v20 > 1;
    }
  }
  else
  {
    v18 = 1u;
  }
  if (a2 <= 0xFC)
    __asm { BR              X11 }
  v19 = a2 - 253;
  if (v16 < 4)
  {
    if ((_DWORD)v7 != -1)
    {
      v21 = v19 & ~(-1 << v17);
      bzero(a1, v16);
      if ((_DWORD)v16 == 3)
      {
        *a1 = v21;
        *((_BYTE *)a1 + 2) = BYTE2(v21);
      }
      else if ((_DWORD)v16 == 2)
      {
        *a1 = v21;
      }
      else
      {
        *(_BYTE *)a1 = v21;
      }
    }
  }
  else
  {
    bzero(a1, v7 + 1);
    *(_DWORD *)a1 = v19;
  }
  __asm { BR              X10 }
}

uint64_t sub_2212A03C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_DWORD *)(v2 + 84);
  v4 = *(_QWORD *)(v2 + 64);
  if (v3)
    v5 = v4;
  else
    v5 = v4 + 1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(v6 + 64);
  if (!v8)
    ++v9;
  v10 = v9 + v7;
  if (v10 > v4)
    v4 = v10;
  v11 = 16;
  if (v4 > 0x10)
    v11 = v4;
  if (*(unsigned __int8 *)(a1 + v11) < 4u)
    return *(unsigned __int8 *)(a1 + v11);
  if (v11 <= 3)
    v12 = v11;
  else
    v12 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2212A0444 + 4 * byte_221317A23[v12]))();
}

_BYTE *sub_2212A048C(_BYTE *result, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  size_t v5;
  size_t v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  size_t v11;
  unsigned int v12;
  int v13;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(v3 + 64);
  if (v4)
    v6 = v5;
  else
    v6 = v5 + 1;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_DWORD *)(v7 + 84);
  v10 = *(_QWORD *)(v7 + 64);
  if (!v9)
    ++v10;
  v11 = v10 + v8;
  if (v11 > v5)
    v5 = v11;
  if (v5 <= 0x10)
    v5 = 16;
  if (a2 > 3)
  {
    v12 = ((a2 - 4) >> (8 * v5)) + 4;
    if (v5 > 3)
      LOBYTE(v12) = 4;
    result[v5] = v12;
    if (v5 >= 4)
      v13 = 4;
    else
      v13 = v5;
    bzero(result, v5);
    __asm { BR              X10 }
  }
  result[v5] = a2;
  return result;
}

uint64_t sub_2212A0594()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2212A05C8()
{
  OUTLINED_FUNCTION_12_46();
}

void sub_2212A0618(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;

  v5 = v3 + *(int *)(a1 + 56);
  *(_QWORD *)v5 = swift_getKeyPath();
  *(_BYTE *)(v5 + 8) = 0;
  v6 = (_QWORD *)(v3 + *(int *)(a1 + 52));
  *v6 = v2;
  v6[1] = v1;
  type metadata accessor for PromotionalIconLoadingView.IconType();
}

uint64_t sub_2212A0658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v3, 0, 1, a1);
  return sub_2210E3240(v1, v2);
}

void sub_2212A06AC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2212F5844();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_12_46();
}

void sub_2212A0760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);

  v11 = v4 + *(int *)(a1 + 56);
  *(_QWORD *)v11 = swift_getKeyPath();
  *(_BYTE *)(v11 + 8) = 0;
  if ((v3 & 1) != 0)
  {
    v12 = v4 + *(int *)(a1 + 52);
    v13 = *(_QWORD *)(v9 - 120);
    v14 = sub_2212F5844();
    v15 = v12 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    OUTLINED_FUNCTION_27_18(v12, *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 32));
    OUTLINED_FUNCTION_13_8(v15, *(_QWORD *)(v9 - 144), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32));
    *(_QWORD *)(v9 - 112) = v5;
    *(_QWORD *)(v9 - 104) = v13;
    v16 = *(_QWORD *)(v9 - 136);
    *(_QWORD *)(v9 - 96) = v2;
    *(_QWORD *)(v9 - 88) = v16;
    type metadata accessor for PromotionalIconLoadingView.IconType();
  }
  v17 = sub_2212F5844();
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(*(_QWORD *)(v9 - 144), v17);
  OUTLINED_FUNCTION_27_18(v8, *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 32));
  if (__swift_getEnumTagSinglePayload(v8, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
    OUTLINED_FUNCTION_0_68();
  }
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 160) + 32);
  v18(v1, v8, v5);
  v18(v4 + *(int *)(a1 + 52), v1, v5);
  OUTLINED_FUNCTION_0_68();
}

void sub_2212A08D0()
{
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2212A08F4);
}

void sub_2212A0910()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556672C8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556672D0);
  sub_2212F3A20();
  OUTLINED_FUNCTION_7_53();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658538);
  OUTLINED_FUNCTION_20_2();
  sub_2212F3348();
  sub_2212A368C(&qword_2556672D8, &qword_2556672D0, (uint64_t (*)(void))sub_22105ECB4);
  OUTLINED_FUNCTION_19_32();
}

void sub_2212A09DC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  OUTLINED_FUNCTION_8_2();
}

void sub_2212A09F0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  v3 = sub_22105EC70();
  *(_QWORD *)(v1 - 128) = a1;
  *(_QWORD *)(v1 - 120) = v3;
  OUTLINED_FUNCTION_18_1();
}

void sub_2212A0A0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 272) = v1;
  *(_QWORD *)(v2 - 264) = a1;
  OUTLINED_FUNCTION_11_4();
}

void sub_2212A0A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_11_51();
  sub_2212F3A20();
  OUTLINED_FUNCTION_11_51();
  sub_2212F3A20();
  *(_QWORD *)(v13 - 312) = v12;
  sub_2212F3A20();
  *(_QWORD *)(v13 - 304) = sub_2212F3A20();
  *(_QWORD *)(v13 - 416) = *(_QWORD *)(sub_2212F3A20() - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_19_4((uint64_t)&a9 - v16);
  v17 = sub_2212F3D2C();
  *(_QWORD *)(v13 - 424) = v17;
  *(_QWORD *)(v13 - 432) = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_19_4(v20 - v19);
  *(_QWORD *)(v13 - 448) = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v13 - 472) = v22;
  OUTLINED_FUNCTION_19_4((uint64_t)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)(v13 - 296) = v10;
  v23 = *(_QWORD *)(v10 + 32);
  sub_2212A368C(&qword_2556672E0, &qword_2556672C8, (uint64_t (*)(void))sub_2212A36F8);
  *(_QWORD *)(v13 - 272) = v11;
  *(_QWORD *)(v13 - 264) = v9;
  v24 = OUTLINED_FUNCTION_21_2();
  *(_QWORD *)(v13 - 144) = v23;
  *(_QWORD *)(v13 - 136) = v24;
  OUTLINED_FUNCTION_5_2();
}

void sub_2212A0BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)(v18 - 160) = v11;
  *(_QWORD *)(v18 - 152) = a1;
  *(_QWORD *)(v18 - 176) = MEMORY[0x22766BAC4](v14, v9, v18 - 160);
  *(_QWORD *)(v18 - 168) = v10;
  v19 = MEMORY[0x22766BAC4](v14, v13, v18 - 176);
  *(_QWORD *)(v18 - 192) = v12;
  *(_QWORD *)(v18 - 184) = v19;
  v20 = MEMORY[0x22766BAC4](v14, v17, v18 - 192);
  *(_QWORD *)(v18 - 208) = v12;
  *(_QWORD *)(v18 - 200) = v12;
  v21 = MEMORY[0x22766BAC4](v14, v16, v18 - 208);
  *(_QWORD *)(v18 - 224) = v20;
  *(_QWORD *)(v18 - 216) = v21;
  v22 = MEMORY[0x22766BAC4](v14, *(_QWORD *)(v18 - 304), v18 - 224);
  v23 = MEMORY[0x24BDF5138];
  *(_QWORD *)(v18 - 240) = v22;
  *(_QWORD *)(v18 - 232) = v23;
  *(_QWORD *)(v18 - 344) = MEMORY[0x22766BAC4](v14, v15, v18 - 240);
  v24 = sub_2212F2D3C();
  OUTLINED_FUNCTION_2_22(*(_QWORD *)(v24 - 8));
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_19_4((uint64_t)&a9 - v26);
  OUTLINED_FUNCTION_5_2();
}

void sub_2212A0CCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 392) = v1;
  *(_QWORD *)(v2 - 272) = v1;
  *(_QWORD *)(v2 - 352) = a1;
  *(_QWORD *)(v2 - 264) = a1;
  OUTLINED_FUNCTION_11_4();
}

void sub_2212A0D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v10 - 512) = *(_QWORD *)(a1 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_19_4((uint64_t)&a9 - v13);
  *(_QWORD *)(v10 - 272) = *(_QWORD *)(v10 - 312);
  *(_QWORD *)(v10 - 264) = *(_QWORD *)(v10 - 320);
  *(_QWORD *)(v10 - 464) = v9;
  v14 = *(_QWORD *)(v10 - 328);
  *(_QWORD *)(v10 - 256) = v9;
  *(_QWORD *)(v10 - 248) = v14;
  type metadata accessor for PromotionalIconLoadingView.IconType();
}

void sub_2212A0D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, _QWORD);
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t (*v51)(uint64_t, uint64_t);
  uint64_t (*v52)(uint64_t, uint64_t);

  v13 = sub_2212F5844();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&a9 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD10);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&a9 - v19;
  v21 = sub_2212F2A24();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_13_0();
  v25 = v24 - v23;
  *(_QWORD *)(v11 - 368) = v9;
  *(_QWORD *)(v11 - 304) = v10;
  v26 = *(_QWORD *)(v11 - 360);
  v27 = sub_2212F3A20();
  *(_QWORD *)(v11 - 384) = v27;
  OUTLINED_FUNCTION_2_22(*(_QWORD *)(v27 - 8));
  MEMORY[0x24BDAC7A8](v28);
  sub_2212A3764(v26, (uint64_t)v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21) == 1)
  {
    sub_2210A577C((uint64_t)v20, &qword_25565BD10);
    OUTLINED_FUNCTION_6_43();
  }
  else
  {
    *(_QWORD *)(v11 - 520) = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v25, v20, v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v26 + *(int *)(*(_QWORD *)(v11 - 296) + 52), v13);
    v30 = v25;
    if (OUTLINED_FUNCTION_27_28((uint64_t)v16) == 1)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    else
    {
      v31 = sub_2212A12B0(a1);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v16, a1);
      v32 = *(_QWORD *)(v11 - 392);
      if ((v31 & 1) != 0)
      {
        v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 520) + 16);
        v34 = v30;
        *(_QWORD *)(v11 - 536) = v30;
        v35 = *(_QWORD *)(v11 - 528);
        v33(v35, v34, v21);
        __swift_storeEnumTagSinglePayload(v35, 0, 1, v21);
        v36 = *(_QWORD *)(v11 - 448);
        v37 = *(_QWORD *)(v11 - 456);
        OUTLINED_FUNCTION_13_8(v37, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16));
        v38 = (*(unsigned __int8 *)(v36 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
        v39 = (_QWORD *)swift_allocObject();
        v40 = *(_QWORD *)(v11 - 320);
        v39[2] = *(_QWORD *)(v11 - 312);
        v39[3] = v40;
        v41 = *(_QWORD *)(v11 - 328);
        v39[4] = *(_QWORD *)(v11 - 464);
        v39[5] = v41;
        OUTLINED_FUNCTION_13_8((uint64_t)v39 + v38, v37, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 32));
        v42 = *(_QWORD *)(v11 - 504);
        v43 = *(_QWORD *)(v11 - 344);
        sub_2212F2D30();
        v44 = *(_QWORD *)(v11 - 440);
        sub_2212F3D14();
        v45 = *(_QWORD *)(v11 - 480);
        sub_2212F4308();
        OUTLINED_FUNCTION_29_11();
        v46(v44, *(_QWORD *)(v11 - 424));
        OUTLINED_FUNCTION_29_11();
        v47(v42, v32);
        OUTLINED_FUNCTION_1_58();
        OUTLINED_FUNCTION_21_2();
        v48 = *(_QWORD *)(v11 - 488);
        v49 = *(_QWORD *)(v11 - 368);
        sub_221088D68(v45, v49, v48);
        v50 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 512) + 8);
        OUTLINED_FUNCTION_21_33();
        sub_221087210(v48, v49, v45);
        sub_22113B0A4();
        OUTLINED_FUNCTION_21_33();
        v50(v48, v49);
        OUTLINED_FUNCTION_29_11();
        OUTLINED_FUNCTION_18_9(*(_QWORD *)(v11 - 536), v51);
        OUTLINED_FUNCTION_1_58();
        *(_QWORD *)(v11 - 288) = OUTLINED_FUNCTION_21_2();
        *(_QWORD *)(v11 - 280) = v43;
        OUTLINED_FUNCTION_5_2();
      }
    }
    OUTLINED_FUNCTION_29_11();
    OUTLINED_FUNCTION_18_9(v30, v52);
    OUTLINED_FUNCTION_6_43();
  }
  *(_QWORD *)(v11 - 272) = 0x8000000000000000;
  sub_2212A189C(v11 - 272, v29, *(_QWORD *)(v11 - 400));
}

void sub_2212A1278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  sub_221087210(v1, v0, *(_QWORD *)(v2 - 336));
  OUTLINED_FUNCTION_29_11();
  v3(v1, v0);
  OUTLINED_FUNCTION_19();
}

uint64_t sub_2212A12B0(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v2 + 16))(v5, v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      v8 = sub_2212F5844();
      v9 = sub_2212F5844();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(&v5[*(int *)(TupleTypeMetadata2 + 48)], v9);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v5, v8);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
    }
    return 1;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
    return 0;
  }
}

void sub_2212A13C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  _QWORD v22[4];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  _QWORD v40[2];

  v22[0] = a6;
  v31 = a5;
  v32 = a2;
  v30 = a1;
  v33 = a7;
  v10 = sub_2212F32AC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v28 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556672C8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556672D0);
  v13 = sub_2212F3A20();
  v14 = sub_2212F4674();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658538);
  v15 = sub_2212F3348();
  v16 = sub_2212A368C(&qword_2556672D8, &qword_2556672D0, (uint64_t (*)(void))sub_22105ECB4);
  v40[0] = a6;
  v40[1] = v16;
  v39 = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v13, v40);
  v17 = MEMORY[0x22766BAC4](MEMORY[0x24BDF3F50], v14, &v39);
  v18 = sub_22105EC70();
  v38[0] = v17;
  v38[1] = v18;
  v24 = v15;
  v23 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v15, v38);
  v34 = v15;
  v35 = v23;
  MEMORY[0x22766BA58](255, &v34, MEMORY[0x24BDF2F10], 0);
  v22[1] = sub_2212F3A20();
  v22[3] = sub_2212F3A20();
  v25 = sub_2212F3A20();
  v22[2] = sub_2212F3A20();
  v26 = sub_2212F3A20();
  v27 = sub_2212F3A20();
  v19 = sub_2212F3A20();
  v29 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = MEMORY[0x24BDAC7A8](v20);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v28, v30, v10, v21);
  v34 = a3;
  v35 = a4;
  v36 = v31;
  v37 = v22[0];
  type metadata accessor for PromotionalIconLoadingView();
}

void sub_2212A1698(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(*(_QWORD *)(v3 - 296) + *(int *)(a1 + 56));
  j__swift_retain(v5);
  sub_221044F08();
  v7 = v6;
  j_j__swift_release(v5);
  sub_2211EFBA0(v1, 1, v7, (uint64_t *)(v3 - 160));
  *(_QWORD *)(v3 - 168) = *(_QWORD *)(v3 - 160);
  sub_2212A189C(v3 - 168, (_QWORD *)a1, v2);
}

uint64_t sub_2212A1708()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  sub_2211EFD84(v1);
  v6 = sub_2212A368C(&qword_2556672E0, &qword_2556672C8, (uint64_t (*)(void))sub_2212A36F8);
  v7 = *(_QWORD *)(v5 - 368);
  *(_QWORD *)(v5 - 160) = *(_QWORD *)(v5 - 360);
  *(_QWORD *)(v5 - 152) = v7;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v5 - 184) = v3;
  *(_QWORD *)(v5 - 176) = OpaqueTypeConformance2;
  v9 = MEMORY[0x24BDEF3E0];
  v10 = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], *(_QWORD *)(v5 - 392), v5 - 184);
  *(_QWORD *)(v5 - 200) = v6;
  *(_QWORD *)(v5 - 192) = v10;
  *(_QWORD *)(v5 - 216) = MEMORY[0x22766BAC4](v9, *(_QWORD *)(v5 - 376), v5 - 200);
  *(_QWORD *)(v5 - 208) = OpaqueTypeConformance2;
  v11 = MEMORY[0x22766BAC4](v9, *(_QWORD *)(v5 - 352), v5 - 216);
  *(_QWORD *)(v5 - 232) = v3;
  *(_QWORD *)(v5 - 224) = v11;
  v12 = MEMORY[0x22766BAC4](v9, *(_QWORD *)(v5 - 384), v5 - 232);
  *(_QWORD *)(v5 - 248) = v3;
  *(_QWORD *)(v5 - 240) = v3;
  v13 = MEMORY[0x22766BAC4](v9, *(_QWORD *)(v5 - 344), v5 - 248);
  *(_QWORD *)(v5 - 264) = v12;
  *(_QWORD *)(v5 - 256) = v13;
  v14 = MEMORY[0x22766BAC4](v9, *(_QWORD *)(v5 - 336), v5 - 264);
  v15 = MEMORY[0x24BDF5138];
  *(_QWORD *)(v5 - 280) = v14;
  *(_QWORD *)(v5 - 272) = v15;
  MEMORY[0x22766BAC4](v9, v0, v5 - 280);
  sub_221088D68(v4, v0, v2);
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 320) + 8);
  v16(v4, v0);
  sub_221087210(v2, v0, *(_QWORD *)(v5 - 288));
  return ((uint64_t (*)(uint64_t, uint64_t))v16)(v2, v0);
}

void sub_2212A189C(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[50];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  uint64_t v61;
  _QWORD v62[3];

  v53[39] = a1;
  v53[42] = a3;
  v4 = a2[2];
  v5 = sub_2212F3A20();
  v53[24] = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v53[23] = (char *)v53 - v6;
  v7 = a2[3];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556672D0);
  v8 = sub_2212F3A20();
  v9 = sub_2212F4674();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658538);
  v10 = sub_2212F3348();
  v11 = a2[5];
  v12 = sub_2212A368C(&qword_2556672D8, &qword_2556672D0, (uint64_t (*)(void))sub_22105ECB4);
  v62[0] = v11;
  v62[1] = v12;
  v61 = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v8, v62);
  v13 = MEMORY[0x22766BAC4](MEMORY[0x24BDF3F50], v9, &v61);
  v14 = sub_22105EC70();
  v60[0] = v13;
  v60[1] = v14;
  v54 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v10, v60);
  v55 = v10;
  v56 = v10;
  v57 = v54;
  v15 = MEMORY[0x22766BA58](0, &v56, MEMORY[0x24BDF2F10], 0);
  v53[8] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v53[9] = (char *)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v53[14] = (char *)v53 - v18;
  v19 = sub_2212F3A20();
  v53[13] = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v53[12] = (char *)v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v53[19] = (char *)v53 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556672C8);
  v53[46] = v19;
  v24 = sub_2212F3A20();
  v53[18] = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v53[17] = (char *)v53 - v25;
  v26 = sub_2212F468C();
  v53[5] = *(_QWORD *)(v26 - 8);
  v53[6] = v26;
  MEMORY[0x24BDAC7A8](v26);
  v53[4] = (char *)v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53[16] = v23;
  MEMORY[0x24BDAC7A8](v28);
  v53[7] = (char *)v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53[47] = v24;
  v53[22] = v15;
  v30 = sub_2212F3A20();
  v53[21] = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v53[20] = (char *)v53 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v53[29] = (char *)v53 - v33;
  v34 = sub_2212F5844();
  v53[25] = *(_QWORD *)(v34 - 8);
  v53[26] = v34;
  MEMORY[0x24BDAC7A8](v34);
  v53[30] = (char *)v53 - v35;
  v36 = sub_2212F5844();
  v53[32] = *(_QWORD *)(v36 - 8);
  v53[33] = v36;
  MEMORY[0x24BDAC7A8](v36);
  v53[15] = (char *)v53 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  v53[31] = (char *)v53 - v39;
  v53[45] = v30;
  v40 = sub_2212F3A20();
  v53[28] = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v53[27] = (char *)v53 - v41;
  v53[48] = v5;
  v53[49] = v42;
  v43 = sub_2212F3A20();
  v53[36] = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v53[35] = (char *)v53 - v44;
  v53[34] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v45);
  MEMORY[0x24BDAC7A8](v46);
  v53[11] = (char *)v53 - v47;
  MEMORY[0x24BDAC7A8](v48);
  v53[37] = (char *)v53 - v49;
  MEMORY[0x24BDAC7A8](v50);
  v53[38] = (char *)v53 - v51;
  v52 = a2[4];
  v53[43] = v4;
  v56 = v4;
  v57 = v7;
  v58 = v52;
  v59 = v11;
  type metadata accessor for PromotionalIconLoadingView.IconType();
}

uint64_t sub_2212A2F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  _QWORD v47[3];

  v33 = a1;
  v37 = a3;
  v4 = sub_2212F3D2C();
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v34 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)(a2 + 24);
  v28 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556672D0);
  v6 = sub_2212F3A20();
  v27[1] = v6;
  v7 = sub_2212F4674();
  v32 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v27 - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658538);
  v10 = sub_2212F3348();
  v31 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v27 - v11;
  v27[0] = *(_QWORD *)(a2 + 40);
  v13 = v27[0];
  v14 = sub_2212A368C(&qword_2556672D8, &qword_2556672D0, (uint64_t (*)(void))sub_22105ECB4);
  v47[0] = v13;
  v47[1] = v14;
  v46 = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v6, v47);
  v15 = MEMORY[0x22766BAC4](MEMORY[0x24BDF3F50], v7, &v46);
  v16 = sub_22105EC70();
  v45[0] = v15;
  v45[1] = v16;
  v17 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v10, v45);
  v43 = v10;
  v44 = v17;
  v18 = MEMORY[0x22766BA58](0, &v43, MEMORY[0x24BDF2F10], 0);
  v29 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v27 - v22;
  v38 = *(_QWORD *)(v28 + 16);
  v39 = v30;
  v40 = *(_QWORD *)(v28 + 32);
  v41 = v27[0];
  v42 = v33;
  sub_2212F4668();
  sub_22105EC34();
  sub_2212F4284();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v7);
  v24 = v34;
  sub_2212F3D14();
  sub_2212F4308();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v36);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v10);
  v43 = v10;
  v44 = v17;
  swift_getOpaqueTypeConformance2();
  sub_221088D68((uint64_t)v20, v18, (uint64_t)v23);
  v25 = *(void (**)(char *, uint64_t))(v29 + 8);
  v25(v20, v18);
  sub_221087210((uint64_t)v23, v18, v37);
  return ((uint64_t (*)(char *, uint64_t))v25)(v23, v18);
}

uint64_t sub_2212A32B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  char v41;

  v38 = a3;
  v39 = a4;
  v35 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556672D0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2212F5844();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - v10;
  v12 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v34 = (uint64_t)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v33 = (uint64_t)&v33 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v33 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v33 - v21;
  v37 = v5;
  v23 = sub_2212F3A20();
  v36 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v33 - v25;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, v35, v8, v24);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v22, v11, a2);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v19, v22, a2);
    if ((swift_dynamicCast() & 1) == 0)
    {
      v28 = v33;
      v27 = v38;
      sub_221088D68((uint64_t)v22, a2, v33);
      v29 = v34;
      sub_221087210(v28, a2, v34);
      sub_2212A368C(&qword_2556672D8, &qword_2556672D0, (uint64_t (*)(void))sub_22105ECB4);
      sub_22113B0A4();
      v30 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v30(v29, a2);
      v30(v28, a2);
      v30((uint64_t)v22, a2);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v22, a2);
  }
  v41 = 1;
  if (qword_255655B48 != -1)
    swift_once();
  sub_22105ECB4();
  swift_bridgeObjectRetain();
  sub_2212F438C();
  swift_bridgeObjectRelease();
  sub_2212A368C(&qword_2556672D8, &qword_2556672D0, (uint64_t (*)(void))sub_22105ECB4);
  v27 = v38;
  sub_22113B11C();
  sub_2210A577C((uint64_t)v7, &qword_2556672D0);
LABEL_9:
  v31 = sub_2212A368C(&qword_2556672D8, &qword_2556672D0, (uint64_t (*)(void))sub_22105ECB4);
  v40[0] = v27;
  v40[1] = v31;
  MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v23, v40);
  sub_221087210((uint64_t)v26, v23, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v26, v23);
}

uint64_t sub_2212A368C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_2210E1B0C();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2212A36F8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_2556672E8;
  if (!qword_2556672E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2556672F0);
    v2 = sub_22129CFAC();
    v3[0] = MEMORY[0x24BDF40E8];
    v3[1] = v2;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2556672E8);
  }
  return result;
}

uint64_t sub_2212A3764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2212A37AC()
{
  OUTLINED_FUNCTION_12_46();
}

void sub_2212A37E4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v2 = (*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v3 = sub_2212F2A24();
  if (!__swift_getEnumTagSinglePayload(v1 + v2, 1, v3))
    OUTLINED_FUNCTION_18_9(v1 + v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  type metadata accessor for PromotionalIconLoadingView.IconType();
}

uint64_t sub_2212A3850(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;

  if (!__swift_getEnumTagSinglePayload(v4, 1, a1))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_release();
        break;
      case 1u:
        if (!OUTLINED_FUNCTION_27_28(v4))
        {
          v7 = OUTLINED_FUNCTION_24_23();
          v8(v7);
        }
        sub_2212F5844();
        OUTLINED_FUNCTION_20_2();
        sub_2212F5844();
        v9 = v4 + *(int *)(swift_getTupleTypeMetadata2() + 48);
        if (!__swift_getEnumTagSinglePayload(v9, 1, v3))
          (*(void (**)(uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v9);
        break;
      case 2u:
      case 3u:
        v5 = OUTLINED_FUNCTION_24_23();
        v6(v5);
        break;
      default:
        break;
    }
  }
  j_j__swift_release(*(_QWORD *)(v2 + *(int *)(v1 + 56)));
  return swift_deallocObject();
}

void sub_2212A3978()
{
  OUTLINED_FUNCTION_12_46();
}

void sub_2212A39B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  sub_2212A13C8(v1, v2 + ((v8 + 48) & ~v8), v4, v5, v6, v7, v3);
}

uint64_t sub_2212A39FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2212A32B4(v1[6], v1[3], v1[5], a1);
}

void sub_2212A3A14()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556672C8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556672D0);
  sub_2212F3A20();
  OUTLINED_FUNCTION_7_53();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255658538);
  sub_2212F3348();
  sub_2212A368C(&qword_2556672D8, &qword_2556672D0, (uint64_t (*)(void))sub_22105ECB4);
  OUTLINED_FUNCTION_19_32();
}

void sub_2212A3AC0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  OUTLINED_FUNCTION_18_1();
}

void sub_2212A3AD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;

  v4 = sub_22105EC70();
  *(_QWORD *)(v2 - 128) = a1;
  *(_QWORD *)(v2 - 120) = v4;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2 - 128);
  OUTLINED_FUNCTION_11_4();
}

void sub_2212A3B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_20_2();
  v26 = OUTLINED_FUNCTION_74_7();
  v27 = sub_2212F3A20();
  v28 = OUTLINED_FUNCTION_74_7();
  OUTLINED_FUNCTION_20_2();
  v29 = sub_2212F3A20();
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_11_51();
  OUTLINED_FUNCTION_74_7();
  sub_2212F3A20();
  v30 = sub_2212A368C(&qword_2556672E0, &qword_2556672C8, (uint64_t (*)(void))sub_2212A36F8);
  v31 = OUTLINED_FUNCTION_21_2();
  a25 = a10;
  a26 = v31;
  v32 = MEMORY[0x24BDEF3E0];
  v33 = MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], v26, &a25);
  a23 = v30;
  a24 = v33;
  a21 = MEMORY[0x22766BAC4](v32, v27, &a23);
  a22 = v31;
  v34 = MEMORY[0x22766BAC4](v32, v28, &a21);
  a19 = a10;
  a20 = v34;
  MEMORY[0x22766BAC4](v32, v29, &a19);
  OUTLINED_FUNCTION_18_1();
}

void sub_2212A3C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;

  a16 = a1;
  MEMORY[0x22766BAC4](v16, a9, &a15);
  OUTLINED_FUNCTION_8_2();
}

void sub_2212A3C5C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20_2();
  v0 = sub_2212F2D3C();
  MEMORY[0x22766BAC4](MEMORY[0x24BDEAF78], v0);
  OUTLINED_FUNCTION_11_4();
}

void sub_2212A3CA0()
{
  OUTLINED_FUNCTION_11_51();
  OUTLINED_FUNCTION_21_2();
  OUTLINED_FUNCTION_8_2();
}

void OUTLINED_FUNCTION_0_68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 - 120);
  *(_QWORD *)(v2 - 112) = v1;
  *(_QWORD *)(v2 - 104) = v3;
  v4 = *(_QWORD *)(v2 - 136);
  *(_QWORD *)(v2 - 96) = v0;
  *(_QWORD *)(v2 - 88) = v4;
  type metadata accessor for PromotionalIconLoadingView.IconType();
}

void OUTLINED_FUNCTION_1_58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 272) = v1;
  *(_QWORD *)(v2 - 264) = v0;
}

uint64_t OUTLINED_FUNCTION_7_53()
{
  return sub_2212F4674();
}

uint64_t OUTLINED_FUNCTION_11_51()
{
  return sub_2212F3A20();
}

void OUTLINED_FUNCTION_12_46()
{
  type metadata accessor for PromotionalIconLoadingView();
}

void OUTLINED_FUNCTION_19_32()
{
  JUMPOUT(0x22766BAC4);
}

uint64_t OUTLINED_FUNCTION_20_28()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_21_33()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_24_23()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_27_28(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t sub_2212A3DA0()
{
  return swift_allocateGenericValueMetadata();
}

void sub_2212A3DA8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2212F51B4();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_2212A6BB4(319, &qword_255667378, &qword_255657738);
      if (v2 <= 0x3F)
      {
        sub_2212A6BB4(319, &qword_255667380, &qword_2556641C0);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_2212A3EDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int EnumTagSinglePayload;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t *v81;
  unint64_t v82;
  uint64_t v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  size_t __n;
  uint64_t v89;
  void (*v90)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v108;
  unsigned int v109;

  v105 = sub_2212F51B4();
  v4 = *(_QWORD *)(v105 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v103 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v103 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v100 = v5 + v7;
  v101 = v6;
  v102 = *(_QWORD *)(v6 + 64);
  v104 = sub_2212F2AF0();
  v8 = *(_QWORD *)(v104 - 8);
  v108 = *(_DWORD *)(v8 + 80);
  v9 = v108 & 0xF8 | 7;
  if (*(_DWORD *)(v8 + 84))
    v10 = *(_QWORD *)(v8 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64) + 1;
  v11 = *(_DWORD *)(v4 + 80);
  v12 = sub_2212F4FEC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v14;
  v16 = v11 & 0xF8 | v14 | 7u;
  if (*(_DWORD *)(v13 + 84) <= *(_DWORD *)(v4 + 84))
    v17 = *(_DWORD *)(v4 + 84);
  else
    v17 = *(_DWORD *)(v13 + 84);
  if (v17 <= 0x7FFFFFFF)
    v18 = 0x7FFFFFFF;
  else
    v18 = v17;
  v19 = v5 + v14;
  v20 = *(_QWORD *)(v13 + 64);
  v21 = v16 | v7 | (unint64_t)v9;
  v22 = (v108 | v11 | v14 | v7) & 0x100000;
  if (v21 != 7
    || v22 != 0
    || ((((((v20 + (v19 & ~v15) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + ((v16
       + 16
       + ((((((((v9 + (((v100 & ~(unint64_t)v7) + v102) & 0xFFFFFFFFFFFFFFF8) + 249) & ~v9)
             + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8)
             + 8
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 55) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v16)
     + 8 > 0x18)
  {
    v25 = *a2;
    *a1 = *a2;
    v28 = (uint64_t *)(v25 + ((v21 + 16) & ~v21));
    goto LABEL_40;
  }
  v26 = v108 & 0xF8 | 7;
  v91 = v10 + 7;
  v92 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  __n = v10;
  v93 = v11 & 0xF8 | v15 | 7;
  v94 = v16 + 16;
  v84 = v8;
  v95 = *(_DWORD *)(v13 + 80);
  v99 = v18;
  v109 = *(_DWORD *)(v4 + 84);
  v86 = *(_DWORD *)(v13 + 84);
  v96 = (((v20 + (v19 & ~v15) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v97 = *(_QWORD *)(v13 + 64);
  v89 = v19;
  v85 = *(_QWORD *)(v12 - 8);
  v87 = v12;
  v27 = ~(unint64_t)v7;
  v98 = ~v9;
  v28 = a1;
  v90 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16);
  v90(a1, a2, v105);
  v29 = ((unint64_t)a1 + v100) & v27;
  v30 = ((unint64_t)a2 + v100) & v27;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v101 + 16))(v29, v30, v103);
  *(_BYTE *)(v29 + v102) = *(_BYTE *)(v30 + v102);
  v31 = (v29 + v102) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v30 + v102) & 0xFFFFFFFFFFFFFFF8;
  v33 = *(_QWORD *)(v32 + 8);
  v34 = *(_QWORD *)(v32 + 16);
  v36 = *(_QWORD *)(v32 + 24);
  v35 = *(_QWORD *)(v32 + 32);
  v37 = *(_QWORD *)(v32 + 40);
  LOBYTE(v27) = *(_BYTE *)(v32 + 48);
  sub_22105BD60(v33, v34, v36, v35, v37, v27);
  *(_QWORD *)(v31 + 8) = v33;
  *(_QWORD *)(v31 + 16) = v34;
  *(_QWORD *)(v31 + 24) = v36;
  *(_QWORD *)(v31 + 32) = v35;
  *(_QWORD *)(v31 + 40) = v37;
  *(_BYTE *)(v31 + 48) = v27;
  v38 = *(_QWORD *)(v32 + 56);
  LOBYTE(v37) = *(_BYTE *)(v32 + 64);
  j__swift_retain(v38);
  *(_QWORD *)(v31 + 56) = v38;
  *(_BYTE *)(v31 + 64) = v37;
  v39 = *(_QWORD *)(v32 + 72);
  LOBYTE(v37) = *(_BYTE *)(v32 + 80);
  j__swift_retain(v39);
  *(_QWORD *)(v31 + 72) = v39;
  *(_BYTE *)(v31 + 80) = v37;
  v40 = *(_QWORD *)(v32 + 88);
  LOBYTE(v37) = *(_BYTE *)(v32 + 96);
  j__swift_retain(v40);
  *(_QWORD *)(v31 + 88) = v40;
  *(_BYTE *)(v31 + 96) = v37;
  v41 = *(_QWORD *)(v32 + 104);
  LOBYTE(v37) = *(_BYTE *)(v32 + 112);
  sub_221017C08(v41, v37);
  *(_QWORD *)(v31 + 104) = v41;
  *(_BYTE *)(v31 + 112) = v37;
  v42 = *(_QWORD *)(v32 + 120);
  LOBYTE(v37) = *(_BYTE *)(v32 + 128);
  sub_221017C08(v42, v37);
  *(_QWORD *)(v31 + 120) = v42;
  *(_BYTE *)(v31 + 128) = v37;
  v43 = *(_QWORD *)(v32 + 136);
  v44 = *(_QWORD *)(v32 + 144);
  LOBYTE(v35) = *(_BYTE *)(v32 + 152);
  sub_2210BC964(v43, v44, v35);
  *(_QWORD *)(v31 + 136) = v43;
  *(_QWORD *)(v31 + 144) = v44;
  *(_BYTE *)(v31 + 152) = v35;
  v45 = *(_QWORD *)(v32 + 160);
  LOBYTE(v44) = *(_BYTE *)(v32 + 168);
  j__swift_retain(v45);
  *(_QWORD *)(v31 + 160) = v45;
  *(_BYTE *)(v31 + 168) = v44;
  v46 = *(_QWORD *)(v32 + 176);
  LOBYTE(v44) = *(_BYTE *)(v32 + 184);
  j__swift_retain(v46);
  *(_QWORD *)(v31 + 176) = v46;
  *(_BYTE *)(v31 + 184) = v44;
  v47 = *(_QWORD *)(v32 + 192);
  LOBYTE(v44) = *(_BYTE *)(v32 + 200);
  j__swift_retain(v47);
  *(_QWORD *)(v31 + 192) = v47;
  *(_BYTE *)(v31 + 200) = v44;
  v48 = *(_QWORD *)(v32 + 208);
  v49 = *(_QWORD *)(v32 + 216);
  LOBYTE(v35) = *(_BYTE *)(v32 + 224);
  sub_2210BC964(v48, v49, v35);
  *(_QWORD *)(v31 + 208) = v48;
  *(_QWORD *)(v31 + 216) = v49;
  *(_BYTE *)(v31 + 224) = v35;
  v50 = *(_QWORD *)(v32 + 232);
  v51 = *(_QWORD *)(v32 + 240);
  LOBYTE(v35) = *(_BYTE *)(v32 + 248);
  sub_221046D0C(v50, v51, v35);
  *(_QWORD *)(v31 + 232) = v50;
  *(_QWORD *)(v31 + 240) = v51;
  *(_BYTE *)(v31 + 248) = v35;
  v52 = (char *)((v31 + v26 + 249) & v98);
  v53 = (char *)((v32 + v26 + 249) & v98);
  if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v104))
  {
    memcpy(v52, v53, __n);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v52, v53, v104);
    __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v104);
  }
  v55 = ~v93;
  *(_QWORD *)((unint64_t)&v52[v91] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&v53[v91] & 0xFFFFFFFFFFFFF8);
  v56 = &v52[v92];
  *(_QWORD *)v56 = *(_QWORD *)&v53[v92];
  *((_QWORD *)v56 + 1) = *(_QWORD *)&v53[v92 + 8];
  v57 = (unint64_t)&v52[v92 + 23] & 0xFFFFFFFFFFFFFFF8;
  v58 = (unint64_t)&v53[v92 + 23] & 0xFFFFFFFFFFFFFFF8;
  v59 = *(_QWORD *)(v58 + 24);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v59)
  {
    *(_QWORD *)(v57 + 24) = v59;
    *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
    (**(void (***)(unint64_t, unint64_t, uint64_t))(v59 - 8))(v57, v58, v59);
  }
  else
  {
    v60 = *(_OWORD *)v58;
    v61 = *(_OWORD *)(v58 + 16);
    *(_QWORD *)(v57 + 32) = *(_QWORD *)(v58 + 32);
    *(_OWORD *)v57 = v60;
    *(_OWORD *)(v57 + 16) = v61;
  }
  v62 = ~v95;
  *(_QWORD *)(v57 + 40) = *(_QWORD *)(v58 + 40);
  v63 = (v57 + 55) & 0xFFFFFFFFFFFFFFF8;
  v64 = (v58 + 55) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v63 = *(_BYTE *)v64;
  *(_QWORD *)(v63 + 8) = *(_QWORD *)(v64 + 8);
  v65 = (v63 + 23) & 0xFFFFFFFFFFFFFFF8;
  v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v65 = *(_BYTE *)v66;
  *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
  v67 = (void *)((v94 + v65) & v55);
  v68 = (void *)((v94 + v66) & v55);
  swift_retain();
  swift_retain();
  swift_retain();
  v69 = v109;
  if (v109 == v99)
  {
    v70 = (uint64_t)v68;
    v71 = v105;
  }
  else
  {
    v70 = ((unint64_t)v68 + v89) & v62;
    v69 = v86;
    if (v86 != v99)
    {
      v73 = v97;
      v74 = *(_QWORD *)((v97 + v70 + 7) & 0xFFFFFFFFFFFFF8);
      if (v74 >= 0xFFFFFFFF)
        LODWORD(v74) = -1;
      EnumTagSinglePayload = v74 + 1;
      goto LABEL_33;
    }
    v71 = v87;
  }
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v70, v69, v71);
  v73 = v97;
LABEL_33:
  if (EnumTagSinglePayload)
  {
    memcpy(v67, v68, v96 + 8);
  }
  else
  {
    v75 = v73;
    v90((uint64_t *)v67, (uint64_t *)v68, v105);
    v76 = ((unint64_t)v67 + v89) & v62;
    v77 = ((unint64_t)v68 + v89) & v62;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v85 + 16))(v76, v77, v87);
    v78 = (v76 + v75 + 7) & 0xFFFFFFFFFFFFFFF8;
    v79 = (v77 + v75 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v78 = *(_QWORD *)v79;
    *(_BYTE *)(v78 + 8) = *(_BYTE *)(v79 + 8);
    v80 = (v76 + v75 + 23) & 0xFFFFFFFFFFFFFFF8;
    v81 = (unint64_t *)((v77 + v75 + 23) & 0xFFFFFFFFFFFFFFF8);
    v82 = *v81;
    swift_bridgeObjectRetain();
    if (v82 < 0xFFFFFFFF)
    {
      *(_OWORD *)v80 = *(_OWORD *)v81;
    }
    else
    {
      *(_QWORD *)v80 = v82;
      *(_QWORD *)(v80 + 8) = v81[1];
      swift_retain();
      swift_retain();
    }
    *(_QWORD *)((v80 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v81 + 23) & 0xFFFFFFFFFFFFF8);
    swift_retain();
    v28 = a1;
  }
  *(_QWORD *)(((unint64_t)v67 + v96 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v68 + v96 + 8) & 0xFFFFFFFFFFFFF8);
LABEL_40:
  swift_retain();
  return v28;
}

uint64_t sub_2212A45C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v4 = sub_2212F51B4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v7 + a1;
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v10 = (v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v10);
  v11 = (v10 + *(_QWORD *)(v9 + 64)) & 0xFFFFFFFFFFFFFFF8;
  sub_221046E30(*(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40), *(_BYTE *)(v11 + 48));
  j_j__swift_release(*(_QWORD *)(v11 + 56));
  j_j__swift_release(*(_QWORD *)(v11 + 72));
  j_j__swift_release(*(_QWORD *)(v11 + 88));
  sub_221047104(*(_QWORD *)(v11 + 104), *(unsigned __int8 *)(v11 + 112));
  sub_221047104(*(_QWORD *)(v11 + 120), *(unsigned __int8 *)(v11 + 128));
  sub_2210BCAC8(*(_QWORD *)(v11 + 136), *(_QWORD *)(v11 + 144), *(_BYTE *)(v11 + 152));
  j_j__swift_release(*(_QWORD *)(v11 + 160));
  j_j__swift_release(*(_QWORD *)(v11 + 176));
  j_j__swift_release(*(_QWORD *)(v11 + 192));
  sub_2210BCAC8(*(_QWORD *)(v11 + 208), *(_QWORD *)(v11 + 216), *(_BYTE *)(v11 + 224));
  sub_221046EE0(*(_QWORD *)(v11 + 232), *(_QWORD *)(v11 + 240), *(_BYTE *)(v11 + 248));
  v12 = sub_2212F2AF0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  v15 = (v11 + v14 + 249) & ~v14;
  if (!__swift_getEnumTagSinglePayload(v15, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
  if (*(_DWORD *)(v13 + 84))
    v16 = *(_QWORD *)(v13 + 64);
  else
    v16 = *(_QWORD *)(v13 + 64) + 1;
  swift_release();
  swift_release();
  swift_release();
  v17 = (v15 + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v17 + 24))
    __swift_destroy_boxed_opaque_existential_1(v17);
  swift_release();
  swift_release();
  swift_release();
  v18 = *(_DWORD *)(v5 + 80) & 0xF8;
  v19 = sub_2212F4FEC();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = (((((v17 + 55) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + (v18 | v21 | 7) + 16) & ~(unint64_t)(v18 | v21 | 7);
  v23 = *(unsigned int *)(v5 + 84);
  v24 = *(unsigned int *)(v20 + 84);
  if (v24 <= v23)
    v25 = *(_DWORD *)(v5 + 84);
  else
    v25 = *(_DWORD *)(v20 + 84);
  if (v25 <= 0x7FFFFFFF)
    v25 = 0x7FFFFFFF;
  v26 = ~v21;
  v27 = *(_QWORD *)(v20 + 64);
  if ((_DWORD)v23 == v25)
  {
    v28 = v22;
    v24 = v23;
    v29 = v4;
    goto LABEL_17;
  }
  v28 = (v7 + v21 + v22) & v26;
  if ((_DWORD)v24 == v25)
  {
    v29 = v19;
LABEL_17:
    if (__swift_getEnumTagSinglePayload(v28, v24, v29))
      return swift_release();
    goto LABEL_22;
  }
  v30 = *(_QWORD *)((v27 + v28 + 7) & 0xFFFFFFFFFFFFF8);
  if (v30 >= 0xFFFFFFFF)
    LODWORD(v30) = -1;
  if ((_DWORD)v30 == -1)
  {
LABEL_22:
    v6(v22, v4);
    (*(void (**)(unint64_t, uint64_t))(v20 + 8))((v7 + v21 + v22) & v26, v19);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)((((v7 + v21 + v22) & v26) + v27 + 23) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
    {
      swift_release();
      swift_release();
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2212A490C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  size_t v46;
  size_t v47;
  size_t v48;
  unint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int EnumTagSinglePayload;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t *v82;
  unint64_t v83;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *__dst;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;

  v6 = sub_2212F51B4();
  v7 = *(_QWORD *)(v6 - 8);
  v88 = v6;
  v85 = *(void (**)(uint64_t, uint64_t))(v7 + 16);
  v85(a1, a2);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v90 = a1;
  v91 = *(_QWORD *)(v7 + 64);
  v10 = (v91 + v9 + a1) & ~v9;
  v11 = (v91 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = v10 + v12;
  v14 = v11 + v12;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = v13 & 0xFFFFFFFFFFFFFFF8;
  v16 = v14 & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF8) + 8);
  v18 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF8) + 16);
  v19 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF8) + 24);
  v20 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF8) + 32);
  v21 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF8) + 40);
  v22 = *(_BYTE *)((v14 & 0xFFFFFFFFFFFFFFF8) + 48);
  sub_22105BD60(v17, v18, v19, v20, v21, v22);
  *(_QWORD *)(v15 + 8) = v17;
  *(_QWORD *)(v15 + 16) = v18;
  *(_QWORD *)(v15 + 24) = v19;
  *(_QWORD *)(v15 + 32) = v20;
  *(_QWORD *)(v15 + 40) = v21;
  *(_BYTE *)(v15 + 48) = v22;
  v23 = *(_QWORD *)(v16 + 56);
  LOBYTE(v18) = *(_BYTE *)(v16 + 64);
  j__swift_retain(v23);
  *(_QWORD *)(v15 + 56) = v23;
  *(_BYTE *)(v15 + 64) = v18;
  v24 = *(_QWORD *)(v16 + 72);
  LOBYTE(v18) = *(_BYTE *)(v16 + 80);
  j__swift_retain(v24);
  *(_QWORD *)(v15 + 72) = v24;
  *(_BYTE *)(v15 + 80) = v18;
  v25 = *(_QWORD *)(v16 + 88);
  LOBYTE(v18) = *(_BYTE *)(v16 + 96);
  j__swift_retain(v25);
  *(_QWORD *)(v15 + 88) = v25;
  *(_BYTE *)(v15 + 96) = v18;
  v26 = *(_QWORD *)(v16 + 104);
  LOBYTE(v18) = *(_BYTE *)(v16 + 112);
  sub_221017C08(v26, v18);
  *(_QWORD *)(v15 + 104) = v26;
  *(_BYTE *)(v15 + 112) = v18;
  v27 = *(_QWORD *)(v16 + 120);
  LOBYTE(v18) = *(_BYTE *)(v16 + 128);
  sub_221017C08(v27, v18);
  *(_QWORD *)(v15 + 120) = v27;
  *(_BYTE *)(v15 + 128) = v18;
  v28 = *(_QWORD *)(v16 + 136);
  v29 = *(_QWORD *)(v16 + 144);
  LOBYTE(v19) = *(_BYTE *)(v16 + 152);
  sub_2210BC964(v28, v29, v19);
  *(_QWORD *)(v15 + 136) = v28;
  *(_QWORD *)(v15 + 144) = v29;
  *(_BYTE *)(v15 + 152) = v19;
  v30 = *(_QWORD *)(v16 + 160);
  LOBYTE(v29) = *(_BYTE *)(v16 + 168);
  j__swift_retain(v30);
  *(_QWORD *)(v15 + 160) = v30;
  *(_BYTE *)(v15 + 168) = v29;
  v31 = *(_QWORD *)(v16 + 176);
  LOBYTE(v29) = *(_BYTE *)(v16 + 184);
  j__swift_retain(v31);
  *(_QWORD *)(v15 + 176) = v31;
  *(_BYTE *)(v15 + 184) = v29;
  v32 = *(_QWORD *)(v16 + 192);
  LOBYTE(v29) = *(_BYTE *)(v16 + 200);
  j__swift_retain(v32);
  *(_QWORD *)(v15 + 192) = v32;
  *(_BYTE *)(v15 + 200) = v29;
  v33 = *(_QWORD *)(v16 + 208);
  v34 = *(_QWORD *)(v16 + 216);
  LOBYTE(v19) = *(_BYTE *)(v16 + 224);
  sub_2210BC964(v33, v34, v19);
  *(_QWORD *)(v15 + 208) = v33;
  *(_QWORD *)(v15 + 216) = v34;
  *(_BYTE *)(v15 + 224) = v19;
  v35 = *(_QWORD *)(v16 + 232);
  v36 = *(_QWORD *)(v16 + 240);
  LOBYTE(v19) = *(_BYTE *)(v16 + 248);
  sub_221046D0C(v35, v36, v19);
  *(_QWORD *)(v15 + 232) = v35;
  *(_QWORD *)(v15 + 240) = v36;
  *(_BYTE *)(v15 + 248) = v19;
  v37 = sub_2212F2AF0();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(_DWORD *)(v38 + 80) & 0xF8;
  v40 = v39 | 0x100;
  v41 = (v39 | 0x100) + v15;
  v42 = ~v39 & 0xFFFFFFFFFFFFFFF8;
  v43 = v41 & v42;
  v44 = (v40 + v16) & v42;
  if (__swift_getEnumTagSinglePayload(v44, 1, v37))
  {
    v45 = *(_DWORD *)(v38 + 84);
    v46 = *(_QWORD *)(v38 + 64);
    if (v45)
      v47 = v46;
    else
      v47 = v46 + 1;
    memcpy((void *)v43, (const void *)v44, v47);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v43, v44, v37);
    __swift_storeEnumTagSinglePayload(v43, 0, 1, v37);
    v45 = *(_DWORD *)(v38 + 84);
    v46 = *(_QWORD *)(v38 + 64);
  }
  if (v45)
    v48 = v46;
  else
    v48 = v46 + 1;
  *(_QWORD *)(((v43 | 7) + v48) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v44 | 7) + v48) & 0xFFFFFFFFFFFFF8);
  v49 = ((v48 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v50 = (_QWORD *)(v49 + v43);
  v51 = (_QWORD *)(v49 + v44);
  *v50 = *v51;
  v50[1] = v51[1];
  v52 = ((unint64_t)v50 + 23) & 0xFFFFFFFFFFFFFFF8;
  v53 = ((unint64_t)v51 + 23) & 0xFFFFFFFFFFFFFFF8;
  v54 = *(_QWORD *)(v53 + 24);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v54)
  {
    *(_QWORD *)(v52 + 24) = v54;
    *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
    (**(void (***)(unint64_t, unint64_t, uint64_t))(v54 - 8))(v52, v53, v54);
  }
  else
  {
    v55 = *(_OWORD *)v53;
    v56 = *(_OWORD *)(v53 + 16);
    *(_QWORD *)(v52 + 32) = *(_QWORD *)(v53 + 32);
    *(_OWORD *)v52 = v55;
    *(_OWORD *)(v52 + 16) = v56;
  }
  *(_QWORD *)(v52 + 40) = *(_QWORD *)(v53 + 40);
  v57 = (v52 + 55) & 0xFFFFFFFFFFFFFFF8;
  v58 = (v53 + 55) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v57 = *(_BYTE *)v58;
  *(_QWORD *)(v57 + 8) = *(_QWORD *)(v58 + 8);
  v59 = (v57 + 23) & 0xFFFFFFFFFFFFFFF8;
  v60 = (v58 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v59 = *(_BYTE *)v60;
  *(_QWORD *)(v59 + 8) = *(_QWORD *)(v60 + 8);
  v61 = *(_DWORD *)(v7 + 80) & 0xF8;
  v87 = sub_2212F4FEC();
  v62 = *(_QWORD *)(v87 - 8);
  v63 = *(unsigned __int8 *)(v62 + 80);
  v64 = v61 | v63 | 7;
  __dst = (char *)((v64 + 16 + v59) & ~v64);
  v65 = (char *)((v64 + 16 + v60) & ~v64);
  v66 = *(unsigned int *)(v7 + 84);
  v67 = *(unsigned int *)(v62 + 84);
  if (v67 <= v66)
    v68 = *(_DWORD *)(v7 + 84);
  else
    v68 = *(_DWORD *)(v62 + 84);
  if (v68 <= 0x7FFFFFFF)
    v69 = 0x7FFFFFFF;
  else
    v69 = v68;
  v70 = ~v63;
  v71 = v91 + v63;
  v86 = *(_QWORD *)(v62 + 64);
  v92 = (((v86 + ((v91 + v63) & ~v63) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_retain();
  swift_retain();
  swift_retain();
  if ((_DWORD)v66 == v69)
  {
    v72 = (uint64_t)v65;
    v73 = v66;
    v74 = v88;
LABEL_23:
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v72, v73, v74);
    goto LABEL_27;
  }
  v72 = (unint64_t)&v65[v71] & v70;
  if ((_DWORD)v67 == v69)
  {
    v73 = v67;
    v74 = v87;
    goto LABEL_23;
  }
  v76 = *(_QWORD *)((v86 + v72 + 7) & 0xFFFFFFFFFFFFF8);
  if (v76 >= 0xFFFFFFFF)
    LODWORD(v76) = -1;
  EnumTagSinglePayload = v76 + 1;
LABEL_27:
  if (EnumTagSinglePayload)
  {
    memcpy(__dst, v65, v92 + 8);
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v85)(__dst, v65, v88);
    v77 = (unint64_t)&__dst[v71] & v70;
    v78 = (unint64_t)&v65[v71] & v70;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v62 + 16))(v77, v78, v87);
    v79 = (v77 + v86 + 7) & 0xFFFFFFFFFFFFFFF8;
    v80 = (v78 + v86 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v79 = *(_QWORD *)v80;
    *(_BYTE *)(v79 + 8) = *(_BYTE *)(v80 + 8);
    v81 = (v77 + v86 + 23) & 0xFFFFFFFFFFFFFFF8;
    v82 = (unint64_t *)((v78 + v86 + 23) & 0xFFFFFFFFFFFFFFF8);
    v83 = *v82;
    swift_bridgeObjectRetain();
    if (v83 < 0xFFFFFFFF)
    {
      *(_OWORD *)v81 = *(_OWORD *)v82;
    }
    else
    {
      *(_QWORD *)v81 = v83;
      *(_QWORD *)(v81 + 8) = v82[1];
      swift_retain();
      swift_retain();
    }
    *(_QWORD *)((v81 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v82 + 23) & 0xFFFFFFFFFFFFF8);
    swift_retain();
  }
  *(_QWORD *)&__dst[v92 + 8] = *(_QWORD *)&v65[v92 + 8];
  swift_retain();
  return v90;
}

uint64_t sub_2212A4EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int EnumTagSinglePayload;
  size_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  __int128 v80;
  __int128 v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  int v100;
  int v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  unint64_t v108;
  unint64_t v109;
  char *v110;
  size_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  _QWORD *v124;
  unint64_t *v125;
  unint64_t v126;
  void (*v128)(uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  size_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;

  v6 = sub_2212F51B4();
  v7 = *(_QWORD *)(v6 - 8);
  v134 = v6;
  v128 = *(void (**)(uint64_t, uint64_t))(v7 + 24);
  v128(a1, a2);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v132 = *(_QWORD *)(v7 + 64);
  v10 = (v132 + v9 + a1) & ~v9;
  v11 = (v132 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = v10 + v12;
  v14 = v11 + v12;
  *(_BYTE *)v13 = *(_BYTE *)v14;
  v15 = v13 & 0xFFFFFFFFFFFFFFF8;
  v16 = v14 & 0xFFFFFFFFFFFFFFF8;
  v17 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF8) + 8);
  v18 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF8) + 16);
  v19 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF8) + 24);
  v20 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF8) + 32);
  v21 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF8) + 40);
  v22 = *(_BYTE *)((v14 & 0xFFFFFFFFFFFFFFF8) + 48);
  sub_22105BD60(v17, v18, v19, v20, v21, v22);
  v23 = *(_QWORD *)(v15 + 8);
  v24 = *(_QWORD *)(v15 + 16);
  v25 = *(_QWORD *)(v15 + 24);
  v26 = *(_QWORD *)(v15 + 32);
  v27 = *(_QWORD *)(v15 + 40);
  v28 = *(_BYTE *)(v15 + 48);
  *(_QWORD *)(v15 + 8) = v17;
  *(_QWORD *)(v15 + 16) = v18;
  *(_QWORD *)(v15 + 24) = v19;
  *(_QWORD *)(v15 + 32) = v20;
  *(_QWORD *)(v15 + 40) = v21;
  *(_BYTE *)(v15 + 48) = v22;
  sub_221046E30(v23, v24, v25, v26, v27, v28);
  v29 = *(_QWORD *)(v16 + 56);
  LOBYTE(v18) = *(_BYTE *)(v16 + 64);
  j__swift_retain(v29);
  v30 = *(_QWORD *)(v15 + 56);
  *(_QWORD *)(v15 + 56) = v29;
  *(_BYTE *)(v15 + 64) = v18;
  j_j__swift_release(v30);
  v31 = *(_QWORD *)(v16 + 72);
  LOBYTE(v18) = *(_BYTE *)(v16 + 80);
  j__swift_retain(v31);
  v32 = *(_QWORD *)(v15 + 72);
  *(_QWORD *)(v15 + 72) = v31;
  *(_BYTE *)(v15 + 80) = v18;
  j_j__swift_release(v32);
  v33 = *(_QWORD *)(v16 + 88);
  LOBYTE(v18) = *(_BYTE *)(v16 + 96);
  j__swift_retain(v33);
  v34 = *(_QWORD *)(v15 + 88);
  *(_QWORD *)(v15 + 88) = v33;
  *(_BYTE *)(v15 + 96) = v18;
  j_j__swift_release(v34);
  v35 = *(_QWORD *)(v16 + 104);
  LOBYTE(v18) = *(_BYTE *)(v16 + 112);
  sub_221017C08(v35, v18);
  v36 = *(_QWORD *)(v15 + 104);
  v37 = *(unsigned __int8 *)(v15 + 112);
  *(_QWORD *)(v15 + 104) = v35;
  *(_BYTE *)(v15 + 112) = v18;
  sub_221047104(v36, v37);
  v38 = *(_QWORD *)(v16 + 120);
  LOBYTE(v18) = *(_BYTE *)(v16 + 128);
  sub_221017C08(v38, v18);
  v39 = *(_QWORD *)(v15 + 120);
  v40 = *(unsigned __int8 *)(v15 + 128);
  *(_QWORD *)(v15 + 120) = v38;
  *(_BYTE *)(v15 + 128) = v18;
  sub_221047104(v39, v40);
  v41 = *(_QWORD *)(v16 + 136);
  v42 = *(_QWORD *)(v16 + 144);
  LOBYTE(v19) = *(_BYTE *)(v16 + 152);
  sub_2210BC964(v41, v42, v19);
  v43 = *(_QWORD *)(v15 + 136);
  v44 = *(_QWORD *)(v15 + 144);
  v45 = *(_BYTE *)(v15 + 152);
  *(_QWORD *)(v15 + 136) = v41;
  *(_QWORD *)(v15 + 144) = v42;
  *(_BYTE *)(v15 + 152) = v19;
  sub_2210BCAC8(v43, v44, v45);
  v46 = *(_QWORD *)(v16 + 160);
  LOBYTE(v42) = *(_BYTE *)(v16 + 168);
  j__swift_retain(v46);
  v47 = *(_QWORD *)(v15 + 160);
  *(_QWORD *)(v15 + 160) = v46;
  *(_BYTE *)(v15 + 168) = v42;
  j_j__swift_release(v47);
  v48 = *(_QWORD *)(v16 + 176);
  LOBYTE(v42) = *(_BYTE *)(v16 + 184);
  j__swift_retain(v48);
  v49 = *(_QWORD *)(v15 + 176);
  *(_QWORD *)(v15 + 176) = v48;
  *(_BYTE *)(v15 + 184) = v42;
  j_j__swift_release(v49);
  v50 = *(_QWORD *)(v16 + 192);
  LOBYTE(v42) = *(_BYTE *)(v16 + 200);
  j__swift_retain(v50);
  v51 = *(_QWORD *)(v15 + 192);
  *(_QWORD *)(v15 + 192) = v50;
  *(_BYTE *)(v15 + 200) = v42;
  j_j__swift_release(v51);
  v52 = *(_QWORD *)(v16 + 208);
  v53 = *(_QWORD *)(v16 + 216);
  LOBYTE(v19) = *(_BYTE *)(v16 + 224);
  sub_2210BC964(v52, v53, v19);
  v54 = *(_QWORD *)(v15 + 208);
  v55 = *(_QWORD *)(v15 + 216);
  v56 = *(_BYTE *)(v15 + 224);
  *(_QWORD *)(v15 + 208) = v52;
  *(_QWORD *)(v15 + 216) = v53;
  *(_BYTE *)(v15 + 224) = v19;
  sub_2210BCAC8(v54, v55, v56);
  v57 = *(_QWORD *)(v16 + 232);
  v58 = *(_QWORD *)(v16 + 240);
  LOBYTE(v19) = *(_BYTE *)(v16 + 248);
  sub_221046D0C(v57, v58, v19);
  v59 = *(_QWORD *)(v15 + 232);
  v60 = *(_QWORD *)(v15 + 240);
  v61 = *(_BYTE *)(v15 + 248);
  *(_QWORD *)(v15 + 232) = v57;
  *(_QWORD *)(v15 + 240) = v58;
  *(_BYTE *)(v15 + 248) = v19;
  sub_221046EE0(v59, v60, v61);
  v62 = sub_2212F2AF0();
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(_DWORD *)(v63 + 80) & 0xF8;
  v65 = v64 | 0x100;
  v66 = (v64 | 0x100) + v15;
  v67 = ~v64 & 0xFFFFFFFFFFFFFFF8;
  v68 = v66 & v67;
  v69 = (v65 + v16) & v67;
  LODWORD(v20) = __swift_getEnumTagSinglePayload(v66 & v67, 1, v62);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v69, 1, v62);
  if ((_DWORD)v20)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v68, v69, v62);
      __swift_storeEnumTagSinglePayload(v68, 0, 1, v62);
      goto LABEL_10;
    }
  }
  else
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 24))(v68, v69, v62);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v68, v62);
  }
  if (*(_DWORD *)(v63 + 84))
    v71 = *(_QWORD *)(v63 + 64);
  else
    v71 = *(_QWORD *)(v63 + 64) + 1;
  memcpy((void *)v68, (const void *)v69, v71);
LABEL_10:
  if (*(_DWORD *)(v63 + 84))
    v72 = *(_QWORD *)(v63 + 64);
  else
    v72 = *(_QWORD *)(v63 + 64) + 1;
  *(_QWORD *)(((v68 | 7) + v72) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((v69 | 7) + v72) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v73 = ((v72 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v74 = v73 + v68;
  v75 = (_QWORD *)(v73 + v69);
  *(_QWORD *)(v73 + v68) = *v75;
  swift_retain();
  swift_release();
  *(_QWORD *)(v74 + 8) = v75[1];
  swift_retain();
  swift_release();
  v76 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8;
  v77 = ((unint64_t)v75 + 23) & 0xFFFFFFFFFFFFFFF8;
  v78 = *(_QWORD *)(v77 + 24);
  v130 = a1;
  if (*(_QWORD *)(v76 + 24))
  {
    v79 = (uint64_t *)((v74 + 23) & 0xFFFFFFFFFFFFFFF8);
    if (v78)
    {
      __swift_assign_boxed_opaque_existential_1(v79, (uint64_t *)v77);
      goto LABEL_20;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
  }
  else if (v78)
  {
    *(_QWORD *)(v76 + 24) = v78;
    *(_QWORD *)(v76 + 32) = *(_QWORD *)(v77 + 32);
    (**(void (***)(unint64_t, unint64_t))(v78 - 8))((v74 + 23) & 0xFFFFFFFFFFFFFFF8, v77);
    goto LABEL_20;
  }
  v80 = *(_OWORD *)v77;
  v81 = *(_OWORD *)(v77 + 16);
  *(_QWORD *)(v76 + 32) = *(_QWORD *)(v77 + 32);
  *(_OWORD *)v76 = v80;
  *(_OWORD *)(v76 + 16) = v81;
LABEL_20:
  *(_QWORD *)(v76 + 40) = *(_QWORD *)(v77 + 40);
  swift_retain();
  swift_release();
  v82 = (v76 + 55) & 0xFFFFFFFFFFFFFFF8;
  v83 = (v77 + 55) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v82 = *(_BYTE *)v83;
  *(_QWORD *)(v82 + 8) = *(_QWORD *)(v83 + 8);
  swift_retain();
  swift_release();
  v84 = (v82 + 23) & 0xFFFFFFFFFFFFFFF8;
  v85 = (v83 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v84 = *(_BYTE *)v85;
  *(_QWORD *)(v84 + 8) = *(_QWORD *)(v85 + 8);
  swift_retain();
  swift_release();
  v86 = *(_DWORD *)(v7 + 80) & 0xF8;
  v87 = sub_2212F4FEC();
  v88 = *(_QWORD *)(v87 - 8);
  v89 = *(unsigned __int8 *)(v88 + 80);
  v90 = v86 | v89 | 7;
  v91 = (v90 + 16 + v84) & ~v90;
  v92 = (v90 + 16 + v85) & ~v90;
  v93 = *(unsigned int *)(v7 + 84);
  v94 = *(unsigned int *)(v88 + 84);
  if (v94 <= v93)
    v95 = *(_DWORD *)(v7 + 84);
  else
    v95 = *(_DWORD *)(v88 + 84);
  if (v95 <= 0x7FFFFFFF)
    v95 = 0x7FFFFFFF;
  v96 = ~v89;
  v97 = v132 + v89;
  v98 = *(_QWORD *)(v88 + 64);
  v131 = ((((v98 + ((v132 + v89) & ~v89) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v133 = (char *)v92;
  v129 = v87;
  if ((_DWORD)v93 == v95)
  {
    v99 = (char *)v91;
    v100 = __swift_getEnumTagSinglePayload(v91, v93, v134);
    v101 = __swift_getEnumTagSinglePayload(v92, v93, v134);
    if (v100)
      goto LABEL_27;
LABEL_35:
    if (v101)
    {
      v102 = v99;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v99, v134);
      (*(void (**)(unint64_t, uint64_t))(v88 + 8))((unint64_t)&v99[v97] & v96, v129);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)((((unint64_t)&v99[v97] & v96) + v98 + 23) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
      {
        swift_release();
        swift_release();
      }
      swift_release();
      v103 = v99;
      goto LABEL_39;
    }
    v102 = v99;
    v110 = v133;
    ((void (*)(char *, char *, uint64_t))v128)(v99, v133, v134);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v88 + 24))((unint64_t)&v99[v97] & v96, (unint64_t)&v133[v97] & v96, v129);
    v120 = ((unint64_t)&v99[v97] & v96) + v98;
    v121 = ((unint64_t)&v133[v97] & v96) + v98;
    v122 = (v120 + 7) & 0xFFFFFFFFFFFFFFF8;
    v123 = (v121 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v122 = *(_QWORD *)v123;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v122 + 8) = *(_BYTE *)(v123 + 8);
    v124 = (_QWORD *)((v120 + 23) & 0xFFFFFFFFFFFFFFF8);
    v125 = (unint64_t *)((v121 + 23) & 0xFFFFFFFFFFFFFFF8);
    v126 = *v125;
    if (*v124 < 0xFFFFFFFFuLL)
    {
      v112 = v130;
      v111 = v131;
      if (v126 >= 0xFFFFFFFF)
      {
        *v124 = v126;
        v124[1] = v125[1];
        swift_retain();
        swift_retain();
        goto LABEL_52;
      }
    }
    else
    {
      v112 = v130;
      v111 = v131;
      if (v126 >= 0xFFFFFFFF)
      {
        *v124 = v126;
        swift_retain();
        swift_release();
        v124[1] = v125[1];
        swift_retain();
        swift_release();
LABEL_52:
        *(_QWORD *)(((unint64_t)v124 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v125 + 23) & 0xFFFFFFFFFFFFF8);
        swift_retain();
        swift_release();
        goto LABEL_53;
      }
      swift_release();
      swift_release();
    }
    *(_OWORD *)v124 = *(_OWORD *)v125;
    goto LABEL_52;
  }
  v104 = v87;
  v105 = (v97 + v91) & v96;
  v99 = (char *)v91;
  if ((_DWORD)v94 == v95)
  {
    v106 = v104;
    v107 = __swift_getEnumTagSinglePayload(v105, v94, v104);
    v101 = __swift_getEnumTagSinglePayload((v97 + v92) & v96, v94, v106);
    if (!v107)
      goto LABEL_35;
  }
  else
  {
    v108 = *(_QWORD *)((v98 + 7 + v105) & 0xFFFFFFFFFFFFF8);
    v109 = *(_QWORD *)((v98 + 7 + ((v97 + v92) & v96)) & 0xFFFFFFFFFFFFF8);
    if (v109 >= 0xFFFFFFFF)
      LODWORD(v109) = -1;
    v101 = v109 + 1;
    if (v108 > 0xFFFFFFFE)
      goto LABEL_35;
  }
LABEL_27:
  if (v101)
  {
    v102 = v99;
    v103 = v99;
LABEL_39:
    v111 = v131;
    v110 = v133;
    memcpy(v103, v133, v131);
    v112 = v130;
    goto LABEL_53;
  }
  v102 = v99;
  v110 = v133;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v99, v133, v134);
  v113 = (unint64_t)&v99[v97] & v96;
  v114 = (unint64_t)&v133[v97] & v96;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v88 + 16))(v113, v114, v129);
  v115 = (v113 + v98 + 7) & 0xFFFFFFFFFFFFFFF8;
  v116 = (v114 + v98 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v115 = *(_QWORD *)v116;
  *(_BYTE *)(v115 + 8) = *(_BYTE *)(v116 + 8);
  v117 = (v113 + v98 + 23) & 0xFFFFFFFFFFFFFFF8;
  v118 = (unint64_t *)((v114 + v98 + 23) & 0xFFFFFFFFFFFFFFF8);
  v119 = *v118;
  swift_bridgeObjectRetain();
  if (v119 < 0xFFFFFFFF)
  {
    *(_OWORD *)v117 = *(_OWORD *)v118;
  }
  else
  {
    *(_QWORD *)v117 = v119;
    *(_QWORD *)(v117 + 8) = v118[1];
    swift_retain();
    swift_retain();
  }
  v112 = v130;
  *(_QWORD *)((v117 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v118 + 23) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  v111 = v131;
LABEL_53:
  *(_QWORD *)&v102[v111] = *(_QWORD *)&v110[v111];
  swift_retain();
  swift_release();
  return v112;
}

uint64_t sub_2212A5820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  size_t v31;
  size_t v32;
  size_t v33;
  unint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  __int128 *v38;
  __int128 v39;
  __int128 v40;
  _OWORD *v41;
  _OWORD *v42;
  _OWORD *v43;
  _OWORD *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int EnumTagSinglePayload;
  unint64_t v63;
  size_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _OWORD *v69;
  _OWORD *v70;
  void (*v72)(uint64_t, uint64_t, uint64_t);

  v6 = sub_2212F51B4();
  v7 = *(_QWORD *)(v6 - 8);
  v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v72(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v8 + v10 + a1) & ~v10;
  v12 = (v8 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v11, v12);
  v13 = *(_QWORD *)(v9 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  v16 = v14 & 0xFFFFFFFFFFFFFFF8;
  v17 = v15 & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_OWORD *)((v15 & 0xFFFFFFFFFFFFFFF8) + 24);
  v19 = *(_OWORD *)((v15 & 0xFFFFFFFFFFFFFFF8) + 33);
  *(_OWORD *)(v16 + 8) = *(_OWORD *)((v15 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_OWORD *)(v16 + 33) = v19;
  *(_OWORD *)(v16 + 24) = v18;
  v20 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFF8) + 56);
  *(_BYTE *)(v16 + 64) = *(_BYTE *)(v17 + 64);
  *(_QWORD *)(v16 + 56) = v20;
  LOBYTE(v20) = *(_BYTE *)(v17 + 80);
  *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
  *(_BYTE *)(v16 + 80) = v20;
  LOBYTE(v20) = *(_BYTE *)(v17 + 96);
  *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
  *(_BYTE *)(v16 + 96) = v20;
  LOBYTE(v20) = *(_BYTE *)(v17 + 112);
  *(_QWORD *)(v16 + 104) = *(_QWORD *)(v17 + 104);
  *(_BYTE *)(v16 + 112) = v20;
  LOBYTE(v20) = *(_BYTE *)(v17 + 128);
  *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
  *(_BYTE *)(v16 + 128) = v20;
  LOBYTE(v20) = *(_BYTE *)(v17 + 152);
  *(_OWORD *)(v16 + 136) = *(_OWORD *)(v17 + 136);
  *(_BYTE *)(v16 + 152) = v20;
  memcpy((void *)((v14 & 0xFFFFFFFFFFFFFFF8) + 160), (const void *)(v17 + 160), 0x41uLL);
  v21 = *(_BYTE *)(v17 + 248);
  *(_OWORD *)(v16 + 232) = *(_OWORD *)(v17 + 232);
  *(_BYTE *)(v16 + 248) = v21;
  v22 = sub_2212F2AF0();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_DWORD *)(v23 + 80) & 0xF8;
  v25 = v24 | 0x100;
  v26 = (v24 | 0x100) + v16;
  v27 = ~v24 & 0xFFFFFFFFFFFFFFF8;
  v28 = v26 & v27;
  v29 = (v25 + v17) & v27;
  if (__swift_getEnumTagSinglePayload(v29, 1, v22))
  {
    v30 = *(_DWORD *)(v23 + 84);
    v31 = *(_QWORD *)(v23 + 64);
    if (v30)
      v32 = v31;
    else
      v32 = v31 + 1;
    memcpy((void *)v28, (const void *)v29, v32);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v28, v29, v22);
    __swift_storeEnumTagSinglePayload(v28, 0, 1, v22);
    v30 = *(_DWORD *)(v23 + 84);
    v31 = *(_QWORD *)(v23 + 64);
  }
  if (v30)
    v33 = v31;
  else
    v33 = v31 + 1;
  *(_QWORD *)(((v28 | 7) + v33) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v29 | 7) + v33) & 0xFFFFFFFFFFFFF8);
  v34 = ((v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v35 = (_OWORD *)(v34 + v28);
  v36 = (_OWORD *)(v34 + v29);
  *v35 = *v36;
  v37 = (_OWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  v38 = (__int128 *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  v39 = *v38;
  v40 = v38[2];
  v37[1] = v38[1];
  v37[2] = v40;
  *v37 = v39;
  v41 = (_OWORD *)(((unint64_t)v37 + 55) & 0xFFFFFFFFFFFFFFF8);
  v42 = (_OWORD *)(((unint64_t)v38 + 55) & 0xFFFFFFFFFFFFFFF8);
  *v41 = *v42;
  v43 = (_OWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  v44 = (_OWORD *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v43 = *v44;
  v45 = *(_DWORD *)(v7 + 80) & 0xF8;
  v46 = sub_2212F4FEC();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(unsigned __int8 *)(v47 + 80);
  v49 = v45 | v48 | 7;
  v50 = (char *)(((unint64_t)v43 + v49 + 16) & ~v49);
  v51 = (char *)(((unint64_t)v44 + v49 + 16) & ~v49);
  v52 = *(unsigned int *)(v7 + 84);
  v53 = *(unsigned int *)(v47 + 84);
  if (v53 <= v52)
    v54 = *(_DWORD *)(v7 + 84);
  else
    v54 = *(_DWORD *)(v47 + 84);
  if (v54 <= 0x7FFFFFFF)
    v54 = 0x7FFFFFFF;
  v55 = ~v48;
  v56 = v8 + v48;
  v57 = (v8 + v48) & ~v48;
  v58 = *(_QWORD *)(v47 + 64);
  v59 = (((v58 + v57 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if ((_DWORD)v52 == v54)
  {
    v60 = (uint64_t)v51;
    v53 = v52;
    v61 = v6;
LABEL_19:
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v60, v53, v61);
    goto LABEL_23;
  }
  v60 = (unint64_t)&v51[v56] & v55;
  if ((_DWORD)v53 == v54)
  {
    v61 = v46;
    goto LABEL_19;
  }
  v63 = *(_QWORD *)((v58 + v60 + 7) & 0xFFFFFFFFFFFFF8);
  if (v63 >= 0xFFFFFFFF)
    LODWORD(v63) = -1;
  EnumTagSinglePayload = v63 + 1;
LABEL_23:
  v64 = v59 + 8;
  if (EnumTagSinglePayload)
  {
    memcpy(v50, v51, v64);
  }
  else
  {
    v72((uint64_t)v50, (uint64_t)v51, v6);
    v65 = (unint64_t)&v50[v56] & v55;
    v66 = (unint64_t)&v51[v56] & v55;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v47 + 32))(v65, v66, v46);
    v67 = (v65 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
    v68 = (v66 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v67 = *(_QWORD *)v68;
    *(_BYTE *)(v67 + 8) = *(_BYTE *)(v68 + 8);
    v69 = (_OWORD *)((v65 + v58 + 23) & 0xFFFFFFFFFFFFFFF8);
    v70 = (_OWORD *)((v66 + v58 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v69 = *v70;
    *(_QWORD *)(((unint64_t)v69 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v70 + 23) & 0xFFFFFFFFFFFFF8);
  }
  *(_QWORD *)&v50[v64] = *(_QWORD *)&v51[v64];
  return a1;
}

uint64_t sub_2212A5C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int EnumTagSinglePayload;
  int v65;
  size_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  unint64_t v72;
  __int128 v73;
  __int128 v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  int v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  _OWORD *v100;
  _OWORD *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v118;
  unint64_t __n;
  uint64_t v120;
  void *__src;
  uint64_t v122;

  v6 = sub_2212F51B4();
  v7 = *(_QWORD *)(v6 - 8);
  v122 = v6;
  v117 = *(void (**)(uint64_t, uint64_t))(v7 + 40);
  v117(a1, a2);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v120 = a1;
  v11 = (v8 + v10 + a1) & ~v10;
  v12 = (v8 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v11, v12);
  v13 = *(_QWORD *)(v9 + 64);
  v14 = v11 + v13;
  v15 = v12 + v13;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  v16 = v14 & 0xFFFFFFFFFFFFFFF8;
  v17 = v15 & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFF8) + 40);
  LOBYTE(v14) = *(_BYTE *)(v17 + 48);
  v19 = *(_QWORD *)(v16 + 8);
  v20 = *(_QWORD *)(v16 + 16);
  v21 = *(_QWORD *)(v16 + 24);
  v22 = *(_QWORD *)(v16 + 32);
  v23 = *(_QWORD *)(v16 + 40);
  v24 = *(_BYTE *)(v16 + 48);
  v25 = *(_OWORD *)(v17 + 24);
  *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 8);
  *(_OWORD *)(v16 + 24) = v25;
  *(_QWORD *)(v16 + 40) = v18;
  *(_BYTE *)(v16 + 48) = v14;
  sub_221046E30(v19, v20, v21, v22, v23, v24);
  v26 = *(_BYTE *)(v17 + 64);
  v27 = *(_QWORD *)(v16 + 56);
  *(_QWORD *)(v16 + 56) = *(_QWORD *)(v17 + 56);
  *(_BYTE *)(v16 + 64) = v26;
  j_j__swift_release(v27);
  v28 = *(_BYTE *)(v17 + 80);
  v29 = *(_QWORD *)(v16 + 72);
  *(_QWORD *)(v16 + 72) = *(_QWORD *)(v17 + 72);
  *(_BYTE *)(v16 + 80) = v28;
  j_j__swift_release(v29);
  v30 = *(_BYTE *)(v17 + 96);
  v31 = *(_QWORD *)(v16 + 88);
  *(_QWORD *)(v16 + 88) = *(_QWORD *)(v17 + 88);
  *(_BYTE *)(v16 + 96) = v30;
  j_j__swift_release(v31);
  v32 = *(_BYTE *)(v17 + 112);
  v33 = *(_QWORD *)(v16 + 104);
  v34 = *(unsigned __int8 *)(v16 + 112);
  *(_QWORD *)(v16 + 104) = *(_QWORD *)(v17 + 104);
  *(_BYTE *)(v16 + 112) = v32;
  sub_221047104(v33, v34);
  v35 = *(_BYTE *)(v17 + 128);
  v36 = *(_QWORD *)(v16 + 120);
  v37 = *(unsigned __int8 *)(v16 + 128);
  *(_QWORD *)(v16 + 120) = *(_QWORD *)(v17 + 120);
  *(_BYTE *)(v16 + 128) = v35;
  sub_221047104(v36, v37);
  v38 = *(_BYTE *)(v17 + 152);
  v39 = *(_QWORD *)(v16 + 136);
  v40 = *(_QWORD *)(v16 + 144);
  v41 = *(_BYTE *)(v16 + 152);
  *(_OWORD *)(v16 + 136) = *(_OWORD *)(v17 + 136);
  *(_BYTE *)(v16 + 152) = v38;
  sub_2210BCAC8(v39, v40, v41);
  v42 = *(_BYTE *)(v17 + 168);
  v43 = *(_QWORD *)(v16 + 160);
  *(_QWORD *)(v16 + 160) = *(_QWORD *)(v17 + 160);
  *(_BYTE *)(v16 + 168) = v42;
  j_j__swift_release(v43);
  v44 = *(_BYTE *)(v17 + 184);
  v45 = *(_QWORD *)(v16 + 176);
  *(_QWORD *)(v16 + 176) = *(_QWORD *)(v17 + 176);
  *(_BYTE *)(v16 + 184) = v44;
  j_j__swift_release(v45);
  v46 = *(_BYTE *)(v17 + 200);
  v47 = *(_QWORD *)(v16 + 192);
  *(_QWORD *)(v16 + 192) = *(_QWORD *)(v17 + 192);
  *(_BYTE *)(v16 + 200) = v46;
  j_j__swift_release(v47);
  v48 = *(_BYTE *)(v17 + 224);
  v49 = *(_QWORD *)(v16 + 208);
  v50 = *(_QWORD *)(v16 + 216);
  v51 = *(_BYTE *)(v16 + 224);
  *(_OWORD *)(v16 + 208) = *(_OWORD *)(v17 + 208);
  *(_BYTE *)(v16 + 224) = v48;
  sub_2210BCAC8(v49, v50, v51);
  v52 = *(_BYTE *)(v17 + 248);
  v53 = *(_QWORD *)(v16 + 232);
  v54 = *(_QWORD *)(v16 + 240);
  v55 = *(_BYTE *)(v16 + 248);
  *(_OWORD *)(v16 + 232) = *(_OWORD *)(v17 + 232);
  *(_BYTE *)(v16 + 248) = v52;
  sub_221046EE0(v53, v54, v55);
  v56 = sub_2212F2AF0();
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(_DWORD *)(v57 + 80) & 0xF8;
  v59 = v58 | 0x100;
  v60 = (v58 | 0x100) + v16;
  v61 = ~v58 & 0xFFFFFFFFFFFFFFF8;
  v62 = v60 & v61;
  v63 = (v59 + v17) & v61;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v60 & v61, 1, v56);
  v65 = __swift_getEnumTagSinglePayload(v63, 1, v56);
  if (EnumTagSinglePayload)
  {
    if (!v65)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v62, v63, v56);
      __swift_storeEnumTagSinglePayload(v62, 0, 1, v56);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v65)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 40))(v62, v63, v56);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v62, v56);
  }
  if (*(_DWORD *)(v57 + 84))
    v66 = *(_QWORD *)(v57 + 64);
  else
    v66 = *(_QWORD *)(v57 + 64) + 1;
  memcpy((void *)v62, (const void *)v63, v66);
LABEL_10:
  if (*(_DWORD *)(v57 + 84))
    v67 = *(_QWORD *)(v57 + 64);
  else
    v67 = *(_QWORD *)(v57 + 64) + 1;
  *(_QWORD *)(((v62 | 7) + v67) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((v63 | 7) + v67) & 0xFFFFFFFFFFFFF8);
  swift_release();
  v68 = ((v67 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v69 = v68 + v62;
  v70 = (_QWORD *)(v68 + v63);
  *(_QWORD *)(v68 + v62) = *v70;
  swift_release();
  *(_QWORD *)(v69 + 8) = v70[1];
  swift_release();
  v71 = (v69 + 23) & 0xFFFFFFFFFFFFFFF8;
  v72 = ((unint64_t)v70 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)(v71 + 24))
    __swift_destroy_boxed_opaque_existential_1(v71);
  v73 = *(_OWORD *)v72;
  v74 = *(_OWORD *)(v72 + 16);
  *(_QWORD *)(v71 + 32) = *(_QWORD *)(v72 + 32);
  *(_OWORD *)v71 = v73;
  *(_OWORD *)(v71 + 16) = v74;
  *(_QWORD *)(v71 + 40) = *(_QWORD *)(v72 + 40);
  swift_release();
  v75 = (v71 + 55) & 0xFFFFFFFFFFFFFFF8;
  v76 = (v72 + 55) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v75 = *(_BYTE *)v76;
  *(_QWORD *)(v75 + 8) = *(_QWORD *)(v76 + 8);
  swift_release();
  v77 = (v75 + 23) & 0xFFFFFFFFFFFFFFF8;
  v78 = (v76 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v77 = *(_BYTE *)v78;
  *(_QWORD *)(v77 + 8) = *(_QWORD *)(v78 + 8);
  swift_release();
  v79 = *(_DWORD *)(v7 + 80) & 0xF8;
  v80 = sub_2212F4FEC();
  v81 = *(_QWORD *)(v80 - 8);
  v82 = *(unsigned __int8 *)(v81 + 80);
  v83 = v79 | v82 | 7;
  v84 = (char *)((v83 + 16 + v77) & ~v83);
  v85 = (v83 + 16 + v78) & ~v83;
  v86 = *(unsigned int *)(v7 + 84);
  v87 = *(unsigned int *)(v81 + 84);
  if (v87 <= v86)
    v88 = *(_DWORD *)(v7 + 84);
  else
    v88 = *(_DWORD *)(v81 + 84);
  if (v88 <= 0x7FFFFFFF)
    v88 = 0x7FFFFFFF;
  v89 = ~v82;
  v90 = v8 + v82;
  v91 = (v8 + v82) & ~v82;
  v92 = *(_QWORD *)(v81 + 64);
  v118 = v80;
  __n = ((((v92 + v91 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  __src = (void *)v85;
  if ((_DWORD)v86 != v88)
  {
    v104 = v80;
    v105 = (unint64_t)&v84[v90] & v89;
    if ((_DWORD)v87 == v88)
    {
      v106 = v104;
      v107 = __swift_getEnumTagSinglePayload(v105, v87, v104);
      v94 = __swift_getEnumTagSinglePayload((v90 + v85) & v89, v87, v106);
      if (!v107)
        goto LABEL_30;
    }
    else
    {
      v108 = *(_QWORD *)((v92 + 7 + v105) & 0xFFFFFFFFFFFFF8);
      v109 = *(_QWORD *)((v92 + 7 + ((v90 + v85) & v89)) & 0xFFFFFFFFFFFFF8);
      if (v109 >= 0xFFFFFFFF)
        LODWORD(v109) = -1;
      v94 = v109 + 1;
      if (v108 > 0xFFFFFFFE)
        goto LABEL_30;
    }
LABEL_22:
    if (!v94)
    {
      v95 = v85;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v84, v85, v122);
      v96 = (unint64_t)&v84[v90] & v89;
      v97 = (v90 + v85) & v89;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v81 + 32))(v96, v97, v118);
      v98 = (v96 + v92 + 7) & 0xFFFFFFFFFFFFFFF8;
      v99 = (v97 + v92 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v98 = *(_QWORD *)v99;
      *(_BYTE *)(v98 + 8) = *(_BYTE *)(v99 + 8);
      v100 = (_OWORD *)((v96 + v92 + 23) & 0xFFFFFFFFFFFFFFF8);
      v101 = (_OWORD *)((v97 + v92 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v100 = *v101;
      *(_QWORD *)(((unint64_t)v100 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v101 + 23) & 0xFFFFFFFFFFFFF8);
      v103 = __n;
      v102 = v120;
      goto LABEL_35;
    }
LABEL_34:
    v95 = v85;
    v103 = __n;
    memcpy(v84, __src, __n);
    v102 = v120;
    goto LABEL_35;
  }
  v93 = __swift_getEnumTagSinglePayload((uint64_t)v84, v86, v122);
  v94 = __swift_getEnumTagSinglePayload(v85, v86, v122);
  if (v93)
    goto LABEL_22;
LABEL_30:
  if (v94)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v84, v122);
    (*(void (**)(unint64_t, uint64_t))(v81 + 8))((unint64_t)&v84[v90] & v89, v118);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)((((unint64_t)&v84[v90] & v89) + v92 + 23) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
    {
      swift_release();
      swift_release();
    }
    swift_release();
    goto LABEL_34;
  }
  v95 = v85;
  ((void (*)(char *, uint64_t, uint64_t))v117)(v84, v85, v122);
  v111 = (unint64_t)&v84[v90] & v89;
  v112 = (v90 + v85) & v89;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v81 + 40))(v111, v112, v118);
  v113 = (v111 + v92 + 7) & 0xFFFFFFFFFFFFFFF8;
  v114 = (v112 + v92 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v113 = *(_QWORD *)v114;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v113 + 8) = *(_BYTE *)(v114 + 8);
  v115 = (v111 + v92 + 23) & 0xFFFFFFFFFFFFFFF8;
  v116 = (v112 + v92 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v115 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v115 = *(_OWORD *)v116;
    v103 = __n;
    v102 = v120;
  }
  else
  {
    v103 = __n;
    v102 = v120;
    if (*(_QWORD *)v116 < 0xFFFFFFFFuLL)
    {
      swift_release();
      swift_release();
      *(_OWORD *)v115 = *(_OWORD *)v116;
    }
    else
    {
      *(_QWORD *)v115 = *(_QWORD *)v116;
      swift_release();
      *(_QWORD *)(v115 + 8) = *(_QWORD *)(v116 + 8);
      swift_release();
    }
  }
  *(_QWORD *)((v115 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v116 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release();
LABEL_35:
  *(_QWORD *)&v84[v103] = *(_QWORD *)(v103 + v95);
  swift_release();
  return v102;
}

uint64_t sub_2212A6388(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  unsigned int EnumTagSinglePayload;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v5 = sub_2212F51B4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v51 = *(_QWORD *)(a3 + 16);
  v52 = v5;
  v8 = *(_QWORD *)(v51 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7)
    v10 = *(_DWORD *)(v6 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  v50 = sub_2212F2AF0();
  v11 = *(_QWORD *)(v50 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if ((_DWORD)v12)
    v13 = v12 - 1;
  else
    v13 = 0;
  if (v13 <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = v13;
  if (v10 <= v14)
    v10 = v14;
  v15 = sub_2212F4FEC();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  if (v17 <= v7)
    v18 = v7;
  else
    v18 = *(_DWORD *)(v16 + 84);
  if (v18 <= 0x7FFFFFFF)
    v18 = 0x7FFFFFFF;
  v19 = v18 - 1;
  if (v10 > v18 - 1)
    v19 = v10;
  if ((_DWORD)v12)
    v20 = *(_QWORD *)(v11 + 64);
  else
    v20 = *(_QWORD *)(v11 + 64) + 1;
  if (!a2)
    return 0;
  v21 = v15;
  v22 = *(_QWORD *)(v6 + 64);
  v23 = *(unsigned __int8 *)(v8 + 80);
  v24 = v22 + v23;
  v25 = *(_QWORD *)(v8 + 64);
  v26 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  v27 = *(unsigned __int8 *)(v16 + 80);
  v28 = *(_DWORD *)(v6 + 80) & 0xF8 | v27 | 7;
  v29 = *(_QWORD *)(v16 + 64);
  v30 = v22 + v27;
  v31 = v20 + 7;
  v32 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = v28 + 16;
  v34 = (uint64_t)a1;
  if (a2 > v19)
  {
    v35 = ((((((v29 + (v30 & ~v27) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + ((v33
          + ((((((v32 + ((v26 + (((v24 & ~v23) + v25) & 0xFFFFFFFFFFFFFFF8) + 249) & ~v26) + 31) & 0xFFFFFFFFFFFFFFF8)
              + 55) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v28)
        + 8;
    if ((v35 & 0xFFFFFFF8) != 0)
      goto LABEL_25;
    v38 = a2 - v19 + 1;
    if (HIWORD(v38))
    {
      v36 = *(_DWORD *)((char *)a1 + v35);
      if (!v36)
        goto LABEL_39;
      goto LABEL_33;
    }
    if (v38 > 0xFF)
    {
      v36 = *(unsigned __int16 *)((char *)a1 + v35);
      if (!*(_WORD *)((char *)a1 + v35))
        goto LABEL_39;
      goto LABEL_33;
    }
    if (v38 >= 2)
    {
LABEL_25:
      v36 = *((unsigned __int8 *)a1 + v35);
      if (!*((_BYTE *)a1 + v35))
        goto LABEL_39;
LABEL_33:
      v39 = v36 - 1;
      if ((v35 & 0xFFFFFFF8) != 0)
      {
        v39 = 0;
        v40 = *a1;
      }
      else
      {
        v40 = 0;
      }
      v41 = v19 + (v40 | v39);
      return (v41 + 1);
    }
  }
LABEL_39:
  if ((_DWORD)v7 == v19)
  {
    v42 = v7;
    v43 = v52;
    return __swift_getEnumTagSinglePayload(v34, v42, v43);
  }
  v34 = ((unint64_t)a1 + v24) & ~v23;
  if ((_DWORD)v9 == v19)
  {
    v42 = v9;
    v43 = v51;
    return __swift_getEnumTagSinglePayload(v34, v42, v43);
  }
  v44 = (((v34 + v25) & 0xFFFFFFFFFFFFFFF8) + v26 + 249) & ~v26;
  if (v14 != v19)
  {
    v45 = (uint64_t *)(v44 + v32 + 8);
    if (v19 > 0x7FFFFFFE)
    {
      v44 = (v33
           + (((((((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v28;
      if ((_DWORD)v7 == v18)
      {
        v17 = v7;
        v21 = v52;
      }
      else
      {
        v44 = (v30 + v44) & ~v27;
        if ((_DWORD)v17 != v18)
        {
          v49 = *(_QWORD *)((v29 + v44 + 7) & 0xFFFFFFFFFFFFF8);
          if (v49 >= 0xFFFFFFFF)
            LODWORD(v49) = -1;
          EnumTagSinglePayload = v49 + 1;
          goto LABEL_61;
        }
      }
LABEL_60:
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v44, v17, v21);
LABEL_61:
      if (EnumTagSinglePayload >= 2)
        return EnumTagSinglePayload - 1;
      else
        return 0;
    }
    v46 = *v45;
    if ((unint64_t)*v45 >= 0xFFFFFFFF)
      LODWORD(v46) = -1;
    v41 = v46 - 1;
    if (v41 < 0)
      v41 = -1;
    return (v41 + 1);
  }
  if (v13 >= 0x7FFFFFFE)
  {
    v17 = v12;
    v21 = v50;
    goto LABEL_60;
  }
  v47 = *(_QWORD *)((v31 + v44) & 0xFFFFFFFFFFFFF8);
  if (v47 >= 0xFFFFFFFF)
    LODWORD(v47) = -1;
  if ((v47 + 1) >= 2)
    return v47;
  else
    return 0;
}

void sub_2212A6700(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;

  v6 = *(_QWORD *)(sub_2212F51B4() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = *(_DWORD *)(v6 + 84);
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(sub_2212F2AF0() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= 0x7FFFFFFE)
    v13 = 2147483646;
  else
    v13 = v12;
  if (v9 <= v13)
    v14 = v13;
  else
    v14 = v9;
  v15 = 0;
  v16 = *(_QWORD *)(sub_2212F4FEC() - 8);
  if (*(_DWORD *)(v16 + 84) <= v7)
    v17 = v7;
  else
    v17 = *(_DWORD *)(v16 + 84);
  if (v17 <= 0x7FFFFFFF)
    v17 = 0x7FFFFFFF;
  if (v14 <= v17 - 1)
    v18 = v17 - 1;
  else
    v18 = v14;
  if (v11)
    v20 = *(_QWORD *)(v10 + 64);
  else
    v20 = *(_QWORD *)(v10 + 64) + 1;
  v21 = *(unsigned __int8 *)(v16 + 80);
  v22 = *(_DWORD *)(v6 + 80) & 0xF8 | v21 | 7;
  v19 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  v23 = ((((((*(_QWORD *)(v16 + 64) + ((*(_QWORD *)(v6 + 64) + v21) & ~v21) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + ((v22
        + 16
        + ((((((((v20 + 7) & 0xFFFFFFFFFFFFFFF8)
              + ((v19
                + ((((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
                  + *(_QWORD *)(v8 + 64)) & 0xFFFFFFFFFFFFFFF8)
                + 249) & ~v19)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 55) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v22)
      + 8;
  if (a3 > v18)
  {
    if ((_DWORD)v23)
    {
      v15 = 1u;
    }
    else
    {
      v24 = a3 - v18 + 1;
      v25 = HIWORD(v24);
      if (v24 >= 0x100)
        v26 = 2;
      else
        v26 = v24 > 1;
      if (v25)
        v15 = 4;
      else
        v15 = v26;
    }
  }
  if (a2 > v18)
  {
    if ((_DWORD)v23)
    {
      v27 = ~v18 + a2;
      bzero(a1, v23);
      *a1 = v27;
    }
    __asm { BR              X11 }
  }
  __asm { BR              X22 }
}

void sub_2212A694C(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = a1;
  JUMPOUT(0x2212A6B2CLL);
}

uint64_t sub_2212A6954@<X0>(uint64_t a1@<X0>, size_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;

  *(_DWORD *)(a1 + v11) = 0;
  if (!v20)
    goto LABEL_19;
  if ((_DWORD)v7 != v3)
  {
    a1 = (v5 + a1) & a3;
    if ((_DWORD)v9 == v3)
    {
      v12 = v20;
      v13 = v9;
      v14 = v18;
      return __swift_storeEnumTagSinglePayload(a1, v12, v13, v14);
    }
    if (v8 != v3)
      JUMPOUT(0x2212A6A60);
    if (v17 < 0x7FFFFFFE)
      JUMPOUT(0x2212A6A7CLL);
    if (v17 >= v20)
      JUMPOUT(0x2212A6ADCLL);
    if ((_DWORD)a2)
    {
      if (a2 <= 3)
        v16 = a2;
      else
        v16 = 4;
      bzero((void *)((((a1 + v4) & 0xFFFFFFFFFFFFFFF8) + v6 + 249) & v10), a2);
      __asm { BR              X10 }
    }
LABEL_19:
    JUMPOUT(0x2212A6B2CLL);
  }
  v12 = v20;
  v13 = v7;
  v14 = v19;
  return __swift_storeEnumTagSinglePayload(a1, v12, v13, v14);
}

void sub_2212A695C(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = a1;
  JUMPOUT(0x2212A6B2CLL);
}

void sub_2212A6964(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = a1;
  JUMPOUT(0x2212A6B2CLL);
}

void sub_2212A6A58()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
  JUMPOUT(0x2212A6B2CLL);
}

void sub_2212A6B60()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
  JUMPOUT(0x2212A6B2CLL);
}

void sub_2212A6B68()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
  JUMPOUT(0x2212A6B2CLL);
}

uint64_t type metadata accessor for StaticProductView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StaticProductView);
}

void sub_2212A6BB4(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_2212F4788();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_2212A6C00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2212A6C34(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if ((a4 & 1) == 0)
  {
    v7 = a3;
    a1(&v6, &v7);
    if (!v4)
      return v6;
  }
  return a3;
}

uint64_t sub_2212A6C90@<X0>(void (*a1)(_OWORD *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v3 = v2;
  sub_221014FC0(v3, (uint64_t)&v10, &qword_25565FE58);
  if (*((_QWORD *)&v11 + 1))
  {
    v8[0] = v10;
    v8[1] = v11;
    v9 = v12;
    a1(v8);
    return sub_22116E7BC((uint64_t)v8);
  }
  else
  {
    v7 = type metadata accessor for SubscriptionStoreContentConfiguration(0);
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v7);
  }
}

void sub_2212A6D48(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657378);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_20_0();
  __swift_instantiateConcreteTypeFromMangledName(qword_2556634A8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221014FC0(v1, (uint64_t)v8, qword_2556634A8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4) != 1)
  {
    sub_221015090((uint64_t)v8, v2, &qword_255657378);
    a1(&v10, v2);
    sub_221014F5C(v2, &qword_255657378);
  }
}

uint64_t sub_2212A6E70@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  void (*v15)(char *);

  v3 = v2;
  v15 = a1;
  v5 = sub_2212F4FEC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656318);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221014FC0(v3, (uint64_t)v11, &qword_255656318);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v5) == 1)
  {
    v12 = sub_2212F50D0();
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    v15(v8);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_2212A6FDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255667408);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StoreViewPurchaseEvent();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    sub_22103EDE0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
    {
      swift_release();
      sub_221014F5C((uint64_t)v4, &qword_255667408);
    }
    else
    {
      sub_221015318((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StoreViewPurchaseEvent);
      if (qword_255655D08 != -1)
        swift_once();
      v8 = type metadata accessor for SKLogger();
      __swift_project_value_buffer(v8, (uint64_t)qword_25568CFE8);
      sub_2211DF868();
      swift_release();
      sub_221011A28((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StoreViewPurchaseEvent);
    }
  }
}

void sub_2212A713C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[32];
  uint64_t v47;

  OUTLINED_FUNCTION_8_0();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556641C0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657738);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_36_25();
  sub_2212F51B4();
  v15 = OUTLINED_FUNCTION_94_5();
  v16(v15);
  v18 = (int *)type metadata accessor for StaticProductView(0, v4, v2, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v10 + v18[9], v8, v4);
  *(_BYTE *)(v10 + v18[10]) = v6;
  v19 = v10 + v18[11];
  *(_QWORD *)v19 = swift_getKeyPath();
  *(_OWORD *)(v19 + 8) = 0u;
  *(_OWORD *)(v19 + 24) = 0u;
  *(_BYTE *)(v19 + 40) = 0;
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_58_13(KeyPath);
  v21 = swift_getKeyPath();
  OUTLINED_FUNCTION_58_13(v21);
  v22 = swift_getKeyPath();
  OUTLINED_FUNCTION_58_13(v22);
  v23 = swift_getKeyPath();
  OUTLINED_FUNCTION_58_13(v23);
  v24 = swift_getKeyPath();
  OUTLINED_FUNCTION_58_13(v24);
  v25 = v10 + v18[17];
  *(_QWORD *)v25 = swift_getKeyPath();
  *(_QWORD *)(v25 + 8) = 0;
  *(_BYTE *)(v25 + 16) = 0;
  v26 = v10 + v18[18];
  v27 = swift_getKeyPath();
  v28 = swift_getKeyPath();
  v29 = swift_getKeyPath();
  v30 = swift_getKeyPath();
  *(_QWORD *)v26 = v27;
  *(_BYTE *)(v26 + 8) = 0;
  *(_QWORD *)(v26 + 16) = v28;
  *(_BYTE *)(v26 + 24) = 0;
  *(_QWORD *)(v26 + 32) = v29;
  *(_BYTE *)(v26 + 40) = 0;
  *(_QWORD *)(v26 + 48) = v30;
  *(_QWORD *)(v26 + 56) = 0;
  *(_BYTE *)(v26 + 64) = 0;
  v31 = v10 + v18[19];
  *(_QWORD *)v31 = swift_getKeyPath();
  *(_QWORD *)(v31 + 8) = 0;
  *(_BYTE *)(v31 + 16) = 0;
  v32 = sub_2212F2AF0();
  OUTLINED_FUNCTION_85_0(v0, v33, v34, v32);
  sub_2212A7668(v0, v35, v36, &qword_255657738);
  v37 = (uint64_t *)(v10 + v18[21]);
  *v37 = sub_2210BD948();
  v37[1] = v38;
  v47 = 0;
  memset(v46, 0, sizeof(v46));
  sub_2212A75F4((uint64_t)v46);
  *(_BYTE *)v37 = OUTLINED_FUNCTION_83_4() & 1;
  v37[1] = v39;
  *(_BYTE *)v37 = OUTLINED_FUNCTION_83_4() & 1;
  v37[1] = v40;
  v41 = OUTLINED_FUNCTION_53_12();
  OUTLINED_FUNCTION_85_0((uint64_t)v13, v42, v43, v41);
  sub_2212A7668((uint64_t)v13, v44, v45, &qword_2556641C0);
  OUTLINED_FUNCTION_19();
}

void sub_2212A7408()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_74_12();
  OUTLINED_FUNCTION_6_0();
}

void sub_2212A7424()
{
  OUTLINED_FUNCTION_10_2();
  sub_22107908C();
  OUTLINED_FUNCTION_6_0();
}

void sub_2212A7440()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_75_10() & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_2212A7460()
{
  OUTLINED_FUNCTION_71_9();
  OUTLINED_FUNCTION_6_0();
}

void sub_2212A7478()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255667410);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ProductViewPurchaseEvent();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22122E918((uint64_t)v2);
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1)
  {
    sub_221014F5C((uint64_t)v2, &qword_255667410);
  }
  else
  {
    sub_221015318((uint64_t)v2, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ProductViewPurchaseEvent);
    if (qword_255655D08 != -1)
      swift_once();
    v6 = type metadata accessor for SKLogger();
    __swift_project_value_buffer(v6, (uint64_t)qword_25568CFE8);
    sub_2211DFBB8();
    sub_221011A28((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ProductViewPurchaseEvent);
  }
}

void sub_2212A75B0()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_76_11();
  OUTLINED_FUNCTION_6_0();
}

void sub_2212A75CC()
{
  OUTLINED_FUNCTION_10_2();
  sub_22122EF08();
  OUTLINED_FUNCTION_6_0();
}

void sub_2212A75E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2212A7668(a1, a2, a3, &qword_255657738);
}

void sub_2212A75F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  _BYTE v3[40];

  sub_221014FC0(a1, (uint64_t)v3, &qword_25565A028);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A028);
  sub_2212F4758();
  v1 = OUTLINED_FUNCTION_54_0();
  sub_221014F5C(v1, v2);
}

void sub_2212A765C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2212A7668(a1, a2, a3, &qword_2556641C0);
}

void sub_2212A7668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(a4);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_73_10(a1);
  sub_2212F4758();
  sub_221014F5C(a1, a4);
}

void sub_2212A76E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31[2];
  char v32;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Product.TaskState(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2212A78E0(v2, v5, *(_QWORD *)(a1 + 24), v12);
  v29 = v14;
  v30 = v13;
  v15 = sub_2212F51B4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v11, v2, v15);
  swift_storeEnumTagMultiPayload();
  v16 = v2 + *(int *)(a1 + 96);
  v17 = *(_BYTE *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  LOBYTE(v31[0]) = v17;
  v31[1] = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658350);
  sub_2212F4764();
  v19 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + *(int *)(a1 + 36), v5);
  sub_2212AD7DC((uint64_t)v8, v5, v31);
  v20 = v31[0];
  LOBYTE(v8) = *(_BYTE *)(v2 + *(int *)(a1 + 40));
  v21 = v2 + *(int *)(a1 + 64);
  v22 = *(_QWORD *)v21;
  v23 = *(unsigned __int8 *)(v21 + 8);
  sub_221017C08(*(_QWORD *)v21, *(_BYTE *)(v21 + 8));
  sub_221044EE4();
  v25 = v24;
  sub_221047104(v22, v23);
  v26 = v29;
  *(_QWORD *)a2 = v30;
  *(_QWORD *)(a2 + 8) = v26;
  v27 = (int *)type metadata accessor for ProductViewStyleConfiguration();
  sub_221014EB4((uint64_t)v11, a2 + v27[6], type metadata accessor for Product.TaskState);
  *(_BYTE *)(a2 + v27[8]) = v19;
  sub_221011A28((uint64_t)v11, type metadata accessor for Product.TaskState);
  *(_QWORD *)(a2 + v27[7]) = v20;
  *(_BYTE *)(a2 + 16) = (_BYTE)v8;
  *(_BYTE *)(a2 + v27[9]) = v25;
}

uint64_t (*sub_2212A78E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = type metadata accessor for StaticProductView(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))((char *)&v15 - v10, a1, v7, v9);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_2212AA84C;
}

uint64_t sub_2212A79B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticProductView(0, a2, a3, a4);
  return sub_2212A79DC(v4);
}

uint64_t sub_2212A79DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20[5];
  _OWORD v21[2];
  uint64_t v22;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v20[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656B20);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(int *)(a1 + 84);
  v21[0] = *(_OWORD *)(v1 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9B0);
  sub_2212F4764();
  v11 = v20[0];
  result = swift_release();
  if (!v11)
  {
    v22 = 0;
    memset(v21, 0, sizeof(v21));
    sub_221014FC0((uint64_t)v21, (uint64_t)v20, &qword_25565A028);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9B8);
    sub_2212F4770();
    sub_221014F5C((uint64_t)v21, &qword_25565A028);
    sub_2212F5610();
    v13 = sub_2212F5640();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v20[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
    sub_2212F55F8();
    v14 = sub_2212F55EC();
    v15 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v16 = swift_allocObject();
    v17 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v16 + 16) = v14;
    *(_QWORD *)(v16 + 24) = v17;
    *(_OWORD *)(v16 + 32) = *(_OWORD *)(a1 + 16);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16 + v15, v6, a1);
    v18 = sub_2210ECBB8((uint64_t)v9, (uint64_t)&unk_2556673F8, v16);
    v21[0] = *(_OWORD *)(v2 + v10);
    v20[0] = v18;
    return sub_2212F4770();
  }
  return result;
}

void sub_2212A7BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 *v67;
  __int128 v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t KeyPath;
  uint64_t *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t (**v136)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t (*v155)(uint64_t, uint64_t, uint64_t);
  void (*v156)(uint64_t, uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t (*v173)(uint64_t, uint64_t, uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  __int128 v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t (*v184)(char *);
  _QWORD v185[4];
  uint64_t v186;
  __int128 v187;
  _BYTE v188[25];
  uint64_t v189;
  uint64_t v190;

  OUTLINED_FUNCTION_8_0();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v171 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657738);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_8_18(v28);
  v29 = sub_2212F2B20();
  OUTLINED_FUNCTION_15_35(v29, (uint64_t)&v190);
  v167 = v30;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_8_18(v32);
  v33 = sub_2212F5640();
  OUTLINED_FUNCTION_15_35(v33, (uint64_t)&a12);
  v165 = v34;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v36);
  v173 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v175 = v38;
  OUTLINED_FUNCTION_8_18((uint64_t)&v147 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = type metadata accessor for InAppStoreButtonStyle();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_36_25();
  type metadata accessor for ProductViewStyleConfiguration();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v41);
  v43 = (char *)&v147 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A980);
  OUTLINED_FUNCTION_15_35(v44, (uint64_t)&v181);
  v151 = v45;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v47);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255667388);
  OUTLINED_FUNCTION_15_35(v48, (uint64_t)v185);
  v154 = v49;
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v50);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v51);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_255667390);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v52);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v53);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9F0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v54);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v55);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9E8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v56);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v57);
  v156 = (void (*)(uint64_t, uint64_t, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_255667398);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v58);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v59);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556673A0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v60);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v61);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556673A8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v62);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v63);
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556673B0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v64);
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_19_4(v65);
  v147 = v25;
  v66 = *(int *)(v25 + 44);
  v148 = v20;
  v67 = (__int128 *)(v20 + v66);
  v68 = v67[1];
  v187 = *v67;
  *(_OWORD *)v188 = v68;
  *(_OWORD *)&v188[9] = *(__int128 *)((char *)v67 + 25);
  sub_221015090((uint64_t)&v187, (uint64_t)&v189, &qword_255658530);
  sub_22119E934((uint64_t)&v189, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22105BD60);
  sub_221044D70();
  sub_22119E934((uint64_t)&v187, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_221046E30);
  sub_2212A76E4(v25, (uint64_t)v43);
  v69 = (uint64_t *)v185[0];
  v70 = v184(v43);
  OUTLINED_FUNCTION_95_0();
  v186 = v185[3];
  sub_2210368C4((uint64_t)&v186);
  sub_221011A28((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for ProductViewStyleConfiguration);
  *(_QWORD *)&v178 = v70;
  *(_QWORD *)v21 = swift_getKeyPath();
  *(_BYTE *)(v21 + 8) = 0;
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_100_7(KeyPath);
  *v69 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(qword_255656688);
  OUTLINED_FUNCTION_38_2();
  v72 = (uint64_t *)(v21 + *(int *)(v39 + 28));
  *v72 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
  OUTLINED_FUNCTION_94_5();
  OUTLINED_FUNCTION_38_2();
  v73 = (uint64_t *)(v21 + *(int *)(v39 + 32));
  *v73 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657138);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_18_38();
  sub_221023FE4(&qword_255657170, (void (*)(uint64_t))type metadata accessor for InAppStoreButtonStyle);
  v75 = v74;
  v76 = MEMORY[0x24BDF4780];
  v77 = v149;
  sub_2212F4320();
  OUTLINED_FUNCTION_77_7();
  swift_release();
  *(_QWORD *)v21 = swift_getKeyPath();
  *(_BYTE *)(v21 + 8) = 0;
  v78 = swift_getKeyPath();
  OUTLINED_FUNCTION_100_7(v78);
  *(_QWORD *)&v178 = swift_getKeyPath();
  OUTLINED_FUNCTION_38_2();
  v79 = (uint64_t *)(v21 + *(int *)(v39 + 28));
  *v79 = swift_getKeyPath();
  v80 = v150;
  OUTLINED_FUNCTION_38_2();
  v81 = (uint64_t *)(v21 + *(int *)(v39 + 32));
  *v81 = swift_getKeyPath();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_18_38();
  *(_QWORD *)&v178 = v76;
  *((_QWORD *)&v178 + 1) = v39;
  v179 = MEMORY[0x24BDF4760];
  v180 = v75;
  swift_getOpaqueTypeConformance2();
  sub_2212F43A4();
  OUTLINED_FUNCTION_77_7();
  OUTLINED_FUNCTION_1_23(v77, *(uint64_t (**)(uint64_t, uint64_t))(v151 + 8));
  v82 = v147;
  v83 = v148;
  v178 = *(_OWORD *)(v148 + *(int *)(v147 + 84));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9B0);
  sub_2212F4764();
  v84 = v182;
  if (v182)
    swift_release();
  v85 = v84 != 0;
  v86 = swift_getKeyPath();
  v87 = swift_allocObject();
  *(_BYTE *)(v87 + 16) = v85;
  v88 = v154;
  v89 = v172;
  v90 = v155;
  (*(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(v154 + 16))(v172, v80, v155);
  OUTLINED_FUNCTION_3_5();
  v92 = (uint64_t *)(v89 + v91);
  *v92 = v86;
  v92[1] = (uint64_t)sub_2210255C4;
  v92[2] = v87;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(v88 + 8))(v80, v90);
  v93 = *(int *)(v152 + 36);
  if (qword_255655CC0 != -1)
    swift_once();
  v94 = v174;
  v95 = (uint64_t *)(v174 + v93);
  type metadata accessor for CanMakePaymentsCache(0);
  sub_221023FE4(&qword_255656AD8, (void (*)(uint64_t))type metadata accessor for CanMakePaymentsCache);
  swift_retain();
  *v95 = sub_2212F31A4();
  v95[1] = v96;
  v97 = (uint64_t *)((char *)v95
                  + *(int *)(type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier(0) + 20));
  *v97 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656AE0);
  OUTLINED_FUNCTION_38_2();
  sub_221015090(v89, v94, &qword_255667390);
  v98 = v83 + *(int *)(v82 + 92);
  v99 = *(_BYTE *)v98;
  v100 = *(_QWORD *)(v98 + 8);
  LOBYTE(v182) = v99;
  v183 = v100;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658350);
  sub_2212F477C();
  LOBYTE(v95) = v179;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9B8);
  sub_2212F4764();
  v101 = v158;
  v102 = OUTLINED_FUNCTION_54_0();
  sub_2210BE5C4(v102, v103, (char)v95, v104, v105);
  swift_release();
  swift_release();
  sub_221014F5C((uint64_t)&v178, &qword_25565A028);
  sub_221014F5C(v94, &qword_25565A9F0);
  v152 = _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0();
  v151 = v106;
  v107 = v173;
  v155 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v173 + 2);
  v108 = v169;
  OUTLINED_FUNCTION_25_4(v169, v83, v155);
  v109 = *((unsigned __int8 *)v107 + 80);
  v154 = ((v109 + 32) & ~v109) + v175;
  v110 = (v109 + 32) & ~v109;
  v172 = v110;
  v153 = v109 | 7;
  v111 = swift_allocObject();
  v174 = *(_QWORD *)(v82 + 16);
  v175 = *(_QWORD *)(v82 + 24);
  v112 = v175;
  *(_QWORD *)(v111 + 16) = v174;
  *(_QWORD *)(v111 + 24) = v112;
  v173 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v107 + 4);
  OUTLINED_FUNCTION_25_4(v111 + v110, v108, v173);
  v113 = v176;
  sub_2212F5628();
  OUTLINED_FUNCTION_3_5();
  v114 = v159;
  v116 = v159 + v115;
  v117 = v165;
  v156 = *(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 16);
  v118 = v177;
  v156(v159 + v115, v113, v177);
  v119 = type metadata accessor for CurrentEntitlementViewModifier();
  v120 = (uint64_t *)(v116 + *(int *)(v119 + 20));
  v121 = v151;
  *v120 = v152;
  v120[1] = v121;
  v122 = (_QWORD *)(v116 + *(int *)(v119 + 24));
  *v122 = &unk_2556673D0;
  v122[1] = v111;
  sub_221014FC0(v101, v114, &qword_25565A9E8);
  v165 = *(_QWORD *)(v117 + 8);
  ((void (*)(uint64_t, uint64_t))v165)(v113, v118);
  sub_221014F5C(v101, &qword_25565A9E8);
  v123 = swift_getKeyPath();
  v124 = v166;
  sub_2212F4E24();
  OUTLINED_FUNCTION_3_5();
  v125 = v161;
  v127 = (uint64_t *)(v161 + v126);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_255658FD8);
  v129 = v167;
  v130 = v168;
  (*(void (**)(char *, uint64_t, uint64_t))(v167 + 16))((char *)v127 + *(int *)(v128 + 28), v124, v168);
  *v127 = v123;
  sub_221014FC0(v114, v125, &qword_255667398);
  (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v124, v130);
  sub_221014F5C(v114, &qword_255667398);
  v131 = v155;
  v155(v108, v83, v82);
  v132 = swift_allocObject();
  v133 = v175;
  *(_QWORD *)(v132 + 16) = v174;
  *(_QWORD *)(v132 + 24) = v133;
  OUTLINED_FUNCTION_70_7(v132 + v172, v108);
  v134 = v164;
  sub_221014FC0(v125, v164, &qword_2556673A0);
  OUTLINED_FUNCTION_3_5();
  v136 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + v135);
  *v136 = sub_2212AA6D0;
  v136[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v132;
  v136[2] = 0;
  v136[3] = 0;
  sub_221014F5C(v125, &qword_2556673A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556673C0);
  v137 = v170;
  sub_2212F4764();
  v131(v108, v83, v82);
  v138 = swift_allocObject();
  v139 = v175;
  *(_QWORD *)(v138 + 16) = v174;
  *(_QWORD *)(v138 + 24) = v139;
  OUTLINED_FUNCTION_70_7(v138 + v172, v108);
  v140 = v176;
  sub_2212F5610();
  OUTLINED_FUNCTION_3_5();
  v141 = v163;
  v143 = (_QWORD *)(v163 + v142);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556673E8);
  sub_221014FC0(v137, (uint64_t)v143 + *(int *)(v144 + 40), &qword_255657738);
  v145 = (char *)v143 + *(int *)(v144 + 36);
  v146 = v177;
  v156((uint64_t)v145, v140, v177);
  *v143 = &unk_2556673E0;
  v143[1] = v138;
  OUTLINED_FUNCTION_73_10(v134);
  ((void (*)(uint64_t, uint64_t))v165)(v140, v146);
  sub_221014F5C(v137, &qword_255657738);
  OUTLINED_FUNCTION_33_23();
  sub_221015090(v141, v171, &qword_2556673B0);
  OUTLINED_FUNCTION_19();
}

uint64_t sub_2212A884C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  v5 = sub_2212F4D10();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657738);
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659B70);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  sub_2212F55F8();
  v4[15] = sub_2212F55EC();
  sub_2212F55D4();
  return swift_task_switch();
}

uint64_t sub_2212A894C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_50_11();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  swift_release();
  EntitlementTaskState<A>.transaction.getter(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659088);
  v6 = OUTLINED_FUNCTION_11_26() != 1;
  sub_221014F5C(v1, &qword_255659B70);
  v8 = (char *)(v5 + *(int *)(type metadata accessor for StaticProductView(0, v4, v3, v7) + 96));
  v9 = *v8;
  v10 = *((_QWORD *)v8 + 1);
  *(_BYTE *)(v0 + 128) = v6;
  *(_BYTE *)(v0 + 16) = v9;
  *(_QWORD *)(v0 + 24) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658350);
  OUTLINED_FUNCTION_100_5();
  EntitlementTaskState<A>.transaction.getter(v2);
  v11 = OUTLINED_FUNCTION_44_17();
  v12 = *(_QWORD *)(v0 + 96);
  if ((_DWORD)v11 == 1)
  {
    OUTLINED_FUNCTION_43_16(v11, &qword_255659B70);
    v13 = sub_2212F2AF0();
    OUTLINED_FUNCTION_85_0(v12, v14, v15, v13);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 72);
    v17 = sub_2212F4D40();
    OUTLINED_FUNCTION_43_16(v17, &qword_255659088);
    sub_2212F4CA4();
    OUTLINED_FUNCTION_65_2(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  }
  OUTLINED_FUNCTION_47_16();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556673C0);
  OUTLINED_FUNCTION_100_5();
  OUTLINED_FUNCTION_33_23();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_3_15(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2212A8AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for StaticProductView(0, a2, a3, a4) + 52));
  j__swift_retain(v4);
  sub_221044F08();
  v6 = v5;
  result = j_j__swift_release(v4);
  if (v6)
  {
    sub_22122E644();
    return swift_release();
  }
  return result;
}

uint64_t sub_2212A8B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  v4 = sub_2212F5A6C();
  v3[12] = v4;
  v3[13] = *(_QWORD *)(v4 - 8);
  v3[14] = swift_task_alloc();
  v5 = sub_2212F5A54();
  v3[15] = v5;
  v3[16] = *(_QWORD *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657738);
  v3[19] = swift_task_alloc();
  v6 = sub_2212F2AF0();
  v3[20] = v6;
  v3[21] = *(_QWORD *)(v6 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  sub_2212F55F8();
  v3[24] = sub_2212F55EC();
  v3[25] = sub_2212F55D4();
  v3[26] = v7;
  return swift_task_switch();
}

uint64_t sub_2212A8C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;

  v5 = type metadata accessor for StaticProductView(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  *(_QWORD *)(v4 + 216) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556673C0);
  sub_2212F4764();
  if (OUTLINED_FUNCTION_44_17() == 1)
  {
    v6 = swift_release();
    OUTLINED_FUNCTION_43_16(v6, &qword_255657738);
  }
  else
  {
    v7 = *(_QWORD *)(v4 + 176);
    v8 = *(_QWORD *)(v4 + 160);
    v9 = *(_QWORD *)(v4 + 168);
    OUTLINED_FUNCTION_25_4(*(_QWORD *)(v4 + 184), *(_QWORD *)(v4 + 152), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
    sub_2212F2AD8();
    sub_2212F2ACC();
    v11 = v10;
    v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    *(_QWORD *)(v4 + 224) = v12;
    v12(v7, v8);
    v13 = *(_QWORD *)(v4 + 160);
    if (v11 > 0.0)
    {
      v14 = *(_QWORD *)(v4 + 128);
      sub_2212F5A3C();
      sub_2212F2AD8();
      sub_2212F2ACC();
      v15 = OUTLINED_FUNCTION_54_0();
      ((void (*)(uint64_t))v12)(v15);
      v16 = sub_2212F5E44();
      MEMORY[0x22766B080](v16);
      v17 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
      *(_QWORD *)(v4 + 232) = v17;
      OUTLINED_FUNCTION_65_2(v17);
      *(_QWORD *)(v4 + 24) = 0;
      *(_QWORD *)(v4 + 16) = 0;
      *(_BYTE *)(v4 + 32) = 1;
      sub_2212F5A60();
      v18 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v4 + 240) = v18;
      sub_221023FE4(&qword_255659070, (void (*)(uint64_t))MEMORY[0x24BEE6E10]);
      *v18 = v4;
      v18[1] = sub_2212A8EC8;
      return sub_2212F5664();
    }
    v20 = *(_QWORD *)(v4 + 184);
    v21 = *(_QWORD *)(v4 + 72);
    swift_release();
    v22 = (char *)(v21 + *(int *)(v5 + 96));
    v23 = *v22;
    v24 = *((_QWORD *)v22 + 1);
    *(_BYTE *)(v4 + 40) = v23;
    *(_QWORD *)(v4 + 48) = v24;
    *(_BYTE *)(v4 + 33) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255658350);
    sub_2212F4770();
    v12(v20, v13);
  }
  OUTLINED_FUNCTION_11_52();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_47_3();
  return OUTLINED_FUNCTION_3_15(*(uint64_t (**)(void))(v4 + 8));
}

uint64_t sub_2212A8EC8()
{
  void *v0;
  uint64_t **v1;
  uint64_t *v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_50_11();
  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    v3 = (void (*)(uint64_t))v2[29];
    v4 = v2[13];

    OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    v5 = OUTLINED_FUNCTION_54_0();
    v3(v5);
  }
  else
  {
    v6 = (void (*)(uint64_t, uint64_t))v2[29];
    v7 = v2[18];
    v8 = v2[15];
    OUTLINED_FUNCTION_71_1(v2[13]);
    v6(v7, v8);
  }
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2212A8F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  OUTLINED_FUNCTION_24_24();
  OUTLINED_FUNCTION_79_7();
  OUTLINED_FUNCTION_46_18(v1);
  OUTLINED_FUNCTION_7_54();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658350);
  OUTLINED_FUNCTION_102_4();
  OUTLINED_FUNCTION_46_18(v0);
  OUTLINED_FUNCTION_11_52();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_47_3();
  return OUTLINED_FUNCTION_3_15(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_2212A9008()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[6] = v0;
  v2 = sub_2212F4EFC();
  v1[7] = v2;
  v1[8] = *(_QWORD *)(v2 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_255659080);
  v1[11] = swift_task_alloc();
  v3 = sub_2212F4C8C();
  v1[12] = v3;
  v1[13] = *(_QWORD *)(v3 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  v4 = sub_2212F4D10();
  v1[16] = v4;
  v1[17] = *(_QWORD *)(v4 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = __swift_instantiateConcreteTypeFromMangledName(&qword_255659088);
  v1[20] = swift_task_alloc();
  v5 = sub_2212F4FD4();
  v1[21] = v5;
  v1[22] = *(_QWORD *)(v5 - 8);
  v1[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659098);
  v1[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656318);
  v1[25] = swift_task_alloc();
  sub_2212F55F8();
  v1[26] = sub_2212F55EC();
  v1[27] = sub_2212F55D4();
  v1[28] = v6;
  return swift_task_switch();
}

uint64_t sub_2212A91BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_50_11();
  v1 = *(_QWORD *)(v0 + 200);
  sub_2212F4E3C();
  v2 = sub_2212F4FEC();
  *(_QWORD *)(v0 + 232) = v2;
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) != 1)
    return OUTLINED_FUNCTION_3_12();
  v3 = swift_release();
  OUTLINED_FUNCTION_43_16(v3, &qword_255656318);
  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_45_2();
  return OUTLINED_FUNCTION_14_41(MEMORY[0x24BEE4AF8], *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2212A927C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_2212F4F68();
  *(_QWORD *)(v0 + 240) = v1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v2;
  OUTLINED_FUNCTION_60_5(v2, (uint64_t)sub_2212A92D4);
  return sub_2212F4FE0();
}

uint64_t sub_2212A92D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 256) = a1;
  *(_QWORD *)(v3 + 264) = v1;
  OUTLINED_FUNCTION_284();
  if (!v1)
    swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2212A9344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD, unint64_t, _QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 200);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v3, v2);
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 176);
    v33 = *(_QWORD *)(v0 + 136);
    v34 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 256)
       + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v30 = *(_QWORD *)(v5 + 72);
    v31 = v5;
    v32 = *(void (**)(_QWORD, unint64_t, _QWORD))(v5 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v35 = v4;
      v7 = *(_QWORD *)(v0 + 160);
      v8 = *(_QWORD *)(v0 + 144);
      v9 = *(_QWORD *)(v0 + 128);
      v32(*(_QWORD *)(v0 + 184), v6, *(_QWORD *)(v0 + 168));
      sub_2212F4F98();
      sub_2212F4D40();
      sub_221014F5C(v7, &qword_255659088);
      sub_2212F4C98();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v8, v9);
      sub_2212F4C80();
      sub_221023FE4(&qword_2556590A0, (void (*)(uint64_t))MEMORY[0x24BDEA108]);
      OUTLINED_FUNCTION_80_8();
      OUTLINED_FUNCTION_80_8();
      v10 = *(_QWORD *)(v0 + 112);
      v11 = *(_QWORD *)(v0 + 96);
      if (*(_QWORD *)(v0 + 16) == *(_QWORD *)(v0 + 32) && *(_QWORD *)(v0 + 24) == *(_QWORD *)(v0 + 40))
        break;
      v13 = sub_2212F5CDC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v14(v10, v11);
      v15 = OUTLINED_FUNCTION_94_5();
      ((void (*)(uint64_t))v14)(v15);
      if ((v13 & 1) != 0)
        goto LABEL_12;
      OUTLINED_FUNCTION_71_1(v31);
      v6 += v30;
      --v4;
      if (v35 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease_n();
    v17 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v17(v10, v11);
    v18 = OUTLINED_FUNCTION_94_5();
    ((void (*)(uint64_t))v17)(v18);
LABEL_12:
    v19 = *(_QWORD *)(v0 + 184);
    v20 = *(_QWORD *)(v0 + 192);
    v21 = *(_QWORD *)(v0 + 168);
    v22 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v20, v19, v21);
    v16 = 0;
  }
  else
  {
LABEL_10:
    v16 = 1;
  }
  __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 192), v16, 1, *(_QWORD *)(v0 + 168));
  OUTLINED_FUNCTION_46_0();
  v23 = OUTLINED_FUNCTION_11_26();
  v24 = *(_QWORD *)(v0 + 192);
  if ((_DWORD)v23 == 1)
  {
    OUTLINED_FUNCTION_43_16(v23, &qword_255659098);
    v25 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 176);
    v27 = *(_QWORD *)(v0 + 88);
    v28 = *(_QWORD *)(v0 + 64);
    sub_2212F4F8C();
    OUTLINED_FUNCTION_1_23(v24, *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8));
    sub_2212F4D40();
    sub_221014F5C(v27, &qword_255659080);
    v25 = sub_2212F4EF0();
    OUTLINED_FUNCTION_65_2(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_45_2();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v25);
}

uint64_t sub_2212A967C()
{
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2212A96AC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_50_11();
  v1 = *(void **)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 200);
  swift_release();
  OUTLINED_FUNCTION_1_23(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));

  OUTLINED_FUNCTION_19_33();
  OUTLINED_FUNCTION_13_13();
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_47_3();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_45_2();
  return OUTLINED_FUNCTION_14_41(MEMORY[0x24BEE4AF8], *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2212A9724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[31] = a5;
  v6[32] = a6;
  v6[30] = a4;
  v7 = sub_2212F4C08();
  v6[33] = v7;
  v6[34] = *(_QWORD *)(v7 - 8);
  v6[35] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656240);
  v6[36] = swift_task_alloc();
  v8 = sub_2212F4EA8();
  v6[37] = v8;
  v6[38] = *(_QWORD *)(v8 - 8);
  v6[39] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9D8);
  v6[40] = swift_task_alloc();
  v9 = sub_2212F51B4();
  v6[41] = v9;
  v6[42] = *(_QWORD *)(v9 - 8);
  v6[43] = swift_task_alloc();
  v6[44] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556641C0);
  v6[45] = swift_task_alloc();
  v6[46] = swift_task_alloc();
  v6[47] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656318);
  v6[48] = swift_task_alloc();
  v6[49] = swift_task_alloc();
  v10 = sub_2212F4FEC();
  v6[50] = v10;
  v6[51] = *(_QWORD *)(v10 - 8);
  v6[52] = swift_task_alloc();
  sub_2212F55F8();
  v6[53] = sub_2212F55EC();
  v6[54] = sub_2212F55D4();
  v6[55] = v11;
  return swift_task_switch();
}

uint64_t sub_2212A9900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = *(_QWORD *)(v0 + 392);
  v1 = *(_QWORD *)(v0 + 400);
  sub_2212F4E3C();
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    sub_221014F5C(*(_QWORD *)(v0 + 392), &qword_255656318);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 376);
    v4 = *(_QWORD *)(v0 + 248);
    v5 = *(_QWORD *)(v0 + 256);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 408) + 32))(*(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 392), *(_QWORD *)(v0 + 400));
    v7 = type metadata accessor for StaticProductView(0, v4, v5, v6);
    *(_QWORD *)(v0 + 448) = v7;
    *(_DWORD *)(v0 + 84) = *(_DWORD *)(v7 + 100);
    *(_QWORD *)(v0 + 456) = __swift_instantiateConcreteTypeFromMangledName(&qword_2556673C8);
    sub_2212F4764();
    v8 = OUTLINED_FUNCTION_53_12();
    LODWORD(v5) = __swift_getEnumTagSinglePayload(v3, 1, v8);
    sub_221014F5C(v3, &qword_2556641C0);
    if ((_DWORD)v5 == 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 336) + 16))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 328));
      v9 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 464) = v9;
      *v9 = v0;
      v9[1] = sub_2212A9C28;
      return sub_2212A9008();
    }
    OUTLINED_FUNCTION_71_1(*(_QWORD *)(v0 + 408));
  }
  v11 = *(_QWORD *)(v0 + 384);
  v12 = *(_QWORD *)(v0 + 336);
  v13 = *(_QWORD *)(v0 + 344);
  v14 = *(_DWORD **)(v0 + 320);
  v40 = *(_QWORD *)(v0 + 288);
  v41 = *(_QWORD *)(v0 + 272);
  v15 = *(_QWORD *)(v0 + 256);
  v42 = *(_QWORD *)(v0 + 264);
  v43 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 240);
  v16 = *(_QWORD *)(v0 + 248);
  v39 = *(_QWORD *)(v0 + 328);
  sub_2212B5E94(v14);
  v18 = type metadata accessor for PurchaseConfigurationEvent(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v18);
  v20 = type metadata accessor for StaticProductView(0, v16, v15, v19);
  *(_QWORD *)(v0 + 496) = v20;
  OUTLINED_FUNCTION_95_5(v20, (const void *)(v17 + *(int *)(v20 + 72)));
  sub_221117240((_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v13, v17, v39);
  v21 = OUTLINED_FUNCTION_61_10();
  sub_221046D0C(v21, v22, v23);
  OUTLINED_FUNCTION_61_10();
  sub_221045A98();
  v24 = OUTLINED_FUNCTION_61_10();
  sub_221046EE0(v24, v25, v26);
  sub_2212F4E90();
  OUTLINED_FUNCTION_46_0();
  sub_2212F4E3C();
  v27 = (_QWORD *)OUTLINED_FUNCTION_45_16();
  v27[2] = v16;
  v27[3] = v15;
  v27[4] = v17;
  sub_2212A6E70((void (*)(char *))sub_2212AAA40, v40);
  sub_221014F5C(v11, &qword_255656318);
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_31_19(v17 + *(int *)(v20 + 60));
  OUTLINED_FUNCTION_69_12();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 104))(v43, *MEMORY[0x24BDEA058], v42);
  v28 = (_QWORD *)OUTLINED_FUNCTION_45_16();
  *(_QWORD *)(v0 + 504) = v28;
  v28[2] = v16;
  v28[3] = v15;
  v28[4] = v17;
  OUTLINED_FUNCTION_39_17();
  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 512) = v29;
  OUTLINED_FUNCTION_90_6(v29, (uint64_t)sub_2212AA014);
  v31 = OUTLINED_FUNCTION_87_5(v30);
  return sub_221116FD0(v31, v32, v33, v34, v35, v36, v37, v38);
}

uint64_t sub_2212A9C28(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 472) = a1;
  OUTLINED_FUNCTION_284();
  return OUTLINED_FUNCTION_0_14();
}

uint64_t sub_2212A9C78()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_2212F4F68();
  *(_QWORD *)(v0 + 480) = v1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 488) = v2;
  OUTLINED_FUNCTION_60_5(v2, (uint64_t)sub_2212A9CD0);
  return sub_2212F4F74();
}

uint64_t sub_2212A9CD0(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 81) = a1;
  OUTLINED_FUNCTION_284();
  OUTLINED_FUNCTION_46_0();
  return OUTLINED_FUNCTION_3_12();
}

uint64_t sub_2212A9D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v49 = *(_BYTE *)(v0 + 81);
  v1 = *(_QWORD *)(v0 + 448);
  v51 = *(_QWORD *)(v0 + 408);
  v53 = *(_QWORD *)(v0 + 400);
  v55 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 368);
  v47 = *(_QWORD *)(v0 + 352);
  v48 = *(_QWORD *)(v0 + 472);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = OUTLINED_FUNCTION_64_11();
  sub_2210BC964(v4, v5, v6);
  OUTLINED_FUNCTION_64_11();
  sub_221045A70();
  v8 = v7;
  v10 = v9;
  v11 = OUTLINED_FUNCTION_64_11();
  sub_2210BCAC8(v11, v12, v13);
  v14 = *(_QWORD *)(v3 + *(int *)(v1 + 48));
  j__swift_retain(v14);
  sub_2210460E8();
  v16 = v15;
  j_j__swift_release(v14);
  sub_2211AB3DC(v47, v48, v49, v8, v10, v16, v2);
  OUTLINED_FUNCTION_47_16();
  sub_2212F4770();
  OUTLINED_FUNCTION_33_23();
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v55, v53);
  v17 = *(_QWORD *)(v0 + 384);
  v19 = *(_QWORD *)(v0 + 336);
  v18 = *(_QWORD *)(v0 + 344);
  v21 = *(_DWORD **)(v0 + 320);
  v20 = *(_QWORD *)(v0 + 328);
  v50 = *(_QWORD *)(v0 + 288);
  v52 = *(_QWORD *)(v0 + 272);
  v22 = *(_QWORD *)(v0 + 256);
  v54 = *(_QWORD *)(v0 + 264);
  v56 = *(_QWORD *)(v0 + 280);
  v23 = *(_QWORD *)(v0 + 240);
  v24 = *(_QWORD *)(v0 + 248);
  sub_2212B5E94(v21);
  v25 = type metadata accessor for PurchaseConfigurationEvent(0);
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v25);
  v27 = type metadata accessor for StaticProductView(0, v24, v22, v26);
  *(_QWORD *)(v0 + 496) = v27;
  OUTLINED_FUNCTION_95_5(v27, (const void *)(v23 + *(int *)(v27 + 72)));
  sub_221117240((_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v23, v20);
  v28 = OUTLINED_FUNCTION_64_1();
  sub_221046D0C(v28, v29, v30);
  OUTLINED_FUNCTION_64_1();
  sub_221045A98();
  v31 = OUTLINED_FUNCTION_64_1();
  sub_221046EE0(v31, v32, v33);
  sub_2212F4E90();
  OUTLINED_FUNCTION_46_0();
  sub_2212F4E3C();
  v34 = (_QWORD *)OUTLINED_FUNCTION_45_16();
  v34[2] = v24;
  v34[3] = v22;
  v34[4] = v23;
  sub_2212A6E70((void (*)(char *))sub_2212AAA40, v50);
  sub_221014F5C(v17, &qword_255656318);
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_31_19(v23 + *(int *)(v27 + 60));
  OUTLINED_FUNCTION_69_12();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v52 + 104))(v56, *MEMORY[0x24BDEA058], v54);
  v35 = (_QWORD *)OUTLINED_FUNCTION_45_16();
  *(_QWORD *)(v0 + 504) = v35;
  v35[2] = v24;
  v35[3] = v22;
  v35[4] = v23;
  OUTLINED_FUNCTION_39_17();
  v36 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 512) = v36;
  OUTLINED_FUNCTION_90_6(v36, (uint64_t)sub_2212AA014);
  v38 = OUTLINED_FUNCTION_87_5(v37);
  return sub_221116FD0(v38, v39, v40, v41, v42, v43, v44, v45);
}

uint64_t sub_2212AA014()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *v0;
  v10 = (*v0)[42];
  v11 = (*v0)[41];
  v12 = (*v0)[43];
  v2 = (*v0)[38];
  v3 = (*v0)[39];
  v5 = (*v0)[36];
  v4 = (*v0)[37];
  v6 = (*v0)[34];
  v7 = (*v0)[35];
  v8 = (*v0)[33];
  OUTLINED_FUNCTION_24_10();
  OUTLINED_FUNCTION_47_3();
  sub_221014FB0(v1[11]);
  sub_221014FB0(v1[13]);
  sub_221014FB0(v1[15]);
  sub_221014FB0(v1[17]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  sub_221014F5C(v5, &qword_255656240);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v11);
  return swift_task_switch();
}

uint64_t sub_2212AA100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 496);
  v2 = *(_QWORD *)(v0 + 240);
  swift_release();
  OUTLINED_FUNCTION_52_19((uint64_t *)(v2 + *(int *)(v1 + 52)));
  sub_221044F08();
  OUTLINED_FUNCTION_67_10();
  if (v1)
  {
    sub_221226FA8();
    OUTLINED_FUNCTION_95_0();
  }
  OUTLINED_FUNCTION_52_19((uint64_t *)(*(_QWORD *)(v0 + 240) + *(int *)(*(_QWORD *)(v0 + 496) + 56)));
  sub_2210464CC();
  OUTLINED_FUNCTION_67_10();
  if (v1)
  {
    sub_2212271CC();
    OUTLINED_FUNCTION_95_0();
  }
  v3 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 320);
  v5 = *(_QWORD *)(v0 + 240);
  sub_2212AA4AC(0, 0, v3);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v5 + *(int *)(v3 + 84));
  *(_QWORD *)(v0 + 232) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9B0);
  sub_2212F4770();
  sub_221014F5C(v4, &qword_25565A9D8);
  OUTLINED_FUNCTION_24_9();
  OUTLINED_FUNCTION_58_1();
  OUTLINED_FUNCTION_52_1();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_45_2();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_47_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2212AA270(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for SubscriptionOfferManager();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556641C0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticProductView(0, a1, a2, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556673C8);
  sub_2212F4764();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6))
  {
    sub_221014F5C((uint64_t)v11, &qword_2556641C0);
    v13 = sub_2212F50D0();
    __swift_storeEnumTagSinglePayload(a3, 1, 1, v13);
  }
  else
  {
    sub_221014EB4((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOfferManager);
    sub_221014F5C((uint64_t)v11, &qword_2556641C0);
    sub_2211AB5AC(a3);
    sub_221011A28((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SubscriptionOfferManager);
  }
}

uint64_t sub_2212AA3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  char v13[40];
  _BYTE v14[8];
  uint64_t v15;

  sub_2210BF00C(a1, (uint64_t)v14);
  v8 = type metadata accessor for StaticProductView(0, a3, a4, v7);
  sub_221014FC0((uint64_t)v14, (uint64_t)v13, &qword_25565A028);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9B8);
  sub_2212F4770();
  sub_221014F5C((uint64_t)v14, &qword_25565A028);
  v9 = (char *)(a2 + *(int *)(v8 + 92));
  v10 = *v9;
  v11 = *((_QWORD *)v9 + 1);
  v14[0] = v10;
  v15 = v11;
  v13[0] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255658350);
  return sub_2212F4770();
}

uint64_t sub_2212AA4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(v3 + *(int *)(a3 + 52));
  j__swift_retain(v5);
  sub_221044F08();
  v7 = v6;
  result = j_j__swift_release(v5);
  if (v7)
  {
    if (*(_BYTE *)(v7 + OBJC_IVAR____TtC17_StoreKit_SwiftUI29ProductViewEventConfiguration_isEmbeddedInStoreView) == 1)
    {
      v9 = *(_QWORD *)(v3 + *(int *)(a3 + 56));
      j__swift_retain(v9);
      sub_2210464CC();
      v11 = v10;
      j_j__swift_release(v9);
      if (v11)
      {
        j__swift_retain(v5);
        sub_221044F08();
        v13 = v12;
        j_j__swift_release(v5);
        sub_2212A6FDC(v13);
        swift_release();
        swift_release();
      }
    }
    else
    {
      j__swift_retain(v5);
      sub_221044F08();
      v15 = v14;
      j_j__swift_release(v5);
      if (v15)
      {
        sub_2212A7478();
        swift_release();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_2212AA634()
{
  return swift_deallocObject();
}

uint64_t sub_2212AA650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  OUTLINED_FUNCTION_82_8(a1, a2, a3, a4);
  v10 = v4 + ((v9 + 32) & ~v9);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_221156380;
  return sub_2212A884C(a1, v10, v7, v8);
}

uint64_t sub_2212AA6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2212AA858((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2212A8AD8, a2, a3, a4);
}

uint64_t sub_2212AA6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_25_30(a1, a2, a3, a4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v6;
  v7 = OUTLINED_FUNCTION_60_5(v6, (uint64_t)sub_221156380);
  return sub_2212A8B58(v7, v8, v4);
}

uint64_t objectdestroy_25Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_81_7(v4, v5, *(_QWORD *)(v0 + 24), v6);
  v7 = OUTLINED_FUNCTION_72_6();
  OUTLINED_FUNCTION_30_26(v7);
  OUTLINED_FUNCTION_28_28();
  OUTLINED_FUNCTION_23_25();
  v8 = OUTLINED_FUNCTION_0_69();
  if (!OUTLINED_FUNCTION_41_11(v8))
    OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556673C0);
  OUTLINED_FUNCTION_85_7();
  OUTLINED_FUNCTION_59_14();
  swift_release();
  if (*(_QWORD *)(v2 + *(int *)(v1 + 88) + 24))
    __swift_destroy_boxed_opaque_existential_1(v2 + *(int *)(v1 + 88));
  swift_release();
  OUTLINED_FUNCTION_22_24();
  OUTLINED_FUNCTION_22_24();
  v9 = v2 + *(int *)(v1 + 100);
  v10 = OUTLINED_FUNCTION_53_12();
  if (!OUTLINED_FUNCTION_51_5(v10))
  {
    OUTLINED_FUNCTION_78_9();
    v11 = OUTLINED_FUNCTION_56_7();
    OUTLINED_FUNCTION_16_0(v11);
    OUTLINED_FUNCTION_88_8();
    if (*(_QWORD *)(v9 + *(int *)(v2 + 32)))
    {
      swift_release();
      swift_release();
    }
    OUTLINED_FUNCTION_55_11();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556673C8);
  OUTLINED_FUNCTION_55_11();
  return OUTLINED_FUNCTION_39_5();
}

uint64_t sub_2212AA84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2212AA858((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2212A79B4, a2, a3, a4);
}

uint64_t sub_2212AA858(uint64_t (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_25_30((uint64_t)a1, a2, a3, a4);
  return a1(v5 + v7, v4, v6);
}

uint64_t sub_2212AA898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_81_7(v4, v5, *(_QWORD *)(v0 + 40), v6);
  swift_unknownObjectRelease();
  v7 = OUTLINED_FUNCTION_72_6();
  OUTLINED_FUNCTION_30_26(v7);
  OUTLINED_FUNCTION_28_28();
  OUTLINED_FUNCTION_23_25();
  v8 = OUTLINED_FUNCTION_0_69();
  if (!OUTLINED_FUNCTION_41_11(v8))
    OUTLINED_FUNCTION_31_8(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556673C0);
  OUTLINED_FUNCTION_85_7();
  OUTLINED_FUNCTION_59_14();
  swift_release();
  if (*(_QWORD *)(v2 + *(int *)(v1 + 88) + 24))
    __swift_destroy_boxed_opaque_existential_1(v2 + *(int *)(v1 + 88));
  swift_release();
  OUTLINED_FUNCTION_22_24();
  OUTLINED_FUNCTION_22_24();
  v9 = v2 + *(int *)(v1 + 100);
  v10 = OUTLINED_FUNCTION_53_12();
  if (!OUTLINED_FUNCTION_51_5(v10))
  {
    OUTLINED_FUNCTION_78_9();
    v11 = OUTLINED_FUNCTION_56_7();
    OUTLINED_FUNCTION_16_0(v11);
    OUTLINED_FUNCTION_88_8();
    if (*(_QWORD *)(v9 + *(int *)(v2 + 32)))
    {
      swift_release();
      swift_release();
    }
    OUTLINED_FUNCTION_55_11();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556673C8);
  OUTLINED_FUNCTION_55_11();
  return OUTLINED_FUNCTION_39_5();
}

uint64_t sub_2212AA9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  OUTLINED_FUNCTION_82_8(a1, a2, a3, a4);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_22111F290;
  return sub_2212A9724(a1, v10, v11, v12, v7, v8);
}

void sub_2212AAA40(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2212AA270(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_2212AAA60(uint64_t a1)
{
  uint64_t *v1;

  return sub_2212AA3DC(a1, v1[4], v1[2], v1[3]);
}

void sub_2212AAA74()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_74_12();
  OUTLINED_FUNCTION_6_0();
}

void sub_2212AAA94()
{
  uint64_t *v0;

  *v0 = OUTLINED_FUNCTION_76_11();
  OUTLINED_FUNCTION_6_0();
}

void sub_2212AAABC()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_75_10() & 1;
  OUTLINED_FUNCTION_6_0();
}

void sub_2212AAADC()
{
  OUTLINED_FUNCTION_71_9();
  OUTLINED_FUNCTION_6_0();
}

unint64_t sub_2212AAB24()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255667418;
  if (!qword_255667418)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556673B0);
    v2 = sub_2212AABA8();
    sub_221024548(qword_255667450, &qword_2556673E8);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255667418);
  }
  return result;
}

unint64_t sub_2212AABA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255667420;
  if (!qword_255667420)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556673A8);
    v2[0] = sub_2212AAC14();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255667420);
  }
  return result;
}

unint64_t sub_2212AAC14()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255667428;
  if (!qword_255667428)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556673A0);
    v2 = sub_2212AAC98();
    sub_221024548(&qword_255659028, &qword_255658FD8);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255667428);
  }
  return result;
}

unint64_t sub_2212AAC98()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255667430;
  if (!qword_255667430)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255667398);
    v2 = sub_2212AAD1C();
    sub_221023FE4(&qword_255659C08, (void (*)(uint64_t))type metadata accessor for CurrentEntitlementViewModifier);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255667430);
  }
  return result;
}

unint64_t sub_2212AAD1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255667438;
  if (!qword_255667438)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A9E8);
    v2[0] = sub_2212AAD88();
    v2[1] = sub_2210BF590();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255667438);
  }
  return result;
}

unint64_t sub_2212AAD88()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255667440;
  if (!qword_255667440)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A9F0);
    v2 = sub_2212AAE0C();
    sub_221023FE4(&qword_255656B18, (void (*)(uint64_t))type metadata accessor for DisabledWhenInAppPurchaseIsDisabledModifier);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255667440);
  }
  return result;
}

unint64_t sub_2212AAE0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  _QWORD v8[6];

  result = qword_255667448;
  if (!qword_255667448)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255667390);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A980);
    v3 = type metadata accessor for InAppStoreButtonStyle();
    sub_221023FE4(&qword_255657170, (void (*)(uint64_t))type metadata accessor for InAppStoreButtonStyle);
    v5 = v4;
    v8[2] = v2;
    v8[3] = v3;
    v8[4] = swift_getOpaqueTypeConformance2();
    v8[5] = v5;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_221024548(&qword_255656B08, &qword_255656B10);
    v8[0] = OpaqueTypeConformance2;
    v8[1] = v7;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v8);
    atomic_store(result, (unint64_t *)&qword_255667448);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_69()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;

  j_j__swift_release(*(_QWORD *)(v1 + v0[12]));
  j_j__swift_release(*(_QWORD *)(v1 + v0[13]));
  j_j__swift_release(*(_QWORD *)(v1 + v0[14]));
  sub_221047104(*(_QWORD *)(v1 + v0[15]), *(unsigned __int8 *)(v1 + v0[15] + 8));
  sub_221047104(*(_QWORD *)(v1 + v0[16]), *(unsigned __int8 *)(v1 + v0[16] + 8));
  sub_2210BCAC8(*(_QWORD *)(v1 + v0[17]), *(_QWORD *)(v1 + v0[17] + 8), *(_BYTE *)(v1 + v0[17] + 16));
  v2 = v1 + v0[18];
  j_j__swift_release(*(_QWORD *)v2);
  j_j__swift_release(*(_QWORD *)(v2 + 16));
  j_j__swift_release(*(_QWORD *)(v2 + 32));
  sub_2210BCAC8(*(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64));
  sub_221046EE0(*(_QWORD *)(v1 + v0[19]), *(_QWORD *)(v1 + v0[19] + 8), *(_BYTE *)(v1 + v0[19] + 16));
  return sub_2212F2AF0();
}

void OUTLINED_FUNCTION_7_54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  char *v4;
  char v5;
  uint64_t v6;

  v4 = (char *)(v2 + *(int *)(v1 + 96));
  v5 = *v4;
  v6 = *((_QWORD *)v4 + 1);
  *(_BYTE *)(v0 + 56) = v5;
  *(_QWORD *)(v0 + 64) = v6;
  *(_BYTE *)(v0 + 34) = v3 > 0.0;
}

uint64_t OUTLINED_FUNCTION_11_52()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_14_41(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

double OUTLINED_FUNCTION_18_38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = v1 + *(int *)(v0 + 36);
  result = 0.0;
  *(_OWORD *)(v2 + 73) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)v2 = 0u;
  *(_BYTE *)(v2 + 89) = 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_19_33()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_22_24()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_23_25()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *(int *)(v0 + 44);
  return sub_221046E30(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
}

uint64_t OUTLINED_FUNCTION_24_24()
{
  return sub_2212F2AD8();
}

uint64_t OUTLINED_FUNCTION_25_30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for StaticProductView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t OUTLINED_FUNCTION_28_28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1 + *(int *)(v0 + 36), v2);
}

uint64_t OUTLINED_FUNCTION_30_26(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

void OUTLINED_FUNCTION_31_19(uint64_t a1@<X8>)
{
  sub_221017C08(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_22104359C();
}

void OUTLINED_FUNCTION_33_23()
{
  uint64_t *v0;
  uint64_t v1;

  sub_221014F5C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_36_25()
{
  return 0;
}

double OUTLINED_FUNCTION_39_17()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 168) = 0u;
  *(_BYTE *)(v0 + 200) = 0;
  *(_OWORD *)(v0 + 152) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_41_11(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

void OUTLINED_FUNCTION_43_16(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_221014F5C(v2, a2);
}

uint64_t OUTLINED_FUNCTION_44_17()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_45_16()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_46_18(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void OUTLINED_FUNCTION_47_16()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_221014FC0(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_52_19@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  v1 = *a1;
  j__swift_retain(*a1, *((unsigned __int8 *)a1 + 8));
  return v1;
}

uint64_t OUTLINED_FUNCTION_53_12()
{
  return type metadata accessor for SubscriptionOfferManager();
}

uint64_t OUTLINED_FUNCTION_55_11()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_56_7()
{
  return sub_2212F4FEC();
}

uint64_t OUTLINED_FUNCTION_58_13(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)v1 = result;
  *(_BYTE *)(v1 + 8) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_59_14()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_61_10()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_64_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_67_10()
{
  uint64_t v0;
  uint64_t v1;

  return j_j__swift_release(v0, v1);
}

uint64_t OUTLINED_FUNCTION_69_12()
{
  uint64_t v0;
  uint64_t v1;

  return sub_221047104(v1, v0);
}

uint64_t OUTLINED_FUNCTION_70_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 344))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_71_9()
{
  return sub_2211E74B0();
}

uint64_t OUTLINED_FUNCTION_72_6()
{
  return sub_2212F51B4();
}

void OUTLINED_FUNCTION_73_10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_221014FC0(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_74_12()
{
  return sub_221079054();
}

uint64_t OUTLINED_FUNCTION_75_10()
{
  return sub_2211E7478();
}

uint64_t OUTLINED_FUNCTION_76_11()
{
  return sub_22122EED0();
}

void OUTLINED_FUNCTION_77_7()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_221011A28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_78_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_79_7()
{
  return sub_2212F2ACC();
}

uint64_t OUTLINED_FUNCTION_80_8()
{
  return sub_2212F5520();
}

uint64_t OUTLINED_FUNCTION_81_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for StaticProductView(0, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_82_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for StaticProductView(0, v4, v5, a4);
}

uint64_t OUTLINED_FUNCTION_83_4()
{
  return sub_22106F9EC();
}

uint64_t OUTLINED_FUNCTION_85_7()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_87_5@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_88_8()
{
  return swift_bridgeObjectRelease();
}

_QWORD *OUTLINED_FUNCTION_90_6@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_94_5()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_95_5(uint64_t a1, const void *a2)
{
  void *v2;

  return memcpy(v2, a2, 0x41uLL);
}

uint64_t OUTLINED_FUNCTION_100_7(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  *(_BYTE *)(v1 + 24) = 0;
  return result;
}

_OWORD *sub_2212AB3F4(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _OWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  void **v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  if (*a2)
  {
    v7 = a2[1];
    *(_QWORD *)v4 = *a2;
    *((_QWORD *)v4 + 1) = v7;
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
  }
  *((_BYTE *)v4 + 16) = *((_BYTE *)a2 + 16);
  v9 = (int *)type metadata accessor for ProductViewStyleConfiguration();
  v10 = v9[6];
  v11 = (_QWORD *)((char *)v4 + v10);
  v12 = (void **)((char *)a2 + v10);
  v13 = type metadata accessor for Product.TaskState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v17 = sub_2212F51B4();
    (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v11, v12, v17);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      goto LABEL_12;
    }
    v15 = *v12;
    v16 = v15;
    *v11 = v15;
  }
  swift_storeEnumTagMultiPayload();
LABEL_12:
  *(_QWORD *)((char *)v4 + v9[7]) = *(uint64_t *)((char *)a2 + v9[7]);
  *((_BYTE *)v4 + v9[8]) = *((_BYTE *)a2 + v9[8]);
  *((_BYTE *)v4 + v9[9]) = *((_BYTE *)a2 + v9[9]);
  v18 = *(int *)(a3 + 20);
  v19 = (_QWORD *)((char *)v4 + v18);
  v20 = (uint64_t *)((char *)a2 + v18);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_2212F33F0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return v4;
}

uint64_t sub_2212AB5D0(_QWORD *a1, uint64_t a2)
{
  id *v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  if (*a1)
    swift_release();
  v4 = (id *)((char *)a1 + *(int *)(type metadata accessor for ProductViewStyleConfiguration() + 24));
  type metadata accessor for Product.TaskState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v6 = sub_2212F51B4();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else if (!EnumCaseMultiPayload)
  {

  }
  swift_release();
  v7 = (char *)a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v8 = sub_2212F33F0();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_2212AB6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  void **v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  if (*(_QWORD *)a2)
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (int *)type metadata accessor for ProductViewStyleConfiguration();
  v8 = v7[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (void **)(a2 + v8);
  v11 = type metadata accessor for Product.TaskState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v15 = sub_2212F51B4();
    (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    v13 = *v10;
    v14 = v13;
    *v9 = v13;
LABEL_8:
    swift_storeEnumTagMultiPayload();
    goto LABEL_10;
  }
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_10:
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v16 = *(int *)(a3 + 20);
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_2212F33F0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_2212AB86C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  void **v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v6 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v9 = type metadata accessor for ProductViewStyleConfiguration();
  v10 = (int *)v9;
  if ((uint64_t *)a1 == a2)
    goto LABEL_15;
  v11 = *(int *)(v9 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (void **)((char *)a2 + v11);
  sub_22112FFAC(a1 + v11);
  v14 = type metadata accessor for Product.TaskState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v18 = sub_2212F51B4();
    (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, v13, v18);
    goto LABEL_13;
  }
  if (!EnumCaseMultiPayload)
  {
    v16 = *v13;
    v17 = v16;
    *v12 = v16;
LABEL_13:
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_15:
  *(_QWORD *)(a1 + v10[7]) = *(uint64_t *)((char *)a2 + v10[7]);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + v10[8]) = *((_BYTE *)a2 + v10[8]);
  *(_BYTE *)(a1 + v10[9]) = *((_BYTE *)a2 + v10[9]);
  if ((uint64_t *)a1 != a2)
  {
    v19 = *(int *)(a3 + 20);
    v20 = (_QWORD *)(a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    sub_22101763C(a1 + v19, &qword_255656568);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_2212F33F0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2212ABA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;

  if (*(_QWORD *)a2)
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (int *)type metadata accessor for ProductViewStyleConfiguration();
  v8 = v7[6];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = type metadata accessor for Product.TaskState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_2212F51B4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  *(_QWORD *)(a1 + v7[7]) = *(_QWORD *)(a2 + v7[7]);
  *(_BYTE *)(a1 + v7[8]) = *(_BYTE *)(a2 + v7[8]);
  *(_BYTE *)(a1 + v7[9]) = *(_BYTE *)(a2 + v7[9]);
  v13 = *(int *)(a3 + 20);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_2212F33F0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2212ABBF8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v9 = type metadata accessor for ProductViewStyleConfiguration();
  v10 = (int *)v9;
  if ((uint64_t *)a1 != a2)
  {
    v11 = *(int *)(v9 + 24);
    v12 = (void *)(a1 + v11);
    v13 = (char *)a2 + v11;
    sub_22112FFAC(a1 + v11);
    v14 = type metadata accessor for Product.TaskState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_2212F51B4();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  *(_QWORD *)(a1 + v10[7]) = *(uint64_t *)((char *)a2 + v10[7]);
  swift_release();
  *(_BYTE *)(a1 + v10[8]) = *((_BYTE *)a2 + v10[8]);
  *(_BYTE *)(a1 + v10[9]) = *((_BYTE *)a2 + v10[9]);
  if ((uint64_t *)a1 != a2)
  {
    v16 = *(int *)(a3 + 20);
    v17 = (void *)(a1 + v16);
    v18 = (char *)a2 + v16;
    sub_22101763C(a1 + v16, &qword_255656568);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656568);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_2212F33F0();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2212ABDD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212ABDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_1_52();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656F80);
    v8 = v4 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, v3, v7);
}

uint64_t sub_2212ABE3C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212ABE48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_1_52();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656F80);
    v10 = v5 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

uint64_t type metadata accessor for ConfigureProductViewEnvironmentViewModifier()
{
  uint64_t result;

  result = qword_2556674B0;
  if (!qword_2556674B0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2212ABEE8()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for ProductViewStyleConfiguration();
  if (v0 <= 0x3F)
  {
    sub_2210DF8A8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_2212ABF6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2212ABF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v33 = a1;
  v39 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657180);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_2212F33F0();
  v38 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657A88);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556674F0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556674F8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255667500);
  v35 = *(_QWORD *)(v15 - 8);
  v36 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v34 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2212ADB78();
  KeyPath = swift_getKeyPath();
  v19 = swift_allocObject();
  *(_BYTE *)(v19 + 16) = v17 & 1;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255667508);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v11, v33, v20);
  v21 = *(int *)(v9 + 36);
  v22 = v32;
  v23 = (uint64_t *)&v11[v21];
  *v23 = KeyPath;
  v23[1] = (uint64_t)sub_2210255C4;
  v23[2] = v19;
  v24 = swift_getKeyPath();
  type metadata accessor for ConfigureProductViewEnvironmentViewModifier();
  sub_221045C04();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v22);
  v25 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255667510);
  sub_22102EDB4((uint64_t)v8, (uint64_t)v25 + *(int *)(v26 + 28), &qword_255657A88);
  *v25 = v24;
  sub_22102EDB4((uint64_t)v11, (uint64_t)v14, &qword_2556674F0);
  sub_22101763C((uint64_t)v8, &qword_255657A88);
  sub_22101763C((uint64_t)v11, &qword_2556674F0);
  ProductViewStyleConfiguration.product.getter((uint64_t)v4);
  v27 = sub_2212F51B4();
  LODWORD(v8) = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v27);
  sub_22101763C((uint64_t)v4, &qword_255657180);
  if ((_DWORD)v8 == 1)
  {
    v28 = v37;
    sub_2212F33E4();
  }
  else
  {
    v40 = MEMORY[0x24BEE4AF8];
    sub_2212AC7B4(&qword_255657D38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255657D40);
    sub_221024548(&qword_255657D48, &qword_255657D40);
    v28 = v37;
    sub_2212F58E0();
  }
  sub_2212AC5C4();
  v29 = v34;
  sub_2212F4524();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v22);
  sub_22101763C((uint64_t)v14, &qword_2556674F8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 32))(v39, v29, v36);
}

uint64_t sub_2212AC368()
{
  sub_2212AC43C();
  return sub_2212F3798();
}

void sub_2212AC39C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657A88);
  MEMORY[0x24BDAC7A8](v2);
  sub_22102EDB4(a1, (uint64_t)&v4 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_255657A88);
  sub_2212AC43C();
  sub_2212F37A4();
  sub_22101763C(a1, &qword_255657A88);
}

unint64_t sub_2212AC43C()
{
  unint64_t result;

  result = qword_2556674E8;
  if (!qword_2556674E8)
  {
    result = MEMORY[0x22766BAC4](&unk_2213180DC, &_s27AncestorRedactionReasonsKeyVN);
    atomic_store(result, (unint64_t *)&qword_2556674E8);
  }
  return result;
}

uint64_t sub_2212AC478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657A88);
  __swift_allocate_value_buffer(v0, qword_25568D180);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_25568D180);
  v2 = sub_2212F33F0();
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
}

uint64_t sub_2212AC4D8()
{
  uint64_t v0;

  if (qword_255655DC0 != -1)
    swift_once();
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657A88);
  return __swift_project_value_buffer(v0, (uint64_t)qword_25568D180);
}

void sub_2212AC524(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_2212AC4D8();
  sub_22102EDB4(v2, a1, &qword_255657A88);
}

uint64_t sub_2212AC554()
{
  sub_2212AC740();
  return sub_2212F3138();
}

uint64_t sub_2212AC5AC()
{
  return swift_deallocObject();
}

unint64_t sub_2212AC5C4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255667518;
  if (!qword_255667518)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556674F8);
    v2 = sub_2212AC648();
    sub_221024548(&qword_255667530, &qword_255667510);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255667518);
  }
  return result;
}

unint64_t sub_2212AC648()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255667520;
  if (!qword_255667520)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556674F0);
    sub_221024548(&qword_255667528, &qword_255667508);
    v3 = v2;
    sub_221024548(&qword_255656B08, &qword_255656B10);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255667520);
  }
  return result;
}

ValueMetadata *_s27AncestorRedactionReasonsKeyVMa()
{
  return &_s27AncestorRedactionReasonsKeyVN;
}

uint64_t sub_2212AC6F4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556674F8);
  sub_2212AC5C4();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2212AC740()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255667538;
  if (!qword_255667538)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657A88);
    sub_2212AC7B4(qword_255667540);
    v3 = v2;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BEE4AB8], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_255667538);
  }
  return result;
}

void sub_2212AC7B4(_QWORD *a1)
{
  if (!*a1)
  {
    sub_2212F33F0();
    OUTLINED_FUNCTION_35_0();
  }
  OUTLINED_FUNCTION_6_0();
}

void sub_2212AC7E8()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_4_46();
  OUTLINED_FUNCTION_6_0();
}

void sub_2212AC804()
{
  OUTLINED_FUNCTION_3_54();
  OUTLINED_FUNCTION_6_0();
}

uint64_t StoreButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;

  v2 = (int *)type metadata accessor for InAppStoreButtonStyle();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_13_0();
  v5 = v4 - v3;
  v6 = sub_2212F3E7C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_13_0();
  v10 = v9 - v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657AC8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_13_0();
  v15 = v14 - v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  sub_2212F47A0();
  *(_QWORD *)v5 = swift_getKeyPath();
  *(_BYTE *)(v5 + 8) = 0;
  *(_QWORD *)(v5 + 16) = swift_getKeyPath();
  *(_BYTE *)(v5 + 24) = 0;
  v16 = (uint64_t *)(v5 + v2[6]);
  *v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(qword_255656688);
  OUTLINED_FUNCTION_2_6();
  v17 = (uint64_t *)(v5 + v2[7]);
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
  OUTLINED_FUNCTION_2_6();
  v18 = (uint64_t *)(v5 + v2[8]);
  *v18 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657138);
  OUTLINED_FUNCTION_2_6();
  v19 = v5 + v2[9];
  *(_OWORD *)(v19 + 73) = 0u;
  *(_OWORD *)(v19 + 48) = 0u;
  *(_OWORD *)(v19 + 64) = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(_OWORD *)(v19 + 32) = 0u;
  *(_OWORD *)v19 = 0u;
  *(_BYTE *)(v19 + 89) = 1;
  sub_22104788C();
  sub_221036D08();
  sub_2212F4188();
  sub_22121DFB8(v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
}

void sub_2212ACA20()
{
  _BYTE *v0;

  *v0 = OUTLINED_FUNCTION_4_46();
  OUTLINED_FUNCTION_6_0();
}

void sub_2212ACA3C()
{
  OUTLINED_FUNCTION_3_54();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2212ACA70(uint64_t a1)
{
  return StoreButtonStyle.makeBody(configuration:)(a1);
}

uint64_t sub_2212ACA88()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for StoreButtonStyle()
{
  return &type metadata for StoreButtonStyle;
}

uint64_t sub_2212ACAA8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657AC8);
  type metadata accessor for InAppStoreButtonStyle();
  sub_22104788C();
  sub_221036D08();
  return swift_getOpaqueTypeConformance2();
}

uint64_t OUTLINED_FUNCTION_3_54()
{
  return sub_22121D9B0();
}

uint64_t OUTLINED_FUNCTION_4_46()
{
  return sub_22121D978();
}

_QWORD *sub_2212ACB2C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  int *v23;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    v8 = *(int *)(a3 + 20);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_WORD *)(a1 + v8) = *(_WORD *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for ProductViewBaseEvent(0);
    v12 = v11[6];
    v13 = (void *)(v9 + v12);
    v14 = (const void *)(v10 + v12);
    v15 = sub_2212F4E00();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
    *(_BYTE *)(v9 + v11[8]) = *(_BYTE *)(v10 + v11[8]);
    *(_BYTE *)(v9 + v11[9]) = *(_BYTE *)(v10 + v11[9]);
    *(_BYTE *)(v9 + v11[10]) = *(_BYTE *)(v10 + v11[10]);
    v18 = *(int *)(a3 + 24);
    v19 = (char *)v4 + v18;
    v20 = (uint64_t)a2 + v18;
    v21 = sub_2212F2AF0();
    v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    v22(v19, v20, v21);
    v23 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
    v22(&v19[v23[5]], v20 + v23[5], v21);
    v19[v23[6]] = *(_BYTE *)(v20 + v23[6]);
    v19[v23[7]] = *(_BYTE *)(v20 + v23[7]);
  }
  return v4;
}

uint64_t sub_2212ACCF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = v4 + *(int *)(type metadata accessor for ProductViewBaseEvent(0) + 24);
  v6 = sub_2212F4E00();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_2212F2AF0();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v11(v7, v8);
  v9 = v7 + *(int *)(type metadata accessor for MintDisappearBaseEvent(0) + 20);
  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v8);
}

uint64_t sub_2212ACDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  int *v21;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v11 = v10[6];
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_2212F4E00();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  *(_BYTE *)(v8 + v10[7]) = *(_BYTE *)(v9 + v10[7]);
  *(_BYTE *)(v8 + v10[8]) = *(_BYTE *)(v9 + v10[8]);
  *(_BYTE *)(v8 + v10[9]) = *(_BYTE *)(v9 + v10[9]);
  *(_BYTE *)(v8 + v10[10]) = *(_BYTE *)(v9 + v10[10]);
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_2212F2AF0();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v20(v17, v18, v19);
  v21 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
  v20(v17 + v21[5], v18 + v21[5], v19);
  *(_BYTE *)(v17 + v21[6]) = *(_BYTE *)(v18 + v21[6]);
  *(_BYTE *)(v17 + v21[7]) = *(_BYTE *)(v18 + v21[7]);
  return a1;
}

uint64_t sub_2212ACF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  const void *v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  int *v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v6 = *(int *)(a3 + 20);
  v7 = (_BYTE *)(a1 + v6);
  v8 = a2 + v6;
  *v7 = *(_BYTE *)(a2 + v6);
  v7[1] = *(_BYTE *)(a2 + v6 + 1);
  v9 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = (const void *)(v8 + v10);
  v13 = sub_2212F4E00();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    v16 = *(_QWORD *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(_BYTE *, const void *, uint64_t))(v16 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_7:
  v7[v9[7]] = *(_BYTE *)(v8 + v9[7]);
  v7[v9[8]] = *(_BYTE *)(v8 + v9[8]);
  v7[v9[9]] = *(_BYTE *)(v8 + v9[9]);
  v7[v9[10]] = *(_BYTE *)(v8 + v9[10]);
  v18 = *(int *)(a3 + 24);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_2212F2AF0();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24);
  v22(v19, v20, v21);
  v23 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
  v22(v19 + v23[5], v20 + v23[5], v21);
  *(_BYTE *)(v19 + v23[6]) = *(_BYTE *)(v20 + v23[6]);
  *(_BYTE *)(v19 + v23[7]) = *(_BYTE *)(v20 + v23[7]);
  return a1;
}

uint64_t sub_2212AD160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  int *v20;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_WORD *)(a1 + v6) = *(_WORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v10 = v9[6];
  v11 = (void *)(v7 + v10);
  v12 = (const void *)(v8 + v10);
  v13 = sub_2212F4E00();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  *(_BYTE *)(v7 + v9[7]) = *(_BYTE *)(v8 + v9[7]);
  *(_BYTE *)(v7 + v9[8]) = *(_BYTE *)(v8 + v9[8]);
  *(_BYTE *)(v7 + v9[9]) = *(_BYTE *)(v8 + v9[9]);
  *(_BYTE *)(v7 + v9[10]) = *(_BYTE *)(v8 + v9[10]);
  v15 = *(int *)(a3 + 24);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_2212F2AF0();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v20 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
  v19(v16 + v20[5], v17 + v20[5], v18);
  *(_BYTE *)(v16 + v20[6]) = *(_BYTE *)(v17 + v20[6]);
  *(_BYTE *)(v16 + v20[7]) = *(_BYTE *)(v17 + v20[7]);
  return a1;
}

uint64_t sub_2212AD2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  int *v24;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v11 = v10[6];
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_2212F4E00();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!EnumTagSinglePayload)
  {
    v17 = *(_QWORD *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
LABEL_7:
  *(_BYTE *)(v8 + v10[7]) = *(_BYTE *)(v9 + v10[7]);
  *(_BYTE *)(v8 + v10[8]) = *(_BYTE *)(v9 + v10[8]);
  *(_BYTE *)(v8 + v10[9]) = *(_BYTE *)(v9 + v10[9]);
  *(_BYTE *)(v8 + v10[10]) = *(_BYTE *)(v9 + v10[10]);
  v19 = *(int *)(a3 + 24);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_2212F2AF0();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40);
  v23(v20, v21, v22);
  v24 = (int *)type metadata accessor for MintDisappearBaseEvent(0);
  v23(v20 + v24[5], v21 + v24[5], v22);
  *(_BYTE *)(v20 + v24[6]) = *(_BYTE *)(v21 + v24[6]);
  *(_BYTE *)(v20 + v24[7]) = *(_BYTE *)(v21 + v24[7]);
  return a1;
}

uint64_t sub_2212AD4D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212AD4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ProductViewBaseEvent(0);
    if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
    {
      v10 = v9;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for MintDisappearBaseEvent(0);
      v11 = *(int *)(a3 + 24);
    }
    return __swift_getEnumTagSinglePayload(a1 + v11, a2, v10);
  }
}

uint64_t sub_2212AD580()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212AD58C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = type metadata accessor for ProductViewBaseEvent(0);
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = type metadata accessor for MintDisappearBaseEvent(0);
      v10 = *(int *)(a4 + 24);
    }
    return __swift_storeEnumTagSinglePayload(v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ProductViewDisappearEvent()
{
  uint64_t result;

  result = qword_2556675A0;
  if (!qword_2556675A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2212AD658()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ProductViewBaseEvent(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MintDisappearBaseEvent(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void ProductViewStyleConfiguration.product.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;

  type metadata accessor for Product.TaskState(0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_13_0();
  v6 = v5 - v4;
  v7 = OUTLINED_FUNCTION_26_20();
  sub_22105EAF4(v1 + *(int *)(v7 + 24), v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v9 = sub_2212F51B4();
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, v6, v9);
    OUTLINED_FUNCTION_142(a1, 0);
  }
  else
  {
    OUTLINED_FUNCTION_142(a1, 1);
    sub_22112FFAC(v6);
  }
  OUTLINED_FUNCTION_17_0();
}

uint64_t type metadata accessor for ProductViewStyleConfiguration()
{
  uint64_t result;

  result = qword_255667660;
  if (!qword_255667660)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2212AD7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_13_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8 - v7, a1, a2);
  v9 = sub_2212F4854();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *a3 = v9;
  return result;
}

void sub_2212AD878(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W3>, int a4@<W5>, int a5@<W6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _BYTE v23[4];
  int v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;

  v26 = a4;
  v27 = a5;
  v24 = a3;
  v11 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  v16 = &v23[-v15];
  *(_QWORD *)a7 = v17;
  *(_QWORD *)(a7 + 8) = v18;
  v19 = (int *)OUTLINED_FUNCTION_26_20();
  v20 = a7 + v19[6];
  v25 = a2;
  sub_22105EAF4(a2, v20);
  *(_BYTE *)(a7 + v19[8]) = v24;
  OUTLINED_FUNCTION_12_47((uint64_t)v16);
  sub_221014FA0(a1);
  if ((swift_dynamicCast() & 1) != 0)
  {
    OUTLINED_FUNCTION_9_51();
    v21 = v28;
    OUTLINED_FUNCTION_0_70(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    sub_22112FFAC(v25);
    *(_QWORD *)(a7 + v19[7]) = v21;
  }
  else
  {
    OUTLINED_FUNCTION_12_47((uint64_t)v13);
    sub_2212AD7DC((uint64_t)v13, a6, &v28);
    OUTLINED_FUNCTION_9_51();
    OUTLINED_FUNCTION_0_70(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    sub_22112FFAC(v25);
    *(_QWORD *)(a7 + v19[7]) = v28;
  }
  v22 = v27;
  *(_BYTE *)(a7 + 16) = v26 & 1;
  *(_BYTE *)(a7 + v19[9]) = v22;
  OUTLINED_FUNCTION_19();
}

void View.productViewStyle<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  double v19;
  uint64_t v20;

  v20 = a4;
  v10 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_22_16();
  v14 = type metadata accessor for ProductViewStyleModifier(0, v11, v13, v12);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v20 - v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 16))(v5, a1, a3, v16);
  v19 = sub_2212ADF6C(v5, a3, a5, (uint64_t)v18);
  MEMORY[0x227669B20](v18, a2, v14, v20, v19);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  OUTLINED_FUNCTION_19();
}

uint64_t type metadata accessor for ProductViewStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ProductViewStyleModifier);
}

double sub_2212ADAE4@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  sub_2212AEF50();
  sub_2212F3798();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_2212ADB34()
{
  sub_2212AEF50();
  return sub_2212F37A4();
}

uint64_t sub_2212ADB78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  char v22;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_2212F4E00();
  v24 = *(_QWORD *)(v2 - 8);
  v25 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - v6;
  type metadata accessor for Product.TaskState(0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_22_16();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657180);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_13_0();
  v12 = v11 - v10;
  v13 = sub_2212F51B4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_13_0();
  v17 = v16 - v15;
  v18 = OUTLINED_FUNCTION_26_20();
  sub_22105EAF4((uint64_t)v0 + *(int *)(v18 + 24), v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v12, v1, v13);
    OUTLINED_FUNCTION_133_0(v12, 0);
  }
  else
  {
    OUTLINED_FUNCTION_133_0(v12, 1);
    sub_22112FFAC(v1);
  }
  if (__swift_getEnumTagSinglePayload(v12, 1, v13) == 1)
  {
    sub_22105EB38(v12);
LABEL_10:
    v22 = 1;
    return v22 & 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v17, v12, v13);
  if (!*v0)
  {
    OUTLINED_FUNCTION_0_70(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    goto LABEL_10;
  }
  if ((*((_BYTE *)v0 + *(int *)(v18 + 32)) & 1) != 0)
  {
    sub_2212F513C();
    sub_2212F4DD0();
    sub_22103CD4C();
    v19 = v25;
    v20 = sub_2212F52D4();
    v21 = *(void (**)(char *, uint64_t))(v24 + 8);
    v21(v4, v19);
    v21(v7, v19);
    OUTLINED_FUNCTION_0_70(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    v22 = v20 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_0_70(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    v22 = 0;
  }
  return v22 & 1;
}

uint64_t ProductViewStyleConfiguration.Icon.body.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t ProductViewStyleConfiguration.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_26_20() + 24);
  return sub_22105EAF4(v3, a1);
}

uint64_t ProductViewStyleConfiguration.icon.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_26_20() + 28));
  return swift_retain();
}

uint64_t ProductViewStyleConfiguration.hasCurrentEntitlement.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_26_20() + 32));
}

uint64_t ProductViewStyleConfiguration.descriptionVisibility.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_26_20() + 36));
}

Swift::Void __swiftcall ProductViewStyleConfiguration.purchase()()
{
  void (**v0)(void);

  if (*v0)
    (*v0)();
}

double sub_2212ADE84()
{
  unint64_t v0;
  uint64_t v1;
  double result;

  v0 = sub_2212AF050();
  v1 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_QWORD *)(v1 + 48) = 0;
  qword_2556675E0 = (uint64_t)sub_2212AF04C;
  *(_QWORD *)algn_2556675E8 = 0;
  qword_2556675F0 = (uint64_t)&type metadata for AutomaticProductViewStyle;
  unk_2556675F8 = v0;
  qword_255667600 = v1;
  return result;
}

uint64_t *sub_2212ADEE8()
{
  if (qword_255655DC8 != -1)
    swift_once();
  return &qword_2556675E0;
}

uint64_t sub_2212ADF28@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_2212ADEE8();
  v3 = v2[3];
  v4 = v2[4];
  *(_QWORD *)a1 = *v2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v2 + 1);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  return swift_retain();
}

double sub_2212ADF6C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  double result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a4, a1, a2);
  v8 = a4 + *(int *)(type metadata accessor for ProductViewStyleModifier(0, a2, a3, v7) + 36);
  *(_QWORD *)v8 = swift_getKeyPath();
  result = 0.0;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_BYTE *)(v8 + 40) = 0;
  return result;
}

uint64_t sub_2212ADFE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of ProductViewStyle.makeBody(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

_OWORD *initializeBufferWithCopyOfBuffer for ProductViewStyleConfiguration(_OWORD *a1, uint64_t *a2, int *a3)
{
  _OWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void **v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (*a2)
    {
      v7 = a2[1];
      *(_QWORD *)v4 = *a2;
      *((_QWORD *)v4 + 1) = v7;
      swift_retain();
    }
    else
    {
      *a1 = *(_OWORD *)a2;
    }
    *((_BYTE *)v4 + 16) = *((_BYTE *)a2 + 16);
    v9 = a3[6];
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (void **)((char *)a2 + v9);
    v12 = type metadata accessor for Product.TaskState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v16 = sub_2212F51B4();
      (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        goto LABEL_12;
      }
      v14 = *v11;
      v15 = v14;
      *v10 = v14;
    }
    swift_storeEnumTagMultiPayload();
LABEL_12:
    v17 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *((_BYTE *)v4 + v17) = *((_BYTE *)a2 + v17);
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    goto LABEL_13;
  }
  v8 = *a2;
  *(_QWORD *)v4 = *a2;
  v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
LABEL_13:
  swift_retain();
  return v4;
}

uint64_t destroy for ProductViewStyleConfiguration(_QWORD *a1, uint64_t a2)
{
  id *v4;
  int EnumCaseMultiPayload;
  uint64_t v6;

  if (*a1)
    swift_release();
  v4 = (id *)((char *)a1 + *(int *)(a2 + 24));
  type metadata accessor for Product.TaskState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v6 = sub_2212F51B4();
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else if (!EnumCaseMultiPayload)
  {

  }
  return swift_release();
}

uint64_t initializeWithCopy for ProductViewStyleConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void **v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_QWORD *)a2)
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (void **)(a2 + v7);
  v10 = type metadata accessor for Product.TaskState(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v14 = sub_2212F51B4();
    (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      goto LABEL_10;
    }
    v12 = *v9;
    v13 = v12;
    *v8 = v12;
  }
  swift_storeEnumTagMultiPayload();
LABEL_10:
  v15 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ProductViewStyleConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void **v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  void *v14;
  id v15;
  uint64_t v16;

  v6 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  if ((uint64_t *)a1 != a2)
  {
    v9 = a3[6];
    v10 = (_QWORD *)(a1 + v9);
    v11 = (void **)((char *)a2 + v9);
    sub_22112FFAC(a1 + v9);
    v12 = type metadata accessor for Product.TaskState(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v16 = sub_2212F51B4();
      (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v10, v11, v16);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        goto LABEL_15;
      }
      v14 = *v11;
      v15 = v14;
      *v10 = v14;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  *(_QWORD *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for ProductViewStyleConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)a2)
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Product.TaskState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_2212F51B4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for ProductViewStyleConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v6)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    v8 = a2[1];
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  if ((uint64_t *)a1 != a2)
  {
    v9 = a3[6];
    v10 = (void *)(a1 + v9);
    v11 = (char *)a2 + v9;
    sub_22112FFAC(a1 + v9);
    v12 = type metadata accessor for Product.TaskState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_2212F51B4();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  *(_QWORD *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_release();
  v14 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_BYTE *)(a1 + v14) = *((_BYTE *)a2 + v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductViewStyleConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212AE688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_0_59();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
    return __swift_getEnumTagSinglePayload(v4 + *(int *)(a3 + 24), v3, v6);
  v8 = *(_QWORD *)(v4 + *(int *)(a3 + 28));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductViewStyleConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2212AE704(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_0_59();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 24), v4, v4, v8);
  }
  else
  {
    *(_QWORD *)(v5 + *(int *)(a4 + 28)) = (v4 - 1);
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t sub_2212AE768()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Product.TaskState(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductViewStyleConfiguration.Icon()
{
  return &type metadata for ProductViewStyleConfiguration.Icon;
}

void sub_2212AE80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for ProductViewStyleModifier(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), a4);
  sub_2212F3348();
  MEMORY[0x22766BAC4](&unk_221318478, v4);
  OUTLINED_FUNCTION_5_2();
}

void sub_2212AE86C()
{
  OUTLINED_FUNCTION_16_13();
}

uint64_t sub_2212AE874()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2212AE8E8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0xFE)
    v7 = 254;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0xFE)
    {
      v15 = *(unsigned __int8 *)(((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 0x28);
      if (v15 > 1)
        return (v15 ^ 0xFF) + 1;
      else
        return 0;
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    v9 = ((v8 + 7) & 0xFFFFFFF8) + 41;
    v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2212AE970 + 4 * byte_2213182F0[v13]))();
  }
}

void sub_2212AE9F8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v6 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (v6 < a2)
  {
    v11 = ~v6 + a2;
    v12 = (~(_BYTE)v6 + a2);
    if (v7 >= 4)
      v13 = v11;
    else
      v13 = v12;
    bzero(a1, v7);
    if ((_DWORD)v7 == 1)
      *a1 = v13;
    else
      *(_DWORD *)a1 = v13;
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_2212AEB10()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2212AEB94);
}

void sub_2212AEB18(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2212AEB20);
  JUMPOUT(0x2212AEB94);
}

void sub_2212AEB60()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2212AEB94);
}

void sub_2212AEB68()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2212AEB94);
}

uint64_t sub_2212AEB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!(_DWORD)a2)
    goto LABEL_6;
  if (a3 < 0xFE)
  {
    if (a2 > 0xFE)
      JUMPOUT(0x2212AEB7CLL);
    *(_BYTE *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 40) = -(char)a2;
LABEL_6:
    JUMPOUT(0x2212AEB94);
  }
  return __swift_storeEnumTagSinglePayload(v6, a2, a3, a4);
}

uint64_t sub_2212AEBAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2212AEBE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  uint64_t v39;
  __int128 v40;
  _OWORD v41[2];
  _BYTE v42[56];

  v26 = a1;
  v27 = a3;
  v5 = *(uint64_t (**)(uint64_t))(a2 + 16);
  v6 = *((_QWORD *)v5 - 1);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&KeyPath - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x22766BAC4](&unk_221318478, v7);
  v10 = sub_2212F3B4C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255667728);
  v11 = sub_2212F3348();
  v25 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&KeyPath - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&KeyPath - v15;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t (*)(uint64_t)))(v6 + 16))(v9, v3, v5);
  v17 = (__int128 *)(v3 + *(int *)(a2 + 36));
  v18 = v17[1];
  v40 = *v17;
  v41[0] = v18;
  *(_OWORD *)((char *)v41 + 9) = *(__int128 *)((char *)v17 + 25);
  sub_22105EB78((uint64_t)&v40, (uint64_t)v42);
  sub_22105EBC0((uint64_t)v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_22105BD60);
  sub_221044D70();
  v19 = v34;
  sub_22105EBC0((uint64_t)&v40, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_221046E30);
  v38[0] = v32;
  v38[1] = v33;
  v39 = v19;
  sub_221234948((uint64_t)v9, (uint64_t)v38, v5, *(uint64_t (**)(uint64_t))(a2 + 24), (uint64_t (**)(uint64_t))v35);
  v37 = v36;
  v29 = v35[0];
  v30 = v35[1];
  v31 = v36;
  v20 = MEMORY[0x22766BAC4](MEMORY[0x24BDEFB78], v10);
  sub_2212F4194();
  swift_release();
  swift_release();
  sub_2210368C4((uint64_t)&v37);
  v21 = sub_221018504(&qword_255667730, &qword_255667728, MEMORY[0x24BDF1028]);
  v28[0] = v20;
  v28[1] = v21;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v11, v28);
  sub_221088D68((uint64_t)v13, v11, (uint64_t)v16);
  v22 = *(void (**)(char *, uint64_t))(v25 + 8);
  v22(v13, v11);
  sub_221087210((uint64_t)v16, v11, v27);
  return ((uint64_t (*)(char *, uint64_t))v22)(v16, v11);
}

uint64_t sub_2212AEE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  KeyPath = swift_getKeyPath();
  v6 = *v2;
  v8 = v2[3];
  v7 = v2[4];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255667748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, a1, v9);
  v10 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255667750) + 36);
  *(_QWORD *)v10 = KeyPath;
  *(_QWORD *)(v10 + 8) = v6;
  *(_OWORD *)(v10 + 16) = *(_OWORD *)(v2 + 1);
  *(_QWORD *)(v10 + 32) = v8;
  *(_QWORD *)(v10 + 40) = v7;
  swift_retain();
  return swift_retain();
}

uint64_t sub_2212AEF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2212AEE74(a1, a2);
}

unint64_t sub_2212AEF50()
{
  unint64_t result;

  result = qword_255667738;
  if (!qword_255667738)
  {
    result = MEMORY[0x22766BAC4](&unk_221318510, &_s30ProductViewStyleEnvironmentKeyON);
    atomic_store(result, (unint64_t *)&qword_255667738);
  }
  return result;
}

ValueMetadata *_s30ProductViewStyleEnvironmentKeyOMa()
{
  return &_s30ProductViewStyleEnvironmentKeyON;
}

void sub_2212AEF9C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ProductViewStyleModifier(255, *a1, a1[1], a4);
  OUTLINED_FUNCTION_5_2();
}

void sub_2212AEFCC()
{
  sub_2212F3B4C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255667728);
  sub_2212F3348();
  OUTLINED_FUNCTION_5_2();
}

void sub_2212AF010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;

  v13 = sub_221018504(&qword_255667730, v10, MEMORY[0x24BDF1028]);
  a9 = a1;
  a10 = v13;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v11, &a9);
  OUTLINED_FUNCTION_16_13();
}

unint64_t sub_2212AF050()
{
  unint64_t result;

  result = qword_255667740;
  if (!qword_255667740)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for AutomaticProductViewStyle, &type metadata for AutomaticProductViewStyle);
    atomic_store(result, (unint64_t *)&qword_255667740);
  }
  return result;
}

uint64_t sub_2212AF08C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    swift_release();
    swift_release();
  }
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for AnyProductViewStyleModifier()
{
  return &type metadata for AnyProductViewStyleModifier;
}

uint64_t sub_2212AF0D0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2212AF0E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255667758;
  if (!qword_255667758)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255667750);
    v2[0] = sub_221018504(qword_255667760, &qword_255667748, MEMORY[0x24BDEFB78]);
    v2[1] = sub_221018504(&qword_255667730, &qword_255667728, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255667758);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_70@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_9_51()
{
  uint64_t v0;

  return sub_221014FB0(v0);
}

uint64_t OUTLINED_FUNCTION_12_47(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

uint64_t *sub_2212AF1A4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2212F51B4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_2212F4FEC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_2212F50D0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return v4;
}

uint64_t sub_2212AF2A8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_2212F4FEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  v9 = sub_2212F50D0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *sub_2212AF340(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2212F51B4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_2212F4FEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_2212F50D0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

_QWORD *sub_2212AF418(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2212F51B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_2212F4FEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_2212F50D0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *sub_2212AF4F4(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2212F51B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_2212F4FEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_2212F50D0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_QWORD *sub_2212AF5B8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2212F51B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_2212F4FEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_2212F50D0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_2212AF684()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212AF690(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    OUTLINED_FUNCTION_14_9();
    OUTLINED_FUNCTION_10_4();
    if (v11)
    {
      v9 = v8;
      v10 = a3[5];
    }
    else
    {
      sub_2212F4FEC();
      OUTLINED_FUNCTION_10_4();
      if (v11)
      {
        v9 = v12;
        v10 = a3[6];
      }
      else
      {
        v9 = sub_2212F50D0();
        v10 = a3[7];
      }
    }
    return OUTLINED_FUNCTION_4_0(a1 + v10, a2, v9);
  }
}

uint64_t sub_2212AF730()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2212AF73C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_17_0();
  }
  else
  {
    OUTLINED_FUNCTION_14_9();
    OUTLINED_FUNCTION_11_5();
    if (v10)
    {
      v8 = v7;
      v9 = a4[5];
    }
    else
    {
      sub_2212F4FEC();
      OUTLINED_FUNCTION_11_5();
      if (v10)
      {
        v8 = v11;
        v9 = a4[6];
      }
      else
      {
        v8 = sub_2212F50D0();
        v9 = a4[7];
      }
    }
    OUTLINED_FUNCTION_3_1(a1 + v9, a2, a2, v8);
  }
}

uint64_t type metadata accessor for SubscriptionOfferViewNoCodeOfferCard(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_2556677C0);
}

uint64_t sub_2212AF7E4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_2212F51B4();
  if (v1 <= 0x3F)
  {
    result = sub_2212F4FEC();
    if (v2 <= 0x3F)
    {
      result = sub_2212F50D0();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_2212AF890()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2212AF8A0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (qword_255655B78 != -1)
    swift_once();
  v3 = qword_25568CDC8;
  *(_QWORD *)a1 = sub_2212F37F8();
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = 0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556678C0);
  sub_2212AF914(v1, a1 + *(int *)(v4 + 44));
  OUTLINED_FUNCTION_17_0();
}

void sub_2212AF914(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _BYTE v21[192];
  _BYTE v22[208];
  _QWORD v23[28];
  _QWORD v24[2];
  char v25;
  _BYTE v26[199];
  __int16 v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556678C8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556678D0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v21[-v11 - 8];
  sub_2212AFB84((uint64_t)v6);
  v13 = sub_2212F4A10();
  v15 = v14;
  sub_221014FC0((uint64_t)v6, (uint64_t)v9, &qword_2556678C8);
  v16 = &v9[*(int *)(v7 + 36)];
  *(_OWORD *)v16 = xmmword_221301260;
  *((_OWORD *)v16 + 1) = xmmword_221301260;
  *((_OWORD *)v16 + 2) = xmmword_221301260;
  *((_OWORD *)v16 + 3) = xmmword_221301260;
  *((_OWORD *)v16 + 4) = xmmword_221301260;
  *((_QWORD *)v16 + 10) = 0x4054000000000000;
  *((_WORD *)v16 + 44) = 0;
  *((_QWORD *)v16 + 12) = v13;
  *((_QWORD *)v16 + 13) = v15;
  sub_221014F5C((uint64_t)v6, &qword_2556678C8);
  sub_221015090((uint64_t)v9, (uint64_t)v12, &qword_2556678D0);
  v17 = sub_2212F38F4();
  if (qword_255655B80 != -1)
    swift_once();
  v18 = qword_25568CDD0;
  sub_2212B04DC(a1, (uint64_t)v21);
  v22[200] = 0;
  memcpy(&v22[7], v21, 0xC0uLL);
  sub_221014FC0((uint64_t)v12, (uint64_t)v9, &qword_2556678D0);
  sub_221014FC0((uint64_t)v9, a2, &qword_2556678D0);
  v19 = (void *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556678D8) + 48));
  v23[0] = v17;
  v23[1] = v18;
  LOBYTE(v23[2]) = 0;
  memcpy((char *)&v23[2] + 1, v22, 0xC7uLL);
  LOWORD(v23[27]) = 256;
  memcpy(v19, v23, 0xDAuLL);
  sub_2212B1364((uint64_t)v23);
  sub_221014F5C((uint64_t)v12, &qword_2556678D0);
  v24[0] = v17;
  v24[1] = v18;
  v25 = 0;
  memcpy(v26, v22, sizeof(v26));
  v27 = 256;
  sub_2212B13F0((uint64_t)v24);
  sub_221014F5C((uint64_t)v9, &qword_2556678D0);
}

void sub_2212AFB84(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t KeyPath;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[17];
  _QWORD v95[18];
  __int128 v96;
  __int128 v97;

  v93 = a1;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556678E0);
  MEMORY[0x24BDAC7A8](v75);
  v76 = (char *)&v72 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v77 = (uint64_t)&v72 - v3;
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556678E8);
  MEMORY[0x24BDAC7A8](v92);
  v74 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v78 = (uint64_t)&v72 - v6;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556678F0);
  MEMORY[0x24BDAC7A8](v90);
  v91 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2212F4578();
  v83 = *(_QWORD *)(v8 - 8);
  v84 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v85 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2212F468C();
  v81 = *(_QWORD *)(v10 - 8);
  v82 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2212F2C04();
  v79 = *(_QWORD *)(v13 - 8);
  v80 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556678F8);
  MEMORY[0x24BDAC7A8](v16);
  v87 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_255667900);
  MEMORY[0x24BDAC7A8](v89);
  v86 = (uint64_t)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v88 = (uint64_t)&v72 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD08);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565BD10);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v72 - v28;
  v30 = sub_2212F2A24();
  v73 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v72 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212F5160();
  v33 = sub_2212F5154();
  if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v33) == 1)
  {
    sub_221014F5C((uint64_t)v23, &qword_25565BD08);
    __swift_storeEnumTagSinglePayload((uint64_t)v29, 1, 1, v30);
  }
  else
  {
    sub_2212F5148();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v23, v33);
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30) != 1)
    {
      v64 = v73;
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v32, v29, v30);
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v26, v32, v30);
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v30);
      v66 = v75;
      v65 = (uint64_t)v76;
      v67 = &v76[*(int *)(v75 + 56)];
      *(_QWORD *)v67 = swift_getKeyPath();
      v67[8] = 0;
      v68 = v65 + *(int *)(v66 + 52);
      *(_WORD *)v68 = 1;
      *(_BYTE *)(v68 + 16) = 1;
      sub_221015090((uint64_t)v26, v65, &qword_25565BD10);
      v69 = v77;
      sub_221015090(v65, v77, &qword_2556678E0);
      v70 = v74;
      sub_221014FC0(v69, v74, &qword_2556678E0);
      sub_221014F5C(v69, &qword_2556678E0);
      v71 = v78;
      sub_221015090(v70, v78, &qword_2556678E8);
      sub_221014FC0(v71, v91, &qword_2556678E8);
      swift_storeEnumTagMultiPayload();
      sub_2212B1724();
      sub_2212B17C0();
      sub_2212F3A14();
      sub_221014F5C(v71, &qword_2556678E8);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v32, v30);
      return;
    }
  }
  sub_221014F5C((uint64_t)v29, &qword_25565BD10);
  if (qword_255655B60 != -1)
    swift_once();
  v34 = v80;
  v35 = __swift_project_value_buffer(v80, (uint64_t)qword_25568CD80);
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v15, v35, v34);
  sub_2212F46BC();
  v37 = v81;
  v36 = v82;
  (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v12, *MEMORY[0x24BDF3FD0], v82);
  v38 = sub_2212F46A4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v36);
  LOBYTE(v37) = sub_2212F3ED0();
  sub_2212F2D48();
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v47 = sub_2212F4A10();
  v49 = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556570C0);
  v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_2212FD640;
  v51 = *MEMORY[0x24BDF3C28];
  v52 = v84;
  v53 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 104);
  v54 = v85;
  v53(v85, v51, v84);
  *(_QWORD *)(v50 + 32) = MEMORY[0x227669C64](v54, 0.819607843, 0.843137255, 0.858823529, 1.0);
  v53(v54, v51, v52);
  *(_QWORD *)(v50 + 40) = MEMORY[0x227669C64](v54, 0.57254902, 0.6, 0.62745098, 1.0);
  v95[0] = v50;
  sub_2212F5574();
  MEMORY[0x227669FAC](v95[0]);
  sub_2212F3174();
  v95[0] = v38;
  v95[1] = 0;
  LOWORD(v95[2]) = 1;
  LOBYTE(v95[3]) = v37;
  v95[4] = v40;
  v95[5] = v42;
  v95[6] = v44;
  v95[7] = v46;
  LOBYTE(v95[8]) = 0;
  LOBYTE(v95[9]) = 0;
  v95[10] = v47;
  v95[11] = v49;
  v95[12] = v95[17];
  *(_OWORD *)&v95[13] = v96;
  *(_OWORD *)&v95[15] = v97;
  memcpy(v94, v95, sizeof(v94));
  if (qword_255655B48 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255667908);
  sub_2212B1534();
  v55 = (uint64_t)v87;
  sub_2212F438C();
  swift_bridgeObjectRelease();
  sub_2212B169C((uint64_t)v95);
  KeyPath = swift_getKeyPath();
  v57 = sub_2212F45CC();
  v58 = objc_msgSend((id)objc_opt_self(), sel_systemGray5Color);
  v59 = MEMORY[0x227669B98](v58);
  v94[0] = v57;
  v94[1] = v59;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656A60);
  sub_2212B16D8((unint64_t *)&qword_255656A68, &qword_255656A60);
  sub_221017AD4(&qword_255656A88, &qword_255656A60, (uint64_t)&unk_221301FC8);
  v94[0] = sub_2212F4644();
  v60 = sub_2212F2F70();
  v61 = v86;
  sub_221014FC0(v55, v86, &qword_2556678F8);
  v62 = (uint64_t *)(v61 + *(int *)(v89 + 36));
  *v62 = KeyPath;
  v62[1] = v60;
  sub_221014F5C(v55, &qword_2556678F8);
  v63 = v88;
  sub_221015090(v61, v88, &qword_255667900);
  sub_221014FC0(v63, v91, &qword_255667900);
  swift_storeEnumTagMultiPayload();
  sub_2212B1724();
  sub_2212B17C0();
  sub_2212F3A14();
  sub_221014F5C(v63, &qword_255667900);
}

uint64_t sub_2212B04DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[144];
  _QWORD v42[20];
  _BYTE v43[7];
  char v44;
  _QWORD __src[21];

  v36 = a1;
  v37 = sub_2212F29B8();
  v3 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __src[0] = sub_2212F4E18();
  __src[1] = v6;
  sub_221036844();
  v7 = sub_2212F40F8();
  v9 = v8;
  v11 = v10 & 1;
  sub_2212F402C();
  v12 = sub_2212F40B0();
  v38 = v13;
  v39 = v12;
  v15 = v14;
  v40 = v16;
  swift_release();
  v17 = v15 & 1;
  sub_221036880(v7, v9, v11);
  swift_bridgeObjectRelease();
  v18 = type metadata accessor for SubscriptionOfferViewNoCodeCardHeader(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v36 + *(int *)(v18 + 20), v37);
  v19 = sub_2212F40EC();
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  v26 = sub_2212F4A1C();
  LOBYTE(v35) = 1;
  LOBYTE(v34) = 1;
  sub_221015F5C(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, v34, 0, v35, v26, v27, v19, v21, v25, v23);
  sub_221036880(v19, v21, v25);
  swift_bridgeObjectRelease();
  memcpy(v41, __src, sizeof(v41));
  sub_2212F3F3C();
  sub_2212F3F90();
  v28 = sub_2212F3FD8();
  swift_release();
  KeyPath = swift_getKeyPath();
  memcpy(v42, v41, 0x90uLL);
  v42[18] = KeyPath;
  v42[19] = v28;
  v44 = v17;
  memcpy((void *)(a2 + 32), v42, 0xA0uLL);
  v30 = v44;
  *(_DWORD *)(a2 + 17) = *(_DWORD *)v43;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)&v43[3];
  v32 = v38;
  v31 = v39;
  *(_QWORD *)a2 = v39;
  *(_QWORD *)(a2 + 8) = v32;
  *(_BYTE *)(a2 + 16) = v30;
  *(_QWORD *)(a2 + 24) = v40;
  memcpy(__src, v41, 0x90uLL);
  __src[18] = KeyPath;
  __src[19] = v28;
  sub_221017C14(v31, v32, v17);
  swift_bridgeObjectRetain();
  sub_2212B1484((uint64_t)v42);
  sub_2212B14DC((uint64_t)__src);
  sub_221036880(v31, v32, v17);
  return swift_bridgeObjectRelease();
}

void sub_2212B0774(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = a1;
  v14 = sub_2212F5124();
  v1 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_2212F29B8();
  v13 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s15PricePropertiesVMa(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SubscriptionOfferViewNoCodeOfferCard(0);
  v9 = sub_2212F507C();
  v11 = v10;
  sub_2212F5064();
  sub_2212F50B8();
  v12 = sub_2212F5070();
  *v8 = v9;
  v8[1] = v11;
  *(uint64_t *)((char *)v8 + *(int *)(v6 + 28)) = v12;
  sub_2212F4E30();
  sub_2212F4F5C();
  sub_22123A158();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v14);
  sub_2211B3F94();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v15);
  sub_221011A28((uint64_t)v8, _s15PricePropertiesVMa);
}

void sub_2212B0944(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_2212F38F4();
  if (qword_255655B78 != -1)
    swift_once();
  v4 = qword_25568CDC8;
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = 0;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255667800);
  sub_2212B09BC(v1, a1 + *(int *)(v5 + 44));
  OUTLINED_FUNCTION_17_0();
}

void sub_2212B09BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;

  v61 = a2;
  v3 = sub_2212F48CC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255667808);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_255667810);
  MEMORY[0x24BDAC7A8](v59);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v53 - v13;
  v15 = type metadata accessor for SubscriptionOfferViewNoCodeCardHeader(0);
  MEMORY[0x24BDAC7A8](v15);
  v60 = (uint64_t)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v53 - v18;
  v20 = a1 + *(int *)(type metadata accessor for SubscriptionOfferViewNoCodeOfferCard(0) + 20);
  v21 = sub_2212F51B4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  v22 = *(int *)(v15 + 20);
  v58 = v19;
  sub_2212B0774((uint64_t)&v19[v22]);
  sub_2212F48C0();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  LODWORD(v20) = sub_2212F3BA0();
  LOBYTE(v15) = sub_2212F3ED0();
  sub_221014FC0((uint64_t)v9, (uint64_t)v11, &qword_255667808);
  v23 = &v11[*((int *)v59 + 9)];
  *(_DWORD *)v23 = v20;
  v23[4] = v15;
  sub_221014F5C((uint64_t)v9, &qword_255667808);
  v24 = (uint64_t)v11;
  v59 = v14;
  sub_221015090((uint64_t)v11, (uint64_t)v14, &qword_255667810);
  sub_22123BB6C();
  if (qword_255655B20 != -1)
    swift_once();
  v25 = (id)qword_25568CA90;
  v26 = sub_2212F40D4();
  v28 = v27;
  v30 = v29 & 1;
  sub_2212F4020();
  v31 = sub_2212F40B0();
  v33 = v32;
  v35 = v34;
  swift_release();
  sub_221036880(v26, v28, v30);
  swift_bridgeObjectRelease();
  v62 = sub_2212F3BAC();
  v56 = sub_2212F4080();
  v57 = v36;
  v38 = v37;
  v40 = v39;
  sub_221036880(v31, v33, v35 & 1);
  swift_bridgeObjectRelease();
  if (qword_255655B88 != -1)
    swift_once();
  v41 = v40 & 1;
  v55 = xmmword_25568CDD8;
  v53 = unk_25568CDF0;
  v54 = qword_25568CDE8;
  v42 = sub_2212F3ED0();
  v43 = (uint64_t)v58;
  v44 = v60;
  sub_2212B0EA4((uint64_t)v58, v60);
  v45 = (uint64_t)v59;
  v46 = v24;
  sub_221014FC0((uint64_t)v59, v24, &qword_255667810);
  v47 = v61;
  sub_2212B0EA4(v44, v61);
  v48 = __swift_instantiateConcreteTypeFromMangledName(qword_255667818);
  sub_221014FC0(v46, v47 + *(int *)(v48 + 48), &qword_255667810);
  v49 = v47 + *(int *)(v48 + 64);
  v51 = v56;
  v50 = v57;
  *(_QWORD *)v49 = v56;
  *(_QWORD *)(v49 + 8) = v38;
  *(_BYTE *)(v49 + 16) = v41;
  *(_QWORD *)(v49 + 24) = v50;
  *(_BYTE *)(v49 + 32) = v42;
  *(_OWORD *)(v49 + 40) = v55;
  v52 = v53;
  *(_QWORD *)(v49 + 56) = v54;
  *(_QWORD *)(v49 + 64) = v52;
  *(_BYTE *)(v49 + 72) = 0;
  *(_WORD *)(v49 + 73) = 256;
  sub_221017C14(v51, v38, v41);
  swift_bridgeObjectRetain();
  sub_221014F5C(v45, &qword_255667810);
  sub_221011A28(v43, type metadata accessor for SubscriptionOfferViewNoCodeCardHeader);
  sub_221036880(v51, v38, v41);
  swift_bridgeObjectRelease();
  sub_221014F5C(v46, &qword_255667810);
  sub_221011A28(v44, type metadata accessor for SubscriptionOfferViewNoCodeCardHeader);
}

uint64_t type metadata accessor for SubscriptionOfferViewNoCodeCardHeader(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_255667878);
}

uint64_t sub_2212B0EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SubscriptionOfferViewNoCodeCardHeader(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_2212B0EE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2212F51B4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2212F29B8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_2212B0F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_2212F29B8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_2212B0FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2212F29B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_2212B1068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2212F29B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_2212B10E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2212F29B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_2212B1160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2212F51B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2212F29B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_2212B11DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212B11E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_14_9();
  OUTLINED_FUNCTION_10_4();
  if (v7)
  {
    v8 = v6;
    v9 = a1;
  }
  else
  {
    v8 = sub_2212F29B8();
    v9 = a1 + *(int *)(a3 + 20);
  }
  return OUTLINED_FUNCTION_4_0(v9, a2, v8);
}

uint64_t sub_2212B123C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212B1248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_14_9();
  OUTLINED_FUNCTION_11_5();
  if (v8)
  {
    v9 = v7;
    v10 = a1;
  }
  else
  {
    v9 = sub_2212F29B8();
    v10 = a1 + *(int *)(a4 + 20);
  }
  return OUTLINED_FUNCTION_3_1(v10, a2, a2, v9);
}

uint64_t sub_2212B12A4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2212F51B4();
  if (v1 <= 0x3F)
  {
    result = sub_2212F29B8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_2212B1328()
{
  sub_221017AD4(&qword_2556678B0, &qword_2556678B8, MEMORY[0x24BDF4700]);
}

uint64_t sub_2212B1354()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2212B1364(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  sub_221017C14(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_221017C14(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_2212B13F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  sub_221036880(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_221036880(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_2212B1484(uint64_t a1)
{
  sub_221017C14(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_2212B14DC(uint64_t a1)
{
  sub_221036880(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

unint64_t sub_2212B1534()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255667910;
  if (!qword_255667910)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255667908);
    sub_2212B15D8(&qword_255667918, &qword_255667920);
    v3 = v2;
    sub_221017AD4(&qword_255667938, &qword_255667940, MEMORY[0x24BDF1378]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255667910);
  }
  return result;
}

void sub_2212B15D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t v5;
  _QWORD v6[2];

  if (!*a1)
  {
    v5 = OUTLINED_FUNCTION_1_10(0, a2);
    v6[0] = v3();
    v6[1] = v2();
    atomic_store(MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v5, v6), a1);
  }
  OUTLINED_FUNCTION_16_13();
}

unint64_t sub_2212B1630()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255667928;
  if (!qword_255667928)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255667930);
    v2[0] = sub_22105A500();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255667928);
  }
  return result;
}

uint64_t sub_2212B169C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

void sub_2212B16D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;
  uint64_t v6;

  if (!*a1)
  {
    v5 = OUTLINED_FUNCTION_1_10(0, a2);
    v6 = v3();
    atomic_store(MEMORY[0x22766BAC4](v2, v5, &v6), a1);
  }
  OUTLINED_FUNCTION_16_13();
}

unint64_t sub_2212B1724()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255667948;
  if (!qword_255667948)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556678E8);
    sub_221017AD4(&qword_255667950, &qword_2556678E0, (uint64_t)&unk_221317AC8);
    v3 = v2;
    sub_221017AD4(&qword_255667958, &qword_255667960, MEMORY[0x24BDF1378]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255667948);
  }
  return result;
}

unint64_t sub_2212B17C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255667968;
  if (!qword_255667968)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255667900);
    sub_2212B15D8(&qword_255667970, &qword_2556678F8);
    v3 = v2;
    sub_221017AD4(&qword_255667978, &qword_255667980, MEMORY[0x24BDF1028]);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255667968);
  }
  return result;
}

void sub_2212B186C()
{
  sub_221017AD4(&qword_255667988, &qword_255667990, MEMORY[0x24BDF4498]);
}

uint64_t sub_2212B1898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  _QWORD v14[2];

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_1_59((uint64_t)v14 - v10);
  if ((OUTLINED_FUNCTION_0_71() & 1) != 0)
  {
    inited = v14[1];
  }
  else
  {
    OUTLINED_FUNCTION_1_59((uint64_t)v8);
    if ((OUTLINED_FUNCTION_0_71() & 1) == 0)
    {
      type metadata accessor for SubscriptionStoreControlStyleBox(0, a2, a3, v12);
      return sub_2212B1A70(a1);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25565EA98);
    inited = swift_initStaticObject();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  return inited;
}

uint64_t sub_2212B19C0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  _QWORD *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v10[4];

  (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)a1 + 80))(v10);
  v3 = __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  (*(void (**)(char *, __n128))(v6 + 16))((char *)&v10[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v7 = sub_2212F4854();
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  *a2 = v7;
  return result;
}

uint64_t sub_2212B1A70(uint64_t a1)
{
  swift_allocObject();
  return sub_2212B1B70(a1);
}

uint64_t sub_2212B1AA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_2212B19C0(*v1, a1);
}

void sub_2212B1AB0(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x24BDF5138];
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BDF5158];
  *(_QWORD *)(a1 + 32) = v1;
}

uint64_t sub_2212B1AC8()
{
  return 3;
}

uint64_t sub_2212B1AD0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnySubscriptionStoreControlStyle.Box()
{
  return objc_opt_self();
}

uint64_t sub_2212B1B00()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2212B1B70(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 112) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128), a1);
  return v1;
}

uint64_t sub_2212B1BA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  char *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;

  v5 = *(_QWORD **)v2;
  v6 = type metadata accessor for SubscriptionStoreControlStyleConfiguration(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v5[14];
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v14 + 16))(v13, &v2[v5[16]], v9, v11);
  sub_2210799F0(a1, (uint64_t)v8);
  v15 = v5[15];
  v17 = type metadata accessor for SubscriptionStoreControl(0, v9, v15, v16);
  a2[3] = v17;
  a2[4] = MEMORY[0x22766BAC4](&unk_221310750, v17);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_2211E6024((uint64_t)v13, (uint64_t)v8, v9, v15, (uint64_t)boxed_opaque_existential_1);
}

uint64_t sub_2212B1CB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, v1 + *(_QWORD *)(v8 + 128), v3, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255667AF8);
  if (swift_dynamicCast())
  {
    v9 = a1 != 1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255667B00);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v9 = 1;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_255667B08);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v9 = 2;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_255667B10);
        if (swift_dynamicCast())
          v9 = 0;
        else
          v9 = 3;
      }
    }
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v9;
}

uint64_t sub_2212B1E10()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 112) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
}

uint64_t sub_2212B1E2C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 112) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
  return v0;
}

uint64_t sub_2212B1E5C()
{
  sub_2212B1E2C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SubscriptionStoreControlStyleBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubscriptionStoreControlStyleBox);
}

ValueMetadata *type metadata accessor for AnySubscriptionStoreControlStyle()
{
  return &type metadata for AnySubscriptionStoreControlStyle;
}

uint64_t sub_2212B1E98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t OUTLINED_FUNCTION_0_71()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_1_59(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_2212B1EC0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  _OWORD v13[3];
  __int128 v14;
  __int128 v15;
  __int128 v16;

  LOBYTE(v14) = a1 & 1;
  *((_QWORD *)&v14 + 1) = a2;
  *(_QWORD *)&v15 = a3;
  BYTE8(v15) = a4 & 1;
  *(_QWORD *)&v16 = a5;
  *((_QWORD *)&v16 + 1) = a6;
  v13[0] = v14;
  v13[1] = v15;
  v13[2] = v16;
  v11 = type metadata accessor for MagicPocketApplierModifier(0, a8, a10, a4);
  swift_retain();
  MEMORY[0x227669B20](v13, a7, v11, a9);
  return sub_2212B2920((uint64_t)&v14);
}

uint64_t sub_2212B1F64(void (*a1)(__n128), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;

  v19 = a5;
  v8 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MagicPocketSetterModifier(0, v11, v12, v11);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v19 - v16;
  a1(v15);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v10, a4);
  MEMORY[0x227669B20](v17, a3, v13, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t type metadata accessor for MagicPocketSetterModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MagicPocketSetterModifier);
}

uint64_t sub_2212B2074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  _QWORD v23[2];
  uint64_t v24;
  _QWORD v25[3];

  v4 = v3;
  v23[1] = a1;
  v24 = a3;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x22766BAC4](&unk_2213188E0, v7);
  v10 = sub_2212F3B4C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255667B98);
  v11 = sub_2212F3348();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v23 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, v4, v5, v16);
  v25[2] = sub_2212F4854();
  v19 = MEMORY[0x22766BAC4](MEMORY[0x24BDEFB78], v10);
  sub_2212B2544();
  sub_2212F4158();
  swift_release();
  v20 = sub_221018504(&qword_255667BA8, &qword_255667B98, MEMORY[0x24BDF0B90]);
  v25[0] = v19;
  v25[1] = v20;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v11, v25);
  sub_221088D68((uint64_t)v14, v11, (uint64_t)v18);
  v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v14, v11);
  sub_221087210((uint64_t)v18, v11, v24);
  return ((uint64_t (*)(char *, uint64_t))v21)(v18, v11);
}

uint64_t sub_2212B2268(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2212B2318 + 4 * byte_221318880[(v8 - 1)]))();
}

void sub_2212B2364(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t sub_2212B250C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2212B2544()
{
  unint64_t result;

  result = qword_255667BA0;
  if (!qword_255667BA0)
  {
    result = MEMORY[0x22766BAC4](&unk_221318950, &type metadata for MagicPocketContentPreferenceKey);
    atomic_store(result, (unint64_t *)&qword_255667BA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MagicPocketContentPreferenceKey()
{
  return &type metadata for MagicPocketContentPreferenceKey;
}

void sub_2212B2590(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for MagicPocketSetterModifier(255, *a1, a1[1], a4);
  OUTLINED_FUNCTION_5_2();
}

void sub_2212B25C0()
{
  OUTLINED_FUNCTION_0_72();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255667B98);
  sub_2212F3348();
  OUTLINED_FUNCTION_5_2();
}

void sub_2212B25F8()
{
  uint64_t *v0;

  sub_221018504(&qword_255667BA8, v0, MEMORY[0x24BDF0B90]);
  OUTLINED_FUNCTION_2_58();
}

uint64_t sub_2212B2638@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v23[2];
  ValueMetadata *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  ValueMetadata *v29;
  uint64_t v30;

  v21 = *(_BYTE *)v2;
  v4 = *(_QWORD *)(v2 + 16);
  v20 = *(_QWORD *)(v2 + 8);
  v5 = *(unsigned __int8 *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  v8 = (_QWORD *)swift_allocObject();
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v8[2] = v9;
  v8[3] = v10;
  v8[4] = v7;
  v8[5] = v6;
  swift_retain();
  MEMORY[0x22766BAC4](&unk_2213189E8, a1);
  v11 = sub_2212F3B4C();
  v12 = MEMORY[0x22766BAC4](MEMORY[0x24BDEFB78], v11);
  v13 = sub_2212B2544();
  sub_2212C0CBC((uint64_t)&type metadata for MagicPocketContentPreferenceKey, v21, v20, v4, v5, (uint64_t)sub_2212B2B18, (uint64_t)v8, v11, (uint64_t)&v29, (uint64_t)&type metadata for MagicPocketContentPreferenceKey, v9, v12, v13, v10);
  swift_release();
  v28[0] = v29;
  v28[1] = v30;
  v24 = &type metadata for MagicPocketContentPreferenceKey;
  v25 = v9;
  v26 = v13;
  v27 = v10;
  v14 = sub_2212F3BF4();
  MEMORY[0x22766BAC4](MEMORY[0x24BDEFFC0], v14);
  v15 = sub_2212F38A0();
  v16 = sub_2212F3348();
  v23[0] = v12;
  v23[1] = MEMORY[0x22766BAC4](MEMORY[0x24BDEEC88], v15);
  v17 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v16, v23);
  v24 = &type metadata for MagicPocketContentPreferenceKey;
  v25 = v16;
  v26 = v13;
  v27 = v17;
  v18 = sub_2212F3BE8();
  MEMORY[0x22766BAC4](MEMORY[0x24BDEFF58], v18);
  sub_221088D68((uint64_t)v28, v18, (uint64_t)&v24);
  swift_release();
  v29 = v24;
  v30 = v25;
  sub_221087210((uint64_t)&v29, v18, a2);
  return swift_release();
}

uint64_t sub_2212B283C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_2212B2638(a1, a2);
}

_QWORD *sub_2212B2874(_QWORD *a1, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;

  result = a2(&v5);
  v4 = v5;
  if (v5)
  {
    result = (_QWORD *)swift_release();
    *a1 = v4;
  }
  return result;
}

uint64_t sub_2212B28B8()
{
  sub_221018504(qword_255667BB0, &qword_255658C18, MEMORY[0x24BEE4AC8]);
  return sub_2212F30E4();
}

uint64_t type metadata accessor for MagicPocketApplierModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MagicPocketApplierModifier);
}

uint64_t sub_2212B2920(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_2212B2948()
{
  return swift_release();
}

uint64_t sub_2212B2950(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain();
  return a1;
}

uint64_t sub_2212B2994(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2212B29EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t sub_2212B2A34(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2212B2A74(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_2212B2AC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2212B2AF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2212B2B18(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 32))(*a1);
}

void sub_2212B2B3C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for MagicPocketApplierModifier(255, *a1, a1[1], a4);
  OUTLINED_FUNCTION_5_2();
}

void sub_2212B2B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_0_72();
  sub_2212B2544();
  v1 = sub_2212F3BF4();
  MEMORY[0x22766BAC4](MEMORY[0x24BDEFFC0], v1);
  v2 = sub_2212F38A0();
  sub_2212F3348();
  MEMORY[0x22766BAC4](MEMORY[0x24BDEFB78], v0);
  MEMORY[0x22766BAC4](MEMORY[0x24BDEEC88], v2);
  OUTLINED_FUNCTION_2_58();
}

uint64_t sub_2212B2C14()
{
  uint64_t v0;

  v0 = sub_2212F3BE8();
  return MEMORY[0x22766BAC4](MEMORY[0x24BDEFF58], v0);
}

uint64_t OUTLINED_FUNCTION_0_72()
{
  return sub_2212F3B4C();
}

void OUTLINED_FUNCTION_2_58()
{
  JUMPOUT(0x22766BAC4);
}

uint64_t storeEnumTagSinglePayload for StoreKitViewsFeature(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2212B2CB8 + 4 * byte_221318A45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2212B2CEC + 4 * byte_221318A40[v4]))();
}

uint64_t sub_2212B2CEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212B2CF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212B2CFCLL);
  return result;
}

uint64_t sub_2212B2D08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212B2D10);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2212B2D14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212B2D1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StoreKitViewsFeature()
{
  return &type metadata for StoreKitViewsFeature;
}

unint64_t sub_2212B2D3C()
{
  unint64_t result;

  result = qword_255667C38[0];
  if (!qword_255667C38[0])
  {
    result = MEMORY[0x22766BAC4](&unk_221318AF8, &type metadata for StoreKitViewsFeature);
    atomic_store(result, qword_255667C38);
  }
  return result;
}

uint64_t sub_2212B2D78@<X0>(char a1@<W0>, void (*a2)(uint64_t)@<X1>, void (*a3)(uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  _BYTE v15[24];
  ValueMetadata *v16;
  unint64_t v17;

  v8 = sub_2212F3A08();
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v15[-v9 - 8];
  v16 = &type metadata for StoreKitViewsFeature;
  v17 = sub_221078794();
  v15[0] = a1;
  v11 = sub_2212F2B38();
  v12 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  if ((v11 & 1) != 0)
    a2(v12);
  else
    a3(v12);
  swift_storeEnumTagMultiPayload();
  return sub_22123280C((uint64_t)v10, a4);
}

const char *sub_2212B2E80()
{
  return "StoreKit";
}

const char *sub_2212B2E94(char a1)
{
  if (!a1)
    return "SubscriptionPickerViewPreferencesImplementation";
  if (a1 == 1)
    return "SubscriptionPoliciesAttributedStringImplementation";
  return "PrefersInvertedPrimaryLabelColorOverTintStyle";
}

const char *sub_2212B2ED8()
{
  char *v0;

  return sub_2212B2E94(*v0);
}

uint64_t sub_2212B2EF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F3A08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2212B2F60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  if (*(_QWORD *)(v5 + 64) <= *(_QWORD *)(v4 + 64))
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = (*(_BYTE *)(v5 + 80) | *(_BYTE *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    v11 = *((unsigned __int8 *)a2 + v6);
    if (v11 >= 2)
    {
      if (v6 <= 3)
        v12 = v6;
      else
        v12 = 4;
      __asm { BR              X15 }
    }
    if (v11 == 1)
    {
      (*(void (**)(uint64_t *))(v5 + 16))(a1);
      *((_BYTE *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v6) = 0;
    }
  }
  else
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_2212B308C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(v2 - 8);
  if (*(_QWORD *)(v5 + 64) > v4)
    v4 = *(_QWORD *)(v5 + 64);
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (v6 < 2)
  {
    if (v6 == 1)
      v3 = *(_QWORD *)(v2 - 8);
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    if (v4 <= 3)
      v7 = v4;
    else
      v7 = 4;
    return ((uint64_t (*)(void))((char *)&loc_2212B30D8 + 4 * byte_221318A4F[v7]))();
  }
}

uint64_t sub_2212B312C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  v4 = *(_QWORD *)(a3 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v6 + 64) <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X16 }
  }
  v10 = v8 == 1;
  if (v8 == 1)
    v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(_BYTE *)(a1 + v7) = v10;
  return a1;
}

uint64_t sub_2212B3200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(a3 + 32);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v8 + 64) <= *(_QWORD *)(v7 + 64))
      v9 = *(_QWORD *)(v7 + 64);
    else
      v9 = *(_QWORD *)(v8 + 64);
    v10 = *(unsigned __int8 *)(a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
      v12 = *(_QWORD *)(v6 - 8);
    else
      v12 = *(_QWORD *)(v5 - 8);
    if (v10 == 1)
      v13 = *(_QWORD *)(a3 + 32);
    else
      v13 = *(_QWORD *)(a3 + 24);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v13);
    v14 = *(unsigned __int8 *)(a2 + v9);
    if (v14 >= 2)
    {
      if (v9 <= 3)
        v15 = v9;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = v14 == 1;
    if (v14 == 1)
      v17 = v8;
    else
      v17 = v7;
    if (v14 == 1)
      v18 = v6;
    else
      v18 = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a1, a2, v18);
    *(_BYTE *)(a1 + v9) = v16;
  }
  return a1;
}

uint64_t sub_2212B337C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  v4 = *(_QWORD *)(a3 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v6 + 64) <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X16 }
  }
  v10 = v8 == 1;
  if (v8 == 1)
    v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(_BYTE *)(a1 + v7) = v10;
  return a1;
}

uint64_t sub_2212B3450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(a3 + 32);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v8 + 64) <= *(_QWORD *)(v7 + 64))
      v9 = *(_QWORD *)(v7 + 64);
    else
      v9 = *(_QWORD *)(v8 + 64);
    v10 = *(unsigned __int8 *)(a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
      v12 = *(_QWORD *)(v6 - 8);
    else
      v12 = *(_QWORD *)(v5 - 8);
    if (v10 == 1)
      v13 = *(_QWORD *)(a3 + 32);
    else
      v13 = *(_QWORD *)(a3 + 24);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v13);
    v14 = *(unsigned __int8 *)(a2 + v9);
    if (v14 >= 2)
    {
      if (v9 <= 3)
        v15 = v9;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = v14 == 1;
    if (v14 == 1)
      v17 = v8;
    else
      v17 = v7;
    if (v14 == 1)
      v18 = v6;
    else
      v18 = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(a1, a2, v18);
    *(_BYTE *)(a1 + v9) = v16;
  }
  return a1;
}

uint64_t sub_2212B35CC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 32) - 8) + 64);
  if (v3 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64))
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2212B3694 + 4 * byte_221318A72[(v4 - 1)]))();
}

void sub_2212B36E0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 32) - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 32) - 8) + 64);
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

void type metadata accessor for FeatureView()
{
  JUMPOUT(0x22766BA10);
}

uint64_t sub_2212B3894(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 48);
  return MEMORY[0x22766BAC4](MEMORY[0x24BDEF3E0], a1, &v3);
}

uint64_t sub_2212B38CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2212F3A20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void sub_2212B391C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 48))();
  OUTLINED_FUNCTION_1_35();
}

void sub_2212B393C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 32))();
  OUTLINED_FUNCTION_1_35();
}

uint64_t sub_2212B3964(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_2212B396C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_2212B3974(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

void sub_2212B397C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 88))();
  OUTLINED_FUNCTION_1_35();
}

void sub_2212B399C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 96))();
  OUTLINED_FUNCTION_1_35();
}

uint64_t sub_2212B39C0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t sub_2212B39C8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_2212B39D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_2212B39DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t OUTLINED_FUNCTION_47_17(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_2212B39EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_2212B39F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_2212B39FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t sub_2212B3A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_2212B3A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t sub_2212B3A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t sub_2212B3A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t sub_2212B3A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t sub_2212B3A2C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t sub_2212B3A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t sub_2212B3A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t sub_2212B3A44(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t sub_2212B3A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t sub_2212B3A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t sub_2212B3A5C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t sub_2212B3A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t sub_2212B3A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t sub_2212B3A74(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

void sub_2212B3A7C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 232))();
  OUTLINED_FUNCTION_1_35();
}

uint64_t sub_2212B3A9C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];

  v3 = *(uint64_t (**)(_OWORD *))(a3 + 240);
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  return v3(v7);
}

uint64_t sub_2212B3AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 248))();
}

uint64_t sub_2212B3AD8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t sub_2212B3AE0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t sub_2212B3AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 272))();
}

uint64_t sub_2212B3AF0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t sub_2212B3B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 288))();
}

uint64_t sub_2212B3B14(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

void type metadata accessor for SubscriptionStoreViewDetails.VisibleRelationships()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for SubscriptionStoreViewDetails.PolicyDestination()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for SubscriptionStoreViewDetails.Initializer()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for SubscriptionStoreViewDetails.ControlStyle()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for SubscriptionStoreViewDetails()
{
  OUTLINED_FUNCTION_31_2();
}

uint64_t sub_2212B3B70(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2212B3BBC + 4 * byte_221318BC5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2212B3BF0 + 4 * byte_221318BC0[v4]))();
}

uint64_t sub_2212B3BF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212B3BF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212B3C00);
  return result;
}

uint64_t sub_2212B3C0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212B3C14);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2212B3C18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212B3C20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SubscriptionStoreViewDetails.ButtonLabelStyle()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for MintPurchaseResult()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for ProductViewDetails.Style()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for ProductViewDetails()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for ProductViewDetails.Initializer()
{
  OUTLINED_FUNCTION_31_2();
}

uint64_t sub_2212B3C68(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_59_15(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_59_15((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_59_15((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_59_15((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_59_15(v8);
}

uint64_t sub_2212B3CEC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2212B3D38 + 4 * byte_221318BCF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_55_12 + 4 * byte_221318BCA[v4]))();
}

uint64_t sub_2212B3D70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212B3D78);
  return result;
}

_BYTE *sub_2212B3D80(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212B3D88);
  return OUTLINED_FUNCTION_10_26((_BYTE *)a1, a2 + 2);
}

void type metadata accessor for MintAnalyticsSubscriptionOfferType()
{
  OUTLINED_FUNCTION_31_2();
}

uint64_t sub_2212B3DA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  char v12;
  int64_t v13;
  uint64_t result;
  _OWORD v15[2];
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];

  sub_221054AAC();
  v19 = sub_2212F5214();
  sub_2212B7FD0(a1, v20);
  v2 = v20[0];
  v3 = v20[1];
  v4 = v20[3];
  v5 = v20[4];
  v6 = (unint64_t)(v20[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_3;
LABEL_2:
  v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v8 = v7 | (v4 << 6);
  while (1)
  {
    v12 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v8);
    sub_2211164A4(*(_QWORD *)(v2 + 56) + 32 * v8, (uint64_t)v17 + 8);
    LOBYTE(v17[0]) = v12;
    v15[0] = v17[0];
    v15[1] = v17[1];
    v16 = v18;
    sub_2212B4494((uint64_t)&v19, (unsigned __int8 *)v15);
    sub_22101763C((uint64_t)v15, &qword_255667DB8);
    if (v5)
      goto LABEL_2;
LABEL_3:
    v9 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v9 >= v6)
      goto LABEL_24;
    v10 = *(_QWORD *)(v3 + 8 * v9);
    if (!v10)
    {
      v11 = v4 + 2;
      if (v4 + 2 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v4 + 3;
      if (v4 + 3 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v4 + 4;
      if (v4 + 4 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v4 + 5;
      if (v4 + 5 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
      {
LABEL_14:
        v9 = v11;
      }
      else
      {
        v9 = v4 + 6;
        if (v4 + 6 >= v6)
          goto LABEL_24;
        v10 = *(_QWORD *)(v3 + 8 * v9);
        if (!v10)
        {
          v13 = v4 + 7;
          while (v13 < v6)
          {
            v10 = *(_QWORD *)(v3 + 8 * v13++);
            if (v10)
            {
              v9 = v13 - 1;
              goto LABEL_15;
            }
          }
LABEL_24:
          swift_release();
          return v19;
        }
      }
    }
LABEL_15:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v9 << 6);
    v4 = v9;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  sub_22101763C((uint64_t)v15, &qword_255667DB8);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2212B3FA8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];

  sub_221054AAC();
  v25 = sub_2212F5214();
  sub_2212B7FD0(a1, v26);
  v4 = v26[0];
  v5 = v26[1];
  v6 = v26[3];
  v7 = v26[4];
  v8 = (unint64_t)(v26[2] + 64) >> 6;
  OUTLINED_FUNCTION_92_2();
  if (!v7)
    goto LABEL_3;
LABEL_2:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v10 = v9 | (v6 << 6);
  while (1)
  {
    v14 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v10);
    sub_2211164A4(*(_QWORD *)(v4 + 56) + 32 * v10, (uint64_t)v23 + 8);
    LOBYTE(v23[0]) = v14;
    v21[0] = v23[0];
    v21[1] = v23[1];
    v22 = v24;
    v15 = sub_2212B4198((uint64_t)&v25, (unsigned __int8 *)v21, a2);
    OUTLINED_FUNCTION_83_5(v15, v16);
    if (v7)
      goto LABEL_2;
LABEL_3:
    v11 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v11 >= v8)
      goto LABEL_24;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    if (!v12)
    {
      v13 = v6 + 2;
      if (v6 + 2 >= v8)
        goto LABEL_24;
      v12 = *(_QWORD *)(v5 + 8 * v13);
      if (v12)
        goto LABEL_14;
      v13 = v6 + 3;
      if (v6 + 3 >= v8)
        goto LABEL_24;
      v12 = *(_QWORD *)(v5 + 8 * v13);
      if (v12)
        goto LABEL_14;
      v13 = v6 + 4;
      if (v6 + 4 >= v8)
        goto LABEL_24;
      v12 = *(_QWORD *)(v5 + 8 * v13);
      if (v12)
        goto LABEL_14;
      v13 = v6 + 5;
      if (v6 + 5 >= v8)
        goto LABEL_24;
      v12 = *(_QWORD *)(v5 + 8 * v13);
      if (v12)
      {
LABEL_14:
        v11 = v13;
      }
      else
      {
        v11 = v6 + 6;
        if (v6 + 6 >= v8)
          goto LABEL_24;
        v12 = *(_QWORD *)(v5 + 8 * v11);
        if (!v12)
        {
          v17 = v6 + 7;
          while (v17 < v8)
          {
            v12 = *(_QWORD *)(v5 + 8 * v17++);
            if (v12)
            {
              v11 = v17 - 1;
              goto LABEL_15;
            }
          }
LABEL_24:
          swift_release();
          return v25;
        }
      }
    }
LABEL_15:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v11 << 6);
    v6 = v11;
  }
  __break(1u);
  v19 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_83_5(v19, v20);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2212B4198(uint64_t a1, unsigned __int8 *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  void *v24;
  uint64_t v25;
  _OWORD v26[2];
  _OWORD v27[2];
  uint64_t v28;

  v7 = type metadata accessor for SKLogger();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_1_1();
  v9 = *a2;
  sub_2211164A4((uint64_t)(a2 + 8), (uint64_t)v26);
  sub_2212B8008(v26, v27);
  OUTLINED_FUNCTION_90_7();
  sub_221054AAC();
  if (swift_dynamicCast())
  {
    v10 = a3(v9);
    v12 = v11;
    v13 = v24;
    sub_2212B767C((uint64_t)v13, v10, v12, sub_2212B7738);

    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_255655C08 != -1)
      swift_once();
    v14 = __swift_project_value_buffer(v7, (uint64_t)qword_25568CE88);
    sub_22103F99C(v14, v4);
    v25 = 0;
    *(_QWORD *)&v26[0] = 0xE000000000000000;
    sub_2212F5964();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_90_7();
    sub_2212F53B8();
    sub_2212F540C();
    swift_bridgeObjectRelease();
    sub_2212F540C();
    v15 = sub_2212F57F0();
    swift_bridgeObjectRetain_n();
    v16 = sub_2212F2C1C();
    v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v28 = v3;
      v25 = v19;
      *(_DWORD *)v18 = 136446466;
      sub_221115C44(0, 0xE000000000000000, &v25);
      OUTLINED_FUNCTION_73_11();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      v20 = OUTLINED_FUNCTION_40_10();
      sub_221115C44(v20, v21, v22);
      OUTLINED_FUNCTION_73_11();
      OUTLINED_FUNCTION_86_6();
      _os_log_impl(&dword_221005000, v16, v17, "%{public}s%{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_2_4();
    }

    OUTLINED_FUNCTION_86_6();
    sub_22105A598(v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_2212B4494(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v4 = type metadata accessor for SKLogger();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a2;
  sub_2211164A4((uint64_t)(a2 + 8), (uint64_t)v24);
  sub_2212B8008(v24, v25);
  sub_2211164A4((uint64_t)v25, (uint64_t)&v23);
  sub_221054AAC();
  v8 = MEMORY[0x24BEE4AD8];
  if (swift_dynamicCast())
    __asm { BR              X10 }
  if (qword_255655C08 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v4, (uint64_t)qword_25568CE88);
  sub_22103F99C(v9, (uint64_t)v6);
  v23 = 0;
  *(_QWORD *)&v24[0] = 0xE000000000000000;
  sub_2212F5964();
  swift_bridgeObjectRelease();
  v21 = 0xD000000000000018;
  v22 = 0x80000002212FB0E0;
  sub_2211164A4((uint64_t)v25, (uint64_t)&v23);
  v10 = v8 + 8;
  sub_2212F53B8();
  sub_2212F540C();
  swift_bridgeObjectRelease();
  sub_2212F540C();
  v11 = v21;
  v12 = v22;
  v13 = sub_2212F57F0();
  swift_bridgeObjectRetain_n();
  v14 = sub_2212F2C1C();
  v15 = v13;
  if (os_log_type_enabled(v14, v13))
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v26 = v2;
    v18 = v17;
    v23 = v17;
    *(_DWORD *)v16 = 136446466;
    v20 = v10;
    v21 = sub_221115C44(0, 0xE000000000000000, &v23);
    sub_2212F5898();
    *(_WORD *)(v16 + 12) = 2082;
    swift_bridgeObjectRetain();
    v21 = sub_221115C44(v11, v12, &v23);
    sub_2212F5898();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_221005000, v14, v15, "%{public}s%{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22766BBA8](v18, -1, -1);
    MEMORY[0x22766BBA8](v16, -1, -1);
    swift_bridgeObjectRelease();

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_22105A598((uint64_t)v6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

void sub_2212B486C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4, uint64_t a5, void (*a6)(_OWORD *))
{
  _OWORD v10[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_2212B8008((_OWORD *)a1, v10);
    sub_2212B75F0();
  }
  else
  {
    sub_22101763C(a1, &qword_255661370);
    sub_2212B72F0(a2, a3, a4, a6, v10);
    sub_22101763C((uint64_t)v10, &qword_255661370);
  }
}

void sub_2212B491C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  __swift_instantiateConcreteTypeFromMangledName(&dword_255659CE0);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_20_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659B70);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_36_2();
  if (__swift_getEnumTagSinglePayload(a1, 1, v10) == 1)
  {
    sub_22101763C(a1, &dword_255659CE0);
    sub_2212B7198(a2, a3, v3);
    OUTLINED_FUNCTION_63();
    v11 = OUTLINED_FUNCTION_40_10();
    sub_22101763C(v11, v12);
  }
  else
  {
    sub_22119F59C(a1, v4, &qword_255659B70);
    sub_2212B7574(v4, a2, a3);
    OUTLINED_FUNCTION_63();
  }
}

uint64_t sub_2212B4A08(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_20_29 + 4
                                                                                                 * byte_221318BD8[a1]))(0x7542646568736168, 0xEE004449656C646ELL);
}

void sub_2212B4A4C()
{
  OUTLINED_FUNCTION_91();
}

unint64_t sub_2212B4A7C()
{
  return 0xD000000000000016;
}

void sub_2212B4A98(uint64_t a1, unint64_t a2, int a3)
{
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = MEMORY[0x24BEE4B00];
  v6 = (void *)objc_opt_self();
  OUTLINED_FUNCTION_92_2();
  v7 = objc_msgSend(v6, sel_mainBundle);
  v8 = objc_msgSend(v7, sel_bundleIdentifier);

  if (v8)
  {
    sub_2212F537C();

    v9 = OUTLINED_FUNCTION_40_10();
    sub_22108CF9C(v9, v10);
    v12 = v11;
    v14 = v13;
    swift_bridgeObjectRelease();
    v8 = (id)sub_2212F2AA8();
    v16 = v15;
    sub_221054AE8(v12, v14);
  }
  else
  {
    v16 = 0xE000000000000000;
  }
  OUTLINED_FUNCTION_84_0();
  v17 = MEMORY[0x24BEE0D00];
  v32 = MEMORY[0x24BEE0D00];
  v30 = (uint64_t)v8;
  v31 = v16;
  OUTLINED_FUNCTION_27_29((uint64_t)&v30, v18, sub_2211D3578, &qword_255667D50, (uint64_t)&unk_24E706118, (void (*)(_OWORD *))sub_2212B8054);
  if (a2)
  {
    OUTLINED_FUNCTION_92_2();
    sub_22108CF9C(a1, a2);
    v22 = v21;
    v24 = v23;
    v25 = sub_2212F2AA8();
    v27 = v26;
    sub_221054AE8(v22, v24);
    OUTLINED_FUNCTION_84_0();
    v32 = v17;
    v30 = v25;
    v31 = v27;
    OUTLINED_FUNCTION_41_12((uint64_t)&v30, v28, sub_2211D3578, &qword_255667D50, (uint64_t)&unk_24E706118, (void (*)(_OWORD *))sub_2212B8054);
  }
  v29 = MEMORY[0x24BEE1328];
  if (a3 != 2)
  {
    v32 = MEMORY[0x24BEE1328];
    LOBYTE(v30) = a3 & 1;
    OUTLINED_FUNCTION_26_27((uint64_t)&v30, v20, sub_2211D3578, &qword_255667D50, (uint64_t)&unk_24E706118, (void (*)(_OWORD *))sub_2212B8054);
  }
  if ((a3 & 0xFF00) != 0x200)
  {
    v32 = v29;
    LOBYTE(v30) = BYTE1(a3) & 1;
    OUTLINED_FUNCTION_40_13((uint64_t)&v30, v20, sub_2211D3578, &qword_255667D50, (uint64_t)&unk_24E706118, (void (*)(_OWORD *))sub_2212B8054);
  }
  if ((a3 & 0xFF0000) != 0x20000)
  {
    v32 = v29;
    LOBYTE(v30) = BYTE2(a3) & 1;
    OUTLINED_FUNCTION_77_8((uint64_t)&v30, v20, sub_2211D3578, &qword_255667D50, (uint64_t)&unk_24E706118, (void (*)(_OWORD *))sub_2212B8054);
  }
  OUTLINED_FUNCTION_43_17(v19, (uint64_t (*)(uint64_t))sub_2212B4A08);
  OUTLINED_FUNCTION_4_47();
  OUTLINED_FUNCTION_1_21();
}

void *sub_2212B4D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[14];
  char v16;
  char v17;
  uint64_t v18;
  char v19;

  v14 = MEMORY[0x24BEE4B00];
  OUTLINED_FUNCTION_1_60(v0, (uint64_t)&v16);
  OUTLINED_FUNCTION_1_60((uint64_t)&v16, (uint64_t)&v17);
  if (v17 != 2)
  {
    v13 = MEMORY[0x24BEE1328];
    LOBYTE(v12[0]) = v17;
    OUTLINED_FUNCTION_27_29((uint64_t)v12, v1, sub_2211D358C, &qword_255667D98, (uint64_t)&unk_24E705EE0, (void (*)(_OWORD *))sub_2212B8130);
  }
  v2 = *(unsigned __int8 *)(v0 + 1) + 1;
  v3 = MEMORY[0x24BEE1768];
  v13 = MEMORY[0x24BEE1768];
  v12[0] = v2;
  OUTLINED_FUNCTION_2_59((uint64_t)v12, 1);
  OUTLINED_FUNCTION_34_22();
  OUTLINED_FUNCTION_2_59(v4, 2);
  OUTLINED_FUNCTION_1_60(v0 + 8, (uint64_t)v15);
  OUTLINED_FUNCTION_1_60((uint64_t)v15, (uint64_t)&v18);
  if ((v19 & 1) == 0)
  {
    v13 = v3;
    v12[0] = v18;
    OUTLINED_FUNCTION_40_13((uint64_t)v12, v5, sub_2211D358C, &qword_255667D98, (uint64_t)&unk_24E705EE0, (void (*)(_OWORD *))sub_2212B8130);
  }
  OUTLINED_FUNCTION_88_9();
  OUTLINED_FUNCTION_2_59(v6, 4);
  OUTLINED_FUNCTION_88_9();
  OUTLINED_FUNCTION_2_59(v7, 5);
  OUTLINED_FUNCTION_34_22();
  OUTLINED_FUNCTION_2_59(v8, 7);
  OUTLINED_FUNCTION_34_22();
  OUTLINED_FUNCTION_2_59(v9, 6);
  OUTLINED_FUNCTION_43_17(v10, (uint64_t (*)(uint64_t))sub_2212B585C);
  OUTLINED_FUNCTION_4_47();
  return &unk_255667D18;
}

uint64_t *sub_2212B4ED8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v11 = MEMORY[0x24BEE4B00];
  v1 = type metadata accessor for MintDisappearBaseEvent(0);
  v2 = *((unsigned __int8 *)v0 + *(int *)(v1 + 24));
  if (*((_BYTE *)v0 + *(int *)(v1 + 28)) != 1)
  {
    if ((_DWORD)v2 == 4)
    {
      v4 = MEMORY[0x24BEE1328];
      v10 = MEMORY[0x24BEE1328];
      LOBYTE(v9[0]) = 0;
      OUTLINED_FUNCTION_0_73((uint64_t)v9, 0);
      v10 = v4;
      LOBYTE(v9[0]) = 0;
    }
    else
    {
      v5 = MEMORY[0x24BEE1328];
      v10 = MEMORY[0x24BEE1328];
      LOBYTE(v9[0]) = 1;
      OUTLINED_FUNCTION_0_73((uint64_t)v9, 0);
      v10 = v5;
      LOBYTE(v9[0]) = (_DWORD)v2 == 1;
    }
    v0 = &v11;
    v3 = 1;
    goto LABEL_8;
  }
  if ((_DWORD)v2 != 4)
  {
    v10 = MEMORY[0x24BEE1768];
    v9[0] = v2 + 1;
    v0 = &v11;
    v3 = 3;
LABEL_8:
    sub_2212B486C((uint64_t)v9, v3, sub_2211D35A0, &qword_255667DC0, (uint64_t)&unk_24E705DB8, (void (*)(_OWORD *))sub_2212B81C8);
  }
  OUTLINED_FUNCTION_82_9();
  v10 = MEMORY[0x24BEE13C8];
  v9[0] = v6;
  OUTLINED_FUNCTION_26_27((uint64_t)v9, v7, sub_2211D35A0, &qword_255667DC0, (uint64_t)&unk_24E705DB8, (void (*)(_OWORD *))sub_2212B81C8);
  sub_2212B3DA4(v11);
  OUTLINED_FUNCTION_4_47();
  return v0;
}

void sub_2212B50B4()
{
  OUTLINED_FUNCTION_32_9();
  sub_2212F5DF0();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_13_15();
}

uint64_t sub_2212B50E8(char a1)
{
  _BYTE v3[72];

  sub_2212F5DD8();
  sub_2211D28E8((uint64_t)v3, a1);
  return sub_2212F5E08();
}

void sub_2212B512C()
{
  OUTLINED_FUNCTION_32_9();
  sub_2212F5DE4();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_13_15();
}

void sub_2212B515C(uint64_t a1, void (*a2)(uint64_t))
{
  OUTLINED_FUNCTION_32_9();
  a2(a1);
  sub_2212F53DC();
  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_13_15();
}

void sub_2212B51A8()
{
  OUTLINED_FUNCTION_32_9();
  sub_2212F5DE4();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_13_15();
}

uint64_t sub_2212B51DC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_20_29_0
                                                                     + 4 * byte_221318BDD[a1]))(0xD000000000000018, 0x80000002212F6AE0);
}

uint64_t sub_2212B5218()
{
  return 0x64657463656C6573;
}

uint64_t sub_2212B523C()
{
  return 0x6573616863727570;
}

uint64_t sub_2212B5264(uint64_t a1)
{
  return a1 + 3;
}

uint64_t sub_2212B5298(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2212B52D0 + 4 * byte_221318BE5[a1]))(0xD000000000000011, 0x80000002212F6900);
}

void sub_2212B52D0()
{
  OUTLINED_FUNCTION_91();
}

uint64_t sub_2212B5320()
{
  return 0x6E6F634973657375;
}

void sub_2212B5338()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int *v8;
  int EnumTagSinglePayload;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_8_0();
  __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_36_2();
  v4 = sub_2212F4E00();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_20_0();
  v22 = MEMORY[0x24BEE4B00];
  v6 = MEMORY[0x24BEE1328];
  v21 = MEMORY[0x24BEE1328];
  LOBYTE(v20[0]) = 0;
  sub_2212B486C((uint64_t)v20, 0, sub_2211D35F0, &qword_255667D80, (uint64_t)&unk_24E705F70, (void (*)(_OWORD *))sub_2212B80F4);
  v7 = *v0;
  if (v7 != 2)
  {
    v21 = v6;
    LOBYTE(v20[0]) = v7 & 1;
    sub_2212B486C((uint64_t)v20, 1, sub_2211D35F0, &qword_255667D80, (uint64_t)&unk_24E705F70, (void (*)(_OWORD *))sub_2212B80F4);
  }
  v8 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  sub_22122EF40((uint64_t)&v0[v8[6]], v2);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v4);
  v10 = MEMORY[0x24BEE1768];
  if (EnumTagSinglePayload == 1)
  {
    sub_22101763C(v2, qword_2556595B8);
  }
  else
  {
    v11 = OUTLINED_FUNCTION_40_10();
    v12(v11);
    sub_2212B5F1C();
    v21 = v10;
    v20[0] = v13;
    sub_2212B486C((uint64_t)v20, 2, sub_2211D35F0, &qword_255667D80, (uint64_t)&unk_24E705F70, (void (*)(_OWORD *))sub_2212B80F4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  }
  v14 = v0[1] + 1;
  v21 = v10;
  v20[0] = v14;
  OUTLINED_FUNCTION_0_73((uint64_t)v20, 3);
  v15 = OUTLINED_FUNCTION_36_26(v8[7]);
  OUTLINED_FUNCTION_0_73(v15, 4);
  v16 = v0[v8[8]] + 1;
  v21 = v10;
  v20[0] = v16;
  OUTLINED_FUNCTION_0_73((uint64_t)v20, 5);
  v17 = OUTLINED_FUNCTION_36_26(v8[9]);
  OUTLINED_FUNCTION_0_73(v17, 6);
  v18 = OUTLINED_FUNCTION_36_26(v8[10]);
  OUTLINED_FUNCTION_0_73(v18, 7);
  OUTLINED_FUNCTION_43_17(v19, (uint64_t (*)(uint64_t))sub_2212B5298);
  OUTLINED_FUNCTION_4_47();
  OUTLINED_FUNCTION_19();
}

void sub_2212B5594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v1 = v0;
  v28 = MEMORY[0x24BEE4B00];
  v3 = (int *)type metadata accessor for MintViewBasePurchaseEvent(0);
  v4 = *(unsigned __int8 *)(v0 + v3[5]);
  if (v4 == 3)
  {
    v26 = 0u;
    v27 = 0u;
  }
  else
  {
    *((_QWORD *)&v27 + 1) = &unk_24E705D28;
    LOBYTE(v26) = v4;
  }
  OUTLINED_FUNCTION_27_29((uint64_t)&v26, v2, sub_2211D3604, &qword_255667D68, (uint64_t)&unk_24E706000, (void (*)(_OWORD *))sub_2212B80A4);
  v6 = (uint64_t *)(v0 + v3[9]);
  v7 = v6[1];
  if (v7)
  {
    v8 = *v6;
    swift_bridgeObjectRetain();
    sub_22108CF9C(v8, v7);
    v10 = v9;
    v12 = v11;
    swift_bridgeObjectRelease();
    v13 = sub_2212F2AA8();
    v15 = v14;
    sub_221054AE8(v10, v12);
    *((_QWORD *)&v27 + 1) = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v26 = v13;
    *((_QWORD *)&v26 + 1) = v15;
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  OUTLINED_FUNCTION_41_12((uint64_t)&v26, v5, sub_2211D3604, &qword_255667D68, (uint64_t)&unk_24E706000, (void (*)(_OWORD *))sub_2212B80A4);
  v17 = (uint64_t *)(v1 + v3[8]);
  v18 = MEMORY[0x24BEE1768];
  if ((v17[1] & 1) == 0)
  {
    v19 = *v17;
    *((_QWORD *)&v27 + 1) = MEMORY[0x24BEE1768];
    *(_QWORD *)&v26 = v19;
    OUTLINED_FUNCTION_26_27((uint64_t)&v26, v16, sub_2211D3604, &qword_255667D68, (uint64_t)&unk_24E706000, (void (*)(_OWORD *))sub_2212B80A4);
  }
  v20 = *(unsigned __int8 *)(v1 + v3[7]) + 1;
  *((_QWORD *)&v27 + 1) = v18;
  *(_QWORD *)&v26 = v20;
  OUTLINED_FUNCTION_0_73((uint64_t)&v26, 3);
  OUTLINED_FUNCTION_82_9();
  *((_QWORD *)&v27 + 1) = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v26 = v21;
  OUTLINED_FUNCTION_0_73((uint64_t)&v26, 4);
  if (*(_BYTE *)(v1 + v3[10]) != 2)
  {
    OUTLINED_FUNCTION_64_12();
    OUTLINED_FUNCTION_76_12((uint64_t)&v26, v23, sub_2211D3604, &qword_255667D68, (uint64_t)&unk_24E706000, (void (*)(_OWORD *))sub_2212B80A4);
  }
  if (*(_BYTE *)(v1 + v3[11]) != 2)
  {
    OUTLINED_FUNCTION_64_12();
    OUTLINED_FUNCTION_78_10((uint64_t)&v26, v24, sub_2211D3604, &qword_255667D68, (uint64_t)&unk_24E706000, (void (*)(_OWORD *))sub_2212B80A4);
  }
  if (*(_BYTE *)(v1 + v3[12]) != 2)
  {
    OUTLINED_FUNCTION_64_12();
    OUTLINED_FUNCTION_75_11((uint64_t)&v26, v25, sub_2211D3604, &qword_255667D68, (uint64_t)&unk_24E706000, (void (*)(_OWORD *))sub_2212B80A4);
  }
  OUTLINED_FUNCTION_43_17(v22, (uint64_t (*)(uint64_t))sub_2212B51DC);
  OUTLINED_FUNCTION_4_47();
  OUTLINED_FUNCTION_1_21();
}

uint64_t sub_2212B585C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_8_37
                                                                     + 4 * byte_221318BED[a1]))(0xD000000000000018, 0x80000002212F6A80);
}

uint64_t sub_2212B5898(uint64_t a1)
{
  return a1 - 2;
}

uint64_t *sub_2212B5914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[14];
  char v17;
  char v18;
  _BYTE v19[16];
  _BYTE v20[12];
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;

  v15 = MEMORY[0x24BEE4B00];
  OUTLINED_FUNCTION_1_60(v0, (uint64_t)&v26);
  OUTLINED_FUNCTION_1_60((uint64_t)&v26, (uint64_t)&v27);
  v1 = MEMORY[0x24BEE1768];
  if (v27 != 6)
  {
    OUTLINED_FUNCTION_16_35();
    OUTLINED_FUNCTION_27_29((uint64_t)v13, v2, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  }
  OUTLINED_FUNCTION_1_60(v0 + 1, (uint64_t)&v25);
  OUTLINED_FUNCTION_1_60((uint64_t)&v25, (uint64_t)&v28);
  if (v28 != 6)
  {
    OUTLINED_FUNCTION_16_35();
    OUTLINED_FUNCTION_41_12((uint64_t)v13, v3, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  }
  OUTLINED_FUNCTION_1_60(v0 + 2, (uint64_t)&v24);
  OUTLINED_FUNCTION_1_60((uint64_t)&v24, (uint64_t)&v29);
  if (v29 != 3)
  {
    OUTLINED_FUNCTION_16_35();
    OUTLINED_FUNCTION_26_27((uint64_t)v13, v4, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  }
  OUTLINED_FUNCTION_37_18();
  OUTLINED_FUNCTION_40_13((uint64_t)v13, v5, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  OUTLINED_FUNCTION_1_60(v0 + 4, (uint64_t)&v23);
  OUTLINED_FUNCTION_1_60((uint64_t)&v23, (uint64_t)&v30);
  if (v30 != 2)
  {
    OUTLINED_FUNCTION_37_18();
    OUTLINED_FUNCTION_77_8((uint64_t)v13, v6, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  }
  OUTLINED_FUNCTION_37_18();
  OUTLINED_FUNCTION_76_12((uint64_t)v13, v7, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  OUTLINED_FUNCTION_1_60(v0 + 6, (uint64_t)&v22);
  OUTLINED_FUNCTION_1_60((uint64_t)&v22, (uint64_t)&v31);
  if (v31 != 2)
  {
    OUTLINED_FUNCTION_37_18();
    OUTLINED_FUNCTION_78_10((uint64_t)v13, v8, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  }
  OUTLINED_FUNCTION_37_18();
  OUTLINED_FUNCTION_75_11((uint64_t)v13, v9, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  OUTLINED_FUNCTION_1_60(v0 + 8, (uint64_t)&v21);
  OUTLINED_FUNCTION_1_60((uint64_t)&v21, (uint64_t)&v32);
  if (v32 != 2)
  {
    OUTLINED_FUNCTION_37_18();
    sub_2212B486C((uint64_t)v13, 8, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  }
  OUTLINED_FUNCTION_16_35();
  sub_2212B486C((uint64_t)v13, 9, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  OUTLINED_FUNCTION_1_60(v0 + 16, (uint64_t)v20);
  OUTLINED_FUNCTION_1_60((uint64_t)v20, (uint64_t)&v33);
  if ((v34 & 1) == 0)
  {
    v14 = v1;
    v13[0] = v33;
    sub_2212B486C((uint64_t)v13, 10, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  }
  OUTLINED_FUNCTION_1_60(v0 + 32, (uint64_t)v19);
  OUTLINED_FUNCTION_1_60((uint64_t)v19, (uint64_t)&v35);
  if ((v36 & 1) == 0)
  {
    v14 = v1;
    v13[0] = v35;
    sub_2212B486C((uint64_t)v13, 11, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  }
  OUTLINED_FUNCTION_1_60(v0 + 41, (uint64_t)&v18);
  OUTLINED_FUNCTION_1_60((uint64_t)&v18, (uint64_t)&v37);
  if (v37 != 3)
  {
    OUTLINED_FUNCTION_16_35();
    sub_2212B486C((uint64_t)v13, 12, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  }
  OUTLINED_FUNCTION_1_60(v0 + 42, (uint64_t)&v17);
  OUTLINED_FUNCTION_1_60((uint64_t)&v17, (uint64_t)&v38);
  if (v38 != 3)
  {
    OUTLINED_FUNCTION_16_35();
    sub_2212B486C((uint64_t)v13, 13, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  }
  OUTLINED_FUNCTION_37_18();
  sub_2212B486C((uint64_t)v13, 14, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
  sub_22119F59C(v0 + 48, (uint64_t)v16, &qword_255667D28);
  sub_22119F59C((uint64_t)v16, (uint64_t)&v39, &qword_255667D28);
  v10 = v39;
  if (v39)
  {
    v10 = sub_2211E28A8();
    if (v11)
    {
      v14 = MEMORY[0x24BEE0D00];
      v13[0] = v10;
      v13[1] = v11;
      sub_2212B486C((uint64_t)v13, 15, sub_2211D3618, &qword_255667D38, (uint64_t)&unk_24E706260, (void (*)(_OWORD *))sub_2212B8018);
    }
  }
  OUTLINED_FUNCTION_43_17(v10, (uint64_t (*)(uint64_t))sub_2212B6630);
  OUTLINED_FUNCTION_4_47();
  return &v15;
}

void sub_2212B5E94(_DWORD *a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;

  *a1 = 3;
  v2 = (int *)type metadata accessor for PurchaseConfigurationEvent(0);
  v3 = (uint64_t)a1 + v2[8];
  v4 = sub_2212F4EB4();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  *(_QWORD *)((char *)a1 + v2[9]) = 0;
  sub_2212F2AE4();
  v5 = (_QWORD *)((char *)a1 + v2[11]);
  *v5 = 0;
  v5[1] = 0;
  v6 = (char *)a1 + v2[12];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  OUTLINED_FUNCTION_17_0();
}

void sub_2212B5F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  OUTLINED_FUNCTION_8_0();
  v1 = v0;
  v2 = type metadata accessor for SKLogger();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2212F4E00();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEA298];
  v8 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v25 - v12, v1, v6);
  sub_2212F4DC4();
  sub_221014E78((unint64_t *)&qword_255657368, v7, MEMORY[0x24BDEA2A8]);
  v14 = OUTLINED_FUNCTION_10_44();
  OUTLINED_FUNCTION_25_31((uint64_t)v11);
  if ((v14 & 1) != 0
    || (sub_2212F4DE8(), v15 = OUTLINED_FUNCTION_10_44(), OUTLINED_FUNCTION_25_31((uint64_t)v11), (v15 & 1) != 0)
    || (sub_2212F4DDC(), v16 = OUTLINED_FUNCTION_10_44(), OUTLINED_FUNCTION_25_31((uint64_t)v11), (v16 & 1) != 0))
  {
    OUTLINED_FUNCTION_25_31((uint64_t)v13);
  }
  else
  {
    sub_2212F4DD0();
    v17 = OUTLINED_FUNCTION_10_44();
    OUTLINED_FUNCTION_25_31((uint64_t)v11);
    OUTLINED_FUNCTION_25_31((uint64_t)v13);
    if ((v17 & 1) == 0)
    {
      if (qword_255655C08 != -1)
        swift_once();
      v18 = __swift_project_value_buffer(v2, (uint64_t)qword_25568CE88);
      sub_22103F99C(v18, (uint64_t)v5);
      v27 = 0;
      v28 = 0xE000000000000000;
      sub_2212F5964();
      swift_bridgeObjectRelease();
      v27 = 0xD00000000000001ALL;
      v28 = 0x80000002212FB090;
      sub_2212F4DF4();
      sub_2212F540C();
      OUTLINED_FUNCTION_84_0();
      v20 = v27;
      v19 = v28;
      v21 = sub_2212F57F0();
      swift_bridgeObjectRetain_n();
      v22 = sub_2212F2C1C();
      v23 = v21;
      if (os_log_type_enabled(v22, v21))
      {
        v24 = OUTLINED_FUNCTION_6_4();
        v27 = OUTLINED_FUNCTION_6_4();
        *(_DWORD *)v24 = 136446466;
        v26 = OUTLINED_FUNCTION_70_8();
        OUTLINED_FUNCTION_67_11();
        *(_WORD *)(v24 + 12) = 2082;
        OUTLINED_FUNCTION_92_2();
        v26 = sub_221115C44(v20, v19, &v27);
        OUTLINED_FUNCTION_67_11();
        OUTLINED_FUNCTION_18_10();
        _os_log_impl(&dword_221005000, v22, v23, "%{public}s%{public}s", (uint8_t *)v24, 0x16u);
        OUTLINED_FUNCTION_74_13();
        OUTLINED_FUNCTION_2_4();
      }

      OUTLINED_FUNCTION_18_10();
      sub_22105A598((uint64_t)v5);
    }
  }
  OUTLINED_FUNCTION_19();
}

uint64_t sub_2212B6254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[12];
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_8_0();
  v31 = v1;
  v32 = v2;
  v4 = v3;
  v5 = type metadata accessor for SKLogger();
  OUTLINED_FUNCTION_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_1_1();
  v7 = sub_2212F5028();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEA4E0];
  v9 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v25[-v13];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v25[-v13], v4, v7);
  sub_2212F5010();
  sub_221014E78(&qword_25565D228, v8, MEMORY[0x24BDEA4E8]);
  LOBYTE(v8) = OUTLINED_FUNCTION_14_42();
  OUTLINED_FUNCTION_17_38((uint64_t)v12);
  if ((v8 & 1) != 0)
  {
    OUTLINED_FUNCTION_17_38(v4);
    OUTLINED_FUNCTION_17_38((uint64_t)v14);
    return 0;
  }
  else
  {
    sub_2212F5004();
    v16 = OUTLINED_FUNCTION_14_42();
    OUTLINED_FUNCTION_17_38((uint64_t)v12);
    if ((v16 & 1) != 0)
    {
      OUTLINED_FUNCTION_17_38(v4);
      OUTLINED_FUNCTION_17_38((uint64_t)v14);
      return 1;
    }
    else
    {
      sub_2212F501C();
      v17 = OUTLINED_FUNCTION_14_42();
      OUTLINED_FUNCTION_17_38((uint64_t)v12);
      OUTLINED_FUNCTION_17_38((uint64_t)v14);
      if ((v17 & 1) != 0)
      {
        OUTLINED_FUNCTION_17_38(v4);
        return 2;
      }
      else
      {
        if (qword_255655C08 != -1)
          swift_once();
        v18 = __swift_project_value_buffer(v5, (uint64_t)qword_25568CE88);
        sub_22103F99C(v18, v0);
        v29 = 0;
        v30 = 0xE000000000000000;
        sub_2212F5964();
        sub_2212F540C();
        sub_2212F5A90();
        v20 = v29;
        v19 = v30;
        v21 = sub_2212F57F0();
        swift_bridgeObjectRetain_n();
        v22 = sub_2212F2C1C();
        if (os_log_type_enabled(v22, v21))
        {
          v23 = OUTLINED_FUNCTION_6_4();
          v26 = v21;
          v24 = v23;
          v27 = OUTLINED_FUNCTION_6_4();
          v29 = v27;
          *(_DWORD *)v24 = 136446466;
          v28 = OUTLINED_FUNCTION_70_8();
          OUTLINED_FUNCTION_68_10();
          *(_WORD *)(v24 + 12) = 2082;
          swift_bridgeObjectRetain();
          v28 = sub_221115C44(v20, v19, &v29);
          OUTLINED_FUNCTION_68_10();
          OUTLINED_FUNCTION_18_10();
          _os_log_impl(&dword_221005000, v22, (os_log_type_t)v26, "%{public}s%{public}s", (uint8_t *)v24, 0x16u);
          OUTLINED_FUNCTION_74_13();
          OUTLINED_FUNCTION_2_4();
        }

        OUTLINED_FUNCTION_18_10();
        OUTLINED_FUNCTION_17_38(v4);
        sub_22105A598(v0);
        return 3;
      }
    }
  }
}

uint64_t sub_2212B65A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212B65D4 + 4 * byte_221318BF5[a1]))(0x746E6572727563, 0xE700000000000000);
}

uint64_t sub_2212B65D4()
{
  return 0x646172676E776F64;
}

uint64_t sub_2212B65F0()
{
  return 0x61726773736F7263;
}

uint64_t sub_2212B660C()
{
  return 0x65646172677075;
}

uint64_t sub_2212B6620()
{
  return 7105633;
}

uint64_t sub_2212B6630(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2212B6668 + 4 * byte_221318BFA[a1]))(0xD000000000000012, 0x80000002212F6B10);
}

uint64_t sub_2212B6668(uint64_t a1)
{
  return a1 - 1;
}

void sub_2212B67AC()
{
  sub_2212B6C18();
}

void sub_2212B67B8(char *a1)
{
  sub_2210429C0(*a1);
}

void sub_2212B67C4()
{
  unsigned __int8 *v0;

  sub_2212B515C(*v0, (void (*)(uint64_t))sub_2212B4A08);
}

void sub_2212B67E4(uint64_t a1)
{
  char *v1;

  sub_2211D29A0(a1, *v1);
}

void sub_2212B67EC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_2211D2C10(a1, *v1);
}

void sub_2212B67F4(_BYTE *a1@<X8>)
{
  char v2;

  sub_2212B6C18();
  *a1 = v2;
}

void sub_2212B6828()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_29_21();
  *v0 = sub_2212B4A08(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2212B6848()
{
  sub_2212F5BBC();
  OUTLINED_FUNCTION_4_47();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2212B6884(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212B68C4 + 4 * byte_221318C0A[a1]))(0x6573616863727570, 0xEF64657472617453);
}

unint64_t sub_2212B68C4()
{
  return 0xD000000000000011;
}

void sub_2212B68F8(char *a1)
{
  sub_221042860(*a1);
}

uint64_t sub_2212B6904()
{
  char *v0;

  return sub_2212B50E8(*v0);
}

void sub_2212B690C(uint64_t a1)
{
  char *v1;

  sub_2211D28E8(a1, *v1);
}

void sub_2212B6914(uint64_t a1)
{
  char *v1;

  sub_2211D2BD4(a1, *v1);
}

void sub_2212B691C(_BYTE *a1@<X8>)
{
  char v2;

  sub_2212B6848();
  *a1 = v2;
}

void sub_2212B6948()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_29_21();
  *v0 = sub_2212B6884(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2212B6968()
{
  sub_2212B6AAC();
}

void sub_2212B6974(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_2210429B4(*a1, *a2);
}

void sub_2212B6980()
{
  unsigned __int8 *v0;

  sub_2212B515C(*v0, (void (*)(uint64_t))sub_2212B5298);
}

uint64_t sub_2212B69A0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_2211D2994(a1, *v1);
}

void sub_2212B69A8(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_2211D2C04(a1, *v1);
}

void sub_2212B69B0(_BYTE *a1@<X8>)
{
  char v2;

  sub_2212B6AAC();
  *a1 = v2;
}

void sub_2212B69E4()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_29_21();
  *v0 = sub_2212B5298(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2212B6A04()
{
  sub_2212B6AAC();
}

void sub_2212B6A10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_221042B3C(*a1, *a2);
}

void sub_2212B6A1C()
{
  unsigned __int8 *v0;

  sub_2212B515C(*v0, (void (*)(uint64_t))sub_2212B585C);
}

uint64_t sub_2212B6A3C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_2211D2A70(a1, *v1);
}

void sub_2212B6A44(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_2211D2C1C(a1, *v1);
}

void sub_2212B6A4C(_BYTE *a1@<X8>)
{
  char v2;

  sub_2212B6AAC();
  *a1 = v2;
}

void sub_2212B6A80()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_29_21();
  *v0 = sub_2212B585C(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2212B6AA0()
{
  sub_2212B6AAC();
}

void sub_2212B6AAC()
{
  OUTLINED_FUNCTION_42_19();
  OUTLINED_FUNCTION_4_47();
  OUTLINED_FUNCTION_6_0();
}

void sub_2212B6AD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_221042854(*a1, *a2);
}

void sub_2212B6AE0()
{
  unsigned __int8 *v0;

  sub_2212B515C(*v0, (void (*)(uint64_t))sub_2212B51DC);
}

uint64_t sub_2212B6B00(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_2211D28DC(a1, *v1);
}

void sub_2212B6B08(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_2211D2BC8(a1, *v1);
}

void sub_2212B6B10(_BYTE *a1@<X8>)
{
  char v2;

  sub_2212B6AAC();
  *a1 = v2;
}

void sub_2212B6B44()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_29_21();
  *v0 = sub_2212B51DC(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2212B6B64()
{
  sub_2212F5BBC();
  OUTLINED_FUNCTION_4_47();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2212B6BA0(unint64_t a1)
{
  if (a1 >= 5)
    return 4;
  else
    return (0x302010004uLL >> (8 * a1));
}

uint64_t sub_2212B6BC4(unint64_t a1)
{
  if (a1 >= 4)
    return 3;
  else
    return 0x2010003u >> (8 * a1);
}

uint64_t sub_2212B6BE4(unint64_t a1)
{
  if (a1 >= 7)
    return 6;
  else
    return (0x5040302010006uLL >> (8 * a1));
}

void sub_2212B6C0C()
{
  sub_2212B6C18();
}

void sub_2212B6C18()
{
  OUTLINED_FUNCTION_42_19();
  OUTLINED_FUNCTION_4_47();
  OUTLINED_FUNCTION_6_0();
}

uint64_t _s15StoreKit_Shared11MessageTypeO8rawValueACSgSi_tcfC_0(unint64_t a1)
{
  if (a1 >= 6)
    return 5;
  else
    return (0x40302010005uLL >> (8 * a1));
}

void sub_2212B6C64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_221042B48(*a1, *a2);
}

void sub_2212B6C70()
{
  unsigned __int8 *v0;

  sub_2212B515C(*v0, (void (*)(uint64_t))sub_2212B6630);
}

uint64_t sub_2212B6C90(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_2211D2A7C(a1, *v1);
}

void sub_2212B6C98(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_2211D2C58(a1, *v1);
}

void sub_2212B6CA0(_BYTE *a1@<X8>)
{
  char v2;

  sub_2212B6B64();
  *a1 = v2;
}

void sub_2212B6CCC()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_29_21();
  *v0 = sub_2212B6630(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

void sub_2212B6CEC()
{
  sub_2212B51A8();
}

void sub_2212B6D04()
{
  sub_2211D2B6C();
}

uint64_t sub_2212B6D0C@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_2212B6BA0(*a1);
  *a2 = result;
  return result;
}

void sub_2212B6D34()
{
  uint64_t *v0;
  unsigned __int8 v1;

  v1 = OUTLINED_FUNCTION_29_21();
  *v0 = sub_221221170(v1);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2212B6D54@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_2212B6BC4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2212B6D7C@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_2212B6BE4(*a1);
  *a2 = result;
  return result;
}

void sub_2212B6DA4(char *a1)
{
  sub_221042BC4(*a1);
}

void sub_2212B6DB0()
{
  unsigned __int8 *v0;

  sub_2212B515C(*v0, (void (*)(uint64_t))sub_2212B65A0);
}

void sub_2212B6DD0(uint64_t a1)
{
  char *v1;

  sub_2211D2AC4(a1, *v1);
}

void sub_2212B6DD8(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_2211D2C64(a1, *v1);
}

void sub_2212B6DE0(_BYTE *a1@<X8>)
{
  char v2;

  sub_2212B6C18();
  *a1 = v2;
}

void sub_2212B6E14()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_29_21();
  *v0 = sub_2212B65A0(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2212B6E34@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s15StoreKit_Shared11MessageTypeO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_2212B6E60()
{
  unint64_t result;

  result = qword_255667CC0;
  if (!qword_255667CC0)
  {
    result = MEMORY[0x22766BAC4](&unk_221318E6C, &unk_24E705D28);
    atomic_store(result, (unint64_t *)&qword_255667CC0);
  }
  return result;
}

unint64_t sub_2212B6EA0()
{
  unint64_t result;

  result = qword_255667CC8;
  if (!qword_255667CC8)
  {
    result = MEMORY[0x22766BAC4](&unk_221318F0C, &unk_24E705C98);
    atomic_store(result, (unint64_t *)&qword_255667CC8);
  }
  return result;
}

unint64_t sub_2212B6EE0()
{
  unint64_t result;

  result = qword_255667CD0;
  if (!qword_255667CD0)
  {
    result = MEMORY[0x22766BAC4](&unk_221318FAC, &unk_24E705BE8);
    atomic_store(result, (unint64_t *)&qword_255667CD0);
  }
  return result;
}

unint64_t sub_2212B6F20()
{
  unint64_t result;

  result = qword_255667CD8;
  if (!qword_255667CD8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131904C, &unk_24E705B58);
    atomic_store(result, (unint64_t *)&qword_255667CD8);
  }
  return result;
}

unint64_t sub_2212B6F60()
{
  unint64_t result;

  result = qword_255667CE0;
  if (!qword_255667CE0)
  {
    result = MEMORY[0x22766BAC4](&unk_2213190EC, &unk_24E705AC8);
    atomic_store(result, (unint64_t *)&qword_255667CE0);
  }
  return result;
}

unint64_t sub_2212B6FA0()
{
  unint64_t result;

  result = qword_255667CE8;
  if (!qword_255667CE8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131918C, &unk_24E705A18);
    atomic_store(result, (unint64_t *)&qword_255667CE8);
  }
  return result;
}

unint64_t sub_2212B6FE0()
{
  unint64_t result;

  result = qword_255667CF0;
  if (!qword_255667CF0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131922C, &unk_24E705988);
    atomic_store(result, (unint64_t *)&qword_255667CF0);
  }
  return result;
}

unint64_t sub_2212B7020()
{
  unint64_t result;

  result = qword_255667CF8;
  if (!qword_255667CF8)
  {
    result = MEMORY[0x22766BAC4](&unk_2213192CC, &unk_24E7058F8);
    atomic_store(result, (unint64_t *)&qword_255667CF8);
  }
  return result;
}

unint64_t sub_2212B7060()
{
  unint64_t result;

  result = qword_255667D00;
  if (!qword_255667D00)
  {
    result = MEMORY[0x22766BAC4](&unk_22131936C, &unk_24E705868);
    atomic_store(result, (unint64_t *)&qword_255667D00);
  }
  return result;
}

void sub_2212B709C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;

  v1 = v0;
  v2 = sub_2212F4EB4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x24BDEA370] || v7 != *MEMORY[0x24BDEA360] && v7 != *MEMORY[0x24BDEA368])
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  OUTLINED_FUNCTION_17_0();
}

uint64_t type metadata accessor for PurchaseConfigurationEvent(uint64_t a1)
{
  return sub_22100CA0C(a1, (uint64_t *)&unk_255668018);
}

uint64_t sub_2212B7198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_2211D351C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v14 = *v4;
    *v4 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255667DA8);
    sub_2212F5AA8();
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v14 + 56);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659B70);
    sub_22119F59C(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v8, a3, &qword_255659B70);
    sub_2212F5AC0();
    *v4 = v14;
    swift_bridgeObjectRelease();
    return __swift_storeEnumTagSinglePayload(a3, 0, 1, v11);
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659B70);
    return __swift_storeEnumTagSinglePayload(a3, 1, 1, v13);
  }
}

double sub_2212B72F0@<D0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t *a3@<X2>, void (*a4)(_OWORD *)@<X3>, _OWORD *a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v9;
  uint64_t v12;
  char v13;
  _OWORD *v14;
  double result;
  uint64_t v16;

  v9 = v5;
  swift_bridgeObjectRetain();
  v12 = a2(a1);
  LOBYTE(a1) = v13;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_87_6();
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_2212F5AA8();
    v14 = sub_2212B8008((_OWORD *)(*(_QWORD *)(v16 + 56) + 32 * v12), a5);
    a4(v14);
    sub_2212F5AC0();
    *v9 = v16;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a5 = 0u;
    a5[1] = 0u;
  }
  return result;
}

uint64_t sub_2212B7410(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_2211D368C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_87_6();
  __swift_instantiateConcreteTypeFromMangledName(qword_2556680B0);
  sub_2212F5AA8();
  sub_22116E7BC(*(_QWORD *)(v8 + 48) + 40 * v4);
  v6 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 24 * v4);
  sub_2212F5AC0();
  *v2 = v8;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2212B751C(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v8;

  OUTLINED_FUNCTION_60_11();
  OUTLINED_FUNCTION_13_45();
  sub_2212B795C(a1, a2, a3);
  *v3 = v8;
  return OUTLINED_FUNCTION_7_55();
}

uint64_t sub_2212B7574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v3;
  *v3 = 0x8000000000000000;
  sub_2212B7A6C(a1, a2, a3);
  *v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2212B75F0()
{
  _QWORD *v0;
  uint64_t v2;

  OUTLINED_FUNCTION_60_11();
  OUTLINED_FUNCTION_13_45();
  sub_2212B784C();
  *v0 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2212B7670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2212B767C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_2212B7B90);
}

uint64_t sub_2212B767C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v10;

  OUTLINED_FUNCTION_60_11();
  OUTLINED_FUNCTION_13_45();
  a4(a1, a2, a3);
  *v4 = v10;
  return OUTLINED_FUNCTION_7_55();
}

uint64_t sub_2212B76D8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  _QWORD *v4;
  char v8;
  uint64_t v10;

  v8 = a3 & 1;
  OUTLINED_FUNCTION_60_11();
  OUTLINED_FUNCTION_13_45();
  sub_2212B7CA4(a1, a2, v8, a4);
  *v4 = v10;
  return OUTLINED_FUNCTION_7_55();
}

void sub_2212B7738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_2211D351C(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255657FF8);
  if ((sub_2212F5AA8() & 1) == 0)
    goto LABEL_5;
  v13 = sub_2211D351C(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    sub_2212F5D3C();
    __break(1u);
    return;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];

    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_2212B7DDC(v11, a2, a3, a1, v15);
    swift_bridgeObjectRetain();
  }
}

void sub_2212B784C()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  _QWORD **v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  _OWORD *v18;

  OUTLINED_FUNCTION_8_0();
  v2 = v1;
  v4 = v3;
  v5 = (_QWORD **)v0;
  v7 = v6;
  v9 = v8;
  v10 = (_QWORD *)*v0;
  v11 = v3(v6);
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v11;
  v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName(v2);
  if ((sub_2212F5AA8() & 1) == 0)
    goto LABEL_5;
  v15 = v4(v7);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    sub_2212F5D3C();
    __break(1u);
    return;
  }
  v13 = v15;
LABEL_5:
  v17 = *v5;
  if ((v14 & 1) != 0)
  {
    v18 = (_OWORD *)(v17[7] + 32 * v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    sub_2212B8008(v9, v18);
  }
  else
  {
    sub_2212B7F08(v13, v7, v9, v17);
  }
}

uint64_t sub_2212B795C(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  _QWORD *v15;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_2211D351C(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556680A8);
  result = sub_2212F5AA8();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_2211D351C(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_2212F5D3C();
    __break(1u);
    return result;
  }
  v11 = result;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    *(_BYTE *)(v15[7] + v11) = a1 & 1;
  }
  else
  {
    sub_2212B7E24(v11, a2, a3, a1 & 1, v15);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2212B7A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_2211D351C(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255667DA8);
  if ((sub_2212F5AA8() & 1) == 0)
    goto LABEL_5;
  v13 = sub_2211D351C(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_2212F5D3C();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];
    v17 = v16
        + *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255659B70) - 8) + 72) * v11;
    return sub_2212B816C(a1, v17);
  }
  else
  {
    sub_2212B7E6C(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_2212B7B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_2211D351C(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255667DB0);
  if ((sub_2212F5AA8() & 1) == 0)
    goto LABEL_5;
  v13 = sub_2211D351C(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_2212F5D3C();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_2212B7DDC(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_2212B7CA4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  int v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t result;
  _BYTE v21[40];

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v11 = sub_2211D368C(a4);
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v13 = v11;
  v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName(qword_2556680B0);
  if ((sub_2212F5AA8() & 1) == 0)
    goto LABEL_5;
  v15 = sub_2211D368C(a4);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_10:
    result = sub_2212F5D3C();
    __break(1u);
    return result;
  }
  v13 = v15;
LABEL_5:
  v17 = a3 & 1;
  v18 = *v5;
  if ((v14 & 1) != 0)
  {
    v19 = v18[7] + 24 * v13;
    result = sub_221015344(*(_QWORD *)v19, *(_QWORD *)(v19 + 8), *(_BYTE *)(v19 + 16));
    *(_QWORD *)v19 = a1;
    *(_QWORD *)(v19 + 8) = a2;
    *(_BYTE *)(v19 + 16) = v17 != 0;
  }
  else
  {
    sub_221014E3C(a4, (uint64_t)v21);
    return sub_2212B7F68(v13, (uint64_t)v21, a1, a2, v17, v18);
  }
  return result;
}

unint64_t sub_2212B7DDC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_2212B7E24(unint64_t result, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_BYTE *)(a5[7] + result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

void sub_2212B7E6C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659B70);
  sub_22119F59C(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, &qword_255659B70);
  v11 = a5[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a5[2] = v13;
}

void sub_2212B7F08(unint64_t a1, char a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  sub_2212B8008(a3, (_OWORD *)(a4[7] + 32 * a1));
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    a4[2] = v7;
    OUTLINED_FUNCTION_6_0();
  }
}

unint64_t sub_2212B7F68(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _QWORD *a6)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = a6[6] + 40 * result;
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 16) = v7;
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(a2 + 32);
  v8 = a6[7] + 24 * result;
  *(_QWORD *)v8 = a3;
  *(_QWORD *)(v8 + 8) = a4;
  *(_BYTE *)(v8 + 16) = a5 & 1;
  v9 = a6[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a6[2] = v11;
  return result;
}

uint64_t sub_2212B7FD0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

_OWORD *sub_2212B8008(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_2212B8018()
{
  unint64_t result;

  result = qword_255667D40;
  if (!qword_255667D40)
  {
    result = MEMORY[0x22766BAC4](&unk_221319918, &unk_24E706260);
    atomic_store(result, (unint64_t *)&qword_255667D40);
  }
  return result;
}

unint64_t sub_2212B8054()
{
  unint64_t result;

  result = qword_255667D58;
  if (!qword_255667D58)
  {
    result = MEMORY[0x22766BAC4](&unk_2213198D8, &unk_24E706118);
    atomic_store(result, (unint64_t *)&qword_255667D58);
  }
  return result;
}

uint64_t type metadata accessor for MintViewBasePurchaseEvent(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_255667F68);
}

unint64_t sub_2212B80A4()
{
  unint64_t result;

  result = qword_255667D70;
  if (!qword_255667D70)
  {
    result = MEMORY[0x22766BAC4](&unk_221319898, &unk_24E706000);
    atomic_store(result, (unint64_t *)&qword_255667D70);
  }
  return result;
}

uint64_t type metadata accessor for ProductViewBaseEvent(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_255667EC0);
}

unint64_t sub_2212B80F4()
{
  unint64_t result;

  result = qword_255667D88;
  if (!qword_255667D88)
  {
    result = MEMORY[0x22766BAC4](&unk_221319858, &unk_24E705F70);
    atomic_store(result, (unint64_t *)&qword_255667D88);
  }
  return result;
}

unint64_t sub_2212B8130()
{
  unint64_t result;

  result = qword_255667DA0;
  if (!qword_255667DA0)
  {
    result = MEMORY[0x22766BAC4](&unk_221319818, &unk_24E705EE0);
    atomic_store(result, (unint64_t *)&qword_255667DA0);
  }
  return result;
}

uint64_t sub_2212B816C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659B70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MintDisappearBaseEvent(uint64_t a1)
{
  return sub_22100CA0C(a1, qword_255667E28);
}

unint64_t sub_2212B81C8()
{
  unint64_t result;

  result = qword_255667DC8;
  if (!qword_255667DC8)
  {
    result = MEMORY[0x22766BAC4](&unk_2213197D8, &unk_24E705DB8);
    atomic_store(result, (unint64_t *)&qword_255667DC8);
  }
  return result;
}

uint64_t sub_2212B8204(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_59_15(-1);
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_59_15((*a1 | (v4 << 8)) - 4);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_59_15((*a1 | (v4 << 8)) - 4);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_59_15((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_59_15(v8);
}

uint64_t sub_2212B8288(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2212B82D4 + 4 * byte_221318C13[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_55_12_0 + 4 * byte_221318C0E[v4]))();
}

uint64_t sub_2212B830C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212B8314);
  return result;
}

_BYTE *sub_2212B831C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212B8324);
  return OUTLINED_FUNCTION_10_26((_BYTE *)a1, a2 + 3);
}

void type metadata accessor for MintDisappearBaseEvent.PayloadKey()
{
  OUTLINED_FUNCTION_31_2();
}

_QWORD *sub_2212B8340(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2212F2AF0();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((_QWORD *)((char *)a1 + a3[5]), (_QWORD *)((char *)a2 + a3[5]), v7);
    v9 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
  }
  return a1;
}

uint64_t sub_2212B83F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_2212F2AF0();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_2212B8458(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_2212F2AF0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_2212B84DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_2212F2AF0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_2212B8564(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_2212F2AF0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_2212B85E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_2212F2AF0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_2212B866C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2212B8678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v7;

  v6 = OUTLINED_FUNCTION_37();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    OUTLINED_FUNCTION_4_0(a1, a2, v6);
  }
  else
  {
    v7 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v7 >= 2)
      OUTLINED_FUNCTION_81_8(v7);
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t sub_2212B86E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2212B86EC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_11_5();
  if (v7)
  {
    OUTLINED_FUNCTION_35_19();
    OUTLINED_FUNCTION_3_1(v8, v9, v10, v11);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t sub_2212B8740()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F2AF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy35_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_2212B87D0(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 35))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 2);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2212B881C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 35) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 35) = 0;
    if (a2)
      *(_BYTE *)(result + 2) = a2 + 1;
  }
  return result;
}

void type metadata accessor for StoreViewBaseEvent()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for StoreViewBaseEvent.PayloadKey()
{
  OUTLINED_FUNCTION_31_2();
}

void type metadata accessor for ProductViewBaseEvent.PayloadKey()
{
  OUTLINED_FUNCTION_31_2();
}

_QWORD *sub_2212B8894(_WORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2212F4E00();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v13 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)v4 + v13) = *((_BYTE *)a2 + v13);
    v14 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)v4 + v14) = *((_BYTE *)a2 + v14);
  }
  return v4;
}

uint64_t sub_2212B89A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_2212F4E00();
  result = __swift_getEnumTagSinglePayload(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return result;
}

_WORD *sub_2212B8A00(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2212F4E00();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v12 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  return a1;
}

_BYTE *sub_2212B8AE4(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2212F4E00();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

_WORD *sub_2212B8C28(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2212F4E00();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v12 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  return a1;
}

_WORD *sub_2212B8D0C(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2212F4E00();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  v15 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  return a1;
}

uint64_t sub_2212B8E40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2212B8E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unsigned int v7;

  OUTLINED_FUNCTION_22_6();
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    OUTLINED_FUNCTION_4_0(v4 + *(int *)(a3 + 24), v3, v6);
  }
  else
  {
    v7 = *(unsigned __int8 *)(v4 + *(int *)(a3 + 28));
    if (v7 >= 2)
      OUTLINED_FUNCTION_81_8(v7);
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t sub_2212B8EBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2212B8EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_22_6();
  __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
  OUTLINED_FUNCTION_11_5();
  if (v7)
  {
    OUTLINED_FUNCTION_35_19();
    OUTLINED_FUNCTION_3_1(v8, v9, v10, v11);
  }
  else
  {
    *(_BYTE *)(v5 + *(int *)(a4 + 28)) = v4 + 1;
    OUTLINED_FUNCTION_17_0();
  }
}

void sub_2212B8F24()
{
  unint64_t v0;

  sub_221012758(319, qword_255664208, (void (*)(uint64_t))MEMORY[0x24BDEA298]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_2212B8FC0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_59_15(-1);
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_59_15((*a1 | (v4 << 8)) - 8);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_59_15((*a1 | (v4 << 8)) - 8);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_59_15((*a1 | (v4 << 8)) - 8);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_59_15(v8);
}

uint64_t sub_2212B9044(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2212B9090 + 4 * byte_221318C1D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_55_12_1 + 4 * byte_221318C18[v4]))();
}

uint64_t sub_2212B90C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212B90D0);
  return result;
}

_BYTE *sub_2212B90D8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212B90E0);
  return OUTLINED_FUNCTION_10_26((_BYTE *)a1, a2 + 7);
}

void type metadata accessor for MintViewBasePurchaseEvent.PayloadKey()
{
  OUTLINED_FUNCTION_31_2();
}

_QWORD *sub_2212B90FC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2212F2AF0();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v8((_QWORD *)((char *)a1 + v9), (_QWORD *)((char *)a2 + v9), v7);
    v10 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    *(_QWORD *)v11 = *(_QWORD *)v12;
    v11[8] = v12[8];
    v13 = a3[9];
    v14 = a3[10];
    v15 = (_QWORD *)((char *)a1 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    v18 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2212B91F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_2212F2AF0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 24), v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2212B925C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_2212F2AF0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  v9 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  v12 = a3[9];
  v13 = a3[10];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v17 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2212B932C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v6 = sub_2212F2AF0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7(a1 + a3[6], a2 + a3[6], v6);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v8 = a3[8];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = a3[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_2212B9420(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_2212F2AF0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  v9 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  v12 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  v13 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  return a1;
}

uint64_t sub_2212B94E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_2212F2AF0();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7(a1 + v8, a2 + v8, v6);
  v9 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  v12 = a3[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_2212B95BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2212B95C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_37();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    OUTLINED_FUNCTION_4_0(a1, a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_8_33(*(_QWORD *)(a1 + *(int *)(a3 + 36) + 8));
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t sub_2212B9624()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2212B9630(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_11_5();
  if (v7)
  {
    OUTLINED_FUNCTION_35_19();
    OUTLINED_FUNCTION_3_1(v8, v9, v10, v11);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 36) + 8) = a2;
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t sub_2212B9688()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F2AF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_2212B9724(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2212B975C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  return a1;
}

__n128 __swift_memcpy19_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_2212B97D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  return a1;
}

uint64_t sub_2212B9818(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 19))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2212B986C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 19) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 19) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for MintViewBaseEvent()
{
  OUTLINED_FUNCTION_31_2();
}

uint64_t sub_2212B98D0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_59_15(-1);
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_59_15((*a1 | (v4 << 8)) - 5);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_59_15((*a1 | (v4 << 8)) - 5);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_59_15((*a1 | (v4 << 8)) - 5);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_59_15(v8);
}

uint64_t sub_2212B9954(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2212B99A0 + 4 * byte_221318C27[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_55_12_2 + 4 * byte_221318C22[v4]))();
}

uint64_t sub_2212B99D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212B99E0);
  return result;
}

_BYTE *sub_2212B99E8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212B99F0);
  return OUTLINED_FUNCTION_10_26((_BYTE *)a1, a2 + 4);
}

void type metadata accessor for MintViewBaseEvent.PayloadKey()
{
  OUTLINED_FUNCTION_31_2();
}

uint64_t sub_2212B9A0C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2212B9A14(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2212B9A70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_BYTE *)(a1 + 6) = *(_BYTE *)(a2 + 6);
  *(_BYTE *)(a1 + 7) = *(_BYTE *)(a2 + 7);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v3 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  *(_BYTE *)(a1 + 43) = *(_BYTE *)(a2 + 43);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2212B9B30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_BYTE *)(a1 + 6) = *(_BYTE *)(a2 + 6);
  *(_BYTE *)(a1 + 7) = *(_BYTE *)(a2 + 7);
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  *(_BYTE *)(a1 + 43) = *(_BYTE *)(a2 + 43);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2212B9BD0(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 48);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2212B9C24(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 48) = a2;
  }
  return result;
}

void type metadata accessor for SubscriptionStoreViewBaseEvent()
{
  OUTLINED_FUNCTION_31_2();
}

uint64_t sub_2212B9C90(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF1)
  {
    if (a2 + 15 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 15) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 16;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v5 = v6 - 16;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_2212B9D18(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_2212B9D64 + 4 * byte_221318C31[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_2212B9D98 + 4 * byte_221318C2C[v4]))();
}

uint64_t sub_2212B9D98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212B9DA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212B9DA8);
  return result;
}

uint64_t sub_2212B9DB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212B9DBCLL);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_2212B9DC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212B9DC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SubscriptionStoreViewBaseEvent.PayloadKey()
{
  OUTLINED_FUNCTION_31_2();
}

uint64_t *sub_2212B9DE0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  char *v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a3[8];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2212F4EB4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565D220);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v13 = a3[9];
    v14 = *(void **)((char *)a2 + v13);
    v15 = v14;
    *(uint64_t *)((char *)v4 + v13) = (uint64_t)v14;
    v16 = a3[10];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_2212F2AF0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[11];
    v21 = a3[12];
    v22 = (uint64_t *)((char *)v4 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (char *)v4 + v21;
    v26 = (char *)a2 + v21;
    v25[8] = v26[8];
    *(_QWORD *)v25 = *(_QWORD *)v26;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2212B9F38(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + a2[8];
  v5 = sub_2212F4EB4();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  v6 = a1 + a2[10];
  v7 = sub_2212F2AF0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

_DWORD *sub_2212B9FD8(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;

  *a1 = *a2;
  v6 = a3[8];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2212F4EB4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565D220);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[9];
  v12 = *(void **)((char *)a2 + v11);
  v13 = v12;
  *(_QWORD *)((char *)a1 + v11) = v12;
  v14 = a3[10];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_2212F2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = a3[11];
  v19 = a3[12];
  v20 = (_QWORD *)((char *)a1 + v18);
  v21 = (_QWORD *)((char *)a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (char *)a1 + v19;
  v24 = (char *)a2 + v19;
  v23[8] = v24[8];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *sub_2212BA104(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v6 = a3[8];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2212F4EB4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565D220);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = a3[9];
  v15 = *(void **)&a1[v14];
  v16 = *(void **)&a2[v14];
  v17 = v16;
  *(_QWORD *)&a1[v14] = v16;

  v18 = a3[10];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_2212F2AF0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  v22 = a3[11];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[12];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = *(_QWORD *)v27;
  v26[8] = v27[8];
  *(_QWORD *)v26 = v28;
  return a1;
}

_DWORD *sub_2212BA2BC(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  *a1 = *a2;
  v6 = a3[8];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2212F4EB4();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565D220);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_2212F2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v16[8] = v17[8];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  return a1;
}

_BYTE *sub_2212BA3D0(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v6 = a3[8];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2212F4EB4();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565D220);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v14 = a3[9];
  v15 = *(void **)&a1[v14];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];

  v16 = a3[10];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_2212F2AF0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[11];
  v21 = &a1[v20];
  v22 = (uint64_t *)&a2[v20];
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[12];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  return a1;
}

uint64_t sub_2212BA56C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2212BA578(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_22_6();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565D220);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v3)
  {
    v7 = v6;
    v8 = a3[8];
  }
  else
  {
    if ((_DWORD)v3 == 2147483646)
    {
      OUTLINED_FUNCTION_8_33(*(_QWORD *)(v4 + a3[9]));
      OUTLINED_FUNCTION_17_0();
      return;
    }
    v7 = OUTLINED_FUNCTION_37();
    v8 = a3[10];
  }
  OUTLINED_FUNCTION_4_0(v4 + v8, v3, v7);
}

uint64_t sub_2212BA5F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2212BA600(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_22_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565D220);
  OUTLINED_FUNCTION_11_5();
  if (!v8)
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(v5 + *(int *)(a4 + 36)) = v4;
      OUTLINED_FUNCTION_17_0();
      return;
    }
    OUTLINED_FUNCTION_37();
  }
  OUTLINED_FUNCTION_35_19();
  OUTLINED_FUNCTION_3_1(v9, v10, v11, v12);
}

void sub_2212BA678()
{
  unint64_t v0;
  unint64_t v1;

  sub_221012758(319, qword_255668028, (void (*)(uint64_t))MEMORY[0x24BDEA378]);
  if (v0 <= 0x3F)
  {
    sub_2212F2AF0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_2212BA744()
{
  unint64_t result;

  result = qword_255668078;
  if (!qword_255668078)
  {
    result = MEMORY[0x22766BAC4](&unk_2213197B0, &unk_24E705DB8);
    atomic_store(result, (unint64_t *)&qword_255668078);
  }
  return result;
}

unint64_t sub_2212BA784()
{
  unint64_t result;

  result = qword_255668080;
  if (!qword_255668080)
  {
    result = MEMORY[0x22766BAC4](&unk_221319730, &unk_24E705EE0);
    atomic_store(result, (unint64_t *)&qword_255668080);
  }
  return result;
}

unint64_t sub_2212BA7C4()
{
  unint64_t result;

  result = qword_255668088;
  if (!qword_255668088)
  {
    result = MEMORY[0x22766BAC4](&unk_2213196D0, &unk_24E705F70);
    atomic_store(result, (unint64_t *)&qword_255668088);
  }
  return result;
}

unint64_t sub_2212BA804()
{
  unint64_t result;

  result = qword_255668090;
  if (!qword_255668090)
  {
    result = MEMORY[0x22766BAC4](&unk_221319660, &unk_24E706000);
    atomic_store(result, (unint64_t *)&qword_255668090);
  }
  return result;
}

unint64_t sub_2212BA844()
{
  unint64_t result;

  result = qword_255668098;
  if (!qword_255668098)
  {
    result = MEMORY[0x22766BAC4](&unk_2213195D0, &unk_24E706118);
    atomic_store(result, (unint64_t *)&qword_255668098);
  }
  return result;
}

unint64_t sub_2212BA884()
{
  unint64_t result;

  result = qword_2556680A0;
  if (!qword_2556680A0)
  {
    result = MEMORY[0x22766BAC4](&unk_221319560, &unk_24E706260);
    atomic_store(result, (unint64_t *)&qword_2556680A0);
  }
  return result;
}

void OUTLINED_FUNCTION_0_73(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t *v3;
  uint64_t v4;
  void (*v5)(_OWORD *);

  sub_2212B486C(a1, a2, v2, v3, v4, v5);
}

void OUTLINED_FUNCTION_1_60(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_22119F59C(a1, a2, v2);
}

void OUTLINED_FUNCTION_2_59(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t *v3;
  uint64_t v4;
  void (*v5)(_OWORD *);

  sub_2212B486C(a1, a2, v2, v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_4_47()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_55()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_37()
{
  return 0x696C616974696E69;
}

uint64_t OUTLINED_FUNCTION_10_44()
{
  return sub_2212F52D4();
}

uint64_t OUTLINED_FUNCTION_11_53(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

void OUTLINED_FUNCTION_13_45()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_14_42()
{
  return sub_2212F52D4();
}

uint64_t OUTLINED_FUNCTION_17_38(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_20_29()
{
  return 0x7250646568736168;
}

uint64_t OUTLINED_FUNCTION_22_25()
{
  return 0x6E657053656D6974;
}

uint64_t OUTLINED_FUNCTION_25_31(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void OUTLINED_FUNCTION_26_27(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4, uint64_t a5, void (*a6)(_OWORD *))
{
  sub_2212B486C(a1, 2, a3, a4, a5, a6);
}

void OUTLINED_FUNCTION_27_29(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4, uint64_t a5, void (*a6)(_OWORD *))
{
  sub_2212B486C(a1, 0, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_29_21()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t OUTLINED_FUNCTION_36_26@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v4 = *(_BYTE *)(v1 + a1);
  *(_QWORD *)(v3 - 96) = v2;
  *(_BYTE *)(v3 - 120) = v4;
  return v3 - 120;
}

void OUTLINED_FUNCTION_40_13(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4, uint64_t a5, void (*a6)(_OWORD *))
{
  sub_2212B486C(a1, 3, a3, a4, a5, a6);
}

void OUTLINED_FUNCTION_41_12(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4, uint64_t a5, void (*a6)(_OWORD *))
{
  sub_2212B486C(a1, 1, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_42_19()
{
  return sub_2212F5BBC();
}

uint64_t OUTLINED_FUNCTION_43_17(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;

  return sub_2212B3FA8(v2, a2);
}

uint64_t OUTLINED_FUNCTION_44_18()
{
  return 0x656C797473;
}

uint64_t OUTLINED_FUNCTION_45_17(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t OUTLINED_FUNCTION_46_19(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t OUTLINED_FUNCTION_48_9(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t OUTLINED_FUNCTION_52_20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_53_13(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_55_12(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_59_15@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_60_11()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_67_11()
{
  return sub_2212F5898();
}

uint64_t OUTLINED_FUNCTION_68_10()
{
  return sub_2212F5898();
}

uint64_t OUTLINED_FUNCTION_70_8()
{
  uint64_t v0;

  return sub_221115C44(0, 0xE000000000000000, (uint64_t *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_73_11()
{
  return sub_2212F5898();
}

uint64_t OUTLINED_FUNCTION_74_13()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_75_11(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4, uint64_t a5, void (*a6)(_OWORD *))
{
  sub_2212B486C(a1, 7, a3, a4, a5, a6);
}

void OUTLINED_FUNCTION_76_12(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4, uint64_t a5, void (*a6)(_OWORD *))
{
  sub_2212B486C(a1, 5, a3, a4, a5, a6);
}

void OUTLINED_FUNCTION_77_8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4, uint64_t a5, void (*a6)(_OWORD *))
{
  sub_2212B486C(a1, 4, a3, a4, a5, a6);
}

void OUTLINED_FUNCTION_78_10(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4, uint64_t a5, void (*a6)(_OWORD *))
{
  sub_2212B486C(a1, 6, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_81_8@<X0>(int a1@<W8>)
{
  return ((a1 + 2147483646) & 0x7FFFFFFFu) + 1;
}

uint64_t OUTLINED_FUNCTION_82_9()
{
  return sub_2212F2ACC();
}

void OUTLINED_FUNCTION_83_5(uint64_t a1, uint64_t a2, ...)
{
  uint64_t *v2;
  va_list va;

  va_start(va, a2);
  sub_22101763C((uint64_t)va, v2);
}

uint64_t OUTLINED_FUNCTION_86_6()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_87_6()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_90_7()
{
  uint64_t v0;

  return sub_2211164A4(v0 - 112, v0 - 152);
}

_QWORD *sub_2212BABF8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    v6 = *(int *)(a3 + 20);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    *(_WORD *)(a1 + v6) = *(_WORD *)((char *)a2 + v6);
    v9 = (int *)type metadata accessor for ProductViewBaseEvent(0);
    v10 = v9[6];
    v11 = (void *)(v7 + v10);
    v12 = (const void *)(v8 + v10);
    v13 = sub_2212F4E00();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    *(_BYTE *)(v7 + v9[7]) = *(_BYTE *)(v8 + v9[7]);
    *(_BYTE *)(v7 + v9[8]) = *(_BYTE *)(v8 + v9[8]);
    *(_BYTE *)(v7 + v9[9]) = *(_BYTE *)(v8 + v9[9]);
    *(_BYTE *)(v7 + v9[10]) = *(_BYTE *)(v8 + v9[10]);
  }
  return v3;
}

uint64_t sub_2212BAD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = v4 + *(int *)(type metadata accessor for ProductViewBaseEvent(0) + 24);
  v6 = sub_2212F4E00();
  result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return result;
}

uint64_t sub_2212BADC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v5 = *(int *)(a3 + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  *(_WORD *)(a1 + v5) = *(_WORD *)(a2 + v5);
  v8 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v9 = v8[6];
  v10 = (void *)(v6 + v9);
  v11 = (const void *)(v7 + v9);
  v12 = sub_2212F4E00();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  *(_BYTE *)(v6 + v8[7]) = *(_BYTE *)(v7 + v8[7]);
  *(_BYTE *)(v6 + v8[8]) = *(_BYTE *)(v7 + v8[8]);
  *(_BYTE *)(v6 + v8[9]) = *(_BYTE *)(v7 + v8[9]);
  *(_BYTE *)(v6 + v8[10]) = *(_BYTE *)(v7 + v8[10]);
  return a1;
}

uint64_t sub_2212BAEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  const void *v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v6 = *(int *)(a3 + 20);
  v7 = (_BYTE *)(a1 + v6);
  v8 = a2 + v6;
  *v7 = *(_BYTE *)(a2 + v6);
  v7[1] = *(_BYTE *)(a2 + v6 + 1);
  v9 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = (const void *)(v8 + v10);
  v13 = sub_2212F4E00();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    v16 = *(_QWORD *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(_BYTE *, const void *, uint64_t))(v16 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_7:
  v7[v9[7]] = *(_BYTE *)(v8 + v9[7]);
  v7[v9[8]] = *(_BYTE *)(v8 + v9[8]);
  v7[v9[9]] = *(_BYTE *)(v8 + v9[9]);
  v7[v9[10]] = *(_BYTE *)(v8 + v9[10]);
  return a1;
}

uint64_t sub_2212BB07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_WORD *)(a1 + v4) = *(_WORD *)(a2 + v4);
  v7 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v8 = v7[6];
  v9 = (void *)(v5 + v8);
  v10 = (const void *)(v6 + v8);
  v11 = sub_2212F4E00();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  *(_BYTE *)(v5 + v7[7]) = *(_BYTE *)(v6 + v7[7]);
  *(_BYTE *)(v5 + v7[8]) = *(_BYTE *)(v6 + v7[8]);
  *(_BYTE *)(v5 + v7[9]) = *(_BYTE *)(v6 + v7[9]);
  *(_BYTE *)(v5 + v7[10]) = *(_BYTE *)(v6 + v7[10]);
  return a1;
}

uint64_t sub_2212BB190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for ProductViewBaseEvent(0);
  v11 = v10[6];
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_2212F4E00();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!EnumTagSinglePayload)
  {
    v17 = *(_QWORD *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_2556595B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
LABEL_7:
  *(_BYTE *)(v8 + v10[7]) = *(_BYTE *)(v9 + v10[7]);
  *(_BYTE *)(v8 + v10[8]) = *(_BYTE *)(v9 + v10[8]);
  *(_BYTE *)(v8 + v10[9]) = *(_BYTE *)(v9 + v10[9]);
  *(_BYTE *)(v8 + v10[10]) = *(_BYTE *)(v9 + v10[10]);
  return a1;
}

uint64_t sub_2212BB304()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212BB310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ProductViewBaseEvent(0);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t sub_2212BB390()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212BB39C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = type metadata accessor for ProductViewBaseEvent(0);
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ProductViewAppearanceEvent()
{
  uint64_t result;

  result = qword_255668110;
  if (!qword_255668110)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2212BB440()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ProductViewBaseEvent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2212BB4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  _QWORD v28[3];
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a6;
  v37 = a5;
  v34 = a2;
  v35 = a3;
  v31 = a1;
  v7 = *(_QWORD *)(a5 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v30 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v33 = (uint64_t)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v28 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v28 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v29 = (char *)v28 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v32 = (char *)v28 - v20;
  v28[1] = swift_getAssociatedConformanceWitness();
  sub_2212F5D0C();
  v28[2] = v7;
  sub_2212F5CB8();
  v21 = v37;
  sub_2212BB81C(v31, a4, v37, (uint64_t)v13);
  v31 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v21 + 16) + 16) + 8);
  sub_2212F5694();
  v22 = *(void (**)(char *, uint64_t))(v30 + 8);
  v22(v13, a4);
  v22(v16, a4);
  sub_2212F5D0C();
  sub_2212F5CB8();
  v23 = v33;
  sub_2212BB81C(v34, a4, v21, v33);
  v24 = v31;
  sub_2212F5694();
  v22((char *)v23, a4);
  v22(v13, a4);
  v34 = *(_QWORD *)(v24 + 8);
  v25 = v32;
  v26 = v29;
  sub_2212F5AE4();
  v22(v16, a4);
  v22(v26, a4);
  sub_2212F5D0C();
  sub_2212F5CB8();
  sub_2212BB81C(v35, a4, v37, (uint64_t)v13);
  sub_2212F5694();
  v22(v13, a4);
  v22(v16, a4);
  sub_2212F5AE4();
  v22(v26, a4);
  return ((uint64_t (*)(char *, uint64_t))v22)(v25, a4);
}

uint64_t sub_2212BB81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedTypeWitness;
  char v16;
  void (*v17)(char *, uint64_t);
  char *v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;

  v24 = a4;
  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v21 = (char *)&v20 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v20 - v13;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_2212F5D0C();
  sub_2212F5CB8();
  v22 = a3;
  v23 = a1;
  v16 = sub_2212F528C();
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v14, a2);
  sub_2212F5D0C();
  sub_2212F5CB8();
  if ((v16 & 1) != 0)
  {
    sub_2212F5220();
  }
  else
  {
    v18 = v21;
    sub_2212F5AE4();
    v17(v9, a2);
    sub_2212F5D0C();
    sub_2212F5CB8();
    sub_2212F5220();
    v17(v9, a2);
    v17(v18, a2);
    sub_2212F5D0C();
    sub_2212F5CB8();
    (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v14, v18, a2);
    v17(v18, a2);
  }
  return ((uint64_t (*)(char *, uint64_t))v17)(v14, a2);
}

uint64_t sub_2212BBB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212BB4B4(v8, v9, v10, v11, v12, (uint64_t)v7);
  sub_2212BBBE8((uint64_t)v7, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a2);
}

uint64_t sub_2212BBBE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2212BB4B4(v9, v10, v11, v12, v13, (uint64_t)v8);
  if ((sub_2212F5274() & 1) != 0)
  {
    v14 = a1;
    v15 = (uint64_t)v8;
  }
  else
  {
    v14 = (uint64_t)v8;
    v15 = a1;
  }
  sub_2212BBCC0(v14, v15, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_2212BBCC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  _QWORD v18[4];

  v18[1] = a1;
  v18[2] = a2;
  v18[3] = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v18 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v18 - v14;
  swift_getAssociatedConformanceWitness();
  sub_2212F5D0C();
  sub_2212F5CB8();
  sub_2212F5AE4();
  sub_2212F5AE4();
  sub_2212F5220();
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v9, a3);
  v16(v12, a3);
  return ((uint64_t (*)(char *, uint64_t))v16)(v15, a3);
}

uint64_t sub_2212BBE90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  char *v33;
  char *v34;
  _QWORD v36[2];
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v39 = a6;
  v40 = a2;
  v41 = a5;
  v42 = a7;
  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v38 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v36 - v12;
  v37 = (char *)v36 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v36 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v36 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v36 - v21;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v36 - v24;
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v36 - v28;
  v36[1] = v30;
  (*(void (**)(char *, char *, char *, char *, uint64_t, __n128))(v30 + 24))((char *)v36 - v28, v25, v22, v19, a4, v27);
  v31 = *(void (**)(char *, uint64_t))(v9 + 8);
  v31(v19, a3);
  v32 = v13;
  v33 = v38;
  (*(void (**)(char *, char *, char *, char *, uint64_t))(v39 + 24))(v19, v16, v32, v38, v41);
  v31(v33, a3);
  swift_getAssociatedConformanceWitness();
  v34 = v37;
  sub_2212BBB30((uint64_t)v29, a3, v42);
  v31(v34, a3);
  v31(v16, a3);
  v31(v19, a3);
  v31(v22, a3);
  v31(v25, a3);
  return ((uint64_t (*)(char *, uint64_t))v31)(v29, a3);
}

uint64_t sub_2212BC0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return sub_2212BBE90(v5, a1, AssociatedTypeWitness, a2, a3, a4, a5);
}

uint64_t sub_2212BC13C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t AssociatedConformanceWitness;
  char v45;
  uint64_t v46;
  void (*v47)(_QWORD, _QWORD, _QWORD);
  void (*v48)(char *, _QWORD);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  void (*v63)(_QWORD, _QWORD, _QWORD);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(uint64_t, char *, uint64_t);
  char *v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int EnumTagSinglePayload;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t TupleTypeMetadata2;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(_QWORD, _QWORD, _QWORD);
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char v127[8];

  v114 = a8;
  v111 = a3;
  v102 = a2;
  v119 = a1;
  v94 = a9;
  v93 = *(_QWORD *)(a5 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_19_4((uint64_t)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = OUTLINED_FUNCTION_6_44();
  v112 = a4;
  v113 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_19_4((uint64_t)&v89 - v18);
  v19 = swift_getAssociatedTypeWitness();
  v110 = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_19_4((uint64_t)&v89 - v21);
  v124 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_19_4((uint64_t)&v89 - v25);
  v104 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v26);
  v126 = (char *)&v89 - v27;
  v90 = sub_2212F5844();
  v89 = *(_QWORD *)(v90 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_0_27();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v89 - v30;
  v117 = a7;
  OUTLINED_FUNCTION_6_44();
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v32);
  v123 = *(void (**)(_QWORD, _QWORD, _QWORD))(swift_getAssociatedConformanceWitness() + 8);
  v33 = swift_getAssociatedTypeWitness();
  v96 = *(_QWORD *)(v33 - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v89 - v35;
  v108 = AssociatedTypeWitness;
  v37 = swift_getTupleTypeMetadata2();
  v125 = sub_2212F5844();
  v121 = *(_QWORD *)(v125 - 8);
  OUTLINED_FUNCTION_1_12();
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v89 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v122 = (uint64_t)&v89 - v42;
  v120 = v37;
  __swift_storeEnumTagSinglePayload((uint64_t)&v89 - v42, 1, 1, v37);
  v118 = a5;
  v43 = v95;
  sub_2212F5700();
  sub_2212F54B4();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v115 = v36;
  v116 = v33;
  v107 = AssociatedConformanceWitness;
  sub_2212F588C();
  OUTLINED_FUNCTION_2_26((uint64_t)v31);
  if (v45)
  {
LABEL_11:
    OUTLINED_FUNCTION_1_61();
    v79 = 1;
    v80 = v122;
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v122, 1, v120);
    v82 = v91;
    if (!EnumTagSinglePayload)
    {
      OUTLINED_FUNCTION_9_52();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v82, v80, v15);
      v79 = 0;
    }
    OUTLINED_FUNCTION_133_0(v82, v79);
    v84 = v93;
    v85 = v92;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16))(v92, v119, v118);
    OUTLINED_FUNCTION_2_26(v82);
    if (v45)
    {
      v86 = v118;
      sub_2212F56D0();
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v85, v86);
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v82, v90);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v85, v118);
      OUTLINED_FUNCTION_9_52();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 32))(v94, v82, v15);
    }
  }
  else
  {
    OUTLINED_FUNCTION_9_52();
    v47 = *(void (**)(_QWORD, _QWORD, _QWORD))(v46 + 32);
    v105 = v40;
    v97 = v19;
    v106 = v31;
    v123 = v47;
    while (1)
    {
      v47(v126, v31, v15);
      v48 = (void (*)(char *, _QWORD))sub_2212F57A8();
      v49 = v110;
      v50 = v109;
      (*(void (**)(uint64_t))(v110 + 16))(v109);
      v48(v127, 0);
      v51 = v43;
      sub_2212BC0B4(v50, v112, v19, v114, v43);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v50, v19);
      v52 = v108;
      v43 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(swift_getAssociatedConformanceWitness() + 16) + 24) + 8);
      v53 = v51;
      v54 = v52;
      if ((sub_2212F5274() & 1) != 0)
        break;
      v55 = v121;
      v56 = v122;
      (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v40, v122, v125);
      v57 = v120;
      if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v120) == 1)
      {
        v58 = v40;
        v59 = v57;
        v60 = *(void (**)(char *, uint64_t))(v55 + 8);
        v61 = v125;
        v60(v58, v125);
        v60((char *)v56, v61);
        v62 = v56 + *(int *)(v59 + 48);
        v63 = v123;
        v123(v56, v126, v15);
        v43 = v53;
        v47 = v63;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 32))(v62, v43, v54);
        __swift_storeEnumTagSinglePayload(v56, 0, 1, v59);
      }
      else
      {
        v64 = &v40[*(int *)(v57 + 48)];
        v65 = TupleTypeMetadata2;
        v66 = v100;
        v67 = v100 + *(int *)(TupleTypeMetadata2 + 48);
        v68 = v40;
        v69 = v15;
        v123(v100, v68, v15);
        v70 = *(void (**)(uint64_t, char *, uint64_t))(v124 + 32);
        v70(v67, v64, v54);
        v71 = (char *)(v66 + *(int *)(v65 + 48));
        v19 = v98;
        v103 = (void (*)(uint64_t, uint64_t, uint64_t))v70;
        v70(v98, v71, v54);
        OUTLINED_FUNCTION_9_52();
        v73 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
        v73(v66, v15);
        v74 = v99;
        v75 = v54;
        v76 = v53;
        sub_2212F5694();
        v77 = sub_2212F5274();
        v15 = *(_QWORD *)(v124 + 8);
        OUTLINED_FUNCTION_4_48(v74);
        OUTLINED_FUNCTION_4_48(v19);
        if ((v77 & 1) != 0)
        {
          v19 = v122;
          (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v122, v125);
          v15 = v120;
          v78 = v19 + *(int *)(v120 + 48);
          v47 = v123;
          v123(v19, v126, v69);
          v103(v78, v76, v75);
          OUTLINED_FUNCTION_133_0(v19, 0);
          OUTLINED_FUNCTION_5_45();
        }
        else
        {
          OUTLINED_FUNCTION_4_48(v76);
          v73((uint64_t)v126, v69);
          OUTLINED_FUNCTION_5_45();
          v47 = v123;
        }
      }
      v31 = v106;
      sub_2212F588C();
      OUTLINED_FUNCTION_2_26((uint64_t)v31);
      v40 = v105;
      if (v45)
        goto LABEL_11;
    }
    (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v53, v52);
    OUTLINED_FUNCTION_1_61();
    v123(v94, v126, v15);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v121 + 8))(v122, v125);
}

uint64_t OUTLINED_FUNCTION_1_61()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 376) + 8))(*(_QWORD *)(v0 - 216), *(_QWORD *)(v0 - 208));
}

uint64_t OUTLINED_FUNCTION_4_48(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_6_44()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_2212BCA20()
{
  sub_2210CEF5C();
  return sub_2212F3798();
}

uint64_t sub_2212BCA54(uint64_t a1)
{
  OUTLINED_FUNCTION_2_60(a1);
  sub_2210CEF5C();
  return sub_2212F37A4();
}

double static SubscriptionStoreButtonLabel.automatic.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)a1 = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_BYTE *)(a1 + 72) = 1;
  return result;
}

uint64_t View.subscriptionStoreButtonLabel(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  _BYTE v5[8];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;

  v3 = *(_BYTE *)(a1 + 72);
  v5[0] = *(_BYTE *)a1;
  v6 = *(_OWORD *)(a1 + 8);
  v7 = *(_OWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a1 + 40);
  v9 = *(_OWORD *)(a1 + 56);
  v10 = v3;
  return MEMORY[0x227669B20](v5, a2, &type metadata for SubscriptionStoreButtonLabelModifier, a3);
}

void static SubscriptionStoreButtonLabel.singleLine.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 1;
  *(_OWORD *)(a1 + 8) = 0u;
  OUTLINED_FUNCTION_1_62(a1, (__n128)0);
}

double SubscriptionStoreButtonLabel.action.getter@<D0>(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
  return OUTLINED_FUNCTION_0_74((uint64_t)a1, (__n128)xmmword_221319A10);
}

double static SubscriptionStoreButtonLabel.price.getter@<D0>(_BYTE *a1@<X8>)
{
  *a1 = 0;
  return OUTLINED_FUNCTION_0_74((uint64_t)a1, (__n128)xmmword_221319A20);
}

void SubscriptionStoreButtonLabel.singleLine.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_3_55(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), a1);
}

uint64_t sub_2212BCB5C(__int128 *a1, __int128 *a2)
{
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v3 = sub_2212BCE58(a1, &v15);
  switch(*((_QWORD *)&v15 + 1))
  {
    case 0:
      OUTLINED_FUNCTION_9_53((uint64_t)v3, &v13);
      return !v4;
    case 1:
      OUTLINED_FUNCTION_9_53((uint64_t)v3, &v13);
      return v9 == 1;
    case 2:
      OUTLINED_FUNCTION_9_53((uint64_t)v3, &v13);
      return v10 == 2;
    case 3:
      OUTLINED_FUNCTION_9_53((uint64_t)v3, &v13);
      return v11 == 3;
    default:
      v5 = v16;
      v6 = v17;
      sub_2212BCE58(a2, &v13);
      if (*((_QWORD *)&v13 + 1) < 4uLL)
        return 0;
      v7 = v14;
      if ((sub_2212F3864() & 1) == 0)
        return 0;
      if (v6)
      {
        if (v7)
        {
          OUTLINED_FUNCTION_14_43(v5, v6);
          OUTLINED_FUNCTION_8_38();
          v8 = sub_2212F3864();
          OUTLINED_FUNCTION_7_56();
          OUTLINED_FUNCTION_5_46();
          return (v8 & 1) != 0;
        }
      }
      else if (!v7)
      {
        return 1;
      }
      OUTLINED_FUNCTION_14_43(v5, v6);
      OUTLINED_FUNCTION_8_38();
      OUTLINED_FUNCTION_5_46();
      OUTLINED_FUNCTION_7_56();
      return 0;
  }
}

void StoreContent.subscriptionStoreButtonLabel(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  OUTLINED_FUNCTION_2_60(a1);
  sub_2210D330C();
  sub_221232D58((uint64_t)&v5, a2, (uint64_t)&type metadata for SubscriptionStoreButtonLabelModifier, a3);
}

void static SubscriptionStoreButtonLabel.multiline.getter(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 2;
  *(_OWORD *)(a1 + 8) = 0u;
  OUTLINED_FUNCTION_1_62(a1, (__n128)0);
}

double static SubscriptionStoreButtonLabel.action.getter@<D0>(_BYTE *a1@<X8>)
{
  *a1 = 0;
  return OUTLINED_FUNCTION_0_74((uint64_t)a1, (__n128)xmmword_221319A10);
}

double static SubscriptionStoreButtonLabel.displayName.getter@<D0>(_BYTE *a1@<X8>)
{
  *a1 = 0;
  return OUTLINED_FUNCTION_0_74((uint64_t)a1, (__n128)xmmword_2212FD660);
}

void SubscriptionStoreButtonLabel.multiline.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_3_55(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), a1);
}

double SubscriptionStoreButtonLabel.displayName.getter@<D0>(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
  return OUTLINED_FUNCTION_0_74((uint64_t)a1, (__n128)xmmword_2212FD660);
}

double SubscriptionStoreButtonLabel.price.getter@<D0>(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
  return OUTLINED_FUNCTION_0_74((uint64_t)a1, (__n128)xmmword_221319A20);
}

uint64_t SubscriptionStoreButtonLabel.hash(into:)()
{
  uint64_t v0;
  _OWORD v2[4];

  sub_2212BCE58((__int128 *)(v0 + 8), v2);
  sub_2212F5DE4();
  sub_2212BD458(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_221046F24);
  sub_2212BD264();
  sub_2212BD458(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_221047048);
  return sub_2212F5DF0();
}

_OWORD *sub_2212BCE58(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t static SubscriptionStoreButtonLabel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  __int128 v9[4];
  __int128 v10[4];

  v4 = *a1;
  sub_2212BCE58((__int128 *)(a1 + 8), v9);
  v5 = a1[72];
  v6 = *a2;
  sub_2212BCE58((__int128 *)(a2 + 8), v10);
  if (v4 != v6)
    return 0;
  v7 = a2[72];
  if ((sub_2212BCB5C(v9, v10) & 1) != 0)
    return v5 ^ v7 ^ 1u;
  else
    return 0;
}

uint64_t SubscriptionStoreButtonLabel.hashValue.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_32_9();
  sub_2212F5DE4();
  v0 = OUTLINED_FUNCTION_4_49();
  sub_221046F24(v0, v1, v2, v3, v4, v5);
  sub_2212BD264();
  v6 = OUTLINED_FUNCTION_4_49();
  sub_221047048(v6, v7, v8, v9, v10, v11);
  sub_2212F5DF0();
  return OUTLINED_FUNCTION_68_0();
}

uint64_t sub_2212BCFA0()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  sub_2212F5DD8();
  sub_2212F5DE4();
  sub_221046F24(v1, v2, v3, v4, v5, v6);
  sub_2212BD264();
  sub_221047048(v1, v2, v3, v4, v5, v6);
  sub_2212F5DF0();
  return sub_2212F5E08();
}

uint64_t sub_2212BD08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _BYTE v10[80];

  memcpy(v10, v2, 0x49uLL);
  KeyPath = swift_getKeyPath();
  v6 = swift_allocObject();
  memcpy((void *)(v6 + 16), v2, 0x49uLL);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556681B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  v8 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556681B8) + 36));
  *v8 = KeyPath;
  v8[1] = (uint64_t)sub_2212BE074;
  v8[2] = v6;
  return sub_2212BE07C((uint64_t)v10);
}

void sub_2212BD15C(char *a1, char *a2)
{
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v3 = *((_QWORD *)a2 + 2);
  v4 = a2[72];
  if (*a2 || (a2[72] & 1) != 0)
  {
    *a1 = *a2;
    a1[72] = 0;
  }
  v5 = *((_QWORD *)a2 + 1);
  v6 = *((_QWORD *)a2 + 3);
  v7 = *((_QWORD *)a2 + 4);
  v8 = *((_QWORD *)a2 + 5);
  v9 = *((_QWORD *)a2 + 6);
  v10 = *((_QWORD *)a2 + 7);
  v11 = *((_QWORD *)a2 + 8);
  if (v3 || (v4 & 1) != 0)
  {
    v18 = *a1;
    v12 = *((_QWORD *)a1 + 1);
    v16 = *((_QWORD *)a1 + 3);
    v17 = *((_QWORD *)a1 + 2);
    v14 = *((_QWORD *)a1 + 5);
    v15 = *((_QWORD *)a1 + 4);
    v13 = *((_QWORD *)a1 + 6);
    sub_221046F24(v5, v3, v6, v7, v8, v9);
    sub_221047048(v12, v17, v16, v15, v14, v13);
    *a1 = v18;
    *((_QWORD *)a1 + 1) = v5;
    *((_QWORD *)a1 + 2) = v3;
    *((_QWORD *)a1 + 3) = v6;
    *((_QWORD *)a1 + 4) = v7;
    *((_QWORD *)a1 + 5) = v8;
    *((_QWORD *)a1 + 6) = v9;
    *((_QWORD *)a1 + 7) = v10;
    *((_QWORD *)a1 + 8) = v11;
    a1[72] = 0;
  }
}

uint64_t sub_2212BD264()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t result;
  __int128 v3;
  uint64_t v4;

  sub_2212BCE58(v0, &v3);
  switch(*((_QWORD *)&v3 + 1))
  {
    case 0:
    case 1:
    case 2:
    case 3:
      result = sub_2212F5DE4();
      break;
    default:
      v1 = v4;
      sub_2212F5DE4();
      OUTLINED_FUNCTION_15_22();
      swift_bridgeObjectRetain();
      sub_2212F53B8();
      sub_2212F53DC();
      OUTLINED_FUNCTION_241();
      if (v1)
      {
        OUTLINED_FUNCTION_92_2();
        swift_bridgeObjectRetain();
        sub_2212F53B8();
        sub_2212F5DF0();
        sub_2212F53DC();
        result = OUTLINED_FUNCTION_84_0();
      }
      else
      {
        result = sub_2212F5DF0();
      }
      break;
  }
  return result;
}

void sub_2212BD3C0()
{
  OUTLINED_FUNCTION_32_9();
  sub_2212BD264();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_13_15();
}

void sub_2212BD3E8()
{
  __int128 *v0;
  _OWORD v1[4];

  sub_2212BCE58(v0, v1);
  sub_2212BD3C0();
}

uint64_t sub_2212BD41C()
{
  __int128 *v0;
  _OWORD v2[4];

  sub_2212BCE58(v0, v2);
  return sub_2212BD264();
}

_QWORD *sub_2212BD458(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  return a1;
}

unint64_t sub_2212BD498()
{
  unint64_t result;

  result = qword_255668198;
  if (!qword_255668198)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for SubscriptionStoreButtonLabel, &type metadata for SubscriptionStoreButtonLabel);
    atomic_store(result, (unint64_t *)&qword_255668198);
  }
  return result;
}

void type metadata accessor for SubscriptionStoreButtonLabel()
{
  OUTLINED_FUNCTION_31_2();
}

uint64_t sub_2212BD4F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_2212F3348();
  v4[0] = v1;
  v4[1] = sub_2210D330C();
  return MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v2, v4);
}

void sub_2212BD54C()
{
  sub_2210D330C();
  type metadata accessor for ModifiedStoreContent();
}

uint64_t sub_2212BD580(uint64_t a1)
{
  return MEMORY[0x22766BAC4](&unk_221313C88, a1);
}

uint64_t sub_2212BD5A0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2212BD5EC + 4 * byte_221319A3D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2212BD620 + 4 * byte_221319A38[v4]))();
}

uint64_t sub_2212BD620(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212BD628(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212BD630);
  return result;
}

uint64_t sub_2212BD63C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212BD644);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2212BD648(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212BD650(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SubscriptionStoreButtonLabelStyle()
{
  OUTLINED_FUNCTION_31_2();
}

unint64_t sub_2212BD668(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + 40);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_2212BD6BC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    v5 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5)
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v5;
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v8;
    }
  }
  return a1;
}

uint64_t sub_2212BD774(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      v8 = *((_QWORD *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v8)
      {
        v9 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v9;
        return a1;
      }
LABEL_13:
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_11:
    v10 = *a2;
    v11 = a2[1];
    v12 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)a1 = v10;
    *(_OWORD *)(a1 + 16) = v11;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 40))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_11;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a1 + 32);
  v6 = a2 + 2;
  v7 = *((_QWORD *)a2 + 5);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (!v7)
    {
      v14 = a2[3];
      *v5 = *v6;
      *(_OWORD *)(a1 + 48) = v14;
      return a1;
    }
    goto LABEL_13;
  }
  if (v7)
  {
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2210A3354(a1 + 32);
    v13 = a2[3];
    *v5 = *v6;
    *(_OWORD *)(a1 + 48) = v13;
  }
  return a1;
}

uint64_t sub_2212BD938(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v9;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
LABEL_8:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    return a1;
  }
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 40))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_8;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 40))
  {
LABEL_11:
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    return a1;
  }
  v5 = *(_QWORD *)(a2 + 40);
  if (!v5)
  {
    sub_2210A3354(a1 + 32);
    goto LABEL_11;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2212BDA2C(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

uint64_t sub_2212BDA80(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 3;
  }
  return result;
}

uint64_t sub_2212BDAE4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_2212BDAFC(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 56) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

void type metadata accessor for SubscriptionStoreButtonLabelContent()
{
  OUTLINED_FUNCTION_31_2();
}

unint64_t _s17_StoreKit_SwiftUI28SubscriptionStoreButtonLabelVwxx_0(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result >= 4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + 48);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void _s17_StoreKit_SwiftUI28SubscriptionStoreButtonLabelVwcp_0(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  unint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= 4)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v5;
    OUTLINED_FUNCTION_22_26();
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    v8 = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_15_22();
    if (v8)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v8;
      OUTLINED_FUNCTION_19_34();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      OUTLINED_FUNCTION_92_2();
      OUTLINED_FUNCTION_15_22();
    }
    else
    {
      OUTLINED_FUNCTION_15_36();
    }
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 24);
    *v4 = *(_OWORD *)(a2 + 8);
    v4[1] = v6;
    v7 = *(_OWORD *)(a2 + 56);
    v4[2] = *(_OWORD *)(a2 + 40);
    v4[3] = v7;
  }
  OUTLINED_FUNCTION_11_54();
  OUTLINED_FUNCTION_17_0();
}

uint64_t _s17_StoreKit_SwiftUI28SubscriptionStoreButtonLabelVwca_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  _BYTE *v5;
  uint64_t v6;
  __int128 *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  __int128 v18;

  v5 = OUTLINED_FUNCTION_12_48(a1, a2);
  v7 = (__int128 *)(v6 + 8);
  v8 = *(_QWORD *)(v6 + 16);
  if (*((_QWORD *)v5 + 2) < 4uLL)
  {
    if (v8 < 4)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(v6 + 24);
      v11 = *(_OWORD *)(v6 + 56);
      v4[2] = *(_OWORD *)(v6 + 40);
      v4[3] = v11;
LABEL_4:
      *v4 = v9;
      v4[1] = v10;
      return OUTLINED_FUNCTION_11_54();
    }
    OUTLINED_FUNCTION_23_26();
    OUTLINED_FUNCTION_22_26();
    *(_QWORD *)(v2 + 32) = *(_QWORD *)(v3 + 32);
    v15 = *(_QWORD *)(v3 + 48);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_92_2();
    if (!v15)
    {
      OUTLINED_FUNCTION_15_36();
      return OUTLINED_FUNCTION_11_54();
    }
    goto LABEL_13;
  }
  if (v8 < 4)
  {
    sub_2210E9BC8((uint64_t)v4);
    v12 = v7[3];
    v14 = *v7;
    v13 = v7[1];
    v4[2] = v7[2];
    v4[3] = v12;
    *v4 = v14;
    v4[1] = v13;
    return OUTLINED_FUNCTION_11_54();
  }
  OUTLINED_FUNCTION_23_26();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_241();
  OUTLINED_FUNCTION_22_26();
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(v3 + 32);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_84_0();
  v4 = (__int128 *)(v2 + 40);
  v16 = (__int128 *)(v3 + 40);
  v17 = *(_QWORD *)(v3 + 48);
  if (!*(_QWORD *)(v2 + 48))
  {
    if (!v17)
    {
      v9 = *v16;
      v10 = *(_OWORD *)(v3 + 56);
      goto LABEL_4;
    }
LABEL_13:
    OUTLINED_FUNCTION_20_30();
    OUTLINED_FUNCTION_19_34();
    *(_QWORD *)(v2 + 64) = *(_QWORD *)(v3 + 64);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_92_2();
    return OUTLINED_FUNCTION_11_54();
  }
  if (v17)
  {
    OUTLINED_FUNCTION_20_30();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_241();
    OUTLINED_FUNCTION_19_34();
    *(_QWORD *)(v2 + 64) = *(_QWORD *)(v3 + 64);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_84_0();
  }
  else
  {
    sub_2210A3354(v2 + 40);
    v18 = *(_OWORD *)(v3 + 56);
    *v4 = *v16;
    *(_OWORD *)(v2 + 56) = v18;
  }
  return OUTLINED_FUNCTION_11_54();
}

void _s17_StoreKit_SwiftUI28SubscriptionStoreButtonLabelVwta_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;

  v5 = OUTLINED_FUNCTION_12_48(a1, a2);
  v7 = (_OWORD *)(v6 + 8);
  if (*((_QWORD *)v5 + 2) >= 4uLL)
  {
    v8 = *(_QWORD *)(v3 + 16);
    if (v8 >= 4)
    {
      *(_QWORD *)(v2 + 8) = *(_QWORD *)(v3 + 8);
      *(_QWORD *)(v2 + 16) = v8;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_26();
      *(_QWORD *)(v2 + 32) = *(_QWORD *)(v3 + 32);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v2 + 48))
      {
        v11 = *(_QWORD *)(v3 + 48);
        if (v11)
        {
          *(_QWORD *)(v2 + 40) = *(_QWORD *)(v3 + 40);
          *(_QWORD *)(v2 + 48) = v11;
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_19_34();
          *(_QWORD *)(v2 + 64) = *(_QWORD *)(v3 + 64);
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
        sub_2210A3354(v2 + 40);
      }
      v12 = *(_OWORD *)(v3 + 56);
      *(_OWORD *)(v2 + 40) = *(_OWORD *)(v3 + 40);
      *(_OWORD *)(v2 + 56) = v12;
      goto LABEL_5;
    }
    sub_2210E9BC8((uint64_t)v4);
  }
  v9 = v7[1];
  *v4 = *v7;
  v4[1] = v9;
  v10 = v7[3];
  v4[2] = v7[2];
  v4[3] = v10;
LABEL_5:
  OUTLINED_FUNCTION_11_54();
  OUTLINED_FUNCTION_17_0();
}

uint64_t _s17_StoreKit_SwiftUI28SubscriptionStoreButtonLabelVwet_0(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 > 0x7FFFFFFB && *(_BYTE *)(a1 + 73))
    {
      v2 = *(_DWORD *)a1 + 2147483643;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 4;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s17_StoreKit_SwiftUI28SubscriptionStoreButtonLabelVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 2147483644;
    if (a3 > 0x7FFFFFFB)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFB)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStoreButtonLabelModifier()
{
  return &type metadata for SubscriptionStoreButtonLabelModifier;
}

uint64_t sub_2212BDEFC()
{
  __int128 *v0;
  _OWORD v2[4];

  sub_2212BCE58(v0, v2);
  sub_2212F5DD8();
  sub_2212BD264();
  return sub_2212F5E08();
}

uint64_t sub_2212BDF4C(__int128 *a1, __int128 *a2)
{
  __int128 v4[4];
  __int128 v5[4];

  sub_2212BCE58(a1, v4);
  sub_2212BCE58(a2, v5);
  return sub_2212BCB5C(v4, v5) & 1;
}

unint64_t sub_2212BDF98()
{
  unint64_t result;

  result = qword_2556681A0;
  if (!qword_2556681A0)
  {
    result = MEMORY[0x22766BAC4](&unk_221319B78, &unk_24E706678);
    atomic_store(result, (unint64_t *)&qword_2556681A0);
  }
  return result;
}

unint64_t sub_2212BDFD8()
{
  unint64_t result;

  result = qword_2556681A8;
  if (!qword_2556681A8)
  {
    result = MEMORY[0x22766BAC4](&unk_221319C20, &unk_24E7065E8);
    atomic_store(result, (unint64_t *)&qword_2556681A8);
  }
  return result;
}

uint64_t sub_2212BE014()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2212BE02C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32) >= 4uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 64))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return swift_deallocObject();
}

void sub_2212BE074(char *a1)
{
  uint64_t v1;

  sub_2212BD15C(a1, (char *)(v1 + 16));
}

uint64_t sub_2212BE07C(uint64_t a1)
{
  sub_221046F24(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  return a1;
}

ValueMetadata *_s25ButtonLabelEnvironmentKeyOMa()
{
  return &_s25ButtonLabelEnvironmentKeyON;
}

unint64_t sub_2212BE0C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2556681C0;
  if (!qword_2556681C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556681B8);
    v2[0] = sub_221018504(&qword_2556681C8, &qword_2556681B0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_221018504(&qword_2556681D0, &qword_2556681D8, MEMORY[0x24BDF1248]);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2556681C0);
  }
  return result;
}

void *sub_2212BE164()
{
  return &unk_255668148;
}

void sub_2212BE170(uint64_t a1@<X8>)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = sub_2212BE164();
  v4 = v2[1];
  v3 = v2[2];
  v5 = v2[3];
  v6 = v2[4];
  v7 = v2[5];
  v8 = v2[6];
  v9 = v2[7];
  v10 = v2[8];
  v11 = *((_BYTE *)v2 + 72);
  *(_BYTE *)a1 = *(_BYTE *)v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 72) = v11;
  sub_221046F24(v4, v3, v5, v6, v7, v8);
}

uint64_t sub_2212BE1C4()
{
  sub_2212BD498();
  return sub_2212F3138();
}

double OUTLINED_FUNCTION_0_74@<D0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  double result;

  *(__n128 *)(a1 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_BYTE *)(a1 + 72) = 0;
  return result;
}

void OUTLINED_FUNCTION_1_62(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  *(__n128 *)(a1 + 24) = a2;
  *(__n128 *)(a1 + 40) = a2;
  *(__n128 *)(a1 + 56) = a2;
  *(_BYTE *)(a1 + 72) = 0;
}

__n128 OUTLINED_FUNCTION_2_60(uint64_t a1)
{
  return *(__n128 *)(a1 + 56);
}

void OUTLINED_FUNCTION_3_55(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v9;

  *(_BYTE *)a9 = v9;
  *(_QWORD *)(a9 + 8) = a1;
  *(_QWORD *)(a9 + 16) = a2;
  *(_QWORD *)(a9 + 24) = a3;
  *(_QWORD *)(a9 + 32) = a4;
  *(_QWORD *)(a9 + 40) = a5;
  *(_QWORD *)(a9 + 48) = a6;
  *(_QWORD *)(a9 + 56) = a7;
  *(_QWORD *)(a9 + 64) = a8;
  *(_BYTE *)(a9 + 72) = 0;
  sub_221046F24(a1, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_4_49()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_5_46()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2210470B0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_7_56()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2210470B0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_8_38()
{
  uint64_t v0;
  uint64_t v1;

  return sub_221046F8C(v1, v0);
}

_OWORD *OUTLINED_FUNCTION_9_53(uint64_t a1, _OWORD *a2)
{
  __int128 *v2;

  return sub_2212BCE58(v2, a2);
}

uint64_t OUTLINED_FUNCTION_11_54()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 72) = *(_BYTE *)(v1 + 72);
  return v0;
}

_BYTE *OUTLINED_FUNCTION_12_48(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_43(uint64_t a1, uint64_t a2)
{
  return sub_221046F8C(a1, a2);
}

__n128 OUTLINED_FUNCTION_15_36()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 + 40);
  v3 = *(_OWORD *)(v1 + 56);
  *(__n128 *)(v0 + 40) = result;
  *(_OWORD *)(v0 + 56) = v3;
  return result;
}

void OUTLINED_FUNCTION_19_34()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 56) = *(_BYTE *)(v1 + 56);
}

uint64_t OUTLINED_FUNCTION_20_30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
  result = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 48) = result;
  return result;
}

void OUTLINED_FUNCTION_22_26()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 24) = *(_BYTE *)(v1 + 24);
}

uint64_t OUTLINED_FUNCTION_23_26()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  *(_QWORD *)(v0 + 8) = *(_QWORD *)(v1 + 8);
  result = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 16) = result;
  return result;
}

void sub_2212BE394()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_6_45();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_2212BE3B0(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_7_57(a1);
  OUTLINED_FUNCTION_6_0();
}

void static PrimitiveButtonStyle<>.subscriptionPickerOptionProminent.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = swift_getKeyPath();
  *(_BYTE *)(a1 + 8) = 0;
  OUTLINED_FUNCTION_6_0();
}

void SubscriptionStorePickerOptionProminentPlatterStyle.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = swift_getKeyPath();
  *(_BYTE *)(a1 + 8) = 0;
  OUTLINED_FUNCTION_6_0();
}

void sub_2212BE428()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_6_45();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_2212BE444(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_7_57(a1);
  OUTLINED_FUNCTION_6_0();
}

void SubscriptionStorePickerOptionPlatterStyle.makeBody(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[8];
  uint64_t KeyPath;
  char v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  v3 = sub_2212F3E7C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_7();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657AC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_13_0();
  v9 = v8 - v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, a1, v3);
  sub_2212F47A0();
  v10[0] = 0;
  KeyPath = swift_getKeyPath();
  v12 = 0;
  v13 = swift_getKeyPath();
  v14 = 0;
  v15 = swift_getKeyPath();
  v16 = 0;
  v17 = swift_getKeyPath();
  v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A890);
  sub_221018504((unint64_t *)&qword_255657AD0, &qword_255657AC8, MEMORY[0x24BDF43B0]);
  sub_221018504(&qword_25565A898, &qword_25565A890, (uint64_t)&unk_2212FC368);
  sub_2212F4188();
  sub_2212BE8C4((uint64_t)v10);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  OUTLINED_FUNCTION_19();
}

void sub_2212BE5F8(uint64_t a1)
{
  SubscriptionStorePickerOptionPlatterStyle.makeBody(configuration:)(a1);
}

void SubscriptionStorePickerOptionProminentPlatterStyle.makeBody(configuration:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[8];
  uint64_t KeyPath;
  char v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;

  v5 = sub_2212F3E7C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_13_0();
  v9 = v8 - v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657AC8);
  v21 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_7();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556681E0);
  v11 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_13_0();
  v14 = v13 - v12;
  v15 = *(_QWORD *)v2;
  v16 = *(_BYTE *)(v2 + 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  sub_2212F47A0();
  sub_221017C08(v15, v16);
  sub_22104359C();
  LOBYTE(a1) = v17;
  sub_221017894(v15, v16);
  v24[0] = a1 & 1;
  KeyPath = swift_getKeyPath();
  v26 = 0;
  v27 = swift_getKeyPath();
  v28 = 0;
  v29 = swift_getKeyPath();
  v30 = 0;
  v31 = swift_getKeyPath();
  v32 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565A890);
  sub_221018504((unint64_t *)&qword_255657AD0, &qword_255657AC8, MEMORY[0x24BDF43B0]);
  sub_221018504(&qword_25565A898, &qword_25565A890, (uint64_t)&unk_2212FC368);
  sub_2212F4188();
  sub_2212BE8C4((uint64_t)v24);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v3, v10);
  v18 = swift_getKeyPath();
  v19 = swift_allocObject();
  *(_BYTE *)(v19 + 16) = 2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a2, v14, v22);
  v20 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556681E8) + 36));
  *v20 = v18;
  v20[1] = (uint64_t)sub_22103D754;
  v20[2] = v19;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v22);
  OUTLINED_FUNCTION_19();
}

void sub_2212BE884()
{
  _BOOL8 v0;

  v0 = OUTLINED_FUNCTION_5_47();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

void sub_2212BE8A0()
{
  _BOOL8 v0;

  v0 = OUTLINED_FUNCTION_5_47();
  OUTLINED_FUNCTION_14_1(v0);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_2212BE8C4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A890);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2212BE90C()
{
  return swift_deallocObject();
}

uint64_t sub_2212BE91C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2212BE92C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SubscriptionStorePickerOptionPlatterStyle()
{
  return &type metadata for SubscriptionStorePickerOptionPlatterStyle;
}

ValueMetadata *type metadata accessor for SubscriptionStorePickerOptionProminentPlatterStyle()
{
  return &type metadata for SubscriptionStorePickerOptionProminentPlatterStyle;
}

uint64_t sub_2212BE95C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657AC8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A890);
  sub_221018504((unint64_t *)&qword_255657AD0, &qword_255657AC8, MEMORY[0x24BDF43B0]);
  sub_221018504(&qword_25565A898, &qword_25565A890, (uint64_t)&unk_2212FC368);
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2212BEA00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_2556681F0;
  if (!qword_2556681F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556681E8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657AC8);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565A890);
    v2[4] = sub_221018504((unint64_t *)&qword_255657AD0, &qword_255657AC8, MEMORY[0x24BDF43B0]);
    v2[5] = sub_221018504(&qword_25565A898, &qword_25565A890, (uint64_t)&unk_2212FC368);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_221018504(&qword_2556573E0, &qword_2556573E8, MEMORY[0x24BDF1248]);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2556681F0);
  }
  return result;
}

BOOL OUTLINED_FUNCTION_5_47()
{
  return sub_2212526B4();
}

uint64_t OUTLINED_FUNCTION_6_45()
{
  return sub_2210B91B0();
}

uint64_t OUTLINED_FUNCTION_7_57(unsigned __int8 *a1)
{
  return sub_2210B91C4(*a1);
}

uint64_t sub_2212BEB2C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _BYTE v12[40];
  __int128 v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  _BYTE v17[40];
  _QWORD v18[2];
  char v19;
  uint64_t v20;

  sub_2212BEC48(a4, (uint64_t)v17);
  v18[0] = a1;
  v18[1] = a2;
  v19 = a3;
  sub_2212BEC48((uint64_t)v17, (uint64_t)&v13);
  if (v14)
  {
    sub_22101E4FC(&v13, (uint64_t)v12);
    sub_2210BF00C((uint64_t)v12, (uint64_t)v15);
    swift_retain_n();
    swift_retain_n();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    swift_release();
    swift_release();
  }
  else
  {
    v16 = 0;
    memset(v15, 0, sizeof(v15));
    swift_retain();
    swift_retain();
  }
  sub_2210AE4C0((uint64_t)v17);
  sub_2212BEC90((uint64_t)v15, (uint64_t)&v20);
  MEMORY[0x227669B20](v18, a5, &type metadata for LocalizedErrorAlertModifier, a6);
  return sub_2212BECD8((uint64_t)v18);
}

uint64_t sub_2212BEC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2212BEC90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25565A9C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2212BECD8(uint64_t a1)
{
  destroy for LocalizedErrorAlertModifier(a1);
  return a1;
}

ValueMetadata *type metadata accessor for LocalizedErrorAlertModifier.AnyLocalizedError()
{
  return &type metadata for LocalizedErrorAlertModifier.AnyLocalizedError;
}

uint64_t destroy for LocalizedErrorAlertModifier(uint64_t a1)
{
  uint64_t result;

  swift_release();
  result = swift_release();
  if (*(_QWORD *)(a1 + 48))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  return result;
}

uint64_t initializeWithCopy for LocalizedErrorAlertModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = (_OWORD *)(a1 + 24);
  v6 = a2 + 24;
  v7 = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_retain();
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 24, v6, v7);
  }
  else
  {
    v9 = *(_OWORD *)(v6 + 16);
    *v5 = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(v6 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for LocalizedErrorAlertModifier(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = (_OWORD *)(a1 + 24);
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
    }
    else
    {
      sub_2212BEECC(a1 + 24);
      v7 = *(_QWORD *)(a2 + 56);
      v8 = *(_OWORD *)(a2 + 40);
      *v4 = *v5;
      *(_OWORD *)(a1 + 40) = v8;
      *(_QWORD *)(a1 + 56) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 24, a2 + 24);
  }
  else
  {
    v9 = *v5;
    v10 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *v4 = v9;
    *(_OWORD *)(a1 + 40) = v10;
  }
  return a1;
}

uint64_t sub_2212BEECC(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

uint64_t assignWithTake for LocalizedErrorAlertModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (*(_QWORD *)(a1 + 48))
  {
    if (*(_QWORD *)(a2 + 48))
      __swift_destroy_boxed_opaque_existential_1(a1 + 24);
    else
      sub_2212BEECC(a1 + 24);
  }
  v4 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedErrorAlertModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedErrorAlertModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedErrorAlertModifier()
{
  return &type metadata for LocalizedErrorAlertModifier;
}

uint64_t sub_2212BF020(uint64_t (*a1)(uint64_t, uint64_t))
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return a1(v3, v4);
}

uint64_t sub_2212BF064()
{
  return sub_2212BF020(MEMORY[0x24BDCBE48]);
}

uint64_t sub_2212BF080()
{
  return sub_2212BF020((uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDCBE40]);
}

uint64_t sub_2212BF09C()
{
  return sub_2212BF020((uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDCBE50]);
}

unint64_t sub_2212BF0C0()
{
  unint64_t result;

  result = qword_2556681F8;
  if (!qword_2556681F8)
  {
    result = MEMORY[0x22766BAC4](&unk_221319FAC, &type metadata for LocalizedErrorAlertModifier.AnyLocalizedError);
    atomic_store(result, (unint64_t *)&qword_2556681F8);
  }
  return result;
}

uint64_t sub_2212BF0FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2212BF10C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255659900);
  sub_2212F4884();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255668200);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565E048);
  sub_221018504(&qword_255668208, &qword_255668200, MEMORY[0x24BDEFB78]);
  sub_2212BF490();
  sub_22113A4F4();
  sub_2212F4434();
  swift_release();
  return swift_release();
}

uint64_t sub_2212BF244@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  __swift_instantiateConcreteTypeFromMangledName(qword_255668218);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2212FD640;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = sub_2212F28E0();
  v7 = v6;
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_2212F28EC();
  v10 = v8;
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 56) = v8;
  if (!v7)
  {
    v12 = MEMORY[0x24BEE4AF8];
    if (!v8)
      goto LABEL_12;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  sub_221152BAC(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v12 = v11;
  v14 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v11 + 24);
  if (v14 >= v13 >> 1)
  {
    sub_221152BAC(v13 > 1, v14 + 1, 1, v11);
    v12 = v25;
  }
  *(_QWORD *)(v12 + 16) = v14 + 1;
  v15 = v12 + 16 * v14;
  *(_QWORD *)(v15 + 32) = v5;
  *(_QWORD *)(v15 + 40) = v7;
  if (v10)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_221152BAC(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
      v12 = v26;
    }
    v17 = *(_QWORD *)(v12 + 16);
    v16 = *(_QWORD *)(v12 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_221152BAC(v16 > 1, v17 + 1, 1, v12);
      v12 = v27;
    }
    *(_QWORD *)(v12 + 16) = v17 + 1;
    v18 = v12 + 16 * v17;
    *(_QWORD *)(v18 + 32) = v9;
    *(_QWORD *)(v18 + 40) = v10;
  }
LABEL_12:
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25565E5C0);
  sub_221018504(qword_255662180, &qword_25565E5C0, MEMORY[0x24BEE12B0]);
  v19 = sub_2212F5268();
  v21 = v20;
  result = swift_bridgeObjectRelease();
  v23 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0)
    v23 = v19 & 0xFFFFFFFFFFFFLL;
  if (v23)
  {
    v24 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v19 = 0;
    v21 = 0;
    v24 = 0;
  }
  *a2 = v19;
  a2[1] = v21;
  a2[2] = 0;
  a2[3] = v24;
  return result;
}

unint64_t sub_2212BF490()
{
  unint64_t result;

  result = qword_255668210;
  if (!qword_255668210)
  {
    result = MEMORY[0x22766BAC4](&unk_221319FEC, &type metadata for LocalizedErrorAlertModifier.AnyLocalizedError);
    atomic_store(result, (unint64_t *)&qword_255668210);
  }
  return result;
}

uint64_t sub_2212BF4CC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255668200);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25565E048);
  sub_221018504(&qword_255668208, &qword_255668200, MEMORY[0x24BDEFB78]);
  sub_2212BF490();
  sub_22113A4F4();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2212BF57C@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  _QWORD v11[2];

  v11[1] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[0] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v11 - v5;
  swift_getAssociatedConformanceWitness();
  v7 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x24BDAC7A8](v8);
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_2_61();
  OUTLINED_FUNCTION_1_63();
  OUTLINED_FUNCTION_2_61();
  OUTLINED_FUNCTION_1_63();
  sub_2212F5220();
  v9 = *(void (**)(char *, uint64_t))(v11[0] + 8);
  v9(v3, AssociatedTypeWitness);
  return ((uint64_t (*)(char *, uint64_t))v9)(v6, AssociatedTypeWitness);
}

uint64_t sub_2212BF770()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v0);
  swift_getAssociatedConformanceWitness();
  sub_2212F5D0C();
  swift_checkMetadataState();
  return sub_2212F5CB8();
}

uint64_t sub_2212BF890(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD *, _QWORD);
  uint64_t v34;
  _QWORD *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _DWORD v51[14];
  _QWORD v52[4];
  _DWORD v53[2];
  int v54;
  uint64_t v55;

  v46 = a2;
  v3 = *(_QWORD *)(a2 + 16);
  v44 = *(_QWORD *)(a2 + 24);
  v45 = v3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v49 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v50 = AssociatedTypeWitness;
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v5);
  v47 = (uint64_t)&v41 - v6;
  v7 = OUTLINED_FUNCTION_15_7();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = sub_2212F597C();
  v42 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v41 - v12;
  v43 = sub_2212F5A84();
  v48 = *(_QWORD *)(v43 - 8);
  OUTLINED_FUNCTION_1_9();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v41 - v15;
  sub_2212F54FC();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v17, (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  MEMORY[0x22766BAC4](MEMORY[0x24BEE25B0], v10);
  v19 = (uint64_t)v16;
  v20 = MEMORY[0x24BDF3DF0];
  sub_2212F5B80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v10);
  sub_2212BFD88();
  sub_2212F45FC();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_release();
  v51[0] = v22;
  v51[1] = v24;
  v51[2] = v26;
  v51[3] = v28;
  v29 = sub_2212C0C28();
  v55 = v44;
  v30 = v43;
  v31 = MEMORY[0x22766BAC4](MEMORY[0x24BEE2B50], v43, &v55);
  sub_2212BF57C((uint64_t)v52);
  v54 = v52[0];
  sub_2212BF770();
  v53[0] = v53[1];
  v32 = v47;
  sub_2212BC13C(v19, (uint64_t)&v54, (uint64_t)v53, v20, v30, v29, v31, v29, v47);
  v33 = (void (*)(_QWORD *, _QWORD))sub_2212F57A8();
  sub_2212C0B50(v34, (uint64_t)v51);
  v33(v52, 0);
  sub_2212BFE30(v52);
  sub_2212C0C64((uint64_t)v51);
  v35 = __swift_project_boxed_opaque_existential_1(v52, v52[3]);
  v36 = MEMORY[0x24BDAC7A8](v35);
  (*(void (**)(char *, __n128))(v38 + 16))((char *)&v41 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0), v36);
  v39 = sub_2212F2F70();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v32, v50);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v19, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return v39;
}

uint64_t sub_2212BFCA4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t result;
  _QWORD v12[4];
  __int128 v13[2];
  char v14;

  sub_2212C0B50(a1, (uint64_t)v13);
  if ((v14 & 1) != 0)
  {
    sub_22101E4FC(v13, (uint64_t)v12);
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    if (sub_2212F2D84())
      swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  sub_2212F45FC();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  result = swift_release();
  *a2 = v4;
  a2[1] = v6;
  a2[2] = v8;
  a2[3] = v10;
  return result;
}

uint64_t sub_2212BFD88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];
  __int128 v6[2];
  uint64_t v7;
  char v8;

  sub_2212C0B50(v0, (uint64_t)v6);
  if ((v8 & 1) == 0)
    return *(_QWORD *)&v6[0];
  v1 = v7;
  sub_22101E4FC(v6, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v2 = sub_2212F2D84();
  if (v2)
  {
    v3 = v2;
    swift_release();
    v1 = v3;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v1;
}

uint64_t sub_2212BFE30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6[2];
  char v7;

  result = sub_2212C0B50(v1, (uint64_t)v6);
  if ((v7 & 1) != 0)
  {
    swift_release();
    return sub_22101E4FC(v6, (uint64_t)a1);
  }
  else
  {
    v4 = *(_QWORD *)&v6[0];
    v5 = MEMORY[0x24BDF3E18];
    a1[3] = MEMORY[0x24BDF3E48];
    a1[4] = v5;
    *a1 = v4;
  }
  return result;
}

uint64_t sub_2212BFE9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_2212BF890(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212BFEC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2212BFD88();
  *a1 = result;
  return result;
}

uint64_t sub_2212BFEE4()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[5];

  if (qword_255655D50 != -1)
    swift_once();
  if (byte_255661B81 == 2)
  {
    storekit_dyld_fall_2024_os_versions();
    if ((dyld_program_minos_at_least() & 1) == 0)
      goto LABEL_9;
  }
  else if ((byte_255661B81 & 1) == 0)
  {
LABEL_9:
    __swift_instantiateConcreteTypeFromMangledName(&qword_255666FD8);
    v1 = OUTLINED_FUNCTION_4_50();
    *(_OWORD *)(v1 + 16) = xmmword_2212FD640;
    *(_QWORD *)(v1 + 32) = sub_2212F45CC();
    *(_BYTE *)(v1 + 80) = 0;
    v2 = sub_2212F45B4();
    goto LABEL_10;
  }
  v4[3] = &type metadata for StoreKitViewsFeature;
  v4[4] = sub_221078794();
  LOBYTE(v4[0]) = 2;
  v0 = sub_2212F2B38();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  if ((v0 & 1) == 0)
    goto LABEL_9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255666FD8);
  v1 = OUTLINED_FUNCTION_4_50();
  *(_OWORD *)(v1 + 16) = xmmword_2212FD640;
  v4[0] = sub_2212F45F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255666FE0);
  sub_22129B7CC();
  sub_2212C0030();
  *(_QWORD *)(v1 + 32) = sub_2212F4644();
  *(_BYTE *)(v1 + 80) = 0;
  v2 = sub_2212F45F0();
LABEL_10:
  *(_QWORD *)(v1 + 88) = v2;
  *(_BYTE *)(v1 + 136) = 0;
  return v1;
}

unint64_t sub_2212C0030()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255666FF0;
  if (!qword_255666FF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255666FE0);
    result = MEMORY[0x22766BAC4](&unk_221301F78, v1);
    atomic_store(result, (unint64_t *)&qword_255666FF0);
  }
  return result;
}

uint64_t destroy for AnyColorConvertibleShapeStyle(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 48);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)
    __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_release();
}

uint64_t initializeWithCopy for AnyColorConvertibleShapeStyle(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  char v6;

  v4 = *(unsigned __int8 *)(a2 + 48);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    v6 = 1;
  }
  else
  {
    v6 = 0;
    *(_QWORD *)a1 = *(_QWORD *)a2;
  }
  swift_retain();
  *(_BYTE *)(a1 + 48) = v6;
  return a1;
}

uint64_t assignWithCopy for AnyColorConvertibleShapeStyle(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  char v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
      __swift_destroy_boxed_opaque_existential_1(a1);
    swift_release();
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v7 = 1;
    }
    else
    {
      v7 = 0;
      *(_QWORD *)a1 = *(_QWORD *)a2;
    }
    *(_BYTE *)(a1 + 48) = v7;
    swift_retain();
  }
  return a1;
}

uint64_t assignWithTake for AnyColorConvertibleShapeStyle(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
      __swift_destroy_boxed_opaque_existential_1(a1);
    swift_release();
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    else
    {
      LOBYTE(v5) = 0;
      *(_QWORD *)a1 = *(_QWORD *)a2;
    }
    *(_BYTE *)(a1 + 48) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyColorConvertibleShapeStyle(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AnyColorConvertibleShapeStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_2212C0338(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_2212C0354(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AnyColorConvertibleShapeStyle()
{
  return &type metadata for AnyColorConvertibleShapeStyle;
}

uint64_t sub_2212C038C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2212C0400(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 49 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = *(unsigned __int8 *)(v10 + 48);
    if (v11 >= 2)
      v11 = *(_DWORD *)v10 + 2;
    v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    if (v11 == 1)
    {
      v13 = *(_QWORD *)(v10 + 24);
      *(_QWORD *)(v12 + 24) = v13;
      *(_QWORD *)(v12 + 32) = *(_QWORD *)(v10 + 32);
      (**(void (***)(unint64_t, unint64_t))(v13 - 8))(v12, v10);
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v10 + 40);
      *(_BYTE *)(v12 + 48) = 1;
    }
    else
    {
      *(_QWORD *)v12 = *(_QWORD *)v10;
      *(_BYTE *)(v12 + 48) = 0;
    }
  }
  swift_retain();
  return v4;
}

uint64_t sub_2212C0508(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unsigned int v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(unsigned __int8 *)(v4 + 48);
  if (v5 >= 2)
    v5 = *(_DWORD *)v4 + 2;
  if (v5 == 1)
    __swift_destroy_boxed_opaque_existential_1(v4);
  return swift_release();
}

uint64_t sub_2212C0570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  char v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = v6 + a1;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(unsigned __int8 *)(v8 + 48);
  if (v9 >= 2)
    v9 = *(_DWORD *)v8 + 2;
  v10 = v7 & 0xFFFFFFFFFFFFFFF8;
  if (v9 == 1)
  {
    v11 = *(_QWORD *)(v8 + 24);
    *(_QWORD *)(v10 + 24) = v11;
    *(_QWORD *)(v10 + 32) = *(_QWORD *)(v8 + 32);
    (**(void (***)(unint64_t, unint64_t))(v11 - 8))(v10, v8);
    *(_QWORD *)(v10 + 40) = *(_QWORD *)(v8 + 40);
    v12 = 1;
  }
  else
  {
    v12 = 0;
    *(_QWORD *)v10 = *(_QWORD *)v8;
  }
  swift_retain();
  *(_BYTE *)(v10 + 48) = v12;
  return a1;
}

uint64_t sub_2212C0628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  if (v7 != v8)
  {
    v9 = *(unsigned __int8 *)(v7 + 48);
    if (v9 >= 2)
      v9 = *(_DWORD *)v7 + 2;
    if (v9 == 1)
      __swift_destroy_boxed_opaque_existential_1(v7);
    swift_release();
    v10 = *(unsigned __int8 *)(v8 + 48);
    if (v10 >= 2)
      v10 = *(_DWORD *)v8 + 2;
    if (v10 == 1)
    {
      v11 = *(_QWORD *)(v8 + 24);
      *(_QWORD *)(v7 + 24) = v11;
      *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
      (**(void (***)(unint64_t, unint64_t))(v11 - 8))(v7, v8);
      *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
      v12 = 1;
    }
    else
    {
      v12 = 0;
      *(_QWORD *)v7 = *(_QWORD *)v8;
    }
    *(_BYTE *)(v7 + 48) = v12;
    swift_retain();
  }
  return a1;
}

uint64_t sub_2212C071C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unint64_t v10;
  __int128 v11;
  __int128 v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = v6 + a1;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(unsigned __int8 *)(v8 + 48);
  if (v9 >= 2)
    v9 = *(_DWORD *)v8 + 2;
  v10 = v7 & 0xFFFFFFFFFFFFFFF8;
  if (v9 == 1)
  {
    v11 = *(_OWORD *)v8;
    v12 = *(_OWORD *)(v8 + 32);
    *(_OWORD *)(v10 + 16) = *(_OWORD *)(v8 + 16);
    *(_OWORD *)(v10 + 32) = v12;
    *(_OWORD *)v10 = v11;
  }
  else
  {
    LOBYTE(v9) = 0;
    *(_QWORD *)v10 = *(_QWORD *)v8;
  }
  *(_BYTE *)(v10 + 48) = v9;
  return a1;
}

uint64_t sub_2212C07B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  __int128 v11;
  __int128 v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  if (v7 != v8)
  {
    v9 = *(unsigned __int8 *)(v7 + 48);
    if (v9 >= 2)
      v9 = *(_DWORD *)v7 + 2;
    if (v9 == 1)
      __swift_destroy_boxed_opaque_existential_1(v7);
    swift_release();
    v10 = *(unsigned __int8 *)(v8 + 48);
    if (v10 >= 2)
      v10 = *(_DWORD *)v8 + 2;
    if (v10 == 1)
    {
      v11 = *(_OWORD *)v8;
      v12 = *(_OWORD *)(v8 + 32);
      *(_OWORD *)(v7 + 16) = *(_OWORD *)(v8 + 16);
      *(_OWORD *)(v7 + 32) = v12;
      *(_OWORD *)v7 = v11;
    }
    else
    {
      LOBYTE(v10) = 0;
      *(_QWORD *)v7 = *(_QWORD *)v8;
    }
    *(_BYTE *)(v7 + 48) = v10;
  }
  return a1;
}

uint64_t sub_2212C0880(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0xFE)
    v7 = 254;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0xFE)
    {
      v15 = *(unsigned __int8 *)(((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 0x30);
      if (v15 >= 2)
        return (v15 ^ 0xFF) + 1;
      else
        return 0;
    }
    else
    {
      return __swift_getEnumTagSinglePayload(a1, v6, v4);
    }
  }
  else
  {
    v9 = ((v8 + 7) & 0xFFFFFFF8) + 49;
    v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_2212C0908 + 4 * byte_22131A090[v13]))();
  }
}

void sub_2212C0990(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 49;
  if (v6 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (v6 < a2)
  {
    v11 = ~v6 + a2;
    v12 = (~(_BYTE)v6 + a2);
    if (v7 >= 4)
      v13 = v11;
    else
      v13 = v12;
    bzero(a1, v7);
    if ((_DWORD)v7 == 1)
      *a1 = v13;
    else
      *(_DWORD *)a1 = v13;
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_2212C0AA8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x2212C0B2CLL);
}

void sub_2212C0AB0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x2212C0AB8);
  JUMPOUT(0x2212C0B2CLL);
}

void sub_2212C0AF8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x2212C0B2CLL);
}

void sub_2212C0B00()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x2212C0B2CLL);
}

uint64_t sub_2212C0B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!(_DWORD)a2)
    goto LABEL_6;
  if (a3 < 0xFE)
  {
    if (a2 > 0xFE)
      JUMPOUT(0x2212C0B14);
    *(_BYTE *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 48) = -(char)a2;
LABEL_6:
    JUMPOUT(0x2212C0B2CLL);
  }
  return __swift_storeEnumTagSinglePayload(v6, a2, a3, a4);
}

uint64_t type metadata accessor for BestContrastForegroundStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BestContrastForegroundStyle);
}

uint64_t sub_2212C0B50(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyColorConvertibleShapeStyle(a2, a1);
  return a2;
}

uint64_t sub_2212C0B84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_15_7();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2212C0BE0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  OUTLINED_FUNCTION_15_7();
  return sub_2212BFCA4(a1, a2);
}

unint64_t sub_2212C0C28()
{
  unint64_t result;

  result = qword_2556682A0[0];
  if (!qword_2556682A0[0])
  {
    result = MEMORY[0x22766BAC4](&unk_221317680, MEMORY[0x24BDF3DF0]);
    atomic_store(result, qword_2556682A0);
  }
  return result;
}

uint64_t sub_2212C0C64(uint64_t a1)
{
  destroy for AnyColorConvertibleShapeStyle(a1);
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_63()
{
  return sub_2212F5CB8();
}

uint64_t OUTLINED_FUNCTION_2_61()
{
  return sub_2212F5D18();
}

uint64_t OUTLINED_FUNCTION_4_50()
{
  return swift_allocObject();
}

uint64_t sub_2212C0CBC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[7];

  v45 = a6;
  v46 = a7;
  v44 = a5;
  v42 = a3;
  v43 = a4;
  v47 = a9;
  v39 = a13;
  v40 = a14;
  v48 = a12;
  v38 = a10;
  v41 = a2 & 1;
  v15 = *(_QWORD *)(a8 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v18, v20, v19, v17);
  v21 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v22 = v21 + v16;
  v23 = (v21 + v16) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject();
  v37 = &v24[v23];
  *((_QWORD *)v24 + 2) = a8;
  *((_QWORD *)v24 + 3) = a10;
  v25 = v48;
  *((_QWORD *)v24 + 4) = a11;
  *((_QWORD *)v24 + 5) = v25;
  v26 = v39;
  v27 = v40;
  *((_QWORD *)v24 + 6) = v39;
  *((_QWORD *)v24 + 7) = v27;
  (*(void (**)(char *, char *))(v15 + 32))(&v24[v21], v18);
  v24[v22] = v41;
  *((_QWORD *)v37 + 1) = v42;
  v28 = &v24[(v23 + 23) & 0xFFFFFFFFFFFFFFF8];
  *(_QWORD *)v28 = v43;
  v28[8] = v44 & 1;
  v29 = &v24[(v23 + 39) & 0xFFFFFFFFFFFFFFF8];
  v30 = v46;
  *(_QWORD *)v29 = v45;
  *((_QWORD *)v29 + 1) = v30;
  swift_retain();
  v49[2] = v38;
  v49[3] = a11;
  v49[4] = v26;
  v49[5] = v27;
  v31 = sub_2212F3BF4();
  MEMORY[0x22766BAC4](MEMORY[0x24BDEFFC0], v31);
  v32 = sub_2212F38A0();
  v33 = sub_2212F3348();
  v34 = MEMORY[0x22766BAC4](MEMORY[0x24BDEEC88], v32);
  v49[0] = v48;
  v49[1] = v34;
  MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v33, v49);
  sub_2212F30D8();
  return swift_release();
}

uint64_t sub_2212C0ED4()
{
  uint64_t v0;

  v0 = sub_2212F3BF4();
  MEMORY[0x22766BAC4](MEMORY[0x24BDEFFC0], v0);
  return sub_2212F420C();
}

uint64_t sub_2212C0FA8()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2212C101C()
{
  return sub_2212C0ED4();
}

uint64_t sub_2212C10A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X7>, uint64_t a5@<X8>, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = a1;
  v16 = a5;
  v17 = a2;
  v18 = a3;
  v19 = a4;
  v20 = a6;
  v6 = sub_2212F3BF4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v15 - v11;
  sub_2212F3444();
  sub_2212F3438();
  MEMORY[0x22766BAC4](MEMORY[0x24BDEFFC0], v6);
  sub_221088D68((uint64_t)v9, v6, (uint64_t)v12);
  v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  sub_221087210((uint64_t)v12, v6, v16);
  return ((uint64_t (*)(char *, uint64_t))v13)(v12, v6);
}

uint64_t sub_2212C11EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2212C10A8(v1[8], v1[3], v1[4], v1[6], a1, v1[7]);
}

void sub_2212C1220()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_22105009C(319, &qword_255657C20, type metadata accessor for ProductViewConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_22105009C(319, (unint64_t *)&qword_255656FF8, (uint64_t (*)(uint64_t))MEMORY[0x24BDED930], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
      {
        sub_22105009C(319, (unint64_t *)&qword_255657000, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

_QWORD *sub_2212C1334(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  size_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  size_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  size_t v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  void (*v64)(unint64_t, unint64_t, uint64_t);
  _WORD *v65;
  _WORD *v66;
  unint64_t v67;
  uint64_t v68;
  size_t v69;
  unint64_t v70;
  char v71;
  unint64_t v72;
  unint64_t v73;
  void (*v74)(unint64_t, unint64_t, uint64_t);
  unint64_t v75;
  unint64_t v76;
  char v77;
  unint64_t v78;
  unint64_t v79;
  void (*v80)(unint64_t, unint64_t, uint64_t);
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  _QWORD *v85;
  unsigned int v86;
  unint64_t v87;
  unint64_t v88;
  void (*v89)(unint64_t, unint64_t, uint64_t);
  unint64_t v90;
  unint64_t v91;
  _WORD *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  unint64_t v99;
  void (*v100)(uint64_t, unint64_t, uint64_t);
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  void (*v105)(uint64_t, unint64_t, uint64_t);
  uint64_t v106;
  unint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  void *v111;
  const void *v112;
  unint64_t v113;
  unint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  _QWORD *v121;
  _QWORD *v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  char *v128;
  char *v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  char v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  char v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  char v141;
  _QWORD *result;
  void (*v143)(unint64_t, unint64_t, uint64_t);
  uint64_t v144;
  size_t v145;
  uint64_t v146;
  size_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  size_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  unsigned int v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  uint64_t v183;
  size_t v184;
  unint64_t v185;
  unint64_t v187;

  v174 = sub_2212F5124();
  v4 = *(_QWORD *)(v174 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v161 = v5 + 16;
  v172 = v4;
  v6 = *(_QWORD *)(v4 + 64);
  v159 = sub_2212F5058();
  v7 = *(_QWORD *)(v159 - 8);
  v182 = *(_DWORD *)(v7 + 80);
  v8 = v5 | (unint64_t)v182 | 7;
  v162 = v8 + v6;
  v156 = v182 + 16;
  v157 = v7;
  v164 = v182;
  v166 = v5;
  v158 = *(_QWORD *)(v7 + 64) + v5;
  v9 = v6 + 7;
  v10 = (v6 + 7 + ((v158 + ((v164 + 16) & ~v164)) & ~(unint64_t)v5)) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 8;
  v12 = v10 + 9;
  v155 = v11;
  if (v12 <= v11)
    v12 = v11;
  if (v12 <= 2)
    v12 = 2;
  v173 = v12;
  v13 = v12 + ((v8 + v6 + ((v5 + 16) & ~(unint64_t)v5)) & ~v8);
  v163 = v6 + 7;
  if (v13 + 1 > (v9 & 0xFFFFFFFFFFFFFFF8) + 16)
    v14 = v13 + 1;
  else
    v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v14 <= 0x10)
    v14 = 16;
  v185 = v14;
  v177 = sub_2212F29B8();
  v15 = *(_QWORD *)(v177 - 8);
  v17 = *(_DWORD *)(v15 + 80);
  v16 = *(_DWORD *)(v15 + 84);
  v18 = v16 - 1;
  if (!v16)
    v18 = 0;
  if (v18 <= 0x7FFFFFFF)
    v19 = 0x7FFFFFFF;
  else
    v19 = v18;
  if (v18 >= 0)
    v20 = 0x7FFFFFFF;
  else
    v20 = v19;
  v178 = v20;
  v168 = *(_DWORD *)(v15 + 84);
  v21 = *(_DWORD *)(v15 + 80);
  v22 = v8 | v21;
  v160 = *(_QWORD *)(v177 - 8);
  v23 = *(_QWORD *)(v15 + 64);
  if (!v16)
    ++v23;
  v184 = v23;
  v176 = *(_QWORD *)(a3 + 16);
  v24 = *(_QWORD *)(v176 - 8);
  v25 = *(_DWORD *)(v24 + 80);
  v175 = v24;
  v180 = *(_QWORD *)(v24 + 64);
  v26 = sub_2212F33F0();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_DWORD *)(v27 + 80);
  v29 = v28 & 0xF8;
  v170 = v27;
  v171 = v26;
  v30 = *(_QWORD *)(v27 + 64);
  if (v30 <= 8)
    v30 = 8;
  v187 = v30;
  v31 = sub_2212F330C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_DWORD *)(v32 + 80);
  v34 = v33 & 0xF8 | 7;
  if (*(_QWORD *)(v32 + 64) <= 8uLL)
    v35 = 8;
  else
    v35 = *(_QWORD *)(v32 + 64);
  v36 = v22 | v25 | v29 | v34;
  if (v36 != 7
    || ((v182 | v5 | v17 | v28 | v25 | v33) & 0x100000) != 0
    || (v37 = ((v22 + 32) & ~v22)
            + ((v184 + 7 + ((v21 + 16 + ((v185 + 8 + ((v185 + 1 + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8)
            + 8,
        v38 = v187 + v34 + 1,
        ((v35
        + ((v38
          + ((v180 + (v29 | 7) + ((v37 + v25) & ~(unint64_t)v25)) & ~(v29 | 7))) & ~v34)
        + 40) & 0xFFFFFFFFFFFFFFF8)
      + 9 > 0x18))
  {
    v46 = *a2;
    *a1 = *a2;
    v45 = (_QWORD *)(v46 + ((v36 + 16) & ~v36));
    swift_retain();
    return v45;
  }
  v39 = ~v8;
  v40 = ~v22;
  v183 = v35;
  v149 = *(_QWORD *)(v31 - 8);
  v150 = v31;
  v154 = v33 & 0xF8 | 7;
  v181 = v180 + (v29 | 7);
  v152 = ~(v29 | 7);
  v153 = v37 + v25;
  v151 = ~(unint64_t)v25;
  if (v178 == 0x7FFFFFFF)
  {
    v41 = a2;
    v42 = a2[1];
    if (v42 >= 0xFFFFFFFF)
    {
      v147 = v185 + 1;
      v148 = v8;
      v144 = ~v21;
      v169 = v185 + 8;
      v179 = v21 + 16;
      v145 = v184 + 7;
      v146 = v187 + v34 + 1;
      v43 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      v44 = (_QWORD *)(((unint64_t)v43 + v22 + 16) & v40);
      v45 = a1;
      goto LABEL_34;
    }
  }
  else
  {
    v41 = a2;
    v43 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    v44 = (_QWORD *)(((unint64_t)v43 + v22 + 16) & v40);
    v179 = v21 + 16;
    v47 = v168;
    v169 = v185 + 8;
    if (__swift_getEnumTagSinglePayload((v21+ 16+ ((v185 + 8 + (((unint64_t)v44 + v8 + v185 + 1) & v39)) & 0xFFFFFFFFFFFFFFF8)) & ~v21, v47, v177) <= 1)
    {
      v147 = v185 + 1;
      v148 = v8;
      v144 = ~v21;
      v145 = v184 + 7;
      v146 = v38;
      v42 = a2[1];
      v45 = a1;
      v40 = ~v22;
      v39 = ~v8;
LABEL_34:
      *v45 = *v41;
      v45[1] = v42;
      v48 = (_QWORD *)(((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v48 = *v43;
      v48[1] = v43[1];
      v49 = (_QWORD *)(((unint64_t)v48 + v22 + 16) & v40);
      v50 = *((unsigned __int8 *)v44 + v185);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v50 >= 3)
      {
        if (v185 <= 3)
          v51 = v185;
        else
          v51 = 4;
        __asm { BR              X11 }
      }
      v59 = v41;
      v60 = ~v166;
      v61 = ~v164;
      if (v50 == 2)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v172 + 16))(v49, v44, v174);
        *(_OWORD *)(((unint64_t)v49 + v163) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v44 + v163) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v49 + v185) = 2;
        v67 = v173;
      }
      else
      {
        if (v50 == 1)
        {
          *v49 = *v44;
          v49[1] = v44[1];
          v62 = ((unint64_t)v49 + v161) & v60;
          v165 = v44;
          v167 = ~v166;
          v63 = ((unint64_t)v44 + v161) & v60;
          v64 = *(void (**)(unint64_t, unint64_t, uint64_t))(v172 + 16);
          swift_bridgeObjectRetain();
          v143 = v64;
          v64(v62, v63, v174);
          v65 = (_WORD *)((v162 + v62) & v39);
          v66 = (_WORD *)((v162 + v63) & v39);
          v67 = v173;
          switch(*((_BYTE *)v66 + v173))
          {
            case 0:
              v71 = 0;
              *v65 = *v66;
              goto LABEL_53;
            case 1:
              *(_BYTE *)v65 = *(_BYTE *)v66;
              v71 = 1;
LABEL_53:
              v59 = a2;
              v69 = v147;
              v70 = v148;
              v60 = v167;
              goto LABEL_57;
            case 2:
              *(_QWORD *)v65 = *(_QWORD *)v66;
              *(_QWORD *)(((v162 + v62) & v39) + 8) = *(_QWORD *)(((v162 + v63) & v39) + 8);
              v72 = ((unint64_t)v65 + v156) & v61;
              v73 = ((unint64_t)v66 + v156) & v61;
              v74 = *(void (**)(unint64_t, unint64_t, uint64_t))(v157 + 16);
              swift_bridgeObjectRetain();
              v74(v72, v73, v159);
              v67 = v173;
              v75 = (v158 + v72) & v167;
              v76 = (v158 + v73) & v167;
              v143(v75, v76, v174);
              *(_QWORD *)((v163 + v75) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v163 + v76) & 0xFFFFFFFFFFFFF8);
              v77 = *((_BYTE *)v66 + v155);
              v60 = v167;
              *((_BYTE *)v65 + v155) = v77;
              v71 = 2;
              goto LABEL_56;
            case 3:
              *(_QWORD *)v65 = *(_QWORD *)v66;
              *(_QWORD *)(((v162 + v62) & v39) + 8) = *(_QWORD *)(((v162 + v63) & v39) + 8);
              v78 = ((unint64_t)v65 + v156) & v61;
              v79 = ((unint64_t)v66 + v156) & v61;
              v80 = *(void (**)(unint64_t, unint64_t, uint64_t))(v157 + 16);
              swift_bridgeObjectRetain();
              v80(v78, v79, v159);
              v67 = v173;
              v60 = v167;
              v81 = (v158 + v78) & v167;
              v82 = (v158 + v79) & v167;
              v143(v81, v82, v174);
              *(_QWORD *)((v163 + v81) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v163 + v82) & 0xFFFFFFFFFFFFF8);
              v71 = 3;
LABEL_56:
              v59 = a2;
              v69 = v147;
              v70 = v148;
LABEL_57:
              v44 = v165;
              *((_BYTE *)v65 + v67) = v71;
              *((_BYTE *)v49 + v185) = 1;
              break;
            default:
              if (v173 <= 3)
                v68 = v173;
              else
                v68 = 4;
              __asm { BR              X12 }
              return result;
          }
LABEL_58:
          v83 = (_QWORD *)(((unint64_t)v49 + v70 + v69) & v39);
          v84 = v39;
          v85 = (_QWORD *)(((unint64_t)v44 + v70 + v69) & v39);
          v86 = *((unsigned __int8 *)v85 + v185);
          if (v86 > 2)
          {
            memcpy(v83, v85, v69);
          }
          else
          {
            if (v86 != 2)
            {
              if (v86 == 1)
              {
                *v83 = *v85;
                v83[1] = v85[1];
                v87 = ((unint64_t)v83 + v161) & v60;
                v88 = ((unint64_t)v85 + v161) & v60;
                v89 = *(void (**)(unint64_t, unint64_t, uint64_t))(v172 + 16);
                swift_bridgeObjectRetain();
                v89(v87, v88, v174);
                v90 = v84;
                v91 = (v162 + v87) & v84;
                v92 = (_WORD *)((v162 + v88) & v90);
                switch(*((_BYTE *)v92 + v67))
                {
                  case 0:
                    v97 = 0;
                    *(_WORD *)v91 = *v92;
                    break;
                  case 1:
                    *(_BYTE *)v91 = *(_BYTE *)v92;
                    v97 = 1;
                    break;
                  case 2:
                    *(_QWORD *)v91 = *(_QWORD *)v92;
                    *(_QWORD *)(v91 + 8) = *(_QWORD *)(((v162 + v88) & v90) + 8);
                    v98 = (v156 + v91) & v61;
                    v99 = ((unint64_t)v92 + v156) & v61;
                    v100 = *(void (**)(uint64_t, unint64_t, uint64_t))(v157 + 16);
                    swift_bridgeObjectRetain();
                    v100(v98, v99, v159);
                    v67 = v173;
                    v101 = (v158 + v98) & v60;
                    v102 = (v158 + v99) & v60;
                    v89(v101, v102, v174);
                    *(_QWORD *)((v163 + v101) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v163 + v102) & 0xFFFFFFFFFFFFF8);
                    *(_BYTE *)(v91 + v155) = *((_BYTE *)v92 + v155);
                    v97 = 2;
                    break;
                  case 3:
                    *(_QWORD *)v91 = *(_QWORD *)v92;
                    *(_QWORD *)(v91 + 8) = *(_QWORD *)(((v162 + v88) & v90) + 8);
                    v103 = (v156 + v91) & v61;
                    v104 = ((unint64_t)v92 + v156) & v61;
                    v105 = *(void (**)(uint64_t, unint64_t, uint64_t))(v157 + 16);
                    swift_bridgeObjectRetain();
                    v105(v103, v104, v159);
                    v67 = v173;
                    v106 = (v158 + v103) & v60;
                    v107 = (v158 + v104) & v60;
                    v89(v106, v107, v174);
                    *(_QWORD *)((v163 + v106) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v163 + v107) & 0xFFFFFFFFFFFFF8);
                    v97 = 3;
                    break;
                  default:
                    if (v67 <= 3)
                      v93 = v67;
                    else
                      v93 = 4;
                    __asm { BR              X12 }
                    return result;
                }
                v45 = a1;
                v41 = a2;
                v94 = v179;
                v95 = v169;
                v96 = v144;
                *(_BYTE *)(v91 + v67) = v97;
                *((_BYTE *)v83 + v185) = 1;
              }
              else
              {
                v41 = v59;
                *v83 = *v85;
                v83[1] = v85[1];
                *((_BYTE *)v83 + v185) = 0;
                swift_bridgeObjectRetain();
                v94 = v179;
                v95 = v169;
                v96 = v144;
              }
              goto LABEL_76;
            }
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v172 + 16))(v83, v85, v174);
            *(_OWORD *)(((unint64_t)v83 + v163) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v85 + v163) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v83 + v185) = 2;
          }
          v94 = v179;
          v95 = v169;
          v96 = v144;
          v41 = v59;
LABEL_76:
          v108 = (_QWORD *)(((unint64_t)v83 + v95) & 0xFFFFFFFFFFFFFFF8);
          v109 = (_QWORD *)(((unint64_t)v85 + v95) & 0xFFFFFFFFFFFFFFF8);
          v110 = v109[1];
          *v108 = *v109;
          v108[1] = v110;
          v111 = (void *)(((unint64_t)v108 + v94) & v96);
          v112 = (const void *)(((unint64_t)v109 + v94) & v96);
          swift_retain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v112, 1, v177))
          {
            memcpy(v111, v112, v184);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v160 + 16))(v111, v112, v177);
            __swift_storeEnumTagSinglePayload((uint64_t)v111, 0, 1, v177);
          }
          v52 = v187;
          v54 = v175;
          v53 = v176;
          v55 = v181;
          v57 = v152;
          v56 = v153;
          v58 = v151;
          *(_QWORD *)(((unint64_t)v111 + v145) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v112 + v145) & 0xFFFFFFFFFFFFF8);
          v38 = v146;
          goto LABEL_80;
        }
        v67 = v173;
        *v49 = *v44;
        v49[1] = v44[1];
        *((_BYTE *)v49 + v185) = 0;
        swift_bridgeObjectRetain();
      }
      v69 = v147;
      v70 = v148;
      goto LABEL_58;
    }
  }
  v45 = a1;
  memcpy(a1, v41, v37);
  v52 = v187;
  v54 = v175;
  v53 = v176;
  v55 = v181;
  v57 = v152;
  v56 = v153;
  v58 = v151;
LABEL_80:
  v113 = ((unint64_t)v45 + v56) & v58;
  v114 = ((unint64_t)v41 + v56) & v58;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v54 + 16))(v113, v114, v53);
  v115 = (_QWORD *)((v55 + v113) & v57);
  v116 = (_QWORD *)((v55 + v114) & v57);
  v117 = *((unsigned __int8 *)v116 + v52);
  if (v117 >= 2)
  {
    if (v52 <= 3)
      v118 = v52;
    else
      v118 = 4;
    __asm { BR              X12 }
  }
  v119 = ~v154;
  if (v117 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v170 + 16))(v115, v116, v171);
    v120 = 1;
  }
  else
  {
    *v115 = *v116;
    swift_retain();
    v120 = 0;
  }
  *((_BYTE *)v115 + v52) = v120;
  v121 = (_QWORD *)(((unint64_t)v115 + v38) & v119);
  v122 = (_QWORD *)(((unint64_t)v116 + v38) & v119);
  v123 = *((unsigned __int8 *)v122 + v183);
  if (v123 >= 2)
  {
    if (v183 <= 3)
      v124 = v183;
    else
      v124 = 4;
    __asm { BR              X12 }
  }
  v125 = v183 + 1;
  if (v123 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v149 + 16))(v121, v122, v150);
    v126 = v183;
    v127 = 1;
  }
  else
  {
    *v121 = *v122;
    swift_retain();
    v126 = v183;
    v127 = 0;
  }
  *((_BYTE *)v121 + v126) = v127;
  v128 = (char *)v121 + v125;
  v129 = (char *)v122 + v125;
  v130 = (unint64_t)(v128 + 7) & 0xFFFFFFFFFFFFFFF8;
  v131 = (unint64_t)(v129 + 7) & 0xFFFFFFFFFFFFFFF8;
  v132 = *(_QWORD *)v131;
  v133 = *(_BYTE *)(v131 + 8);
  sub_221017C08(*(_QWORD *)v131, v133);
  *(_QWORD *)v130 = v132;
  *(_BYTE *)(v130 + 8) = v133;
  v134 = (unint64_t)(v128 + 23) & 0xFFFFFFFFFFFFFFF8;
  v135 = (unint64_t)(v129 + 23) & 0xFFFFFFFFFFFFFFF8;
  v136 = *(_QWORD *)v135;
  v137 = *(_BYTE *)(v135 + 8);
  sub_221017C08(*(_QWORD *)v135, v137);
  *(_QWORD *)v134 = v136;
  *(_BYTE *)(v134 + 8) = v137;
  v138 = (unint64_t)(v128 + 39) & 0xFFFFFFFFFFFFFFF8;
  v139 = (unint64_t)(v129 + 39) & 0xFFFFFFFFFFFFFFF8;
  v140 = *(_QWORD *)v139;
  v141 = *(_BYTE *)(v139 + 8);
  sub_221017C08(*(_QWORD *)v139, v141);
  *(_QWORD *)v138 = v140;
  *(_BYTE *)(v138 + 8) = v141;
  return v45;
}

uint64_t sub_2212C20D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(unint64_t, uint64_t);
  unint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unsigned int v49;
  void (*v50)(unint64_t, uint64_t);
  uint64_t v51;
  unint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v4 = sub_2212F5124();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v89 = v6 + 16;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = sub_2212F5058();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v6 | v10 | 7;
  v88 = v11 + v7;
  v83 = v10 + 16;
  v85 = v9;
  v84 = *(_QWORD *)(v9 + 64) + v6;
  v12 = (v7 + 7 + ((v84 + ((v10 + 16) & ~v10)) & ~v6)) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;
  v14 = v12 + 9;
  if (v14 <= v13)
    v14 = v13;
  if (v14 <= 2)
    v15 = 2;
  else
    v15 = v14;
  v16 = v15 + ((v11 + v7 + ((v6 + 16) & ~v6)) & ~v11);
  if (v16 + 1 > ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v17 = v16 + 1;
  else
    v17 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v17 <= 0x10)
    v18 = 16;
  else
    v18 = v17;
  v19 = sub_2212F29B8();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int *)(v20 + 84);
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = v11 | v22;
  v24 = ~(v11 | v22);
  v25 = ((v11 | v22) + 32) & v24;
  v26 = v18 + 1;
  v27 = (v18 + 1 + v11) & ~v11;
  v28 = ~v22;
  v29 = *(_QWORD *)(v20 + 64);
  if (v21 < 0x80000001)
  {
    v87 = v6 | v10 | 7;
    v30 = ~v11;
    if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    {
      v35 = v18 + 8;
      v36 = v22 + 16;
      goto LABEL_52;
    }
    v90 = v18 + 1;
    v91 = v27;
    v86 = v5;
    v79 = v8;
    v80 = *(_QWORD *)(v19 - 8);
    v82 = *(unsigned __int8 *)(v20 + 80);
    v31 = v19;
    v96 = ~v22;
    v92 = *(_QWORD *)(v20 + 64);
    v93 = *(_DWORD *)(v20 + 84);
    v94 = v25;
    v95 = a2;
    v81 = a1;
    v32 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v23 + 16) & v24;
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = *(unsigned __int8 *)(v32 + v18);
    if (v38 >= 3)
    {
      if (v18 <= 3)
        v39 = v18;
      else
        v39 = 4;
      __asm { BR              X12 }
    }
    v40 = v30;
    v97 = ~v6;
    v41 = ~v10;
    if (v38 == 2)
    {
      (*(void (**)(unint64_t, uint64_t))(v86 + 8))(v32, v4);
    }
    else if (v38 == 1)
    {
      swift_bridgeObjectRelease();
      v42 = *(void (**)(unint64_t, uint64_t))(v86 + 8);
      v42((v89 + v32) & v97, v4);
      v43 = (v88 + ((v89 + v32) & v97)) & v40;
      v44 = *(unsigned __int8 *)(v43 + v15);
      if (v44 >= 4)
      {
        if (v15 <= 3)
          v45 = v15;
        else
          v45 = 4;
        __asm { BR              X12 }
      }
      v46 = v90;
      if (v44 < 2)
        goto LABEL_36;
      swift_bridgeObjectRelease();
      v47 = (v83 + v43) & v41;
      (*(void (**)(unint64_t, uint64_t))(v85 + 8))(v47, v79);
      v42((v84 + v47) & v97, v4);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v46 = v90;
LABEL_36:
    v48 = (v32 + v87 + v46) & v40;
    v49 = *(unsigned __int8 *)(v48 + v18);
    if (v49 <= 2)
    {
      if (v49 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v86 + 8))(v48, v4);
      }
      else if (v49 == 1)
      {
        swift_bridgeObjectRelease();
        v50 = *(void (**)(unint64_t, uint64_t))(v86 + 8);
        v50((v89 + v48) & v97, v4);
        v51 = v15;
        v52 = (v88 + ((v89 + v48) & v97)) & v40;
        v53 = *(unsigned __int8 *)(v52 + v51);
        if (v53 >= 4)
        {
          if (v51 <= 3)
            v54 = v51;
          else
            v54 = 4;
          __asm { BR              X12 }
        }
        if (v53 >= 2)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v85 + 8))((v83 + v52) & v41, v79);
          v50((v84 + ((v83 + v52) & v41)) & v97, v4);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v35 = v18 + 8;
    swift_release();
    v36 = v82 + 16;
    v55 = (v82 + 16 + ((v35 + v48) & 0xFFFFFFFFFFFFFFF8)) & v96;
    if (!__swift_getEnumTagSinglePayload(v55, 1, v31))
      (*(void (**)(unint64_t, uint64_t))(v80 + 8))(v55, v31);
    a1 = v81;
    goto LABEL_51;
  }
  v76 = v10;
  v77 = v15;
  v86 = v5;
  v79 = v8;
  v80 = *(_QWORD *)(v19 - 8);
  v78 = v4;
  v91 = (v18 + 1 + v11) & ~v11;
  v92 = *(_QWORD *)(v20 + 64);
  v94 = ((v11 | v22) + 32) & ~(v11 | v22);
  v95 = a2;
  v33 = a1;
  v32 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v23 + 16) & v24;
  v34 = v18;
  v35 = v18 + 8;
  v36 = v22 + 16;
  v96 = ~v22;
  v93 = *(_DWORD *)(v20 + 84);
  v31 = v19;
  v90 = v26;
  v37 = *(unsigned __int8 *)(v20 + 80);
  if (__swift_getEnumTagSinglePayload((v22 + 16 + ((v35 + ((v32 + v11 + v26) & ~v11)) & 0xFFFFFFFFFFFFFFF8)) & v28, v21, v19) <= 1)
  {
    v87 = v11;
    v30 = ~v11;
    v81 = v33;
    v82 = v37;
    v18 = v34;
    v15 = v77;
    v4 = v78;
    v10 = v76;
    goto LABEL_17;
  }
  a1 = v33;
LABEL_51:
  v25 = v94;
  a2 = v95;
  LODWORD(v21) = v93;
  v27 = v91;
  v29 = v92;
  v28 = v96;
LABEL_52:
  v56 = 7;
  if (!(_DWORD)v21)
    v56 = 8;
  v57 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v58 = (a1
       + v25
       + *(unsigned __int8 *)(v57 + 80)
       + ((v56 + v29 + ((v36 + ((v35 + v27) & 0xFFFFFFFFFFFFFFF8)) & v28)) & 0xFFFFFFFFFFFFFFF8)
       + 8) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  (*(void (**)(unint64_t))(v57 + 8))(v58);
  v59 = *(_QWORD *)(v57 + 64);
  v60 = sub_2212F33F0();
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(_DWORD *)(v61 + 80) & 0xF8 | 7;
  v63 = (v58 + v59 + v62) & ~v62;
  if (*(_QWORD *)(v61 + 64) <= 8uLL)
    v64 = 8;
  else
    v64 = *(_QWORD *)(v61 + 64);
  v65 = *(unsigned __int8 *)(v63 + v64);
  if (v65 >= 2)
  {
    if (v64 <= 3)
      v66 = v64;
    else
      v66 = 4;
    __asm { BR              X13 }
  }
  if (v65 == 1)
    (*(void (**)(unint64_t, uint64_t))(v61 + 8))(v63, v60);
  else
    swift_release();
  v67 = sub_2212F330C();
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(_DWORD *)(v68 + 80) & 0xF8 | 7;
  v70 = (v64 + v63 + v69 + 1) & ~v69;
  if (*(_QWORD *)(v68 + 64) <= 8uLL)
    v71 = 8;
  else
    v71 = *(_QWORD *)(v68 + 64);
  v72 = *(unsigned __int8 *)(v70 + v71);
  if (v72 >= 2)
  {
    if (v71 <= 3)
      v73 = v71;
    else
      v73 = 4;
    __asm { BR              X13 }
  }
  if (v72 == 1)
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v70, v67);
  else
    swift_release();
  v74 = v71 + v70;
  sub_221017894(*(_QWORD *)((v74 + 8) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v74 + 8) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_221017894(*(_QWORD *)((v74 + 24) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v74 + 24) & 0xFFFFFFFFFFFFFFF8) + 8));
  return sub_221017894(*(_QWORD *)((v74 + 40) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v74 + 40) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void *sub_2212C28D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  size_t v51;
  uint64_t v52;
  void *v53;
  unint64_t v54;
  uint64_t v55;
  size_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  void (*v65)(unint64_t, unint64_t, uint64_t);
  _WORD *v66;
  _WORD *v67;
  uint64_t v68;
  size_t v69;
  char v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  void (*v76)(unint64_t, unint64_t, uint64_t);
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  void (*v81)(unint64_t, unint64_t, uint64_t);
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  size_t v85;
  uint64_t v86;
  _QWORD *v87;
  unsigned int v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  void (*v92)(unint64_t, unint64_t, uint64_t);
  _WORD *v93;
  _WORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  const void *v105;
  _QWORD *v106;
  size_t v107;
  size_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  unsigned int v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  unsigned int v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  char *v137;
  char *v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  char v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  char v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  char v150;
  void *result;
  char v152;
  unint64_t v153;
  unint64_t v154;
  void (*v155)(unint64_t, unint64_t, uint64_t);
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  void (*v160)(unint64_t, unint64_t, uint64_t);
  unint64_t v161;
  unint64_t v162;
  _WORD *v163;
  _WORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  void (*v176)(unint64_t, unint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  size_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  int v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  size_t v195;

  v193 = sub_2212F5124();
  v5 = *(_QWORD *)(v193 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v184 = v6 + 16;
  v192 = v5;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = sub_2212F5058();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v6 | v10 | 7;
  v12 = ~v11;
  v186 = v11 + v7;
  v13 = (v11 + v7 + ((v6 + 16) & ~v6)) & ~v11;
  v169 = v10 + 16;
  v170 = v9;
  v171 = v8;
  v14 = *(_QWORD *)(v9 + 64) + v6;
  v15 = v7 + 7;
  v16 = (v7 + 7 + ((v14 + ((v10 + 16) & ~v10)) & ~v6)) & 0xFFFFFFFFFFFFFFF8;
  v17 = v16 + 8;
  v18 = v16 + 9;
  v168 = v17;
  if (v18 <= v17)
    v18 = v17;
  if (v18 <= 2)
    v19 = 2;
  else
    v19 = v18;
  v20 = v19 + v13;
  v187 = v15;
  if (v20 + 1 > (v15 & 0xFFFFFFFFFFFFFFF8) + 16)
    v21 = v20 + 1;
  else
    v21 = (v15 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v21 <= 0x10)
    v22 = 16;
  else
    v22 = v21;
  v23 = sub_2212F29B8();
  v24 = v23;
  v25 = *(_QWORD *)(v23 - 8);
  v26 = *(unsigned int *)(v25 + 84);
  v27 = *(unsigned __int8 *)(v25 + 80);
  v28 = v11 | v27;
  v29 = ~(v11 | v27);
  v30 = ((v11 | v27) + 32) & v29;
  v31 = v22 + 1;
  v32 = (v22 + 1 + v11) & ~v11;
  v33 = ~v27;
  v195 = *(_QWORD *)(v25 + 64);
  if (v26 >= 0x80000001)
  {
    v177 = v10;
    v165 = v14;
    v166 = *(_QWORD *)(v23 - 8);
    v172 = v19;
    v188 = (v22 + 1 + v11) & ~v11;
    v190 = ((v11 | v27) + 32) & ~(v11 | v27);
    v194 = a1;
    v37 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    v38 = (_QWORD *)(((unint64_t)v37 + v28 + 16) & v29);
    v39 = v23;
    v40 = v22 + 8;
    v41 = (v22 + 8 + (((unint64_t)v38 + v11 + v31) & v12)) & 0xFFFFFFFFFFFFFFF8;
    v181 = v22;
    v42 = a2;
    v175 = v11;
    v43 = v27 + 16;
    v191 = ~v27;
    v189 = *(_DWORD *)(v25 + 84);
    v179 = v31;
    v44 = v12;
    v45 = *(unsigned __int8 *)(v25 + 80);
    v173 = v29;
    if (__swift_getEnumTagSinglePayload((v27 + 16 + v41) & v33, v26, v23) <= 1)
    {
      v36 = v44;
      v167 = v45;
      v34 = v42[1];
      a2 = v42;
      v35 = v39;
      v22 = v181;
      v29 = v173;
LABEL_17:
      *v194 = *a2;
      v194[1] = v34;
      v46 = (_QWORD *)(((unint64_t)v194 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v46 = *v37;
      v46[1] = v37[1];
      v47 = (_QWORD *)(((unint64_t)v46 + v28 + 16) & v29);
      v174 = v38;
      v48 = *((unsigned __int8 *)v38 + v22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v48 >= 3)
      {
        if (v22 <= 3)
          v49 = v22;
        else
          v49 = 4;
        __asm { BR              X11 }
      }
      v57 = v36;
      v58 = v175;
      v59 = v35;
      v60 = ~v6;
      v178 = ~v177;
      if (v48 == 2)
      {
        v62 = v38;
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v192 + 16))(v47, v38, v193);
        *(_OWORD *)(((unint64_t)v47 + v187) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v38 + v187) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v47 + v22) = 2;
      }
      else
      {
        if (v48 == 1)
        {
          v61 = v59;
          v182 = v22;
          v62 = v174;
          *v47 = *v174;
          v47[1] = v174[1];
          v63 = ((unint64_t)v47 + v184) & v60;
          v64 = ((unint64_t)v174 + v184) & v60;
          v65 = *(void (**)(unint64_t, unint64_t, uint64_t))(v192 + 16);
          swift_bridgeObjectRetain();
          v176 = v65;
          v65(v63, v64, v193);
          v66 = (_WORD *)((v186 + v63) & v57);
          v67 = (_WORD *)((v186 + v64) & v57);
          switch(*((_BYTE *)v67 + v172))
          {
            case 0:
              v70 = 0;
              *v66 = *v67;
              break;
            case 1:
              *(_BYTE *)v66 = *(_BYTE *)v67;
              v70 = 1;
              break;
            case 2:
              *(_QWORD *)v66 = *(_QWORD *)v67;
              *(_QWORD *)(((v186 + v63) & v57) + 8) = *(_QWORD *)(((v186 + v64) & v57) + 8);
              v71 = ((unint64_t)v66 + v169) & v178;
              v72 = ((unint64_t)v67 + v169) & v178;
              v73 = v58;
              v74 = a2;
              v75 = v60;
              v76 = *(void (**)(unint64_t, unint64_t, uint64_t))(v170 + 16);
              v163 = v66;
              swift_bridgeObjectRetain();
              v76(v71, v72, v171);
              v60 = v75;
              a2 = v74;
              v58 = v73;
              v77 = (v165 + v71) & v60;
              v78 = (v165 + v72) & v60;
              v62 = v174;
              v176(v77, v78, v193);
              v66 = v163;
              *(_QWORD *)((v187 + v77) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v187 + v78) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v163 + v168) = *((_BYTE *)v67 + v168);
              v70 = 2;
              break;
            case 3:
              *(_QWORD *)v66 = *(_QWORD *)v67;
              *(_QWORD *)(((v186 + v63) & v57) + 8) = *(_QWORD *)(((v186 + v64) & v57) + 8);
              v79 = ((unint64_t)v66 + v169) & v178;
              v80 = ((unint64_t)v67 + v169) & v178;
              v81 = *(void (**)(unint64_t, unint64_t, uint64_t))(v170 + 16);
              v164 = v66;
              swift_bridgeObjectRetain();
              v81(v79, v80, v171);
              v82 = (v165 + v79) & v60;
              v83 = (v165 + v80) & v60;
              v176(v82, v83, v193);
              v66 = v164;
              *(_QWORD *)((v187 + v82) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v187 + v83) & 0xFFFFFFFFFFFFF8);
              v70 = 3;
              break;
            default:
              if (v172 <= 3)
                v68 = v172;
              else
                v68 = 4;
              __asm { BR              X12 }
              return result;
          }
          v69 = v179;
          v22 = v182;
          *((_BYTE *)v66 + v172) = v70;
          *((_BYTE *)v47 + v182) = 1;
          v59 = v61;
LABEL_43:
          v84 = (_QWORD *)(((unint64_t)v47 + v58 + v69) & v57);
          v85 = (size_t)v62 + v58 + v69;
          v86 = v57;
          v87 = (_QWORD *)(v85 & v57);
          v88 = *((unsigned __int8 *)v87 + v22);
          if (v88 > 2)
          {
            memcpy(v84, v87, v69);
          }
          else if (v88 == 2)
          {
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v192 + 16))(v84, v87, v193);
            *(_OWORD *)(((unint64_t)v84 + v187) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v87 + v187) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v84 + v22) = 2;
          }
          else
          {
            if (v88 == 1)
            {
              v180 = v59;
              v183 = v22;
              *v84 = *v87;
              v84[1] = v87[1];
              v89 = ((unint64_t)v84 + v184) & v60;
              v90 = (unint64_t)v87 + v184;
              v185 = v60;
              v91 = v90 & v60;
              v92 = *(void (**)(unint64_t, unint64_t, uint64_t))(v192 + 16);
              swift_bridgeObjectRetain();
              v92(v89, v91, v193);
              v93 = (_WORD *)((v186 + v89) & v86);
              v94 = (_WORD *)((v186 + v91) & v86);
              switch(*((_BYTE *)v94 + v172))
              {
                case 0:
                  v152 = 0;
                  *v93 = *v94;
                  break;
                case 1:
                  *(_BYTE *)v93 = *(_BYTE *)v94;
                  v152 = 1;
                  break;
                case 2:
                  *(_QWORD *)v93 = *(_QWORD *)v94;
                  *(_QWORD *)(((v186 + v89) & v86) + 8) = *(_QWORD *)(((v186 + v91) & v86) + 8);
                  v153 = ((unint64_t)v93 + v169) & v178;
                  v154 = ((unint64_t)v94 + v169) & v178;
                  v155 = *(void (**)(unint64_t, unint64_t, uint64_t))(v170 + 16);
                  swift_bridgeObjectRetain();
                  v155(v153, v154, v171);
                  v156 = (v165 + v153) & v185;
                  v157 = (v165 + v154) & v185;
                  v92(v156, v157, v193);
                  *(_QWORD *)((v187 + v156) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v187 + v157) & 0xFFFFFFFFFFFFF8);
                  *((_BYTE *)v93 + v168) = *((_BYTE *)v94 + v168);
                  v152 = 2;
                  break;
                case 3:
                  *(_QWORD *)v93 = *(_QWORD *)v94;
                  *(_QWORD *)(((v186 + v89) & v86) + 8) = *(_QWORD *)(((v186 + v91) & v86) + 8);
                  v158 = ((unint64_t)v93 + v169) & v178;
                  v159 = ((unint64_t)v94 + v169) & v178;
                  v160 = *(void (**)(unint64_t, unint64_t, uint64_t))(v170 + 16);
                  swift_bridgeObjectRetain();
                  v160(v158, v159, v171);
                  v161 = (v165 + v158) & v185;
                  v162 = (v165 + v159) & v185;
                  v92(v161, v162, v193);
                  *(_QWORD *)((v187 + v161) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v187 + v162) & 0xFFFFFFFFFFFFF8);
                  v152 = 3;
                  break;
                default:
                  if (v172 <= 3)
                    v95 = v172;
                  else
                    v95 = 4;
                  __asm { BR              X12 }
                  return result;
              }
              v96 = v191;
              v97 = v167;
              *((_BYTE *)v93 + v172) = v152;
              v59 = v180;
              v22 = v183;
              *((_BYTE *)v84 + v183) = 1;
              goto LABEL_55;
            }
            *v84 = *v87;
            v84[1] = v87[1];
            *((_BYTE *)v84 + v22) = 0;
            swift_bridgeObjectRetain();
          }
          v96 = v191;
          v97 = v167;
LABEL_55:
          v98 = v22 + 8;
          v99 = (_QWORD *)(((unint64_t)v84 + v22 + 8) & 0xFFFFFFFFFFFFFFF8);
          v100 = (_QWORD *)(((unint64_t)v87 + v22 + 8) & 0xFFFFFFFFFFFFFFF8);
          v101 = v100[1];
          *v99 = *v100;
          v99[1] = v101;
          v102 = v97 + 16;
          v103 = (void *)(((unint64_t)v99 + v97 + 16) & v96);
          v104 = v96;
          v105 = (const void *)(((unint64_t)v100 + v97 + 16) & v96);
          swift_retain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v105, 1, v59))
          {
            v106 = a2;
            v107 = v195;
            if (v189)
              v108 = v195;
            else
              v108 = v195 + 1;
            memcpy(v103, v105, v108);
            v109 = v189;
          }
          else
          {
            v110 = v59;
            v106 = a2;
            (*(void (**)(void *, const void *, uint64_t))(v166 + 16))(v103, v105, v110);
            __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v110);
            v109 = v189;
            v107 = v195;
            if (v189)
              v108 = v195;
            else
              v108 = v195 + 1;
          }
          v52 = a3;
          *(_QWORD *)(((unint64_t)v103 + v108 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v105
                                                                                             + v108
                                                                                             + 7) & 0xFFFFFFFFFFFFF8);
          v111 = 7;
          if (!v109)
            v111 = 8;
          v56 = v190
              + ((v111 + v107 + ((v102 + ((v98 + v188) & 0xFFFFFFFFFFFFFFF8)) & v104)) & 0xFFFFFFFFFFFFFFF8)
              + 8;
          v42 = v106;
          v53 = v194;
          goto LABEL_66;
        }
        v62 = v38;
        *v47 = *v38;
        v47[1] = v38[1];
        *((_BYTE *)v47 + v22) = 0;
        swift_bridgeObjectRetain();
      }
      v69 = v179;
      goto LABEL_43;
    }
    v53 = v194;
    v51 = v195;
    v52 = a3;
    v30 = v190;
    v33 = v191;
    LODWORD(v26) = v189;
    v32 = v188;
  }
  else
  {
    v34 = a2[1];
    if (v34 >= 0xFFFFFFFF)
    {
      v177 = v10;
      v179 = v22 + 1;
      v172 = v19;
      v35 = v24;
      v175 = v6 | v10 | 7;
      v36 = ~v11;
      v165 = v14;
      v166 = v25;
      v167 = *(unsigned __int8 *)(v25 + 80);
      v188 = v32;
      v190 = v30;
      v191 = ~v27;
      v189 = *(_DWORD *)(v25 + 84);
      v194 = a1;
      v37 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      v38 = (_QWORD *)(((unint64_t)v37 + v28 + 16) & v29);
      goto LABEL_17;
    }
    v50 = v22;
    v42 = a2;
    v40 = v50 + 8;
    v43 = v27 + 16;
    v51 = *(_QWORD *)(v25 + 64);
    v52 = a3;
    v53 = a1;
  }
  v54 = (v43 + ((v40 + v32) & 0xFFFFFFFFFFFFFFF8)) & v33;
  v55 = 7;
  if (!(_DWORD)v26)
    v55 = 8;
  v56 = v30 + ((v55 + v51 + v54) & 0xFFFFFFFFFFFFFFF8) + 8;
  memcpy(v53, v42, v56);
LABEL_66:
  v112 = *(_QWORD *)(*(_QWORD *)(v52 + 16) - 8);
  v113 = *(unsigned __int8 *)(v112 + 80);
  v114 = ((unint64_t)v53 + v56 + v113) & ~v113;
  v115 = ((unint64_t)v42 + v56 + v113) & ~v113;
  (*(void (**)(unint64_t, unint64_t))(v112 + 16))(v114, v115);
  v116 = *(_QWORD *)(v112 + 64);
  v117 = sub_2212F33F0();
  v118 = *(_QWORD *)(v117 - 8);
  v119 = *(_DWORD *)(v118 + 80) & 0xF8 | 7;
  v120 = (_QWORD *)((v116 + v119 + v114) & ~v119);
  v121 = (_QWORD *)((v116 + v119 + v115) & ~v119);
  if (*(_QWORD *)(v118 + 64) <= 8uLL)
    v122 = 8;
  else
    v122 = *(_QWORD *)(v118 + 64);
  v123 = *((unsigned __int8 *)v121 + v122);
  if (v123 >= 2)
  {
    if (v122 <= 3)
      v124 = v122;
    else
      v124 = 4;
    __asm { BR              X13 }
  }
  if (v123 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v118 + 16))(v120, v121, v117);
    v125 = 1;
  }
  else
  {
    *v120 = *v121;
    swift_retain();
    v125 = 0;
  }
  *((_BYTE *)v120 + v122) = v125;
  v126 = v122 + 1;
  v127 = sub_2212F330C();
  v128 = *(_QWORD *)(v127 - 8);
  v129 = *(_DWORD *)(v128 + 80) & 0xF8 | 7;
  v130 = (_QWORD *)(((unint64_t)v120 + v126 + v129) & ~v129);
  v131 = (_QWORD *)(((unint64_t)v121 + v126 + v129) & ~v129);
  if (*(_QWORD *)(v128 + 64) <= 8uLL)
    v132 = 8;
  else
    v132 = *(_QWORD *)(v128 + 64);
  v133 = *((unsigned __int8 *)v131 + v132);
  if (v133 >= 2)
  {
    if (v132 <= 3)
      v134 = v132;
    else
      v134 = 4;
    __asm { BR              X13 }
  }
  if (v133 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v128 + 16))(v130, v131, v127);
    v135 = 1;
  }
  else
  {
    *v130 = *v131;
    swift_retain();
    v135 = 0;
  }
  *((_BYTE *)v130 + v132) = v135;
  v136 = v132 + 1;
  v137 = (char *)v130 + v132 + 1;
  v138 = (char *)v131 + v136;
  v139 = (unint64_t)(v137 + 7) & 0xFFFFFFFFFFFFFFF8;
  v140 = ((unint64_t)v131 + v136 + 7) & 0xFFFFFFFFFFFFFFF8;
  v141 = *(_QWORD *)v140;
  v142 = *(_BYTE *)(v140 + 8);
  sub_221017C08(*(_QWORD *)v140, v142);
  *(_QWORD *)v139 = v141;
  *(_BYTE *)(v139 + 8) = v142;
  v143 = (unint64_t)(v137 + 23) & 0xFFFFFFFFFFFFFFF8;
  v144 = (unint64_t)(v138 + 23) & 0xFFFFFFFFFFFFFFF8;
  v145 = *(_QWORD *)v144;
  v146 = *(_BYTE *)(v144 + 8);
  sub_221017C08(*(_QWORD *)v144, v146);
  *(_QWORD *)v143 = v145;
  *(_BYTE *)(v143 + 8) = v146;
  v147 = (unint64_t)(v137 + 39) & 0xFFFFFFFFFFFFFFF8;
  v148 = (unint64_t)(v138 + 39) & 0xFFFFFFFFFFFFFFF8;
  v149 = *(_QWORD *)v148;
  v150 = *(_BYTE *)(v148 + 8);
  sub_221017C08(*(_QWORD *)v148, v150);
  *(_QWORD *)v147 = v149;
  *(_BYTE *)(v147 + 8) = v150;
  return v53;
}

_QWORD *sub_2212C364C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  _QWORD *v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  size_t v64;
  void *v65;
  const void *v66;
  size_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  void (*v73)(unint64_t, unint64_t, uint64_t);
  _WORD *v74;
  _WORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  void (*v80)(unint64_t, uint64_t);
  unint64_t v81;
  unsigned int v82;
  uint64_t v83;
  void (*v84)(unint64_t, uint64_t);
  unint64_t v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  void (*v96)(unint64_t, unint64_t, uint64_t);
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  unsigned int v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  void (*v105)(unint64_t, unint64_t, uint64_t);
  _WORD *v106;
  _WORD *v107;
  uint64_t v108;
  unint64_t v109;
  unsigned int v110;
  unint64_t v111;
  unsigned int v112;
  unint64_t v113;
  unsigned int v114;
  uint64_t v115;
  unint64_t v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  void (*v122)(unint64_t, unint64_t, uint64_t);
  _WORD *v123;
  _WORD *v124;
  uint64_t v125;
  char v126;
  unint64_t v127;
  unint64_t v128;
  void (*v129)(unint64_t, unint64_t, uint64_t);
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  void (*v134)(unint64_t, unint64_t, uint64_t);
  unint64_t v135;
  unint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  unsigned int v139;
  unsigned int v140;
  void (*v141)(unint64_t, uint64_t);
  unint64_t v142;
  unsigned int v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  void (*v147)(unint64_t, unint64_t, uint64_t);
  _WORD *v148;
  _WORD *v149;
  uint64_t v150;
  void (*v151)(unint64_t, uint64_t);
  unint64_t v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  unint64_t v157;
  unint64_t v158;
  void (*v159)(unint64_t, unint64_t, uint64_t);
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  unint64_t v163;
  void (*v164)(unint64_t, unint64_t, uint64_t);
  unint64_t v165;
  unint64_t v166;
  _QWORD *v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  const void *v172;
  size_t v173;
  size_t v174;
  _QWORD *v175;
  size_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  char v180;
  unint64_t v181;
  unint64_t v182;
  void (*v183)(unint64_t, unint64_t, uint64_t);
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  void (*v188)(unint64_t, unint64_t, uint64_t);
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  unint64_t v192;
  unsigned int v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t v196;
  void (*v197)(unint64_t, unint64_t, uint64_t);
  _WORD *v198;
  uint64_t v199;
  char v200;
  unint64_t v201;
  unint64_t v202;
  void (*v203)(unint64_t, unint64_t, uint64_t);
  unint64_t v204;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  void (*v208)(unint64_t, unint64_t, uint64_t);
  unint64_t v209;
  unint64_t v210;
  _QWORD *v211;
  _QWORD *v212;
  uint64_t v213;
  void *v214;
  const void *v215;
  int v216;
  int v217;
  size_t v218;
  size_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  _QWORD *v231;
  _QWORD *v232;
  uint64_t v233;
  uint64_t v234;
  unsigned int v235;
  uint64_t v236;
  unsigned int v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _QWORD *v243;
  _QWORD *v244;
  uint64_t v245;
  uint64_t v246;
  unsigned int v247;
  uint64_t v248;
  unsigned int v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  unint64_t v254;
  unint64_t v255;
  uint64_t v256;
  char v257;
  uint64_t v258;
  char v259;
  unint64_t v260;
  unint64_t v261;
  uint64_t v262;
  char v263;
  uint64_t v264;
  char v265;
  unint64_t v266;
  unint64_t v267;
  uint64_t v268;
  char v269;
  uint64_t v270;
  char v271;
  _QWORD *result;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  unint64_t v276;
  unsigned int EnumTagSinglePayload;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  _QWORD *v294;
  uint64_t v295;
  void (*v296)(unint64_t, unint64_t, uint64_t);
  uint64_t v297;
  uint64_t v298;
  size_t __n;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  unint64_t v304;
  void (*v305)(unint64_t, uint64_t);
  _QWORD *v306;
  size_t v307;
  uint64_t v308;
  uint64_t v309;

  v309 = sub_2212F5124();
  v5 = *(_QWORD *)(v309 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v293 = ~v6;
  v289 = v6 + 16;
  v302 = v5;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = sub_2212F5058();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v6 | v10 | 7;
  v12 = ~v11;
  v290 = v11 + v7;
  v280 = ~v10;
  v279 = v10 + 16;
  v281 = v9;
  v282 = v8;
  v283 = *(_QWORD *)(v9 + 64) + v6;
  v13 = v7 + 7;
  v14 = (v7 + 7 + ((v283 + ((v10 + 16) & ~v10)) & ~v6)) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;
  v16 = v14 + 9;
  v278 = v15;
  if (v16 <= v15)
    v16 = v15;
  if (v16 <= 2)
    v16 = 2;
  v304 = v16;
  v17 = v16 + ((v11 + v7 + ((v6 + 16) & ~v6)) & ~v11);
  v288 = v7 + 7;
  if (v17 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
    v18 = v17 + 1;
  else
    v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 <= 0x10)
    v19 = 16;
  else
    v19 = v18;
  v20 = sub_2212F29B8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_DWORD *)(v21 + 84);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v24 = v11 | v23;
  v25 = ~(v11 | v23);
  v26 = ((v11 | v23) + 32) & v25;
  v27 = v19 + 1;
  v28 = (v19 + 1 + v11) & ~v11;
  v29 = ~v23;
  v30 = *(_QWORD *)(v21 + 64);
  v306 = a1;
  v307 = v30;
  v303 = v28;
  v300 = v20;
  v308 = v19;
  v298 = ~v11;
  __n = v19 + 1;
  v301 = v11;
  if (v22 < 0x80000001)
  {
    v31 = a2;
    v32 = a2[1];
    v33 = a1;
    if (a1[1] > 0xFFFFFFFEuLL)
    {
      v291 = ~v23;
      v292 = v25;
      v34 = *(unsigned __int8 *)(v21 + 80);
      v284 = *(_QWORD *)(v20 - 8);
      v295 = v26;
      v297 = a3;
      if (v32 >= 0xFFFFFFFF)
      {
        v35 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
        v36 = (_QWORD *)(((unint64_t)v35 + v24 + 16) & v25);
        goto LABEL_17;
      }
      goto LABEL_31;
    }
    if (v32 >= 0xFFFFFFFF)
    {
      v284 = *(_QWORD *)(v20 - 8);
      v285 = *(unsigned __int8 *)(v21 + 80);
      v295 = v26;
      v297 = a3;
      v54 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      v294 = (_QWORD *)(((unint64_t)v54 + v24 + 16) & v25);
      goto LABEL_26;
    }
    v39 = v19 + 8;
    v41 = v23 + 16;
    goto LABEL_38;
  }
  v37 = v20;
  v284 = *(_QWORD *)(v20 - 8);
  v285 = *(unsigned __int8 *)(v21 + 80);
  v295 = ((v11 | v23) + 32) & ~(v11 | v23);
  v297 = a3;
  v38 = *(unsigned int *)(v21 + 84);
  v39 = v19 + 8;
  v40 = (v39 + (((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v24 + 16) & v25) + v11 + v27) & v12)) & 0xFFFFFFFFFFFFFFF8;
  v41 = v23 + 16;
  v42 = v27;
  v43 = ~(v11 | v23);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v23 + 16 + v40) & v29, v38, v20);
  v276 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v291 = v29;
  v292 = v43;
  v294 = (_QWORD *)((v276 + v24 + 16) & v43);
  v44 = (v41 + ((v39 + (((unint64_t)v294 + v11 + v42) & v12)) & 0xFFFFFFFFFFFFFFF8)) & v29;
  v22 = v38;
  v45 = __swift_getEnumTagSinglePayload(v44, v38, v37);
  if (EnumTagSinglePayload >= 2)
  {
    v33 = v306;
    v30 = v307;
    v25 = v43;
    v54 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    if (v45 < 2)
    {
LABEL_26:
      *v33 = *a2;
      v33[1] = a2[1];
      v55 = (_QWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v55 = *v54;
      v55[1] = v54[1];
      v56 = (_QWORD *)(((unint64_t)v55 + v24 + 16) & v25);
      v57 = v308;
      v58 = *((unsigned __int8 *)v294 + v308);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v58 >= 3)
      {
        if (v308 <= 3)
          v59 = v308;
        else
          v59 = 4;
        __asm { BR              X11 }
      }
      v26 = v295;
      if (v58 == 2)
      {
        v77 = v29;
        v78 = v294;
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v302 + 16))(v56, v294, v309);
        *(_OWORD *)(((unint64_t)v56 + v288) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v294 + v288) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v56 + v308) = 2;
      }
      else
      {
        if (v58 == 1)
        {
          v273 = v22;
          v70 = v295;
          *v56 = *v294;
          v56[1] = v294[1];
          v71 = ((unint64_t)v56 + v289) & v293;
          v72 = ((unint64_t)v294 + v289) & v293;
          v73 = *(void (**)(unint64_t, unint64_t, uint64_t))(v302 + 16);
          swift_bridgeObjectRetain();
          v73(v71, v72, v309);
          v74 = (_WORD *)((v290 + v71) & v298);
          v75 = (_WORD *)((v290 + v72) & v298);
          switch(*((_BYTE *)v75 + v304))
          {
            case 0:
              v89 = 0;
              *v74 = *v75;
              break;
            case 1:
              *(_BYTE *)v74 = *(_BYTE *)v75;
              v89 = 1;
              break;
            case 2:
              *(_QWORD *)v74 = *(_QWORD *)v75;
              *(_QWORD *)(((v290 + v71) & v298) + 8) = *(_QWORD *)(((v290 + v72) & v298) + 8);
              v90 = ((unint64_t)v74 + v279) & v280;
              v91 = ((unint64_t)v75 + v279) & v280;
              v296 = *(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 16);
              swift_bridgeObjectRetain();
              v296(v90, v91, v282);
              v92 = (v283 + v90) & v293;
              v93 = (v283 + v91) & v293;
              v73(v92, v93, v309);
              *(_QWORD *)((v288 + v92) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v288 + v93) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v74 + v278) = *((_BYTE *)v75 + v278);
              v89 = 2;
              break;
            case 3:
              *(_QWORD *)v74 = *(_QWORD *)v75;
              *(_QWORD *)(((v290 + v71) & v298) + 8) = *(_QWORD *)(((v290 + v72) & v298) + 8);
              v94 = ((unint64_t)v74 + v279) & v280;
              v95 = ((unint64_t)v75 + v279) & v280;
              v96 = *(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 16);
              swift_bridgeObjectRetain();
              v96(v94, v95, v282);
              v97 = (v283 + v94) & v293;
              v98 = (v283 + v95) & v293;
              v73(v97, v98, v309);
              *(_QWORD *)((v288 + v97) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v288 + v98) & 0xFFFFFFFFFFFFF8);
              v89 = 3;
              break;
            default:
              if (v304 <= 3)
                v76 = v304;
              else
                v76 = 4;
              __asm { BR              X12 }
              return result;
          }
          v26 = v70;
          v79 = v285;
          v77 = v29;
          *((_BYTE *)v74 + v304) = v89;
          *((_BYTE *)v56 + v308) = 1;
          v22 = v273;
          v78 = v294;
          goto LABEL_78;
        }
        v77 = v29;
        v78 = v294;
        *v56 = *v294;
        v56[1] = v294[1];
        *((_BYTE *)v56 + v308) = 0;
        swift_bridgeObjectRetain();
      }
      v79 = v285;
LABEL_78:
      v99 = (_QWORD *)(((unint64_t)v56 + v301 + __n) & v298);
      v100 = (_QWORD *)(((unint64_t)v78 + v301 + __n) & v298);
      v101 = *((unsigned __int8 *)v100 + v308);
      if (v101 > 2)
      {
        memcpy(v99, (const void *)(((unint64_t)v78 + v301 + __n) & v298), __n);
      }
      else if (v101 == 2)
      {
        (*(void (**)(_QWORD *, unint64_t, uint64_t))(v302 + 16))(v99, ((unint64_t)v78 + v301 + __n) & v298, v309);
        *(_OWORD *)(((unint64_t)v99 + v288) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v100 + v288) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v99 + v308) = 2;
      }
      else if (v101 == 1)
      {
        v286 = v79;
        v274 = v22;
        v102 = v26;
        *v99 = *v100;
        v99[1] = *(_QWORD *)((((unint64_t)v78 + v301 + __n) & v298) + 8);
        v103 = ((unint64_t)v99 + v289) & v293;
        v104 = ((unint64_t)v100 + v289) & v293;
        v105 = *(void (**)(unint64_t, unint64_t, uint64_t))(v302 + 16);
        swift_bridgeObjectRetain();
        v105(v103, v104, v309);
        v106 = (_WORD *)((v290 + v103) & v298);
        v107 = (_WORD *)((v290 + v104) & v298);
        switch(*((_BYTE *)v107 + v304))
        {
          case 0:
            v156 = 0;
            *v106 = *v107;
            break;
          case 1:
            *(_BYTE *)v106 = *(_BYTE *)v107;
            v156 = 1;
            break;
          case 2:
            *(_QWORD *)v106 = *(_QWORD *)v107;
            *(_QWORD *)(((v290 + v103) & v298) + 8) = *(_QWORD *)(((v290 + v104) & v298) + 8);
            v157 = ((unint64_t)v106 + v279) & v280;
            v158 = ((unint64_t)v107 + v279) & v280;
            v159 = *(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 16);
            swift_bridgeObjectRetain();
            v159(v157, v158, v282);
            v160 = (v283 + v157) & v293;
            v161 = (v283 + v158) & v293;
            v105(v160, v161, v309);
            *(_QWORD *)((v288 + v160) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v288 + v161) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v106 + v278) = *((_BYTE *)v107 + v278);
            v156 = 2;
            break;
          case 3:
            *(_QWORD *)v106 = *(_QWORD *)v107;
            *(_QWORD *)(((v290 + v103) & v298) + 8) = *(_QWORD *)(((v290 + v104) & v298) + 8);
            v162 = ((unint64_t)v106 + v279) & v280;
            v163 = ((unint64_t)v107 + v279) & v280;
            v164 = *(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 16);
            swift_bridgeObjectRetain();
            v164(v162, v163, v282);
            v165 = (v283 + v162) & v293;
            v166 = (v283 + v163) & v293;
            v105(v165, v166, v309);
            *(_QWORD *)((v288 + v165) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v288 + v166) & 0xFFFFFFFFFFFFF8);
            v156 = 3;
            break;
          default:
            if (v304 <= 3)
              v108 = v304;
            else
              v108 = 4;
            __asm { BR              X12 }
            return result;
        }
        v26 = v102;
        v79 = v286;
        *((_BYTE *)v106 + v304) = v156;
        v57 = v308;
        *((_BYTE *)v99 + v308) = 1;
        v22 = v274;
      }
      else
      {
        *v99 = *v100;
        v99[1] = *(_QWORD *)((((unint64_t)v78 + v301 + __n) & v298) + 8);
        *((_BYTE *)v99 + v308) = 0;
        swift_bridgeObjectRetain();
      }
      v39 = v57 + 8;
      v167 = (_QWORD *)(((unint64_t)v99 + v57 + 8) & 0xFFFFFFFFFFFFFFF8);
      v168 = (_QWORD *)(((unint64_t)v100 + v57 + 8) & 0xFFFFFFFFFFFFFFF8);
      v169 = v168[1];
      *v167 = *v168;
      v167[1] = v169;
      v41 = v79 + 16;
      v170 = v77;
      v171 = (void *)(((unint64_t)v167 + v41) & v77);
      v172 = (const void *)(((unint64_t)v168 + v41) & v170);
      swift_retain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v172, 1, v300))
      {
        v173 = v307;
        v174 = v307;
        if (!v22)
          v173 = v307 + 1;
        memcpy(v171, v172, v173);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v284 + 16))(v171, v172, v300);
        __swift_storeEnumTagSinglePayload((uint64_t)v171, 0, 1, v300);
        v173 = v307;
        v174 = v307;
        if (!v22)
          v173 = v307 + 1;
      }
      v33 = v306;
      v175 = a2;
      *(_QWORD *)(((unint64_t)v171 + v173 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v172
                                                                                         + v173
                                                                                         + 7) & 0xFFFFFFFFFFFFF8);
      v176 = v174;
      v29 = v170;
      v177 = v303;
      a3 = v297;
      goto LABEL_224;
    }
    v31 = a2;
    v26 = v295;
    a3 = v297;
    v28 = v303;
LABEL_38:
    v63 = 7;
    if (!v22)
      v63 = 8;
    v64 = v26 + ((v63 + v30 + ((v41 + ((v39 + v28) & 0xFFFFFFFFFFFFFFF8)) & v29)) & 0xFFFFFFFFFFFFFFF8) + 8;
    v65 = v33;
    v66 = v31;
    v67 = v30;
    v68 = v28;
    goto LABEL_174;
  }
  v33 = v306;
  v34 = v285;
  v36 = (_QWORD *)((v276 + v24 + 16) & v43);
  v35 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (v45 >= 2)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v60 = ((((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8) + v24 + 16) & v292;
    v61 = *(unsigned __int8 *)(v60 + v308);
    if (v61 >= 3)
    {
      if (v308 <= 3)
        v62 = v308;
      else
        v62 = 4;
      __asm { BR              X12 }
    }
    v69 = v304;
    if (v61 == 2)
    {
      (*(void (**)(unint64_t, uint64_t))(v302 + 8))(v60, v309);
    }
    else if (v61 == 1)
    {
      swift_bridgeObjectRelease();
      v80 = *(void (**)(unint64_t, uint64_t))(v302 + 8);
      v80((v289 + v60) & v293, v309);
      v81 = (v290 + ((v289 + v60) & v293)) & v298;
      v82 = *(unsigned __int8 *)(v81 + v304);
      if (v82 >= 4)
      {
        if (v304 <= 3)
          v83 = v304;
        else
          v83 = 4;
        __asm { BR              X12 }
      }
      if (v82 >= 2)
      {
        swift_bridgeObjectRelease();
        v109 = (v279 + v81) & v280;
        (*(void (**)(unint64_t, uint64_t))(v281 + 8))(v109, v282);
        v80((v283 + v109) & v293, v309);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v110 = v22;
    v111 = (v60 + v301 + __n) & v298;
    v112 = *(unsigned __int8 *)(v111 + v308);
    a3 = v297;
    v29 = v291;
    if (v112 <= 2)
    {
      if (v112 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v302 + 8))(v111, v309);
      }
      else if (v112 == 1)
      {
        swift_bridgeObjectRelease();
        v305 = *(void (**)(unint64_t, uint64_t))(v302 + 8);
        v305((v289 + v111) & v293, v309);
        v113 = (v290 + ((v289 + v111) & v293)) & v298;
        v114 = *(unsigned __int8 *)(v113 + v69);
        if (v114 >= 4)
        {
          if (v69 <= 3)
            v115 = v69;
          else
            v115 = 4;
          __asm { BR              X12 }
        }
        if (v114 >= 2)
        {
          swift_bridgeObjectRelease();
          v178 = (v279 + v113) & v280;
          (*(void (**)(unint64_t, uint64_t))(v281 + 8))(v178, v282);
          v305((v283 + v178) & v293, v309);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v39 = v308 + 8;
    swift_release();
    v41 = v34 + 16;
    if (!__swift_getEnumTagSinglePayload((v41 + ((v308 + 8 + v111) & 0xFFFFFFFFFFFFFFF8)) & v291, 1, v300))(*(void (**)(unint64_t, uint64_t))(v284 + 8))((v41 + ((v308 + 8 + v111) & 0xFFFFFFFFFFFFFFF8)) & v291, v300);
    v68 = v303;
    v22 = v110;
    v179 = 7;
    if (!v110)
      v179 = 8;
    v67 = v307;
    v26 = v295;
    v64 = v295 + ((v179 + v307 + ((v41 + ((v39 + v303) & 0xFFFFFFFFFFFFFFF8)) & v291)) & 0xFFFFFFFFFFFFFFF8) + 8;
    v65 = v33;
    v31 = a2;
    v66 = a2;
LABEL_174:
    memcpy(v65, v66, v64);
    v177 = v68;
    v176 = v67;
    goto LABEL_225;
  }
LABEL_17:
  *v33 = *a2;
  v33[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = (_QWORD *)(((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v46 = *v35;
  v46[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = (_QWORD *)(((unint64_t)v46 + v24 + 16) & v292);
  v48 = v308;
  v49 = v304;
  v50 = v298;
  v51 = v301;
  if (v47 == v36)
    goto LABEL_124;
  v52 = *((unsigned __int8 *)v47 + v308);
  if (v52 >= 3)
  {
    if (v308 <= 3)
      v53 = v308;
    else
      v53 = 4;
    __asm { BR              X12 }
  }
  if (v52 == 2)
  {
    (*(void (**)(_QWORD *, uint64_t))(v302 + 8))(v47, v309);
  }
  else if (v52 == 1)
  {
    swift_bridgeObjectRelease();
    v84 = *(void (**)(unint64_t, uint64_t))(v302 + 8);
    v84(((unint64_t)v47 + v289) & v293, v309);
    v85 = (v290 + (((unint64_t)v47 + v289) & v293)) & v298;
    v86 = *(unsigned __int8 *)(v85 + v304);
    if (v86 >= 4)
    {
      if (v304 <= 3)
        v87 = v304;
      else
        v87 = 4;
      __asm { BR              X12 }
    }
    v88 = v34;
    if (v86 < 2)
      goto LABEL_104;
    swift_bridgeObjectRelease();
    v116 = (v279 + v85) & v280;
    (*(void (**)(unint64_t, uint64_t))(v281 + 8))(v116, v282);
    v84((v283 + v116) & v293, v309);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v88 = v34;
LABEL_104:
  v117 = *((unsigned __int8 *)v36 + v308);
  if (v117 >= 3)
  {
    if (v308 <= 3)
      v118 = v308;
    else
      v118 = 4;
    __asm { BR              X12 }
  }
  if (v117 == 2)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v302 + 16))(v47, v36, v309);
    *(_OWORD *)(((unint64_t)v47 + v288) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v36 + v288) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)v47 + v308) = 2;
  }
  else if (v117 == 1)
  {
    v119 = v88;
    *v47 = *v36;
    v47[1] = v36[1];
    v120 = ((unint64_t)v47 + v289) & v293;
    v121 = ((unint64_t)v36 + v289) & v293;
    v122 = *(void (**)(unint64_t, unint64_t, uint64_t))(v302 + 16);
    swift_bridgeObjectRetain();
    v122(v120, v121, v309);
    v123 = (_WORD *)((v290 + v120) & v298);
    v124 = (_WORD *)((v290 + v121) & v298);
    switch(*((_BYTE *)v124 + v304))
    {
      case 0:
        v126 = 0;
        *v123 = *v124;
        break;
      case 1:
        *(_BYTE *)v123 = *(_BYTE *)v124;
        v126 = 1;
        break;
      case 2:
        *(_QWORD *)v123 = *(_QWORD *)v124;
        *(_QWORD *)(((v290 + v120) & v298) + 8) = *(_QWORD *)(((v290 + v121) & v298) + 8);
        v127 = ((unint64_t)v123 + v279) & v280;
        v128 = ((unint64_t)v124 + v279) & v280;
        v129 = *(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 16);
        swift_bridgeObjectRetain();
        v129(v127, v128, v282);
        v130 = (v283 + v127) & v293;
        v131 = (v283 + v128) & v293;
        v122(v130, v131, v309);
        *(_QWORD *)((v288 + v130) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v288 + v131) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v123 + v278) = *((_BYTE *)v124 + v278);
        v126 = 2;
        break;
      case 3:
        *(_QWORD *)v123 = *(_QWORD *)v124;
        *(_QWORD *)(((v290 + v120) & v298) + 8) = *(_QWORD *)(((v290 + v121) & v298) + 8);
        v132 = ((unint64_t)v123 + v279) & v280;
        v133 = ((unint64_t)v124 + v279) & v280;
        v134 = *(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 16);
        swift_bridgeObjectRetain();
        v134(v132, v133, v282);
        v135 = (v283 + v132) & v293;
        v136 = (v283 + v133) & v293;
        v122(v135, v136, v309);
        *(_QWORD *)((v288 + v135) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v288 + v136) & 0xFFFFFFFFFFFFF8);
        v126 = 3;
        break;
      default:
        if (v304 <= 3)
          v125 = v304;
        else
          v125 = 4;
        __asm { BR              X12 }
        return result;
    }
    v34 = v119;
    v49 = v304;
    *((_BYTE *)v123 + v304) = v126;
    v48 = v308;
    *((_BYTE *)v47 + v308) = 1;
    v50 = v298;
    v51 = v301;
  }
  else
  {
    *v47 = *v36;
    v47[1] = v36[1];
    *((_BYTE *)v47 + v308) = 0;
    swift_bridgeObjectRetain();
  }
LABEL_124:
  v137 = (_QWORD *)(((unint64_t)v47 + v51 + __n) & v50);
  v138 = (_QWORD *)(((unint64_t)v36 + v51 + __n) & v50);
  v139 = *((unsigned __int8 *)v137 + v48);
  v140 = *((unsigned __int8 *)v138 + v48);
  v275 = v22;
  if (v139 <= 2)
  {
    if (v140 <= 2)
    {
      if (v137 == v138)
        goto LABEL_209;
      if (v139 == 2)
      {
        (*(void (**)(_QWORD *, uint64_t))(v302 + 8))(v137, v309);
      }
      else if (v139 == 1)
      {
        swift_bridgeObjectRelease();
        v141 = *(void (**)(unint64_t, uint64_t))(v302 + 8);
        v141(((unint64_t)v137 + v289) & v293, v309);
        v142 = (v290 + (((unint64_t)v137 + v289) & v293)) & v50;
        v143 = *(unsigned __int8 *)(v142 + v49);
        if (v143 >= 4)
        {
          if (v49 <= 3)
            v144 = v49;
          else
            v144 = 4;
          __asm { BR              X12 }
        }
        v155 = v34;
        if (v143 < 2)
        {
LABEL_187:
          v193 = *((unsigned __int8 *)v138 + v48);
          if (v193 >= 3)
          {
            if (v48 <= 3)
              v194 = v48;
            else
              v194 = 4;
            __asm { BR              X12 }
          }
          if (v193 != 2)
          {
            if (v193 == 1)
            {
              *v137 = *v138;
              v137[1] = v138[1];
              v195 = ((unint64_t)v137 + v289) & v293;
              v196 = ((unint64_t)v138 + v289) & v293;
              v197 = *(void (**)(unint64_t, unint64_t, uint64_t))(v302 + 16);
              swift_bridgeObjectRetain();
              v197(v195, v196, v309);
              v148 = (_WORD *)((v290 + v195) & v50);
              v198 = (_WORD *)((v290 + v196) & v50);
              switch(*((_BYTE *)v198 + v49))
              {
                case 0:
                  v180 = 0;
                  *v148 = *v198;
                  break;
                case 1:
                  *(_BYTE *)v148 = *(_BYTE *)v198;
                  v180 = 1;
                  break;
                case 2:
                  *(_QWORD *)v148 = *(_QWORD *)v198;
                  *(_QWORD *)(((v290 + v195) & v50) + 8) = *(_QWORD *)(((v290 + v196) & v50) + 8);
                  v201 = ((unint64_t)v148 + v279) & v280;
                  v202 = ((unint64_t)v198 + v279) & v280;
                  v203 = *(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 16);
                  swift_bridgeObjectRetain();
                  v203(v201, v202, v282);
                  v49 = v304;
                  v204 = (v283 + v201) & v293;
                  v205 = (v283 + v202) & v293;
                  v197(v204, v205, v309);
                  *(_QWORD *)((v288 + v204) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v288 + v205) & 0xFFFFFFFFFFFFF8);
                  *((_BYTE *)v148 + v278) = *((_BYTE *)v198 + v278);
                  v180 = 2;
                  break;
                case 3:
                  *(_QWORD *)v148 = *(_QWORD *)v198;
                  *(_QWORD *)(((v290 + v195) & v50) + 8) = *(_QWORD *)(((v290 + v196) & v50) + 8);
                  v206 = ((unint64_t)v148 + v279) & v280;
                  v207 = ((unint64_t)v198 + v279) & v280;
                  v208 = *(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 16);
                  swift_bridgeObjectRetain();
                  v208(v206, v207, v282);
                  v209 = (v283 + v206) & v293;
                  v210 = (v283 + v207) & v293;
                  v197(v209, v210, v309);
                  *(_QWORD *)((v288 + v209) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v288 + v210) & 0xFFFFFFFFFFFFF8);
                  v180 = 3;
                  break;
                default:
                  if (v49 <= 3)
                    v199 = v49;
                  else
                    v199 = 4;
                  __asm { BR              X12 }
                  return result;
              }
              v34 = v155;
LABEL_207:
              *((_BYTE *)v148 + v49) = v180;
              v200 = 1;
              v48 = v308;
              goto LABEL_208;
            }
            goto LABEL_200;
          }
          goto LABEL_199;
        }
        swift_bridgeObjectRelease();
        v192 = (v279 + v142) & v280;
        (*(void (**)(unint64_t, uint64_t))(v281 + 8))(v192, v282);
        v141((v283 + v192) & v293, v309);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v155 = v34;
      goto LABEL_187;
    }
    if (v139 == 2)
    {
      (*(void (**)(_QWORD *, uint64_t))(v302 + 8))(v137, v309);
    }
    else if (v139 == 1)
    {
      swift_bridgeObjectRelease();
      v151 = *(void (**)(unint64_t, uint64_t))(v302 + 8);
      v151(((unint64_t)v137 + v289) & v293, v309);
      v152 = (v290 + (((unint64_t)v137 + v289) & v293)) & v50;
      v153 = *(unsigned __int8 *)(v152 + v49);
      if (v153 >= 4)
      {
        if (v49 <= 3)
          v154 = v49;
        else
          v154 = 4;
        __asm { BR              X12 }
      }
      if (v153 >= 2)
      {
        swift_bridgeObjectRelease();
        v191 = (v279 + v152) & v280;
        (*(void (**)(unint64_t, uint64_t))(v281 + 8))(v191, v282);
        v151((v283 + v191) & v293, v309);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_183:
    memcpy(v137, v138, __n);
    goto LABEL_209;
  }
  if (v140 > 2)
    goto LABEL_183;
  if (v140 != 2)
  {
    if (v140 == 1)
    {
      v287 = v34;
      *v137 = *v138;
      v137[1] = v138[1];
      v145 = ((unint64_t)v137 + v289) & v293;
      v146 = ((unint64_t)v138 + v289) & v293;
      v147 = *(void (**)(unint64_t, unint64_t, uint64_t))(v302 + 16);
      swift_bridgeObjectRetain();
      v147(v145, v146, v309);
      v148 = (_WORD *)((v290 + v145) & v50);
      v149 = (_WORD *)((v290 + v146) & v50);
      switch(*((_BYTE *)v149 + v49))
      {
        case 0:
          v180 = 0;
          *v148 = *v149;
          break;
        case 1:
          *(_BYTE *)v148 = *(_BYTE *)v149;
          v180 = 1;
          break;
        case 2:
          *(_QWORD *)v148 = *(_QWORD *)v149;
          *(_QWORD *)(((v290 + v145) & v50) + 8) = *(_QWORD *)(((v290 + v146) & v50) + 8);
          v181 = ((unint64_t)v148 + v279) & v280;
          v182 = ((unint64_t)v149 + v279) & v280;
          v183 = *(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 16);
          swift_bridgeObjectRetain();
          v183(v181, v182, v282);
          v49 = v304;
          v184 = (v283 + v181) & v293;
          v185 = (v283 + v182) & v293;
          v147(v184, v185, v309);
          *(_QWORD *)((v288 + v184) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v288 + v185) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v148 + v278) = *((_BYTE *)v149 + v278);
          v180 = 2;
          break;
        case 3:
          *(_QWORD *)v148 = *(_QWORD *)v149;
          *(_QWORD *)(((v290 + v145) & v50) + 8) = *(_QWORD *)(((v290 + v146) & v50) + 8);
          v186 = ((unint64_t)v148 + v279) & v280;
          v187 = ((unint64_t)v149 + v279) & v280;
          v188 = *(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 16);
          swift_bridgeObjectRetain();
          v188(v186, v187, v282);
          v189 = (v283 + v186) & v293;
          v190 = (v283 + v187) & v293;
          v147(v189, v190, v309);
          *(_QWORD *)((v288 + v189) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v288 + v190) & 0xFFFFFFFFFFFFF8);
          v180 = 3;
          break;
        default:
          if (v49 <= 3)
            v150 = v49;
          else
            v150 = 4;
          __asm { BR              X12 }
          return result;
      }
      v34 = v287;
      goto LABEL_207;
    }
LABEL_200:
    *v137 = *v138;
    v137[1] = v138[1];
    *((_BYTE *)v137 + v48) = 0;
    swift_bridgeObjectRetain();
    goto LABEL_209;
  }
LABEL_199:
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v302 + 16))(v137, v138, v309);
  *(_OWORD *)(((unint64_t)v137 + v288) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v138 + v288) & 0xFFFFFFFFFFFFF8);
  v200 = 2;
LABEL_208:
  *((_BYTE *)v137 + v48) = v200;
LABEL_209:
  v39 = v48 + 8;
  v211 = (_QWORD *)(((unint64_t)v137 + v48 + 8) & 0xFFFFFFFFFFFFFFF8);
  v212 = (_QWORD *)(((unint64_t)v138 + v48 + 8) & 0xFFFFFFFFFFFFFFF8);
  v213 = v212[1];
  *v211 = *v212;
  v211[1] = v213;
  swift_retain();
  swift_release();
  v41 = v34 + 16;
  v29 = v291;
  v214 = (void *)(((unint64_t)v211 + v41) & v291);
  v215 = (const void *)(((unint64_t)v212 + v41) & v291);
  v216 = __swift_getEnumTagSinglePayload((uint64_t)v214, 1, v300);
  v217 = __swift_getEnumTagSinglePayload((uint64_t)v215, 1, v300);
  if (!v216)
  {
    if (!v217)
    {
      (*(void (**)(void *, const void *, uint64_t))(v284 + 24))(v214, v215, v300);
      goto LABEL_219;
    }
    (*(void (**)(void *, uint64_t))(v284 + 8))(v214, v300);
LABEL_214:
    v22 = v275;
    if (v275)
      v218 = v307;
    else
      v218 = v307 + 1;
    memcpy(v214, v215, v218);
    v176 = v307;
    v33 = v306;
    v175 = a2;
    v26 = v295;
    goto LABEL_220;
  }
  if (v217)
    goto LABEL_214;
  (*(void (**)(void *, const void *, uint64_t))(v284 + 16))(v214, v215, v300);
  __swift_storeEnumTagSinglePayload((uint64_t)v214, 0, 1, v300);
LABEL_219:
  v33 = v306;
  v176 = v307;
  v175 = a2;
  v26 = v295;
  v22 = v275;
LABEL_220:
  a3 = v297;
  v177 = v303;
  if (v22)
    v219 = v176;
  else
    v219 = v176 + 1;
  *(_QWORD *)(((unint64_t)v214 + v219 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v215 + v219 + 7) & 0xFFFFFFFFFFFFF8);
LABEL_224:
  v31 = v175;
LABEL_225:
  v220 = 7;
  if (!v22)
    v220 = 8;
  v221 = (v220 + v176 + ((v41 + ((v39 + v177) & 0xFFFFFFFFFFFFFFF8)) & v29)) & 0xFFFFFFFFFFFFFFF8;
  v222 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v223 = *(unsigned __int8 *)(v222 + 80);
  v224 = v26 + v223 + v221 + 8;
  v225 = ((unint64_t)v33 + v224) & ~v223;
  v226 = ((unint64_t)v31 + v224) & ~v223;
  (*(void (**)(unint64_t, uint64_t))(v222 + 24))(v225, v226);
  v227 = *(_QWORD *)(v222 + 64);
  v228 = sub_2212F33F0();
  v229 = *(_QWORD *)(v228 - 8);
  v230 = *(_DWORD *)(v229 + 80) & 0xF8 | 7;
  v231 = (_QWORD *)((v227 + v230 + v225) & ~v230);
  v232 = (_QWORD *)((v227 + v230 + v226) & ~v230);
  if (*(_QWORD *)(v229 + 64) <= 8uLL)
    v233 = 8;
  else
    v233 = *(_QWORD *)(v229 + 64);
  if (v231 != v232)
  {
    v234 = v228;
    v235 = *((unsigned __int8 *)v231 + v233);
    if (v235 >= 2)
    {
      if (v233 <= 3)
        v236 = v233;
      else
        v236 = 4;
      __asm { BR              X12 }
    }
    if (v235 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v229 + 8))(v231, v228);
    else
      swift_release();
    v237 = *((unsigned __int8 *)v232 + v233);
    if (v237 >= 2)
    {
      if (v233 <= 3)
        v238 = v233;
      else
        v238 = 4;
      __asm { BR              X12 }
    }
    if (v237 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v229 + 16))(v231, v232, v234);
      *((_BYTE *)v231 + v233) = 1;
    }
    else
    {
      *v231 = *v232;
      *((_BYTE *)v231 + v233) = 0;
      swift_retain();
    }
  }
  v239 = sub_2212F330C();
  v240 = *(_QWORD *)(v239 - 8);
  v241 = *(_DWORD *)(v240 + 80) & 0xF8 | 7;
  v242 = v233 + v241 + 1;
  v243 = (_QWORD *)(((unint64_t)v231 + v242) & ~v241);
  v244 = (_QWORD *)(((unint64_t)v232 + v242) & ~v241);
  if (*(_QWORD *)(v240 + 64) <= 8uLL)
    v245 = 8;
  else
    v245 = *(_QWORD *)(v240 + 64);
  if (v243 != v244)
  {
    v246 = v239;
    v247 = *((unsigned __int8 *)v243 + v245);
    if (v247 >= 2)
    {
      if (v245 <= 3)
        v248 = v245;
      else
        v248 = 4;
      __asm { BR              X12 }
    }
    if (v247 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v240 + 8))(v243, v239);
    else
      swift_release();
    v249 = *((unsigned __int8 *)v244 + v245);
    if (v249 >= 2)
    {
      if (v245 <= 3)
        v250 = v245;
      else
        v250 = 4;
      __asm { BR              X12 }
    }
    if (v249 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v240 + 16))(v243, v244, v246);
      *((_BYTE *)v243 + v245) = 1;
    }
    else
    {
      *v243 = *v244;
      *((_BYTE *)v243 + v245) = 0;
      swift_retain();
    }
  }
  v251 = v245 + 1;
  v252 = (char *)v243 + v245 + 1;
  v253 = (char *)v244 + v251;
  v254 = (unint64_t)(v252 + 7) & 0xFFFFFFFFFFFFFFF8;
  v255 = ((unint64_t)v244 + v251 + 7) & 0xFFFFFFFFFFFFFFF8;
  v256 = *(_QWORD *)v255;
  v257 = *(_BYTE *)(v255 + 8);
  sub_221017C08(*(_QWORD *)v255, v257);
  v258 = *(_QWORD *)v254;
  v259 = *(_BYTE *)(v254 + 8);
  *(_QWORD *)v254 = v256;
  *(_BYTE *)(v254 + 8) = v257;
  sub_221017894(v258, v259);
  v260 = (unint64_t)(v252 + 23) & 0xFFFFFFFFFFFFFFF8;
  v261 = (unint64_t)(v253 + 23) & 0xFFFFFFFFFFFFFFF8;
  v262 = *(_QWORD *)v261;
  v263 = *(_BYTE *)(v261 + 8);
  sub_221017C08(*(_QWORD *)v261, v263);
  v264 = *(_QWORD *)v260;
  v265 = *(_BYTE *)(v260 + 8);
  *(_QWORD *)v260 = v262;
  *(_BYTE *)(v260 + 8) = v263;
  sub_221017894(v264, v265);
  v266 = (unint64_t)(v252 + 39) & 0xFFFFFFFFFFFFFFF8;
  v267 = (unint64_t)(v253 + 39) & 0xFFFFFFFFFFFFFFF8;
  v268 = *(_QWORD *)v267;
  v269 = *(_BYTE *)(v267 + 8);
  sub_221017C08(*(_QWORD *)v267, v269);
  v270 = *(_QWORD *)v266;
  v271 = *(_BYTE *)(v266 + 8);
  *(_QWORD *)v266 = v268;
  *(_BYTE *)(v266 + 8) = v269;
  sub_221017894(v270, v271);
  return v33;
}

_OWORD *sub_2212C5824(_OWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  _OWORD *v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  size_t v49;
  _OWORD *v50;
  _OWORD *v51;
  unint64_t v52;
  void (*v53)(unint64_t, unint64_t);
  uint64_t v54;
  _WORD *v55;
  _WORD *v56;
  uint64_t v57;
  _OWORD *v58;
  uint64_t v59;
  _OWORD *v60;
  char v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _OWORD *v71;
  _OWORD *v72;
  unsigned int v73;
  _OWORD *v74;
  uint64_t v75;
  _WORD *v76;
  uint64_t v77;
  _WORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD *v82;
  _OWORD *v83;
  uint64_t v84;
  void *v85;
  const void *v86;
  size_t v87;
  size_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  size_t v93;
  size_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  unsigned int v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  unsigned int v112;
  uint64_t v113;
  char v114;
  char *v115;
  char *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  _OWORD *result;
  _OWORD *v127;
  char v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _OWORD *v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  unint64_t v140;
  size_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(unint64_t, unint64_t, uint64_t);
  size_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _OWORD *v164;

  v5 = sub_2212F5124();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v150 = v7 + 16;
  v157 = v6;
  v8 = *(_QWORD *)(v6 + 64);
  v148 = sub_2212F5058();
  v9 = *(_QWORD *)(v148 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 | v10 | 7;
  v161 = ~v11;
  v149 = v11 + v8;
  v12 = (v11 + v8 + ((v7 + 16) & ~v7)) & ~v11;
  v145 = v10 + 16;
  v146 = v9;
  v154 = v10;
  v147 = *(_QWORD *)(v9 + 64) + v7;
  v13 = v8 + 7;
  v14 = (v8 + 7 + ((v147 + ((v10 + 16) & ~v10)) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;
  v16 = v14 + 9;
  v140 = v15;
  if (v16 <= v15)
    v16 = v15;
  if (v16 <= 2)
    v17 = 2;
  else
    v17 = v16;
  v18 = v17 + v12;
  if (v18 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
    v19 = v18 + 1;
  else
    v19 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 <= 0x10)
    v20 = 16;
  else
    v20 = v19;
  v21 = sub_2212F29B8();
  v22 = v11;
  v163 = v21;
  v164 = a2;
  v23 = *(_QWORD *)(v21 - 8);
  v24 = *(unsigned int *)(v23 + 84);
  v25 = *(unsigned __int8 *)(v23 + 80);
  v26 = v11 | v25;
  v27 = ~(v11 | v25);
  v28 = ((v11 | v25) + 32) & v27;
  v29 = v20 + 1;
  v30 = (v20 + 1 + v22) & ~v22;
  v31 = ~v25;
  v160 = *(_QWORD *)(v23 + 64);
  v156 = v25;
  if (v24 >= 0x80000001)
  {
    v142 = v5;
    v144 = v13;
    v134 = *(_QWORD *)(v21 - 8);
    v135 = v17;
    v152 = (v20 + 1 + v22) & ~v22;
    v153 = v28;
    v33 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    v37 = v20 + 8;
    v38 = v25 + 16;
    v151 = ~v25;
    v39 = (v25
         + 16
         + ((v20 + 8 + (((((unint64_t)v33 + v26 + 16) & v27) + v22 + v29) & v161)) & 0xFFFFFFFFFFFFFFF8)) & v31;
    v40 = *(_DWORD *)(v23 + 84);
    v41 = v22;
    if (__swift_getEnumTagSinglePayload(v39, v24, v163) < 2)
    {
      v138 = v41;
      v35 = a1;
      v32 = v164;
      LODWORD(v24) = v40;
      v17 = v135;
      v29 = v20 + 1;
      v36 = v142;
      v34 = (_OWORD *)(((unint64_t)v33 + v26 + 16) & v27);
LABEL_17:
      v42 = v154;
      *v35 = *v32;
      v43 = (_OWORD *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v43 = *v33;
      v44 = (_OWORD *)(((unint64_t)v43 + v26 + 16) & v27);
      v45 = *((unsigned __int8 *)v34 + v20);
      v139 = v24;
      if (v45 >= 3)
      {
        if (v20 <= 3)
          v46 = v20;
        else
          v46 = 4;
        __asm { BR              X12 }
      }
      v155 = ~v7;
      v133 = ~v42;
      if (v45 == 2)
      {
        v58 = v35;
        v59 = v36;
        v60 = v34;
        (*(void (**)(_OWORD *, _OWORD *))(v157 + 32))(v44, v34);
        v34 = v60;
        v35 = v58;
        *(_OWORD *)(((unint64_t)v44 + v144) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v60 + v144) & 0xFFFFFFFFFFFFF8);
        v61 = 2;
      }
      else
      {
        if (v45 == 1)
        {
          v141 = v29;
          *v44 = *v34;
          v136 = v34;
          v52 = ((unint64_t)v34 + v150) & v155;
          v53 = *(void (**)(unint64_t, unint64_t))(v157 + 32);
          v143 = v36;
          v53(((unint64_t)v44 + v150) & v155, v52);
          v54 = v161;
          v55 = (_WORD *)((v149 + (((unint64_t)v44 + v150) & v155)) & v161);
          v56 = (_WORD *)((v149 + v52) & v161);
          switch(*((_BYTE *)v56 + v17))
          {
            case 0:
              v62 = 0;
              *v55 = *v56;
              goto LABEL_40;
            case 1:
              *(_BYTE *)v55 = *(_BYTE *)v56;
              v62 = 1;
LABEL_40:
              v35 = a1;
              v29 = v141;
              v63 = v143;
              goto LABEL_44;
            case 2:
              *(_OWORD *)v55 = *(_OWORD *)v56;
              v64 = ((unint64_t)v55 + v145) & v133;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v146 + 32))(v64, ((unint64_t)v56 + v145) & v133, v148);
              v65 = (v147 + v64) & v155;
              v66 = (v147 + (((unint64_t)v56 + v145) & v133)) & v155;
              v63 = v143;
              ((void (*)(unint64_t, unint64_t, uint64_t))v53)(v65, v66, v143);
              v55 = (_WORD *)((v149 + (((unint64_t)v44 + v150) & v155)) & v161);
              v54 = v161;
              *(_QWORD *)((v144 + v65) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v144 + v66) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v55 + v140) = *((_BYTE *)v56 + v140);
              v62 = 2;
              goto LABEL_43;
            case 3:
              *(_OWORD *)v55 = *(_OWORD *)v56;
              v67 = ((unint64_t)v56 + v145) & v133;
              v68 = ((unint64_t)v55 + v145) & v133;
              (*(void (**)(void))(v146 + 32))();
              v69 = (v147 + v68) & v155;
              v70 = (v147 + v67) & v155;
              v63 = v143;
              ((void (*)(unint64_t, unint64_t, uint64_t))v53)(v69, v70, v143);
              v55 = (_WORD *)((v149 + (((unint64_t)v44 + v150) & v155)) & v161);
              v54 = v161;
              *(_QWORD *)((v144 + v69) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v144 + v70) & 0xFFFFFFFFFFFFF8);
              v62 = 3;
LABEL_43:
              v35 = a1;
              v29 = v141;
LABEL_44:
              v34 = v136;
              v59 = v63;
              *((_BYTE *)v55 + v17) = v62;
              v61 = 1;
              break;
            default:
              if (v17 <= 3)
                v57 = v17;
              else
                v57 = 4;
              __asm { BR              X12 }
              return result;
          }
LABEL_45:
          *((_BYTE *)v44 + v20) = v61;
          v71 = (_OWORD *)(((unint64_t)v44 + v138 + v29) & v54);
          v72 = (_OWORD *)(((unint64_t)v34 + v138 + v29) & v54);
          v73 = *((unsigned __int8 *)v72 + v20);
          if (v73 > 2)
          {
            v127 = v35;
            memcpy(v71, (const void *)(((unint64_t)v34 + v138 + v29) & v54), v29);
          }
          else if (v73 == 2)
          {
            v127 = v35;
            (*(void (**)(_OWORD *, unint64_t, uint64_t))(v157 + 32))(v71, ((unint64_t)v34 + v138 + v29) & v54, v59);
            *(_OWORD *)(((unint64_t)v71 + v144) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v72 + v144) & 0xFFFFFFFFFFFFF8);
            *((_BYTE *)v71 + v20) = 2;
          }
          else
          {
            if (v73 == 1)
            {
              v74 = v35;
              v162 = v20;
              *v71 = *v72;
              v137 = v17;
              v75 = v54;
              v158 = *(void (**)(unint64_t, unint64_t, uint64_t))(v157 + 32);
              v158(((unint64_t)v71 + v150) & v155, ((unint64_t)v72 + v150) & v155, v59);
              v76 = (_WORD *)((v149 + (((unint64_t)v71 + v150) & v155)) & v75);
              v77 = v137;
              v78 = (_WORD *)((v149 + (((unint64_t)v72 + v150) & v155)) & v75);
              v127 = v74;
              switch(*((_BYTE *)v78 + v137))
              {
                case 0:
                  v128 = 0;
                  *v76 = *v78;
                  break;
                case 1:
                  *(_BYTE *)v76 = *(_BYTE *)v78;
                  v128 = 1;
                  break;
                case 2:
                  *(_OWORD *)v76 = *(_OWORD *)v78;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v146 + 32))(((unint64_t)v76 + v145) & v133, ((unint64_t)v78 + v145) & v133, v148);
                  v129 = (v147 + (((unint64_t)v76 + v145) & v133)) & v155;
                  v130 = (v147 + (((unint64_t)v78 + v145) & v133)) & v155;
                  v158(v129, v130, v59);
                  v77 = v137;
                  *(_QWORD *)((v144 + v129) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v144 + v130) & 0xFFFFFFFFFFFFF8);
                  *((_BYTE *)v76 + v140) = *((_BYTE *)v78 + v140);
                  v128 = 2;
                  break;
                case 3:
                  *(_OWORD *)v76 = *(_OWORD *)v78;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v146 + 32))(((unint64_t)v76 + v145) & v133, ((unint64_t)v78 + v145) & v133, v148);
                  v131 = (v147 + (((unint64_t)v76 + v145) & v133)) & v155;
                  v132 = (v147 + (((unint64_t)v78 + v145) & v133)) & v155;
                  v158(v131, v132, v59);
                  v77 = v137;
                  *(_QWORD *)((v144 + v131) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v144 + v132) & 0xFFFFFFFFFFFFF8);
                  v128 = 3;
                  break;
                default:
                  if (v137 <= 3)
                    v79 = v137;
                  else
                    v79 = 4;
                  __asm { BR              X12 }
                  return result;
              }
              v80 = v156;
              *((_BYTE *)v76 + v77) = v128;
              v20 = v162;
              *((_BYTE *)v71 + v162) = 1;
              goto LABEL_57;
            }
            v127 = v35;
            *v71 = *v72;
            *((_BYTE *)v71 + v20) = 0;
          }
          v80 = v156;
LABEL_57:
          v81 = v20 + 8;
          v82 = (_OWORD *)(((unint64_t)v71 + v20 + 8) & 0xFFFFFFFFFFFFFFF8);
          v83 = (_OWORD *)(((unint64_t)v72 + v20 + 8) & 0xFFFFFFFFFFFFFFF8);
          *v82 = *v83;
          v84 = v80 + 16;
          v85 = (void *)(((unint64_t)v82 + v80 + 16) & v151);
          v86 = (const void *)(((unint64_t)v83 + v80 + 16) & v151);
          if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v163))
          {
            v87 = v160;
            if (v139)
              v88 = v160;
            else
              v88 = v160 + 1;
            memcpy(v85, v86, v88);
            v89 = v139;
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v134 + 32))(v85, v86, v163);
            __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v163);
            v89 = v139;
            v87 = v160;
            if (v139)
              v88 = v160;
            else
              v88 = v160 + 1;
          }
          v51 = v164;
          v47 = a3;
          *(_QWORD *)(((unint64_t)v85 + v88 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v86
                                                                                           + v88
                                                                                           + 7) & 0xFFFFFFFFFFFFF8);
          v90 = 7;
          if (!v89)
            v90 = 8;
          v49 = v153 + ((v90 + v87 + ((v84 + ((v81 + v152) & 0xFFFFFFFFFFFFFFF8)) & v151)) & 0xFFFFFFFFFFFFFFF8) + 8;
          v50 = v127;
          goto LABEL_68;
        }
        v59 = v36;
        v61 = 0;
        *v44 = *v34;
      }
      v54 = v161;
      goto LABEL_45;
    }
    v47 = a3;
    v30 = v152;
    v28 = v153;
    LODWORD(v24) = v40;
    v31 = v151;
  }
  else
  {
    if (a2[1] >= 0xFFFFFFFFuLL)
    {
      v32 = a2;
      v151 = ~v25;
      v152 = (v20 + 1 + v22) & ~v22;
      v138 = v22;
      v144 = v13;
      v134 = *(_QWORD *)(v21 - 8);
      v153 = v28;
      v33 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      v34 = (_OWORD *)(((unint64_t)v33 + v26 + 16) & v27);
      v35 = a1;
      v36 = v5;
      goto LABEL_17;
    }
    v37 = v20 + 8;
    v38 = v25 + 16;
    v47 = a3;
  }
  v48 = 7;
  if (!(_DWORD)v24)
    v48 = 8;
  v49 = v28 + ((v48 + v160 + ((v38 + ((v37 + v30) & 0xFFFFFFFFFFFFFFF8)) & v31)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v50 = a1;
  v51 = v164;
  memcpy(a1, v164, v49);
LABEL_68:
  v91 = *(_QWORD *)(*(_QWORD *)(v47 + 16) - 8);
  v92 = *(unsigned __int8 *)(v91 + 80);
  v93 = ((unint64_t)v50 + v49 + v92) & ~v92;
  v94 = ((unint64_t)v51 + v49 + v92) & ~v92;
  (*(void (**)(size_t, size_t))(v91 + 32))(v93, v94);
  v95 = *(_QWORD *)(v91 + 64);
  v96 = sub_2212F33F0();
  v97 = *(_QWORD *)(v96 - 8);
  v98 = *(_DWORD *)(v97 + 80) & 0xF8 | 7;
  v99 = (_QWORD *)((v95 + v98 + v93) & ~v98);
  v100 = (_QWORD *)((v95 + v98 + v94) & ~v98);
  if (*(_QWORD *)(v97 + 64) <= 8uLL)
    v101 = 8;
  else
    v101 = *(_QWORD *)(v97 + 64);
  v102 = *((unsigned __int8 *)v100 + v101);
  if (v102 >= 2)
  {
    if (v101 <= 3)
      v103 = v101;
    else
      v103 = 4;
    __asm { BR              X13 }
  }
  if (v102 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v97 + 32))(v99, v100, v96);
    v104 = 1;
  }
  else
  {
    v104 = 0;
    *v99 = *v100;
  }
  *((_BYTE *)v99 + v101) = v104;
  v105 = v101 + 1;
  v106 = sub_2212F330C();
  v107 = *(_QWORD *)(v106 - 8);
  v108 = *(_DWORD *)(v107 + 80) & 0xF8 | 7;
  v109 = (_QWORD *)(((unint64_t)v99 + v105 + v108) & ~v108);
  v110 = (_QWORD *)(((unint64_t)v100 + v105 + v108) & ~v108);
  if (*(_QWORD *)(v107 + 64) <= 8uLL)
    v111 = 8;
  else
    v111 = *(_QWORD *)(v107 + 64);
  v112 = *((unsigned __int8 *)v110 + v111);
  if (v112 >= 2)
  {
    if (v111 <= 3)
      v113 = v111;
    else
      v113 = 4;
    __asm { BR              X13 }
  }
  if (v112 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v107 + 32))(v109, v110, v106);
    v114 = 1;
  }
  else
  {
    v114 = 0;
    *v109 = *v110;
  }
  *((_BYTE *)v109 + v111) = v114;
  v115 = (char *)v109 + v111 + 1;
  v116 = (char *)v110 + v111 + 1;
  v117 = (unint64_t)(v115 + 7) & 0xFFFFFFFFFFFFFFF8;
  v118 = (unint64_t)(v116 + 7) & 0xFFFFFFFFFFFFFFF8;
  v119 = *(_QWORD *)v118;
  *(_BYTE *)(v117 + 8) = *(_BYTE *)(v118 + 8);
  *(_QWORD *)v117 = v119;
  v120 = (unint64_t)(v115 + 23) & 0xFFFFFFFFFFFFFFF8;
  v121 = (unint64_t)(v116 + 23) & 0xFFFFFFFFFFFFFFF8;
  v122 = *(_QWORD *)v121;
  *(_BYTE *)(v120 + 8) = *(_BYTE *)(v121 + 8);
  *(_QWORD *)v120 = v122;
  v123 = (unint64_t)(v115 + 39) & 0xFFFFFFFFFFFFFFF8;
  v124 = (unint64_t)(v116 + 39) & 0xFFFFFFFFFFFFFFF8;
  v125 = *(_QWORD *)v124;
  *(_BYTE *)(v123 + 8) = *(_BYTE *)(v124 + 8);
  *(_QWORD *)v123 = v125;
  return v50;
}

_QWORD *sub_2212C64DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const void *v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  _QWORD *v41;
  _QWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  size_t v45;
  unsigned int v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  _OWORD *v50;
  _OWORD *v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  size_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  size_t v64;
  void *v65;
  const void *v66;
  uint64_t v67;
  uint64_t v68;
  size_t v69;
  uint64_t v70;
  void (*v71)(unint64_t, unint64_t, uint64_t);
  _WORD *v72;
  _WORD *v73;
  uint64_t v74;
  char v75;
  size_t v76;
  void (*v77)(unint64_t, uint64_t);
  unint64_t v78;
  unsigned int v79;
  uint64_t v80;
  void (*v81)(unint64_t, uint64_t);
  unint64_t v82;
  unsigned int v83;
  uint64_t v84;
  char v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  _OWORD *v90;
  _OWORD *v91;
  unsigned int v92;
  void (*v93)(unint64_t, unint64_t, uint64_t);
  _WORD *v94;
  _WORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _OWORD *v99;
  _OWORD *v100;
  void *v101;
  const void *v102;
  size_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unsigned int v107;
  void (*v108)(unint64_t, uint64_t);
  unint64_t v109;
  unsigned int v110;
  uint64_t v111;
  unint64_t v112;
  unsigned int v113;
  uint64_t v114;
  unint64_t v115;
  void (*v116)(unint64_t, unint64_t, uint64_t);
  _WORD *v117;
  _WORD *v118;
  uint64_t v119;
  char v120;
  char v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  unint64_t v125;
  _OWORD *v126;
  _OWORD *v127;
  unsigned int v128;
  unsigned int v129;
  uint64_t v130;
  _QWORD *v131;
  void (*v132)(unint64_t, uint64_t);
  unint64_t v133;
  unsigned int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(unint64_t, unint64_t, uint64_t);
  uint64_t v139;
  _WORD *v140;
  _WORD *v141;
  uint64_t v142;
  size_t v143;
  void (*v144)(unint64_t, uint64_t);
  unint64_t v145;
  unsigned int v146;
  uint64_t v147;
  char v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  _OWORD *v154;
  _OWORD *v155;
  void *v156;
  const void *v157;
  int v158;
  size_t v159;
  size_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  unsigned int v177;
  uint64_t v178;
  unsigned int v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  unsigned int v190;
  uint64_t v191;
  unsigned int v192;
  uint64_t v193;
  char v194;
  uint64_t v195;
  char *v196;
  char *v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char v212;
  _QWORD *result;
  unsigned int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char v218;
  unint64_t v219;
  unint64_t v220;
  unint64_t v221;
  unint64_t v222;
  unint64_t v223;
  unint64_t v224;
  _OWORD *v225;
  unsigned int EnumTagSinglePayload;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  size_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  int v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  size_t v251;
  void *v252;
  uint64_t v254;

  v250 = sub_2212F5124();
  v4 = *(_QWORD *)(v250 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v240 = ~v5;
  v234 = v5 + 16;
  v6 = (v5 + 16) & ~v5;
  v245 = v4;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = sub_2212F5058();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v5 | v10 | 7;
  v12 = ~v11;
  v235 = v11 + v7;
  v228 = ~v10;
  v227 = v10 + 16;
  v229 = v9;
  v230 = v8;
  v231 = *(_QWORD *)(v9 + 64) + v5;
  v13 = v7 + 7;
  v14 = (v7 + 7 + ((v231 + ((v10 + 16) & ~v10)) & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 8;
  v16 = v14 + 9;
  if (v16 <= v15)
    v16 = v15;
  if (v16 <= 2)
    v16 = 2;
  v244 = v16;
  v17 = v16 + ((v11 + v7 + v6) & ~v11);
  v233 = v7 + 7;
  if (v17 + 1 > (v13 & 0xFFFFFFFFFFFFFFF8) + 16)
    v18 = v17 + 1;
  else
    v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 <= 0x10)
    v19 = 16;
  else
    v19 = v18;
  v20 = sub_2212F29B8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int *)(v21 + 84);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v24 = v11 | v23;
  v25 = ~(v11 | v23);
  v248 = ((v11 | v23) + 32) & v25;
  v26 = v19 + 1;
  v27 = (v19 + 1 + v11) & ~v11;
  v28 = ~v23;
  v251 = *(_QWORD *)(v21 + 64);
  v252 = a1;
  v254 = ~v23;
  v247 = *(_DWORD *)(v21 + 84);
  v249 = v27;
  v243 = v20;
  v246 = v23;
  v241 = ~v11;
  v242 = v11;
  if (v22 < 0x80000001)
  {
    v29 = a2;
    v30 = a2[1];
    v31 = a1;
    if (a1[1] > 0xFFFFFFFEuLL)
    {
      v239 = v19 + 1;
      v224 = v15;
      v232 = *(_QWORD *)(v20 - 8);
      if (v30 >= 0xFFFFFFFF)
      {
        v32 = a2;
        v33 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
        v34 = (_OWORD *)(((unint64_t)v33 + v24 + 16) & v25);
        v35 = v241;
        goto LABEL_18;
      }
LABEL_32:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v55 = ((((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8) + v24 + 16) & v25;
      v56 = *(unsigned __int8 *)(v55 + v19);
      if (v56 >= 3)
      {
        if (v19 <= 3)
          v57 = v19;
        else
          v57 = 4;
        __asm { BR              X12 }
      }
      v61 = v254;
      if (v56 == 2)
      {
        (*(void (**)(unint64_t, uint64_t))(v245 + 8))(v55, v250);
      }
      else if (v56 == 1)
      {
        swift_bridgeObjectRelease();
        v77 = *(void (**)(unint64_t, uint64_t))(v245 + 8);
        v77((v234 + v55) & v240, v250);
        v78 = (v235 + ((v234 + v55) & v240)) & v241;
        v79 = *(unsigned __int8 *)(v78 + v244);
        if (v79 >= 4)
        {
          if (v244 <= 3)
            v80 = v244;
          else
            v80 = 4;
          __asm { BR              X12 }
        }
        if (v79 >= 2)
        {
          swift_bridgeObjectRelease();
          v105 = (v227 + v78) & v228;
          (*(void (**)(unint64_t, uint64_t))(v229 + 8))(v105, v230);
          v77((v231 + v105) & v240, v250);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v106 = (v55 + v11 + v239) & v241;
      v107 = *(unsigned __int8 *)(v106 + v19);
      v31 = a1;
      v62 = a3;
      v60 = v251;
      if (v107 <= 2)
      {
        if (v107 == 2)
        {
          (*(void (**)(unint64_t, uint64_t))(v245 + 8))(v106, v250);
        }
        else if (v107 == 1)
        {
          swift_bridgeObjectRelease();
          v108 = *(void (**)(unint64_t, uint64_t))(v245 + 8);
          v108((v234 + v106) & v240, v250);
          v109 = (v235 + ((v234 + v106) & v240)) & v241;
          v110 = *(unsigned __int8 *)(v109 + v244);
          if (v110 >= 4)
          {
            if (v244 <= 3)
              v111 = v244;
            else
              v111 = 4;
            __asm { BR              X12 }
          }
          v60 = v251;
          if (v110 >= 2)
          {
            if (v110 == 3)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v229 + 8))((v227 + v109) & v228, v230);
              v60 = v251;
              v108((v231 + ((v227 + v109) & v228)) & v240, v250);
            }
            else
            {
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v229 + 8))((v227 + v109) & v228, v230);
              v108((v231 + ((v227 + v109) & v228)) & v240, v250);
              v60 = v251;
            }
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v67 = v19 + 8;
      swift_release();
      v37 = v246 + 16;
      if (!__swift_getEnumTagSinglePayload((v246 + 16 + ((v19 + 8 + v106) & 0xFFFFFFFFFFFFFFF8)) & v254, 1, v243))(*(void (**)(unint64_t, uint64_t))(v232 + 8))((v246 + 16 + ((v19 + 8 + v106) & 0xFFFFFFFFFFFFFFF8)) & v254, v243);
      v58 = v248;
      v68 = v249;
      v59 = v247;
      v153 = 7;
      if (!v247)
        v153 = 8;
      v64 = v248 + ((v153 + v60 + ((v37 + ((v67 + v249) & 0xFFFFFFFFFFFFFFF8)) & v254)) & 0xFFFFFFFFFFFFFFF8) + 8;
      v65 = v252;
      v29 = a2;
      v66 = a2;
LABEL_185:
      memcpy(v65, v66, v64);
      v104 = v68;
      v98 = v67;
      goto LABEL_206;
    }
    if (v30 >= 0xFFFFFFFF)
    {
      v224 = v15;
      v236 = v19;
      v232 = *(_QWORD *)(v20 - 8);
      v48 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      v49 = (_OWORD *)(((unint64_t)v48 + v24 + 16) & v25);
      goto LABEL_27;
    }
    v39 = v19 + 8;
    v37 = v23 + 16;
    v58 = ((v11 | v23) + 32) & ~(v11 | v23);
    v59 = *(_DWORD *)(v21 + 84);
    v60 = *(_QWORD *)(v21 + 64);
    v61 = ~v23;
    v62 = a3;
LABEL_39:
    v63 = 7;
    if (!v59)
      v63 = 8;
    v64 = v58 + ((v63 + v60 + ((v37 + ((v39 + v27) & 0xFFFFFFFFFFFFFFF8)) & v61)) & 0xFFFFFFFFFFFFFFF8) + 8;
    v65 = v31;
    v66 = v29;
    v67 = v39;
    v68 = v27;
    goto LABEL_185;
  }
  v36 = v20;
  v224 = v15;
  v232 = *(_QWORD *)(v20 - 8);
  v236 = v19;
  v37 = v23 + 16;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v23+ 16+ ((v19+ 8+ (((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v24 + 16) & v25) + v11 + v26) & v12)) & 0xFFFFFFFFFFFFFFF8)) & v28, v22, v20);
  v223 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  v239 = v19 + 1;
  v38 = ((v223 + v24 + 16) & v25) + v11 + v19 + 1;
  v39 = v19 + 8;
  v40 = __swift_getEnumTagSinglePayload((v37 + ((v39 + (v38 & v12)) & 0xFFFFFFFFFFFFFFF8)) & v28, v22, v36);
  if (EnumTagSinglePayload < 2)
  {
    v31 = a1;
    v19 = v236;
    if (v40 <= 1)
    {
      v32 = a2;
      v30 = a2[1];
      v35 = ~v11;
      v34 = (_OWORD *)((v223 + v24 + 16) & v25);
      v33 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
LABEL_18:
      v41 = v32;
      *v31 = *v32;
      v31[1] = v30;
      swift_bridgeObjectRelease();
      v42 = (_QWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v42 = *v33;
      v42[1] = v33[1];
      swift_bridgeObjectRelease();
      v43 = (_OWORD *)(((unint64_t)v42 + v24 + 16) & v25);
      v44 = v254;
      v45 = v239;
      if (v43 == v34)
        goto LABEL_138;
      v46 = *((unsigned __int8 *)v43 + v19);
      if (v46 >= 3)
      {
        if (v19 <= 3)
          v47 = v19;
        else
          v47 = 4;
        __asm { BR              X12 }
      }
      if (v46 == 2)
      {
        (*(void (**)(_OWORD *, uint64_t, size_t))(v245 + 8))(v43, v250, v239);
      }
      else if (v46 == 1)
      {
        swift_bridgeObjectRelease();
        v81 = *(void (**)(unint64_t, uint64_t))(v245 + 8);
        v81(((unint64_t)v43 + v234) & v240, v250);
        v82 = (v235 + (((unint64_t)v43 + v234) & v240)) & v35;
        v83 = *(unsigned __int8 *)(v82 + v244);
        if (v83 >= 4)
        {
          if (v244 <= 3)
            v84 = v244;
          else
            v84 = 4;
          __asm { BR              X12 }
        }
        if (v83 >= 2)
        {
          swift_bridgeObjectRelease();
          v112 = (v227 + v82) & v228;
          (*(void (**)(unint64_t, uint64_t))(v229 + 8))(v112, v230);
          v81((v231 + v112) & v240, v250);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v113 = *((unsigned __int8 *)v34 + v19);
      if (v113 >= 3)
      {
        if (v19 <= 3)
          v114 = v19;
        else
          v114 = 4;
        __asm { BR              X12 }
      }
      if (v113 == 2)
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v245 + 32))(v43, v34, v250);
        *(_OWORD *)(((unint64_t)v43 + v233) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v34 + v233) & 0xFFFFFFFFFFFFF8);
        v120 = 2;
      }
      else
      {
        if (v113 == 1)
        {
          v238 = v19;
          *v43 = *v34;
          v225 = v34;
          v115 = ((unint64_t)v34 + v234) & v240;
          v116 = *(void (**)(unint64_t, unint64_t, uint64_t))(v245 + 32);
          v116(((unint64_t)v43 + v234) & v240, v115, v250);
          v117 = (_WORD *)((v235 + (((unint64_t)v43 + v234) & v240)) & v35);
          v118 = (_WORD *)((v235 + v115) & v35);
          switch(*((_BYTE *)v118 + v244))
          {
            case 0:
              v121 = 0;
              *v117 = *v118;
              break;
            case 1:
              *(_BYTE *)v117 = *(_BYTE *)v118;
              v121 = 1;
              break;
            case 2:
              *(_OWORD *)v117 = *(_OWORD *)v118;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v229 + 32))(((unint64_t)v117 + v227) & v228, ((unint64_t)v118 + v227) & v228, v230);
              v122 = (v231 + (((unint64_t)v117 + v227) & v228)) & v240;
              v123 = (v231 + (((unint64_t)v118 + v227) & v228)) & v240;
              v116(v122, v123, v250);
              *(_QWORD *)((v233 + v122) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v233 + v123) & 0xFFFFFFFFFFFFF8);
              *((_BYTE *)v117 + v224) = *((_BYTE *)v118 + v224);
              v121 = 2;
              break;
            case 3:
              *(_OWORD *)v117 = *(_OWORD *)v118;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v229 + 32))(((unint64_t)v117 + v227) & v228, ((unint64_t)v118 + v227) & v228, v230);
              v124 = (v231 + (((unint64_t)v117 + v227) & v228)) & v240;
              v125 = (v231 + (((unint64_t)v118 + v227) & v228)) & v240;
              v116(v124, v125, v250);
              *(_QWORD *)((v233 + v124) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v233 + v125) & 0xFFFFFFFFFFFFF8);
              v121 = 3;
              break;
            default:
              if (v244 <= 3)
                v119 = v244;
              else
                v119 = 4;
              __asm { BR              X12 }
              return result;
          }
          v44 = v254;
          v45 = v239;
          *((_BYTE *)v117 + v244) = v121;
          v120 = 1;
          v19 = v238;
          v34 = v225;
          goto LABEL_137;
        }
        v120 = 0;
        *v43 = *v34;
      }
      v45 = v239;
LABEL_137:
      *((_BYTE *)v43 + v19) = v120;
LABEL_138:
      v126 = (_OWORD *)(((unint64_t)v43 + v242 + v45) & v35);
      v127 = (_OWORD *)(((unint64_t)v34 + v242 + v45) & v35);
      v128 = *((unsigned __int8 *)v126 + v19);
      v129 = *((unsigned __int8 *)v127 + v19);
      if (v128 > 2)
      {
        if (v129 > 2)
        {
          memcpy(v126, (const void *)(((unint64_t)v34 + v242 + v45) & v35), v45);
        }
        else
        {
          if (v129 != 2)
          {
            v136 = v35;
            v58 = v248;
            v131 = v41;
            if (v129 != 1)
            {
LABEL_265:
              *v126 = *v127;
              *((_BYTE *)v126 + v19) = 0;
              goto LABEL_191;
            }
            v137 = v19;
            *v126 = *v127;
            v138 = *(void (**)(unint64_t, unint64_t, uint64_t))(v245 + 32);
            v138(((unint64_t)v126 + v234) & v240, ((unint64_t)v127 + v234) & v240, v250);
            v139 = v136;
            v140 = (_WORD *)((v235 + (((unint64_t)v126 + v234) & v240)) & v136);
            v141 = (_WORD *)((v235 + (((unint64_t)v127 + v234) & v240)) & v139);
            switch(*((_BYTE *)v141 + v244))
            {
              case 0:
LABEL_268:
                v218 = 0;
                *v140 = *v141;
                break;
              case 1:
LABEL_269:
                *(_BYTE *)v140 = *(_BYTE *)v141;
                v218 = 1;
                break;
              case 2:
LABEL_270:
                *(_OWORD *)v140 = *(_OWORD *)v141;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v229 + 32))(((unint64_t)v140 + v227) & v228, ((unint64_t)v141 + v227) & v228, v230);
                v219 = (v231 + (((unint64_t)v140 + v227) & v228)) & v240;
                v220 = (v231 + (((unint64_t)v141 + v227) & v228)) & v240;
                v138(v219, v220, v250);
                *(_QWORD *)((v233 + v219) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v233 + v220) & 0xFFFFFFFFFFFFF8);
                *((_BYTE *)v140 + v224) = *((_BYTE *)v141 + v224);
                v218 = 2;
                break;
              case 3:
LABEL_271:
                *(_OWORD *)v140 = *(_OWORD *)v141;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v229 + 32))(((unint64_t)v140 + v227) & v228, ((unint64_t)v141 + v227) & v228, v230);
                v221 = (v231 + (((unint64_t)v140 + v227) & v228)) & v240;
                v222 = (v231 + (((unint64_t)v141 + v227) & v228)) & v240;
                v138(v221, v222, v250);
                *(_QWORD *)((v233 + v221) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v233 + v222) & 0xFFFFFFFFFFFFF8);
                v218 = 3;
                break;
              default:
                if (v244 <= 3)
                  v142 = v244;
                else
                  v142 = 4;
                __asm { BR              X12 }
                return result;
            }
            v44 = v254;
            *((_BYTE *)v140 + v244) = v218;
            v19 = v137;
            *((_BYTE *)v126 + v137) = 1;
LABEL_191:
            v98 = v19 + 8;
            v154 = (_OWORD *)(((unint64_t)v126 + v98) & 0xFFFFFFFFFFFFFFF8);
            v155 = (_OWORD *)(((unint64_t)v127 + v98) & 0xFFFFFFFFFFFFFFF8);
            *v154 = *v155;
            swift_release();
            v37 = v246 + 16;
            v156 = (void *)(((unint64_t)v154 + v246 + 16) & v44);
            v157 = (const void *)(((unint64_t)v155 + v246 + 16) & v44);
            LODWORD(v155) = __swift_getEnumTagSinglePayload((uint64_t)v156, 1, v243);
            v158 = __swift_getEnumTagSinglePayload((uint64_t)v157, 1, v243);
            if ((_DWORD)v155)
            {
              if (!v158)
              {
                (*(void (**)(void *, const void *, uint64_t))(v232 + 32))(v156, v157, v243);
                __swift_storeEnumTagSinglePayload((uint64_t)v156, 0, 1, v243);
LABEL_201:
                v31 = v252;
                v62 = a3;
                v59 = v247;
                v60 = v251;
LABEL_202:
                if (v59)
                  v160 = v60;
                else
                  v160 = v60 + 1;
                *(_QWORD *)(((unint64_t)v156 + v160 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v157 + v160 + 7) & 0xFFFFFFFFFFFFF8);
                v61 = v254;
                v104 = v249;
                v29 = v131;
                goto LABEL_206;
              }
            }
            else
            {
              if (!v158)
              {
                (*(void (**)(void *, const void *, uint64_t))(v232 + 40))(v156, v157, v243);
                goto LABEL_201;
              }
              (*(void (**)(void *, uint64_t))(v232 + 8))(v156, v243);
            }
            v59 = v247;
            v60 = v251;
            if (v247)
              v159 = v251;
            else
              v159 = v251 + 1;
            memcpy(v156, v157, v159);
            v31 = v252;
            v62 = a3;
            goto LABEL_202;
          }
          (*(void (**)(_OWORD *, unint64_t, uint64_t))(v245 + 32))(v126, ((unint64_t)v34 + v242 + v45) & v35, v250);
          *(_OWORD *)(((unint64_t)v126 + v233) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v127 + v233) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v126 + v19) = 2;
        }
        v131 = v41;
      }
      else
      {
        if (v129 <= 2)
        {
          v130 = v35;
          v131 = v41;
          v58 = v248;
          if (v126 == v127)
            goto LABEL_191;
          if (v128 == 2)
          {
            (*(void (**)(_OWORD *, uint64_t))(v245 + 8))(v126, v250);
          }
          else if (v128 == 1)
          {
            swift_bridgeObjectRelease();
            v132 = *(void (**)(unint64_t, uint64_t))(v245 + 8);
            v132(((unint64_t)v126 + v234) & v240, v250);
            v133 = (v235 + (((unint64_t)v126 + v234) & v240)) & v130;
            v134 = *(unsigned __int8 *)(v133 + v244);
            if (v134 >= 4)
            {
              if (v244 <= 3)
                v135 = v244;
              else
                v135 = 4;
              __asm { BR              X12 }
            }
            if (v134 >= 2)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v229 + 8))((v227 + v133) & v228, v230);
              v132((v231 + ((v227 + v133) & v228)) & v240, v250);
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          v214 = *((unsigned __int8 *)v127 + v19);
          if (v214 >= 3)
          {
            if (v19 <= 3)
              v215 = v19;
            else
              v215 = 4;
            __asm { BR              X12 }
          }
          if (v214 != 2)
          {
            if (v214 == 1)
            {
              v137 = v19;
              *v126 = *v127;
              v138 = *(void (**)(unint64_t, unint64_t, uint64_t))(v245 + 32);
              v138(((unint64_t)v126 + v234) & v240, ((unint64_t)v127 + v234) & v240, v250);
              v216 = v130;
              v140 = (_WORD *)((v235 + (((unint64_t)v126 + v234) & v240)) & v130);
              v141 = (_WORD *)((v235 + (((unint64_t)v127 + v234) & v240)) & v216);
              switch(*((_BYTE *)v141 + v244))
              {
                case 0:
                  goto LABEL_268;
                case 1:
                  goto LABEL_269;
                case 2:
                  goto LABEL_270;
                case 3:
                  goto LABEL_271;
                default:
                  if (v244 <= 3)
                    v217 = v244;
                  else
                    v217 = 4;
                  __asm { BR              X12 }
                  return result;
              }
            }
            goto LABEL_265;
          }
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v245 + 32))(v126, v127, v250);
          *(_OWORD *)(((unint64_t)v126 + v233) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v127 + v233) & 0xFFFFFFFFFFFFF8);
          *((_BYTE *)v126 + v19) = 2;
          goto LABEL_191;
        }
        if (v128 == 2)
        {
          v143 = v45;
          (*(void (**)(_OWORD *, uint64_t))(v245 + 8))(v126, v250);
          v131 = v41;
        }
        else
        {
          v131 = v41;
          v143 = v45;
          if (v128 == 1)
          {
            swift_bridgeObjectRelease();
            v144 = *(void (**)(unint64_t, uint64_t))(v245 + 8);
            v144(((unint64_t)v126 + v234) & v240, v250);
            v145 = (v235 + (((unint64_t)v126 + v234) & v240)) & v35;
            v146 = *(unsigned __int8 *)(v145 + v244);
            if (v146 >= 4)
            {
              if (v244 <= 3)
                v147 = v244;
              else
                v147 = 4;
              __asm { BR              X12 }
            }
            if (v146 >= 2)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v229 + 8))((v227 + v145) & v228, v230);
              v144((v231 + ((v227 + v145) & v228)) & v240, v250);
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        memcpy(v126, v127, v143);
      }
      v58 = v248;
      goto LABEL_191;
    }
    goto LABEL_32;
  }
  v31 = a1;
  v27 = v249;
  v26 = v239;
  v49 = (_OWORD *)((v223 + v24 + 16) & v25);
  v48 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (v40 >= 2)
  {
    v61 = v254;
    v29 = a2;
    v62 = a3;
    v58 = v248;
    v59 = v247;
    v60 = v251;
    goto LABEL_39;
  }
LABEL_27:
  *(_OWORD *)v31 = *(_OWORD *)a2;
  v50 = (_OWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v50 = *v48;
  v51 = (_OWORD *)(((unint64_t)v50 + v24 + 16) & v25);
  v52 = v236;
  v53 = *((unsigned __int8 *)v49 + v236);
  if (v53 >= 3)
  {
    if (v236 <= 3)
      v54 = v236;
    else
      v54 = 4;
    __asm { BR              X12 }
  }
  v69 = v26;
  v60 = v251;
  v70 = v254;
  if (v53 == 2)
  {
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v245 + 32))(v51, v49, v250);
    *(_OWORD *)(((unint64_t)v51 + v233) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v49 + v233) & 0xFFFFFFFFFFFFF8);
    v75 = 2;
LABEL_54:
    v76 = v69;
    goto LABEL_79;
  }
  if (v53 != 1)
  {
    v75 = 0;
    *v51 = *v49;
    goto LABEL_54;
  }
  *v51 = *v49;
  v71 = *(void (**)(unint64_t, unint64_t, uint64_t))(v245 + 32);
  v71(((unint64_t)v51 + v234) & v240, ((unint64_t)v49 + v234) & v240, v250);
  v72 = (_WORD *)((v235 + (((unint64_t)v51 + v234) & v240)) & v241);
  v73 = (_WORD *)((v235 + (((unint64_t)v49 + v234) & v240)) & v241);
  switch(*((_BYTE *)v73 + v244))
  {
    case 0:
      v85 = 0;
      *v72 = *v73;
      break;
    case 1:
      *(_BYTE *)v72 = *(_BYTE *)v73;
      v85 = 1;
      break;
    case 2:
      *(_OWORD *)v72 = *(_OWORD *)v73;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v229 + 32))(((unint64_t)v72 + v227) & v228, ((unint64_t)v73 + v227) & v228, v230);
      v86 = (v231 + (((unint64_t)v72 + v227) & v228)) & v240;
      v87 = (v231 + (((unint64_t)v73 + v227) & v228)) & v240;
      v71(v86, v87, v250);
      *(_QWORD *)((v233 + v86) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v233 + v87) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v72 + v224) = *((_BYTE *)v73 + v224);
      v85 = 2;
      break;
    case 3:
      *(_OWORD *)v72 = *(_OWORD *)v73;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v229 + 32))(((unint64_t)v72 + v227) & v228, ((unint64_t)v73 + v227) & v228, v230);
      v88 = (v231 + (((unint64_t)v72 + v227) & v228)) & v240;
      v89 = (v231 + (((unint64_t)v73 + v227) & v228)) & v240;
      v71(v88, v89, v250);
      *(_QWORD *)((v233 + v88) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v233 + v89) & 0xFFFFFFFFFFFFF8);
      v85 = 3;
      break;
    default:
      if (v244 <= 3)
        v74 = v244;
      else
        v74 = 4;
      __asm { BR              X12 }
      return result;
  }
  v60 = v251;
  v70 = v254;
  v76 = v69;
  *((_BYTE *)v72 + v244) = v85;
  v75 = 1;
  v52 = v236;
LABEL_79:
  *((_BYTE *)v51 + v52) = v75;
  v90 = (_OWORD *)(((unint64_t)v51 + v242 + v76) & v241);
  v91 = (_OWORD *)(((unint64_t)v49 + v242 + v76) & v241);
  v92 = *((unsigned __int8 *)v91 + v52);
  if (v92 > 2)
  {
    memcpy(v90, (const void *)(((unint64_t)v49 + v242 + v76) & v241), v76);
LABEL_89:
    v58 = v248;
    goto LABEL_90;
  }
  if (v92 == 2)
  {
    (*(void (**)(_OWORD *, unint64_t, uint64_t))(v245 + 32))(v90, ((unint64_t)v49 + v242 + v76) & v241, v250);
    *(_OWORD *)(((unint64_t)v90 + v233) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v91 + v233) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)v90 + v52) = 2;
    goto LABEL_89;
  }
  v58 = v248;
  if (v92 == 1)
  {
    v237 = v52;
    *v90 = *v91;
    v93 = *(void (**)(unint64_t, unint64_t, uint64_t))(v245 + 32);
    v93(((unint64_t)v90 + v234) & v240, ((unint64_t)v91 + v234) & v240, v250);
    v94 = (_WORD *)((v235 + (((unint64_t)v90 + v234) & v240)) & v241);
    v95 = (_WORD *)((v235 + (((unint64_t)v91 + v234) & v240)) & v241);
    switch(*((_BYTE *)v95 + v244))
    {
      case 0:
        v148 = 0;
        *v94 = *v95;
        break;
      case 1:
        *(_BYTE *)v94 = *(_BYTE *)v95;
        v148 = 1;
        break;
      case 2:
        *(_OWORD *)v94 = *(_OWORD *)v95;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v229 + 32))(((unint64_t)v94 + v227) & v228, ((unint64_t)v95 + v227) & v228, v230);
        v149 = (v231 + (((unint64_t)v94 + v227) & v228)) & v240;
        v150 = (v231 + (((unint64_t)v95 + v227) & v228)) & v240;
        v93(v149, v150, v250);
        *(_QWORD *)((v233 + v149) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v233 + v150) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v94 + v224) = *((_BYTE *)v95 + v224);
        v148 = 2;
        break;
      case 3:
        *(_OWORD *)v94 = *(_OWORD *)v95;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v229 + 32))(((unint64_t)v94 + v227) & v228, ((unint64_t)v95 + v227) & v228, v230);
        v151 = (v231 + (((unint64_t)v94 + v227) & v228)) & v240;
        v152 = (v231 + (((unint64_t)v95 + v227) & v228)) & v240;
        v93(v151, v152, v250);
        *(_QWORD *)((v233 + v151) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v233 + v152) & 0xFFFFFFFFFFFFF8);
        v148 = 3;
        break;
      default:
        if (v244 <= 3)
          v96 = v244;
        else
          v96 = 4;
        __asm { BR              X12 }
        return result;
    }
    v60 = v251;
    v70 = v254;
    v97 = v246;
    *((_BYTE *)v94 + v244) = v148;
    v52 = v237;
    *((_BYTE *)v90 + v237) = 1;
    v59 = v247;
    goto LABEL_91;
  }
  *v90 = *v91;
  *((_BYTE *)v90 + v52) = 0;
LABEL_90:
  v59 = v247;
  v97 = v246;
LABEL_91:
  v98 = v52 + 8;
  v99 = (_OWORD *)(((unint64_t)v90 + v52 + 8) & 0xFFFFFFFFFFFFFFF8);
  v100 = (_OWORD *)(((unint64_t)v91 + v52 + 8) & 0xFFFFFFFFFFFFFFF8);
  *v99 = *v100;
  v37 = v97 + 16;
  v101 = (void *)(((unint64_t)v99 + v97 + 16) & v70);
  v102 = (const void *)(((unint64_t)v100 + v97 + 16) & v70);
  if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v243))
  {
    if (v59)
      v103 = v60;
    else
      v103 = v60 + 1;
    memcpy(v101, v102, v103);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v232 + 32))(v101, v102, v243);
    __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v243);
    if (v59)
      v103 = v60;
    else
      v103 = v60 + 1;
  }
  v31 = v252;
  v62 = a3;
  *(_QWORD *)(((unint64_t)v101 + v103 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v102 + v103 + 7) & 0xFFFFFFFFFFFFF8);
  v61 = v254;
  v29 = a2;
  v104 = v249;
LABEL_206:
  v161 = (v37 + ((v98 + v104) & 0xFFFFFFFFFFFFFFF8)) & v61;
  v162 = 7;
  if (!v59)
    v162 = 8;
  v163 = (v162 + v60 + v161) & 0xFFFFFFFFFFFFFFF8;
  v164 = *(_QWORD *)(*(_QWORD *)(v62 + 16) - 8);
  v165 = *(unsigned __int8 *)(v164 + 80);
  v166 = v58 + v165 + v163 + 8;
  v167 = ((unint64_t)v31 + v166) & ~v165;
  v168 = ((unint64_t)v29 + v166) & ~v165;
  (*(void (**)(unint64_t, uint64_t))(v164 + 40))(v167, v168);
  v169 = *(_QWORD *)(v164 + 64);
  v170 = sub_2212F33F0();
  v171 = *(_QWORD *)(v170 - 8);
  v172 = *(_DWORD *)(v171 + 80) & 0xF8 | 7;
  v173 = (_QWORD *)((v169 + v172 + v167) & ~v172);
  v174 = (_QWORD *)((v169 + v172 + v168) & ~v172);
  if (*(_QWORD *)(v171 + 64) <= 8uLL)
    v175 = 8;
  else
    v175 = *(_QWORD *)(v171 + 64);
  if (v173 != v174)
  {
    v176 = v170;
    v177 = *((unsigned __int8 *)v173 + v175);
    if (v177 >= 2)
    {
      if (v175 <= 3)
        v178 = v175;
      else
        v178 = 4;
      __asm { BR              X12 }
    }
    if (v177 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v171 + 8))(v173, v170);
    else
      swift_release();
    v179 = *((unsigned __int8 *)v174 + v175);
    if (v179 >= 2)
    {
      if (v175 <= 3)
        v180 = v175;
      else
        v180 = 4;
      __asm { BR              X12 }
    }
    if (v179 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v171 + 32))(v173, v174, v176);
      v181 = 1;
    }
    else
    {
      v181 = 0;
      *v173 = *v174;
    }
    *((_BYTE *)v173 + v175) = v181;
  }
  v182 = sub_2212F330C();
  v183 = *(_QWORD *)(v182 - 8);
  v184 = *(_DWORD *)(v183 + 80) & 0xF8 | 7;
  v185 = v175 + v184 + 1;
  v186 = (_QWORD *)(((unint64_t)v173 + v185) & ~v184);
  v187 = (_QWORD *)(((unint64_t)v174 + v185) & ~v184);
  if (*(_QWORD *)(v183 + 64) <= 8uLL)
    v188 = 8;
  else
    v188 = *(_QWORD *)(v183 + 64);
  if (v186 != v187)
  {
    v189 = v182;
    v190 = *((unsigned __int8 *)v186 + v188);
    if (v190 >= 2)
    {
      if (v188 <= 3)
        v191 = v188;
      else
        v191 = 4;
      __asm { BR              X12 }
    }
    if (v190 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v183 + 8))(v186, v182);
    else
      swift_release();
    v192 = *((unsigned __int8 *)v187 + v188);
    if (v192 >= 2)
    {
      if (v188 <= 3)
        v193 = v188;
      else
        v193 = 4;
      __asm { BR              X12 }
    }
    if (v192 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v183 + 32))(v186, v187, v189);
      v194 = 1;
    }
    else
    {
      v194 = 0;
      *v186 = *v187;
    }
    *((_BYTE *)v186 + v188) = v194;
  }
  v195 = v188 + 1;
  v196 = (char *)v186 + v188 + 1;
  v197 = (char *)v187 + v195;
  v198 = (unint64_t)(v196 + 7) & 0xFFFFFFFFFFFFFFF8;
  v199 = (unint64_t)(v197 + 7) & 0xFFFFFFFFFFFFFFF8;
  v200 = *(_QWORD *)v199;
  LOBYTE(v199) = *(_BYTE *)(v199 + 8);
  v201 = *(_QWORD *)v198;
  v202 = *(_BYTE *)(v198 + 8);
  *(_QWORD *)v198 = v200;
  *(_BYTE *)(v198 + 8) = v199;
  sub_221017894(v201, v202);
  v203 = (unint64_t)(v196 + 23) & 0xFFFFFFFFFFFFFFF8;
  v204 = (unint64_t)(v197 + 23) & 0xFFFFFFFFFFFFFFF8;
  v205 = *(_QWORD *)v204;
  LOBYTE(v204) = *(_BYTE *)(v204 + 8);
  v206 = *(_QWORD *)v203;
  v207 = *(_BYTE *)(v203 + 8);
  *(_QWORD *)v203 = v205;
  *(_BYTE *)(v203 + 8) = v204;
  sub_221017894(v206, v207);
  v208 = (unint64_t)(v196 + 39) & 0xFFFFFFFFFFFFFFF8;
  v209 = (unint64_t)(v197 + 39) & 0xFFFFFFFFFFFFFFF8;
  v210 = *(_QWORD *)v209;
  LOBYTE(v209) = *(_BYTE *)(v209 + 8);
  v211 = *(_QWORD *)v208;
  v212 = *(_BYTE *)(v208 + 8);
  *(_QWORD *)v208 = v210;
  *(_BYTE *)(v208 + 8) = v209;
  sub_221017894(v211, v212);
  return v31;
}

uint64_t sub_2212C84B4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v42;
  unsigned int v43;
  unsigned int EnumTagSinglePayload;
  uint64_t v45;
  int v46;
  uint64_t v47;
  unint64_t v48;

  v4 = *(_QWORD *)(sub_2212F5124() - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_2212F5058() - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v5 | v8 | 7;
  v10 = (v6 + 7 + ((*(_QWORD *)(v7 + 64) + v5 + ((v8 + 16) & ~v8)) & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 8;
  v12 = v10 + 9;
  if (v12 <= v11)
    v12 = v11;
  if (v12 <= 2)
    v12 = 2;
  v13 = v12 + ((((v5 + 16) & ~v5) + v6 + v9) & ~v9);
  if (v13 + 1 > ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v14 = v13 + 1;
  else
    v14 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v14 <= 0x10)
    v15 = 16;
  else
    v15 = v14;
  v45 = sub_2212F29B8();
  v16 = *(_QWORD *)(v45 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  v18 = v17 - 1;
  if (!(_DWORD)v17)
    v18 = 0;
  if (v18 <= 0x7FFFFFFF)
    v19 = 0x7FFFFFFF;
  else
    v19 = v18;
  if (v18 >= 0)
    v20 = 0x7FFFFFFF;
  else
    v20 = v19;
  v46 = v20;
  v21 = v20 - 1;
  v47 = *(_QWORD *)(a3 + 16);
  v22 = *(_QWORD *)(v47 - 8);
  v23 = *(unsigned int *)(v22 + 84);
  if (v23 <= v20 - 1)
    v24 = v20 - 1;
  else
    v24 = *(_DWORD *)(v22 + 84);
  v25 = *(_QWORD *)(sub_2212F33F0() - 8);
  v26 = *(_QWORD *)(v25 + 64);
  if (v26 <= 8)
    v26 = 8;
  v48 = v26;
  v27 = *(_QWORD *)(sub_2212F330C() - 8);
  if (*(_QWORD *)(v27 + 64) <= 8uLL)
    v28 = 8;
  else
    v28 = *(_QWORD *)(v27 + 64);
  if ((_DWORD)v17)
    v29 = 7;
  else
    v29 = 8;
  if (!a2)
    return 0;
  v30 = *(unsigned __int8 *)(v16 + 80);
  v31 = v15 + v9 + 1;
  v32 = (v29 + *(_QWORD *)(v16 + 64) + ((v30 + 16 + ((v15 + 8 + (v31 & ~v9)) & 0xFFFFFFFFFFFFFFF8)) & ~v30)) & 0xFFFFFFFFFFFFFFF8;
  v33 = *(unsigned __int8 *)(v22 + 80);
  v34 = (((v9 | v30) + 32) & ~(v9 | v30)) + v33 + v32 + 8;
  if (v24 < a2)
  {
    v35 = *(_DWORD *)(v25 + 80) & 0xF8 | 7;
    v36 = *(_DWORD *)(v27 + 80) & 0xF8 | 7;
    v37 = ((v28 + ((v48 + v36 + ((*(_QWORD *)(v22 + 64) + v35 + (v34 & ~v33)) & ~v35) + 1) & ~v36) + 40) & 0xFFFFFFFFFFFFFFF8)
        + 9;
    if (v37 < 4)
      v38 = ((a2 - v24 + 255) >> (8 * v37)) + 1;
    else
      v38 = 2;
    if (v38 >= 0x10000)
      v39 = 4;
    else
      v39 = 2;
    if (v38 < 0x100)
      v39 = 1;
    if (v38 >= 2)
      v40 = v39;
    else
      v40 = 0;
    __asm { BR              X1 }
  }
  if (v21 < v23)
    return __swift_getEnumTagSinglePayload((v34 + a1) & ~v33, v23, v47);
  if (v46 == 0x7FFFFFFF)
  {
    v42 = *(_QWORD *)(a1 + 8);
    if (v42 >= 0xFFFFFFFF)
      LODWORD(v42) = -1;
    v43 = v42 + 1;
  }
  else
  {
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v30+ 16+ ((v15+ 8+ ((v31 + ((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + (v9 | v30) + 16) & ~(v9 | v30))) & ~v9)) & 0xFFFFFFFFFFFFFFF8)) & ~v30, v17, v45);
    v43 = EnumTagSinglePayload - 1;
    if (EnumTagSinglePayload < 2)
      v43 = 0;
  }
  if (v43 >= 2)
    return v43 - 1;
  else
    return 0;
}

void sub_2212C885C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  size_t v35;
  unsigned int v36;
  int v37;
  int v38;
  int v39;

  v5 = *(_QWORD *)(sub_2212F5124() - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_2212F5058() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 | v9 | 7;
  v11 = (v7 + 7 + ((*(_QWORD *)(v8 + 64) + v6 + ((v9 + 16) & ~v9)) & ~v6)) & 0xFFFFFFFFFFFFFFF8;
  v12 = v11 + 8;
  v13 = v11 + 9;
  if (v13 <= v12)
    v13 = v12;
  if (v13 <= 2)
    v13 = 2;
  v14 = v13 + ((((v6 + 16) & ~v6) + v7 + v10) & ~v10);
  if (v14 + 1 > ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16)
    v15 = v14 + 1;
  else
    v15 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v15 <= 0x10)
    v16 = 16;
  else
    v16 = v15;
  v17 = *(_QWORD *)(sub_2212F29B8() - 8);
  v18 = *(_DWORD *)(v17 + 84);
  if (v18)
    v19 = v18 - 1;
  else
    v19 = 0;
  if (v19 <= 0x7FFFFFFF)
    v20 = 0x7FFFFFFF;
  else
    v20 = v19;
  if (v19 >= 0)
    v21 = 0x7FFFFFFF;
  else
    v21 = v20;
  v22 = v21 - 1;
  v23 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v23 + 84) <= v22)
    v24 = v22;
  else
    v24 = *(_DWORD *)(v23 + 84);
  v25 = *(_QWORD *)(sub_2212F33F0() - 8);
  if (*(_QWORD *)(v25 + 64) <= 8uLL)
    v26 = 8;
  else
    v26 = *(_QWORD *)(v25 + 64);
  v27 = sub_2212F330C();
  v28 = 0;
  v29 = *(_QWORD *)(v27 - 8);
  if (*(_QWORD *)(v29 + 64) <= 8uLL)
    v30 = 8;
  else
    v30 = *(_QWORD *)(v29 + 64);
  if (v18)
    v32 = *(_QWORD *)(v17 + 64);
  else
    v32 = *(_QWORD *)(v17 + 64) + 1;
  v33 = *(_DWORD *)(v25 + 80) & 0xF8 | 7;
  v34 = *(_DWORD *)(v29 + 80) & 0xF8 | 7;
  v31 = *(unsigned __int8 *)(v17 + 80);
  v35 = ((v30
        + ((v26
          + v34
          + ((*(_QWORD *)(v23 + 64)
            + v33
            + (((((v10 | v31) + 32) & ~(v10 | v31))
              + 8
              + *(unsigned __int8 *)(v23 + 80)
              + ((v32 + ((v31 + 16 + ((v16 + 8 + ((v16 + v10 + 1) & ~v10)) & 0xFFFFFFFFFFFFFFF8)) & ~v31) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))) & ~v33)
          + 1) & ~v34)
        + 40) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  if (v24 < a3)
  {
    if (v35 <= 3)
      v36 = ((a3 - v24 + 255) >> (8 * v35)) + 1;
    else
      v36 = 2;
    if (v36 >= 0x10000)
      v37 = 4;
    else
      v37 = 2;
    if (v36 < 0x100)
      v37 = 1;
    if (v36 >= 2)
      v28 = v37;
    else
      v28 = 0;
  }
  if (v24 < a2)
  {
    v38 = v28;
    if (v35 >= 4)
      v39 = ~v24 + a2;
    else
      v39 = (~(_BYTE)v24 + a2);
    bzero(a1, v35);
    if ((_DWORD)v35 == 1)
      *a1 = v39;
    else
      *(_DWORD *)a1 = v39;
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

void sub_2212C8B58()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x2212C8CDCLL);
}

void sub_2212C8B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_DWORD *)(v7 + v8) = 0;
  if (a7)
    JUMPOUT(0x2212C8B68);
  JUMPOUT(0x2212C8CDCLL);
}

void sub_2212C8BE8()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x2212C8CDCLL);
}

void sub_2212C8BF0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x2212C8CDCLL);
}

uint64_t sub_2212C8BF8@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  size_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;

  *(_WORD *)((char *)v8 + v10) = 0;
  if (!(_DWORD)a1)
    goto LABEL_8;
  if (v13 >= v9)
  {
    v3 = v5 + (a2 & 0xFFFFFFF8);
    if (v13 >= a1 && (int)a1 + 1 <= v12)
      JUMPOUT(0x2212C8C04);
    if ((_DWORD)v3)
    {
      v4 = a1 - v12;
      bzero(v8, v3);
      *v8 = v4;
    }
LABEL_8:
    JUMPOUT(0x2212C8CDCLL);
  }
  return __swift_storeEnumTagSinglePayload(((unint64_t)v8 + v6) & v7, a1, v9, v11);
}

void sub_2212C8CB4()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x2212C8CDCLL);
}

void sub_2212C8CFC()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x2212C8CDCLL);
}

void sub_2212C8D04()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x2212C8CDCLL);
}

void sub_2212C8D14()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x2212C8CDCLL);
}

uint64_t type metadata accessor for RegularProductView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RegularProductView);
}

uint64_t sub_2212C8D2C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_2212C8D60()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;

  v0 = OUTLINED_FUNCTION_11_55();
  sub_221017C08(v0, v1);
  OUTLINED_FUNCTION_11_55();
  sub_22104359C();
  v2 = OUTLINED_FUNCTION_11_55();
  sub_221017894(v2, v3);
  OUTLINED_FUNCTION_17_0();
}

void sub_2212C8DA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657C28);
  v3 = type metadata accessor for ProductViewIconWrapper(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v2);
  MEMORY[0x22766BAC4](&unk_221304C28, v3);
  OUTLINED_FUNCTION_12_11();
}

uint64_t sub_2212C8E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _QWORD *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t);
  _BYTE v23[96];

  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657D10);
  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255668328);
  OUTLINED_FUNCTION_0_8();
  v5 = OUTLINED_FUNCTION_10_10();
  OUTLINED_FUNCTION_10_45(&qword_255657C48);
  v6 = sub_2212F3108();
  *(_QWORD *)(v4 - 192) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v23[-v10];
  sub_2212C91F4(v3, v4 - 120);
  v12 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 - 120), *(_QWORD *)(v4 - 96));
  v13 = MEMORY[0x24BDAC7A8](v12);
  (*(void (**)(_BYTE *, __n128))(v15 + 16))(&v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], v13);
  v16 = sub_2212F4A4C();
  v17 = sub_2212C9064(v16, v1, v2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4 - 120);
  *(_QWORD *)(v4 - 160) = v1;
  *(_QWORD *)(v4 - 152) = v2;
  *(_QWORD *)(v4 - 144) = v0;
  ((void (*)(uint64_t (*)@<X0>(uint64_t@<X8>), uint64_t))v17)(sub_2212CAF54, v4 - 176);
  swift_release();
  sub_221024548(&qword_255657C50, &qword_255657C28);
  v19 = v18;
  v20 = MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v5);
  *(_QWORD *)(v4 - 136) = v19;
  *(_QWORD *)(v4 - 128) = v20;
  MEMORY[0x22766BAC4](MEMORY[0x24BDEC550], v6, v4 - 136);
  sub_221088D68((uint64_t)v8, v6, (uint64_t)v11);
  v21 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v4 - 192) + 8);
  v21(v8, v6);
  sub_221087210((uint64_t)v11, v6, *(_QWORD *)(v4 - 184));
  return ((uint64_t (*)(_BYTE *, uint64_t))v21)(v11, v6);
}

void (*sub_2212C9064(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  return sub_2212CB544;
}

void sub_2212C90C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v12[3];

  v12[2] = a3;
  v12[0] = type metadata accessor for ProductViewIconWrapper(255, a4, a5, a4);
  v12[1] = MEMORY[0x22766BAC4](&unk_221304C28, v12[0]);
  MEMORY[0x22766BA58](255, v12, MEMORY[0x24BDF3948], 0);
  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657D10);
  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255668328);
  swift_getTupleTypeMetadata2();
  v9 = sub_2212F4A94();
  v10 = sub_221052AC4();
  v11 = MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v9);
  sub_221050BB0(a1, a2, MEMORY[0x24BDF5050], v9, v10, v11, a6);
}

unint64_t sub_2212C91F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  unint64_t result;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_2212F330C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221043C3C();
  v10 = sub_2212F3300();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0
    && (v11 = v3 + *(int *)(a1 + 56),
        v12 = *(_QWORD *)v11,
        v13 = *(_BYTE *)(v11 + 8),
        sub_221017C08(*(_QWORD *)v11, v13),
        sub_22104359C(),
        v15 = v14,
        sub_221017894(v12, v13),
        (v15 & 1) != 0))
  {
    v16 = sub_2212F38F4();
    *(_QWORD *)(a2 + 24) = MEMORY[0x24BDEBD58];
    result = sub_221052A58();
    *(_QWORD *)(a2 + 32) = result;
    v18 = 0x4010000000000000;
  }
  else
  {
    v16 = sub_2212F37F8();
    *(_QWORD *)(a2 + 24) = MEMORY[0x24BDEBB10];
    result = sub_221052944();
    *(_QWORD *)(a2 + 32) = result;
    v18 = 0x4028000000000000;
  }
  *(_QWORD *)a2 = v16;
  *(_QWORD *)(a2 + 8) = v18;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

uint64_t sub_2212C9324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t OpaqueTypeConformance2;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  char v71;
  uint64_t KeyPath;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t (*v79)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  unint64_t v111;
  _QWORD v112[2];
  _QWORD v113[2];
  _QWORD v114[2];
  uint64_t v115;
  uint64_t v116;
  _OWORD v117[4];
  uint64_t v118;
  __int128 v119;
  __int16 v120;

  v101 = a4;
  v104 = type metadata accessor for ProductViewWrapperFrameModifier();
  MEMORY[0x24BDAC7A8](v104);
  v105 = (uint64_t *)((char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668330);
  MEMORY[0x24BDAC7A8](v8);
  v97 = (uint64_t *)((char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668338);
  MEMORY[0x24BDAC7A8](v96);
  v100 = (uint64_t)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668328);
  MEMORY[0x24BDAC7A8](v102);
  v106 = (uint64_t)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v103 = (uint64_t)&v81 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657C88);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_2212F33F0();
  v84 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ProductViewIconWrapper(0, a2, a3, v20);
  v83 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v81 - v23;
  v25 = MEMORY[0x22766BAC4](&unk_221304C28, v21, v22);
  *(_QWORD *)&v117[0] = v21;
  *((_QWORD *)&v117[0] + 1) = v25;
  v85 = v25;
  v26 = MEMORY[0x22766BA58](0, v117, MEMORY[0x24BDF3948], 0);
  v90 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v87 = (char *)&v81 - v27;
  v28 = sub_2212F3348();
  v92 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v91 = (char *)&v81 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657D10);
  v86 = v28;
  v88 = sub_2212F3348();
  v93 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v95 = (char *)&v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v89 = (char *)&v81 - v32;
  MEMORY[0x24BDAC7A8](v33);
  v94 = (uint64_t)&v81 - v34;
  v107 = a2;
  v108 = a3;
  v109 = a1;
  v35 = a2;
  v99 = a3;
  sub_2210DD8B4((uint64_t (*)(uint64_t))sub_2212CAF98, a2, a3, (uint64_t)v24);
  v98 = a1;
  sub_221014FC0(a1, (uint64_t)v16, &qword_255657C88);
  v36 = type metadata accessor for ProductViewConfiguration(0);
  LODWORD(a3) = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v36);
  sub_221014F5C((uint64_t)v16, &qword_255657C88);
  if ((_DWORD)a3 == 1)
  {
    sub_2212F33E4();
  }
  else
  {
    *(_QWORD *)&v117[0] = MEMORY[0x24BEE4AF8];
    sub_221023FE4(&qword_255657D38, (void (*)(uint64_t))MEMORY[0x24BDED930]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255657D40);
    sub_221024548(&qword_255657D48, &qword_255657D40);
    v35 = a2;
    sub_2212F58E0();
  }
  v37 = v17;
  v38 = v87;
  v39 = v85;
  sub_2212F4524();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v19, v37);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v24, v21);
  v82 = v35;
  v40 = v99;
  v42 = type metadata accessor for RegularProductView(0, v35, v99, v41);
  v43 = v98;
  v44 = v98 + *(int *)(v42 + 52);
  v45 = *(_QWORD *)v44;
  v46 = *(_BYTE *)(v44 + 8);
  sub_221017C08(*(_QWORD *)v44, v46);
  sub_22104359C();
  v48 = v47;
  sub_221017894(v45, v46);
  v49 = 0x4056000000000000;
  if ((v48 & 1) != 0)
    v49 = 0x405A400000000000;
  v117[0] = xmmword_2212FD660;
  v117[1] = xmmword_2212FD660;
  v117[2] = xmmword_2212FD660;
  v117[3] = xmmword_22131A600;
  v118 = v49;
  v119 = xmmword_22131A610;
  v120 = 0;
  v115 = v21;
  v116 = v39;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v51 = sub_221052CB4(v26, OpaqueTypeConformance2);
  v52 = v91;
  sub_2210C1E00((uint64_t)v117, v51, v53, v26, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v38, v26);
  v54 = sub_221052360();
  v114[0] = OpaqueTypeConformance2;
  v114[1] = v54;
  v55 = v40;
  v56 = MEMORY[0x24BDED308];
  v57 = v86;
  v58 = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v86, v114);
  v59 = (uint64_t)v89;
  sub_2212F4248();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v52, v57);
  sub_221024548(&qword_255657D08, &qword_255657D10);
  v113[0] = v58;
  v113[1] = v60;
  v61 = v88;
  v91 = (char *)MEMORY[0x22766BAC4](v56, v88, v113);
  v62 = v94;
  sub_221088D68(v59, v61, v94);
  v63 = v93;
  v92 = *(_QWORD *)(v93 + 8);
  ((void (*)(uint64_t, uint64_t))v92)(v59, v61);
  v64 = sub_2212F38F4();
  v65 = (uint64_t)v97;
  *v97 = v64;
  *(_QWORD *)(v65 + 8) = 0;
  *(_BYTE *)(v65 + 16) = 0;
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668340);
  sub_2212C9D20(v43, v82, v55, (char *)(v65 + *(int *)(v66 + 44)));
  sub_221052544();
  v67 = sub_2212F390C();
  v68 = v100;
  sub_221014FC0(v65, v100, &qword_255668330);
  v69 = (uint64_t *)(v68 + *(int *)(v96 + 36));
  *v69 = v67;
  v69[1] = (uint64_t)sub_221051FE0;
  v69[2] = 0;
  sub_221014F5C(v65, &qword_255668330);
  v70 = *(_QWORD *)v44;
  LOBYTE(v58) = *(_BYTE *)(v44 + 8);
  sub_221017C08(*(_QWORD *)v44, v58);
  sub_22104359C();
  LOBYTE(v65) = v71;
  sub_221017894(v70, v58);
  KeyPath = swift_getKeyPath();
  v73 = (uint64_t)v105;
  *v105 = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
  swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v73 + *(int *)(v104 + 20)) = v65 & 1;
  v74 = v106;
  sub_221014FC0(v68, v106, &qword_255668338);
  v75 = v102;
  sub_221015318(v73, v74 + *(int *)(v102 + 36), (uint64_t (*)(_QWORD))type metadata accessor for ProductViewWrapperFrameModifier);
  sub_221014F5C(v68, &qword_255668338);
  v76 = v103;
  sub_221015090(v74, v103, &qword_255668328);
  v77 = v95;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v95, v62, v61);
  v115 = (uint64_t)v77;
  sub_221014FC0(v76, v74, &qword_255668328);
  v116 = v74;
  v112[0] = v61;
  v112[1] = v75;
  v110 = v91;
  v111 = sub_2212CB1BC();
  sub_22122F0B4((uint64_t)&v115, 2, (uint64_t)v112);
  sub_221014F5C(v76, &qword_255668328);
  v78 = v62;
  v79 = (uint64_t (*)(char *, uint64_t))v92;
  ((void (*)(uint64_t, uint64_t))v92)(v78, v61);
  sub_221014F5C(v74, &qword_255668328);
  return v79(v77, v61);
}

uint64_t sub_2212C9C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RegularProductView(0, v9, v10, v11);
  sub_221088D68(a1 + *(int *)(v12 + 36), a2, (uint64_t)v8);
  sub_221087210((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_2212C9D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t KeyPath;
  uint64_t *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  double v73;
  double *v74;
  uint64_t v75;
  uint64_t v76;
  int EnumTagSinglePayload;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  double *v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  _QWORD v128[4];

  v126 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657C88);
  MEMORY[0x24BDAC7A8](v7);
  v122 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657D50);
  MEMORY[0x24BDAC7A8](v9);
  v123 = (uint64_t)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657D58);
  MEMORY[0x24BDAC7A8](v11);
  v125 = (uint64_t)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v121 = (uint64_t *)((char *)&v94 - v14);
  MEMORY[0x24BDAC7A8](v15);
  v124 = (uint64_t)&v94 - v16;
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668368);
  MEMORY[0x24BDAC7A8](v117);
  v119 = (double *)((char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v101 = sub_2212F4038();
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v99 = (char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v98 = (char *)&v94 - v20;
  v95 = type metadata accessor for ProductViewAXTypeStyleButtonSpacer();
  MEMORY[0x24BDAC7A8](v95);
  v97 = (uint64_t *)((char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657C38);
  MEMORY[0x24BDAC7A8](v116);
  v96 = (uint64_t)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v102 = (uint64_t)&v94 - v24;
  v25 = sub_2212F330C();
  v113 = *(_QWORD *)(v25 - 8);
  v114 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v112 = (char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668370);
  MEMORY[0x24BDAC7A8](v27);
  v120 = (uint64_t)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v115 = (char *)&v94 - v30;
  v111 = sub_2212F3D2C();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v109 = (char *)&v94 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668378);
  MEMORY[0x24BDAC7A8](v105);
  v33 = (uint64_t *)((char *)&v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668380);
  MEMORY[0x24BDAC7A8](v106);
  v35 = (char *)&v94 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668388);
  MEMORY[0x24BDAC7A8](v107);
  v37 = (char *)&v94 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668390);
  v108 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v118 = (char *)&v94 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v104 = (char *)&v94 - v41;
  MEMORY[0x24BDAC7A8](v42);
  v127 = (char *)&v94 - v43;
  v44 = a3;
  v103 = type metadata accessor for RegularProductView(0, a2, a3, v45);
  sub_2212CA7CC(v103, v128);
  v46 = __swift_project_boxed_opaque_existential_1(v128, v128[3]);
  v47 = MEMORY[0x24BDAC7A8](v46);
  (*(void (**)(char *, __n128))(v49 + 16))((char *)&v94 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0), v47);
  v50 = sub_2212F4A4C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v128);
  *v33 = v50;
  v51 = a1;
  sub_2212CA9B4(a1, a2, v44, (uint64_t)v33 + *(int *)(v105 + 44));
  KeyPath = swift_getKeyPath();
  sub_221014FC0((uint64_t)v33, (uint64_t)v35, &qword_255668378);
  v53 = (uint64_t *)&v35[*(int *)(v106 + 36)];
  *v53 = KeyPath;
  v53[1] = 0;
  sub_221014F5C((uint64_t)v33, &qword_255668378);
  v54 = swift_getKeyPath();
  sub_221014FC0((uint64_t)v35, (uint64_t)v37, &qword_255668380);
  v55 = &v37[*(int *)(v107 + 36)];
  *(_QWORD *)v55 = v54;
  v55[8] = 0;
  sub_221014F5C((uint64_t)v35, &qword_255668380);
  v56 = v109;
  sub_2212F3D14();
  sub_2212CB2D4();
  v57 = v104;
  v58 = v103;
  sub_2212F4308();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v56, v111);
  v59 = (uint64_t)v37;
  v60 = v51;
  sub_221014F5C(v59, &qword_255668388);
  v61 = v108;
  v62 = v38;
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v127, v57, v38);
  v63 = v112;
  sub_221043C3C();
  LOBYTE(v56) = sub_2212F3300();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v63, v114);
  if ((v56 & 1) != 0)
  {
    v64 = swift_getKeyPath();
    v65 = (uint64_t)v97;
    *v97 = v64;
    *(_BYTE *)(v65 + 8) = 0;
    *(_QWORD *)(v65 + 16) = swift_getKeyPath();
    *(_BYTE *)(v65 + 24) = 0;
    v66 = v100;
    v67 = v98;
    v68 = v101;
    (*(void (**)(char *, _QWORD, uint64_t))(v100 + 104))(v98, *MEMORY[0x24BDF18D8], v101);
    v128[0] = 0x4024000000000000;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v99, v67, v68);
    sub_221008548();
    sub_2212F2EC8();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
    v69 = v96;
    sub_221014EB4(v65, v96, (uint64_t (*)(_QWORD))type metadata accessor for ProductViewAXTypeStyleButtonSpacer);
    *(_QWORD *)(v69 + *(int *)(v116 + 36)) = 0xBFF0000000000000;
    sub_221011A28(v65, (uint64_t (*)(_QWORD))type metadata accessor for ProductViewAXTypeStyleButtonSpacer);
    v70 = v102;
    sub_221015090(v69, v102, &qword_255657C38);
    sub_221014FC0(v70, (uint64_t)v119, &qword_255657C38);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2556683C0);
    sub_221052804();
    sub_2212CB478();
    v71 = v115;
    sub_2212F3A14();
    sub_221014F5C(v70, &qword_255657C38);
    v72 = (uint64_t)v71;
  }
  else
  {
    v73 = sub_2212CAE40(v58);
    v74 = v119;
    *v119 = v73;
    *((_BYTE *)v74 + 8) = 0;
    v74[2] = -1.0;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2556683C0);
    sub_221052804();
    sub_2212CB478();
    v72 = (uint64_t)v115;
    sub_2212F3A14();
  }
  v75 = v122;
  sub_221014FC0(v60, v122, &qword_255657C88);
  v76 = type metadata accessor for ProductViewConfiguration(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v75, 1, v76);
  v78 = v123;
  if (EnumTagSinglePayload == 1)
  {
    sub_221014F5C(v75, &qword_255657C88);
    v79 = 1;
  }
  else
  {
    sub_221014EB4(v75 + *(int *)(v76 + 24), v123, type metadata accessor for ProductViewButtonConfiguration);
    sub_221011A28(v75, type metadata accessor for ProductViewConfiguration);
    v79 = 0;
  }
  v80 = type metadata accessor for ProductViewButtonConfiguration(0);
  __swift_storeEnumTagSinglePayload(v78, v79, 1, v80);
  v81 = v121;
  sub_221130FBC(v78, v121);
  v82 = v124;
  sub_221015090((uint64_t)v81, v124, &qword_255657D58);
  v83 = v61;
  v84 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v85 = v118;
  v86 = v127;
  v84(v118, v127, v62);
  v87 = v120;
  sub_221014FC0(v72, v120, &qword_255668370);
  v88 = v72;
  v89 = v125;
  sub_221014FC0(v82, v125, &qword_255657D58);
  v90 = v126;
  v84(v126, v85, v62);
  v91 = __swift_instantiateConcreteTypeFromMangledName(qword_2556683D0);
  sub_221014FC0(v87, (uint64_t)&v90[*(int *)(v91 + 48)], &qword_255668370);
  sub_221014FC0(v89, (uint64_t)&v90[*(int *)(v91 + 64)], &qword_255657D58);
  sub_221014F5C(v82, &qword_255657D58);
  sub_221014F5C(v88, &qword_255668370);
  v92 = *(void (**)(char *, uint64_t))(v83 + 8);
  v92(v86, v62);
  sub_221014F5C(v89, &qword_255657D58);
  sub_221014F5C(v87, &qword_255668370);
  return ((uint64_t (*)(char *, uint64_t))v92)(v85, v62);
}

unint64_t sub_2212CA7CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  int EnumTagSinglePayload;
  uint64_t v21;
  uint64_t v22;
  unint64_t result;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657C88);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2212F330C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221043C3C();
  v13 = sub_2212F3300();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0
    && (v14 = v3 + *(int *)(a1 + 56),
        v15 = *(_QWORD *)v14,
        v16 = *(_BYTE *)(v14 + 8),
        sub_221017C08(*(_QWORD *)v14, v16),
        sub_22104359C(),
        v18 = v17,
        sub_221017894(v15, v16),
        (v18 & 1) != 0))
  {
    sub_221014FC0(v3, (uint64_t)v8, &qword_255657C88);
    v19 = type metadata accessor for ProductViewConfiguration(0);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v19);
    sub_221014F5C((uint64_t)v8, &qword_255657C88);
    v21 = sub_2212F38F4();
    if (EnumTagSinglePayload == 1)
      v22 = 0x4010000000000000;
    else
      v22 = 0;
    a2[3] = MEMORY[0x24BDEBD58];
    result = sub_221052A58();
    a2[4] = result;
    *a2 = v21;
    a2[1] = v22;
    v24 = a2 + 2;
  }
  else
  {
    v25 = sub_2212F38F4();
    a2[3] = &type metadata for TotalLineLimitLayout;
    a2[4] = sub_221052A0C();
    result = swift_allocObject();
    *a2 = result;
    *(_QWORD *)(result + 16) = 3;
    *(_QWORD *)(result + 24) = v25;
    *(_QWORD *)(result + 32) = 0x4000000000000000;
    *(_QWORD *)(result + 40) = 0;
    *(_BYTE *)(result + 48) = 0;
    v24 = (_BYTE *)(result + 64);
    *(_QWORD *)(result + 56) = 0x4010000000000000;
  }
  *v24 = 0;
  return result;
}

void sub_2212CA9B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[89];
  char v55;

  v49 = a2;
  v50 = a3;
  v52 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657D78);
  MEMORY[0x24BDAC7A8](v5);
  v53 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v46 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255657C88);
  MEMORY[0x24BDAC7A8](v10);
  v48 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v46 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v46 - v16);
  v51 = type metadata accessor for ProductViewText(0);
  MEMORY[0x24BDAC7A8](v51);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v47 = (uint64_t)&v46 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v46 = (uint64_t)&v46 - v23;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v46 - v25;
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v46 - v28;
  sub_221014FC0(a1, (uint64_t)v17, &qword_255657C88);
  v30 = type metadata accessor for ProductViewConfiguration(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v30) == 1)
  {
    sub_221014F5C((uint64_t)v17, &qword_255657C88);
    v31 = 0;
    v32 = 0;
  }
  else
  {
    v31 = *v17;
    v32 = v17[1];
    swift_bridgeObjectRetain();
    sub_221011A28((uint64_t)v17, type metadata accessor for ProductViewConfiguration);
  }
  memset(v54, 0, sizeof(v54));
  v33 = 1;
  v55 = 1;
  sub_22110A34C(v31, v32, 0, 0, 0, (uint64_t)v54, 0, 0, (uint64_t)v26);
  sub_221015318((uint64_t)v26, (uint64_t)v29, type metadata accessor for ProductViewText);
  type metadata accessor for RegularProductView(0, v49, v50, v34);
  sub_2212C8D60();
  if ((v35 & 1) != 0)
  {
    sub_221014FC0(a1, (uint64_t)v14, &qword_255657C88);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v30) == 1)
    {
      sub_221014F5C((uint64_t)v14, &qword_255657C88);
    }
    else
    {
      v36 = *((_QWORD *)v14 + 2);
      v37 = *((_QWORD *)v14 + 3);
      swift_bridgeObjectRetain();
      sub_221011A28((uint64_t)v14, type metadata accessor for ProductViewConfiguration);
      LOBYTE(v36) = sub_2212251F8(v36, v37);
      swift_bridgeObjectRelease();
      if ((v36 & 1) != 0)
        goto LABEL_12;
    }
    v38 = v48;
    sub_221014FC0(a1, v48, &qword_255657C88);
    if (__swift_getEnumTagSinglePayload(v38, 1, v30) == 1)
    {
      sub_221014F5C(v38, &qword_255657C88);
      v39 = 0;
      v40 = 0;
    }
    else
    {
      v39 = *(_QWORD *)(v38 + 16);
      v40 = *(_QWORD *)(v38 + 24);
      swift_bridgeObjectRetain();
      sub_221011A28(v38, type metadata accessor for ProductViewConfiguration);
    }
    v41 = v47;
    sub_22110A34C(v39, v40, 1, 0, 0, (uint64_t)v54, 0, 0, v47);
    v42 = v46;
    sub_221015318(v41, v46, type metadata accessor for ProductViewText);
    sub_221015318(v42, (uint64_t)v9, type metadata accessor for ProductViewText);
    v33 = 0;
  }
LABEL_12:
  __swift_storeEnumTagSinglePayload((uint64_t)v9, v33, 1, v51);
  sub_221014EB4((uint64_t)v29, (uint64_t)v19, type metadata accessor for ProductViewText);
  v43 = v53;
  sub_221014FC0((uint64_t)v9, v53, &qword_255657D78);
  v44 = v52;
  sub_221014EB4((uint64_t)v19, v52, type metadata accessor for ProductViewText);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_255659720);
  sub_221014FC0(v43, v44 + *(int *)(v45 + 48), &qword_255657D78);
  sub_221014F5C((uint64_t)v9, &qword_255657D78);
  sub_221011A28((uint64_t)v29, type metadata accessor for ProductViewText);
  sub_221014F5C(v43, &qword_255657D78);
  sub_221011A28((uint64_t)v19, type metadata accessor for ProductViewText);
}

double sub_2212CAE40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;

  v2 = v1;
  v4 = sub_2212F330C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_221043C3C();
  v8 = sub_2212F3300();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0
    || (v9 = v2 + *(int *)(a1 + 56),
        v10 = *(_QWORD *)v9,
        v11 = *(_BYTE *)(v9 + 8),
        sub_221017C08(*(_QWORD *)v9, v11),
        sub_22104359C(),
        v13 = v12,
        sub_221017894(v10, v11),
        (v13 & 1) == 0))
  {
    v14 = v2 + *(int *)(a1 + 52);
    v15 = *(_QWORD *)v14;
    v16 = *(_BYTE *)(v14 + 8);
    sub_221017C08(*(_QWORD *)v14, v16);
    sub_22104359C();
    sub_221017894(v15, v16);
  }
  return 4.0;
}

uint64_t sub_2212CAF54@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_2212C9324(v1[4], v1[2], v1[3], a1);
}

uint64_t type metadata accessor for ProductViewWrapperFrameModifier()
{
  uint64_t result;

  result = qword_255668430;
  if (!qword_255668430)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2212CAF98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2212C9C74(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

void sub_2212CAFA4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;

  v5 = sub_2212F330C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LayoutMetrics(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668468);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ProductViewWrapperFrameModifier();
  v16 = 0x4056000000000000;
  if (*(_BYTE *)(v2 + *(int *)(v15 + 20)))
    v16 = 0x405A400000000000;
  sub_221007C68(0, 1, 0, 1, 0, 1, 0x4056000000000000, 0, (uint64_t)v11, v16, 0, 0x405A400000000000, 0, v25, 1);
  sub_221043C3C();
  v17 = sub_2212F3300();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v18 = sub_2212F4A10();
  v20 = v19;
  v21 = (uint64_t)&v14[*(int *)(v12 + 36)];
  sub_221014EB4((uint64_t)v11, v21, type metadata accessor for LayoutMetrics);
  v22 = type metadata accessor for LayoutMetricsModifier(0);
  *(_BYTE *)(v21 + *(int *)(v22 + 20)) = (v17 & 1) == 0;
  v23 = (uint64_t *)(v21 + *(int *)(v22 + 24));
  *v23 = v18;
  v23[1] = v20;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668470);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v14, a1, v24);
  sub_221011A28((uint64_t)v11, type metadata accessor for LayoutMetrics);
  sub_221015090((uint64_t)v14, a2, &qword_255668468);
}

unint64_t sub_2212CB1BC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255668348;
  if (!qword_255668348)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255668328);
    v2 = sub_2212CB240();
    sub_221023FE4(&qword_255668360, (void (*)(uint64_t))type metadata accessor for ProductViewWrapperFrameModifier);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255668348);
  }
  return result;
}

unint64_t sub_2212CB240()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255668350;
  if (!qword_255668350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255668338);
    sub_221024548(&qword_255668358, &qword_255668330);
    v3[0] = v2;
    v3[1] = sub_2210527B4();
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_255668350);
  }
  return result;
}

unint64_t sub_2212CB2D4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_255668398;
  if (!qword_255668398)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255668388);
    v2 = sub_2212CB358();
    sub_221024548(&qword_255657CE0, &qword_255657CE8);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_255668398);
  }
  return result;
}

unint64_t sub_2212CB358()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_2556683A0;
  if (!qword_2556683A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255668380);
    v2 = sub_2212CB3DC();
    sub_221024548(&qword_255657CD0, &qword_255657CD8);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v4);
    atomic_store(result, (unint64_t *)&qword_2556683A0);
  }
  return result;
}

unint64_t sub_2212CB3DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_2556683A8;
  if (!qword_2556683A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255668378);
    sub_221024548(&qword_255657C50, &qword_255657C28);
    v3 = v2;
    sub_221024548(&qword_2556683B0, &qword_2556683B8);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDEC550], v1, v5);
    atomic_store(result, (unint64_t *)&qword_2556683A8);
  }
  return result;
}

unint64_t sub_2212CB478()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2556683C8;
  if (!qword_2556683C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556683C0);
    sub_221024548(&qword_255657D08, &qword_255657D10);
    v3[0] = MEMORY[0x24BDF4610];
    v3[1] = v2;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2556683C8);
  }
  return result;
}

uint64_t sub_2212CB510()
{
  return swift_deallocObject();
}

uint64_t sub_2212CB520()
{
  swift_release();
  return swift_deallocObject();
}

void sub_2212CB544(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  sub_2212C90C8(a1, a2, v3[4], v3[2], v3[3], a3);
}

_QWORD *sub_2212CB550(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2212F330C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_2212CB628(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = sub_2212F330C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *sub_2212CB68C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2212F330C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_2212CB738(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_221014F5C((uint64_t)a1, &qword_255656570);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2212F330C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_2212CB7FC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2212F330C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_2212CB8A4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_221014F5C((uint64_t)a1, &qword_255656570);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255656570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2212F330C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2212CB964()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2212CB970(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_DWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255656F88) - 8) + 84) == a2)
  {
    v2 = OUTLINED_FUNCTION_11_55();
    __swift_getEnumTagSinglePayload(v2, v3, v4);
  }
  else
  {
    OUTLINED_FUNCTION_17_0();
  }
}

uint64_t sub_2212CB9F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212CB9FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255656F88);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

void sub_2212CBA74()
{
  unint64_t v0;

  sub_22105009C(319, (unint64_t *)&qword_255657000, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2212CBAFC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *a1;
  v2 = a1[1];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657C28);
  v4 = type metadata accessor for ProductViewIconWrapper(255, v1, v2, v3);
  MEMORY[0x22766BAC4](&unk_221304C28, v4);
  OUTLINED_FUNCTION_12_11();
}

uint64_t sub_2212CBB60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[10];

  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255657D10);
  sub_2212F3348();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255668328);
  OUTLINED_FUNCTION_0_8();
  v0 = OUTLINED_FUNCTION_10_10();
  OUTLINED_FUNCTION_10_45(&qword_255657C48);
  v1 = sub_2212F3108();
  OUTLINED_FUNCTION_10_45(&qword_255657C50);
  v4[0] = v2;
  v4[1] = MEMORY[0x22766BAC4](MEMORY[0x24BDF5428], v0);
  return MEMORY[0x22766BAC4](MEMORY[0x24BDEC550], v1, v4);
}

uint64_t sub_2212CBC3C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2212CBC50()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_255668478;
  if (!qword_255668478)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255668468);
    sub_221024548(&qword_255668480, &qword_255668470);
    v3 = v2;
    sub_221023FE4(&qword_255657C58, (void (*)(uint64_t))type metadata accessor for LayoutMetricsModifier);
    v5[0] = v3;
    v5[1] = v4;
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_255668478);
  }
  return result;
}

void OUTLINED_FUNCTION_10_45(_QWORD *a1)
{
  uint64_t *v1;

  sub_221024548(a1, v1);
}

uint64_t OUTLINED_FUNCTION_11_55()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

uint64_t AuditToken.rawValue.setter(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  *v4 = result;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
  return result;
}

uint64_t (*AuditToken.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t AuditToken.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;

  v6 = static AuditToken.decode<A>(data:)();
  if (!v3)
    v2 = v6;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v2;
}

uint64_t static AuditToken.decode<A>(data:)()
{
  uint64_t v0;
  __int128 v2;
  _BYTE v3[32];
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  sub_2212CBEFC((uint64_t)v3, 1, &v2);
  if (v0)
    return swift_willThrow();
  else
    return v2;
}

uint64_t AuditToken.data.getter()
{
  sub_2212F28D4();
  swift_allocObject();
  sub_2212F28A4();
  return 0x2000000000;
}

uint64_t sub_2212CBEFC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (!result)
  {
    sub_2212CC1F8();
    swift_allocError();
    *(_QWORD *)v7 = 0;
    *(_QWORD *)(v7 + 8) = 0;
    *(_BYTE *)(v7 + 16) = 1;
    return swift_willThrow();
  }
  if ((unint64_t)(a2 - 0x400000000000000) >> 59 == 31)
  {
    v4 = (_OWORD *)result;
    v5 = 32 * a2;
    if (32 * a2 == sub_2212F56E8())
    {
      result = sub_2212F2844();
      v6 = v4[1];
      *a3 = *v4;
      a3[1] = v6;
      return result;
    }
    v8 = sub_2212F56E8();
    sub_2212CC1F8();
    swift_allocError();
    *(_QWORD *)v9 = v5;
    *(_QWORD *)(v9 + 8) = v8;
    *(_BYTE *)(v9 + 16) = 0;
    return swift_willThrow();
  }
  __break(1u);
  return result;
}

__n128 sub_2212CC01C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 32) = 0;
  return result;
}

__n128 sub_2212CC02C@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

uint64_t variable initialization expression of ClientOverride.requestAuditTokenData()
{
  return 0;
}

uint64_t variable initialization expression of ClientOverride.requestBundleID()
{
  return 0;
}

uint64_t variable initialization expression of ClientOverride.requestBundleVersion()
{
  return 0;
}

uint64_t variable initialization expression of ClientOverride.storeExternalVersion()
{
  return 0;
}

uint64_t variable initialization expression of ClientOverride.storeItemID()
{
  return 0;
}

uint64_t variable initialization expression of ClientOverride.vendorID@<X0>(uint64_t a1@<X8>)
{
  return sub_2212CC094((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t variable initialization expression of ExternalGatewaySheetRequest.options()
{
  return 0;
}

uint64_t variable initialization expression of AcknowledgeMessageRequest.clientOverride@<X0>(uint64_t a1@<X8>)
{
  return sub_2212CC094(type metadata accessor for ClientOverride, a1);
}

uint64_t sub_2212CC094@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

__n128 __swift_memcpy32_4_0(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for AuditToken()
{
  return &type metadata for AuditToken;
}

__n128 __swift_memcpy17_8_0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AuditTokenDecodingError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AuditTokenDecodingError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t sub_2212CC158(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2212CC174(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    *(_BYTE *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuditTokenDecodingError()
{
  return &type metadata for AuditTokenDecodingError;
}

void _s3__C13audit_token_tVMa_0()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_255668530)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_255668530);
  }
}

unint64_t sub_2212CC1F8()
{
  unint64_t result;

  result = qword_255668538;
  if (!qword_255668538)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for AuditTokenDecodingError, &type metadata for AuditTokenDecodingError);
    atomic_store(result, (unint64_t *)&qword_255668538);
  }
  return result;
}

uint64_t sub_2212CC24C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212CC280 + 4 * byte_22131A740[*v0]))(0x6974616D6F747561, 0xE900000000000063);
}

uint64_t sub_2212CC280()
{
  return 0x69746375646F7270;
}

uint64_t sub_2212CC29C()
{
  return 0x786F62646E6173;
}

uint64_t sub_2212CC2B4()
{
  return 0x73655465646F6378;
}

uint64_t sub_2212CC2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212D090C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212CC2F0()
{
  return 0;
}

void sub_2212CC2FC(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2212CC308()
{
  sub_2212CD220();
  return sub_2212F5E50();
}

uint64_t sub_2212CC330()
{
  sub_2212CD220();
  return sub_2212F5E5C();
}

unint64_t sub_2212CC358()
{
  return 0xD000000000000010;
}

uint64_t sub_2212CC374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212D0AE0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2212CC39C()
{
  sub_2212CD2A8();
  return sub_2212F5E50();
}

uint64_t sub_2212CC3C4()
{
  sub_2212CD2A8();
  return sub_2212F5E5C();
}

void ClientOverride.Server.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v1 = v0;
  v2 = sub_2212F2A24();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for ClientOverride.Server(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2211E7148(v1, (uint64_t)v5, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v8 = (char *)sub_2212CC4E0
     + 4
     * byte_22131A744[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 3, v7)];
  __asm { BR              X10 }
}

uint64_t sub_2212CC4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v0);
  *(_QWORD *)(v4 - 64) = 0x73655465646F6358;
  *(_QWORD *)(v4 - 56) = 0xEA00000000002874;
  sub_22108DF44(&qword_255668548, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
  sub_2212F5CA0();
  sub_2212F540C();
  swift_bridgeObjectRelease();
  sub_2212F540C();
  v5 = *(_QWORD *)(v4 - 64);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
  return v5;
}

uint64_t type metadata accessor for ClientOverride.Server(uint64_t a1)
{
  return sub_2212CDD18(a1, (uint64_t *)&unk_255668760);
}

void sub_2212CC5D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v2 = sub_2212F2A24();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for ClientOverride.Server(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2211E7148(a1, (uint64_t)v5, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v8 = (char *)sub_2212CC6D0
     + 4
     * byte_22131A748[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 3, v7)];
  __asm { BR              X10 }
}

uint64_t sub_2212CC6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3, v1);
  *(_QWORD *)(v5 - 80) = 0x73655465646F6358;
  *(_QWORD *)(v5 - 72) = 0xEA00000000002874;
  sub_22108DF44(&qword_255668548, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
  sub_2212F5CA0();
  sub_2212F540C();
  swift_bridgeObjectRelease();
  sub_2212F540C();
  v6 = *(_QWORD *)(v5 - 80);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v1);
  sub_22105EBF8(v0, type metadata accessor for ClientOverride.Server);
  return v6;
}

uint64_t ClientOverride.Server.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[4];
  _QWORD *v70;

  v59 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668550);
  MEMORY[0x24BDAC7A8](v3);
  v52 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668558);
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v51 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668560);
  v53 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v56 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2212F2A24();
  v62 = *(_QWORD *)(v8 - 8);
  v63 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v61 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668568);
  v10 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668570);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668578);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ClientOverride.Server(0);
  MEMORY[0x24BDAC7A8](v20);
  v50 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v60 = (uint64_t)&v49 - v23;
  v24 = a1[3];
  v70 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_2212CD220();
  v25 = v64;
  sub_2212F5E2C();
  if (v25)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    sub_2210A577C((uint64_t)v15, &qword_255668570);
  }
  else
  {
    v64 = v12;
    v49 = v10;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    v29 = sub_2212F5C28();
    if (*(_QWORD *)(v29 + 16))
    {
      v30 = *(unsigned __int8 *)(v29 + 32);
      swift_bridgeObjectRelease();
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  v26 = v70;
  __swift_project_boxed_opaque_existential_1(v70, v70[3]);
  sub_2212F5E20();
  __swift_project_boxed_opaque_existential_1(v69, v69[3]);
  v27 = sub_2212F5CF4();
  v31 = v27;
  v32 = v28;
  if (v27 == 1869903201 && v28 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v33 = v60;
LABEL_15:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v33, 1, 3, v35);
    goto LABEL_16;
  }
  v34 = sub_2212F5CDC();
  v33 = v60;
  if ((v34 & 1) != 0 || v31 == 0x6974616D6F747561 && v32 == 0xE900000000000063 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (v31 == 1685025392 && v32 == 0xE400000000000000
    || (sub_2212F5CDC() & 1) != 0
    || v31 == 0x69746375646F7270 && v32 == 0xEA00000000006E6FLL
    || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v33, 2, 3, v37);
  }
  else if (v31 == 0x786F62646E6173 && v32 == 0xE700000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v33, 3, 3, v38);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668588);
    sub_2212F2B44();
    v39 = (uint64_t)v52;
    sub_2212F2B50();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v39, 1, v55) == 1)
    {
      sub_2210A577C(v39, &qword_255668550);
      v40 = sub_2212F59C4();
      swift_allocError();
      v42 = v41;
      v26 = v70;
      __swift_project_boxed_opaque_existential_1(v70, v70[3]);
      sub_2212F5E14();
      sub_2212F59AC();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v42, *MEMORY[0x24BEE26D8], v40);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v57);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    }
    v44 = v54;
    v43 = v55;
    v45 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v51, v39, v55);
    swift_getKeyPath();
    sub_2212F2B5C();
    swift_release();
    MEMORY[0x22766A9FC](v65, v66, v67, v68);
    swift_bridgeObjectRelease();
    v46 = v50;
    sub_2212F29D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v57);
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 0, 3, v47);
    v48 = (uint64_t)v46;
    v33 = v60;
    sub_2212CD264(v48, v60);
    v26 = v70;
  }
LABEL_16:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  sub_2212CD264(v33, v59);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

unint64_t sub_2212CD220()
{
  unint64_t result;

  result = qword_255668580;
  if (!qword_255668580)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AE2C, &type metadata for ClientOverride.Server.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668580);
  }
  return result;
}

uint64_t sub_2212CD264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClientOverride.Server(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2212CD2A8()
{
  unint64_t result;

  result = qword_255668590;
  if (!qword_255668590)
  {
    result = MEMORY[0x22766BAC4](&unk_22131ADDC, &type metadata for ClientOverride.Server.XcodeTestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668590);
  }
  return result;
}

uint64_t sub_2212CD2EC()
{
  return 0;
}

uint64_t sub_2212CD2F8()
{
  sub_2212CD8BC();
  return sub_2212F5E50();
}

uint64_t sub_2212CD320()
{
  sub_2212CD8BC();
  return sub_2212F5E5C();
}

uint64_t sub_2212CD348()
{
  sub_2212CD878();
  return sub_2212F5E50();
}

uint64_t sub_2212CD370()
{
  sub_2212CD878();
  return sub_2212F5E5C();
}

uint64_t sub_2212CD398@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_2212CD3C4()
{
  sub_2212CD834();
  return sub_2212F5E50();
}

uint64_t sub_2212CD3EC()
{
  sub_2212CD834();
  return sub_2212F5E5C();
}

void ClientOverride.Server.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685A0);
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v23 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_2212F2A24();
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v21 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685A8);
  v19 = *(_QWORD *)(v5 - 8);
  v20 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v18 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685B0);
  v16 = *(_QWORD *)(v7 - 8);
  v17 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685B8);
  MEMORY[0x24BDAC7A8](v15);
  v8 = type metadata accessor for ClientOverride.Server(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685C0);
  v27 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212CD220();
  sub_2212F5E38();
  sub_2211E7148(v28, (uint64_t)v10, type metadata accessor for ClientOverride.Server);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v13 = (char *)sub_2212CD674
      + 4
      * byte_22131A750[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 3, v12)];
  __asm { BR              X10 }
}

uint64_t sub_2212CD674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v2 - 144);
  v4 = *(_QWORD *)(v2 - 152);
  v5 = *(_QWORD *)(v2 - 128);
  (*(void (**)(void))(v3 + 32))();
  *(_BYTE *)(v2 - 65) = 3;
  sub_2212CD2A8();
  v6 = *(_QWORD *)(v2 - 136);
  sub_2212F5C34();
  sub_22108DF44(&qword_2556685C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
  v7 = *(_QWORD *)(v2 - 112);
  sub_2212F5C7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
}

unint64_t sub_2212CD834()
{
  unint64_t result;

  result = qword_2556685D0;
  if (!qword_2556685D0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AD8C, &type metadata for ClientOverride.Server.SandboxCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556685D0);
  }
  return result;
}

unint64_t sub_2212CD878()
{
  unint64_t result;

  result = qword_2556685D8;
  if (!qword_2556685D8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AD3C, &type metadata for ClientOverride.Server.ProductionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556685D8);
  }
  return result;
}

unint64_t sub_2212CD8BC()
{
  unint64_t result;

  result = qword_2556685E0;
  if (!qword_2556685E0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131ACEC, &type metadata for ClientOverride.Server.AutomaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556685E0);
  }
  return result;
}

uint64_t sub_2212CD904@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ClientOverride.Server.init(from:)(a1, a2);
}

void sub_2212CD918(_QWORD *a1)
{
  ClientOverride.Server.encode(to:)(a1);
}

uint64_t ClientOverride.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v1 = type metadata accessor for ClientOverride.Server(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2212F2AFC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = 0;
  v22 = 0xE000000000000000;
  if (*(_QWORD *)(v0 + 24))
  {
    v19 = 0x2864696272;
    v20 = 0xE500000000000000;
    sub_2212F540C();
    sub_2212F540C();
    sub_2212F540C();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(v0 + 40))
  {
    v19 = 0x287372766272;
    v20 = 0xE600000000000000;
    sub_2212F540C();
    sub_2212F540C();
    sub_2212F540C();
    swift_bridgeObjectRelease();
  }
  v11 = (int *)type metadata accessor for ClientOverride(0);
  v12 = (uint64_t *)(v0 + v11[9]);
  if ((v12[1] & 1) == 0)
  {
    v13 = *v12;
    v19 = 0x2864496D616461;
    v20 = 0xE700000000000000;
    v18 = v13;
    sub_2212F5CA0();
    sub_2212F540C();
    swift_bridgeObjectRelease();
    sub_2212F540C();
    sub_2212F540C();
    swift_bridgeObjectRelease();
  }
  v14 = (uint64_t *)(v0 + v11[8]);
  if ((v14[1] & 1) == 0)
  {
    v15 = *v14;
    v19 = 0x6449737256747865;
    v20 = 0xE900000000000028;
    v18 = v15;
    sub_2212F5CA0();
    sub_2212F540C();
    swift_bridgeObjectRelease();
    sub_2212F540C();
    sub_2212F540C();
    swift_bridgeObjectRelease();
  }
  sub_2212CDD4C(v0 + v11[10], (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_2210A577C((uint64_t)v6, &qword_2556685E8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v19 = 677669238;
    v20 = 0xE400000000000000;
    sub_22108DF44(&qword_2556685F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    sub_2212F5CA0();
    sub_2212F540C();
    swift_bridgeObjectRelease();
    sub_2212F540C();
    sub_2212F540C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v19 = 0x28726576726573;
  v20 = 0xE700000000000000;
  sub_2211E7148(v0 + v11[7], (uint64_t)v3, type metadata accessor for ClientOverride.Server);
  sub_2212CC5D8((uint64_t)v3);
  sub_2212F540C();
  swift_bridgeObjectRelease();
  sub_2212F540C();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t type metadata accessor for ClientOverride(uint64_t a1)
{
  return sub_2212CDD18(a1, (uint64_t *)&unk_255668698);
}

uint64_t sub_2212CDD18(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2212CDD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ClientOverride.requestAuditTokenData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_2212CDDC4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t sub_2212CDDC4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_22108DDF4(a1, a2);
  return a1;
}

uint64_t ClientOverride.requestAuditTokenData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_22108E010(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*ClientOverride.requestAuditTokenData.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ClientOverride.requestBundleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientOverride.requestBundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ClientOverride.requestBundleID.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ClientOverride.requestBundleVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientOverride.requestBundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ClientOverride.requestBundleVersion.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ClientOverride.server.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ClientOverride(0);
  return sub_2211E7148(v1 + *(int *)(v3 + 28), a1, type metadata accessor for ClientOverride.Server);
}

uint64_t ClientOverride.server.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ClientOverride(0) + 28);
  return sub_2212CDF68(a1, v3);
}

uint64_t sub_2212CDF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClientOverride.Server(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ClientOverride.server.modify())(_QWORD)
{
  type metadata accessor for ClientOverride(0);
  return nullsub_1;
}

uint64_t ClientOverride.storeExternalVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ClientOverride(0) + 32));
}

uint64_t ClientOverride.storeExternalVersion.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for ClientOverride(0);
  v6 = v2 + *(int *)(result + 32);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*ClientOverride.storeExternalVersion.modify())(_QWORD)
{
  type metadata accessor for ClientOverride(0);
  return nullsub_1;
}

uint64_t ClientOverride.storeItemID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ClientOverride(0) + 36));
}

uint64_t ClientOverride.storeItemID.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for ClientOverride(0);
  v6 = v2 + *(int *)(result + 36);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*ClientOverride.storeItemID.modify())(_QWORD)
{
  type metadata accessor for ClientOverride(0);
  return nullsub_1;
}

uint64_t ClientOverride.vendorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ClientOverride(0) + 40);
  return sub_2212CDD4C(v3, a1);
}

uint64_t ClientOverride.vendorID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ClientOverride(0) + 40);
  return sub_2212CE15C(a1, v3);
}

uint64_t sub_2212CE15C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ClientOverride.vendorID.modify())(_QWORD)
{
  type metadata accessor for ClientOverride(0);
  return nullsub_1;
}

uint64_t ClientOverride.init(requestAuditTokenData:requestBundleID:requestBundleVersion:server:storeItemID:storeExternalVersion:vendorID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, char a10, uint64_t a11, char a12, uint64_t a13)
{
  int *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v19 = (int *)type metadata accessor for ClientOverride(0);
  v20 = (char *)a9 + v19[8];
  v21 = (char *)a9 + v19[9];
  v22 = (uint64_t)a9 + v19[10];
  v23 = sub_2212F2AFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  sub_2212CD264(a7, (uint64_t)a9 + v19[7]);
  *(_QWORD *)v20 = a11;
  v20[8] = a12 & 1;
  *(_QWORD *)v21 = a8;
  v21[8] = a10 & 1;
  return sub_2212CE15C(a13, v22);
}

uint64_t sub_2212CE2E0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2212CE31C + 4 * byte_22131A754[a1]))(0xD000000000000015, 0x80000002212FB3D0);
}

uint64_t sub_2212CE31C()
{
  return 0x4274736575716572;
}

unint64_t sub_2212CE340()
{
  return 0xD000000000000014;
}

uint64_t sub_2212CE37C()
{
  return 0x65744965726F7473;
}

uint64_t sub_2212CE39C()
{
  return 0x4449726F646E6576;
}

BOOL sub_2212CE3B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2212CE3C8()
{
  sub_2212F5DD8();
  sub_2212F5DE4();
  return sub_2212F5E08();
}

uint64_t sub_2212CE40C()
{
  return sub_2212F5DE4();
}

uint64_t sub_2212CE434()
{
  unsigned __int8 *v0;

  return sub_2212CE2E0(*v0);
}

uint64_t sub_2212CE43C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212D0B64(a1, a2);
  *a3 = result;
  return result;
}

void sub_2212CE460(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2212CE46C()
{
  sub_2212CE744();
  return sub_2212F5E50();
}

uint64_t sub_2212CE494()
{
  sub_2212CE744();
  return sub_2212F5E5C();
}

uint64_t ClientOverride.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212CE744();
  sub_2212F5E38();
  v11 = *v3;
  v10[15] = 0;
  sub_2212CE788();
  sub_2212F5C4C();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_2212F5C40();
    LOBYTE(v11) = 2;
    sub_2212F5C40();
    type metadata accessor for ClientOverride(0);
    LOBYTE(v11) = 3;
    type metadata accessor for ClientOverride.Server(0);
    sub_22108DF44(&qword_255668610, type metadata accessor for ClientOverride.Server, (uint64_t)&protocol conformance descriptor for ClientOverride.Server);
    sub_2212F5C7C();
    LOBYTE(v11) = 4;
    sub_2212F5C58();
    LOBYTE(v11) = 5;
    sub_2212F5C58();
    LOBYTE(v11) = 6;
    sub_2212F2AFC();
    sub_22108DF44(&qword_255668618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_2212F5C4C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2212CE744()
{
  unint64_t result;

  result = qword_255668600;
  if (!qword_255668600)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AC9C, &type metadata for ClientOverride.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668600);
  }
  return result;
}

unint64_t sub_2212CE788()
{
  unint64_t result;

  result = qword_255668608;
  if (!qword_255668608)
  {
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_255668608);
  }
  return result;
}

uint64_t ClientOverride.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  __int128 v47;
  char v48;

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for ClientOverride.Server(0);
  MEMORY[0x24BDAC7A8](v38);
  v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668620);
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ClientOverride(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *(_OWORD *)v10 = xmmword_22131EF90;
  v12 = &v10[v11[8]];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = &v10[v11[9]];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v43 = v11;
  v14 = (uint64_t)&v10[v11[10]];
  v15 = sub_2212F2AFC();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v44 = v14;
  v16(v14, 1, 1, v15);
  v17 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_2212CE744();
  v18 = v7;
  v19 = v46;
  sub_2212F5E2C();
  if (v19)
  {
    v27 = v44;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    sub_22108E010(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_2210A577C(v27, &qword_2556685E8);
  }
  else
  {
    v46 = (uint64_t *)v12;
    v36 = (uint64_t *)v13;
    v20 = v40;
    v21 = (uint64_t)v41;
    v48 = 0;
    sub_2212CEC2C();
    v22 = v42;
    v23 = v18;
    sub_2212F5BEC();
    *(_OWORD *)v10 = v47;
    LOBYTE(v47) = 1;
    *((_QWORD *)v10 + 2) = sub_2212F5BE0();
    *((_QWORD *)v10 + 3) = v24;
    LOBYTE(v47) = 2;
    *((_QWORD *)v10 + 4) = sub_2212F5BE0();
    *((_QWORD *)v10 + 5) = v25;
    LOBYTE(v47) = 3;
    sub_22108DF44(&qword_255668630, type metadata accessor for ClientOverride.Server, (uint64_t)&protocol conformance descriptor for ClientOverride.Server);
    v26 = (uint64_t)v39;
    sub_2212F5C1C();
    sub_2212CD264(v26, (uint64_t)&v10[v43[7]]);
    LOBYTE(v47) = 4;
    v28 = sub_2212F5BF8();
    v29 = v46;
    *v46 = v28;
    *((_BYTE *)v29 + 8) = v30 & 1;
    LOBYTE(v47) = 5;
    v31 = sub_2212F5BF8();
    v32 = v36;
    *v36 = v31;
    *((_BYTE *)v32 + 8) = v33 & 1;
    LOBYTE(v47) = 6;
    sub_22108DF44(&qword_255668638, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_2212F5BEC();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v22);
    sub_2212CE15C(v21, v44);
    sub_2211E7148((uint64_t)v10, v37, type metadata accessor for ClientOverride);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    return sub_22105EBF8((uint64_t)v10, type metadata accessor for ClientOverride);
  }
}

unint64_t sub_2212CEC2C()
{
  unint64_t result;

  result = qword_255668628;
  if (!qword_255668628)
  {
    result = MEMORY[0x22766BAC4](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_255668628);
  }
  return result;
}

uint64_t sub_2212CEC74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ClientOverride.init(from:)(a1, a2);
}

uint64_t sub_2212CEC88(_QWORD *a1)
{
  return ClientOverride.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientOverride(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    if (v7 >> 60 == 15)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      v9 = *a2;
      sub_22108DDF4(*a2, a2[1]);
      *v4 = v9;
      v4[1] = v7;
    }
    v10 = a2[3];
    v4[2] = a2[2];
    v4[3] = v10;
    v11 = a2[5];
    v4[4] = a2[4];
    v4[5] = v11;
    v12 = a3[7];
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 3, v15))
    {
      v17 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v18 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v13, v14, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 3, v15);
    }
    v19 = a3[8];
    v20 = a3[9];
    v21 = (char *)v4 + v19;
    v22 = (char *)a2 + v19;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = (char *)v4 + v20;
    v24 = (char *)a2 + v20;
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v25 = a3[10];
    v26 = (char *)v4 + v25;
    v27 = (char *)a2 + v25;
    v28 = sub_2212F2AFC();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
  }
  return v4;
}

uint64_t destroy for ClientOverride(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = a1[1];
  if (v4 >> 60 != 15)
    sub_221054AE8(*a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (char *)a1 + *(int *)(a2 + 28);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 3, v6))
  {
    v7 = sub_2212F2A24();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  v8 = (char *)a1 + *(int *)(a2 + 40);
  v9 = sub_2212F2AFC();
  v10 = *(_QWORD *)(v9 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  return result;
}

uint64_t initializeWithCopy for ClientOverride(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = a2[1];
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v7 = *a2;
    sub_22108DDF4(*a2, a2[1]);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v6;
  }
  v8 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v8;
  v9 = a2[5];
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v9;
  v10 = a3[7];
  v11 = (void *)(a1 + v10);
  v12 = (char *)a2 + v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 3, v13))
  {
    v15 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_2212F2A24();
    (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, v12, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 3, v13);
  }
  v17 = a3[8];
  v18 = a3[9];
  v19 = a1 + v17;
  v20 = (char *)a2 + v17;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = v20[8];
  v21 = a1 + v18;
  v22 = (char *)a2 + v18;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = v22[8];
  v23 = a3[10];
  v24 = (void *)(a1 + v23);
  v25 = (char *)a2 + v23;
  v26 = sub_2212F2AFC();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t *assignWithCopy for ClientOverride(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v39;

  v6 = a2[1];
  if ((unint64_t)a1[1] >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      v7 = *a2;
      sub_22108DDF4(*a2, a2[1]);
      *a1 = v7;
      a1[1] = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_2212CF434((uint64_t)a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  v8 = *a2;
  sub_22108DDF4(*a2, a2[1]);
  v9 = *a1;
  v10 = a1[1];
  *a1 = v8;
  a1[1] = v6;
  sub_221054AE8(v9, v10);
LABEL_8:
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 3, v14);
  v18 = v16(v13, 3, v14);
  if (v17)
  {
    if (!v18)
    {
      v19 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v12, v13, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 3, v14);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v18)
  {
    sub_2210A577C((uint64_t)v12, &qword_255668540);
LABEL_13:
    v20 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_14;
  }
  v39 = sub_2212F2A24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v12, v13, v39);
LABEL_14:
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)v23;
  v22[8] = v23[8];
  *(_QWORD *)v22 = v24;
  v25 = a3[9];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  v26[8] = v27[8];
  *(_QWORD *)v26 = v28;
  v29 = a3[10];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_2212F2AFC();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v30, v31, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_19;
  }
  if (v36)
  {
LABEL_19:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

uint64_t sub_2212CF434(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

_OWORD *initializeWithTake for ClientOverride(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 3, v10))
  {
    v12 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 3, v10);
  }
  v14 = a3[8];
  v15 = a3[9];
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v18 = (char *)a1 + v15;
  v19 = (char *)a2 + v15;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = a3[10];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2212F2AFC();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  return a1;
}

uint64_t assignWithTake for ClientOverride(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v37;

  v6 = *(_QWORD *)(a1 + 8);
  if (v6 >> 60 == 15)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 8);
  if (v7 >> 60 == 15)
  {
    sub_2212CF434(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  v8 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  sub_221054AE8(v8, v6);
LABEL_6:
  v9 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 3, v14);
  v18 = v16(v13, 3, v14);
  if (v17)
  {
    if (!v18)
    {
      v19 = sub_2212F2A24();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v12, v13, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 3, v14);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v18)
  {
    sub_2210A577C((uint64_t)v12, &qword_255668540);
LABEL_11:
    v20 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_12;
  }
  v37 = sub_2212F2A24();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v37 - 8) + 40))(v12, v13, v37);
LABEL_12:
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = a1 + v22;
  v26 = a2 + v22;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  v27 = a3[10];
  v28 = (void *)(a1 + v27);
  v29 = (void *)(a2 + v27);
  v30 = sub_2212F2AFC();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v28, v29, v30);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_17;
  }
  if (v34)
  {
LABEL_17:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v28, v29, v30);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientOverride()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212CF894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = type metadata accessor for ClientOverride.Server(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 28);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ClientOverride()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212CF950(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v8 = type metadata accessor for ClientOverride.Server(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2212CF9F0()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for ClientOverride.Server(319);
  if (v0 <= 0x3F)
  {
    sub_2212CFA98();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_2212CFA98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2556686A8[0])
  {
    sub_2212F2AFC();
    v0 = sub_2212F5844();
    if (!v1)
      atomic_store(v0, qword_2556686A8);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientOverride.Server(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_2212F2A24();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for ClientOverride.Server(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_2212F2A24();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *initializeWithCopy for ClientOverride.Server(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_2212F2A24();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithCopy for ClientOverride.Server(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_2212F2A24();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_2210A577C((uint64_t)a1, &qword_255668540);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_2212F2A24();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *initializeWithTake for ClientOverride.Server(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_2212F2A24();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithTake for ClientOverride.Server(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_2212F2A24();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_2210A577C((uint64_t)a1, &qword_255668540);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_2212F2A24();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientOverride.Server()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212CFFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4)
    return v5 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ClientOverride.Server()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212D0014(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 3);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_2212D006C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
}

uint64_t sub_2212D00A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 3, v4);
}

uint64_t sub_2212D00EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F2A24();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

_BYTE *__swift_memcpy1_1_0(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ClientOverride.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientOverride.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2212D0228 + 4 * byte_22131A760[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2212D025C + 4 * byte_22131A75B[v4]))();
}

uint64_t sub_2212D025C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D0264(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212D026CLL);
  return result;
}

uint64_t sub_2212D0278(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212D0280);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2212D0284(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D028C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientOverride.CodingKeys()
{
  return &type metadata for ClientOverride.CodingKeys;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.AutomaticCodingKeys()
{
  return &type metadata for ClientOverride.Server.AutomaticCodingKeys;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.ProductionCodingKeys()
{
  return &type metadata for ClientOverride.Server.ProductionCodingKeys;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.SandboxCodingKeys()
{
  return &type metadata for ClientOverride.Server.SandboxCodingKeys;
}

uint64_t getEnumTagSinglePayload for ClientOverride.Server.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientOverride.Server.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2212D03B4 + 4 * byte_22131A76A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2212D03E8 + 4 * byte_22131A765[v4]))();
}

uint64_t sub_2212D03E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D03F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212D03F8);
  return result;
}

uint64_t sub_2212D0404(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212D040CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2212D0410(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D0418(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.CodingKeys()
{
  return &type metadata for ClientOverride.Server.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ClientOverride.Server.XcodeTestCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2212D0478 + 4 * byte_22131A76F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2212D0498 + 4 * byte_22131A774[v4]))();
}

_BYTE *sub_2212D0478(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2212D0498(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2212D04A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2212D04A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2212D04B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2212D04B8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ClientOverride.Server.XcodeTestCodingKeys()
{
  return &type metadata for ClientOverride.Server.XcodeTestCodingKeys;
}

unint64_t sub_2212D04D8()
{
  unint64_t result;

  result = qword_255668770;
  if (!qword_255668770)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AA14, &type metadata for ClientOverride.Server.XcodeTestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668770);
  }
  return result;
}

unint64_t sub_2212D0520()
{
  unint64_t result;

  result = qword_255668778;
  if (!qword_255668778)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AACC, &type metadata for ClientOverride.Server.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668778);
  }
  return result;
}

unint64_t sub_2212D0568()
{
  unint64_t result;

  result = qword_255668780;
  if (!qword_255668780)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AC74, &type metadata for ClientOverride.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668780);
  }
  return result;
}

unint64_t sub_2212D05B0()
{
  unint64_t result;

  result = qword_255668788;
  if (!qword_255668788)
  {
    result = MEMORY[0x22766BAC4](&unk_22131ABE4, &type metadata for ClientOverride.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668788);
  }
  return result;
}

unint64_t sub_2212D05F8()
{
  unint64_t result;

  result = qword_255668790;
  if (!qword_255668790)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AC0C, &type metadata for ClientOverride.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668790);
  }
  return result;
}

unint64_t sub_2212D0640()
{
  unint64_t result;

  result = qword_255668798;
  if (!qword_255668798)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AB94, &type metadata for ClientOverride.Server.AutomaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668798);
  }
  return result;
}

unint64_t sub_2212D0688()
{
  unint64_t result;

  result = qword_2556687A0;
  if (!qword_2556687A0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131ABBC, &type metadata for ClientOverride.Server.AutomaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556687A0);
  }
  return result;
}

unint64_t sub_2212D06D0()
{
  unint64_t result;

  result = qword_2556687A8;
  if (!qword_2556687A8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AB44, &type metadata for ClientOverride.Server.ProductionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556687A8);
  }
  return result;
}

unint64_t sub_2212D0718()
{
  unint64_t result;

  result = qword_2556687B0;
  if (!qword_2556687B0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AB6C, &type metadata for ClientOverride.Server.ProductionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556687B0);
  }
  return result;
}

unint64_t sub_2212D0760()
{
  unint64_t result;

  result = qword_2556687B8;
  if (!qword_2556687B8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AAF4, &type metadata for ClientOverride.Server.SandboxCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556687B8);
  }
  return result;
}

unint64_t sub_2212D07A8()
{
  unint64_t result;

  result = qword_2556687C0;
  if (!qword_2556687C0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AB1C, &type metadata for ClientOverride.Server.SandboxCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556687C0);
  }
  return result;
}

unint64_t sub_2212D07F0()
{
  unint64_t result;

  result = qword_2556687C8;
  if (!qword_2556687C8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131A984, &type metadata for ClientOverride.Server.XcodeTestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556687C8);
  }
  return result;
}

unint64_t sub_2212D0838()
{
  unint64_t result;

  result = qword_2556687D0;
  if (!qword_2556687D0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131A9AC, &type metadata for ClientOverride.Server.XcodeTestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556687D0);
  }
  return result;
}

unint64_t sub_2212D0880()
{
  unint64_t result;

  result = qword_2556687D8;
  if (!qword_2556687D8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AA3C, &type metadata for ClientOverride.Server.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556687D8);
  }
  return result;
}

unint64_t sub_2212D08C8()
{
  unint64_t result;

  result = qword_2556687E0;
  if (!qword_2556687E0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131AA64, &type metadata for ClientOverride.Server.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556687E0);
  }
  return result;
}

uint64_t sub_2212D090C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6974616D6F747561 && a2 == 0xE900000000000063;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69746375646F7270 && a2 == 0xEA00000000006E6FLL || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x786F62646E6173 && a2 == 0xE700000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73655465646F6378 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2212D0AE0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000002212FB3B0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_2212D0B64(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000002212FB3D0 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4274736575716572 && a2 == 0xEF4449656C646E75 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002212FB3F0 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726576726573 && a2 == 0xE600000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002212FB410 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65744965726F7473 && a2 == 0xEB0000000044496DLL || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4449726F646E6576 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

Swift::Bool __swiftcall NSFileManager.isDirectory(atPath:)(Swift::String atPath)
{
  void *v1;
  void *v2;
  Swift::Bool v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v4 = 0;
  v2 = (void *)sub_2212F5358();
  objc_msgSend(v1, sel_fileExistsAtPath_isDirectory_, v2, &v4);

  return v4;
}

uint64_t NSFileManager.fileExists(at:)()
{
  void *v0;
  void *v1;
  unsigned int v2;
  int v3;
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v5 = 0;
  sub_2212F2A00();
  v1 = (void *)sub_2212F5358();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_fileExistsAtPath_isDirectory_, v1, &v5);

  if (v5)
    v3 = 256;
  else
    v3 = 0;
  return v3 | v2;
}

BOOL ExternalGatewayMode.isLink.getter(char a1)
{
  return (a1 & 1) == 0;
}

unint64_t ExternalGatewayMode.description.getter(char a1)
{
  if (!a1)
    return 0xD000000000000016;
  if (a1 == 1)
    return 0xD000000000000012;
  return 0xD000000000000015;
}

BOOL static ExternalGatewayMode.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t ExternalGatewayMode.hash(into:)()
{
  return sub_2212F5DE4();
}

uint64_t sub_2212D1030()
{
  sub_2212D14AC();
  return sub_2212F5E50();
}

uint64_t sub_2212D1058()
{
  sub_2212D14AC();
  return sub_2212F5E5C();
}

uint64_t sub_2212D1080()
{
  sub_2212D14F0();
  return sub_2212F5E50();
}

uint64_t sub_2212D10A8()
{
  sub_2212D14F0();
  return sub_2212F5E5C();
}

uint64_t sub_2212D10D0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x74616E7265746C61;
  if (*v0 != 1)
    v1 = 0x746E756F636361;
  if (*v0)
    return v1;
  else
    return 0x79617765746167;
}

uint64_t sub_2212D1134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212D1D14(a1, a2);
  *a3 = result;
  return result;
}

void sub_2212D1158(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2212D1164()
{
  sub_2212D1468();
  return sub_2212F5E50();
}

uint64_t sub_2212D118C()
{
  sub_2212D1468();
  return sub_2212F5E5C();
}

uint64_t sub_2212D11B4()
{
  sub_2212D1534();
  return sub_2212F5E50();
}

uint64_t sub_2212D11DC()
{
  sub_2212D1534();
  return sub_2212F5E5C();
}

uint64_t ExternalGatewayMode.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  char v26;
  char v27;

  v24 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556687E8);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556687F0);
  v18 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556687F8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668800);
  v23 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212D1468();
  sub_2212F5E38();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      v26 = 1;
      sub_2212D14F0();
      sub_2212F5C34();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
    }
    else
    {
      v27 = 2;
      sub_2212D14AC();
      v15 = v20;
      sub_2212F5C34();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v22);
    }
  }
  else
  {
    v25 = 0;
    sub_2212D1534();
    sub_2212F5C34();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v12);
}

unint64_t sub_2212D1468()
{
  unint64_t result;

  result = qword_255668808;
  if (!qword_255668808)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B4C4, &type metadata for ExternalGatewayMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668808);
  }
  return result;
}

unint64_t sub_2212D14AC()
{
  unint64_t result;

  result = qword_255668810;
  if (!qword_255668810)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B474, &type metadata for ExternalGatewayMode.AccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668810);
  }
  return result;
}

unint64_t sub_2212D14F0()
{
  unint64_t result;

  result = qword_255668818;
  if (!qword_255668818)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B424, &type metadata for ExternalGatewayMode.AlternativeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668818);
  }
  return result;
}

unint64_t sub_2212D1534()
{
  unint64_t result;

  result = qword_255668820;
  if (!qword_255668820)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B3D4, &type metadata for ExternalGatewayMode.GatewayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668820);
  }
  return result;
}

uint64_t ExternalGatewayMode.hashValue.getter()
{
  sub_2212F5DD8();
  sub_2212F5DE4();
  return sub_2212F5E08();
}

_QWORD *ExternalGatewayMode.init(from:)(_QWORD *a1)
{
  return sub_2212D1E80(a1);
}

_QWORD *sub_2212D15D0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_2212D1E80(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_2212D15F8(_QWORD *a1)
{
  unsigned __int8 *v1;

  return ExternalGatewayMode.encode(to:)(a1, *v1);
}

BOOL ExternalGatewayOptionsKey.init(rawValue:)()
{
  uint64_t v0;

  v0 = sub_2212F5BBC();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

unint64_t ExternalGatewayOptionsKey.rawValue.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_2212D1670()
{
  sub_2212F5DD8();
  sub_2212F53DC();
  return sub_2212F5E08();
}

uint64_t sub_2212D16C4()
{
  return sub_2212F53DC();
}

uint64_t sub_2212D16E0()
{
  sub_2212F5DD8();
  sub_2212F53DC();
  return sub_2212F5E08();
}

uint64_t sub_2212D1730@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2212F5BBC();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2212D1780(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000002212FB180;
}

uint64_t ExternalGatewaySheetRequest.generateToken.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ExternalGatewaySheetRequest.kind.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ExternalGatewaySheetRequest.logKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExternalGatewaySheetRequest.logKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ExternalGatewaySheetRequest.logKey.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ExternalGatewaySheetRequest.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ExternalGatewaySheetRequest.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*ExternalGatewaySheetRequest.options.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ExternalGatewaySheetRequest.presentSheet.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ExternalGatewaySheetRequest.init(kind:options:presentSheet:generateToken:logKey:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_BYTE *)a7 = a4;
  *(_BYTE *)(a7 + 1) = result;
  *(_QWORD *)(a7 + 8) = a5;
  *(_QWORD *)(a7 + 16) = a6;
  *(_QWORD *)(a7 + 24) = a2;
  *(_BYTE *)(a7 + 32) = a3;
  return result;
}

double ExternalGatewaySheetRequest.init(from:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  char v7;

  sub_2212D2258(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_BYTE *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t ExternalGatewaySheetRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19[2];
  _BYTE v20[8];
  _QWORD v21[2];

  v3 = v1;
  v21[1] = *MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668828);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212D2788();
  sub_2212F5E38();
  LOBYTE(v19[0]) = 0;
  sub_2212F5C70();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v19[0]) = *(_BYTE *)(v3 + 1);
  HIBYTE(v18) = 1;
  sub_2212D27CC();
  sub_2212F5C7C();
  LOBYTE(v19[0]) = 2;
  sub_2212F5C64();
  LOBYTE(v19[0]) = 4;
  sub_2212F5C70();
  sub_2212D2810(v3 + 24, (uint64_t)v20);
  sub_2212D2810((uint64_t)v20, (uint64_t)v21);
  if (!v21[0])
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = (void *)objc_opt_self();
  v11 = (void *)sub_2212F51FC();
  v19[0] = 0;
  v12 = objc_msgSend(v10, sel_dataWithJSONObject_options_error_, v11, 0, v19);

  v13 = v19[0];
  if (!v12)
  {
    v17 = v13;
    sub_2212F297C();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v14 = (void *)sub_2212F2AC0();
  v16 = v15;

  v19[0] = v14;
  v19[1] = v16;
  HIBYTE(v18) = 3;
  sub_2212CE788();
  sub_2212F5C7C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_221054AE8((uint64_t)v14, (unint64_t)v16);
}

uint64_t sub_2212D1B8C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212D1BC8 + 4 * byte_22131AE80[*v0]))(0x65746172656E6567, 0xED00006E656B6F54);
}

uint64_t sub_2212D1BC8()
{
  return 1684957547;
}

uint64_t sub_2212D1BD8()
{
  return 0x79654B676F6CLL;
}

uint64_t sub_2212D1BEC()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_2212D1C04()
{
  return 0x53746E6573657270;
}

uint64_t sub_2212D1C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212D31E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212D1C48()
{
  sub_2212D2788();
  return sub_2212F5E50();
}

uint64_t sub_2212D1C70()
{
  sub_2212D2788();
  return sub_2212F5E5C();
}

double sub_2212D1C98@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  char v7;

  sub_2212D2258(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_BYTE *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_2212D1CDC(_QWORD *a1)
{
  return ExternalGatewaySheetRequest.encode(to:)(a1);
}

uint64_t sub_2212D1D14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79617765746167 && a2 == 0xE700000000000000;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E7265746C61 && a2 == 0xEB00000000657669 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E756F636361 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_2212D1E80(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  char v31;
  char v32;
  char v33;

  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556688D8);
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556688E0);
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556688E8);
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556688F0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212D1468();
  v11 = (uint64_t)v30;
  sub_2212F5E2C();
  if (v11)
    goto LABEL_7;
  v21 = v4;
  v22 = v8;
  v12 = v29;
  v30 = a1;
  v13 = v10;
  v14 = sub_2212F5C28();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v18 = sub_2212F59C4();
    swift_allocError();
    v10 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2556688F8);
    *v10 = &type metadata for ExternalGatewayMode;
    sub_2212F5BD4();
    sub_2212F59AC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v10, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
    a1 = v30;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  v10 = (_QWORD *)*(unsigned __int8 *)(v14 + 32);
  if (*(_BYTE *)(v14 + 32))
  {
    if ((_DWORD)v10 == 1)
    {
      v32 = 1;
      sub_2212D14F0();
      v16 = v28;
      sub_2212F5BC8();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v26);
    }
    else
    {
      v33 = 2;
      sub_2212D14AC();
      sub_2212F5BC8();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v27);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v13, v15);
  }
  else
  {
    v31 = 0;
    sub_2212D1534();
    sub_2212F5BC8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v24);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v10;
}

uint64_t sub_2212D2258@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  id v26;
  char v27;
  uint64_t v28;
  _BYTE *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  int v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  uint64_t v54;

  v49 = a2;
  v54 = *MEMORY[0x24BDAC8D0];
  v3 = sub_2212F59B8();
  v4 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  v48 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556688B8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_2212D2788();
  v12 = v50;
  sub_2212F5E2C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v11;
  v14 = v8;
  LOBYTE(v52) = 0;
  v15 = v7;
  LODWORD(v50) = sub_2212F5C10();
  LOBYTE(v51) = 1;
  sub_2212D3420();
  sub_2212F5C1C();
  v16 = v52;
  LOBYTE(v52) = 2;
  v17 = sub_2212F5C04();
  v46 = v18;
  v44 = v17;
  v45 = v16;
  LOBYTE(v52) = 4;
  swift_bridgeObjectRetain();
  v20 = sub_2212F5C10();
  LOBYTE(v51) = 3;
  sub_2212CEC2C();
  sub_2212F5BEC();
  if (v53 >> 60 == 15)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v15);
    v21 = 0;
LABEL_9:
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    v28 = v46;
    result = swift_bridgeObjectRelease();
    v29 = v49;
    *v49 = v50 & 1;
    v29[1] = v45;
    *((_QWORD *)v29 + 1) = v44;
    *((_QWORD *)v29 + 2) = v28;
    *((_QWORD *)v29 + 3) = v21;
    v29[32] = v20 & 1;
    return result;
  }
  v40 = v20;
  v22 = (uint64_t)v52;
  v23 = v53;
  v41 = (id)objc_opt_self();
  v42 = v22;
  v43 = v23;
  v24 = (void *)sub_2212F2A9C();
  v52 = 0;
  v25 = objc_msgSend(v41, sel_JSONObjectWithData_options_error_, v24, 0, &v52);

  if (v25)
  {
    v26 = v52;
    sub_2212F58BC();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2556688C8);
    v27 = swift_dynamicCast();
    LOBYTE(v20) = v40;
    if ((v27 & 1) != 0)
    {
      sub_22108E010(v42, v43);
      v21 = v51;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v15);
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2556688D0);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_2212FF8E0;
    *(_QWORD *)(v31 + 56) = &type metadata for ExternalGatewaySheetRequest.CodingKeys;
    *(_QWORD *)(v31 + 64) = v13;
    *(_BYTE *)(v31 + 32) = 3;
    v52 = 0;
    v53 = 0xE000000000000000;
    sub_2212F5964();
    swift_bridgeObjectRelease();
    v39 = v6;
    sub_2212F59AC();
    v32 = sub_2212F59C4();
    swift_allocError();
    v34 = v33;
    v35 = v48;
    v36 = v33;
    v37 = v6;
    v38 = v47;
    (*(void (**)(uint64_t, char *, uint64_t))(v48 + 16))(v36, v37, v47);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x24BEE26D8], v32);
    swift_willThrow();
    sub_22108E010(v42, v43);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v38);
  }
  else
  {
    v30 = v52;
    swift_bridgeObjectRelease();
    sub_2212F297C();

    swift_willThrow();
    sub_22108E010(v42, v43);
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_2212D2788()
{
  unint64_t result;

  result = qword_255668830;
  if (!qword_255668830)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B384, &type metadata for ExternalGatewaySheetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668830);
  }
  return result;
}

unint64_t sub_2212D27CC()
{
  unint64_t result;

  result = qword_255668838;
  if (!qword_255668838)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ExternalGatewayMode, &type metadata for ExternalGatewayMode);
    atomic_store(result, (unint64_t *)&qword_255668838);
  }
  return result;
}

uint64_t sub_2212D2810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2212D285C()
{
  unint64_t result;

  result = qword_255668848;
  if (!qword_255668848)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ExternalGatewayMode, &type metadata for ExternalGatewayMode);
    atomic_store(result, (unint64_t *)&qword_255668848);
  }
  return result;
}

unint64_t sub_2212D28A4()
{
  unint64_t result;

  result = qword_255668850;
  if (!qword_255668850)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ExternalGatewayOptionsKey, &type metadata for ExternalGatewayOptionsKey);
    atomic_store(result, (unint64_t *)&qword_255668850);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewayMode()
{
  return &type metadata for ExternalGatewayMode;
}

uint64_t storeEnumTagSinglePayload for ExternalGatewayOptionsKey(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2212D2940 + 4 * byte_22131AE85[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2212D2960 + 4 * byte_22131AE8A[v4]))();
}

_BYTE *sub_2212D2940(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2212D2960(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2212D2968(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2212D2970(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2212D2978(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2212D2980(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewayOptionsKey()
{
  return &type metadata for ExternalGatewayOptionsKey;
}

uint64_t destroy for ExternalGatewaySheetRequest()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExternalGatewaySheetRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExternalGatewaySheetRequest(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ExternalGatewaySheetRequest(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalGatewaySheetRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExternalGatewaySheetRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewaySheetRequest()
{
  return &type metadata for ExternalGatewaySheetRequest;
}

uint64_t getEnumTagSinglePayload for ExternalGatewaySheetRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ExternalGatewaySheetRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2212D2C74 + 4 * byte_22131AE94[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2212D2CA8 + 4 * byte_22131AE8F[v4]))();
}

uint64_t sub_2212D2CA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D2CB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212D2CB8);
  return result;
}

uint64_t sub_2212D2CC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212D2CCCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2212D2CD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D2CD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewaySheetRequest.CodingKeys()
{
  return &type metadata for ExternalGatewaySheetRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for StorefrontInternal.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s15StoreKit_Shared19ExternalGatewayModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2212D2DD0 + 4 * byte_22131AE9E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2212D2E04 + 4 * byte_22131AE99[v4]))();
}

uint64_t sub_2212D2E04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D2E0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212D2E14);
  return result;
}

uint64_t sub_2212D2E20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212D2E28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2212D2E2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D2E34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExternalGatewayMode.CodingKeys()
{
  return &type metadata for ExternalGatewayMode.CodingKeys;
}

ValueMetadata *type metadata accessor for ExternalGatewayMode.GatewayCodingKeys()
{
  return &type metadata for ExternalGatewayMode.GatewayCodingKeys;
}

ValueMetadata *type metadata accessor for ExternalGatewayMode.AlternativeCodingKeys()
{
  return &type metadata for ExternalGatewayMode.AlternativeCodingKeys;
}

ValueMetadata *type metadata accessor for ExternalGatewayMode.AccountCodingKeys()
{
  return &type metadata for ExternalGatewayMode.AccountCodingKeys;
}

unint64_t sub_2212D2E84()
{
  unint64_t result;

  result = qword_255668858;
  if (!qword_255668858)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B2A4, &type metadata for ExternalGatewayMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668858);
  }
  return result;
}

unint64_t sub_2212D2ECC()
{
  unint64_t result;

  result = qword_255668860;
  if (!qword_255668860)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B35C, &type metadata for ExternalGatewaySheetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668860);
  }
  return result;
}

unint64_t sub_2212D2F14()
{
  unint64_t result;

  result = qword_255668868;
  if (!qword_255668868)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B2CC, &type metadata for ExternalGatewaySheetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668868);
  }
  return result;
}

unint64_t sub_2212D2F5C()
{
  unint64_t result;

  result = qword_255668870;
  if (!qword_255668870)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B2F4, &type metadata for ExternalGatewaySheetRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668870);
  }
  return result;
}

unint64_t sub_2212D2FA4()
{
  unint64_t result;

  result = qword_255668878;
  if (!qword_255668878)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B1C4, &type metadata for ExternalGatewayMode.GatewayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668878);
  }
  return result;
}

unint64_t sub_2212D2FEC()
{
  unint64_t result;

  result = qword_255668880;
  if (!qword_255668880)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B1EC, &type metadata for ExternalGatewayMode.GatewayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668880);
  }
  return result;
}

unint64_t sub_2212D3034()
{
  unint64_t result;

  result = qword_255668888;
  if (!qword_255668888)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B174, &type metadata for ExternalGatewayMode.AlternativeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668888);
  }
  return result;
}

unint64_t sub_2212D307C()
{
  unint64_t result;

  result = qword_255668890;
  if (!qword_255668890)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B19C, &type metadata for ExternalGatewayMode.AlternativeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668890);
  }
  return result;
}

unint64_t sub_2212D30C4()
{
  unint64_t result;

  result = qword_255668898;
  if (!qword_255668898)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B124, &type metadata for ExternalGatewayMode.AccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668898);
  }
  return result;
}

unint64_t sub_2212D310C()
{
  unint64_t result;

  result = qword_2556688A0;
  if (!qword_2556688A0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B14C, &type metadata for ExternalGatewayMode.AccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556688A0);
  }
  return result;
}

unint64_t sub_2212D3154()
{
  unint64_t result;

  result = qword_2556688A8;
  if (!qword_2556688A8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B214, &type metadata for ExternalGatewayMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556688A8);
  }
  return result;
}

unint64_t sub_2212D319C()
{
  unint64_t result;

  result = qword_2556688B0;
  if (!qword_2556688B0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B23C, &type metadata for ExternalGatewayMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556688B0);
  }
  return result;
}

uint64_t sub_2212D31E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65746172656E6567 && a2 == 0xED00006E656B6F54;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x53746E6573657270 && a2 == 0xEC00000074656568)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_2212D3420()
{
  unint64_t result;

  result = qword_2556688C0;
  if (!qword_2556688C0)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ExternalGatewayMode, &type metadata for ExternalGatewayMode);
    atomic_store(result, (unint64_t *)&qword_2556688C0);
  }
  return result;
}

BOOL static StoreKitInternalError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t StoreKitInternalError.hash(into:)()
{
  return sub_2212F5DE4();
}

uint64_t sub_2212D3498(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212D34D8 + 4 * byte_22131B520[a1]))(0x4465727574616566, 0xEF64656C62617369);
}

uint64_t sub_2212D34D8()
{
  return 0x4164696C61766E69;
}

unint64_t sub_2212D34F4()
{
  return 0xD000000000000018;
}

uint64_t sub_2212D3514()
{
  return 0x7469746E45746F6ELL;
}

unint64_t sub_2212D3534()
{
  return 0xD000000000000011;
}

uint64_t sub_2212D355C()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_2212D3574()
{
  return 0x636E614372657375;
}

uint64_t sub_2212D3598()
{
  unsigned __int8 *v0;

  return sub_2212D3498(*v0);
}

uint64_t sub_2212D35A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212D42CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212D35C4()
{
  sub_2212D3DA0();
  return sub_2212F5E50();
}

uint64_t sub_2212D35EC()
{
  sub_2212D3DA0();
  return sub_2212F5E5C();
}

uint64_t sub_2212D3614()
{
  sub_2212D3FC0();
  return sub_2212F5E50();
}

uint64_t sub_2212D363C()
{
  sub_2212D3FC0();
  return sub_2212F5E5C();
}

uint64_t sub_2212D3664()
{
  sub_2212D3F7C();
  return sub_2212F5E50();
}

uint64_t sub_2212D368C()
{
  sub_2212D3F7C();
  return sub_2212F5E5C();
}

uint64_t sub_2212D36B4()
{
  sub_2212D3F38();
  return sub_2212F5E50();
}

uint64_t sub_2212D36DC()
{
  sub_2212D3F38();
  return sub_2212F5E5C();
}

uint64_t sub_2212D3704()
{
  sub_2212D3EF4();
  return sub_2212F5E50();
}

uint64_t sub_2212D372C()
{
  sub_2212D3EF4();
  return sub_2212F5E5C();
}

uint64_t sub_2212D3754()
{
  sub_2212D3EB0();
  return sub_2212F5E50();
}

uint64_t sub_2212D377C()
{
  sub_2212D3EB0();
  return sub_2212F5E5C();
}

uint64_t sub_2212D37A4()
{
  sub_2212D3E6C();
  return sub_2212F5E50();
}

uint64_t sub_2212D37CC()
{
  sub_2212D3E6C();
  return sub_2212F5E5C();
}

uint64_t sub_2212D37F4()
{
  sub_2212D3E28();
  return sub_2212F5E50();
}

uint64_t sub_2212D381C()
{
  sub_2212D3E28();
  return sub_2212F5E5C();
}

uint64_t sub_2212D3844()
{
  sub_2212D3DE4();
  return sub_2212F5E50();
}

uint64_t sub_2212D386C()
{
  sub_2212D3DE4();
  return sub_2212F5E5C();
}

void StoreKitInternalError.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[19];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668900);
  v17[17] = *(_QWORD *)(v3 - 8);
  v17[18] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v17[16] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668908);
  v17[14] = *(_QWORD *)(v5 - 8);
  v17[15] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v17[13] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668910);
  v17[11] = *(_QWORD *)(v7 - 8);
  v17[12] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v17[10] = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668918);
  v17[8] = *(_QWORD *)(v9 - 8);
  v17[9] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v17[7] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668920);
  v17[5] = *(_QWORD *)(v11 - 8);
  v17[6] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v17[4] = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668928);
  v17[2] = *(_QWORD *)(v13 - 8);
  v17[3] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v17[1] = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_255668930);
  MEMORY[0x24BDAC7A8](v17[0]);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668938);
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668940);
  v19 = *(_QWORD *)(v16 - 8);
  v20 = v16;
  MEMORY[0x24BDAC7A8](v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212D3DA0();
  sub_2212F5E38();
  __asm { BR              X10 }
}

uint64_t sub_2212D3B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 72) = 0;
  sub_2212D3FC0();
  v5 = *(_QWORD *)(v4 - 104);
  sub_2212F5C34();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v1, v5);
}

unint64_t sub_2212D3DA0()
{
  unint64_t result;

  result = qword_255668948;
  if (!qword_255668948)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BEC0, &type metadata for StoreKitInternalError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668948);
  }
  return result;
}

unint64_t sub_2212D3DE4()
{
  unint64_t result;

  result = qword_255668950;
  if (!qword_255668950)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BE70, &type metadata for StoreKitInternalError.UserCancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668950);
  }
  return result;
}

unint64_t sub_2212D3E28()
{
  unint64_t result;

  result = qword_255668958;
  if (!qword_255668958)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BE20, &type metadata for StoreKitInternalError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668958);
  }
  return result;
}

unint64_t sub_2212D3E6C()
{
  unint64_t result;

  result = qword_255668960;
  if (!qword_255668960)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BDD0, &type metadata for StoreKitInternalError.UnimplementedFlowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668960);
  }
  return result;
}

unint64_t sub_2212D3EB0()
{
  unint64_t result;

  result = qword_255668968;
  if (!qword_255668968)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BD80, &type metadata for StoreKitInternalError.PurchasesDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668968);
  }
  return result;
}

unint64_t sub_2212D3EF4()
{
  unint64_t result;

  result = qword_255668970;
  if (!qword_255668970)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BD30, &type metadata for StoreKitInternalError.NotEntitledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668970);
  }
  return result;
}

unint64_t sub_2212D3F38()
{
  unint64_t result;

  result = qword_255668978;
  if (!qword_255668978)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BCE0, &type metadata for StoreKitInternalError.NotAvailableInStorefrontCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668978);
  }
  return result;
}

unint64_t sub_2212D3F7C()
{
  unint64_t result;

  result = qword_255668980;
  if (!qword_255668980)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BC90, &type metadata for StoreKitInternalError.InvalidAppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668980);
  }
  return result;
}

unint64_t sub_2212D3FC0()
{
  unint64_t result;

  result = qword_255668988;
  if (!qword_255668988)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BC40, &type metadata for StoreKitInternalError.FeatureDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668988);
  }
  return result;
}

uint64_t StoreKitInternalError.hashValue.getter()
{
  sub_2212F5DD8();
  sub_2212F5DE4();
  return sub_2212F5E08();
}

uint64_t StoreKitInternalError.init(from:)(_QWORD *a1)
{
  return sub_2212D4664(a1);
}

uint64_t sub_2212D405C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2212D4664(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_2212D4084(_QWORD *a1)
{
  unsigned __int8 *v1;

  StoreKitInternalError.encode(to:)(a1, *v1);
}

uint64_t StoreKitServerError.rawValue.getter(char a1)
{
  return qword_22131BF18[a1];
}

BOOL sub_2212D40B4(char *a1, char *a2)
{
  return qword_22131BF18[*a1] == qword_22131BF18[*a2];
}

uint64_t sub_2212D40D8()
{
  sub_2212F5DD8();
  sub_2212F5DE4();
  return sub_2212F5E08();
}

uint64_t sub_2212D4124()
{
  return sub_2212F5DE4();
}

uint64_t sub_2212D4158()
{
  sub_2212F5DD8();
  sub_2212F5DE4();
  return sub_2212F5E08();
}

uint64_t sub_2212D41A0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _s15StoreKit_Shared0aB11ServerErrorO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_2212D41C8(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_22131BF18[*v1];
}

uint64_t sub_2212D41E0()
{
  sub_2212D5848();
  sub_2212D588C();
  return sub_2212F5D9C();
}

uint64_t sub_2212D4224()
{
  sub_2212D5848();
  return sub_2212F5538();
}

uint64_t sub_2212D4280()
{
  sub_2212D5848();
  return sub_2212F552C();
}

uint64_t sub_2212D42CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4465727574616566 && a2 == 0xEF64656C62617369;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4164696C61766E69 && a2 == 0xEA00000000007070 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002212FB500 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7469746E45746F6ELL && a2 == 0xEB0000000064656CLL || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002212FB520 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002212FB540 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x636E614372657375 && a2 == 0xED000064656C6C65)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_2212D4664(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD v31[5];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668A48);
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v48 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668A50);
  v31[4] = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v51 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668A58);
  v39 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668A60);
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668A68);
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v47 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668A70);
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v49 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668A78);
  v33 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v45 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668A80);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668A88);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_2212D3DA0();
  v23 = v53;
  sub_2212F5E2C();
  if (!v23)
  {
    v31[3] = v17;
    v31[1] = v15;
    v31[2] = v14;
    v53 = v19;
    v24 = v21;
    v25 = sub_2212F5C28();
    v26 = v18;
    if (*(_QWORD *)(v25 + 16) == 1)
      __asm { BR              X9 }
    v27 = sub_2212F59C4();
    swift_allocError();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2556688F8);
    *v29 = &type metadata for StoreKitInternalError;
    sub_2212F5BD4();
    sub_2212F59AC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE26D0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v26);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
}

uint64_t _s15StoreKit_Shared0aB11ServerErrorO8rawValueACSgSi_tcfC_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  if (a1 <= 3503)
  {
    if (a1 > 2054)
    {
      switch(a1)
      {
        case 3027:
          return 9;
        case 3028:
        case 3029:
        case 3030:
        case 3031:
        case 3032:
        case 3033:
        case 3034:
        case 3035:
        case 3036:
        case 3037:
        case 3039:
        case 3040:
        case 3041:
        case 3042:
        case 3043:
        case 3044:
        case 3045:
        case 3046:
        case 3047:
        case 3048:
        case 3049:
        case 3050:
        case 3051:
        case 3052:
        case 3053:
        case 3054:
        case 3055:
        case 3056:
        case 3057:
        case 3058:
          return 26;
        case 3038:
          return 10;
        case 3059:
          return 11;
        case 3060:
          return 12;
        default:
          if (a1 == 2055)
          {
            result = 7;
          }
          else
          {
            if (a1 != 3004)
              return 26;
            result = 8;
          }
          break;
      }
    }
    else
    {
      v1 = a1 - 1001;
      result = 1;
      switch(v1)
      {
        case 0:
          result = 0;
          break;
        case 2:
          return result;
        case 3:
          result = 2;
          break;
        case 4:
          result = 3;
          break;
        case 5:
          result = 4;
          break;
        default:
          return 26;
      }
    }
    return result;
  }
  if (a1 <= 3899)
  {
    if (a1 <= 3602)
    {
      if (a1 == 3504)
        return 13;
      if (a1 == 3513)
        return 14;
    }
    else
    {
      switch(a1)
      {
        case 3603:
          return 15;
        case 3604:
          return 16;
        case 3705:
          return 17;
      }
    }
    return 26;
  }
  if (a1 > 500316)
  {
    switch(a1)
    {
      case 500317:
        return 23;
      case 500328:
        return 24;
      case 4000029:
        return 25;
    }
    return 26;
  }
  switch(a1)
  {
    case 3900:
      result = 18;
      break;
    case 3901:
      result = 19;
      break;
    case 3902:
      result = 20;
      break;
    case 3903:
      result = 21;
      break;
    case 3904:
      result = 22;
      break;
    default:
      return 26;
  }
  return result;
}

unint64_t sub_2212D4F14()
{
  unint64_t result;

  result = qword_255668990;
  if (!qword_255668990)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for StoreKitInternalError, &type metadata for StoreKitInternalError);
    atomic_store(result, (unint64_t *)&qword_255668990);
  }
  return result;
}

unint64_t sub_2212D4F5C()
{
  unint64_t result;

  result = qword_255668998;
  if (!qword_255668998)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for StoreKitServerError, &type metadata for StoreKitServerError);
    atomic_store(result, (unint64_t *)&qword_255668998);
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreKitInternalError()
{
  return &type metadata for StoreKitInternalError;
}

uint64_t getEnumTagSinglePayload for StoreKitServerError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreKitServerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_2212D5094 + 4 * byte_22131B56A[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_2212D50C8 + 4 * byte_22131B565[v4]))();
}

uint64_t sub_2212D50C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D50D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212D50D8);
  return result;
}

uint64_t sub_2212D50E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212D50ECLL);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_2212D50F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D50F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StoreKitServerError()
{
  return &type metadata for StoreKitServerError;
}

uint64_t _s15StoreKit_Shared21StoreKitInternalErrorOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s15StoreKit_Shared21StoreKitInternalErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2212D51F0 + 4 * byte_22131B574[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2212D5224 + 4 * byte_22131B56F[v4]))();
}

uint64_t sub_2212D5224(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D522C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212D5234);
  return result;
}

uint64_t sub_2212D5240(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212D5248);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2212D524C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D5254(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.CodingKeys()
{
  return &type metadata for StoreKitInternalError.CodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.FeatureDisabledCodingKeys()
{
  return &type metadata for StoreKitInternalError.FeatureDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.InvalidAppCodingKeys()
{
  return &type metadata for StoreKitInternalError.InvalidAppCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.NotAvailableInStorefrontCodingKeys()
{
  return &type metadata for StoreKitInternalError.NotAvailableInStorefrontCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.NotEntitledCodingKeys()
{
  return &type metadata for StoreKitInternalError.NotEntitledCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.PurchasesDisabledCodingKeys()
{
  return &type metadata for StoreKitInternalError.PurchasesDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.UnimplementedFlowCodingKeys()
{
  return &type metadata for StoreKitInternalError.UnimplementedFlowCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.UnknownCodingKeys()
{
  return &type metadata for StoreKitInternalError.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for StoreKitInternalError.UserCancelledCodingKeys()
{
  return &type metadata for StoreKitInternalError.UserCancelledCodingKeys;
}

unint64_t sub_2212D52F4()
{
  unint64_t result;

  result = qword_2556689A0;
  if (!qword_2556689A0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BC18, &type metadata for StoreKitInternalError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556689A0);
  }
  return result;
}

unint64_t sub_2212D533C()
{
  unint64_t result;

  result = qword_2556689A8;
  if (!qword_2556689A8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BB38, &type metadata for StoreKitInternalError.FeatureDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556689A8);
  }
  return result;
}

unint64_t sub_2212D5384()
{
  unint64_t result;

  result = qword_2556689B0;
  if (!qword_2556689B0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BB60, &type metadata for StoreKitInternalError.FeatureDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556689B0);
  }
  return result;
}

unint64_t sub_2212D53CC()
{
  unint64_t result;

  result = qword_2556689B8;
  if (!qword_2556689B8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BAE8, &type metadata for StoreKitInternalError.InvalidAppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556689B8);
  }
  return result;
}

unint64_t sub_2212D5414()
{
  unint64_t result;

  result = qword_2556689C0;
  if (!qword_2556689C0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BB10, &type metadata for StoreKitInternalError.InvalidAppCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556689C0);
  }
  return result;
}

unint64_t sub_2212D545C()
{
  unint64_t result;

  result = qword_2556689C8;
  if (!qword_2556689C8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BA98, &type metadata for StoreKitInternalError.NotAvailableInStorefrontCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556689C8);
  }
  return result;
}

unint64_t sub_2212D54A4()
{
  unint64_t result;

  result = qword_2556689D0;
  if (!qword_2556689D0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BAC0, &type metadata for StoreKitInternalError.NotAvailableInStorefrontCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556689D0);
  }
  return result;
}

unint64_t sub_2212D54EC()
{
  unint64_t result;

  result = qword_2556689D8;
  if (!qword_2556689D8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BA48, &type metadata for StoreKitInternalError.NotEntitledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556689D8);
  }
  return result;
}

unint64_t sub_2212D5534()
{
  unint64_t result;

  result = qword_2556689E0;
  if (!qword_2556689E0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BA70, &type metadata for StoreKitInternalError.NotEntitledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556689E0);
  }
  return result;
}

unint64_t sub_2212D557C()
{
  unint64_t result;

  result = qword_2556689E8;
  if (!qword_2556689E8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B9F8, &type metadata for StoreKitInternalError.PurchasesDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556689E8);
  }
  return result;
}

unint64_t sub_2212D55C4()
{
  unint64_t result;

  result = qword_2556689F0;
  if (!qword_2556689F0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BA20, &type metadata for StoreKitInternalError.PurchasesDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556689F0);
  }
  return result;
}

unint64_t sub_2212D560C()
{
  unint64_t result;

  result = qword_2556689F8;
  if (!qword_2556689F8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B9A8, &type metadata for StoreKitInternalError.UnimplementedFlowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556689F8);
  }
  return result;
}

unint64_t sub_2212D5654()
{
  unint64_t result;

  result = qword_255668A00;
  if (!qword_255668A00)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B9D0, &type metadata for StoreKitInternalError.UnimplementedFlowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668A00);
  }
  return result;
}

unint64_t sub_2212D569C()
{
  unint64_t result;

  result = qword_255668A08;
  if (!qword_255668A08)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B958, &type metadata for StoreKitInternalError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668A08);
  }
  return result;
}

unint64_t sub_2212D56E4()
{
  unint64_t result;

  result = qword_255668A10;
  if (!qword_255668A10)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B980, &type metadata for StoreKitInternalError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668A10);
  }
  return result;
}

unint64_t sub_2212D572C()
{
  unint64_t result;

  result = qword_255668A18;
  if (!qword_255668A18)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B908, &type metadata for StoreKitInternalError.UserCancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668A18);
  }
  return result;
}

unint64_t sub_2212D5774()
{
  unint64_t result;

  result = qword_255668A20;
  if (!qword_255668A20)
  {
    result = MEMORY[0x22766BAC4](&unk_22131B930, &type metadata for StoreKitInternalError.UserCancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668A20);
  }
  return result;
}

unint64_t sub_2212D57BC()
{
  unint64_t result;

  result = qword_255668A28;
  if (!qword_255668A28)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BB88, &type metadata for StoreKitInternalError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668A28);
  }
  return result;
}

unint64_t sub_2212D5804()
{
  unint64_t result;

  result = qword_255668A30;
  if (!qword_255668A30)
  {
    result = MEMORY[0x22766BAC4](&unk_22131BBB0, &type metadata for StoreKitInternalError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668A30);
  }
  return result;
}

unint64_t sub_2212D5848()
{
  unint64_t result;

  result = qword_255668A38;
  if (!qword_255668A38)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for StoreKitServerError, &type metadata for StoreKitServerError);
    atomic_store(result, (unint64_t *)&qword_255668A38);
  }
  return result;
}

unint64_t sub_2212D588C()
{
  unint64_t result;

  result = qword_255668A40;
  if (!qword_255668A40)
  {
    result = MEMORY[0x22766BAC4](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_255668A40);
  }
  return result;
}

char *sub_2212D58D0()
{
  uint64_t v0;
  uint64_t v1;
  char *result;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_2212F5868();
  if (v0)
  {
    v1 = v0;
    v11 = MEMORY[0x24BEE4AF8];
    result = sub_2212DC338(0, v0 & ~(v0 >> 63), 0);
    if ((v1 & 0x8000000000000000) == 0)
    {
      while (1)
      {
        v4 = sub_2212F5874();
        v5 = v3;
        if (v4 == 45 && v3 == 0xE100000000000000)
        {
          v5 = 0xE100000000000000;
          swift_bridgeObjectRelease();
          v4 = 43;
        }
        else if ((sub_2212F5CDC() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v5 = 0xE100000000000000;
          v4 = 43;
        }
        else
        {
          if (v4 == 95 && v5 == 0xE100000000000000)
          {
            v5 = 0xE100000000000000;
            swift_bridgeObjectRelease();
LABEL_13:
            v4 = 47;
            goto LABEL_14;
          }
          if ((sub_2212F5CDC() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v5 = 0xE100000000000000;
            goto LABEL_13;
          }
        }
LABEL_14:
        v7 = *(_QWORD *)(v11 + 16);
        v6 = *(_QWORD *)(v11 + 24);
        if (v7 >= v6 >> 1)
          sub_2212DC338((char *)(v6 > 1), v7 + 1, 1);
        *(_QWORD *)(v11 + 16) = v7 + 1;
        v8 = v11 + 16 * v7;
        *(_QWORD *)(v8 + 32) = v4;
        *(_QWORD *)(v8 + 40) = v5;
        sub_2212F585C();
        if (!--v1)
          goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668A90);
    sub_2212D5FD4();
    v12 = sub_2212F5490();
    swift_bridgeObjectRetain();
    v9 = sub_2212F53E8();
    swift_bridgeObjectRelease();
    v10 = v9 & 3;
    if (v9 <= 0)
      v10 = -(-v9 & 3);
    if (v10)
    {
      MEMORY[0x22766AAA4](61, 0xE100000000000000, 4 - v10);
      sub_2212F540C();
      swift_bridgeObjectRelease();
    }
    return (char *)v12;
  }
  return result;
}

Swift::String __swiftcall StringProtocol.base64URLEncodedToBase64()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  Swift::String result;
  uint64_t v9;
  void *v10;

  sub_2212D5CE4((void (*)(char *, char *))sub_2212D5C2C, 0, v0, MEMORY[0x24BEE0718], MEMORY[0x24BEE4078], *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8), MEMORY[0x24BEE40A8], v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255668A90);
  sub_2212D5FD4();
  v9 = sub_2212F5490();
  v10 = v3;
  swift_bridgeObjectRetain();
  v4 = sub_2212F53E8();
  swift_bridgeObjectRelease();
  v5 = v4 & 3;
  if (v4 <= 0)
    v5 = -(-v4 & 3);
  if (v5)
  {
    MEMORY[0x22766AAA4](61, 0xE100000000000000, 4 - v5);
    sub_2212F540C();
    swift_bridgeObjectRelease();
  }
  v6 = v9;
  v7 = v10;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t sub_2212D5C2C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  BOOL v6;

  v4 = *(_QWORD *)result;
  v3 = *(_QWORD *)(result + 8);
  v5 = *(_QWORD *)result == 45 && v3 == 0xE100000000000000;
  if (v5 || (result = sub_2212F5CDC(), (result & 1) != 0))
  {
    *a2 = 43;
    a2[1] = 0xE100000000000000;
  }
  else
  {
    v6 = v4 == 95 && v3 == 0xE100000000000000;
    if (v6 || (result = sub_2212F5CDC(), (result & 1) != 0))
    {
      *a2 = 47;
      a2[1] = 0xE100000000000000;
    }
    else
    {
      *a2 = v4;
      a2[1] = v3;
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

uint64_t sub_2212D5CE4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v29 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_2212F56E8();
  if (!v20)
    return sub_2212F558C();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_2212F5A24();
  v34 = sub_2212F5A30();
  sub_2212F5A00();
  v37 = v8;
  result = sub_2212F56D0();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_2212F57A8();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v13);
      v24(v43, 0);
      v28 = v42;
      v38(v13, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
      sub_2212F5A0C();
      result = sub_2212F5730();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_2212D5FD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255668A98;
  if (!qword_255668A98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255668A90);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_255668A98);
  }
  return result;
}

uint64_t Data.init<A>(base64URLEncoded:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  StringProtocol.base64URLEncodedToBase64()();
  v5 = sub_2212F2A60();
  v7 = v6;
  swift_bridgeObjectRelease();
  sub_2212CDDC4(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  if (v7 >> 60 != 15)
    sub_22108E010(v5, v7);
  return v5;
}

uint64_t LazyJWS.rawHeader.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LazyJWS.rawPayload.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LazyJWS.rawSignature.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LazyJWS.init(rawValue:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD v5[12];

  sub_2212D6338(a1, a2, v5);
  return sub_2212D6470((uint64_t)v5, a3);
}

uint64_t LazyJWS.rawValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LazyJWS.payloadJSONString.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_2212F53A0();
  MEMORY[0x24BDAC7A8](v0);
  swift_bridgeObjectRetain();
  sub_2212D58D0();
  v1 = sub_2212F2A60();
  v3 = v2;
  swift_bridgeObjectRelease();
  sub_2212CDDC4(v1, v3);
  swift_bridgeObjectRelease();
  v4 = 0;
  if (v3 >> 60 != 15)
  {
    sub_22108E010(v1, v3);
    sub_2212F5394();
    v4 = sub_2212F5388();
    sub_22108E010(v1, v3);
  }
  return v4;
}

uint64_t sub_2212D62EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v4[12];

  sub_2212D6338(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v4);
  return sub_2212D6470((uint64_t)v4, a2);
}

uint64_t sub_2212D632C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2212D6338@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[16];
  _QWORD *v21;
  _QWORD v22[2];

  v22[0] = 46;
  v22[1] = 0xE100000000000000;
  v21 = v22;
  swift_bridgeObjectRetain();
  v6 = sub_2212DC6AC(3, 1, sub_2212D6748, (uint64_t)v20, a1, a2);
  swift_bridgeObjectRelease();
  v18 = 0;
  v19 = 0;
  v16 = 0;
  v17 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = 0;
  if (*((_QWORD *)v6 + 2) == 3)
  {
    v18 = *((_QWORD *)v6 + 5);
    v19 = *((_QWORD *)v6 + 4);
    v7 = *((_QWORD *)v6 + 7);
    v10 = *((_QWORD *)v6 + 11);
    v16 = *((_QWORD *)v6 + 10);
    v17 = *((_QWORD *)v6 + 6);
    v8 = *((_QWORD *)v6 + 8);
    v9 = *((_QWORD *)v6 + 9);
    v11 = *((_QWORD *)v6 + 12);
    v12 = *((_QWORD *)v6 + 13);
    v13 = *((_QWORD *)v6 + 14);
    v14 = *((_QWORD *)v6 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  result = swift_bridgeObjectRelease();
  *a3 = v19;
  a3[1] = v18;
  a3[2] = v17;
  a3[3] = v7;
  a3[4] = v8;
  a3[5] = v9;
  a3[6] = v16;
  a3[7] = v10;
  a3[8] = v11;
  a3[9] = v12;
  a3[10] = v13;
  a3[11] = v14;
  return result;
}

uint64_t sub_2212D6470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for LazyJWS()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LazyJWS(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LazyJWS(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8_0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for LazyJWS(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LazyJWS(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LazyJWS(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyJWS()
{
  return &type metadata for LazyJWS;
}

uint64_t sub_2212D6748(_QWORD *a1)
{
  uint64_t v1;

  return sub_2212DCCD0(a1, *(_QWORD **)(v1 + 16)) & 1;
}

void sub_2212D6764(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2212D67AC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2212D6810 + 4 * byte_22131C044[a2]))(0x49746375646F7270);
}

uint64_t sub_2212D6810(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x49746375646F7270 && v1 == 0xE900000000000044)
    v2 = 1;
  else
    v2 = sub_2212F5CDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_2212D68B8(char *a1)
{
  sub_2212D6764(*a1);
}

void sub_2212D68C4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_2212F5DD8();
  __asm { BR              X9 }
}

uint64_t sub_2212D690C()
{
  sub_2212F53DC();
  swift_bridgeObjectRelease();
  return sub_2212F5E08();
}

void sub_2212D697C()
{
  __asm { BR              X10 }
}

uint64_t sub_2212D69B4()
{
  sub_2212F53DC();
  return swift_bridgeObjectRelease();
}

void sub_2212D6A10()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_2212F5DD8();
  __asm { BR              X9 }
}

uint64_t sub_2212D6A54()
{
  sub_2212F53DC();
  swift_bridgeObjectRelease();
  return sub_2212F5E08();
}

uint64_t sub_2212D6AC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2212D8D38();
  *a1 = result;
  return result;
}

uint64_t sub_2212D6AF0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_2212D6B1C + 4 * byte_22131C054[*v0]))();
}

void sub_2212D6B1C(_QWORD *a1@<X8>)
{
  *a1 = 0x49746375646F7270;
  a1[1] = 0xE900000000000044;
}

void sub_2212D6B3C(_QWORD *a1@<X8>)
{
  *a1 = 0x69666F725079656BLL;
  a1[1] = 0xEA0000000000656CLL;
}

void sub_2212D6B5C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x736D61726170;
  a1[1] = v1;
}

uint64_t sub_2212D6B70()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212D6B9C + 4 * byte_22131C058[*v0]))(0x79654B676F6CLL, 0xE600000000000000);
}

uint64_t sub_2212D6B9C()
{
  return 0x49746375646F7270;
}

uint64_t sub_2212D6BB8()
{
  return 0x69666F725079656BLL;
}

uint64_t sub_2212D6BD4()
{
  return 0x736D61726170;
}

uint64_t sub_2212D6BE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2212D8D38();
  *a1 = result;
  return result;
}

uint64_t sub_2212D6C08()
{
  sub_2212D6F60();
  return sub_2212F5E50();
}

uint64_t sub_2212D6C30()
{
  sub_2212D6F60();
  return sub_2212F5E5C();
}

uint64_t ProductPageLookupRequest.ParameterRequest.logKey.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductPageLookupRequest.ParameterRequest.productID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductPageLookupRequest.ParameterRequest.keyProfile.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductPageLookupRequest.ParameterRequest.parameters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ProductPageLookupRequest.ParameterRequest.init(productID:logKey:keyProfile:parameters:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  *a8 = a3;
  a8[1] = a4;
  a8[2] = result;
  a8[3] = a2;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t ProductPageLookupRequest.ParameterRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _BYTE v16[8];
  id v17[3];

  v17[2] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668AA8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212D6F60();
  sub_2212F5E38();
  LOBYTE(v17[0]) = 1;
  sub_2212F5C64();
  if (v1)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  LOBYTE(v17[0]) = 0;
  sub_2212F5C64();
  LOBYTE(v17[0]) = 2;
  sub_2212F5C64();
  v8 = (void *)objc_opt_self();
  v9 = (void *)sub_2212F51FC();
  v17[0] = 0;
  v10 = objc_msgSend(v8, sel_dataWithJSONObject_options_error_, v9, 0, v17);

  v11 = v17[0];
  if (!v10)
  {
    v15 = v11;
    sub_2212F297C();

    swift_willThrow();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
  v12 = (void *)sub_2212F2AC0();
  v14 = v13;

  v17[0] = v12;
  v17[1] = v14;
  v16[7] = 3;
  sub_2212CE788();
  sub_2212F5C7C();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  return sub_221054AE8((uint64_t)v12, (unint64_t)v14);
}

unint64_t sub_2212D6F60()
{
  unint64_t result;

  result = qword_255668AB0;
  if (!qword_255668AB0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C37C, &type metadata for ProductPageLookupRequest.ParameterRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668AB0);
  }
  return result;
}

double ProductPageLookupRequest.ParameterRequest.init(from:)@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_2212D8D80(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 48) = v8;
  }
  return result;
}

double sub_2212D6FF0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_2212D8D80(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_2212D703C(_QWORD *a1)
{
  return ProductPageLookupRequest.ParameterRequest.encode(to:)(a1);
}

uint64_t ProductPageLookupRequest.URLRequest.productID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductPageLookupRequest.URLRequest.logKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductPageLookupRequest.URLRequest.keyProfile.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductPageLookupRequest.URLRequest.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ProductPageLookupRequest.URLRequest() + 28);
  v4 = sub_2212F2A24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ProductPageLookupRequest.URLRequest.init(productID:url:keyProfile:logKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  char *v12;
  uint64_t v13;
  uint64_t result;

  a8[2] = a6;
  a8[3] = a7;
  a8[4] = a4;
  a8[5] = a5;
  v12 = (char *)a8 + *(int *)(type metadata accessor for ProductPageLookupRequest.URLRequest() + 28);
  v13 = sub_2212F2A24();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a3, v13);
  *a8 = a1;
  a8[1] = a2;
  return result;
}

uint64_t ProductPageLookupRequest.URLRequest.parameters.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  void (*v49)(char *, unint64_t, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  _OWORD v52[2];
  __int128 v53;
  __int128 v54;
  _BYTE v55[48];

  v1 = v0;
  v2 = sub_2212F2868();
  v50 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668AB8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BEE4AF8];
  v9 = (_QWORD *)sub_2212D7688(MEMORY[0x24BEE4AF8]);
  type metadata accessor for ProductPageLookupRequest.URLRequest();
  sub_2212F2880();
  v10 = sub_2212F288C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) != 1)
  {
    v37 = sub_2212F2874();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    if (v37)
      v12 = v37;
    else
      v12 = v8;
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
      goto LABEL_3;
LABEL_31:
    swift_bridgeObjectRelease();
LABEL_32:
    *(_QWORD *)&v53 = 25705;
    *((_QWORD *)&v53 + 1) = 0xE200000000000000;
    v38 = MEMORY[0x24BEE0D00];
    sub_2212F5934();
    if (v9[2] && (v39 = sub_2211D368C((uint64_t)v55), (v40 & 1) != 0))
    {
      sub_2211164A4(v9[7] + 32 * v39, (uint64_t)&v53);
    }
    else
    {
      v53 = 0u;
      v54 = 0u;
    }
    sub_22116E7BC((uint64_t)v55);
    v41 = *((_QWORD *)&v54 + 1);
    sub_2210A577C((uint64_t)&v53, &qword_255668AC0);
    if (!v41)
    {
      *(_QWORD *)&v53 = 25705;
      *((_QWORD *)&v53 + 1) = 0xE200000000000000;
      sub_2212F5934();
      v42 = *v1;
      v43 = v1[1];
      *((_QWORD *)&v54 + 1) = v38;
      *(_QWORD *)&v53 = v42;
      *((_QWORD *)&v53 + 1) = v43;
      sub_2212B8008(&v53, v52);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v51 = v9;
      sub_2212D87EC(v52, (uint64_t)v55, isUniquelyReferenced_nonNull_native);
      v9 = v51;
      swift_bridgeObjectRelease();
      sub_22116E7BC((uint64_t)v55);
    }
    return (uint64_t)v9;
  }
  sub_2210A577C((uint64_t)v7, &qword_255668AB8);
  v12 = MEMORY[0x24BEE4AF8];
  v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (!v13)
    goto LABEL_31;
LABEL_3:
  v46 = v12;
  v47 = v1;
  v14 = v12 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
  v48 = *(_QWORD *)(v50 + 72);
  v15 = MEMORY[0x24BEE0D00];
  v49 = *(void (**)(char *, unint64_t, uint64_t))(v50 + 16);
  v49(v4, v14, v2);
  while (1)
  {
    *(_QWORD *)&v53 = sub_2212F2850();
    *((_QWORD *)&v53 + 1) = v17;
    sub_2212F5934();
    v18 = sub_2212F285C();
    if (v19)
      break;
    swift_bridgeObjectRetain();
    v30 = sub_2211D368C((uint64_t)v55);
    v32 = v31;
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
    {
      v33 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v52[0] = v9;
      if ((v33 & 1) == 0)
      {
        sub_2212D899C();
        v9 = *(_QWORD **)&v52[0];
      }
      sub_22116E7BC(v9[6] + 40 * v30);
      sub_2212B8008((_OWORD *)(v9[7] + 32 * v30), &v53);
      sub_2212D8624(v30, (uint64_t)v9);
      swift_bridgeObjectRelease();
    }
    else
    {
      v53 = 0u;
      v54 = 0u;
    }
    sub_22116E7BC((uint64_t)v55);
    sub_2210A577C((uint64_t)&v53, &qword_255668AC0);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v50 + 8))(v4, v2);
    v14 += v48;
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      v1 = v47;
      goto LABEL_32;
    }
    v49(v4, v14, v2);
  }
  v20 = v15;
  *((_QWORD *)&v54 + 1) = v15;
  *(_QWORD *)&v53 = v18;
  *((_QWORD *)&v53 + 1) = v19;
  sub_2212B8008(&v53, v52);
  v21 = swift_isUniquelyReferenced_nonNull_native();
  v51 = v9;
  v23 = sub_2211D368C((uint64_t)v55);
  v24 = v9[2];
  v25 = (v22 & 1) == 0;
  v26 = v24 + v25;
  if (!__OFADD__(v24, v25))
  {
    v27 = v22;
    if (v9[3] < v26)
    {
      sub_2212D7FEC(v26, v21);
      v28 = sub_2211D368C((uint64_t)v55);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_41;
      v23 = v28;
      v9 = v51;
      if ((v27 & 1) == 0)
        goto LABEL_20;
LABEL_4:
      v16 = (_OWORD *)(v9[7] + 32 * v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      sub_2212B8008(v52, v16);
LABEL_5:
      swift_bridgeObjectRelease();
      sub_22116E7BC((uint64_t)v55);
      v15 = v20;
      goto LABEL_6;
    }
    if ((v21 & 1) != 0)
    {
      v9 = v51;
      if ((v22 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      sub_2212D899C();
      v9 = v51;
      if ((v27 & 1) != 0)
        goto LABEL_4;
    }
LABEL_20:
    v9[(v23 >> 6) + 8] |= 1 << v23;
    sub_221014E3C((uint64_t)v55, v9[6] + 40 * v23);
    sub_2212B8008(v52, (_OWORD *)(v9[7] + 32 * v23));
    v34 = v9[2];
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
      goto LABEL_40;
    v9[2] = v36;
    goto LABEL_5;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  result = sub_2212F5D3C();
  __break(1u);
  return result;
}

unint64_t sub_2212D7688(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255668BB8);
  v2 = sub_2212F5B20();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2212DA080(v6, (uint64_t)v15);
    result = sub_2211D368C((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_2212B8008(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2212D77B4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255668BB0);
  v2 = (_QWORD *)sub_2212F5B20();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_2212D7F88(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t static ProductPageLookupRequest.URLRequest.productID(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v0 = sub_2212F2838();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v14 - v5;
  v14[0] = sub_2212F29DC();
  v14[1] = v7;
  sub_2212F2820();
  sub_2212F282C();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_2212D9398();
  v9 = sub_2212F58B0();
  v11 = v10;
  v8(v3, v0);
  swift_bridgeObjectRelease();
  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v12)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

uint64_t sub_2212D79EC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212D7A20 + 4 * byte_22131C05C[*v0]))(0x49746375646F7270, 0xE900000000000044);
}

uint64_t sub_2212D7A20()
{
  return 0x79654B676F6CLL;
}

uint64_t sub_2212D7A34()
{
  return 0x69666F725079656BLL;
}

uint64_t sub_2212D7A50()
{
  return 7107189;
}

uint64_t sub_2212D7A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212D9EC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212D7A84()
{
  sub_2212D93DC();
  return sub_2212F5E50();
}

uint64_t sub_2212D7AAC()
{
  sub_2212D93DC();
  return sub_2212F5E5C();
}

uint64_t ProductPageLookupRequest.URLRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668AD0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212D93DC();
  sub_2212F5E38();
  v8[15] = 0;
  sub_2212F5C64();
  if (!v1)
  {
    v8[14] = 1;
    sub_2212F5C64();
    v8[13] = 2;
    sub_2212F5C64();
    type metadata accessor for ProductPageLookupRequest.URLRequest();
    v8[12] = 3;
    sub_2212F2A24();
    sub_2212D9420(&qword_2556685C8, MEMORY[0x24BDCDAE0]);
    sub_2212F5C7C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ProductPageLookupRequest.URLRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v22 = a2;
  v23 = sub_2212F2A24();
  v21 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v24 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668AE0);
  v4 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ProductPageLookupRequest.URLRequest();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212D93DC();
  v10 = v26;
  sub_2212F5E2C();
  if (v10)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v26 = v7;
  v11 = v4;
  v12 = v24;
  v13 = v25;
  v30 = 0;
  v14 = (uint64_t)v9;
  *v9 = sub_2212F5C04();
  v9[1] = v15;
  v29 = 1;
  v9[2] = sub_2212F5C04();
  v9[3] = v16;
  v28 = 2;
  v9[4] = sub_2212F5C04();
  v9[5] = v17;
  v27 = 3;
  sub_2212D9420(&qword_255668598, MEMORY[0x24BDCDB10]);
  v18 = v12;
  v19 = v23;
  sub_2212F5C1C();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v14 + *(int *)(v26 + 28), v18, v19);
  sub_2212D9460(v14, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_2212D94A4(v14);
}

uint64_t sub_2212D7F60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ProductPageLookupRequest.URLRequest.init(from:)(a1, a2);
}

uint64_t sub_2212D7F74(_QWORD *a1)
{
  return ProductPageLookupRequest.URLRequest.encode(to:)(a1);
}

unint64_t sub_2212D7F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2212F5DD8();
  sub_2212F53DC();
  v4 = sub_2212F5E08();
  return sub_2211D36BC(a1, a2, v4);
}

uint64_t sub_2212D7FEC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255668BB8);
  v6 = sub_2212F5B14();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_2212B8008((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_221014E3C(v25, (uint64_t)&v38);
      sub_2211164A4(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_2212F5904();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_2212B8008(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2212D8300(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255668BB0);
  v42 = a2;
  v6 = sub_2212F5B14();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2212F5DD8();
    sub_2212F53DC();
    result = sub_2212F5E08();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_2212D8624(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2212F58EC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_221014E3C(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = sub_2212F5904();
        result = sub_22116E7BC((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_2212D87EC(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_2211D368C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_2212B8008(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2212D899C();
      goto LABEL_7;
    }
    sub_2212D7FEC(v13, a3 & 1);
    v19 = sub_2211D368C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_221014E3C(a2, (uint64_t)v21);
      return sub_2212D8924(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_2212F5D3C();
  __break(1u);
  return result;
}

_OWORD *sub_2212D8924(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_2212B8008(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

void *sub_2212D899C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255668BB8);
  v2 = *v0;
  v3 = sub_2212F5B08();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_221014E3C(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_2211164A4(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_2212B8008(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2212D8B80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255668BB0);
  v2 = *v0;
  v3 = sub_2212F5B08();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2212D8D38()
{
  unint64_t v0;

  v0 = sub_2212F5BBC();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_2212D8D80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t *v59;
  unint64_t v60;
  uint64_t v61;

  v54 = a2;
  v61 = *MEMORY[0x24BDAC8D0];
  v3 = sub_2212F59B8();
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668BC8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_2212D6F60();
  v11 = v57;
  sub_2212F5E2C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v53 = v10;
  v57 = v5;
  v13 = (uint64_t)a1;
  v14 = v56;
  v15 = v7;
  LOBYTE(v59) = 0;
  v16 = v9;
  v17 = sub_2212F5C04();
  v18 = v6;
  v20 = v19;
  v50 = v17;
  LOBYTE(v59) = 1;
  swift_bridgeObjectRetain();
  v21 = sub_2212F5C04();
  v51 = v22;
  v52 = v13;
  v47 = v21;
  LOBYTE(v59) = 2;
  swift_bridgeObjectRetain();
  v48 = 0;
  v46 = sub_2212F5C04();
  LOBYTE(v58) = 3;
  v24 = v23;
  sub_2212CEC2C();
  v49 = v24;
  swift_bridgeObjectRetain();
  sub_2212F5C1C();
  v45 = v16;
  v27 = v59;
  v26 = v60;
  v28 = (void *)objc_opt_self();
  v44 = v26;
  v29 = (void *)sub_2212F2A9C();
  v59 = 0;
  v30 = objc_msgSend(v28, sel_JSONObjectWithData_options_error_, v29, 0, &v59);

  if (v30)
  {
    v31 = v59;
    sub_2212F58BC();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668BD0);
    v32 = swift_dynamicCast();
    v33 = v51;
    if ((v32 & 1) != 0)
    {
      sub_221054AE8((uint64_t)v27, v44);
      v34 = v58;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v45, v18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v52);
      swift_bridgeObjectRelease();
      v35 = v49;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v36 = v54;
      *v54 = v50;
      v36[1] = v20;
      v36[2] = v47;
      v36[3] = v33;
      v36[4] = v46;
      v36[5] = v35;
      v36[6] = v34;
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2556688D0);
    v38 = swift_allocObject();
    v54 = v27;
    *(_OWORD *)(v38 + 16) = xmmword_2212FF8E0;
    v39 = v53;
    *(_QWORD *)(v38 + 56) = &type metadata for ProductPageLookupRequest.ParameterRequest.CodingKeys;
    *(_QWORD *)(v38 + 64) = v39;
    *(_BYTE *)(v38 + 32) = 3;
    v59 = 0;
    v60 = 0xE000000000000000;
    sub_2212F5964();
    swift_bridgeObjectRelease();
    sub_2212F59AC();
    v40 = sub_2212F59C4();
    swift_allocError();
    v42 = v41;
    v43 = v55;
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 16))(v41, v57, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v42, *MEMORY[0x24BEE26D8], v40);
    swift_willThrow();
    sub_221054AE8((uint64_t)v54, v44);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v57, v14);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v45, v18);
    v25 = v48;
  }
  else
  {
    v37 = v59;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2212F297C();

    swift_willThrow();
    sub_221054AE8((uint64_t)v27, v44);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v45, v18);
    v25 = v48;
    v13 = v52;
  }
  __swift_destroy_boxed_opaque_existential_1(v13);
  swift_bridgeObjectRelease();
  if (!v25)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ProductPageLookupRequest.URLRequest()
{
  uint64_t result;

  result = qword_255668B40;
  if (!qword_255668B40)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2212D9398()
{
  unint64_t result;

  result = qword_255668AC8;
  if (!qword_255668AC8)
  {
    result = MEMORY[0x22766BAC4](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_255668AC8);
  }
  return result;
}

unint64_t sub_2212D93DC()
{
  unint64_t result;

  result = qword_255668AD8;
  if (!qword_255668AD8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C32C, &type metadata for ProductPageLookupRequest.URLRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668AD8);
  }
  return result;
}

uint64_t sub_2212D9420(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2212F2A24();
    result = MEMORY[0x22766BAC4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2212D9460(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ProductPageLookupRequest.URLRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2212D94A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ProductPageLookupRequest.URLRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for ProductPageLookupRequest()
{
  return &type metadata for ProductPageLookupRequest;
}

uint64_t destroy for ProductPageLookupRequest.ParameterRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ProductPageLookupRequest.ParameterRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ProductPageLookupRequest.ParameterRequest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ProductPageLookupRequest.ParameterRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductPageLookupRequest.ParameterRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductPageLookupRequest.ParameterRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductPageLookupRequest.ParameterRequest()
{
  return &type metadata for ProductPageLookupRequest.ParameterRequest;
}

uint64_t *initializeBufferWithCopyOfBuffer for ProductPageLookupRequest.URLRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a2 + v8;
    v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    v11 = sub_2212F2A24();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for ProductPageLookupRequest.URLRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_2212F2A24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ProductPageLookupRequest.URLRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a2 + v7;
  v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_2212F2A24();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

_QWORD *assignWithCopy for ProductPageLookupRequest.URLRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2212F2A24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ProductPageLookupRequest.URLRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2212F2A24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for ProductPageLookupRequest.URLRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_2212F2A24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductPageLookupRequest.URLRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212D9AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2212F2A24();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ProductPageLookupRequest.URLRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212D9B48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2212F2A24();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2212D9BBC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F2A24();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProductPageLookupRequest.URLRequest.CodingKeys()
{
  return &type metadata for ProductPageLookupRequest.URLRequest.CodingKeys;
}

uint64_t _s15StoreKit_Shared24ProductPageLookupRequestV10URLRequestV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2212D9C98 + 4 * byte_22131C065[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2212D9CCC + 4 * byte_22131C060[v4]))();
}

uint64_t sub_2212D9CCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D9CD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212D9CDCLL);
  return result;
}

uint64_t sub_2212D9CE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212D9CF0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2212D9CF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212D9CFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProductPageLookupRequest.ParameterRequest.CodingKeys()
{
  return &type metadata for ProductPageLookupRequest.ParameterRequest.CodingKeys;
}

unint64_t sub_2212D9D1C()
{
  unint64_t result;

  result = qword_255668B80;
  if (!qword_255668B80)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C24C, &type metadata for ProductPageLookupRequest.ParameterRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668B80);
  }
  return result;
}

unint64_t sub_2212D9D64()
{
  unint64_t result;

  result = qword_255668B88;
  if (!qword_255668B88)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C304, &type metadata for ProductPageLookupRequest.URLRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668B88);
  }
  return result;
}

unint64_t sub_2212D9DAC()
{
  unint64_t result;

  result = qword_255668B90;
  if (!qword_255668B90)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C274, &type metadata for ProductPageLookupRequest.URLRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668B90);
  }
  return result;
}

unint64_t sub_2212D9DF4()
{
  unint64_t result;

  result = qword_255668B98;
  if (!qword_255668B98)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C29C, &type metadata for ProductPageLookupRequest.URLRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668B98);
  }
  return result;
}

unint64_t sub_2212D9E3C()
{
  unint64_t result;

  result = qword_255668BA0;
  if (!qword_255668BA0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C184, &type metadata for ProductPageLookupRequest.ParameterRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668BA0);
  }
  return result;
}

unint64_t sub_2212D9E84()
{
  unint64_t result;

  result = qword_255668BA8;
  if (!qword_255668BA8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C1AC, &type metadata for ProductPageLookupRequest.ParameterRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668BA8);
  }
  return result;
}

uint64_t sub_2212D9EC8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x49746375646F7270 && a2 == 0xE900000000000044;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69666F725079656BLL && a2 == 0xEA0000000000656CLL || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2212DA080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ProductResponse.Key.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212DA100 + 4 * byte_22131C3CC[a1]))(0x6B726F77747261, 0xE700000000000000);
}

uint64_t sub_2212DA100()
{
  return 0x7475626972747461;
}

uint64_t sub_2212DA11C()
{
  return 0x79636E6572727563;
}

uint64_t sub_2212DA13C()
{
  return 0x7470697263736564;
}

uint64_t sub_2212DA15C()
{
  return 0x746E756F63736964;
}

uint64_t sub_2212DA17C()
{
  return 1701667182;
}

uint64_t sub_2212DA18C()
{
  return 0x726F466563697270;
}

uint64_t sub_2212DA1B0()
{
  return 0x6F43646574736F68;
}

uint64_t sub_2212DA1D4()
{
  return 0x6E6F6973726576;
}

uint64_t sub_2212DA1E8()
{
  return 1702521203;
}

unint64_t sub_2212DA1F8()
{
  return 0xD000000000000011;
}

uint64_t sub_2212DA360()
{
  return 1701869940;
}

uint64_t sub_2212DA370(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = ProductResponse.Key.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == ProductResponse.Key.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_2212F5CDC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2212DA3F8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2212F5DD8();
  ProductResponse.Key.rawValue.getter(v1);
  sub_2212F53DC();
  swift_bridgeObjectRelease();
  return sub_2212F5E08();
}

uint64_t sub_2212DA458()
{
  unsigned __int8 *v0;

  ProductResponse.Key.rawValue.getter(*v0);
  sub_2212F53DC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2212DA498()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_2212F5DD8();
  ProductResponse.Key.rawValue.getter(v1);
  sub_2212F53DC();
  swift_bridgeObjectRelease();
  return sub_2212F5E08();
}

uint64_t sub_2212DA4F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s15StoreKit_Shared15ProductResponseV3KeyO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_2212DA520@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = ProductResponse.Key.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t ProductResponse.serverCorrelationID.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t ProductResponse.products.getter()
{
  return swift_bridgeObjectRetain();
}

StoreKit_Shared::ProductResponse __swiftcall ProductResponse.init(products:serverCorrelationID:)(Swift::OpaquePointer products, Swift::String_optional serverCorrelationID)
{
  uint64_t countAndFlagsBits;
  void *object;
  void *rawValue;
  StoreKit_Shared::ProductResponse result;

  countAndFlagsBits = serverCorrelationID.value._countAndFlagsBits;
  object = serverCorrelationID.value._object;
  rawValue = products._rawValue;
  result.products._rawValue = rawValue;
  result.serverCorrelationID.value._object = object;
  result.serverCorrelationID.value._countAndFlagsBits = countAndFlagsBits;
  return result;
}

uint64_t ProductResponse.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_2212DA9A8(a1);
  if (v1)
    return v3;
  return result;
}

uint64_t ProductResponse.encode(to:)(_QWORD *a1, void *a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  unint64_t v15;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  char v22;
  id v23;
  unint64_t v24;
  uint64_t v25;

  v21 = a2;
  v25 = *MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668BD8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2556688C8);
  v11 = (void *)sub_2212F5550();
  v23 = 0;
  v12 = objc_msgSend(v10, sel_dataWithJSONObject_options_error_, v11, 0, &v23);

  v13 = v23;
  if (v12)
  {
    v14 = (void *)sub_2212F2AC0();
    v20 = v15;

    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2212DAE60();
    sub_2212F5E38();
    v23 = v21;
    v24 = a3;
    v22 = 0;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668BE8);
    sub_2212DB3D4(&qword_255668BF0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE4AA8]);
    sub_2212F5C7C();
    if (v3)
    {
      sub_221054AE8((uint64_t)v14, v20);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      swift_bridgeObjectRelease();
      v18 = (uint64_t)v14;
      v23 = v14;
      v19 = v20;
      v24 = v20;
      v22 = 1;
      sub_2212CE788();
      sub_2212F5C7C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return sub_221054AE8(v18, v19);
    }
  }
  else
  {
    v17 = v13;
    sub_2212F297C();

    return swift_willThrow();
  }
}

BOOL sub_2212DA844(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2212DA85C()
{
  _BYTE *v0;

  if (*v0)
    return 0x73746375646F7270;
  else
    return 0xD000000000000013;
}

uint64_t sub_2212DA89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212DB2E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212DA8C0()
{
  sub_2212DAE60();
  return sub_2212F5E50();
}

uint64_t sub_2212DA8E8()
{
  sub_2212DAE60();
  return sub_2212F5E5C();
}

uint64_t sub_2212DA910@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_2212DA9A8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_2212DA93C(_QWORD *a1)
{
  uint64_t v1;

  return ProductResponse.encode(to:)(a1, *(void **)v1, *(_QWORD *)(v1 + 8));
}

uint64_t _s15StoreKit_Shared15ProductResponseV3KeyO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_2212F5D00();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1B)
    return 27;
  else
    return v0;
}

uint64_t sub_2212DA9A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _QWORD *v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v34 = sub_2212F59B8();
  v2 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668C18);
  v5 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = sub_2212DAE60();
  v9 = v36;
  sub_2212F5E2C();
  if (v9)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = v4;
  v36 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255668BE8);
  LOBYTE(v37) = 0;
  sub_2212DB3D4(&qword_255668C20, MEMORY[0x24BEE0D38], MEMORY[0x24BEE4AC0]);
  v10 = v35;
  sub_2212F5C1C();
  v12 = v38;
  LOBYTE(v37) = 1;
  sub_2212CEC2C();
  swift_bridgeObjectRetain();
  sub_2212F5C1C();
  v30 = v12;
  v31 = a1;
  v14 = (uint64_t)v38;
  v13 = v39;
  v15 = (void *)objc_opt_self();
  v32 = v13;
  v16 = (void *)sub_2212F2A9C();
  v38 = 0;
  v17 = objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 0, &v38);

  if (v17)
  {
    v29 = v14;
    v18 = v38;
    sub_2212F58BC();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668C28);
    v19 = v5;
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_221054AE8(v29, v32);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v10);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v30;
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2556688D0);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_2212FF8E0;
    *(_QWORD *)(v21 + 56) = &type metadata for ProductResponse.CodingKeys;
    *(_QWORD *)(v21 + 64) = v8;
    *(_BYTE *)(v21 + 32) = 1;
    v38 = 0;
    v39 = 0xE000000000000000;
    sub_2212F5964();
    swift_bridgeObjectRelease();
    v22 = v33;
    sub_2212F59AC();
    v23 = sub_2212F59C4();
    swift_allocError();
    v25 = v24;
    v26 = v7;
    v27 = v36;
    v28 = v34;
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v24, v22, v34);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D8], v23);
    swift_willThrow();
    sub_221054AE8(v29, v32);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v28);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v26, v35);
  }
  else
  {
    v20 = v38;
    swift_bridgeObjectRelease();
    sub_2212F297C();

    swift_willThrow();
    sub_221054AE8(v14, v32);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v10);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return swift_bridgeObjectRelease();
}

unint64_t sub_2212DAE60()
{
  unint64_t result;

  result = qword_255668BE0;
  if (!qword_255668BE0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C5D8, &type metadata for ProductResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668BE0);
  }
  return result;
}

unint64_t sub_2212DAEA8()
{
  unint64_t result;

  result = qword_255668BF8;
  if (!qword_255668BF8)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ProductResponse.Key, &type metadata for ProductResponse.Key);
    atomic_store(result, (unint64_t *)&qword_255668BF8);
  }
  return result;
}

__n128 __swift_memcpy24_8_0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ProductResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for ProductResponse()
{
  return &type metadata for ProductResponse;
}

uint64_t getEnumTagSinglePayload for ProductResponse.Key(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE6)
    goto LABEL_17;
  if (a2 + 26 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 26) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 26;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 26;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 26;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1B;
  v8 = v6 - 27;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductResponse.Key(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 26 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 26) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE5)
    return ((uint64_t (*)(void))((char *)&loc_2212DB034 + 4 * byte_22131C3EC[v4]))();
  *a1 = a2 + 26;
  return ((uint64_t (*)(void))((char *)sub_2212DB068 + 4 * byte_22131C3E7[v4]))();
}

uint64_t sub_2212DB068(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212DB070(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212DB078);
  return result;
}

uint64_t sub_2212DB084(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212DB08CLL);
  *(_BYTE *)result = a2 + 26;
  return result;
}

uint64_t sub_2212DB090(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212DB098(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProductResponse.Key()
{
  return &type metadata for ProductResponse.Key;
}

uint64_t getEnumTagSinglePayload for ProductResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2212DB190 + 4 * byte_22131C3F6[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2212DB1C4 + 4 * byte_22131C3F1[v4]))();
}

uint64_t sub_2212DB1C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212DB1CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212DB1D4);
  return result;
}

uint64_t sub_2212DB1E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212DB1E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2212DB1EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212DB1F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProductResponse.CodingKeys()
{
  return &type metadata for ProductResponse.CodingKeys;
}

unint64_t sub_2212DB214()
{
  unint64_t result;

  result = qword_255668C00;
  if (!qword_255668C00)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C5B0, &type metadata for ProductResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668C00);
  }
  return result;
}

unint64_t sub_2212DB25C()
{
  unint64_t result;

  result = qword_255668C08;
  if (!qword_255668C08)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C520, &type metadata for ProductResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668C08);
  }
  return result;
}

unint64_t sub_2212DB2A4()
{
  unint64_t result;

  result = qword_255668C10;
  if (!qword_255668C10)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C548, &type metadata for ProductResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668C10);
  }
  return result;
}

uint64_t sub_2212DB2E8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x80000002212FB5A0 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746375646F7270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2212DB3D4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255668BE8);
    v8 = a2;
    result = MEMORY[0x22766BAC4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PurchaseIntentInternal.appName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseIntentInternal.bundleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseIntentInternal.productID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseIntentInternal.productName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseIntentInternal.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PurchaseIntentInternal() + 32);
  v4 = sub_2212F2AF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PurchaseIntentInternal()
{
  uint64_t result;

  result = qword_255668CB0;
  if (!qword_255668CB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PurchaseIntentInternal.additionalBuyParams.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PurchaseIntentInternal() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseIntentInternal.init(appName:bundleID:productID:productName:timestamp:additionalBuyParams:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;

  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  v13 = type metadata accessor for PurchaseIntentInternal();
  v14 = (char *)a9 + *(int *)(v13 + 32);
  v15 = sub_2212F2AF0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, a10, v15);
  v17 = (_QWORD *)((char *)a9 + *(int *)(v13 + 36));
  *v17 = a11;
  v17[1] = a12;
  return result;
}

unint64_t PurchaseIntentInternal.additionalBuyParamsDictionary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t result;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  char v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  _BYTE v60[16];
  uint64_t *v61;
  char *v62;
  int64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;

  v1 = type metadata accessor for PurchaseIntentInternal();
  v2 = (uint64_t *)(v0 + *(int *)(v1 + 36));
  v3 = v2[1];
  if (!v3)
    return sub_2212D77B4(MEMORY[0x24BEE4AF8]);
  v4 = *v2;
  v68 = 38;
  v69 = 0xE100000000000000;
  MEMORY[0x24BDAC7A8](v1);
  v61 = &v68;
  swift_bridgeObjectRetain_n();
  v5 = 0;
  v6 = sub_2212DC6AC(0x7FFFFFFFFFFFFFFFLL, 1, sub_2212DCD24, (uint64_t)v60, v4, v3);
  swift_bridgeObjectRelease();
  v7 = *((_QWORD *)v6 + 2);
  if (v7)
  {
    v67 = MEMORY[0x24BEE4AF8];
    sub_2212DC354(0, v7, 0);
    v8 = 0;
    v62 = v6;
    v63 = v7;
    v64 = v6 + 32;
    do
    {
      v9 = &v64[32 * v8];
      v10 = *(_QWORD *)v9;
      v11 = *((_QWORD *)v9 + 1);
      v12 = *((_QWORD *)v9 + 2);
      v13 = *((_QWORD *)v9 + 3);
      swift_bridgeObjectRetain();
      v14 = MEMORY[0x22766A9FC](v10, v11, v12, v13);
      v16 = v15;
      v68 = 61;
      v69 = 0xE100000000000000;
      MEMORY[0x24BDAC7A8](v14);
      v61 = &v68;
      swift_bridgeObjectRetain();
      v17 = sub_2212DC6AC(0x7FFFFFFFFFFFFFFFLL, 1, sub_2212DCD24, (uint64_t)v60, v14, v16);
      swift_bridgeObjectRelease();
      v18 = *((_QWORD *)v17 + 2);
      if (v18)
      {
        v65 = v13;
        v66 = v5;
        v68 = MEMORY[0x24BEE4AF8];
        sub_2212DC370(0, v18, 0);
        v19 = v68;
        v20 = (uint64_t *)(v17 + 56);
        do
        {
          v21 = *(v20 - 3);
          v22 = *(v20 - 2);
          v24 = *(v20 - 1);
          v23 = *v20;
          swift_bridgeObjectRetain();
          v25 = MEMORY[0x22766A9FC](v21, v22, v24, v23);
          v27 = v26;
          swift_bridgeObjectRelease();
          v68 = v19;
          v29 = *(_QWORD *)(v19 + 16);
          v28 = *(_QWORD *)(v19 + 24);
          if (v29 >= v28 >> 1)
          {
            sub_2212DC370((char *)(v28 > 1), v29 + 1, 1);
            v19 = v68;
          }
          *(_QWORD *)(v19 + 16) = v29 + 1;
          v30 = v19 + 16 * v29;
          *(_QWORD *)(v30 + 32) = v25;
          *(_QWORD *)(v30 + 40) = v27;
          v20 += 4;
          --v18;
        }
        while (v18);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = v63;
        v5 = v66;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 = MEMORY[0x24BEE4AF8];
      }
      v31 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2212DC354(0, *(_QWORD *)(v31 + 16) + 1, 1);
        v31 = v67;
      }
      v33 = *(_QWORD *)(v31 + 16);
      v32 = *(_QWORD *)(v31 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_2212DC354((_QWORD *)(v32 > 1), v33 + 1, 1);
        v31 = v67;
      }
      ++v8;
      *(_QWORD *)(v31 + 16) = v33 + 1;
      *(_QWORD *)(v31 + 8 * v33 + 32) = v19;
    }
    while (v8 != v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x24BEE4AF8];
  }
  v35 = sub_2212D77B4(MEMORY[0x24BEE4AF8]);
  v36 = *(char **)(v31 + 16);
  if (!v36)
  {
    swift_bridgeObjectRelease();
    return v35;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37 = 0;
  v63 = v35;
  v64 = v36;
  while (1)
  {
    v40 = *(_QWORD **)(v31 + 8 * v37 + 32);
    if (v40[2] != 2)
      goto LABEL_23;
    v41 = v40[4];
    v42 = v40[5];
    v43 = v40[7];
    v65 = v40[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v66 = v43;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v68 = v35;
    v46 = sub_2212D7F88(v41, v42);
    v47 = *(_QWORD *)(v35 + 16);
    v48 = (v45 & 1) == 0;
    v49 = v47 + v48;
    if (__OFADD__(v47, v48))
      break;
    v50 = v45;
    if (*(_QWORD *)(v35 + 24) >= v49)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v53 = (_QWORD *)v68;
        if ((v45 & 1) == 0)
          goto LABEL_32;
      }
      else
      {
        sub_2212D8B80();
        v53 = (_QWORD *)v68;
        if ((v50 & 1) == 0)
          goto LABEL_32;
      }
    }
    else
    {
      sub_2212D8300(v49, isUniquelyReferenced_nonNull_native);
      v51 = sub_2212D7F88(v41, v42);
      if ((v50 & 1) != (v52 & 1))
        goto LABEL_41;
      v46 = v51;
      v53 = (_QWORD *)v68;
      if ((v50 & 1) == 0)
      {
LABEL_32:
        v53[(v46 >> 6) + 8] |= 1 << v46;
        v54 = (uint64_t *)(v53[6] + 16 * v46);
        *v54 = v41;
        v54[1] = v42;
        v55 = (_QWORD *)(v53[7] + 16 * v46);
        v56 = v66;
        *v55 = v65;
        v55[1] = v56;
        v57 = v53[2];
        v58 = __OFADD__(v57, 1);
        v59 = v57 + 1;
        if (v58)
          goto LABEL_40;
        v53[2] = v59;
        swift_bridgeObjectRetain();
        goto LABEL_22;
      }
    }
    v38 = (_QWORD *)(v53[7] + 16 * v46);
    swift_bridgeObjectRelease();
    v39 = v66;
    *v38 = v65;
    v38[1] = v39;
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = (unint64_t)v53;
    v36 = v64;
LABEL_23:
    if (v36 == (char *)++v37)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return v35;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  result = sub_2212F5D3C();
  __break(1u);
  return result;
}

uint64_t PurchaseIntentInternal.buyParamsOfferID.getter()
{
  unint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;

  v0 = PurchaseIntentInternal.additionalBuyParamsDictionary.getter();
  if (*(_QWORD *)(v0 + 16) && (v1 = sub_2212D7F88(0x66664F636F486461, 0xEC00000064497265), (v2 & 1) != 0))
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 16 * v1);
    swift_bridgeObjectRetain();
  }
  else
  {
    v3 = 0;
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2212DBC08()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212DBC38 + 4 * byte_22131C630[*v0]))(0x656D614E707061, 0xE700000000000000);
}

uint64_t sub_2212DBC38()
{
  return 0x4449656C646E7562;
}

uint64_t sub_2212DBC50()
{
  return 0x49746375646F7270;
}

uint64_t sub_2212DBC6C()
{
  return 0x4E746375646F7270;
}

uint64_t sub_2212DBC8C()
{
  return 0x6D617473656D6974;
}

unint64_t sub_2212DBCAC()
{
  return 0xD000000000000013;
}

uint64_t sub_2212DBCC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212DD6FC(a1, a2);
  *a3 = result;
  return result;
}

void sub_2212DBCEC(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_2212DBCF8()
{
  sub_2212DCD90();
  return sub_2212F5E50();
}

uint64_t sub_2212DBD20()
{
  sub_2212DCD90();
  return sub_2212F5E5C();
}

uint64_t PurchaseIntentInternal.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668C30);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212DCD90();
  sub_2212F5E38();
  v8[15] = 0;
  sub_2212F5C40();
  if (!v1)
  {
    v8[14] = 1;
    sub_2212F5C64();
    v8[13] = 2;
    sub_2212F5C64();
    v8[12] = 3;
    sub_2212F5C40();
    type metadata accessor for PurchaseIntentInternal();
    v8[11] = 4;
    sub_2212F2AF0();
    sub_2212DCDD4(&qword_255668C40, MEMORY[0x24BDCE920]);
    sub_2212F5C7C();
    v8[10] = 5;
    sub_2212F5C40();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PurchaseIntentInternal.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;

  v28 = a2;
  v3 = sub_2212F2AF0();
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668C48);
  v6 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PurchaseIntentInternal();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (_QWORD *)((char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_2212DCD90();
  v13 = v33;
  sub_2212F5E2C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  v33 = v5;
  v14 = v6;
  v15 = v30;
  v39 = 0;
  *v11 = sub_2212F5BE0();
  v11[1] = v16;
  v38 = 1;
  v11[2] = sub_2212F5C04();
  v11[3] = v17;
  v37 = 2;
  v11[4] = sub_2212F5C04();
  v11[5] = v18;
  v36 = 3;
  v19 = sub_2212F5BE0();
  v27[1] = 0;
  v11[6] = v19;
  v11[7] = v20;
  v35 = 4;
  sub_2212DCDD4(&qword_255668C50, MEMORY[0x24BDCE960]);
  v21 = v33;
  sub_2212F5C1C();
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))((char *)v11 + *(int *)(v9 + 32), v21, v15);
  v34 = 5;
  v22 = sub_2212F5BE0();
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v31);
  v25 = (uint64_t *)((char *)v11 + *(int *)(v9 + 36));
  *v25 = v22;
  v25[1] = v24;
  sub_2212DCE14((uint64_t)v11, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_2212DCE58((uint64_t)v11);
}

uint64_t sub_2212DC310@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseIntentInternal.init(from:)(a1, a2);
}

uint64_t sub_2212DC324(_QWORD *a1)
{
  return PurchaseIntentInternal.encode(to:)(a1);
}

char *sub_2212DC338(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_2212DC38C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_2212DC354(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_2212DC48C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_2212DC370(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_2212DC5AC(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_2212DC38C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668D30);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_3(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

_QWORD *sub_2212DC48C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668D18);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_3(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4])
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668D20);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2212DC5AC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668D10);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_3(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_2212DC6AC(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  unint64_t v44;
  _QWORD v46[4];

  v46[3] = a4;
  if (a1 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v11 = a5;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = MEMORY[0x24BEE4AF8];
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = 15;
  v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v16 = HIBYTE(a6) & 0xF) : (v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v15 = v11 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_2212DCAC4(v30 | (v15 << 16), v43, a2 & 1, v14);
    swift_bridgeObjectRelease();
    v10 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_38;
  }
  v38 = a1;
  v39 = v14;
  v44 = 4 * v16;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v9 = 15;
  v8 = 15;
  v17 = 15;
  while (1)
  {
    v46[0] = sub_2212F5484();
    v46[1] = v18;
    v19 = a3(v46);
    if (v7)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    v6 = v19;
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      break;
    v9 = sub_2212F53F4();
LABEL_9:
    if (v44 == v9 >> 14)
      goto LABEL_29;
  }
  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    v9 = sub_2212F53F4();
    *(_QWORD *)(v43 + 16) = v9;
    v8 = v9;
    v17 = v9;
    goto LABEL_9;
  }
  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_41;
  }
  v20 = sub_2212F54A8();
  v40 = v21;
  v41 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_2212DCBD0(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
  v27 = *((_QWORD *)v10 + 2);
  v26 = *((_QWORD *)v10 + 3);
  v6 = v27 + 1;
  if (v27 >= v26 >> 1)
    v10 = sub_2212DCBD0((char *)(v26 > 1), v27 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v6;
  v28 = &v10[32 * v27];
  *((_QWORD *)v28 + 4) = v41;
  *((_QWORD *)v28 + 5) = v23;
  *((_QWORD *)v28 + 6) = v25;
  *((_QWORD *)v28 + 7) = v40;
  *(_QWORD *)(v39 + 16) = v10;
  v29 = sub_2212F53F4();
  v9 = v29;
  *(_QWORD *)(v43 + 16) = v29;
  if (*((_QWORD *)v10 + 2) != v38)
  {
    v8 = v29;
    v17 = v29;
    goto LABEL_9;
  }
  v17 = v29;
  v8 = v29;
LABEL_29:
  if (v44 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  if (v44 >= v17 >> 14)
  {
    v6 = sub_2212F54A8();
    v8 = v31;
    v9 = v32;
    v11 = v33;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_43;
    goto LABEL_34;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  v10 = sub_2212DCBD0(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
LABEL_34:
  v35 = *((_QWORD *)v10 + 2);
  v34 = *((_QWORD *)v10 + 3);
  if (v35 >= v34 >> 1)
    v10 = sub_2212DCBD0((char *)(v34 > 1), v35 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v35 + 1;
  v36 = &v10[32 * v35];
  *((_QWORD *)v36 + 4) = v6;
  *((_QWORD *)v36 + 5) = v8;
  *((_QWORD *)v36 + 6) = v9;
  *((_QWORD *)v36 + 7) = v11;
  *(_QWORD *)(v39 + 16) = v10;
LABEL_37:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_38:
  swift_release();
  return v10;
}

uint64_t sub_2212DCAC4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  char *v18;

  v10 = *(_QWORD *)(a2 + 16) >> 14;
  v11 = (v10 == a1 >> 14) & a3;
  if (v11 == 1)
    return v11 ^ 1u;
  if (a1 >> 14 < v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  v4 = a4;
  v5 = sub_2212F54A8();
  v6 = v12;
  v7 = v13;
  v8 = v14;
  v9 = *(char **)(v4 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v4 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    v9 = sub_2212DCBD0(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    *(_QWORD *)(v4 + 16) = v9;
  }
  v17 = *((_QWORD *)v9 + 2);
  v16 = *((_QWORD *)v9 + 3);
  if (v17 >= v16 >> 1)
  {
    v9 = sub_2212DCBD0((char *)(v16 > 1), v17 + 1, 1, v9);
    *(_QWORD *)(v4 + 16) = v9;
  }
  *((_QWORD *)v9 + 2) = v17 + 1;
  v18 = &v9[32 * v17];
  *((_QWORD *)v18 + 4) = v5;
  *((_QWORD *)v18 + 5) = v6;
  *((_QWORD *)v18 + 6) = v7;
  *((_QWORD *)v18 + 7) = v8;
  return v11 ^ 1u;
}

char *sub_2212DCBD0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668D28);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_3(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_2212DCCD0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_2212F5CDC() & 1;
}

uint64_t sub_2212DCD24(_QWORD *a1)
{
  return sub_2212DCD3C(a1) & 1;
}

uint64_t sub_2212DCD3C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_2212F5CDC() & 1;
}

unint64_t sub_2212DCD90()
{
  unint64_t result;

  result = qword_255668C38;
  if (!qword_255668C38)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C7BC, &type metadata for PurchaseIntentInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668C38);
  }
  return result;
}

uint64_t sub_2212DCDD4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2212F2AF0();
    result = MEMORY[0x22766BAC4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2212DCE14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PurchaseIntentInternal();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2212DCE58(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PurchaseIntentInternal();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for PurchaseIntentInternal(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a2[7];
    v11 = *(int *)(a3 + 32);
    v21 = (char *)a1 + v11;
    v12 = (char *)a2 + v11;
    a1[6] = a2[6];
    a1[7] = v10;
    v13 = sub_2212F2AF0();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v21, v12, v13);
    v15 = *(int *)(a3 + 36);
    v16 = (uint64_t *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PurchaseIntentInternal(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_2212F2AF0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PurchaseIntentInternal(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  v10 = *(int *)(a3 + 32);
  v19 = (char *)a1 + v10;
  v11 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  v12 = sub_2212F2AF0();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v19, v11, v12);
  v14 = *(int *)(a3 + 36);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PurchaseIntentInternal(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2212F2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 36);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for PurchaseIntentInternal(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 32);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2212F2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 36)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 36));
  return a1;
}

_QWORD *assignWithTake for PurchaseIntentInternal(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_2212F2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = *(int *)(a3 + 36);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseIntentInternal()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212DD34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2212F2AF0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PurchaseIntentInternal()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212DD3D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_2212F2AF0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2212DD448()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F2AF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PurchaseIntentInternal.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PurchaseIntentInternal.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2212DD5A4 + 4 * byte_22131C63B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2212DD5D8 + 4 * byte_22131C636[v4]))();
}

uint64_t sub_2212DD5D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212DD5E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212DD5E8);
  return result;
}

uint64_t sub_2212DD5F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212DD5FCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2212DD600(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212DD608(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseIntentInternal.CodingKeys()
{
  return &type metadata for PurchaseIntentInternal.CodingKeys;
}

unint64_t sub_2212DD628()
{
  unint64_t result;

  result = qword_255668CF8;
  if (!qword_255668CF8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C794, &type metadata for PurchaseIntentInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668CF8);
  }
  return result;
}

unint64_t sub_2212DD670()
{
  unint64_t result;

  result = qword_255668D00;
  if (!qword_255668D00)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C704, &type metadata for PurchaseIntentInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668D00);
  }
  return result;
}

unint64_t sub_2212DD6B8()
{
  unint64_t result;

  result = qword_255668D08;
  if (!qword_255668D08)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C72C, &type metadata for PurchaseIntentInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668D08);
  }
  return result;
}

uint64_t sub_2212DD6FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D614E707061 && a2 == 0xE700000000000000;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49746375646F7270 && a2 == 0xE900000000000044 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4E746375646F7270 && a2 == 0xEB00000000656D61 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002212FB600)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_2212DD9A4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2212DD9C8()
{
  return swift_deallocObject();
}

uint64_t AcknowledgeMessageRequest.messageType.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AcknowledgeMessageRequest.bundleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AcknowledgeMessageRequest.offerID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AcknowledgeMessageRequest.clientOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AcknowledgeMessageRequest() + 28);
  return sub_2212DDAC8(v3, a1);
}

uint64_t type metadata accessor for AcknowledgeMessageRequest()
{
  uint64_t result;

  result = qword_255668DE0;
  if (!qword_255668DE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2212DDAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t AcknowledgeMessageRequest.clientOverride.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AcknowledgeMessageRequest() + 28);
  return sub_2212DDB40(a1, v3);
}

uint64_t sub_2212DDB40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AcknowledgeMessageRequest.clientOverride.modify())(_QWORD)
{
  type metadata accessor for AcknowledgeMessageRequest();
  return nullsub_1;
}

uint64_t AcknowledgeMessageRequest.logKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AcknowledgeMessageRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AcknowledgeMessageRequest.logKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AcknowledgeMessageRequest() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AcknowledgeMessageRequest.logKey.modify())(_QWORD)
{
  type metadata accessor for AcknowledgeMessageRequest();
  return nullsub_1;
}

uint64_t AcknowledgeMessageRequest.init(messageType:bundleID:offerID:overrides:logKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;

  v17 = type metadata accessor for AcknowledgeMessageRequest();
  v18 = (uint64_t)a9 + *(int *)(v17 + 28);
  v19 = type metadata accessor for ClientOverride(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  result = sub_2212DDB40(a7, v18);
  v21 = (_QWORD *)((char *)a9 + *(int *)(v17 + 32));
  *v21 = a8;
  v21[1] = a10;
  return result;
}

uint64_t AcknowledgeMessageRequest.encode()()
{
  uint64_t v0;

  sub_2212F2814();
  swift_allocObject();
  sub_2212F2808();
  type metadata accessor for AcknowledgeMessageRequest();
  sub_22108DF44(&qword_255668D40, (uint64_t (*)(uint64_t))type metadata accessor for AcknowledgeMessageRequest, (uint64_t)&protocol conformance descriptor for AcknowledgeMessageRequest);
  v0 = sub_2212F27FC();
  swift_release();
  return v0;
}

uint64_t static AcknowledgeMessageRequest.decode(encodedRequest:)()
{
  sub_2212F27F0();
  swift_allocObject();
  sub_2212F27E4();
  type metadata accessor for AcknowledgeMessageRequest();
  sub_22108DF44(&qword_255668D48, (uint64_t (*)(uint64_t))type metadata accessor for AcknowledgeMessageRequest, (uint64_t)&protocol conformance descriptor for AcknowledgeMessageRequest);
  sub_2212F27D8();
  return swift_release();
}

uint64_t sub_2212DDE70()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212DDEA8 + 4 * byte_22131C810[*v0]))(0x546567617373656DLL, 0xEB00000000657079);
}

uint64_t sub_2212DDEA8()
{
  return 0x4449656C646E7562;
}

uint64_t sub_2212DDEC0()
{
  return 0x4449726566666FLL;
}

uint64_t sub_2212DDED8()
{
  return 0x764F746E65696C63;
}

uint64_t sub_2212DDEFC()
{
  return 0x79654B676F6CLL;
}

uint64_t sub_2212DDF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212DE68C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212DDF34()
{
  sub_2212DE15C();
  return sub_2212F5E50();
}

uint64_t sub_2212DDF5C()
{
  sub_2212DE15C();
  return sub_2212F5E5C();
}

uint64_t AcknowledgeMessageRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212DE15C();
  sub_2212F5E38();
  v8[15] = 0;
  sub_2212F5C64();
  if (!v1)
  {
    v8[14] = 1;
    sub_2212F5C40();
    v8[13] = 2;
    sub_2212F5C64();
    type metadata accessor for AcknowledgeMessageRequest();
    v8[12] = 3;
    type metadata accessor for ClientOverride(0);
    sub_22108DF44(&qword_255668D60, type metadata accessor for ClientOverride, (uint64_t)&protocol conformance descriptor for ClientOverride);
    sub_2212F5C4C();
    v8[11] = 4;
    sub_2212F5C64();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2212DE15C()
{
  unint64_t result;

  result = qword_255668D58;
  if (!qword_255668D58)
  {
    result = MEMORY[0x22766BAC4](&unk_22131CAA0, &type metadata for AcknowledgeMessageRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668D58);
  }
  return result;
}

uint64_t AcknowledgeMessageRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD v26[2];
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v27 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D68);
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AcknowledgeMessageRequest();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (_QWORD *)((char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (uint64_t)v10 + *(int *)(v11 + 28);
  v13 = type metadata accessor for ClientOverride(0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v31 = v12;
  v14(v12, 1, 1, v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212DE15C();
  v15 = (uint64_t)v32;
  sub_2212F5E2C();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_2210A577C(v31, &qword_255668D38);
  }
  else
  {
    v26[1] = v13;
    v32 = a1;
    v16 = v29;
    v37 = 0;
    *v10 = sub_2212F5C04();
    v10[1] = v17;
    v36 = 1;
    v10[2] = sub_2212F5BE0();
    v10[3] = v18;
    v35 = 2;
    v10[4] = sub_2212F5C04();
    v10[5] = v19;
    v34 = 3;
    sub_22108DF44(&qword_255668D70, type metadata accessor for ClientOverride, (uint64_t)&protocol conformance descriptor for ClientOverride);
    v20 = (uint64_t)v28;
    sub_2212F5BEC();
    sub_2212DDB40(v20, v31);
    v33 = 4;
    v21 = sub_2212F5C04();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v30);
    v24 = (uint64_t *)((char *)v10 + *(int *)(v8 + 32));
    *v24 = v21;
    v24[1] = v23;
    sub_2212DE530((uint64_t)v10, v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    return sub_22105EBF8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AcknowledgeMessageRequest);
  }
}

uint64_t sub_2212DE530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AcknowledgeMessageRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2212DE574@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AcknowledgeMessageRequest.init(from:)(a1, a2);
}

uint64_t sub_2212DE588(_QWORD *a1)
{
  return AcknowledgeMessageRequest.encode(to:)(a1);
}

uint64_t MessageType.rawValue.getter(unsigned __int8 a1)
{
  return a1 + 1;
}

uint64_t sub_2212DE5AC()
{
  sub_2212F5DD8();
  sub_2212F5DE4();
  return sub_2212F5E08();
}

uint64_t sub_2212DE5F0()
{
  return sub_2212F5DE4();
}

uint64_t sub_2212DE61C()
{
  sub_2212F5DD8();
  sub_2212F5DE4();
  return sub_2212F5E08();
}

void sub_2212DE65C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

uint64_t MessageType.messageTypeString.getter(char a1)
{
  return qword_22131CAF8[a1];
}

uint64_t sub_2212DE68C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x546567617373656DLL && a2 == 0xEB00000000657079;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449726566666FLL && a2 == 0xE700000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x764F746E65696C63 && a2 == 0xEE00656469727265 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_2212DE8DC(uint64_t a1)
{
  uint64_t result;

  result = sub_22108DF44(&qword_255668D78, (uint64_t (*)(uint64_t))type metadata accessor for AcknowledgeMessageRequest, (uint64_t)&unk_22131C84C);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2212DE918(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_22108DF44(&qword_255668D48, (uint64_t (*)(uint64_t))type metadata accessor for AcknowledgeMessageRequest, (uint64_t)&protocol conformance descriptor for AcknowledgeMessageRequest);
  result = sub_22108DF44(&qword_255668D40, (uint64_t (*)(uint64_t))type metadata accessor for AcknowledgeMessageRequest, (uint64_t)&protocol conformance descriptor for AcknowledgeMessageRequest);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

unint64_t sub_2212DE978()
{
  unint64_t result;

  result = qword_255668D80;
  if (!qword_255668D80)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for MessageType, &type metadata for MessageType);
    atomic_store(result, (unint64_t *)&qword_255668D80);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AcknowledgeMessageRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(unint64_t *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v47;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    v9 = *(int *)(a3 + 28);
    v10 = (unint64_t *)((char *)a1 + v9);
    v11 = (unint64_t *)((char *)a2 + v9);
    a1[4] = a2[4];
    a1[5] = v8;
    v12 = type metadata accessor for ClientOverride(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      v16 = a3;
    }
    else
    {
      v47 = v13;
      v18 = v11[1];
      if (v18 >> 60 == 15)
      {
        *(_OWORD *)v10 = *(_OWORD *)v11;
      }
      else
      {
        v19 = *v11;
        sub_22108DDF4(*v11, v11[1]);
        *v10 = v19;
        v10[1] = v18;
      }
      v20 = (int *)v12;
      v16 = a3;
      v21 = v11[3];
      v10[2] = v11[2];
      v10[3] = v21;
      v22 = v11[5];
      v10[4] = v11[4];
      v10[5] = v22;
      v23 = v20[7];
      v24 = (char *)v10 + v23;
      v25 = (char *)v11 + v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 3, v26))
      {
        v28 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v29 = sub_2212F2A24();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v24, v25, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 3, v26);
      }
      v30 = v20[8];
      v31 = (char *)v10 + v30;
      v32 = (char *)v11 + v30;
      *(_QWORD *)v31 = *(_QWORD *)v32;
      v31[8] = v32[8];
      v33 = v20[9];
      v34 = (char *)v10 + v33;
      v35 = (char *)v11 + v33;
      v34[8] = v35[8];
      *(_QWORD *)v34 = *(_QWORD *)v35;
      v36 = v20[10];
      v37 = (char *)v10 + v36;
      v38 = (char *)v11 + v36;
      v39 = sub_2212F2AFC();
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      }
      (*(void (**)(unint64_t *, _QWORD, uint64_t, int *))(v47 + 56))(v10, 0, 1, v20);
    }
    v42 = *(int *)(v16 + 32);
    v43 = (uint64_t *)((char *)v4 + v42);
    v44 = (uint64_t *)((char *)a2 + v42);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for AcknowledgeMessageRequest(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  v5 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = v4[1];
    if (v6 >> 60 != 15)
      sub_221054AE8(*v4, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = (char *)v4 + *(int *)(v5 + 28);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 3, v8))
    {
      v9 = sub_2212F2A24();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    }
    v10 = (char *)v4 + *(int *)(v5 + 40);
    v11 = sub_2212F2AFC();
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AcknowledgeMessageRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(unint64_t *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v44;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  v8 = *(int *)(a3 + 28);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  a1[4] = a2[4];
  a1[5] = v7;
  v11 = (int *)type metadata accessor for ClientOverride(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(unsigned int (**)(unint64_t *, uint64_t, int *))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    v15 = a3;
  }
  else
  {
    v44 = v12;
    v16 = v10[1];
    if (v16 >> 60 == 15)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    else
    {
      v17 = *v10;
      sub_22108DDF4(*v10, v10[1]);
      *v9 = v17;
      v9[1] = v16;
    }
    v15 = a3;
    v18 = v10[3];
    v9[2] = v10[2];
    v9[3] = v18;
    v19 = v10[5];
    v9[4] = v10[4];
    v9[5] = v19;
    v20 = v11[7];
    v21 = (char *)v9 + v20;
    v22 = (char *)v10 + v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 3, v23))
    {
      v25 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v21, v22, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 3, v23);
    }
    v27 = v11[8];
    v28 = (char *)v9 + v27;
    v29 = (char *)v10 + v27;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v28[8] = v29[8];
    v30 = v11[9];
    v31 = (char *)v9 + v30;
    v32 = (char *)v10 + v30;
    v31[8] = v32[8];
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v33 = v11[10];
    v34 = (char *)v9 + v33;
    v35 = (char *)v10 + v33;
    v36 = sub_2212F2AFC();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
    (*(void (**)(unint64_t *, _QWORD, uint64_t, int *))(v44 + 56))(v9, 0, 1, v11);
  }
  v39 = *(int *)(v15 + 32);
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AcknowledgeMessageRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, int *);
  int v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  size_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for ClientOverride(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_22105EBF8((uint64_t)v7, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    v16 = v8[1];
    v77 = a3;
    if ((unint64_t)v7[1] >> 60 == 15)
    {
      if (v16 >> 60 != 15)
      {
        v17 = *v8;
        sub_22108DDF4(*v8, v16);
        *v7 = v17;
        v7[1] = v16;
        goto LABEL_23;
      }
    }
    else
    {
      if (v16 >> 60 != 15)
      {
        v40 = *v8;
        sub_22108DDF4(*v8, v16);
        v41 = *v7;
        v42 = v7[1];
        *v7 = v40;
        v7[1] = v16;
        sub_221054AE8(v41, v42);
LABEL_23:
        v7[2] = v8[2];
        v7[3] = v8[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v7[4] = v8[4];
        v7[5] = v8[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v43 = v9[7];
        v44 = (char *)v7 + v43;
        v45 = (char *)v8 + v43;
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
        v47 = *(_QWORD *)(v46 - 8);
        v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
        v75 = (uint64_t)v44;
        LODWORD(v44) = v48(v44, 3, v46);
        v49 = v48(v45, 3, v46);
        if ((_DWORD)v44)
        {
          if (v49)
          {
            v50 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
            v51 = (void *)v75;
LABEL_28:
            memcpy(v51, v45, v50);
            goto LABEL_31;
          }
          v52 = sub_2212F2A24();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v75, v45, v52);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v75, 0, 3, v46);
        }
        else
        {
          if (v49)
          {
            sub_2210A577C(v75, &qword_255668540);
            v50 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
            v51 = (void *)v75;
            goto LABEL_28;
          }
          v53 = sub_2212F2A24();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v75, v45, v53);
        }
LABEL_31:
        v54 = v9[8];
        v55 = (char *)v7 + v54;
        v56 = (char *)v8 + v54;
        v57 = *(_QWORD *)v56;
        v55[8] = v56[8];
        *(_QWORD *)v55 = v57;
        v58 = v9[9];
        v59 = (char *)v7 + v58;
        v60 = (char *)v8 + v58;
        v61 = *(_QWORD *)v60;
        v59[8] = v60[8];
        *(_QWORD *)v59 = v61;
        v62 = v9[10];
        v63 = (char *)v7 + v62;
        v64 = (char *)v8 + v62;
        v65 = sub_2212F2AFC();
        v66 = *(_QWORD *)(v65 - 8);
        v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
        v68 = v67(v63, 1, v65);
        v69 = v67(v64, 1, v65);
        if (v68)
        {
          if (!v69)
          {
            (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_37:
            a3 = v77;
            goto LABEL_38;
          }
        }
        else
        {
          if (!v69)
          {
            (*(void (**)(char *, char *, uint64_t))(v66 + 24))(v63, v64, v65);
            goto LABEL_37;
          }
          (*(void (**)(char *, uint64_t))(v66 + 8))(v63, v65);
        }
        v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        goto LABEL_37;
      }
      sub_2212CF434((uint64_t)v7);
    }
    *(_OWORD *)v7 = *(_OWORD *)v8;
    goto LABEL_23;
  }
  if (v13)
  {
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_38;
  }
  v14 = v8[1];
  v76 = a3;
  if (v14 >> 60 == 15)
  {
    *(_OWORD *)v7 = *(_OWORD *)v8;
  }
  else
  {
    v18 = *v8;
    sub_22108DDF4(*v8, v14);
    *v7 = v18;
    v7[1] = v14;
  }
  v7[2] = v8[2];
  v7[3] = v8[3];
  v7[4] = v8[4];
  v7[5] = v8[5];
  v19 = v9[7];
  v20 = (char *)v7 + v19;
  v21 = (char *)v8 + v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 3, v22))
  {
    v24 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v20, v21, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 3, v22);
  }
  v26 = v9[8];
  v27 = (char *)v7 + v26;
  v28 = (char *)v8 + v26;
  v29 = *(_QWORD *)v28;
  v27[8] = v28[8];
  *(_QWORD *)v27 = v29;
  v30 = v9[9];
  v31 = (char *)v7 + v30;
  v32 = (char *)v8 + v30;
  v33 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *(_QWORD *)v31 = v33;
  v34 = v9[10];
  v35 = (char *)v7 + v34;
  v36 = (char *)v8 + v34;
  v37 = sub_2212F2AFC();
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  a3 = v76;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_38:
  v71 = *(int *)(a3 + 32);
  v72 = (_QWORD *)((char *)a1 + v71);
  v73 = (_QWORD *)((char *)a2 + v71);
  *v72 = *v73;
  v72[1] = v73[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for AcknowledgeMessageRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 28);
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for ClientOverride(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v8[2] = v9[2];
    v14 = v10[7];
    __dst = (char *)v8 + v14;
    v15 = (char *)v9 + v14;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 3, v16))
    {
      v18 = type metadata accessor for ClientOverride.Server(0);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(__dst, v15, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 3, v16);
    }
    v20 = v10[8];
    v21 = (char *)v8 + v20;
    v22 = (char *)v9 + v20;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v10[9];
    v24 = (char *)v8 + v23;
    v25 = (char *)v9 + v23;
    v24[8] = v25[8];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v26 = v10[10];
    v27 = (char *)v8 + v26;
    v28 = (char *)v9 + v26;
    v29 = sub_2212F2AFC();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *assignWithTake for AcknowledgeMessageRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  int *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t *, uint64_t, int *);
  int v15;
  int v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  size_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  v12 = (int *)type metadata accessor for ClientOverride(0);
  v13 = *((_QWORD *)v12 - 1);
  v14 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_22105EBF8((uint64_t)v10, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    v25 = v10[1];
    v77 = a3;
    if (v25 >> 60 != 15)
    {
      v26 = v11[1];
      if (v26 >> 60 != 15)
      {
        v40 = *v10;
        *v10 = *v11;
        v10[1] = v26;
        sub_221054AE8(v40, v25);
LABEL_18:
        v41 = v11[3];
        v10[2] = v11[2];
        v10[3] = v41;
        swift_bridgeObjectRelease();
        v42 = v11[5];
        v10[4] = v11[4];
        v10[5] = v42;
        swift_bridgeObjectRelease();
        v43 = v12[7];
        v44 = (char *)v10 + v43;
        v45 = (char *)v11 + v43;
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
        v47 = *(_QWORD *)(v46 - 8);
        v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
        v75 = (uint64_t)v44;
        LODWORD(v44) = v48(v44, 3, v46);
        v49 = v48(v45, 3, v46);
        if ((_DWORD)v44)
        {
          if (v49)
          {
            v50 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
            v51 = (void *)v75;
LABEL_23:
            memcpy(v51, v45, v50);
            goto LABEL_26;
          }
          v52 = sub_2212F2A24();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v75, v45, v52);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v75, 0, 3, v46);
        }
        else
        {
          if (v49)
          {
            sub_2210A577C(v75, &qword_255668540);
            v50 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
            v51 = (void *)v75;
            goto LABEL_23;
          }
          v53 = sub_2212F2A24();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 40))(v75, v45, v53);
        }
LABEL_26:
        v54 = v12[8];
        v55 = (char *)v10 + v54;
        v56 = (char *)v11 + v54;
        *(_QWORD *)v55 = *(_QWORD *)v56;
        v55[8] = v56[8];
        v57 = v12[9];
        v58 = (char *)v10 + v57;
        v59 = (char *)v11 + v57;
        v58[8] = v59[8];
        *(_QWORD *)v58 = *(_QWORD *)v59;
        v60 = v12[10];
        v61 = (char *)v10 + v60;
        v62 = (char *)v11 + v60;
        v63 = sub_2212F2AFC();
        v64 = *(_QWORD *)(v63 - 8);
        v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
        v66 = v65(v61, 1, v63);
        v67 = v65(v62, 1, v63);
        if (v66)
        {
          if (!v67)
          {
            (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
LABEL_32:
            a3 = v77;
            goto LABEL_33;
          }
        }
        else
        {
          if (!v67)
          {
            (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v61, v62, v63);
            goto LABEL_32;
          }
          (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
        }
        v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        goto LABEL_32;
      }
      sub_2212CF434((uint64_t)v10);
    }
    *(_OWORD *)v10 = *(_OWORD *)v11;
    goto LABEL_18;
  }
  if (v16)
  {
LABEL_7:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_33;
  }
  v76 = a3;
  v17 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v17;
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  v18 = v12[7];
  v19 = (char *)v10 + v18;
  v20 = (char *)v11 + v18;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 3, v21))
  {
    v23 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v27 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v19, v20, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 3, v21);
  }
  v28 = v12[8];
  v29 = (char *)v10 + v28;
  v30 = (char *)v11 + v28;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  v31 = v12[9];
  v32 = (char *)v10 + v31;
  v33 = (char *)v11 + v31;
  v32[8] = v33[8];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v34 = v12[10];
  v35 = (char *)v10 + v34;
  v36 = (char *)v11 + v34;
  v37 = sub_2212F2AFC();
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v35, v36, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  a3 = v76;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
LABEL_33:
  v69 = *(int *)(a3 + 32);
  v70 = (_QWORD *)((char *)a1 + v69);
  v71 = (_QWORD *)((char *)a2 + v69);
  v73 = *v71;
  v72 = v71[1];
  *v70 = v73;
  v70[1] = v72;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AcknowledgeMessageRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212DFDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AcknowledgeMessageRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212DFE48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_2212DFEC0()
{
  unint64_t v0;

  sub_2212DFF40();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2212DFF40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255668DF0)
  {
    type metadata accessor for ClientOverride(255);
    v0 = sub_2212F5844();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255668DF0);
  }
}

ValueMetadata *type metadata accessor for MessageType()
{
  return &type metadata for MessageType;
}

uint64_t _s15StoreKit_Shared11MessageTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2212DFFF8 + 4 * byte_22131C81A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2212E002C + 4 * byte_22131C815[v4]))();
}

uint64_t sub_2212E002C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212E0034(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212E003CLL);
  return result;
}

uint64_t sub_2212E0048(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212E0050);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2212E0054(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212E005C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AcknowledgeMessageRequest.CodingKeys()
{
  return &type metadata for AcknowledgeMessageRequest.CodingKeys;
}

unint64_t sub_2212E007C()
{
  unint64_t result;

  result = qword_255668E30;
  if (!qword_255668E30)
  {
    result = MEMORY[0x22766BAC4](&unk_22131CA78, &type metadata for AcknowledgeMessageRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668E30);
  }
  return result;
}

unint64_t sub_2212E00C4()
{
  unint64_t result;

  result = qword_255668E38;
  if (!qword_255668E38)
  {
    result = MEMORY[0x22766BAC4](&unk_22131C9E8, &type metadata for AcknowledgeMessageRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668E38);
  }
  return result;
}

unint64_t sub_2212E010C()
{
  unint64_t result;

  result = qword_255668E40;
  if (!qword_255668E40)
  {
    result = MEMORY[0x22766BAC4](&unk_22131CA10, &type metadata for AcknowledgeMessageRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668E40);
  }
  return result;
}

uint64_t ClientOverrideRequest.bundleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientOverrideRequest.clientOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ClientOverrideRequest() + 20);
  return sub_2212DDAC8(v3, a1);
}

uint64_t type metadata accessor for ClientOverrideRequest()
{
  uint64_t result;

  result = qword_255668ED0;
  if (!qword_255668ED0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ClientOverrideRequest.logKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ClientOverrideRequest() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientOverrideRequest.logKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ClientOverrideRequest() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ClientOverrideRequest.logKey.modify())(_QWORD)
{
  type metadata accessor for ClientOverrideRequest();
  return nullsub_1;
}

uint64_t ClientOverrideRequest.until.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ClientOverrideRequest() + 28);
  v4 = sub_2212F2AF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ClientOverrideRequest.init(bundleID:clientOverride:until:logKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  int *v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;

  *a7 = a1;
  a7[1] = a2;
  v12 = (int *)type metadata accessor for ClientOverrideRequest();
  sub_2212E0368(a3, (uint64_t)a7 + v12[5]);
  v13 = (char *)a7 + v12[7];
  v14 = sub_2212F2AF0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a4, v14);
  v16 = (_QWORD *)((char *)a7 + v12[6]);
  *v16 = a5;
  v16[1] = a6;
  return result;
}

uint64_t sub_2212E0368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2212E03B0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212E03E0 + 4 * byte_22131CB50[*v0]))(0x4449656C646E7562, 0xE800000000000000);
}

uint64_t sub_2212E03E0()
{
  return 0x764F746E65696C63;
}

uint64_t sub_2212E0404()
{
  return 0x79654B676F6CLL;
}

uint64_t sub_2212E0418()
{
  return 0x6C69746E75;
}

uint64_t sub_2212E042C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212E233C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212E0450()
{
  sub_2212E0688();
  return sub_2212F5E50();
}

uint64_t sub_2212E0478()
{
  sub_2212E0688();
  return sub_2212F5E5C();
}

uint64_t ClientOverrideRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668E48);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212E0688();
  sub_2212F5E38();
  v8[15] = 0;
  sub_2212F5C64();
  if (!v1)
  {
    type metadata accessor for ClientOverrideRequest();
    v8[14] = 1;
    type metadata accessor for ClientOverride(0);
    sub_22108DF44(&qword_255668D60, type metadata accessor for ClientOverride, (uint64_t)&protocol conformance descriptor for ClientOverride);
    sub_2212F5C4C();
    v8[13] = 2;
    sub_2212F5C64();
    v8[12] = 3;
    sub_2212F2AF0();
    sub_22108DF44(&qword_255668C40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_2212F5C7C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2212E0688()
{
  unint64_t result;

  result = qword_255668E50;
  if (!qword_255668E50)
  {
    result = MEMORY[0x22766BAC4](&unk_22131CD14, &type metadata for ClientOverrideRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668E50);
  }
  return result;
}

uint64_t ClientOverrideRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v27 = a2;
  v28 = sub_2212F2AF0();
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v29 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668E58);
  v7 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ClientOverrideRequest();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212E0688();
  v31 = v9;
  v13 = v32;
  sub_2212F5E2C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = v7;
  v15 = (uint64_t)a1;
  v36 = 0;
  v16 = (uint64_t)v12;
  *v12 = sub_2212F5C04();
  v12[1] = v17;
  type metadata accessor for ClientOverride(0);
  v35 = 1;
  sub_22108DF44(&qword_255668D70, type metadata accessor for ClientOverride, (uint64_t)&protocol conformance descriptor for ClientOverride);
  sub_2212F5BEC();
  v18 = v10;
  sub_2212E0368((uint64_t)v6, v16 + *(int *)(v10 + 20));
  v34 = 2;
  v19 = sub_2212F5C04();
  v20 = (uint64_t *)(v16 + *(int *)(v10 + 24));
  *v20 = v19;
  v20[1] = v21;
  v33 = 3;
  sub_22108DF44(&qword_255668C50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v23 = v28;
  v22 = v29;
  sub_2212F5C1C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v31, v30);
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v16 + *(int *)(v18 + 28), v22, v23);
  sub_2212E0A6C(v16, v27);
  __swift_destroy_boxed_opaque_existential_1(v15);
  return sub_22105EBF8(v16, (uint64_t (*)(_QWORD))type metadata accessor for ClientOverrideRequest);
}

uint64_t sub_2212E0A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClientOverrideRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2212E0AB0(uint64_t a1)
{
  uint64_t result;

  result = sub_22108DF44(&qword_255668E60, (uint64_t (*)(uint64_t))type metadata accessor for ClientOverrideRequest, (uint64_t)&unk_22131CB8C);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2212E0AEC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_22108DF44(&qword_255668E68, (uint64_t (*)(uint64_t))type metadata accessor for ClientOverrideRequest, (uint64_t)&protocol conformance descriptor for ClientOverrideRequest);
  result = sub_22108DF44(&qword_255668E70, (uint64_t (*)(uint64_t))type metadata accessor for ClientOverrideRequest, (uint64_t)&protocol conformance descriptor for ClientOverrideRequest);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_2212E0B48@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ClientOverrideRequest.init(from:)(a1, a2);
}

uint64_t sub_2212E0B5C(_QWORD *a1)
{
  return ClientOverrideRequest.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientOverrideRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(unint64_t *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (unint64_t *)((char *)a1 + v8);
    v10 = (unint64_t *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for ClientOverride(0);
    v12 = *((_QWORD *)v11 - 1);
    v13 = *(unsigned int (**)(unint64_t *, uint64_t, int *))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v16 = v10[1];
      if (v16 >> 60 == 15)
      {
        *(_OWORD *)v9 = *(_OWORD *)v10;
      }
      else
      {
        v17 = *v10;
        sub_22108DDF4(*v10, v10[1]);
        *v9 = v17;
        v9[1] = v16;
      }
      v18 = v10[3];
      v9[2] = v10[2];
      v9[3] = v18;
      v19 = v10[5];
      v9[4] = v10[4];
      v9[5] = v19;
      v20 = v11[7];
      __dst = (char *)v9 + v20;
      v21 = (char *)v10 + v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 3, v22))
      {
        v24 = type metadata accessor for ClientOverride.Server(0);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v25 = sub_2212F2A24();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(__dst, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 3, v22);
      }
      v26 = v11[8];
      v27 = (char *)v9 + v26;
      v28 = (char *)v10 + v26;
      *(_QWORD *)v27 = *(_QWORD *)v28;
      v27[8] = v28[8];
      v29 = v11[9];
      v30 = (char *)v9 + v29;
      v31 = (char *)v10 + v29;
      v30[8] = v31[8];
      *(_QWORD *)v30 = *(_QWORD *)v31;
      v32 = v11[10];
      v33 = (char *)v9 + v32;
      v34 = (char *)v10 + v32;
      v35 = sub_2212F2AFC();
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      (*(void (**)(unint64_t *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
    }
    v38 = a3[6];
    v39 = a3[7];
    v40 = (uint64_t *)((char *)v4 + v38);
    v41 = (uint64_t *)((char *)a2 + v38);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = (char *)v4 + v39;
    v44 = (char *)a2 + v39;
    v45 = sub_2212F2AF0();
    v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
    swift_bridgeObjectRetain();
    v46(v43, v44, v45);
  }
  return v4;
}

uint64_t destroy for ClientOverrideRequest(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  v5 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = v4[1];
    if (v6 >> 60 != 15)
      sub_221054AE8(*v4, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = (char *)v4 + *(int *)(v5 + 28);
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 3, v8))
    {
      v9 = sub_2212F2A24();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    }
    v10 = (char *)v4 + *(int *)(v5 + 40);
    v11 = sub_2212F2AFC();
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  v13 = a1 + *(int *)(a2 + 28);
  v14 = sub_2212F2AF0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

_QWORD *initializeWithCopy for ClientOverrideRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t *v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(unint64_t *, uint64_t, int *);
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for ClientOverride(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(unsigned int (**)(unint64_t *, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v9[1];
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)v8 = *(_OWORD *)v9;
    }
    else
    {
      v15 = *v9;
      sub_22108DDF4(*v9, v9[1]);
      *v8 = v15;
      v8[1] = v14;
    }
    v16 = v9[3];
    v8[2] = v9[2];
    v8[3] = v16;
    v17 = v9[5];
    v8[4] = v9[4];
    v8[5] = v17;
    v18 = v10[7];
    __dst = (char *)v8 + v18;
    v19 = (char *)v9 + v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 3, v20))
    {
      v22 = type metadata accessor for ClientOverride.Server(0);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v23 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(__dst, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 3, v20);
    }
    v24 = v10[8];
    v25 = (char *)v8 + v24;
    v26 = (char *)v9 + v24;
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v25[8] = v26[8];
    v27 = v10[9];
    v28 = (char *)v8 + v27;
    v29 = (char *)v9 + v27;
    v28[8] = v29[8];
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v30 = v10[10];
    v31 = (char *)v8 + v30;
    v32 = (char *)v9 + v30;
    v33 = sub_2212F2AFC();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    (*(void (**)(unint64_t *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  v36 = a3[6];
  v37 = a3[7];
  v38 = (_QWORD *)((char *)a1 + v36);
  v39 = (_QWORD *)((char *)a2 + v36);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v41 = (char *)a1 + v37;
  v42 = (char *)a2 + v37;
  v43 = sub_2212F2AF0();
  v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
  swift_bridgeObjectRetain();
  v44(v41, v42, v43);
  return a1;
}

_QWORD *assignWithCopy for ClientOverrideRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, int *);
  int v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  size_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(char *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v79;
  int *v80;
  int *v81;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for ClientOverride(0);
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_22105EBF8((uint64_t)v7, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    v16 = v8[1];
    v81 = a3;
    if ((unint64_t)v7[1] >> 60 == 15)
    {
      if (v16 >> 60 != 15)
      {
        v17 = *v8;
        sub_22108DDF4(*v8, v16);
        *v7 = v17;
        v7[1] = v16;
        goto LABEL_23;
      }
    }
    else
    {
      if (v16 >> 60 != 15)
      {
        v40 = *v8;
        sub_22108DDF4(*v8, v16);
        v41 = *v7;
        v42 = v7[1];
        *v7 = v40;
        v7[1] = v16;
        sub_221054AE8(v41, v42);
LABEL_23:
        v7[2] = v8[2];
        v7[3] = v8[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v7[4] = v8[4];
        v7[5] = v8[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v43 = v9[7];
        v44 = (char *)v7 + v43;
        v45 = (char *)v8 + v43;
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
        v47 = *(_QWORD *)(v46 - 8);
        v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
        v79 = (uint64_t)v44;
        LODWORD(v44) = v48(v44, 3, v46);
        v49 = v48(v45, 3, v46);
        if ((_DWORD)v44)
        {
          if (v49)
          {
            v50 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
            v51 = (void *)v79;
LABEL_28:
            memcpy(v51, v45, v50);
            goto LABEL_31;
          }
          v52 = sub_2212F2A24();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v79, v45, v52);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v79, 0, 3, v46);
        }
        else
        {
          if (v49)
          {
            sub_2210A577C(v79, &qword_255668540);
            v50 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
            v51 = (void *)v79;
            goto LABEL_28;
          }
          v53 = sub_2212F2A24();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v79, v45, v53);
        }
LABEL_31:
        v54 = v9[8];
        v55 = (char *)v7 + v54;
        v56 = (char *)v8 + v54;
        v57 = *(_QWORD *)v56;
        v55[8] = v56[8];
        *(_QWORD *)v55 = v57;
        v58 = v9[9];
        v59 = (char *)v7 + v58;
        v60 = (char *)v8 + v58;
        v61 = *(_QWORD *)v60;
        v59[8] = v60[8];
        *(_QWORD *)v59 = v61;
        v62 = v9[10];
        v63 = (char *)v7 + v62;
        v64 = (char *)v8 + v62;
        v65 = sub_2212F2AFC();
        v66 = *(_QWORD *)(v65 - 8);
        v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
        v68 = v67(v63, 1, v65);
        v69 = v67(v64, 1, v65);
        if (v68)
        {
          if (!v69)
          {
            (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_37:
            a3 = v81;
            goto LABEL_38;
          }
        }
        else
        {
          if (!v69)
          {
            (*(void (**)(char *, char *, uint64_t))(v66 + 24))(v63, v64, v65);
            goto LABEL_37;
          }
          (*(void (**)(char *, uint64_t))(v66 + 8))(v63, v65);
        }
        v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        goto LABEL_37;
      }
      sub_2212CF434((uint64_t)v7);
    }
    *(_OWORD *)v7 = *(_OWORD *)v8;
    goto LABEL_23;
  }
  if (v13)
  {
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_38;
  }
  v14 = v8[1];
  v80 = a3;
  if (v14 >> 60 == 15)
  {
    *(_OWORD *)v7 = *(_OWORD *)v8;
  }
  else
  {
    v18 = *v8;
    sub_22108DDF4(*v8, v14);
    *v7 = v18;
    v7[1] = v14;
  }
  v7[2] = v8[2];
  v7[3] = v8[3];
  v7[4] = v8[4];
  v7[5] = v8[5];
  v19 = v9[7];
  v20 = (char *)v7 + v19;
  v21 = (char *)v8 + v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 3, v22))
  {
    v24 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v20, v21, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 3, v22);
  }
  v26 = v9[8];
  v27 = (char *)v7 + v26;
  v28 = (char *)v8 + v26;
  v29 = *(_QWORD *)v28;
  v27[8] = v28[8];
  *(_QWORD *)v27 = v29;
  v30 = v9[9];
  v31 = (char *)v7 + v30;
  v32 = (char *)v8 + v30;
  v33 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *(_QWORD *)v31 = v33;
  v34 = v9[10];
  v35 = (char *)v7 + v34;
  v36 = (char *)v8 + v34;
  v37 = sub_2212F2AFC();
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  a3 = v80;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_38:
  v71 = a3[6];
  v72 = (_QWORD *)((char *)a1 + v71);
  v73 = (_QWORD *)((char *)a2 + v71);
  *v72 = *v73;
  v72[1] = v73[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v74 = a3[7];
  v75 = (char *)a1 + v74;
  v76 = (char *)a2 + v74;
  v77 = sub_2212F2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 24))(v75, v76, v77);
  return a1;
}

_OWORD *initializeWithTake for ClientOverrideRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *__dst;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = (int *)type metadata accessor for ClientOverride(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    v7[2] = v8[2];
    v13 = v9[7];
    __dst = (char *)v7 + v13;
    v14 = (char *)v8 + v13;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 3, v15))
    {
      v17 = type metadata accessor for ClientOverride.Server(0);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v18 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(__dst, v14, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 3, v15);
    }
    v19 = v9[8];
    v20 = (char *)v7 + v19;
    v21 = (char *)v8 + v19;
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
    v22 = v9[9];
    v23 = (char *)v7 + v22;
    v24 = (char *)v8 + v22;
    v23[8] = v24[8];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v25 = v9[10];
    v26 = (char *)v7 + v25;
    v27 = (char *)v8 + v25;
    v28 = sub_2212F2AFC();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v31 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_2212F2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

_QWORD *assignWithTake for ClientOverrideRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t *, uint64_t, int *);
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  size_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v77;
  int *v78;
  int *v79;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = (int *)type metadata accessor for ClientOverride(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_22105EBF8((uint64_t)v8, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    v23 = v8[1];
    v79 = a3;
    if (v23 >> 60 != 15)
    {
      v24 = v9[1];
      if (v24 >> 60 != 15)
      {
        v38 = *v8;
        *v8 = *v9;
        v8[1] = v24;
        sub_221054AE8(v38, v23);
LABEL_18:
        v39 = v9[3];
        v8[2] = v9[2];
        v8[3] = v39;
        swift_bridgeObjectRelease();
        v40 = v9[5];
        v8[4] = v9[4];
        v8[5] = v40;
        swift_bridgeObjectRelease();
        v41 = v10[7];
        v42 = (char *)v8 + v41;
        v43 = (char *)v9 + v41;
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
        v45 = *(_QWORD *)(v44 - 8);
        v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
        v77 = (uint64_t)v42;
        LODWORD(v42) = v46(v42, 3, v44);
        v47 = v46(v43, 3, v44);
        if ((_DWORD)v42)
        {
          if (v47)
          {
            v48 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
            v49 = (void *)v77;
LABEL_23:
            memcpy(v49, v43, v48);
            goto LABEL_26;
          }
          v50 = sub_2212F2A24();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v77, v43, v50);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v77, 0, 3, v44);
        }
        else
        {
          if (v47)
          {
            sub_2210A577C(v77, &qword_255668540);
            v48 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
            v49 = (void *)v77;
            goto LABEL_23;
          }
          v51 = sub_2212F2A24();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 40))(v77, v43, v51);
        }
LABEL_26:
        v52 = v10[8];
        v53 = (char *)v8 + v52;
        v54 = (char *)v9 + v52;
        *(_QWORD *)v53 = *(_QWORD *)v54;
        v53[8] = v54[8];
        v55 = v10[9];
        v56 = (char *)v8 + v55;
        v57 = (char *)v9 + v55;
        v56[8] = v57[8];
        *(_QWORD *)v56 = *(_QWORD *)v57;
        v58 = v10[10];
        v59 = (char *)v8 + v58;
        v60 = (char *)v9 + v58;
        v61 = sub_2212F2AFC();
        v62 = *(_QWORD *)(v61 - 8);
        v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
        v64 = v63(v59, 1, v61);
        v65 = v63(v60, 1, v61);
        if (v64)
        {
          if (!v65)
          {
            (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
LABEL_32:
            a3 = v79;
            goto LABEL_33;
          }
        }
        else
        {
          if (!v65)
          {
            (*(void (**)(char *, char *, uint64_t))(v62 + 40))(v59, v60, v61);
            goto LABEL_32;
          }
          (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v61);
        }
        v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        goto LABEL_32;
      }
      sub_2212CF434((uint64_t)v8);
    }
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_18;
  }
  if (v14)
  {
LABEL_7:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_33;
  }
  v78 = a3;
  v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v15;
  *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
  v16 = v10[7];
  v17 = (char *)v8 + v16;
  v18 = (char *)v9 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 3, v19))
  {
    v21 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v25 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v17, v18, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 3, v19);
  }
  v26 = v10[8];
  v27 = (char *)v8 + v26;
  v28 = (char *)v9 + v26;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v10[9];
  v30 = (char *)v8 + v29;
  v31 = (char *)v9 + v29;
  v30[8] = v31[8];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v32 = v10[10];
  v33 = (char *)v8 + v32;
  v34 = (char *)v9 + v32;
  v35 = sub_2212F2AFC();
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  a3 = v78;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_33:
  v67 = a3[6];
  v68 = (_QWORD *)((char *)a1 + v67);
  v69 = (_QWORD *)((char *)a2 + v67);
  v71 = *v69;
  v70 = v69[1];
  *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  v72 = a3[7];
  v73 = (char *)a1 + v72;
  v74 = (char *)a2 + v72;
  v75 = sub_2212F2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 40))(v73, v74, v75);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientOverrideRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212E1FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_2212F2AF0();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ClientOverrideRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212E2068(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_2212F2AF0();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2212E2108()
{
  unint64_t v0;
  unint64_t v1;

  sub_2212DFF40();
  if (v0 <= 0x3F)
  {
    sub_2212F2AF0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for ClientOverrideRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2212E21E4 + 4 * byte_22131CB59[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2212E2218 + 4 * byte_22131CB54[v4]))();
}

uint64_t sub_2212E2218(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212E2220(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212E2228);
  return result;
}

uint64_t sub_2212E2234(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212E223CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2212E2240(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212E2248(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientOverrideRequest.CodingKeys()
{
  return &type metadata for ClientOverrideRequest.CodingKeys;
}

unint64_t sub_2212E2268()
{
  unint64_t result;

  result = qword_255668F10;
  if (!qword_255668F10)
  {
    result = MEMORY[0x22766BAC4](&unk_22131CCEC, &type metadata for ClientOverrideRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668F10);
  }
  return result;
}

unint64_t sub_2212E22B0()
{
  unint64_t result;

  result = qword_255668F18;
  if (!qword_255668F18)
  {
    result = MEMORY[0x22766BAC4](&unk_22131CC5C, &type metadata for ClientOverrideRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668F18);
  }
  return result;
}

unint64_t sub_2212E22F8()
{
  unint64_t result;

  result = qword_255668F20;
  if (!qword_255668F20)
  {
    result = MEMORY[0x22766BAC4](&unk_22131CC84, &type metadata for ClientOverrideRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668F20);
  }
  return result;
}

uint64_t sub_2212E233C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x764F746E65696C63 && a2 == 0xEE00656469727265 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C69746E75 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2212E2508()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212E253C + 4 * byte_22131CD70[*v0]))(0x6C7561666544736FLL, 0xE900000000000074);
}

uint64_t sub_2212E253C()
{
  return 1684099177;
}

uint64_t sub_2212E254C()
{
  return 0x656E6F685069;
}

uint64_t sub_2212E2560()
{
  return 6513005;
}

uint64_t sub_2212E2570()
{
  return 0x7974696C616572;
}

uint64_t sub_2212E2588()
{
  return 30324;
}

uint64_t sub_2212E2594()
{
  return 0x6863746177;
}

uint64_t sub_2212E25A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212E50F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212E25CC()
{
  sub_2212E2CD8();
  return sub_2212F5E50();
}

uint64_t sub_2212E25F4()
{
  sub_2212E2CD8();
  return sub_2212F5E5C();
}

uint64_t sub_2212E261C()
{
  sub_2212E2E70();
  return sub_2212F5E50();
}

uint64_t sub_2212E2644()
{
  sub_2212E2E70();
  return sub_2212F5E5C();
}

uint64_t sub_2212E266C()
{
  sub_2212E2E2C();
  return sub_2212F5E50();
}

uint64_t sub_2212E2694()
{
  sub_2212E2E2C();
  return sub_2212F5E5C();
}

uint64_t sub_2212E26BC()
{
  sub_2212E2DE8();
  return sub_2212F5E50();
}

uint64_t sub_2212E26E4()
{
  sub_2212E2DE8();
  return sub_2212F5E5C();
}

uint64_t sub_2212E270C()
{
  sub_2212E2EB4();
  return sub_2212F5E50();
}

uint64_t sub_2212E2734()
{
  sub_2212E2EB4();
  return sub_2212F5E5C();
}

uint64_t sub_2212E275C()
{
  sub_2212E2DA4();
  return sub_2212F5E50();
}

uint64_t sub_2212E2784()
{
  sub_2212E2DA4();
  return sub_2212F5E5C();
}

uint64_t sub_2212E27AC()
{
  sub_2212E2D60();
  return sub_2212F5E50();
}

uint64_t sub_2212E27D4()
{
  sub_2212E2D60();
  return sub_2212F5E5C();
}

uint64_t sub_2212E27FC()
{
  sub_2212E2D1C();
  return sub_2212F5E50();
}

uint64_t sub_2212E2824()
{
  sub_2212E2D1C();
  return sub_2212F5E5C();
}

void ProductRequest.Platform.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668F28);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668F30);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v26 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668F38);
  v24 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v23 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668F40);
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v20 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668F48);
  v18 = *(_QWORD *)(v11 - 8);
  v19 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v17 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668F50);
  MEMORY[0x24BDAC7A8](v16);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668F58);
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668F60);
  v33 = *(_QWORD *)(v14 - 8);
  v34 = v14;
  MEMORY[0x24BDAC7A8](v14);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212E2CD8();
  sub_2212F5E38();
  __asm { BR              X10 }
}

uint64_t sub_2212E2AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 71) = 0;
  sub_2212E2EB4();
  v5 = *(_QWORD *)(v4 - 96);
  sub_2212F5C34();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v1, v5);
}

unint64_t sub_2212E2CD8()
{
  unint64_t result;

  result = qword_255668F68;
  if (!qword_255668F68)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E1C8, &type metadata for ProductRequest.Platform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668F68);
  }
  return result;
}

unint64_t sub_2212E2D1C()
{
  unint64_t result;

  result = qword_255668F70;
  if (!qword_255668F70)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E178, &type metadata for ProductRequest.Platform.WatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668F70);
  }
  return result;
}

unint64_t sub_2212E2D60()
{
  unint64_t result;

  result = qword_255668F78;
  if (!qword_255668F78)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E128, &type metadata for ProductRequest.Platform.TvCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668F78);
  }
  return result;
}

unint64_t sub_2212E2DA4()
{
  unint64_t result;

  result = qword_255668F80;
  if (!qword_255668F80)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E0D8, &type metadata for ProductRequest.Platform.RealityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668F80);
  }
  return result;
}

unint64_t sub_2212E2DE8()
{
  unint64_t result;

  result = qword_255668F88;
  if (!qword_255668F88)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E088, &type metadata for ProductRequest.Platform.MacCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668F88);
  }
  return result;
}

unint64_t sub_2212E2E2C()
{
  unint64_t result;

  result = qword_255668F90;
  if (!qword_255668F90)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E038, &type metadata for ProductRequest.Platform.IPhoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668F90);
  }
  return result;
}

unint64_t sub_2212E2E70()
{
  unint64_t result;

  result = qword_255668F98;
  if (!qword_255668F98)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DFE8, &type metadata for ProductRequest.Platform.IPadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668F98);
  }
  return result;
}

unint64_t sub_2212E2EB4()
{
  unint64_t result;

  result = qword_255668FA0;
  if (!qword_255668FA0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DF98, &type metadata for ProductRequest.Platform.OsDefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668FA0);
  }
  return result;
}

uint64_t ProductRequest.Platform.init(from:)(_QWORD *a1)
{
  return sub_2212E5398(a1);
}

uint64_t sub_2212E2F10@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2212E5398(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_2212E2F38(_QWORD *a1)
{
  unsigned __int8 *v1;

  ProductRequest.Platform.encode(to:)(a1, *v1);
}

BOOL static ProductRequest.RequestKind.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t ProductRequest.RequestKind.hash(into:)()
{
  return sub_2212F5DE4();
}

unint64_t sub_2212E2F84()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x654D79636167656CLL;
  if (*v0 != 1)
    v1 = 0x495041616964656DLL;
  if (*v0)
    return v1;
  else
    return 0xD000000000000019;
}

uint64_t sub_2212E2FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212E5AC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212E3014()
{
  sub_2212E59B0();
  return sub_2212F5E50();
}

uint64_t sub_2212E303C()
{
  sub_2212E59B0();
  return sub_2212F5E5C();
}

uint64_t sub_2212E3064()
{
  sub_2212E5A7C();
  return sub_2212F5E50();
}

uint64_t sub_2212E308C()
{
  sub_2212E5A7C();
  return sub_2212F5E5C();
}

uint64_t sub_2212E30B4()
{
  sub_2212E5A38();
  return sub_2212F5E50();
}

uint64_t sub_2212E30DC()
{
  sub_2212E5A38();
  return sub_2212F5E5C();
}

uint64_t sub_2212E3104()
{
  sub_2212E59F4();
  return sub_2212F5E50();
}

uint64_t sub_2212E312C()
{
  sub_2212E59F4();
  return sub_2212F5E5C();
}

uint64_t ProductRequest.RequestKind.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  char v26;
  char v27;

  v24 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668FA8);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668FB0);
  v18 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668FB8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668FC0);
  v23 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212E59B0();
  sub_2212F5E38();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      v26 = 1;
      sub_2212E5A38();
      sub_2212F5C34();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
    }
    else
    {
      v27 = 2;
      sub_2212E59F4();
      v15 = v20;
      sub_2212F5C34();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v22);
    }
  }
  else
  {
    v25 = 0;
    sub_2212E5A7C();
    sub_2212F5C34();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v12);
}

_QWORD *ProductRequest.RequestKind.init(from:)(_QWORD *a1)
{
  return sub_2212E5C34(a1);
}

_QWORD *sub_2212E33D0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_2212E5C34(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_2212E33F8(_QWORD *a1)
{
  unsigned __int8 *v1;

  return ProductRequest.RequestKind.encode(to:)(a1, *v1);
}

uint64_t sub_2212E3410()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x73746375646F7270;
}

uint64_t sub_2212E3450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212E60D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212E3474()
{
  sub_2212E600C();
  return sub_2212F5E50();
}

uint64_t sub_2212E349C()
{
  sub_2212E600C();
  return sub_2212F5E5C();
}

uint64_t sub_2212E34C8()
{
  return 7554121;
}

uint64_t sub_2212E34DC()
{
  sub_2212E6094();
  return sub_2212F5E50();
}

uint64_t sub_2212E3504()
{
  sub_2212E6094();
  return sub_2212F5E5C();
}

uint64_t sub_2212E352C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 7554121 && a2 == 0xE300000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2212F5CDC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2212E35B0()
{
  sub_2212E6050();
  return sub_2212F5E50();
}

uint64_t sub_2212E35D8()
{
  sub_2212E6050();
  return sub_2212F5E5C();
}

uint64_t ProductRequest.IdentifierKind.encode(to:)(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;

  v18 = a3;
  v16 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668FE8);
  v15 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668FF0);
  v14 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668FF8);
  v17 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212E600C();
  sub_2212F5E38();
  if ((v18 & 1) != 0)
  {
    LOBYTE(v19) = 1;
    sub_2212E6050();
    sub_2212F5C34();
    v19 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668D20);
    sub_2212E9AE4(&qword_255669010, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_2212F5C7C();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v4);
  }
  else
  {
    LOBYTE(v19) = 0;
    sub_2212E6094();
    sub_2212F5C34();
    v19 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668D20);
    sub_2212E9AE4(&qword_255669010, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_2212F5C7C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v7);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v12, v10);
}

_QWORD *ProductRequest.IdentifierKind.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;

  result = sub_2212E61C4(a1);
  if (v1)
    return (_QWORD *)v3;
  return result;
}

_QWORD *sub_2212E38B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  char v5;

  result = sub_2212E61C4(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_2212E38E4(_QWORD *a1)
{
  uint64_t v1;

  return ProductRequest.IdentifierKind.encode(to:)(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t static ProductRequest.IncludedResource.all.getter()
{
  char v1;
  char v2;
  uint64_t v3;

  v3 = MEMORY[0x24BEE4B08];
  sub_2212E47A4(&v2, 0);
  sub_2212E47A4(&v1, 1);
  return v3;
}

void *static ProductRequest.IncludedResource.allCases.getter()
{
  return &unk_24E7070C0;
}

BOOL static ProductRequest.IncludedResource.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t ProductRequest.IncludedResource.hash(into:)()
{
  return sub_2212F5DE4();
}

uint64_t sub_2212E3990()
{
  _BYTE *v0;

  if (*v0)
    return 0x4F6B6361426E6977;
  else
    return 0xD000000000000011;
}

uint64_t sub_2212E39DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212E66E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212E3A00()
{
  sub_2212E6618();
  return sub_2212F5E50();
}

uint64_t sub_2212E3A28()
{
  sub_2212E6618();
  return sub_2212F5E5C();
}

uint64_t sub_2212E3A50()
{
  sub_2212E66A0();
  return sub_2212F5E50();
}

uint64_t sub_2212E3A78()
{
  sub_2212E66A0();
  return sub_2212F5E5C();
}

uint64_t sub_2212E3AA0()
{
  sub_2212E665C();
  return sub_2212F5E50();
}

uint64_t sub_2212E3AC8()
{
  sub_2212E665C();
  return sub_2212F5E5C();
}

uint64_t ProductRequest.IncludedResource.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;

  v17 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669020);
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669028);
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669030);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212E6618();
  sub_2212F5E38();
  if ((v17 & 1) != 0)
  {
    v19 = 1;
    sub_2212E665C();
    sub_2212F5C34();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
  }
  else
  {
    v18 = 0;
    sub_2212E66A0();
    sub_2212F5C34();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t ProductRequest.IncludedResource.hashValue.getter()
{
  sub_2212F5DD8();
  sub_2212F5DE4();
  return sub_2212F5E08();
}

uint64_t ProductRequest.IncludedResource.init(from:)(_QWORD *a1)
{
  return sub_2212E67F4(a1) & 1;
}

uint64_t sub_2212E3D1C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2212E67F4(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_2212E3D48(_QWORD *a1)
{
  unsigned __int8 *v1;

  return ProductRequest.IncludedResource.encode(to:)(a1, *v1);
}

void sub_2212E3D60(_QWORD *a1@<X8>)
{
  *a1 = &unk_24E7070E8;
}

uint64_t ProductRequest.clientOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2212DDAC8(v1, a1);
}

uint64_t ProductRequest.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for ProductRequest() + 20));
  v2 = *v1;
  j__swift_bridgeObjectRetain_1(*v1, *((unsigned __int8 *)v1 + 8));
  return v2;
}

uint64_t ProductRequest.kind.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ProductRequest() + 24));
}

uint64_t ProductRequest.includedResources.getter()
{
  type metadata accessor for ProductRequest();
  return swift_bridgeObjectRetain();
}

uint64_t ProductRequest.logKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ProductRequest() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProductRequest.logKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ProductRequest() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ProductRequest.logKey.modify())(_QWORD)
{
  type metadata accessor for ProductRequest();
  return nullsub_1;
}

uint64_t ProductRequest.platform.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ProductRequest() + 36));
}

int *ProductRequest.init(identifier:kind:resources:logKey:platform:clientOverride:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *result;
  uint64_t v18;
  _QWORD *v19;

  sub_2212E0368(a8, a9);
  result = (int *)type metadata accessor for ProductRequest();
  v18 = a9 + result[5];
  *(_QWORD *)v18 = a1;
  *(_BYTE *)(v18 + 8) = a2 & 1;
  *(_BYTE *)(a9 + result[6]) = a3;
  *(_QWORD *)(a9 + result[7]) = a4;
  v19 = (_QWORD *)(a9 + result[8]);
  *v19 = a5;
  v19[1] = a6;
  *(_BYTE *)(a9 + result[9]) = a7;
  return result;
}

uint64_t sub_2212E3F64()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212E3FA0 + 4 * byte_22131CD7E[*v0]))(0x764F746E65696C63, 0xEE00656469727265);
}

uint64_t sub_2212E3FA0()
{
  return 0x696669746E656469;
}

uint64_t sub_2212E3FBC()
{
  return 1684957547;
}

unint64_t sub_2212E3FCC()
{
  return 0xD000000000000011;
}

uint64_t sub_2212E3FE8()
{
  return 0x79654B676F6CLL;
}

uint64_t sub_2212E3FFC()
{
  return 0x6D726F6674616C70;
}

uint64_t sub_2212E4014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212E9854(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212E4038()
{
  sub_2212E6B60();
  return sub_2212F5E50();
}

uint64_t sub_2212E4060()
{
  sub_2212E6B60();
  return sub_2212F5E5C();
}

uint64_t ProductRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669050);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212E6B60();
  sub_2212F5E38();
  LOBYTE(v15) = 0;
  type metadata accessor for ClientOverride(0);
  sub_22108DF44(&qword_255668D60, type metadata accessor for ClientOverride, (uint64_t)&protocol conformance descriptor for ClientOverride);
  sub_2212F5C4C();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for ProductRequest();
    v10 = (uint64_t *)(v3 + v9[5]);
    v11 = *v10;
    LOBYTE(v10) = *((_BYTE *)v10 + 8);
    v15 = v11;
    v16 = (char)v10;
    v14 = 1;
    sub_2212E6BA4();
    sub_2212F5C7C();
    LOBYTE(v15) = *(_BYTE *)(v3 + v9[6]);
    v14 = 2;
    sub_2212E6BE8();
    sub_2212F5C7C();
    v15 = *(_QWORD *)(v3 + v9[7]);
    v14 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255669070);
    sub_2212E6D40(&qword_255669078, (uint64_t (*)(void))sub_2212E6C2C, MEMORY[0x24BEE1700]);
    sub_2212F5C7C();
    LOBYTE(v15) = 4;
    sub_2212F5C64();
    LOBYTE(v15) = *(_BYTE *)(v3 + v9[9]);
    v14 = 5;
    sub_2212E6C70();
    sub_2212F5C7C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ProductRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  char v28;

  v23 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669090);
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for ProductRequest();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_2212E6B60();
  sub_2212F5E2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  v14 = v7;
  type metadata accessor for ClientOverride(0);
  LOBYTE(v26) = 0;
  sub_22108DF44(&qword_255668D70, type metadata accessor for ClientOverride, (uint64_t)&protocol conformance descriptor for ClientOverride);
  v15 = v24;
  sub_2212F5BEC();
  sub_2212E0368((uint64_t)v6, (uint64_t)v12);
  v28 = 1;
  sub_2212E6CB8();
  sub_2212F5C1C();
  v16 = v27;
  v17 = &v12[v10[5]];
  *(_QWORD *)v17 = v26;
  v17[8] = v16;
  v28 = 2;
  sub_2212E6CFC();
  sub_2212F5C1C();
  v12[v10[6]] = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255669070);
  v28 = 3;
  sub_2212E6D40(&qword_2556690A8, (uint64_t (*)(void))sub_2212E6DA8, MEMORY[0x24BEE1720]);
  sub_2212F5C1C();
  *(_QWORD *)&v12[v10[7]] = v26;
  LOBYTE(v26) = 4;
  v18 = sub_2212F5C04();
  v19 = (uint64_t *)&v12[v10[8]];
  *v19 = v18;
  v19[1] = v20;
  v28 = 5;
  sub_2212E6DEC();
  sub_2212F5C1C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
  v12[v10[9]] = v26;
  sub_2212E6E30((uint64_t)v12, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_22105EBF8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ProductRequest);
}

uint64_t sub_2212E477C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ProductRequest.init(from:)(a1, a2);
}

uint64_t sub_2212E4790(_QWORD *a1)
{
  return ProductRequest.encode(to:)(a1);
}

uint64_t sub_2212E47A4(_BYTE *a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v4 = a2 & 1;
  v5 = *v2;
  sub_2212F5DD8();
  sub_2212F5DE4();
  v6 = sub_2212F5E08();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_2212E4B84(v4, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (((((_DWORD)v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (((((_DWORD)v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0);
  }
  result = 0;
  LOBYTE(v4) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = v4;
  return result;
}

uint64_t sub_2212E48DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255669320);
  result = sub_2212F594C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_2212F5DD8();
      sub_2212F5DE4();
      result = sub_2212F5E08();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2212E4B84(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result & 1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_2212E48DC();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_2212E4CE8();
      goto LABEL_14;
    }
    sub_2212E4E78();
  }
  v8 = *v3;
  sub_2212F5DD8();
  sub_2212F5DE4();
  result = sub_2212F5E08();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if ((((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)) & 1) != 0)
    {
LABEL_13:
      result = sub_2212F5D30();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if ((((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)) & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_2212E4CE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255669320);
  v2 = *v0;
  v3 = sub_2212F5940();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2212E4E78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255669320);
  result = sub_2212F594C();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_2212F5DD8();
    sub_2212F5DE4();
    result = sub_2212F5E08();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2212E50F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C7561666544736FLL && a2 == 0xE900000000000074;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684099177 && a2 == 0xE400000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E6F685069 && a2 == 0xE600000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6513005 && a2 == 0xE300000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7974696C616572 && a2 == 0xE700000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 30324 && a2 == 0xE200000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6863746177 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_2212E5398(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD v28[14];
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;

  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669368);
  v28[7] = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v35 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669370);
  v28[12] = *(_QWORD *)(v3 - 8);
  v28[13] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669378);
  v28[10] = *(_QWORD *)(v5 - 8);
  v28[11] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v32 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669380);
  v28[8] = *(_QWORD *)(v7 - 8);
  v28[9] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v33 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669388);
  v28[5] = *(_QWORD *)(v9 - 8);
  v28[6] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669390);
  v28[3] = *(_QWORD *)(v11 - 8);
  v28[4] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v30 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669398);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556693A0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_2212E2CD8();
  v22 = v37;
  sub_2212F5E2C();
  if (!v22)
  {
    v28[2] = v16;
    v28[0] = v14;
    v28[1] = v13;
    v37 = v18;
    v23 = sub_2212F5C28();
    if (*(_QWORD *)(v23 + 16) == 1)
      __asm { BR              X9 }
    v24 = sub_2212F59C4();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2556688F8);
    *v26 = &type metadata for ProductRequest.Platform;
    sub_2212F5BD4();
    sub_2212F59AC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

unint64_t sub_2212E59B0()
{
  unint64_t result;

  result = qword_255668FC8;
  if (!qword_255668FC8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DF48, &type metadata for ProductRequest.RequestKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668FC8);
  }
  return result;
}

unint64_t sub_2212E59F4()
{
  unint64_t result;

  result = qword_255668FD0;
  if (!qword_255668FD0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DEF8, &type metadata for ProductRequest.RequestKind.MediaAPICodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668FD0);
  }
  return result;
}

unint64_t sub_2212E5A38()
{
  unint64_t result;

  result = qword_255668FD8;
  if (!qword_255668FD8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DEA8, &type metadata for ProductRequest.RequestKind.LegacyMediaAPICodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668FD8);
  }
  return result;
}

unint64_t sub_2212E5A7C()
{
  unint64_t result;

  result = qword_255668FE0;
  if (!qword_255668FE0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DE58, &type metadata for ProductRequest.RequestKind.LegacyFetchSoftwareAddOnsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255668FE0);
  }
  return result;
}

uint64_t sub_2212E5AC0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000019 && a2 == 0x80000002212FB620 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x654D79636167656CLL && a2 == 0xEE00495041616964 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x495041616964656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_2212E5C34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  char v31;
  char v32;
  char v33;

  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669348);
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669350);
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669358);
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669360);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212E59B0();
  v11 = (uint64_t)v30;
  sub_2212F5E2C();
  if (v11)
    goto LABEL_7;
  v21 = v4;
  v22 = v8;
  v12 = v29;
  v30 = a1;
  v13 = v10;
  v14 = sub_2212F5C28();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v18 = sub_2212F59C4();
    swift_allocError();
    v10 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2556688F8);
    *v10 = &type metadata for ProductRequest.RequestKind;
    sub_2212F5BD4();
    sub_2212F59AC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v10, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
    a1 = v30;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  v10 = (_QWORD *)*(unsigned __int8 *)(v14 + 32);
  if (*(_BYTE *)(v14 + 32))
  {
    if ((_DWORD)v10 == 1)
    {
      v32 = 1;
      sub_2212E5A38();
      v16 = v28;
      sub_2212F5BC8();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v26);
    }
    else
    {
      v33 = 2;
      sub_2212E59F4();
      sub_2212F5BC8();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v27);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v13, v15);
  }
  else
  {
    v31 = 0;
    sub_2212E5A7C();
    sub_2212F5BC8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v24);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v10;
}

unint64_t sub_2212E600C()
{
  unint64_t result;

  result = qword_255669000;
  if (!qword_255669000)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DE08, &type metadata for ProductRequest.IdentifierKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669000);
  }
  return result;
}

unint64_t sub_2212E6050()
{
  unint64_t result;

  result = qword_255669008;
  if (!qword_255669008)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DDB8, &type metadata for ProductRequest.IdentifierKind.SubscriptionGroupsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669008);
  }
  return result;
}

unint64_t sub_2212E6094()
{
  unint64_t result;

  result = qword_255669018;
  if (!qword_255669018)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DD68, &type metadata for ProductRequest.IdentifierKind.ProductsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669018);
  }
  return result;
}

uint64_t sub_2212E60D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73746375646F7270 && a2 == 0xE800000000000000;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002212FB640)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_2212E61C4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;

  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669328);
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v27 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669330);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669338);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v29 = a1;
  v12 = __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_2212E600C();
  v13 = v30;
  sub_2212F5E2C();
  if (v13)
    goto LABEL_6;
  v25 = v4;
  v14 = v27;
  v15 = v28;
  v30 = v8;
  v16 = sub_2212F5C28();
  if (*(_QWORD *)(v16 + 16) != 1)
  {
    v18 = sub_2212F59C4();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2556688F8);
    *v20 = &type metadata for ProductRequest.IdentifierKind;
    v12 = v10;
    sub_2212F5BD4();
    sub_2212F59AC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v7);
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    return v12;
  }
  v24 = v7;
  if ((*(_BYTE *)(v16 + 32) & 1) != 0)
  {
    LOBYTE(v31) = 1;
    sub_2212E6050();
    v17 = v24;
    sub_2212F5BC8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668D20);
    sub_2212E9AE4(&qword_255669340, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_2212F5C1C();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v17);
  }
  else
  {
    LOBYTE(v31) = 0;
    sub_2212E6094();
    sub_2212F5BC8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255668D20);
    sub_2212E9AE4(&qword_255669340, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_2212F5C1C();
    v22 = v30;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v3);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v24);
  }
  v12 = v31;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v12;
}

unint64_t sub_2212E6618()
{
  unint64_t result;

  result = qword_255669038;
  if (!qword_255669038)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DD18, &type metadata for ProductRequest.IncludedResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669038);
  }
  return result;
}

unint64_t sub_2212E665C()
{
  unint64_t result;

  result = qword_255669040;
  if (!qword_255669040)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DCC8, &type metadata for ProductRequest.IncludedResource.WinBackOffersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669040);
  }
  return result;
}

unint64_t sub_2212E66A0()
{
  unint64_t result;

  result = qword_255669048;
  if (!qword_255669048)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DC78, &type metadata for ProductRequest.IncludedResource.PromotionalOffersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669048);
  }
  return result;
}

uint64_t sub_2212E66E4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000002212FB660 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4F6B6361426E6977 && a2 == 0xED00007372656666)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2212E67F4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669308);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669310);
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669318);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212E6618();
  v10 = v26;
  sub_2212F5E2C();
  if (v10)
    goto LABEL_7;
  v11 = v5;
  v12 = v25;
  v21 = a1;
  v26 = v7;
  v13 = sub_2212F5C28();
  v14 = v6;
  if (*(_QWORD *)(v13 + 16) != 1)
  {
    v16 = sub_2212F59C4();
    swift_allocError();
    v17 = v9;
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2556688F8);
    *v19 = &type metadata for ProductRequest.IncludedResource;
    sub_2212F5BD4();
    sub_2212F59AC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v6);
    a1 = v21;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v6;
  }
  v6 = *(unsigned __int8 *)(v13 + 32);
  if ((v6 & 1) != 0)
  {
    v28 = 1;
    sub_2212E665C();
    sub_2212F5BC8();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v24);
  }
  else
  {
    v27 = 0;
    sub_2212E66A0();
    sub_2212F5BC8();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v23);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v6;
}

uint64_t type metadata accessor for ProductRequest()
{
  uint64_t result;

  result = qword_255669158;
  if (!qword_255669158)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2212E6B60()
{
  unint64_t result;

  result = qword_255669058;
  if (!qword_255669058)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DC28, &type metadata for ProductRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669058);
  }
  return result;
}

unint64_t sub_2212E6BA4()
{
  unint64_t result;

  result = qword_255669060;
  if (!qword_255669060)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ProductRequest.IdentifierKind, &type metadata for ProductRequest.IdentifierKind);
    atomic_store(result, (unint64_t *)&qword_255669060);
  }
  return result;
}

unint64_t sub_2212E6BE8()
{
  unint64_t result;

  result = qword_255669068;
  if (!qword_255669068)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ProductRequest.RequestKind, &type metadata for ProductRequest.RequestKind);
    atomic_store(result, (unint64_t *)&qword_255669068);
  }
  return result;
}

unint64_t sub_2212E6C2C()
{
  unint64_t result;

  result = qword_255669080;
  if (!qword_255669080)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ProductRequest.IncludedResource, &type metadata for ProductRequest.IncludedResource);
    atomic_store(result, (unint64_t *)&qword_255669080);
  }
  return result;
}

unint64_t sub_2212E6C70()
{
  unint64_t result;

  result = qword_255669088;
  if (!qword_255669088)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ProductRequest.Platform, &type metadata for ProductRequest.Platform);
    atomic_store(result, (unint64_t *)&qword_255669088);
  }
  return result;
}

unint64_t sub_2212E6CB8()
{
  unint64_t result;

  result = qword_255669098;
  if (!qword_255669098)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ProductRequest.IdentifierKind, &type metadata for ProductRequest.IdentifierKind);
    atomic_store(result, (unint64_t *)&qword_255669098);
  }
  return result;
}

unint64_t sub_2212E6CFC()
{
  unint64_t result;

  result = qword_2556690A0;
  if (!qword_2556690A0)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ProductRequest.RequestKind, &type metadata for ProductRequest.RequestKind);
    atomic_store(result, (unint64_t *)&qword_2556690A0);
  }
  return result;
}

uint64_t sub_2212E6D40(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255669070);
    v8 = a2();
    result = MEMORY[0x22766BAC4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2212E6DA8()
{
  unint64_t result;

  result = qword_2556690B0;
  if (!qword_2556690B0)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ProductRequest.IncludedResource, &type metadata for ProductRequest.IncludedResource);
    atomic_store(result, (unint64_t *)&qword_2556690B0);
  }
  return result;
}

unint64_t sub_2212E6DEC()
{
  unint64_t result;

  result = qword_2556690B8;
  if (!qword_2556690B8)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ProductRequest.Platform, &type metadata for ProductRequest.Platform);
    atomic_store(result, (unint64_t *)&qword_2556690B8);
  }
  return result;
}

uint64_t sub_2212E6E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ProductRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2212E6E78()
{
  unint64_t result;

  result = qword_2556690C0;
  if (!qword_2556690C0)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ProductRequest.Platform, &type metadata for ProductRequest.Platform);
    atomic_store(result, (unint64_t *)&qword_2556690C0);
  }
  return result;
}

unint64_t sub_2212E6EC0()
{
  unint64_t result;

  result = qword_2556690C8;
  if (!qword_2556690C8)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ProductRequest.RequestKind, &type metadata for ProductRequest.RequestKind);
    atomic_store(result, (unint64_t *)&qword_2556690C8);
  }
  return result;
}

unint64_t sub_2212E6F08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2556690D0;
  if (!qword_2556690D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2556690D8);
    result = MEMORY[0x22766BAC4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2556690D0);
  }
  return result;
}

unint64_t sub_2212E6F58()
{
  unint64_t result;

  result = qword_2556690E0;
  if (!qword_2556690E0)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for ProductRequest.IncludedResource, &type metadata for ProductRequest.IncludedResource);
    atomic_store(result, (unint64_t *)&qword_2556690E0);
  }
  return result;
}

uint64_t sub_2212E6F9C(uint64_t a1)
{
  uint64_t result;

  result = sub_22108DF44(&qword_2556690E8, (uint64_t (*)(uint64_t))type metadata accessor for ProductRequest, (uint64_t)&unk_22131D09C);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2212E6FD8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_22108DF44(&qword_2556690F0, (uint64_t (*)(uint64_t))type metadata accessor for ProductRequest, (uint64_t)&protocol conformance descriptor for ProductRequest);
  result = sub_22108DF44(&qword_2556690F8, (uint64_t (*)(uint64_t))type metadata accessor for ProductRequest, (uint64_t)&protocol conformance descriptor for ProductRequest);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for ProductRequest(unint64_t *a1, unint64_t *a2, int *a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for ClientOverride(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = a2[1];
      if (v11 >> 60 == 15)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        v12 = *a2;
        sub_22108DDF4(*a2, a2[1]);
        *a1 = v12;
        a1[1] = v11;
      }
      v13 = a2[3];
      a1[2] = a2[2];
      a1[3] = v13;
      v14 = a2[5];
      a1[4] = a2[4];
      a1[5] = v14;
      v15 = v7[7];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 3, v18))
      {
        v20 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v21 = sub_2212F2A24();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v16, v17, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 3, v18);
      }
      v22 = v7[8];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[8] = v24[8];
      v25 = v7[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v26[8] = v27[8];
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v28 = v7[10];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_2212F2AFC();
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      (*(void (**)(unint64_t *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    v34 = a3[5];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    v37 = *(_QWORD *)v36;
    v38 = v36[8];
    j__swift_bridgeObjectRetain_1(*(_QWORD *)v36, v38);
    *(_QWORD *)v35 = v37;
    v35[8] = v38;
    v39 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *(unint64_t *)((char *)a1 + v39) = *(unint64_t *)((char *)a2 + v39);
    v40 = a3[8];
    v41 = a3[9];
    v42 = (unint64_t *)((char *)a1 + v40);
    v43 = (unint64_t *)((char *)a2 + v40);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    *((_BYTE *)a1 + v41) = *((_BYTE *)a2 + v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ProductRequest(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = a1[1];
    if (v5 >> 60 != 15)
      sub_221054AE8(*a1, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = (char *)a1 + *(int *)(v4 + 28);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 3, v7))
    {
      v8 = sub_2212F2A24();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    }
    v9 = (char *)a1 + *(int *)(v4 + 40);
    v10 = sub_2212F2AFC();
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }
  j__swift_bridgeObjectRelease_0(*(uint64_t *)((char *)a1 + *(int *)(a2 + 20)), *((unsigned __int8 *)a1 + *(int *)(a2 + 20) + 8));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t *initializeWithCopy for ProductRequest(unint64_t *a1, unint64_t *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;

  v6 = (int *)type metadata accessor for ClientOverride(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      v10 = *a2;
      sub_22108DDF4(*a2, a2[1]);
      *a1 = v10;
      a1[1] = v9;
    }
    v11 = a2[3];
    a1[2] = a2[2];
    a1[3] = v11;
    v12 = a2[5];
    a1[4] = a2[4];
    a1[5] = v12;
    v13 = v6[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 3, v16))
    {
      v18 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v14, v15, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 3, v16);
    }
    v20 = v6[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v6[9];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v24[8] = v25[8];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v26 = v6[10];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_2212F2AFC();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    (*(void (**)(unint64_t *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v32 = a3[5];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)v34;
  v36 = v34[8];
  j__swift_bridgeObjectRetain_1(*(_QWORD *)v34, v36);
  *(_QWORD *)v33 = v35;
  v33[8] = v36;
  v37 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(unint64_t *)((char *)a1 + v37) = *(unint64_t *)((char *)a2 + v37);
  v38 = a3[8];
  v39 = a3[9];
  v40 = (unint64_t *)((char *)a1 + v38);
  v41 = (unint64_t *)((char *)a2 + v38);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  *((_BYTE *)a1 + v39) = *((_BYTE *)a2 + v39);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ProductRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, int *);
  int v9;
  int v10;
  unint64_t v11;
  size_t v12;
  uint64_t *v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t v79;

  v6 = (int *)type metadata accessor for ClientOverride(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_22105EBF8((uint64_t)a1, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    v15 = a2[1];
    if ((unint64_t)a1[1] >> 60 == 15)
    {
      if (v15 >> 60 != 15)
      {
        v16 = *a2;
        sub_22108DDF4(*a2, a2[1]);
        *a1 = v16;
        a1[1] = v15;
        goto LABEL_25;
      }
    }
    else
    {
      if (v15 >> 60 != 15)
      {
        v50 = *a2;
        sub_22108DDF4(*a2, a2[1]);
        v51 = *a1;
        v52 = a1[1];
        *a1 = v50;
        a1[1] = v15;
        sub_221054AE8(v51, v52);
LABEL_25:
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v53 = v6[7];
        v54 = (char *)a1 + v53;
        v55 = (char *)a2 + v53;
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
        v57 = *(_QWORD *)(v56 - 8);
        v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
        v59 = v58(v54, 3, v56);
        v60 = v58(v55, 3, v56);
        if (v59)
        {
          if (!v60)
          {
            v61 = sub_2212F2A24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v54, v55, v61);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 3, v56);
LABEL_31:
            v63 = v6[8];
            v64 = (char *)a1 + v63;
            v65 = (char *)a2 + v63;
            v66 = *(_QWORD *)v65;
            v64[8] = v65[8];
            *(_QWORD *)v64 = v66;
            v67 = v6[9];
            v68 = (char *)a1 + v67;
            v69 = (char *)a2 + v67;
            v70 = *(_QWORD *)v69;
            v68[8] = v69[8];
            *(_QWORD *)v68 = v70;
            v71 = v6[10];
            v72 = (char *)a1 + v71;
            v73 = (char *)a2 + v71;
            v74 = sub_2212F2AFC();
            v75 = *(_QWORD *)(v74 - 8);
            v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
            v77 = v76(v72, 1, v74);
            v78 = v76(v73, 1, v74);
            if (v77)
            {
              if (!v78)
              {
                (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
                goto LABEL_20;
              }
            }
            else
            {
              if (!v78)
              {
                (*(void (**)(char *, char *, uint64_t))(v75 + 24))(v72, v73, v74);
                goto LABEL_20;
              }
              (*(void (**)(char *, uint64_t))(v75 + 8))(v72, v74);
            }
            v12 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8) - 8) + 64);
            v13 = (uint64_t *)v72;
            v14 = (uint64_t *)v73;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v60)
          {
            v79 = sub_2212F2A24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 24))(v54, v55, v79);
            goto LABEL_31;
          }
          sub_2210A577C((uint64_t)v54, &qword_255668540);
        }
        v62 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        goto LABEL_31;
      }
      sub_2212CF434((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_25;
  }
  if (v10)
  {
LABEL_7:
    v12 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255668D38) - 8) + 64);
    v13 = a1;
    v14 = a2;
LABEL_8:
    memcpy(v13, v14, v12);
    goto LABEL_20;
  }
  v11 = a2[1];
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v17 = *a2;
    sub_22108DDF4(*a2, a2[1]);
    *a1 = v17;
    a1[1] = v11;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v18 = v6[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 3, v21))
  {
    v23 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v19, v20, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 3, v21);
  }
  v25 = v6[8];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  v26[8] = v27[8];
  *(_QWORD *)v26 = v28;
  v29 = v6[9];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)v31;
  v30[8] = v31[8];
  *(_QWORD *)v30 = v32;
  v33 = v6[10];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_2212F2AFC();
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_20:
  v39 = a3[5];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = *(_QWORD *)v41;
  v43 = v41[8];
  j__swift_bridgeObjectRetain_1(*(_QWORD *)v41, v43);
  v44 = *(_QWORD *)v40;
  v45 = v40[8];
  *(_QWORD *)v40 = v42;
  v40[8] = v43;
  j__swift_bridgeObjectRelease_0(v44, v45);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = a3[8];
  v47 = (uint64_t *)((char *)a1 + v46);
  v48 = (uint64_t *)((char *)a2 + v46);
  *v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

_OWORD *initializeWithTake for ProductRequest(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v6 = (int *)type metadata accessor for ClientOverride(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    v10 = v6[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 3, v13))
    {
      v15 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 3, v13);
    }
    v17 = v6[8];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = v6[9];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v21[8] = v22[8];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v23 = v6[10];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_2212F2AFC();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v29 = a3[5];
  v30 = a3[6];
  v31 = (char *)a1 + v29;
  v32 = (char *)a2 + v29;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  v33 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v33) = *(_OWORD *)((char *)a2 + v33);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

uint64_t *assignWithTake for ProductRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, int *);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  uint64_t *v19;
  uint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(char *, uint64_t, uint64_t);
  int v74;
  int v75;
  uint64_t v76;

  v6 = (int *)type metadata accessor for ClientOverride(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_22105EBF8((uint64_t)a1, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    v21 = a1[1];
    if (v21 >> 60 != 15)
    {
      v22 = a2[1];
      if (v22 >> 60 != 15)
      {
        v49 = *a1;
        *a1 = *a2;
        a1[1] = v22;
        sub_221054AE8(v49, v21);
LABEL_20:
        v50 = a2[3];
        a1[2] = a2[2];
        a1[3] = v50;
        swift_bridgeObjectRelease();
        v51 = a2[5];
        a1[4] = a2[4];
        a1[5] = v51;
        swift_bridgeObjectRelease();
        v52 = v6[7];
        v53 = (char *)a1 + v52;
        v54 = (char *)a2 + v52;
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
        v56 = *(_QWORD *)(v55 - 8);
        v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
        v58 = v57(v53, 3, v55);
        v59 = v57(v54, 3, v55);
        if (v58)
        {
          if (!v59)
          {
            v60 = sub_2212F2A24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v53, v54, v60);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 3, v55);
LABEL_26:
            v62 = v6[8];
            v63 = (char *)a1 + v62;
            v64 = (char *)a2 + v62;
            *(_QWORD *)v63 = *(_QWORD *)v64;
            v63[8] = v64[8];
            v65 = v6[9];
            v66 = (char *)a1 + v65;
            v67 = (char *)a2 + v65;
            v66[8] = v67[8];
            *(_QWORD *)v66 = *(_QWORD *)v67;
            v68 = v6[10];
            v69 = (char *)a1 + v68;
            v70 = (char *)a2 + v68;
            v71 = sub_2212F2AFC();
            v72 = *(_QWORD *)(v71 - 8);
            v73 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48);
            v74 = v73(v69, 1, v71);
            v75 = v73(v70, 1, v71);
            if (v74)
            {
              if (!v75)
              {
                (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v69, v70, v71);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
                goto LABEL_18;
              }
            }
            else
            {
              if (!v75)
              {
                (*(void (**)(char *, char *, uint64_t))(v72 + 40))(v69, v70, v71);
                goto LABEL_18;
              }
              (*(void (**)(char *, uint64_t))(v72 + 8))(v69, v71);
            }
            v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8) - 8) + 64);
            v19 = (uint64_t *)v69;
            v20 = (uint64_t *)v70;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v59)
          {
            v76 = sub_2212F2A24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 40))(v53, v54, v76);
            goto LABEL_26;
          }
          sub_2210A577C((uint64_t)v53, &qword_255668540);
        }
        v61 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        goto LABEL_26;
      }
      sub_2212CF434((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_20;
  }
  if (v10)
  {
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255668D38) - 8) + 64);
    v19 = a1;
    v20 = a2;
LABEL_8:
    memcpy(v19, v20, v18);
    goto LABEL_18;
  }
  v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 3, v15))
  {
    v17 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v23 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v13, v14, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 3, v15);
  }
  v24 = v6[8];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v25[8] = v26[8];
  v27 = v6[9];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v28[8] = v29[8];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v30 = v6[10];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_2212F2AFC();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  v36 = a3[5];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *(_QWORD *)v38;
  LOBYTE(v38) = v38[8];
  v40 = *(_QWORD *)v37;
  v41 = v37[8];
  *(_QWORD *)v37 = v39;
  v37[8] = (char)v38;
  j__swift_bridgeObjectRelease_0(v40, v41);
  v42 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(uint64_t *)((char *)a1 + v42) = *(uint64_t *)((char *)a2 + v42);
  swift_bridgeObjectRelease();
  v43 = a3[8];
  v44 = (uint64_t *)((char *)a1 + v43);
  v45 = (uint64_t *)((char *)a2 + v43);
  v47 = *v45;
  v46 = v45[1];
  *v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212E83C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ProductRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212E8450(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

void sub_2212E84CC()
{
  unint64_t v0;

  sub_2212DFF40();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for ProductRequest.Platform()
{
  return &type metadata for ProductRequest.Platform;
}

ValueMetadata *type metadata accessor for ProductRequest.RequestKind()
{
  return &type metadata for ProductRequest.RequestKind;
}

uint64_t initializeBufferWithCopyOfBuffer for ProductRequest.IdentifierKind(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  j__swift_bridgeObjectRetain_1(*a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for ProductRequest.IdentifierKind(uint64_t a1)
{
  return j__swift_bridgeObjectRelease_0(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t *assignWithCopy for ProductRequest.IdentifierKind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  j__swift_bridgeObjectRetain_1(*a2, v4);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_bridgeObjectRelease_0(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8_0(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t *assignWithTake for ProductRequest.IdentifierKind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  v6 = *((unsigned __int8 *)a1 + 8);
  *a1 = v3;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_bridgeObjectRelease_0(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProductRequest.IdentifierKind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

ValueMetadata *type metadata accessor for ProductRequest.IdentifierKind()
{
  return &type metadata for ProductRequest.IdentifierKind;
}

ValueMetadata *type metadata accessor for ProductRequest.IncludedResource()
{
  return &type metadata for ProductRequest.IncludedResource;
}

uint64_t storeEnumTagSinglePayload for ProductRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2212E8744 + 4 * byte_22131CD90[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2212E8778 + 4 * byte_22131CD8B[v4]))();
}

uint64_t sub_2212E8778(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212E8780(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212E8788);
  return result;
}

uint64_t sub_2212E8794(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212E879CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2212E87A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212E87A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProductRequest.CodingKeys()
{
  return &type metadata for ProductRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.IncludedResource.CodingKeys()
{
  return &type metadata for ProductRequest.IncludedResource.CodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.IncludedResource.PromotionalOffersCodingKeys()
{
  return &type metadata for ProductRequest.IncludedResource.PromotionalOffersCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.IncludedResource.WinBackOffersCodingKeys()
{
  return &type metadata for ProductRequest.IncludedResource.WinBackOffersCodingKeys;
}

uint64_t _s15StoreKit_Shared14ProductRequestV16IncludedResourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2212E8840 + 4 * byte_22131CD9A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2212E8874 + 4 * byte_22131CD95[v4]))();
}

uint64_t sub_2212E8874(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212E887C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212E8884);
  return result;
}

uint64_t sub_2212E8890(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212E8898);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2212E889C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212E88A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProductRequest.IdentifierKind.CodingKeys()
{
  return &type metadata for ProductRequest.IdentifierKind.CodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.IdentifierKind.ProductsCodingKeys()
{
  return &type metadata for ProductRequest.IdentifierKind.ProductsCodingKeys;
}

uint64_t _s15StoreKit_Shared14ProductRequestV14IdentifierKindO18ProductsCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2212E8918 + 4 * byte_22131CD9F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2212E8938 + 4 * byte_22131CDA4[v4]))();
}

_BYTE *sub_2212E8918(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2212E8938(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2212E8940(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2212E8948(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2212E8950(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2212E8958(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ProductRequest.IdentifierKind.SubscriptionGroupsCodingKeys()
{
  return &type metadata for ProductRequest.IdentifierKind.SubscriptionGroupsCodingKeys;
}

uint64_t _s15StoreKit_Shared14ProductRequestV11RequestKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2212E89C0 + 4 * byte_22131CDAE[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2212E89F4 + 4 * byte_22131CDA9[v4]))();
}

uint64_t sub_2212E89F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212E89FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212E8A04);
  return result;
}

uint64_t sub_2212E8A10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212E8A18);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2212E8A1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212E8A24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProductRequest.RequestKind.CodingKeys()
{
  return &type metadata for ProductRequest.RequestKind.CodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.RequestKind.LegacyFetchSoftwareAddOnsCodingKeys()
{
  return &type metadata for ProductRequest.RequestKind.LegacyFetchSoftwareAddOnsCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.RequestKind.LegacyMediaAPICodingKeys()
{
  return &type metadata for ProductRequest.RequestKind.LegacyMediaAPICodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.RequestKind.MediaAPICodingKeys()
{
  return &type metadata for ProductRequest.RequestKind.MediaAPICodingKeys;
}

uint64_t _s15StoreKit_Shared14ProductRequestV8PlatformOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2212E8ABC + 4 * byte_22131CDB8[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2212E8AF0 + 4 * byte_22131CDB3[v4]))();
}

uint64_t sub_2212E8AF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212E8AF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212E8B00);
  return result;
}

uint64_t sub_2212E8B0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212E8B14);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2212E8B18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212E8B20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.CodingKeys()
{
  return &type metadata for ProductRequest.Platform.CodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.OsDefaultCodingKeys()
{
  return &type metadata for ProductRequest.Platform.OsDefaultCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.IPadCodingKeys()
{
  return &type metadata for ProductRequest.Platform.IPadCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.IPhoneCodingKeys()
{
  return &type metadata for ProductRequest.Platform.IPhoneCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.MacCodingKeys()
{
  return &type metadata for ProductRequest.Platform.MacCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.RealityCodingKeys()
{
  return &type metadata for ProductRequest.Platform.RealityCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.TvCodingKeys()
{
  return &type metadata for ProductRequest.Platform.TvCodingKeys;
}

ValueMetadata *type metadata accessor for ProductRequest.Platform.WatchCodingKeys()
{
  return &type metadata for ProductRequest.Platform.WatchCodingKeys;
}

unint64_t sub_2212E8BB0()
{
  unint64_t result;

  result = qword_2556691A0;
  if (!qword_2556691A0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D620, &type metadata for ProductRequest.Platform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556691A0);
  }
  return result;
}

unint64_t sub_2212E8BF8()
{
  unint64_t result;

  result = qword_2556691A8;
  if (!qword_2556691A8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D7C8, &type metadata for ProductRequest.RequestKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556691A8);
  }
  return result;
}

unint64_t sub_2212E8C40()
{
  unint64_t result;

  result = qword_2556691B0;
  if (!qword_2556691B0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D880, &type metadata for ProductRequest.IdentifierKind.SubscriptionGroupsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556691B0);
  }
  return result;
}

unint64_t sub_2212E8C88()
{
  unint64_t result;

  result = qword_2556691B8;
  if (!qword_2556691B8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D938, &type metadata for ProductRequest.IdentifierKind.ProductsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556691B8);
  }
  return result;
}

unint64_t sub_2212E8CD0()
{
  unint64_t result;

  result = qword_2556691C0;
  if (!qword_2556691C0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D9F0, &type metadata for ProductRequest.IdentifierKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556691C0);
  }
  return result;
}

unint64_t sub_2212E8D18()
{
  unint64_t result;

  result = qword_2556691C8;
  if (!qword_2556691C8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DB48, &type metadata for ProductRequest.IncludedResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556691C8);
  }
  return result;
}

unint64_t sub_2212E8D60()
{
  unint64_t result;

  result = qword_2556691D0;
  if (!qword_2556691D0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DC00, &type metadata for ProductRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556691D0);
  }
  return result;
}

unint64_t sub_2212E8DA8()
{
  unint64_t result;

  result = qword_2556691D8;
  if (!qword_2556691D8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DB70, &type metadata for ProductRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556691D8);
  }
  return result;
}

unint64_t sub_2212E8DF0()
{
  unint64_t result;

  result = qword_2556691E0;
  if (!qword_2556691E0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DB98, &type metadata for ProductRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556691E0);
  }
  return result;
}

unint64_t sub_2212E8E38()
{
  unint64_t result;

  result = qword_2556691E8;
  if (!qword_2556691E8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DA68, &type metadata for ProductRequest.IncludedResource.PromotionalOffersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556691E8);
  }
  return result;
}

unint64_t sub_2212E8E80()
{
  unint64_t result;

  result = qword_2556691F0;
  if (!qword_2556691F0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DA90, &type metadata for ProductRequest.IncludedResource.PromotionalOffersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556691F0);
  }
  return result;
}

unint64_t sub_2212E8EC8()
{
  unint64_t result;

  result = qword_2556691F8;
  if (!qword_2556691F8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DA18, &type metadata for ProductRequest.IncludedResource.WinBackOffersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556691F8);
  }
  return result;
}

unint64_t sub_2212E8F10()
{
  unint64_t result;

  result = qword_255669200;
  if (!qword_255669200)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DA40, &type metadata for ProductRequest.IncludedResource.WinBackOffersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669200);
  }
  return result;
}

unint64_t sub_2212E8F58()
{
  unint64_t result;

  result = qword_255669208;
  if (!qword_255669208)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DAB8, &type metadata for ProductRequest.IncludedResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669208);
  }
  return result;
}

unint64_t sub_2212E8FA0()
{
  unint64_t result;

  result = qword_255669210;
  if (!qword_255669210)
  {
    result = MEMORY[0x22766BAC4](&unk_22131DAE0, &type metadata for ProductRequest.IncludedResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669210);
  }
  return result;
}

unint64_t sub_2212E8FE8()
{
  unint64_t result;

  result = qword_255669218;
  if (!qword_255669218)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D8A8, &type metadata for ProductRequest.IdentifierKind.ProductsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669218);
  }
  return result;
}

unint64_t sub_2212E9030()
{
  unint64_t result;

  result = qword_255669220;
  if (!qword_255669220)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D8D0, &type metadata for ProductRequest.IdentifierKind.ProductsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669220);
  }
  return result;
}

unint64_t sub_2212E9078()
{
  unint64_t result;

  result = qword_255669228;
  if (!qword_255669228)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D7F0, &type metadata for ProductRequest.IdentifierKind.SubscriptionGroupsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669228);
  }
  return result;
}

unint64_t sub_2212E90C0()
{
  unint64_t result;

  result = qword_255669230;
  if (!qword_255669230)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D818, &type metadata for ProductRequest.IdentifierKind.SubscriptionGroupsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669230);
  }
  return result;
}

unint64_t sub_2212E9108()
{
  unint64_t result;

  result = qword_255669238;
  if (!qword_255669238)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D960, &type metadata for ProductRequest.IdentifierKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669238);
  }
  return result;
}

unint64_t sub_2212E9150()
{
  unint64_t result;

  result = qword_255669240;
  if (!qword_255669240)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D988, &type metadata for ProductRequest.IdentifierKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669240);
  }
  return result;
}

unint64_t sub_2212E9198()
{
  unint64_t result;

  result = qword_255669248;
  if (!qword_255669248)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D6E8, &type metadata for ProductRequest.RequestKind.LegacyFetchSoftwareAddOnsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669248);
  }
  return result;
}

unint64_t sub_2212E91E0()
{
  unint64_t result;

  result = qword_255669250;
  if (!qword_255669250)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D710, &type metadata for ProductRequest.RequestKind.LegacyFetchSoftwareAddOnsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669250);
  }
  return result;
}

unint64_t sub_2212E9228()
{
  unint64_t result;

  result = qword_255669258;
  if (!qword_255669258)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D698, &type metadata for ProductRequest.RequestKind.LegacyMediaAPICodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669258);
  }
  return result;
}

unint64_t sub_2212E9270()
{
  unint64_t result;

  result = qword_255669260;
  if (!qword_255669260)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D6C0, &type metadata for ProductRequest.RequestKind.LegacyMediaAPICodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669260);
  }
  return result;
}

unint64_t sub_2212E92B8()
{
  unint64_t result;

  result = qword_255669268;
  if (!qword_255669268)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D648, &type metadata for ProductRequest.RequestKind.MediaAPICodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669268);
  }
  return result;
}

unint64_t sub_2212E9300()
{
  unint64_t result;

  result = qword_255669270;
  if (!qword_255669270)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D670, &type metadata for ProductRequest.RequestKind.MediaAPICodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669270);
  }
  return result;
}

unint64_t sub_2212E9348()
{
  unint64_t result;

  result = qword_255669278;
  if (!qword_255669278)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D738, &type metadata for ProductRequest.RequestKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669278);
  }
  return result;
}

unint64_t sub_2212E9390()
{
  unint64_t result;

  result = qword_255669280;
  if (!qword_255669280)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D760, &type metadata for ProductRequest.RequestKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669280);
  }
  return result;
}

unint64_t sub_2212E93D8()
{
  unint64_t result;

  result = qword_255669288;
  if (!qword_255669288)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D540, &type metadata for ProductRequest.Platform.OsDefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669288);
  }
  return result;
}

unint64_t sub_2212E9420()
{
  unint64_t result;

  result = qword_255669290;
  if (!qword_255669290)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D568, &type metadata for ProductRequest.Platform.OsDefaultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669290);
  }
  return result;
}

unint64_t sub_2212E9468()
{
  unint64_t result;

  result = qword_255669298;
  if (!qword_255669298)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D4F0, &type metadata for ProductRequest.Platform.IPadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669298);
  }
  return result;
}

unint64_t sub_2212E94B0()
{
  unint64_t result;

  result = qword_2556692A0;
  if (!qword_2556692A0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D518, &type metadata for ProductRequest.Platform.IPadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556692A0);
  }
  return result;
}

unint64_t sub_2212E94F8()
{
  unint64_t result;

  result = qword_2556692A8;
  if (!qword_2556692A8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D4A0, &type metadata for ProductRequest.Platform.IPhoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556692A8);
  }
  return result;
}

unint64_t sub_2212E9540()
{
  unint64_t result;

  result = qword_2556692B0;
  if (!qword_2556692B0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D4C8, &type metadata for ProductRequest.Platform.IPhoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556692B0);
  }
  return result;
}

unint64_t sub_2212E9588()
{
  unint64_t result;

  result = qword_2556692B8;
  if (!qword_2556692B8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D450, &type metadata for ProductRequest.Platform.MacCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556692B8);
  }
  return result;
}

unint64_t sub_2212E95D0()
{
  unint64_t result;

  result = qword_2556692C0;
  if (!qword_2556692C0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D478, &type metadata for ProductRequest.Platform.MacCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556692C0);
  }
  return result;
}

unint64_t sub_2212E9618()
{
  unint64_t result;

  result = qword_2556692C8;
  if (!qword_2556692C8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D400, &type metadata for ProductRequest.Platform.RealityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556692C8);
  }
  return result;
}

unint64_t sub_2212E9660()
{
  unint64_t result;

  result = qword_2556692D0;
  if (!qword_2556692D0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D428, &type metadata for ProductRequest.Platform.RealityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556692D0);
  }
  return result;
}

unint64_t sub_2212E96A8()
{
  unint64_t result;

  result = qword_2556692D8;
  if (!qword_2556692D8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D3B0, &type metadata for ProductRequest.Platform.TvCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556692D8);
  }
  return result;
}

unint64_t sub_2212E96F0()
{
  unint64_t result;

  result = qword_2556692E0;
  if (!qword_2556692E0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D3D8, &type metadata for ProductRequest.Platform.TvCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556692E0);
  }
  return result;
}

unint64_t sub_2212E9738()
{
  unint64_t result;

  result = qword_2556692E8;
  if (!qword_2556692E8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D360, &type metadata for ProductRequest.Platform.WatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556692E8);
  }
  return result;
}

unint64_t sub_2212E9780()
{
  unint64_t result;

  result = qword_2556692F0;
  if (!qword_2556692F0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D388, &type metadata for ProductRequest.Platform.WatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556692F0);
  }
  return result;
}

unint64_t sub_2212E97C8()
{
  unint64_t result;

  result = qword_2556692F8;
  if (!qword_2556692F8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D590, &type metadata for ProductRequest.Platform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556692F8);
  }
  return result;
}

unint64_t sub_2212E9810()
{
  unint64_t result;

  result = qword_255669300;
  if (!qword_255669300)
  {
    result = MEMORY[0x22766BAC4](&unk_22131D5B8, &type metadata for ProductRequest.Platform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669300);
  }
  return result;
}

uint64_t sub_2212E9854(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x764F746E65696C63 && a2 == 0xEE00656469727265;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002212FB680 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_2212E9AE4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255668D20);
    v8 = a2;
    result = MEMORY[0x22766BAC4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

BOOL static PurchaseIntentRequest.Kind.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t PurchaseIntentRequest.Kind.hash(into:)()
{
  return sub_2212F5DE4();
}

uint64_t sub_2212E9B88()
{
  sub_2212E9F24();
  return sub_2212F5E50();
}

uint64_t sub_2212E9BB0()
{
  sub_2212E9F24();
  return sub_2212F5E5C();
}

uint64_t sub_2212E9BD8()
{
  sub_2212E9EE0();
  return sub_2212F5E50();
}

uint64_t sub_2212E9C00()
{
  sub_2212E9EE0();
  return sub_2212F5E5C();
}

uint64_t sub_2212E9C28()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E65696C63;
  else
    return 7105633;
}

uint64_t sub_2212E9C58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212EB6EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212E9C7C()
{
  sub_2212E9E9C();
  return sub_2212F5E50();
}

uint64_t sub_2212E9CA4()
{
  sub_2212E9E9C();
  return sub_2212F5E5C();
}

uint64_t PurchaseIntentRequest.Kind.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;

  v17 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556693A8);
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556693B0);
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556693B8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212E9E9C();
  sub_2212F5E38();
  if ((v17 & 1) != 0)
  {
    v19 = 1;
    sub_2212E9EE0();
    sub_2212F5C34();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
  }
  else
  {
    v18 = 0;
    sub_2212E9F24();
    sub_2212F5C34();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t sub_2212E9E9C()
{
  unint64_t result;

  result = qword_2556693C0;
  if (!qword_2556693C0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131EA94, &type metadata for PurchaseIntentRequest.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556693C0);
  }
  return result;
}

unint64_t sub_2212E9EE0()
{
  unint64_t result;

  result = qword_2556693C8;
  if (!qword_2556693C8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131EA44, &type metadata for PurchaseIntentRequest.Kind.ClientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556693C8);
  }
  return result;
}

unint64_t sub_2212E9F24()
{
  unint64_t result;

  result = qword_2556693D0;
  if (!qword_2556693D0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E9F4, &type metadata for PurchaseIntentRequest.Kind.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556693D0);
  }
  return result;
}

uint64_t PurchaseIntentRequest.Kind.hashValue.getter()
{
  sub_2212F5DD8();
  sub_2212F5DE4();
  return sub_2212F5E08();
}

uint64_t PurchaseIntentRequest.Kind.init(from:)(_QWORD *a1)
{
  return sub_2212EB7C4(a1) & 1;
}

uint64_t sub_2212E9FC4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2212EB7C4(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_2212E9FF0(_QWORD *a1)
{
  unsigned __int8 *v1;

  return PurchaseIntentRequest.Kind.encode(to:)(a1, *v1);
}

uint64_t PurchaseIntentRequest.Add.intent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2211E7148(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for PurchaseIntentInternal);
}

uint64_t PurchaseIntentRequest.Add.launchApp.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PurchaseIntentRequest.Add(0) + 20));
}

uint64_t PurchaseIntentRequest.Add.logKey.getter()
{
  return sub_2212EA6F4(type metadata accessor for PurchaseIntentRequest.Add);
}

uint64_t PurchaseIntentRequest.Add.logKey.setter(uint64_t a1, uint64_t a2)
{
  return sub_2212EA740(a1, a2, type metadata accessor for PurchaseIntentRequest.Add);
}

uint64_t (*PurchaseIntentRequest.Add.logKey.modify())(_QWORD)
{
  type metadata accessor for PurchaseIntentRequest.Add(0);
  return nullsub_1;
}

uint64_t PurchaseIntentRequest.Add.notify.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PurchaseIntentRequest.Add(0) + 28));
}

int *PurchaseIntentRequest.Add.init(intent:launchApp:notify:logKey:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int *result;
  _QWORD *v12;

  sub_2212EBB04(a1, a6);
  result = (int *)type metadata accessor for PurchaseIntentRequest.Add(0);
  *(_BYTE *)(a6 + result[5]) = a2;
  v12 = (_QWORD *)(a6 + result[6]);
  *v12 = a4;
  v12[1] = a5;
  *(_BYTE *)(a6 + result[7]) = a3;
  return result;
}

uint64_t sub_2212EA114()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212EA140 + 4 * byte_22131E220[*v0]))(0x746E65746E69, 0xE600000000000000);
}

uint64_t sub_2212EA140()
{
  return 0x704168636E75616CLL;
}

uint64_t sub_2212EA15C()
{
  return 0x79654B676F6CLL;
}

uint64_t sub_2212EA16C()
{
  return 0x796669746F6ELL;
}

uint64_t sub_2212EA17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212EF650(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212EA1A0()
{
  sub_2212EBB48();
  return sub_2212F5E50();
}

uint64_t sub_2212EA1C8()
{
  sub_2212EBB48();
  return sub_2212F5E5C();
}

uint64_t PurchaseIntentRequest.Add.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556693D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212EBB48();
  sub_2212F5E38();
  v8[15] = 0;
  type metadata accessor for PurchaseIntentInternal();
  sub_22108DF44(&qword_2556693E8, (uint64_t (*)(uint64_t))type metadata accessor for PurchaseIntentInternal, (uint64_t)&protocol conformance descriptor for PurchaseIntentInternal);
  sub_2212F5C7C();
  if (!v1)
  {
    type metadata accessor for PurchaseIntentRequest.Add(0);
    v8[14] = 1;
    sub_2212F5C70();
    v8[13] = 2;
    sub_2212F5C64();
    v8[12] = 3;
    sub_2212F5C70();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PurchaseIntentRequest.Add.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v22 = a2;
  v4 = type metadata accessor for PurchaseIntentInternal();
  MEMORY[0x24BDAC7A8](v4);
  v23 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556693F0);
  v6 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for PurchaseIntentRequest.Add(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_2212EBB48();
  sub_2212F5E2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  v13 = v6;
  v14 = (uint64_t)v11;
  v29 = 0;
  sub_22108DF44(&qword_2556693F8, (uint64_t (*)(uint64_t))type metadata accessor for PurchaseIntentInternal, (uint64_t)&protocol conformance descriptor for PurchaseIntentInternal);
  v16 = (uint64_t)v23;
  v15 = v24;
  sub_2212F5C1C();
  sub_2212EBB04(v16, v14);
  v28 = 1;
  *(_BYTE *)(v14 + v9[5]) = sub_2212F5C10() & 1;
  v27 = 2;
  v17 = sub_2212F5C04();
  v18 = (uint64_t *)(v14 + v9[6]);
  *v18 = v17;
  v18[1] = v19;
  v26 = 3;
  v20 = sub_2212F5C10();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v15);
  *(_BYTE *)(v14 + v9[7]) = v20 & 1;
  sub_2211E7148(v14, v22, type metadata accessor for PurchaseIntentRequest.Add);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_22105EBF8(v14, type metadata accessor for PurchaseIntentRequest.Add);
}

uint64_t sub_2212EA694@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseIntentRequest.Add.init(from:)(a1, a2);
}

uint64_t sub_2212EA6A8(_QWORD *a1)
{
  return PurchaseIntentRequest.Add.encode(to:)(a1);
}

uint64_t PurchaseIntentRequest.Remove.clientOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2212DDAC8(v1, a1);
}

uint64_t PurchaseIntentRequest.Remove.kind.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PurchaseIntentRequest.Remove(0) + 20));
}

uint64_t PurchaseIntentRequest.Remove.logKey.getter()
{
  return sub_2212EA6F4(type metadata accessor for PurchaseIntentRequest.Remove);
}

uint64_t sub_2212EA6F4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PurchaseIntentRequest.Remove.logKey.setter(uint64_t a1, uint64_t a2)
{
  return sub_2212EA740(a1, a2, type metadata accessor for PurchaseIntentRequest.Remove);
}

uint64_t sub_2212EA740(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3(0) + 24));
  result = swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*PurchaseIntentRequest.Remove.logKey.modify())(_QWORD)
{
  type metadata accessor for PurchaseIntentRequest.Remove(0);
  return nullsub_1;
}

uint64_t PurchaseIntentRequest.Remove.productID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PurchaseIntentRequest.Remove(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

int *PurchaseIntentRequest.Remove.init(clientOverride:kind:logKey:productID:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v12;
  int *result;
  _QWORD *v14;
  _QWORD *v15;

  v12 = a2 & 1;
  sub_2212E0368(a1, a7);
  result = (int *)type metadata accessor for PurchaseIntentRequest.Remove(0);
  *(_BYTE *)(a7 + result[5]) = v12;
  v14 = (_QWORD *)(a7 + result[6]);
  *v14 = a3;
  v14[1] = a4;
  v15 = (_QWORD *)(a7 + result[7]);
  *v15 = a5;
  v15[1] = a6;
  return result;
}

uint64_t sub_2212EA858()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212EA894 + 4 * byte_22131E224[*v0]))(0x764F746E65696C63, 0xEE00656469727265);
}

uint64_t sub_2212EA894()
{
  return 1684957547;
}

uint64_t sub_2212EA8A4()
{
  return 0x79654B676F6CLL;
}

uint64_t sub_2212EA8B8()
{
  return 0x49746375646F7270;
}

uint64_t sub_2212EA8D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212EF7FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212EA8F8()
{
  sub_2212EBBA0();
  return sub_2212F5E50();
}

uint64_t sub_2212EA920()
{
  sub_2212EBBA0();
  return sub_2212F5E5C();
}

uint64_t PurchaseIntentRequest.Remove.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669400);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212EBBA0();
  sub_2212F5E38();
  v10[15] = 0;
  type metadata accessor for ClientOverride(0);
  sub_22108DF44(&qword_255668D60, type metadata accessor for ClientOverride, (uint64_t)&protocol conformance descriptor for ClientOverride);
  sub_2212F5C4C();
  if (!v2)
  {
    v10[14] = *(_BYTE *)(v3 + *(int *)(type metadata accessor for PurchaseIntentRequest.Remove(0) + 20));
    v10[13] = 1;
    sub_2212EBBE4();
    sub_2212F5C7C();
    v10[12] = 2;
    sub_2212F5C64();
    v10[11] = 3;
    sub_2212F5C40();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PurchaseIntentRequest.Remove.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v23 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669418);
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for PurchaseIntentRequest.Remove(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_2212EBBA0();
  sub_2212F5E2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  type metadata accessor for ClientOverride(0);
  v30 = 0;
  sub_22108DF44(&qword_255668D70, type metadata accessor for ClientOverride, (uint64_t)&protocol conformance descriptor for ClientOverride);
  sub_2212F5BEC();
  sub_2212E0368((uint64_t)v6, (uint64_t)v12);
  v28 = 1;
  sub_2212EBC28();
  sub_2212F5C1C();
  v12[v10[5]] = v29;
  v27 = 2;
  v14 = sub_2212F5C04();
  v15 = (uint64_t *)&v12[v10[6]];
  *v15 = v14;
  v15[1] = v16;
  v26 = 3;
  v17 = sub_2212F5BE0();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  v20 = (uint64_t *)&v12[v10[7]];
  *v20 = v17;
  v20[1] = v19;
  sub_2211E7148((uint64_t)v12, v23, type metadata accessor for PurchaseIntentRequest.Remove);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_22105EBF8((uint64_t)v12, type metadata accessor for PurchaseIntentRequest.Remove);
}

uint64_t sub_2212EAE38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseIntentRequest.Remove.init(from:)(a1, a2);
}

uint64_t sub_2212EAE4C(_QWORD *a1)
{
  return PurchaseIntentRequest.Remove.encode(to:)(a1);
}

uint64_t PurchaseIntentRequest.Query.after.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2212F2AF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PurchaseIntentRequest.Query.clientOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PurchaseIntentRequest.Query(0) + 20);
  return sub_2212DDAC8(v3, a1);
}

uint64_t PurchaseIntentRequest.Query.kind.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PurchaseIntentRequest.Query(0) + 24));
}

uint64_t PurchaseIntentRequest.Query.logKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PurchaseIntentRequest.Query(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseIntentRequest.Query.logKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PurchaseIntentRequest.Query(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PurchaseIntentRequest.Query.logKey.modify())(_QWORD)
{
  type metadata accessor for PurchaseIntentRequest.Query(0);
  return nullsub_1;
}

uint64_t PurchaseIntentRequest.Query.init(after:clientOverride:kind:logKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v11;
  uint64_t v12;
  int *v13;
  uint64_t result;
  _QWORD *v15;

  v11 = a3 & 1;
  v12 = sub_2212F2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  v13 = (int *)type metadata accessor for PurchaseIntentRequest.Query(0);
  result = sub_2212E0368(a2, a6 + v13[5]);
  *(_BYTE *)(a6 + v13[6]) = v11;
  v15 = (_QWORD *)(a6 + v13[7]);
  *v15 = a4;
  v15[1] = a5;
  return result;
}

uint64_t sub_2212EB020()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2212EB04C + 4 * byte_22131E228[*v0]))(0x7265746661, 0xE500000000000000);
}

uint64_t sub_2212EB04C()
{
  return 0x764F746E65696C63;
}

uint64_t sub_2212EB070()
{
  return 1684957547;
}

uint64_t sub_2212EB080()
{
  return 0x79654B676F6CLL;
}

uint64_t sub_2212EB094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212EF9CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212EB0B8()
{
  sub_2212EBC80();
  return sub_2212F5E50();
}

uint64_t sub_2212EB0E0()
{
  sub_2212EBC80();
  return sub_2212F5E5C();
}

uint64_t PurchaseIntentRequest.Query.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669428);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212EBC80();
  sub_2212F5E38();
  v11[15] = 0;
  sub_2212F2AF0();
  sub_22108DF44(&qword_255668C40, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_2212F5C7C();
  if (!v2)
  {
    v9 = type metadata accessor for PurchaseIntentRequest.Query(0);
    v11[14] = 1;
    type metadata accessor for ClientOverride(0);
    sub_22108DF44(&qword_255668D60, type metadata accessor for ClientOverride, (uint64_t)&protocol conformance descriptor for ClientOverride);
    sub_2212F5C4C();
    v11[13] = *(_BYTE *)(v3 + *(int *)(v9 + 24));
    v11[12] = 2;
    sub_2212EBBE4();
    sub_2212F5C7C();
    v11[11] = 3;
    sub_2212F5C64();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PurchaseIntentRequest.Query.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_2212F2AF0();
  v5 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v31 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_255669438);
  v7 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PurchaseIntentRequest.Query(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212EBC80();
  v33 = v9;
  v13 = (uint64_t)v34;
  sub_2212F5E2C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = (uint64_t)v29;
  v26 = v10;
  v27 = v5;
  v34 = a1;
  v15 = v12;
  v39 = 0;
  sub_22108DF44(&qword_255668C50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v17 = v30;
  v16 = v31;
  sub_2212F5C1C();
  v18 = (uint64_t)v12;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v12, v16, v17);
  type metadata accessor for ClientOverride(0);
  v38 = 1;
  sub_22108DF44(&qword_255668D70, type metadata accessor for ClientOverride, (uint64_t)&protocol conformance descriptor for ClientOverride);
  sub_2212F5BEC();
  v19 = v26;
  sub_2212E0368(v14, (uint64_t)&v15[*(int *)(v26 + 20)]);
  v36 = 2;
  sub_2212EBC28();
  sub_2212F5C1C();
  v15[*(int *)(v19 + 24)] = v37;
  v35 = 3;
  v20 = sub_2212F5C04();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v33, v32);
  v23 = (uint64_t *)(v18 + *(int *)(v19 + 28));
  *v23 = v20;
  v23[1] = v22;
  sub_2211E7148(v18, v28, type metadata accessor for PurchaseIntentRequest.Query);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_22105EBF8(v18, type metadata accessor for PurchaseIntentRequest.Query);
}

uint64_t sub_2212EB6C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseIntentRequest.Query.init(from:)(a1, a2);
}

uint64_t sub_2212EB6D8(_QWORD *a1)
{
  return PurchaseIntentRequest.Query.encode(to:)(a1);
}

uint64_t sub_2212EB6EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65696C63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2212EB7C4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556696D0);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556696D8);
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556696E0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212E9E9C();
  v10 = v26;
  sub_2212F5E2C();
  if (v10)
    goto LABEL_7;
  v11 = v5;
  v12 = v25;
  v21 = a1;
  v26 = v7;
  v13 = sub_2212F5C28();
  v14 = v6;
  if (*(_QWORD *)(v13 + 16) != 1)
  {
    v16 = sub_2212F59C4();
    swift_allocError();
    v17 = v9;
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2556688F8);
    *v19 = &type metadata for PurchaseIntentRequest.Kind;
    sub_2212F5BD4();
    sub_2212F59AC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v6);
    a1 = v21;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v6;
  }
  v6 = *(unsigned __int8 *)(v13 + 32);
  if ((v6 & 1) != 0)
  {
    v28 = 1;
    sub_2212E9EE0();
    sub_2212F5BC8();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v24);
  }
  else
  {
    v27 = 0;
    sub_2212E9F24();
    sub_2212F5BC8();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v23);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v6;
}

uint64_t type metadata accessor for PurchaseIntentRequest.Add(uint64_t a1)
{
  return sub_2212CDD18(a1, qword_2556694E0);
}

uint64_t sub_2212EBB04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PurchaseIntentInternal();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2212EBB48()
{
  unint64_t result;

  result = qword_2556693E0;
  if (!qword_2556693E0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E9A4, &type metadata for PurchaseIntentRequest.Add.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556693E0);
  }
  return result;
}

uint64_t type metadata accessor for PurchaseIntentRequest.Remove(uint64_t a1)
{
  return sub_2212CDD18(a1, qword_255669578);
}

unint64_t sub_2212EBBA0()
{
  unint64_t result;

  result = qword_255669408;
  if (!qword_255669408)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E954, &type metadata for PurchaseIntentRequest.Remove.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669408);
  }
  return result;
}

unint64_t sub_2212EBBE4()
{
  unint64_t result;

  result = qword_255669410;
  if (!qword_255669410)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for PurchaseIntentRequest.Kind, &type metadata for PurchaseIntentRequest.Kind);
    atomic_store(result, (unint64_t *)&qword_255669410);
  }
  return result;
}

unint64_t sub_2212EBC28()
{
  unint64_t result;

  result = qword_255669420;
  if (!qword_255669420)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for PurchaseIntentRequest.Kind, &type metadata for PurchaseIntentRequest.Kind);
    atomic_store(result, (unint64_t *)&qword_255669420);
  }
  return result;
}

uint64_t type metadata accessor for PurchaseIntentRequest.Query(uint64_t a1)
{
  return sub_2212CDD18(a1, qword_255669610);
}

unint64_t sub_2212EBC80()
{
  unint64_t result;

  result = qword_255669430;
  if (!qword_255669430)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E904, &type metadata for PurchaseIntentRequest.Query.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669430);
  }
  return result;
}

unint64_t sub_2212EBCC8()
{
  unint64_t result;

  result = qword_255669440;
  if (!qword_255669440)
  {
    result = MEMORY[0x22766BAC4](&protocol conformance descriptor for PurchaseIntentRequest.Kind, &type metadata for PurchaseIntentRequest.Kind);
    atomic_store(result, (unint64_t *)&qword_255669440);
  }
  return result;
}

uint64_t sub_2212EBD0C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_22108DF44(&qword_255669448, type metadata accessor for PurchaseIntentRequest.Add, (uint64_t)&protocol conformance descriptor for PurchaseIntentRequest.Add);
  result = sub_22108DF44(&qword_255669450, type metadata accessor for PurchaseIntentRequest.Add, (uint64_t)&protocol conformance descriptor for PurchaseIntentRequest.Add);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_2212EBD68(uint64_t a1)
{
  uint64_t result;

  result = sub_22108DF44(&qword_255669458, type metadata accessor for PurchaseIntentRequest.Remove, (uint64_t)&unk_22131E3A0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2212EBDA4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_22108DF44(&qword_255669460, type metadata accessor for PurchaseIntentRequest.Remove, (uint64_t)&protocol conformance descriptor for PurchaseIntentRequest.Remove);
  result = sub_22108DF44(&qword_255669468, type metadata accessor for PurchaseIntentRequest.Remove, (uint64_t)&protocol conformance descriptor for PurchaseIntentRequest.Remove);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_2212EBE00(uint64_t a1)
{
  uint64_t result;

  result = sub_22108DF44(&qword_255669470, type metadata accessor for PurchaseIntentRequest.Query, (uint64_t)&unk_22131E448);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2212EBE3C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_22108DF44(&qword_255669478, type metadata accessor for PurchaseIntentRequest.Query, (uint64_t)&protocol conformance descriptor for PurchaseIntentRequest.Query);
  result = sub_22108DF44(&qword_255669480, type metadata accessor for PurchaseIntentRequest.Query, (uint64_t)&protocol conformance descriptor for PurchaseIntentRequest.Query);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest()
{
  return &type metadata for PurchaseIntentRequest;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Kind()
{
  return &type metadata for PurchaseIntentRequest.Kind;
}

_QWORD *initializeBufferWithCopyOfBuffer for PurchaseIntentRequest.Add(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  char *v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    v11 = type metadata accessor for PurchaseIntentInternal();
    v12 = *(int *)(v11 + 32);
    v25 = (char *)a2 + v12;
    v26 = (char *)v4 + v12;
    v13 = sub_2212F2AF0();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v26, v25, v13);
    v15 = *(int *)(v11 + 36);
    v16 = (_QWORD *)((char *)v4 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = a3[6];
    *((_BYTE *)v4 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v20 = (_QWORD *)((char *)v4 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PurchaseIntentRequest.Add(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for PurchaseIntentInternal() + 32);
  v3 = sub_2212F2AF0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PurchaseIntentRequest.Add(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v23;
  char *v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  v10 = type metadata accessor for PurchaseIntentInternal();
  v11 = *(int *)(v10 + 32);
  v23 = (char *)a2 + v11;
  v24 = (char *)a1 + v11;
  v12 = sub_2212F2AF0();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v24, v23, v12);
  v14 = *(int *)(v10 + 36);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PurchaseIntentRequest.Add(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for PurchaseIntentInternal();
  v7 = *(int *)(v6 + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2212F2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(v6 + 36);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v14 = a3[6];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_OWORD *initializeWithTake for PurchaseIntentRequest.Add(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = type metadata accessor for PurchaseIntentInternal();
  v9 = *(int *)(v8 + 32);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_2212F2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  *(_OWORD *)((char *)a1 + *(int *)(v8 + 36)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 36));
  v13 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_QWORD *assignWithTake for PurchaseIntentRequest.Add(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = type metadata accessor for PurchaseIntentInternal();
  v11 = *(int *)(v10 + 32);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_2212F2AF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = *(int *)(v10 + 36);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseIntentRequest.Add()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212EC4B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for PurchaseIntentInternal();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PurchaseIntentRequest.Add()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212EC544(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for PurchaseIntentInternal();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_2212EC5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2212ED9A8(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for PurchaseIntentInternal);
}

unint64_t *initializeBufferWithCopyOfBuffer for PurchaseIntentRequest.Remove(unint64_t *a1, unint64_t *a2, int *a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for ClientOverride(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = a2[1];
      if (v11 >> 60 == 15)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        v12 = *a2;
        sub_22108DDF4(*a2, a2[1]);
        *a1 = v12;
        a1[1] = v11;
      }
      v13 = a2[3];
      a1[2] = a2[2];
      a1[3] = v13;
      v14 = a2[5];
      a1[4] = a2[4];
      a1[5] = v14;
      v15 = v7[7];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 3, v18))
      {
        v20 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v21 = sub_2212F2A24();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v16, v17, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 3, v18);
      }
      v22 = v7[8];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[8] = v24[8];
      v25 = v7[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v26[8] = v27[8];
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v28 = v7[10];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_2212F2AFC();
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      (*(void (**)(unint64_t *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    v34 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v35 = (unint64_t *)((char *)a1 + v34);
    v36 = (unint64_t *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = a3[7];
    v39 = (unint64_t *)((char *)a1 + v38);
    v40 = (unint64_t *)((char *)a2 + v38);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PurchaseIntentRequest.Remove(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    v3 = a1[1];
    if (v3 >> 60 != 15)
      sub_221054AE8(*a1, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = (char *)a1 + *(int *)(v2 + 28);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 3, v5))
    {
      v6 = sub_2212F2A24();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    }
    v7 = (char *)a1 + *(int *)(v2 + 40);
    v8 = sub_2212F2AFC();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t *initializeWithCopy for PurchaseIntentRequest.Remove(unint64_t *a1, unint64_t *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;

  v6 = (int *)type metadata accessor for ClientOverride(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      v10 = *a2;
      sub_22108DDF4(*a2, a2[1]);
      *a1 = v10;
      a1[1] = v9;
    }
    v11 = a2[3];
    a1[2] = a2[2];
    a1[3] = v11;
    v12 = a2[5];
    a1[4] = a2[4];
    a1[5] = v12;
    v13 = v6[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 3, v16))
    {
      v18 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v14, v15, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 3, v16);
    }
    v20 = v6[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v6[9];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v24[8] = v25[8];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v26 = v6[10];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_2212F2AFC();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    (*(void (**)(unint64_t *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v32 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v33 = (unint64_t *)((char *)a1 + v32);
  v34 = (unint64_t *)((char *)a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = a3[7];
  v37 = (unint64_t *)((char *)a1 + v36);
  v38 = (unint64_t *)((char *)a2 + v36);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for PurchaseIntentRequest.Remove(uint64_t *a1, uint64_t *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, int *);
  int v9;
  int v10;
  unint64_t v11;
  size_t v12;
  uint64_t *v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(char *, uint64_t, uint64_t);
  int v73;
  int v74;
  uint64_t v75;

  v6 = (int *)type metadata accessor for ClientOverride(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_22105EBF8((uint64_t)a1, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    v15 = a2[1];
    if ((unint64_t)a1[1] >> 60 == 15)
    {
      if (v15 >> 60 != 15)
      {
        v16 = *a2;
        sub_22108DDF4(*a2, a2[1]);
        *a1 = v16;
        a1[1] = v15;
        goto LABEL_25;
      }
    }
    else
    {
      if (v15 >> 60 != 15)
      {
        v46 = *a2;
        sub_22108DDF4(*a2, a2[1]);
        v47 = *a1;
        v48 = a1[1];
        *a1 = v46;
        a1[1] = v15;
        sub_221054AE8(v47, v48);
LABEL_25:
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v49 = v6[7];
        v50 = (char *)a1 + v49;
        v51 = (char *)a2 + v49;
        v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
        v53 = *(_QWORD *)(v52 - 8);
        v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
        v55 = v54(v50, 3, v52);
        v56 = v54(v51, 3, v52);
        if (v55)
        {
          if (!v56)
          {
            v57 = sub_2212F2A24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v50, v51, v57);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 3, v52);
LABEL_31:
            v59 = v6[8];
            v60 = (char *)a1 + v59;
            v61 = (char *)a2 + v59;
            v62 = *(_QWORD *)v61;
            v60[8] = v61[8];
            *(_QWORD *)v60 = v62;
            v63 = v6[9];
            v64 = (char *)a1 + v63;
            v65 = (char *)a2 + v63;
            v66 = *(_QWORD *)v65;
            v64[8] = v65[8];
            *(_QWORD *)v64 = v66;
            v67 = v6[10];
            v68 = (char *)a1 + v67;
            v69 = (char *)a2 + v67;
            v70 = sub_2212F2AFC();
            v71 = *(_QWORD *)(v70 - 8);
            v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 48);
            v73 = v72(v68, 1, v70);
            v74 = v72(v69, 1, v70);
            if (v73)
            {
              if (!v74)
              {
                (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
                goto LABEL_20;
              }
            }
            else
            {
              if (!v74)
              {
                (*(void (**)(char *, char *, uint64_t))(v71 + 24))(v68, v69, v70);
                goto LABEL_20;
              }
              (*(void (**)(char *, uint64_t))(v71 + 8))(v68, v70);
            }
            v12 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8) - 8) + 64);
            v13 = (uint64_t *)v68;
            v14 = (uint64_t *)v69;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v56)
          {
            v75 = sub_2212F2A24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 24))(v50, v51, v75);
            goto LABEL_31;
          }
          sub_2210A577C((uint64_t)v50, &qword_255668540);
        }
        v58 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        goto LABEL_31;
      }
      sub_2212CF434((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_25;
  }
  if (v10)
  {
LABEL_7:
    v12 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255668D38) - 8) + 64);
    v13 = a1;
    v14 = a2;
LABEL_8:
    memcpy(v13, v14, v12);
    goto LABEL_20;
  }
  v11 = a2[1];
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v17 = *a2;
    sub_22108DDF4(*a2, a2[1]);
    *a1 = v17;
    a1[1] = v11;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v18 = v6[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 3, v21))
  {
    v23 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v19, v20, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 3, v21);
  }
  v25 = v6[8];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  v26[8] = v27[8];
  *(_QWORD *)v26 = v28;
  v29 = v6[9];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)v31;
  v30[8] = v31[8];
  *(_QWORD *)v30 = v32;
  v33 = v6[10];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_2212F2AFC();
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_20:
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v39 = a3[6];
  v40 = (uint64_t *)((char *)a1 + v39);
  v41 = (uint64_t *)((char *)a2 + v39);
  *v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[7];
  v43 = (uint64_t *)((char *)a1 + v42);
  v44 = (uint64_t *)((char *)a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for PurchaseIntentRequest.Remove(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = (int *)type metadata accessor for ClientOverride(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    v10 = v6[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 3, v13))
    {
      v15 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 3, v13);
    }
    v17 = v6[8];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = v6[9];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v21[8] = v22[8];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v23 = v6[10];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_2212F2AFC();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v29 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v29) = *(_OWORD *)((char *)a2 + v29);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t *assignWithTake for PurchaseIntentRequest.Remove(uint64_t *a1, uint64_t *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, int *);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  uint64_t *v19;
  uint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(char *, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;

  v6 = (int *)type metadata accessor for ClientOverride(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_22105EBF8((uint64_t)a1, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    v21 = a1[1];
    if (v21 >> 60 != 15)
    {
      v22 = a2[1];
      if (v22 >> 60 != 15)
      {
        v47 = *a1;
        *a1 = *a2;
        a1[1] = v22;
        sub_221054AE8(v47, v21);
LABEL_20:
        v48 = a2[3];
        a1[2] = a2[2];
        a1[3] = v48;
        swift_bridgeObjectRelease();
        v49 = a2[5];
        a1[4] = a2[4];
        a1[5] = v49;
        swift_bridgeObjectRelease();
        v50 = v6[7];
        v51 = (char *)a1 + v50;
        v52 = (char *)a2 + v50;
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
        v54 = *(_QWORD *)(v53 - 8);
        v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
        v56 = v55(v51, 3, v53);
        v57 = v55(v52, 3, v53);
        if (v56)
        {
          if (!v57)
          {
            v58 = sub_2212F2A24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v51, v52, v58);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 3, v53);
LABEL_26:
            v60 = v6[8];
            v61 = (char *)a1 + v60;
            v62 = (char *)a2 + v60;
            *(_QWORD *)v61 = *(_QWORD *)v62;
            v61[8] = v62[8];
            v63 = v6[9];
            v64 = (char *)a1 + v63;
            v65 = (char *)a2 + v63;
            v64[8] = v65[8];
            *(_QWORD *)v64 = *(_QWORD *)v65;
            v66 = v6[10];
            v67 = (char *)a1 + v66;
            v68 = (char *)a2 + v66;
            v69 = sub_2212F2AFC();
            v70 = *(_QWORD *)(v69 - 8);
            v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
            v72 = v71(v67, 1, v69);
            v73 = v71(v68, 1, v69);
            if (v72)
            {
              if (!v73)
              {
                (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v67, v68, v69);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
                goto LABEL_18;
              }
            }
            else
            {
              if (!v73)
              {
                (*(void (**)(char *, char *, uint64_t))(v70 + 40))(v67, v68, v69);
                goto LABEL_18;
              }
              (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v69);
            }
            v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8) - 8) + 64);
            v19 = (uint64_t *)v67;
            v20 = (uint64_t *)v68;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v57)
          {
            v74 = sub_2212F2A24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v51, v52, v74);
            goto LABEL_26;
          }
          sub_2210A577C((uint64_t)v51, &qword_255668540);
        }
        v59 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        goto LABEL_26;
      }
      sub_2212CF434((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_20;
  }
  if (v10)
  {
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255668D38) - 8) + 64);
    v19 = a1;
    v20 = a2;
LABEL_8:
    memcpy(v19, v20, v18);
    goto LABEL_18;
  }
  v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 3, v15))
  {
    v17 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v23 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v13, v14, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 3, v15);
  }
  v24 = v6[8];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v25[8] = v26[8];
  v27 = v6[9];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v28[8] = v29[8];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v30 = v6[10];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_2212F2AFC();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  v36 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v37 = (uint64_t *)((char *)a1 + v36);
  v38 = (uint64_t *)((char *)a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v41 = a3[7];
  v42 = (uint64_t *)((char *)a1 + v41);
  v43 = (uint64_t *)((char *)a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseIntentRequest.Remove()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212ED884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PurchaseIntentRequest.Remove()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212ED914(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_2212ED994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2212ED9A8(a1, a2, a3, (uint64_t (*)(uint64_t))sub_2212DFF40);
}

uint64_t sub_2212ED9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PurchaseIntentRequest.Query(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2212F2AF0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = (int *)type metadata accessor for ClientOverride(0);
    v12 = *((_QWORD *)v11 - 1);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = v10[1];
      if (v15 >> 60 == 15)
      {
        *(_OWORD *)v9 = *(_OWORD *)v10;
      }
      else
      {
        v16 = *v10;
        sub_22108DDF4(*v10, v10[1]);
        *v9 = v16;
        v9[1] = v15;
      }
      v17 = v10[3];
      v9[2] = v10[2];
      v9[3] = v17;
      v18 = v10[5];
      v9[4] = v10[4];
      v9[5] = v18;
      v19 = v11[7];
      __dst = (char *)v9 + v19;
      v20 = (char *)v10 + v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 3, v21))
      {
        v23 = type metadata accessor for ClientOverride.Server(0);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v24 = sub_2212F2A24();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(__dst, v20, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 3, v21);
      }
      v25 = v11[8];
      v26 = (char *)v9 + v25;
      v27 = (char *)v10 + v25;
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v26[8] = v27[8];
      v28 = v11[9];
      v29 = (char *)v9 + v28;
      v30 = (char *)v10 + v28;
      v29[8] = v30[8];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      v31 = v11[10];
      v32 = (char *)v9 + v31;
      v33 = (char *)v10 + v31;
      v34 = sub_2212F2AFC();
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      (*(void (**)(unint64_t *, _QWORD, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
    }
    v37 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v38 = (_QWORD *)((char *)a1 + v37);
    v39 = (_QWORD *)((char *)a2 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_2212F2AF0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  v6 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = v5[1];
    if (v7 >> 60 != 15)
      sub_221054AE8(*v5, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = (char *)v5 + *(int *)(v6 + 28);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 3, v9))
    {
      v10 = sub_2212F2A24();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    }
    v11 = (char *)v5 + *(int *)(v6 + 40);
    v12 = sub_2212F2AFC();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char *__dst;

  v6 = sub_2212F2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (unint64_t *)(a1 + v7);
  v9 = (unint64_t *)(a2 + v7);
  v10 = (int *)type metadata accessor for ClientOverride(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    if (v13 >> 60 == 15)
    {
      *(_OWORD *)v8 = *(_OWORD *)v9;
    }
    else
    {
      v14 = *v9;
      sub_22108DDF4(*v9, v9[1]);
      *v8 = v14;
      v8[1] = v13;
    }
    v15 = v9[3];
    v8[2] = v9[2];
    v8[3] = v15;
    v16 = v9[5];
    v8[4] = v9[4];
    v8[5] = v16;
    v17 = v10[7];
    __dst = (char *)v8 + v17;
    v18 = (char *)v9 + v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 3, v19))
    {
      v21 = type metadata accessor for ClientOverride.Server(0);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v22 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(__dst, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 3, v19);
    }
    v23 = v10[8];
    v24 = (char *)v8 + v23;
    v25 = (char *)v9 + v23;
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = v10[9];
    v27 = (char *)v8 + v26;
    v28 = (char *)v9 + v26;
    v27[8] = v28[8];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v29 = v10[10];
    v30 = (char *)v8 + v29;
    v31 = (char *)v9 + v29;
    v32 = sub_2212F2AFC();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(unint64_t *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  v35 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t *, uint64_t, int *);
  int v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  size_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v76;
  int *v77;
  int *v78;

  v6 = sub_2212F2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = (int *)type metadata accessor for ClientOverride(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_22105EBF8((uint64_t)v8, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    v17 = v9[1];
    v78 = a3;
    if ((unint64_t)v8[1] >> 60 == 15)
    {
      if (v17 >> 60 != 15)
      {
        v18 = *v9;
        sub_22108DDF4(*v9, v17);
        *v8 = v18;
        v8[1] = v17;
        goto LABEL_23;
      }
    }
    else
    {
      if (v17 >> 60 != 15)
      {
        v41 = *v9;
        sub_22108DDF4(*v9, v17);
        v42 = *v8;
        v43 = v8[1];
        *v8 = v41;
        v8[1] = v17;
        sub_221054AE8(v42, v43);
LABEL_23:
        v8[2] = v9[2];
        v8[3] = v9[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v8[4] = v9[4];
        v8[5] = v9[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v44 = v10[7];
        v45 = (char *)v8 + v44;
        v46 = (char *)v9 + v44;
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
        v48 = *(_QWORD *)(v47 - 8);
        v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
        v76 = (uint64_t)v45;
        LODWORD(v45) = v49(v45, 3, v47);
        v50 = v49(v46, 3, v47);
        if ((_DWORD)v45)
        {
          if (v50)
          {
            v51 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
            v52 = (void *)v76;
LABEL_28:
            memcpy(v52, v46, v51);
            goto LABEL_31;
          }
          v53 = sub_2212F2A24();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v76, v46, v53);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v76, 0, 3, v47);
        }
        else
        {
          if (v50)
          {
            sub_2210A577C(v76, &qword_255668540);
            v51 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
            v52 = (void *)v76;
            goto LABEL_28;
          }
          v54 = sub_2212F2A24();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v76, v46, v54);
        }
LABEL_31:
        v55 = v10[8];
        v56 = (char *)v8 + v55;
        v57 = (char *)v9 + v55;
        v58 = *(_QWORD *)v57;
        v56[8] = v57[8];
        *(_QWORD *)v56 = v58;
        v59 = v10[9];
        v60 = (char *)v8 + v59;
        v61 = (char *)v9 + v59;
        v62 = *(_QWORD *)v61;
        v60[8] = v61[8];
        *(_QWORD *)v60 = v62;
        v63 = v10[10];
        v64 = (char *)v8 + v63;
        v65 = (char *)v9 + v63;
        v66 = sub_2212F2AFC();
        v67 = *(_QWORD *)(v66 - 8);
        v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48);
        v69 = v68(v64, 1, v66);
        v70 = v68(v65, 1, v66);
        if (v69)
        {
          if (!v70)
          {
            (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
LABEL_37:
            a3 = v78;
            goto LABEL_38;
          }
        }
        else
        {
          if (!v70)
          {
            (*(void (**)(char *, char *, uint64_t))(v67 + 24))(v64, v65, v66);
            goto LABEL_37;
          }
          (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v66);
        }
        v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        goto LABEL_37;
      }
      sub_2212CF434((uint64_t)v8);
    }
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_23;
  }
  if (v14)
  {
LABEL_7:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_38;
  }
  v15 = v9[1];
  v77 = a3;
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v19 = *v9;
    sub_22108DDF4(*v9, v15);
    *v8 = v19;
    v8[1] = v15;
  }
  v8[2] = v9[2];
  v8[3] = v9[3];
  v8[4] = v9[4];
  v8[5] = v9[5];
  v20 = v10[7];
  v21 = (char *)v8 + v20;
  v22 = (char *)v9 + v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 3, v23))
  {
    v25 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v26 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v21, v22, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 3, v23);
  }
  v27 = v10[8];
  v28 = (char *)v8 + v27;
  v29 = (char *)v9 + v27;
  v30 = *(_QWORD *)v29;
  v28[8] = v29[8];
  *(_QWORD *)v28 = v30;
  v31 = v10[9];
  v32 = (char *)v8 + v31;
  v33 = (char *)v9 + v31;
  v34 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *(_QWORD *)v32 = v34;
  v35 = v10[10];
  v36 = (char *)v8 + v35;
  v37 = (char *)v9 + v35;
  v38 = sub_2212F2AFC();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  a3 = v77;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_38:
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v72 = a3[7];
  v73 = (_QWORD *)(a1 + v72);
  v74 = (_QWORD *)(a2 + v72);
  *v73 = *v74;
  v73[1] = v74[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *__dst;

  v6 = sub_2212F2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = (int *)type metadata accessor for ClientOverride(0);
  v11 = *((_QWORD *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v8[2] = v9[2];
    v14 = v10[7];
    __dst = (char *)v8 + v14;
    v15 = (char *)v9 + v14;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 3, v16))
    {
      v18 = type metadata accessor for ClientOverride.Server(0);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(__dst, v15, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 3, v16);
    }
    v20 = v10[8];
    v21 = (char *)v8 + v20;
    v22 = (char *)v9 + v20;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v10[9];
    v24 = (char *)v8 + v23;
    v25 = (char *)v9 + v23;
    v24[8] = v25[8];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v26 = v10[10];
    v27 = (char *)v8 + v26;
    v28 = (char *)v9 + v26;
    v29 = sub_2212F2AFC();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  v32 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v32) = *(_OWORD *)(a2 + v32);
  return a1;
}

uint64_t assignWithTake for PurchaseIntentRequest.Query(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t *, uint64_t, int *);
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  size_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  int *v74;
  int *v75;

  v6 = sub_2212F2AF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = (int *)type metadata accessor for ClientOverride(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_22105EBF8((uint64_t)v8, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    v23 = v8[1];
    v75 = a3;
    if (v23 >> 60 != 15)
    {
      v24 = v9[1];
      if (v24 >> 60 != 15)
      {
        v38 = *v8;
        *v8 = *v9;
        v8[1] = v24;
        sub_221054AE8(v38, v23);
LABEL_18:
        v39 = v9[3];
        v8[2] = v9[2];
        v8[3] = v39;
        swift_bridgeObjectRelease();
        v40 = v9[5];
        v8[4] = v9[4];
        v8[5] = v40;
        swift_bridgeObjectRelease();
        v41 = v10[7];
        v42 = (char *)v8 + v41;
        v43 = (char *)v9 + v41;
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
        v45 = *(_QWORD *)(v44 - 8);
        v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
        v73 = (uint64_t)v42;
        LODWORD(v42) = v46(v42, 3, v44);
        v47 = v46(v43, 3, v44);
        if ((_DWORD)v42)
        {
          if (v47)
          {
            v48 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
            v49 = (void *)v73;
LABEL_23:
            memcpy(v49, v43, v48);
            goto LABEL_26;
          }
          v50 = sub_2212F2A24();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v73, v43, v50);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v73, 0, 3, v44);
        }
        else
        {
          if (v47)
          {
            sub_2210A577C(v73, &qword_255668540);
            v48 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientOverride.Server(0) - 8) + 64);
            v49 = (void *)v73;
            goto LABEL_23;
          }
          v51 = sub_2212F2A24();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 40))(v73, v43, v51);
        }
LABEL_26:
        v52 = v10[8];
        v53 = (char *)v8 + v52;
        v54 = (char *)v9 + v52;
        *(_QWORD *)v53 = *(_QWORD *)v54;
        v53[8] = v54[8];
        v55 = v10[9];
        v56 = (char *)v8 + v55;
        v57 = (char *)v9 + v55;
        v56[8] = v57[8];
        *(_QWORD *)v56 = *(_QWORD *)v57;
        v58 = v10[10];
        v59 = (char *)v8 + v58;
        v60 = (char *)v9 + v58;
        v61 = sub_2212F2AFC();
        v62 = *(_QWORD *)(v61 - 8);
        v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
        v64 = v63(v59, 1, v61);
        v65 = v63(v60, 1, v61);
        if (v64)
        {
          if (!v65)
          {
            (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
LABEL_32:
            a3 = v75;
            goto LABEL_33;
          }
        }
        else
        {
          if (!v65)
          {
            (*(void (**)(char *, char *, uint64_t))(v62 + 40))(v59, v60, v61);
            goto LABEL_32;
          }
          (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v61);
        }
        v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        goto LABEL_32;
      }
      sub_2212CF434((uint64_t)v8);
    }
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_18;
  }
  if (v14)
  {
LABEL_7:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_33;
  }
  v74 = a3;
  v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v15;
  *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
  v16 = v10[7];
  v17 = (char *)v8 + v16;
  v18 = (char *)v9 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 3, v19))
  {
    v21 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v25 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v17, v18, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 3, v19);
  }
  v26 = v10[8];
  v27 = (char *)v8 + v26;
  v28 = (char *)v9 + v26;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v10[9];
  v30 = (char *)v8 + v29;
  v31 = (char *)v9 + v29;
  v30[8] = v31[8];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v32 = v10[10];
  v33 = (char *)v8 + v32;
  v34 = (char *)v9 + v32;
  v35 = sub_2212F2AFC();
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  a3 = v74;
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_33:
  v67 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v68 = (_QWORD *)(a1 + v67);
  v69 = (uint64_t *)(a2 + v67);
  v71 = *v69;
  v70 = v69[1];
  *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseIntentRequest.Query()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212EEDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_2212F2AF0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for PurchaseIntentRequest.Query()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212EEEB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_2212F2AF0();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

void sub_2212EEF5C()
{
  unint64_t v0;
  unint64_t v1;

  sub_2212F2AF0();
  if (v0 <= 0x3F)
  {
    sub_2212DFF40();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Query.CodingKeys()
{
  return &type metadata for PurchaseIntentRequest.Query.CodingKeys;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Remove.CodingKeys()
{
  return &type metadata for PurchaseIntentRequest.Remove.CodingKeys;
}

uint64_t _s15StoreKit_Shared21PurchaseIntentRequestO5QueryV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2212EF064 + 4 * byte_22131E231[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2212EF098 + 4 * byte_22131E22C[v4]))();
}

uint64_t sub_2212EF098(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212EF0A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212EF0A8);
  return result;
}

uint64_t sub_2212EF0B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212EF0BCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2212EF0C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212EF0C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Add.CodingKeys()
{
  return &type metadata for PurchaseIntentRequest.Add.CodingKeys;
}

uint64_t _s15StoreKit_Shared21PurchaseIntentRequestO4KindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2212EF130 + 4 * byte_22131E23B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2212EF164 + 4 * byte_22131E236[v4]))();
}

uint64_t sub_2212EF164(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212EF16C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212EF174);
  return result;
}

uint64_t sub_2212EF180(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212EF188);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2212EF18C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212EF194(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Kind.CodingKeys()
{
  return &type metadata for PurchaseIntentRequest.Kind.CodingKeys;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Kind.AllCodingKeys()
{
  return &type metadata for PurchaseIntentRequest.Kind.AllCodingKeys;
}

ValueMetadata *type metadata accessor for PurchaseIntentRequest.Kind.ClientCodingKeys()
{
  return &type metadata for PurchaseIntentRequest.Kind.ClientCodingKeys;
}

unint64_t sub_2212EF1D4()
{
  unint64_t result;

  result = qword_255669650;
  if (!qword_255669650)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E6B4, &type metadata for PurchaseIntentRequest.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669650);
  }
  return result;
}

unint64_t sub_2212EF21C()
{
  unint64_t result;

  result = qword_255669658;
  if (!qword_255669658)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E76C, &type metadata for PurchaseIntentRequest.Add.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669658);
  }
  return result;
}

unint64_t sub_2212EF264()
{
  unint64_t result;

  result = qword_255669660;
  if (!qword_255669660)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E824, &type metadata for PurchaseIntentRequest.Remove.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669660);
  }
  return result;
}

unint64_t sub_2212EF2AC()
{
  unint64_t result;

  result = qword_255669668;
  if (!qword_255669668)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E8DC, &type metadata for PurchaseIntentRequest.Query.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669668);
  }
  return result;
}

unint64_t sub_2212EF2F4()
{
  unint64_t result;

  result = qword_255669670;
  if (!qword_255669670)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E84C, &type metadata for PurchaseIntentRequest.Query.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669670);
  }
  return result;
}

unint64_t sub_2212EF33C()
{
  unint64_t result;

  result = qword_255669678;
  if (!qword_255669678)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E874, &type metadata for PurchaseIntentRequest.Query.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669678);
  }
  return result;
}

unint64_t sub_2212EF384()
{
  unint64_t result;

  result = qword_255669680;
  if (!qword_255669680)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E794, &type metadata for PurchaseIntentRequest.Remove.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669680);
  }
  return result;
}

unint64_t sub_2212EF3CC()
{
  unint64_t result;

  result = qword_255669688;
  if (!qword_255669688)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E7BC, &type metadata for PurchaseIntentRequest.Remove.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669688);
  }
  return result;
}

unint64_t sub_2212EF414()
{
  unint64_t result;

  result = qword_255669690;
  if (!qword_255669690)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E6DC, &type metadata for PurchaseIntentRequest.Add.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669690);
  }
  return result;
}

unint64_t sub_2212EF45C()
{
  unint64_t result;

  result = qword_255669698;
  if (!qword_255669698)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E704, &type metadata for PurchaseIntentRequest.Add.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669698);
  }
  return result;
}

unint64_t sub_2212EF4A4()
{
  unint64_t result;

  result = qword_2556696A0;
  if (!qword_2556696A0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E5D4, &type metadata for PurchaseIntentRequest.Kind.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556696A0);
  }
  return result;
}

unint64_t sub_2212EF4EC()
{
  unint64_t result;

  result = qword_2556696A8;
  if (!qword_2556696A8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E5FC, &type metadata for PurchaseIntentRequest.Kind.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556696A8);
  }
  return result;
}

unint64_t sub_2212EF534()
{
  unint64_t result;

  result = qword_2556696B0;
  if (!qword_2556696B0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E584, &type metadata for PurchaseIntentRequest.Kind.ClientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556696B0);
  }
  return result;
}

unint64_t sub_2212EF57C()
{
  unint64_t result;

  result = qword_2556696B8;
  if (!qword_2556696B8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E5AC, &type metadata for PurchaseIntentRequest.Kind.ClientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556696B8);
  }
  return result;
}

unint64_t sub_2212EF5C4()
{
  unint64_t result;

  result = qword_2556696C0;
  if (!qword_2556696C0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E624, &type metadata for PurchaseIntentRequest.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556696C0);
  }
  return result;
}

unint64_t sub_2212EF60C()
{
  unint64_t result;

  result = qword_2556696C8;
  if (!qword_2556696C8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131E64C, &type metadata for PurchaseIntentRequest.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556696C8);
  }
  return result;
}

uint64_t sub_2212EF650(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E65746E69 && a2 == 0xE600000000000000;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x704168636E75616CLL && a2 == 0xE900000000000070 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x796669746F6ELL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2212EF7FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x764F746E65696C63 && a2 == 0xEE00656469727265;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x49746375646F7270 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2212EF9CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265746661 && a2 == 0xE500000000000000;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x764F746E65696C63 && a2 == 0xEE00656469727265 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t StorefrontRequest.clientOverride.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2212DDAC8(v1, a1);
}

uint64_t StorefrontRequest.logKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StorefrontRequest() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for StorefrontRequest()
{
  uint64_t result;

  result = qword_255669770;
  if (!qword_255669770)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t StorefrontRequest.logKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for StorefrontRequest() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*StorefrontRequest.logKey.modify())(_QWORD)
{
  type metadata accessor for StorefrontRequest();
  return nullsub_1;
}

uint64_t StorefrontRequest.init(clientOverride:logKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  _QWORD *v8;

  sub_2212E0368(a1, a4);
  result = type metadata accessor for StorefrontRequest();
  v8 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v8 = a2;
  v8[1] = a3;
  return result;
}

uint64_t sub_2212EFCC0()
{
  _BYTE *v0;

  if (*v0)
    return 0x79654B676F6CLL;
  else
    return 0x764F746E65696C63;
}

uint64_t sub_2212EFD04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212F1794(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212EFD28()
{
  sub_2212EFECC();
  return sub_2212F5E50();
}

uint64_t sub_2212EFD50()
{
  sub_2212EFECC();
  return sub_2212F5E5C();
}

uint64_t StorefrontRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556696E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212EFECC();
  sub_2212F5E38();
  v8[15] = 0;
  type metadata accessor for ClientOverride(0);
  sub_22108DF44(&qword_255668D60, type metadata accessor for ClientOverride, (uint64_t)&protocol conformance descriptor for ClientOverride);
  sub_2212F5C4C();
  if (!v1)
  {
    type metadata accessor for StorefrontRequest();
    v8[14] = 1;
    sub_2212F5C64();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2212EFECC()
{
  unint64_t result;

  result = qword_2556696F0;
  if (!qword_2556696F0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131ED14, &type metadata for StorefrontRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556696F0);
  }
  return result;
}

uint64_t StorefrontRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  char v27;

  v23 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  MEMORY[0x24BDAC7A8](v4);
  v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556696F8);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StorefrontRequest();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212EFECC();
  sub_2212F5E2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = v9;
  v12 = v6;
  v13 = (uint64_t)v11;
  v14 = v23;
  type metadata accessor for ClientOverride(0);
  v27 = 0;
  sub_22108DF44(&qword_255668D70, type metadata accessor for ClientOverride, (uint64_t)&protocol conformance descriptor for ClientOverride);
  v16 = (uint64_t)v24;
  v15 = v25;
  sub_2212F5BEC();
  sub_2212E0368(v16, v13);
  v26 = 1;
  v17 = sub_2212F5C04();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v15);
  v20 = (uint64_t *)(v13 + *(int *)(v22 + 20));
  *v20 = v17;
  v20[1] = v19;
  sub_2212F0184(v13, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_22105EBF8(v13, (uint64_t (*)(_QWORD))type metadata accessor for StorefrontRequest);
}

uint64_t sub_2212F0184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StorefrontRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2212F01C8(uint64_t a1)
{
  uint64_t result;

  result = sub_22108DF44(&qword_255669700, (uint64_t (*)(uint64_t))type metadata accessor for StorefrontRequest, (uint64_t)&unk_22131EB88);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2212F0204(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_22108DF44(&qword_255669708, (uint64_t (*)(uint64_t))type metadata accessor for StorefrontRequest, (uint64_t)&protocol conformance descriptor for StorefrontRequest);
  result = sub_22108DF44(&qword_255669710, (uint64_t (*)(uint64_t))type metadata accessor for StorefrontRequest, (uint64_t)&protocol conformance descriptor for StorefrontRequest);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_2212F0260@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StorefrontRequest.init(from:)(a1, a2);
}

uint64_t sub_2212F0274(_QWORD *a1)
{
  return StorefrontRequest.encode(to:)(a1);
}

unint64_t *initializeBufferWithCopyOfBuffer for StorefrontRequest(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for ClientOverride(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = a2[1];
      if (v11 >> 60 == 15)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      else
      {
        v12 = *a2;
        sub_22108DDF4(*a2, a2[1]);
        *a1 = v12;
        a1[1] = v11;
      }
      v13 = a2[3];
      a1[2] = a2[2];
      a1[3] = v13;
      v14 = a2[5];
      a1[4] = a2[4];
      a1[5] = v14;
      v15 = v7[7];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 3, v18))
      {
        v20 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v21 = sub_2212F2A24();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v16, v17, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 3, v18);
      }
      v22 = v7[8];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[8] = v24[8];
      v25 = v7[9];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v26[8] = v27[8];
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v28 = v7[10];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_2212F2AFC();
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      (*(void (**)(unint64_t *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    v34 = *(int *)(a3 + 20);
    v35 = (unint64_t *)((char *)a1 + v34);
    v36 = (unint64_t *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StorefrontRequest(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = type metadata accessor for ClientOverride(0);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    v3 = a1[1];
    if (v3 >> 60 != 15)
      sub_221054AE8(*a1, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = (char *)a1 + *(int *)(v2 + 28);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 3, v5))
    {
      v6 = sub_2212F2A24();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    }
    v7 = (char *)a1 + *(int *)(v2 + 40);
    v8 = sub_2212F2AFC();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }
  return swift_bridgeObjectRelease();
}

unint64_t *initializeWithCopy for StorefrontRequest(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;

  v6 = (int *)type metadata accessor for ClientOverride(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      v10 = *a2;
      sub_22108DDF4(*a2, a2[1]);
      *a1 = v10;
      a1[1] = v9;
    }
    v11 = a2[3];
    a1[2] = a2[2];
    a1[3] = v11;
    v12 = a2[5];
    a1[4] = a2[4];
    a1[5] = v12;
    v13 = v6[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 3, v16))
    {
      v18 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v14, v15, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 3, v16);
    }
    v20 = v6[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v6[9];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v24[8] = v25[8];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v26 = v6[10];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_2212F2AFC();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    (*(void (**)(unint64_t *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v32 = *(int *)(a3 + 20);
  v33 = (unint64_t *)((char *)a1 + v32);
  v34 = (unint64_t *)((char *)a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for StorefrontRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, int *);
  int v9;
  int v10;
  unint64_t v11;
  size_t v12;
  uint64_t *v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(char *, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(char *, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;

  v6 = (int *)type metadata accessor for ClientOverride(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_22105EBF8((uint64_t)a1, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    v15 = a2[1];
    if ((unint64_t)a1[1] >> 60 == 15)
    {
      if (v15 >> 60 != 15)
      {
        v16 = *a2;
        sub_22108DDF4(*a2, a2[1]);
        *a1 = v16;
        a1[1] = v15;
        goto LABEL_25;
      }
    }
    else
    {
      if (v15 >> 60 != 15)
      {
        v43 = *a2;
        sub_22108DDF4(*a2, a2[1]);
        v44 = *a1;
        v45 = a1[1];
        *a1 = v43;
        a1[1] = v15;
        sub_221054AE8(v44, v45);
LABEL_25:
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v46 = v6[7];
        v47 = (char *)a1 + v46;
        v48 = (char *)a2 + v46;
        v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
        v50 = *(_QWORD *)(v49 - 8);
        v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
        v52 = v51(v47, 3, v49);
        v53 = v51(v48, 3, v49);
        if (v52)
        {
          if (!v53)
          {
            v54 = sub_2212F2A24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v47, v48, v54);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 3, v49);
LABEL_31:
            v56 = v6[8];
            v57 = (char *)a1 + v56;
            v58 = (char *)a2 + v56;
            v59 = *(_QWORD *)v58;
            v57[8] = v58[8];
            *(_QWORD *)v57 = v59;
            v60 = v6[9];
            v61 = (char *)a1 + v60;
            v62 = (char *)a2 + v60;
            v63 = *(_QWORD *)v62;
            v61[8] = v62[8];
            *(_QWORD *)v61 = v63;
            v64 = v6[10];
            v65 = (char *)a1 + v64;
            v66 = (char *)a2 + v64;
            v67 = sub_2212F2AFC();
            v68 = *(_QWORD *)(v67 - 8);
            v69 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 48);
            v70 = v69(v65, 1, v67);
            v71 = v69(v66, 1, v67);
            if (v70)
            {
              if (!v71)
              {
                (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
                goto LABEL_20;
              }
            }
            else
            {
              if (!v71)
              {
                (*(void (**)(char *, char *, uint64_t))(v68 + 24))(v65, v66, v67);
                goto LABEL_20;
              }
              (*(void (**)(char *, uint64_t))(v68 + 8))(v65, v67);
            }
            v12 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8) - 8) + 64);
            v13 = (uint64_t *)v65;
            v14 = (uint64_t *)v66;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v53)
          {
            v72 = sub_2212F2A24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 24))(v47, v48, v72);
            goto LABEL_31;
          }
          sub_2210A577C((uint64_t)v47, &qword_255668540);
        }
        v55 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
        goto LABEL_31;
      }
      sub_2212CF434((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_25;
  }
  if (v10)
  {
LABEL_7:
    v12 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255668D38) - 8) + 64);
    v13 = a1;
    v14 = a2;
LABEL_8:
    memcpy(v13, v14, v12);
    goto LABEL_20;
  }
  v11 = a2[1];
  if (v11 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v17 = *a2;
    sub_22108DDF4(*a2, a2[1]);
    *a1 = v17;
    a1[1] = v11;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v18 = v6[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 3, v21))
  {
    v23 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v19, v20, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 3, v21);
  }
  v25 = v6[8];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  v26[8] = v27[8];
  *(_QWORD *)v26 = v28;
  v29 = v6[9];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)v31;
  v30[8] = v31[8];
  *(_QWORD *)v30 = v32;
  v33 = v6[10];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_2212F2AFC();
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_20:
  v39 = *(int *)(a3 + 20);
  v40 = (uint64_t *)((char *)a1 + v39);
  v41 = (uint64_t *)((char *)a2 + v39);
  *v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for StorefrontRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = (int *)type metadata accessor for ClientOverride(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    a1[2] = a2[2];
    v10 = v6[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 3, v13))
    {
      v15 = type metadata accessor for ClientOverride.Server(0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = sub_2212F2A24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 3, v13);
    }
    v17 = v6[8];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = v6[9];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v21[8] = v22[8];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v23 = v6[10];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_2212F2AFC();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t *assignWithTake for StorefrontRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, int *);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  uint64_t *v19;
  uint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;

  v6 = (int *)type metadata accessor for ClientOverride(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_22105EBF8((uint64_t)a1, type metadata accessor for ClientOverride);
      goto LABEL_7;
    }
    v21 = a1[1];
    if (v21 >> 60 != 15)
    {
      v22 = a2[1];
      if (v22 >> 60 != 15)
      {
        v42 = *a1;
        *a1 = *a2;
        a1[1] = v22;
        sub_221054AE8(v42, v21);
LABEL_20:
        v43 = a2[3];
        a1[2] = a2[2];
        a1[3] = v43;
        swift_bridgeObjectRelease();
        v44 = a2[5];
        a1[4] = a2[4];
        a1[5] = v44;
        swift_bridgeObjectRelease();
        v45 = v6[7];
        v46 = (char *)a1 + v45;
        v47 = (char *)a2 + v45;
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
        v49 = *(_QWORD *)(v48 - 8);
        v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
        v51 = v50(v46, 3, v48);
        v52 = v50(v47, 3, v48);
        if (v51)
        {
          if (!v52)
          {
            v53 = sub_2212F2A24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v46, v47, v53);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 3, v48);
LABEL_26:
            v55 = v6[8];
            v56 = (char *)a1 + v55;
            v57 = (char *)a2 + v55;
            *(_QWORD *)v56 = *(_QWORD *)v57;
            v56[8] = v57[8];
            v58 = v6[9];
            v59 = (char *)a1 + v58;
            v60 = (char *)a2 + v58;
            v59[8] = v60[8];
            *(_QWORD *)v59 = *(_QWORD *)v60;
            v61 = v6[10];
            v62 = (char *)a1 + v61;
            v63 = (char *)a2 + v61;
            v64 = sub_2212F2AFC();
            v65 = *(_QWORD *)(v64 - 8);
            v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
            v67 = v66(v62, 1, v64);
            v68 = v66(v63, 1, v64);
            if (v67)
            {
              if (!v68)
              {
                (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
                goto LABEL_18;
              }
            }
            else
            {
              if (!v68)
              {
                (*(void (**)(char *, char *, uint64_t))(v65 + 40))(v62, v63, v64);
                goto LABEL_18;
              }
              (*(void (**)(char *, uint64_t))(v65 + 8))(v62, v64);
            }
            v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8) - 8) + 64);
            v19 = (uint64_t *)v62;
            v20 = (uint64_t *)v63;
            goto LABEL_8;
          }
        }
        else
        {
          if (!v52)
          {
            v69 = sub_2212F2A24();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 40))(v46, v47, v69);
            goto LABEL_26;
          }
          sub_2210A577C((uint64_t)v46, &qword_255668540);
        }
        v54 = type metadata accessor for ClientOverride.Server(0);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        goto LABEL_26;
      }
      sub_2212CF434((uint64_t)a1);
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_20;
  }
  if (v10)
  {
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_255668D38) - 8) + 64);
    v19 = a1;
    v20 = a2;
LABEL_8:
    memcpy(v19, v20, v18);
    goto LABEL_18;
  }
  v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v12 = v6[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668540);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 3, v15))
  {
    v17 = type metadata accessor for ClientOverride.Server(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v23 = sub_2212F2A24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v13, v14, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 3, v15);
  }
  v24 = v6[8];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v25[8] = v26[8];
  v27 = v6[9];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v28[8] = v29[8];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v30 = v6[10];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_2212F2AFC();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556685E8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  v36 = *(int *)(a3 + 20);
  v37 = (uint64_t *)((char *)a1 + v36);
  v38 = (uint64_t *)((char *)a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StorefrontRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212F1470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for StorefrontRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212F1500(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255668D38);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_2212F1580()
{
  unint64_t v0;

  sub_2212DFF40();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for StorefrontRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2212F163C + 4 * byte_22131EB55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2212F1670 + 4 * asc_22131EB50[v4]))();
}

uint64_t sub_2212F1670(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212F1678(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212F1680);
  return result;
}

uint64_t sub_2212F168C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212F1694);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2212F1698(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212F16A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StorefrontRequest.CodingKeys()
{
  return &type metadata for StorefrontRequest.CodingKeys;
}

unint64_t sub_2212F16C0()
{
  unint64_t result;

  result = qword_2556697A8;
  if (!qword_2556697A8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131ECEC, &type metadata for StorefrontRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556697A8);
  }
  return result;
}

unint64_t sub_2212F1708()
{
  unint64_t result;

  result = qword_2556697B0;
  if (!qword_2556697B0)
  {
    result = MEMORY[0x22766BAC4](&unk_22131EC5C, &type metadata for StorefrontRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556697B0);
  }
  return result;
}

unint64_t sub_2212F1750()
{
  unint64_t result;

  result = qword_2556697B8;
  if (!qword_2556697B8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131EC84, &type metadata for StorefrontRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556697B8);
  }
  return result;
}

uint64_t sub_2212F1794(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x764F746E65696C63 && a2 == 0xEE00656469727265;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79654B676F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t StorefrontInternal.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StorefrontInternal.countryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StorefrontInternal.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StorefrontInternal() + 24);
  v4 = sub_2212F2B20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for StorefrontInternal()
{
  uint64_t result;

  result = qword_255669840;
  if (!qword_255669840)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t StorefrontInternal.init(id:countryCode:locale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v7;
  uint64_t v8;

  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  v7 = (char *)a6 + *(int *)(type metadata accessor for StorefrontInternal() + 24);
  v8 = sub_2212F2B20();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a5, v8);
}

uint64_t sub_2212F19D4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x437972746E756F63;
  if (*v0 != 1)
    v1 = 0x656C61636F6CLL;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_2212F1A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2212F268C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2212F1A4C()
{
  sub_2212F1F68();
  return sub_2212F5E50();
}

uint64_t sub_2212F1A74()
{
  sub_2212F1F68();
  return sub_2212F5E5C();
}

uint64_t StorefrontInternal.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556697C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2212F1F68();
  sub_2212F5E38();
  v8[15] = 0;
  sub_2212F5C64();
  if (!v1)
  {
    v8[14] = 1;
    sub_2212F5C64();
    type metadata accessor for StorefrontInternal();
    v8[13] = 2;
    sub_2212F2B20();
    sub_2212F1FAC(&qword_2556697D0, MEMORY[0x24BDCEEC8]);
    sub_2212F5C7C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StorefrontInternal.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  char v27;
  char v28;

  v22 = a2;
  v23 = sub_2212F2B20();
  v21 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2556697D8);
  v6 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StorefrontInternal();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_2212F1F68();
  sub_2212F5E2C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  v20 = v9;
  v13 = v6;
  v14 = v5;
  v16 = v23;
  v15 = v24;
  v28 = 0;
  *v11 = sub_2212F5C04();
  v11[1] = v17;
  v27 = 1;
  v11[2] = sub_2212F5C04();
  v11[3] = v18;
  v26 = 2;
  sub_2212F1FAC(&qword_2556697E0, MEMORY[0x24BDCEEE8]);
  sub_2212F5C1C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v15);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))((char *)v11 + *(int *)(v20 + 24), v14, v16);
  sub_2212F1FEC((uint64_t)v11, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_2212F2030((uint64_t)v11);
}

uint64_t sub_2212F1EA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StorefrontInternal.init(from:)(a1, a2);
}

uint64_t sub_2212F1EBC(_QWORD *a1)
{
  return StorefrontInternal.encode(to:)(a1);
}

uint64_t sub_2212F1ED4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t _s15StoreKit_Shared18StorefrontInternalV23__derived_struct_equalsySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_2212F5CDC() & 1) != 0)
  {
    v5 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v5 || (sub_2212F5CDC() & 1) != 0)
    {
      type metadata accessor for StorefrontInternal();
      JUMPOUT(0x227668140);
    }
  }
  return 0;
}

unint64_t sub_2212F1F68()
{
  unint64_t result;

  result = qword_2556697C8;
  if (!qword_2556697C8)
  {
    result = MEMORY[0x22766BAC4](&unk_22131EF34, &type metadata for StorefrontInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2556697C8);
  }
  return result;
}

uint64_t sub_2212F1FAC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2212F2B20();
    result = MEMORY[0x22766BAC4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2212F1FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StorefrontInternal();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2212F2030(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StorefrontInternal();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for StorefrontInternal(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2212F2B20();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for StorefrontInternal(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2212F2B20();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for StorefrontInternal(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2212F2B20();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for StorefrontInternal(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2212F2B20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for StorefrontInternal(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2212F2B20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for StorefrontInternal(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2212F2B20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for StorefrontInternal()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212F2378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2212F2B20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for StorefrontInternal()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2212F2400(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2212F2B20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2212F2474()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2212F2B20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StorefrontInternal.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2212F2534 + 4 * byte_22131ED75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2212F2568 + 4 * byte_22131ED70[v4]))();
}

uint64_t sub_2212F2568(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212F2570(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2212F2578);
  return result;
}

uint64_t sub_2212F2584(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2212F258CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2212F2590(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2212F2598(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StorefrontInternal.CodingKeys()
{
  return &type metadata for StorefrontInternal.CodingKeys;
}

unint64_t sub_2212F25B8()
{
  unint64_t result;

  result = qword_255669880;
  if (!qword_255669880)
  {
    result = MEMORY[0x22766BAC4](&unk_22131EF0C, &type metadata for StorefrontInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669880);
  }
  return result;
}

unint64_t sub_2212F2600()
{
  unint64_t result;

  result = qword_255669888;
  if (!qword_255669888)
  {
    result = MEMORY[0x22766BAC4](&unk_22131EE7C, &type metadata for StorefrontInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669888);
  }
  return result;
}

unint64_t sub_2212F2648()
{
  unint64_t result;

  result = qword_255669890;
  if (!qword_255669890)
  {
    result = MEMORY[0x22766BAC4](&unk_22131EEA4, &type metadata for StorefrontInternal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255669890);
  }
  return result;
}

uint64_t sub_2212F268C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL || (sub_2212F5CDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2212F5CDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2212F27D8()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_2212F27E4()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_2212F27F0()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_2212F27FC()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_2212F2808()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_2212F2814()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_2212F2820()
{
  return MEMORY[0x24BDCB648]();
}

uint64_t sub_2212F282C()
{
  return MEMORY[0x24BDCB720]();
}

uint64_t sub_2212F2838()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_2212F2844()
{
  return MEMORY[0x24BDCB7B0]();
}

uint64_t sub_2212F2850()
{
  return MEMORY[0x24BDCB960]();
}

uint64_t sub_2212F285C()
{
  return MEMORY[0x24BDCB980]();
}

uint64_t sub_2212F2868()
{
  return MEMORY[0x24BDCB988]();
}

uint64_t sub_2212F2874()
{
  return MEMORY[0x24BDCBA58]();
}

uint64_t sub_2212F2880()
{
  return MEMORY[0x24BDCBAB0]();
}

uint64_t sub_2212F288C()
{
  return MEMORY[0x24BDCBB78]();
}

uint64_t sub_2212F2898()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_2212F28A4()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_2212F28B0()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_2212F28BC()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_2212F28C8()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_2212F28D4()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_2212F28E0()
{
  return MEMORY[0x24BDCBE40]();
}

uint64_t sub_2212F28EC()
{
  return MEMORY[0x24BDCBE50]();
}

uint64_t sub_2212F28F8()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_2212F2904()
{
  return MEMORY[0x24BDCC1A0]();
}

uint64_t sub_2212F2910()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_2212F291C()
{
  return MEMORY[0x24BDCC2F0]();
}

uint64_t sub_2212F2928()
{
  return MEMORY[0x24BDCC580]();
}

uint64_t sub_2212F2934()
{
  return MEMORY[0x24BDCC5A8]();
}

uint64_t sub_2212F2940()
{
  return MEMORY[0x24BDCC848]();
}

uint64_t sub_2212F294C()
{
  return MEMORY[0x24BDCC890]();
}

uint64_t sub_2212F2958()
{
  return MEMORY[0x24BDCC898]();
}

uint64_t sub_2212F2964()
{
  return MEMORY[0x24BDCD2D0]();
}

uint64_t sub_2212F2970()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_2212F297C()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_2212F2988()
{
  return MEMORY[0x24BDCD320]();
}

uint64_t sub_2212F2994()
{
  return MEMORY[0x24BDCD340]();
}

uint64_t sub_2212F29A0()
{
  return MEMORY[0x24BDCD350]();
}

uint64_t sub_2212F29AC()
{
  return MEMORY[0x24BDCD370]();
}

uint64_t sub_2212F29B8()
{
  return MEMORY[0x24BDCD380]();
}

uint64_t sub_2212F29C4()
{
  return MEMORY[0x24BDCD3B0]();
}

uint64_t sub_2212F29D0()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_2212F29DC()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_2212F29E8()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_2212F29F4()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_2212F2A00()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_2212F2A0C()
{
  return MEMORY[0x24BDCDA48]();
}

uint64_t sub_2212F2A18()
{
  return MEMORY[0x24BDCDA58]();
}

uint64_t sub_2212F2A24()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_2212F2A30()
{
  return MEMORY[0x24BDCDB58]();
}

uint64_t sub_2212F2A3C()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_2212F2A48()
{
  return MEMORY[0x24BDCDB68]();
}

uint64_t sub_2212F2A54()
{
  return MEMORY[0x24BDCDBD0]();
}

uint64_t sub_2212F2A60()
{
  return MEMORY[0x24BDCDC08]();
}

uint64_t sub_2212F2A6C()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_2212F2A78()
{
  return MEMORY[0x24BDCDC30]();
}

uint64_t sub_2212F2A84()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_2212F2A90()
{
  return MEMORY[0x24BDCDC60]();
}

uint64_t sub_2212F2A9C()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_2212F2AA8()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_2212F2AB4()
{
  return MEMORY[0x24BDCDCC8]();
}

uint64_t sub_2212F2AC0()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_2212F2ACC()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_2212F2AD8()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_2212F2AE4()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_2212F2AF0()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_2212F2AFC()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_2212F2B08()
{
  return MEMORY[0x24BDCECD8]();
}

uint64_t sub_2212F2B14()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_2212F2B20()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_2212F2B2C()
{
  return MEMORY[0x24BDCF760]();
}

uint64_t sub_2212F2B38()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t sub_2212F2B44()
{
  return MEMORY[0x24BEE73C0]();
}

uint64_t sub_2212F2B50()
{
  return MEMORY[0x24BEE73D0]();
}

uint64_t sub_2212F2B5C()
{
  return MEMORY[0x24BEE7408]();
}

uint64_t sub_2212F2B68()
{
  return MEMORY[0x24BEC6528]();
}

uint64_t sub_2212F2B74()
{
  return MEMORY[0x24BEC6540]();
}

uint64_t sub_2212F2B80()
{
  return MEMORY[0x24BEC6640]();
}

uint64_t sub_2212F2B8C()
{
  return MEMORY[0x24BE18B10]();
}

uint64_t sub_2212F2B98()
{
  return MEMORY[0x24BE18B58]();
}

uint64_t sub_2212F2BA4()
{
  return MEMORY[0x24BE18C30]();
}

uint64_t sub_2212F2BB0()
{
  return MEMORY[0x24BE18C40]();
}

uint64_t sub_2212F2BBC()
{
  return MEMORY[0x24BE18C48]();
}

uint64_t sub_2212F2BC8()
{
  return MEMORY[0x24BE18C80]();
}

uint64_t sub_2212F2BD4()
{
  return MEMORY[0x24BE18C88]();
}

uint64_t sub_2212F2BE0()
{
  return MEMORY[0x24BE18CB0]();
}

uint64_t sub_2212F2BEC()
{
  return MEMORY[0x24BE18CC0]();
}

uint64_t sub_2212F2BF8()
{
  return MEMORY[0x24BDC6D30]();
}

uint64_t sub_2212F2C04()
{
  return MEMORY[0x24BDC6D48]();
}

uint64_t sub_2212F2C10()
{
  return MEMORY[0x24BEE76F0]();
}

uint64_t sub_2212F2C1C()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_2212F2C28()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_2212F2C34()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_2212F2C40()
{
  return MEMORY[0x24BEBC0F8]();
}

uint64_t sub_2212F2C4C()
{
  return MEMORY[0x24BDB9640]();
}

uint64_t sub_2212F2C58()
{
  return MEMORY[0x24BDB97D0]();
}

uint64_t sub_2212F2C64()
{
  return MEMORY[0x24BDB9B98]();
}

uint64_t sub_2212F2C70()
{
  return MEMORY[0x24BDB9BA0]();
}

uint64_t sub_2212F2C7C()
{
  return MEMORY[0x24BDB9BC8]();
}

uint64_t sub_2212F2C88()
{
  return MEMORY[0x24BDB9C40]();
}

uint64_t sub_2212F2C94()
{
  return MEMORY[0x24BDB9C48]();
}

uint64_t sub_2212F2CA0()
{
  return MEMORY[0x24BDB9D80]();
}

uint64_t sub_2212F2CAC()
{
  return MEMORY[0x24BDB9E98]();
}

uint64_t sub_2212F2CB8()
{
  return MEMORY[0x24BDB9EC8]();
}

uint64_t sub_2212F2CC4()
{
  return MEMORY[0x24BDB9ED0]();
}

uint64_t sub_2212F2CD0()
{
  return MEMORY[0x24BDB9EF0]();
}

uint64_t sub_2212F2CDC()
{
  return MEMORY[0x24BDBA028]();
}

uint64_t sub_2212F2CE8()
{
  return MEMORY[0x24BDBA128]();
}

uint64_t sub_2212F2CF4()
{
  return MEMORY[0x24BDEAE98]();
}

uint64_t sub_2212F2D00()
{
  return MEMORY[0x24BDEAEA0]();
}

uint64_t sub_2212F2D0C()
{
  return MEMORY[0x24BDEAEA8]();
}

uint64_t sub_2212F2D18()
{
  return MEMORY[0x24BDEAEB0]();
}

uint64_t sub_2212F2D24()
{
  return MEMORY[0x24BDEAED0]();
}

uint64_t sub_2212F2D30()
{
  return MEMORY[0x24BDEAF58]();
}

uint64_t sub_2212F2D3C()
{
  return MEMORY[0x24BDEAF68]();
}

uint64_t sub_2212F2D48()
{
  return MEMORY[0x24BDEB040]();
}

uint64_t sub_2212F2D54()
{
  return MEMORY[0x24BDEB1F0]();
}

uint64_t sub_2212F2D60()
{
  return MEMORY[0x24BDEB210]();
}

uint64_t sub_2212F2D6C()
{
  return MEMORY[0x24BDEB230]();
}

uint64_t sub_2212F2D78()
{
  return MEMORY[0x24BDEB248]();
}

uint64_t sub_2212F2D84()
{
  return MEMORY[0x24BDEB258]();
}

uint64_t sub_2212F2D90()
{
  return MEMORY[0x24BDEB268]();
}

uint64_t sub_2212F2D9C()
{
  return MEMORY[0x24BDEB270]();
}

uint64_t sub_2212F2DA8()
{
  return MEMORY[0x24BDEB278]();
}

uint64_t sub_2212F2DB4()
{
  return MEMORY[0x24BDEB280]();
}

uint64_t sub_2212F2DC0()
{
  return MEMORY[0x24BDEB2E0]();
}

uint64_t sub_2212F2DCC()
{
  return MEMORY[0x24BDEB2E8]();
}

uint64_t sub_2212F2DD8()
{
  return MEMORY[0x24BDEB310]();
}

uint64_t sub_2212F2DE4()
{
  return MEMORY[0x24BDEB370]();
}

uint64_t sub_2212F2DF0()
{
  return MEMORY[0x24BDEB418]();
}

uint64_t sub_2212F2DFC()
{
  return MEMORY[0x24BDEB558]();
}

uint64_t sub_2212F2E08()
{
  return MEMORY[0x24BDEB560]();
}

uint64_t sub_2212F2E14()
{
  return MEMORY[0x24BDEB580]();
}

uint64_t sub_2212F2E20()
{
  return MEMORY[0x24BDEB708]();
}

uint64_t sub_2212F2E2C()
{
  return MEMORY[0x24BDEB768]();
}

uint64_t sub_2212F2E38()
{
  return MEMORY[0x24BDEB790]();
}

uint64_t sub_2212F2E44()
{
  return MEMORY[0x24BDEB7B8]();
}

uint64_t sub_2212F2E50()
{
  return MEMORY[0x24BDEB828]();
}

uint64_t sub_2212F2E5C()
{
  return MEMORY[0x24BDEB880]();
}

uint64_t sub_2212F2E68()
{
  return MEMORY[0x24BDEB888]();
}

uint64_t sub_2212F2E74()
{
  return MEMORY[0x24BDEB8A8]();
}

uint64_t sub_2212F2E80()
{
  return MEMORY[0x24BDEB8C8]();
}

uint64_t sub_2212F2E8C()
{
  return MEMORY[0x24BDEB8D0]();
}

uint64_t sub_2212F2E98()
{
  return MEMORY[0x24BDEB8E8]();
}

uint64_t sub_2212F2EA4()
{
  return MEMORY[0x24BDEB900]();
}

uint64_t sub_2212F2EB0()
{
  return MEMORY[0x24BDEB978]();
}

uint64_t sub_2212F2EBC()
{
  return MEMORY[0x24BDEB990]();
}

uint64_t sub_2212F2EC8()
{
  return MEMORY[0x24BDEBC10]();
}

uint64_t sub_2212F2ED4()
{
  return MEMORY[0x24BDEBC28]();
}

uint64_t sub_2212F2EE0()
{
  return MEMORY[0x24BDEBC38]();
}

uint64_t sub_2212F2EEC()
{
  return MEMORY[0x24BDEBC40]();
}

uint64_t sub_2212F2EF8()
{
  return MEMORY[0x24BDEBD98]();
}

uint64_t sub_2212F2F04()
{
  return MEMORY[0x24BDEBDD0]();
}

uint64_t sub_2212F2F10()
{
  return MEMORY[0x24BDEBDD8]();
}

uint64_t sub_2212F2F1C()
{
  return MEMORY[0x24BDEBDE0]();
}

uint64_t sub_2212F2F28()
{
  return MEMORY[0x24BDEBDF0]();
}

uint64_t sub_2212F2F34()
{
  return MEMORY[0x24BDEBE00]();
}

uint64_t sub_2212F2F40()
{
  return MEMORY[0x24BDEBE28]();
}

uint64_t sub_2212F2F4C()
{
  return MEMORY[0x24BDEBE30]();
}

uint64_t sub_2212F2F58()
{
  return MEMORY[0x24BDEBE48]();
}

uint64_t sub_2212F2F64()
{
  return MEMORY[0x24BDEBED0]();
}

uint64_t sub_2212F2F70()
{
  return MEMORY[0x24BDEBF88]();
}

uint64_t sub_2212F2F7C()
{
  return MEMORY[0x24BDEBF98]();
}

uint64_t sub_2212F2F88()
{
  return MEMORY[0x24BDEBFE0]();
}

uint64_t sub_2212F2F94()
{
  return MEMORY[0x24BDEC000]();
}

uint64_t sub_2212F2FA0()
{
  return MEMORY[0x24BDEC030]();
}

uint64_t sub_2212F2FAC()
{
  return MEMORY[0x24BDEC038]();
}

uint64_t sub_2212F2FB8()
{
  return MEMORY[0x24BDEC110]();
}

uint64_t sub_2212F2FC4()
{
  return MEMORY[0x24BDEC120]();
}

uint64_t sub_2212F2FD0()
{
  return MEMORY[0x24BDEC138]();
}

uint64_t sub_2212F2FDC()
{
  return MEMORY[0x24BDEC140]();
}

uint64_t sub_2212F2FE8()
{
  return MEMORY[0x24BDEC148]();
}

uint64_t sub_2212F2FF4()
{
  return MEMORY[0x24BDEC160]();
}

uint64_t sub_2212F3000()
{
  return MEMORY[0x24BDEC170]();
}

uint64_t sub_2212F300C()
{
  return MEMORY[0x24BDEC180]();
}

uint64_t sub_2212F3018()
{
  return MEMORY[0x24BDEC190]();
}

uint64_t sub_2212F3024()
{
  return MEMORY[0x24BDEC1A8]();
}

uint64_t sub_2212F3030()
{
  return MEMORY[0x24BDEC1B0]();
}

uint64_t sub_2212F303C()
{
  return MEMORY[0x24BDEC258]();
}

uint64_t sub_2212F3048()
{
  return MEMORY[0x24BDEC260]();
}

uint64_t sub_2212F3054()
{
  return MEMORY[0x24BDEC268]();
}

uint64_t sub_2212F3060()
{
  return MEMORY[0x24BDEC270]();
}

uint64_t sub_2212F306C()
{
  return MEMORY[0x24BDEC278]();
}

uint64_t sub_2212F3078()
{
  return MEMORY[0x24BDEC280]();
}

uint64_t sub_2212F3084()
{
  return MEMORY[0x24BDEC290]();
}

uint64_t sub_2212F3090()
{
  return MEMORY[0x24BDEC2A0]();
}

uint64_t sub_2212F309C()
{
  return MEMORY[0x24BDEC2B8]();
}

uint64_t sub_2212F30A8()
{
  return MEMORY[0x24BDEC2C8]();
}

uint64_t sub_2212F30B4()
{
  return MEMORY[0x24BDEC2E0]();
}

uint64_t sub_2212F30C0()
{
  return MEMORY[0x24BDEC348]();
}

uint64_t sub_2212F30CC()
{
  return MEMORY[0x24BDEC358]();
}

uint64_t sub_2212F30D8()
{
  return MEMORY[0x24BDEC368]();
}

uint64_t sub_2212F30E4()
{
  return MEMORY[0x24BDEC370]();
}

uint64_t sub_2212F30F0()
{
  return MEMORY[0x24BDEC4A0]();
}

uint64_t sub_2212F30FC()
{
  return MEMORY[0x24BDEC4E0]();
}

uint64_t sub_2212F3108()
{
  return MEMORY[0x24BDEC530]();
}

uint64_t sub_2212F3114()
{
  return MEMORY[0x24BDEC548]();
}

uint64_t sub_2212F3120()
{
  return MEMORY[0x24BDEC5A0]();
}

uint64_t sub_2212F312C()
{
  return MEMORY[0x24BDEC638]();
}

uint64_t sub_2212F3138()
{
  return MEMORY[0x24BDEC648]();
}

uint64_t sub_2212F3144()
{
  return MEMORY[0x24BDEC6D8]();
}

uint64_t sub_2212F3150()
{
  return MEMORY[0x24BDEC6E0]();
}

uint64_t sub_2212F315C()
{
  return MEMORY[0x24BDEC708]();
}

uint64_t sub_2212F3168()
{
  return MEMORY[0x24BDEC778]();
}

uint64_t sub_2212F3174()
{
  return MEMORY[0x24BDEC7B0]();
}

uint64_t sub_2212F3180()
{
  return MEMORY[0x24BDEC888]();
}

uint64_t sub_2212F318C()
{
  return MEMORY[0x24BDEC8C8]();
}

uint64_t sub_2212F3198()
{
  return MEMORY[0x24BDEC958]();
}

uint64_t sub_2212F31A4()
{
  return MEMORY[0x24BDEC998]();
}

uint64_t sub_2212F31B0()
{
  return MEMORY[0x24BDECA70]();
}

uint64_t sub_2212F31BC()
{
  return MEMORY[0x24BDECA88]();
}

uint64_t sub_2212F31C8()
{
  return MEMORY[0x24BDECA90]();
}

uint64_t sub_2212F31D4()
{
  return MEMORY[0x24BDECA98]();
}

uint64_t sub_2212F31E0()
{
  return MEMORY[0x24BDECAB8]();
}

uint64_t sub_2212F31EC()
{
  return MEMORY[0x24BDECAC0]();
}

uint64_t sub_2212F31F8()
{
  return MEMORY[0x24BDECAD0]();
}

uint64_t sub_2212F3204()
{
  return MEMORY[0x24BDECAD8]();
}

uint64_t sub_2212F3210()
{
  return MEMORY[0x24BDECAE0]();
}

uint64_t sub_2212F321C()
{
  return MEMORY[0x24BDECB38]();
}

uint64_t sub_2212F3228()
{
  return MEMORY[0x24BDECB40]();
}

uint64_t sub_2212F3234()
{
  return MEMORY[0x24BDECB58]();
}

uint64_t sub_2212F3240()
{
  return MEMORY[0x24BDECB68]();
}

uint64_t sub_2212F324C()
{
  return MEMORY[0x24BDECB98]();
}

uint64_t sub_2212F3258()
{
  return MEMORY[0x24BDECBA0]();
}

uint64_t sub_2212F3264()
{
  return MEMORY[0x24BDECBC8]();
}

uint64_t sub_2212F3270()
{
  return MEMORY[0x24BDECBD0]();
}

uint64_t sub_2212F327C()
{
  return MEMORY[0x24BDECBD8]();
}

uint64_t sub_2212F3288()
{
  return MEMORY[0x24BDECBE8]();
}

uint64_t sub_2212F3294()
{
  return MEMORY[0x24BDECBF8]();
}

uint64_t sub_2212F32A0()
{
  return MEMORY[0x24BDECC00]();
}

uint64_t sub_2212F32AC()
{
  return MEMORY[0x24BDECD38]();
}

uint64_t sub_2212F32B8()
{
  return MEMORY[0x24BDECDB0]();
}

uint64_t sub_2212F32C4()
{
  return MEMORY[0x24BDECDC0]();
}

uint64_t sub_2212F32D0()
{
  return MEMORY[0x24BDECDC8]();
}

uint64_t sub_2212F32DC()
{
  return MEMORY[0x24BDECE58]();
}

uint64_t sub_2212F32E8()
{
  return MEMORY[0x24BDECE68]();
}

uint64_t sub_2212F32F4()
{
  return MEMORY[0x24BDECE78]();
}

uint64_t sub_2212F3300()
{
  return MEMORY[0x24BDECE88]();
}

uint64_t sub_2212F330C()
{
  return MEMORY[0x24BDECF50]();
}

uint64_t sub_2212F3318()
{
  return MEMORY[0x24BDED0F0]();
}

uint64_t sub_2212F3324()
{
  return MEMORY[0x24BDED168]();
}

uint64_t sub_2212F3330()
{
  return MEMORY[0x24BDED230]();
}

uint64_t sub_2212F333C()
{
  return MEMORY[0x24BDED248]();
}

uint64_t sub_2212F3348()
{
  return MEMORY[0x24BDED2D0]();
}

uint64_t sub_2212F3354()
{
  return MEMORY[0x24BDED330]();
}

uint64_t sub_2212F3360()
{
  return MEMORY[0x24BDED338]();
}

uint64_t sub_2212F336C()
{
  return MEMORY[0x24BDED3B0]();
}

uint64_t sub_2212F3378()
{
  return MEMORY[0x24BDED3C8]();
}

uint64_t sub_2212F3384()
{
  return MEMORY[0x24BDED508]();
}

uint64_t sub_2212F3390()
{
  return MEMORY[0x24BDED5F8]();
}

uint64_t sub_2212F339C()
{
  return MEMORY[0x24BDED768]();
}

uint64_t sub_2212F33A8()
{
  return MEMORY[0x24BDED770]();
}

uint64_t sub_2212F33B4()
{
  return MEMORY[0x24BDED778]();
}

uint64_t sub_2212F33C0()
{
  return MEMORY[0x24BDED860]();
}

uint64_t sub_2212F33CC()
{
  return MEMORY[0x24BDED868]();
}

uint64_t sub_2212F33D8()
{
  return MEMORY[0x24BDED8E0]();
}

uint64_t sub_2212F33E4()
{
  return MEMORY[0x24BDED918]();
}

uint64_t sub_2212F33F0()
{
  return MEMORY[0x24BDED930]();
}

uint64_t sub_2212F33FC()
{
  return MEMORY[0x24BDED960]();
}

uint64_t sub_2212F3408()
{
  return MEMORY[0x24BDED970]();
}

uint64_t sub_2212F3414()
{
  return MEMORY[0x24BDED998]();
}

uint64_t sub_2212F3420()
{
  return MEMORY[0x24BDEDBA8]();
}

uint64_t sub_2212F342C()
{
  return MEMORY[0x24BDEDBF0]();
}

uint64_t sub_2212F3438()
{
  return MEMORY[0x24BDEDC18]();
}

uint64_t sub_2212F3444()
{
  return MEMORY[0x24BDEDC20]();
}

uint64_t sub_2212F3450()
{
  return MEMORY[0x24BDEDC68]();
}

uint64_t sub_2212F345C()
{
  return MEMORY[0x24BDEDC70]();
}

uint64_t sub_2212F3468()
{
  return MEMORY[0x24BDEDC80]();
}

uint64_t sub_2212F3474()
{
  return MEMORY[0x24BDEDC88]();
}

uint64_t sub_2212F3480()
{
  return MEMORY[0x24BDEDCA8]();
}

uint64_t sub_2212F348C()
{
  return MEMORY[0x24BDEDCF0]();
}

uint64_t sub_2212F3498()
{
  return MEMORY[0x24BDEDCF8]();
}

uint64_t sub_2212F34A4()
{
  return MEMORY[0x24BDEDD10]();
}

uint64_t sub_2212F34B0()
{
  return MEMORY[0x24BDEDDE8]();
}

uint64_t sub_2212F34BC()
{
  return MEMORY[0x24BDEDDF0]();
}

uint64_t sub_2212F34C8()
{
  return MEMORY[0x24BDEDDF8]();
}

uint64_t sub_2212F34D4()
{
  return MEMORY[0x24BDEDE28]();
}

uint64_t sub_2212F34E0()
{
  return MEMORY[0x24BDEDE80]();
}

uint64_t sub_2212F34EC()
{
  return MEMORY[0x24BDEDE88]();
}

uint64_t sub_2212F34F8()
{
  return MEMORY[0x24BDEDE90]();
}

uint64_t sub_2212F3504()
{
  return MEMORY[0x24BDEDE98]();
}

uint64_t sub_2212F3510()
{
  return MEMORY[0x24BDEDEC0]();
}

uint64_t sub_2212F351C()
{
  return MEMORY[0x24BDEDEE8]();
}

uint64_t sub_2212F3528()
{
  return MEMORY[0x24BDEDEF8]();
}

uint64_t sub_2212F3534()
{
  return MEMORY[0x24BDEDF18]();
}

uint64_t sub_2212F3540()
{
  return MEMORY[0x24BDEDF28]();
}

uint64_t sub_2212F354C()
{
  return MEMORY[0x24BDEDF30]();
}

uint64_t sub_2212F3558()
{
  return MEMORY[0x24BDEDF68]();
}

uint64_t sub_2212F3564()
{
  return MEMORY[0x24BDEDF70]();
}

uint64_t sub_2212F3570()
{
  return MEMORY[0x24BDEDF80]();
}

uint64_t sub_2212F357C()
{
  return MEMORY[0x24BDEDF88]();
}

uint64_t sub_2212F3588()
{
  return MEMORY[0x24BDEDFD8]();
}

uint64_t sub_2212F3594()
{
  return MEMORY[0x24BDEDFE0]();
}

uint64_t sub_2212F35A0()
{
  return MEMORY[0x24BDEDFF8]();
}

uint64_t sub_2212F35AC()
{
  return MEMORY[0x24BDEE000]();
}

uint64_t sub_2212F35B8()
{
  return MEMORY[0x24BDEE020]();
}

uint64_t sub_2212F35C4()
{
  return MEMORY[0x24BDEE028]();
}

uint64_t sub_2212F35D0()
{
  return MEMORY[0x24BDEE0A0]();
}

uint64_t sub_2212F35DC()
{
  return MEMORY[0x24BDEE0A8]();
}

uint64_t sub_2212F35E8()
{
  return MEMORY[0x24BDEE0D8]();
}

uint64_t sub_2212F35F4()
{
  return MEMORY[0x24BDEE0E0]();
}

uint64_t sub_2212F3600()
{
  return MEMORY[0x24BDEE0F8]();
}

uint64_t sub_2212F360C()
{
  return MEMORY[0x24BDEE128]();
}

uint64_t sub_2212F3618()
{
  return MEMORY[0x24BDEE130]();
}

uint64_t sub_2212F3624()
{
  return MEMORY[0x24BDEE190]();
}

uint64_t sub_2212F3630()
{
  return MEMORY[0x24BDEE198]();
}

uint64_t sub_2212F363C()
{
  return MEMORY[0x24BDEE1D8]();
}

uint64_t sub_2212F3648()
{
  return MEMORY[0x24BDEE1E8]();
}

uint64_t sub_2212F3654()
{
  return MEMORY[0x24BDEE1F0]();
}

uint64_t sub_2212F3660()
{
  return MEMORY[0x24BDEE1F8]();
}

uint64_t sub_2212F366C()
{
  return MEMORY[0x24BDEE288]();
}

uint64_t sub_2212F3678()
{
  return MEMORY[0x24BDEE290]();
}

uint64_t sub_2212F3684()
{
  return MEMORY[0x24BDEE320]();
}

uint64_t sub_2212F3690()
{
  return MEMORY[0x24BDEE328]();
}

uint64_t sub_2212F369C()
{
  return MEMORY[0x24BDEE358]();
}

uint64_t sub_2212F36A8()
{
  return MEMORY[0x24BDEE390]();
}

uint64_t sub_2212F36B4()
{
  return MEMORY[0x24BDEE3A0]();
}

uint64_t sub_2212F36C0()
{
  return MEMORY[0x24BDEE3B0]();
}

uint64_t sub_2212F36CC()
{
  return MEMORY[0x24BDEE3B8]();
}

uint64_t sub_2212F36D8()
{
  return MEMORY[0x24BDEE3C8]();
}

uint64_t sub_2212F36E4()
{
  return MEMORY[0x24BDEE3F0]();
}

uint64_t sub_2212F36F0()
{
  return MEMORY[0x24BDEE400]();
}

uint64_t sub_2212F36FC()
{
  return MEMORY[0x24BDEE410]();
}

uint64_t sub_2212F3708()
{
  return MEMORY[0x24BDEE448]();
}

uint64_t sub_2212F3714()
{
  return MEMORY[0x24BDEE450]();
}

uint64_t sub_2212F3720()
{
  return MEMORY[0x24BDEE468]();
}

uint64_t sub_2212F372C()
{
  return MEMORY[0x24BDEE478]();
}

uint64_t sub_2212F3738()
{
  return MEMORY[0x24BDEE490]();
}

uint64_t sub_2212F3744()
{
  return MEMORY[0x24BDEE4A0]();
}

uint64_t sub_2212F3750()
{
  return MEMORY[0x24BDEE4C0]();
}

uint64_t sub_2212F375C()
{
  return MEMORY[0x24BDEE4D8]();
}

uint64_t sub_2212F3768()
{
  return MEMORY[0x24BDEE4E0]();
}

uint64_t sub_2212F3774()
{
  return MEMORY[0x24BDEE4F8]();
}

uint64_t sub_2212F3780()
{
  return MEMORY[0x24BDEE510]();
}

uint64_t sub_2212F378C()
{
  return MEMORY[0x24BDEE520]();
}

uint64_t sub_2212F3798()
{
  return MEMORY[0x24BDEE530]();
}

uint64_t sub_2212F37A4()
{
  return MEMORY[0x24BDEE538]();
}

uint64_t sub_2212F37B0()
{
  return MEMORY[0x24BDEE608]();
}

uint64_t sub_2212F37BC()
{
  return MEMORY[0x24BDEE640]();
}

uint64_t sub_2212F37C8()
{
  return MEMORY[0x24BDEE700]();
}

uint64_t sub_2212F37D4()
{
  return MEMORY[0x24BDEE708]();
}

uint64_t sub_2212F37E0()
{
  return MEMORY[0x24BDEE718]();
}

uint64_t sub_2212F37EC()
{
  return MEMORY[0x24BDEE728]();
}

uint64_t sub_2212F37F8()
{
  return MEMORY[0x24BDEE730]();
}

uint64_t sub_2212F3804()
{
  return MEMORY[0x24BDEE980]();
}

uint64_t sub_2212F3810()
{
  return MEMORY[0x24BDEE988]();
}

uint64_t sub_2212F381C()
{
  return MEMORY[0x24BDEEA18]();
}

uint64_t sub_2212F3828()
{
  return MEMORY[0x24BDEEA28]();
}

uint64_t sub_2212F3834()
{
  return MEMORY[0x24BDEEA30]();
}

uint64_t sub_2212F3840()
{
  return MEMORY[0x24BDEEA40]();
}

uint64_t sub_2212F384C()
{
  return MEMORY[0x24BDEEA50]();
}

uint64_t sub_2212F3858()
{
  return MEMORY[0x24BDEEA60]();
}

uint64_t sub_2212F3864()
{
  return MEMORY[0x24BDEEA70]();
}

uint64_t sub_2212F3870()
{
  return MEMORY[0x24BDEEAA0]();
}

uint64_t sub_2212F387C()
{
  return MEMORY[0x24BDEEB88]();
}

uint64_t sub_2212F3888()
{
  return MEMORY[0x24BDEEBA0]();
}

uint64_t sub_2212F3894()
{
  return MEMORY[0x24BDEEBD0]();
}

uint64_t sub_2212F38A0()
{
  return MEMORY[0x24BDEEC70]();
}

uint64_t sub_2212F38AC()
{
  return MEMORY[0x24BDEEC90]();
}

uint64_t sub_2212F38B8()
{
  return MEMORY[0x24BDEECA8]();
}

uint64_t sub_2212F38C4()
{
  return MEMORY[0x24BDEECF8]();
}

uint64_t sub_2212F38D0()
{
  return MEMORY[0x24BDEED60]();
}

uint64_t sub_2212F38DC()
{
  return MEMORY[0x24BDEED88]();
}

uint64_t sub_2212F38E8()
{
  return MEMORY[0x24BDEEF60]();
}

uint64_t sub_2212F38F4()
{
  return MEMORY[0x24BDEEF78]();
}

uint64_t sub_2212F3900()
{
  return MEMORY[0x24BDEEF80]();
}

uint64_t sub_2212F390C()
{
  return MEMORY[0x24BDEEF98]();
}

uint64_t sub_2212F3918()
{
  return MEMORY[0x24BDEF0D8]();
}

uint64_t sub_2212F3924()
{
  return MEMORY[0x24BDEF0E8]();
}

uint64_t sub_2212F3930()
{
  return MEMORY[0x24BDEF110]();
}

uint64_t sub_2212F393C()
{
  return MEMORY[0x24BDEF120]();
}

uint64_t sub_2212F3948()
{
  return MEMORY[0x24BDEF168]();
}

uint64_t sub_2212F3954()
{
  return MEMORY[0x24BDEF1A0]();
}

uint64_t sub_2212F3960()
{
  return MEMORY[0x24BDEF1D0]();
}

uint64_t sub_2212F396C()
{
  return MEMORY[0x24BDEF228]();
}

uint64_t sub_2212F3978()
{
  return MEMORY[0x24BDEF238]();
}

uint64_t sub_2212F3984()
{
  return MEMORY[0x24BDEF248]();
}

uint64_t sub_2212F3990()
{
  return MEMORY[0x24BDEF260]();
}

uint64_t sub_2212F399C()
{
  return MEMORY[0x24BDEF270]();
}

uint64_t sub_2212F39A8()
{
  return MEMORY[0x24BDEF278]();
}

uint64_t sub_2212F39B4()
{
  return MEMORY[0x24BDEF288]();
}

uint64_t sub_2212F39C0()
{
  return MEMORY[0x24BDEF298]();
}

uint64_t sub_2212F39CC()
{
  return MEMORY[0x24BDEF2A8]();
}

uint64_t sub_2212F39D8()
{
  return MEMORY[0x24BDEF2C0]();
}

uint64_t sub_2212F39E4()
{
  return MEMORY[0x24BDEF2C8]();
}

uint64_t sub_2212F39F0()
{
  return MEMORY[0x24BDEF2D8]();
}

uint64_t sub_2212F39FC()
{
  return MEMORY[0x24BDEF358]();
}

uint64_t sub_2212F3A08()
{
  return MEMORY[0x24BDEF380]();
}

uint64_t sub_2212F3A14()
{
  return MEMORY[0x24BDEF3A0]();
}

uint64_t sub_2212F3A20()
{
  return MEMORY[0x24BDEF3B8]();
}

uint64_t sub_2212F3A2C()
{
  return MEMORY[0x24BDEF428]();
}

uint64_t sub_2212F3A38()
{
  return MEMORY[0x24BDEF4D8]();
}

uint64_t sub_2212F3A44()
{
  return MEMORY[0x24BDEF560]();
}

uint64_t sub_2212F3A50()
{
  return MEMORY[0x24BDEF5B8]();
}

uint64_t sub_2212F3A5C()
{
  return MEMORY[0x24BDEF5C8]();
}

uint64_t sub_2212F3A68()
{
  return MEMORY[0x24BDEF5D8]();
}

uint64_t sub_2212F3A74()
{
  return MEMORY[0x24BDEF650]();
}

uint64_t sub_2212F3A80()
{
  return MEMORY[0x24BDEF668]();
}

uint64_t sub_2212F3A8C()
{
  return MEMORY[0x24BDEF670]();
}

uint64_t sub_2212F3A98()
{
  return MEMORY[0x24BDEF678]();
}

uint64_t sub_2212F3AA4()
{
  return MEMORY[0x24BDEF680]();
}

uint64_t sub_2212F3AB0()
{
  return MEMORY[0x24BDEF6A8]();
}

uint64_t sub_2212F3ABC()
{
  return MEMORY[0x24BDEF6B0]();
}

uint64_t sub_2212F3AC8()
{
  return MEMORY[0x24BDEF6D8]();
}

uint64_t sub_2212F3AD4()
{
  return MEMORY[0x24BDEF6E0]();
}

uint64_t sub_2212F3AE0()
{
  return MEMORY[0x24BDEF740]();
}

uint64_t sub_2212F3AEC()
{
  return MEMORY[0x24BDEF818]();
}

uint64_t sub_2212F3AF8()
{
  return MEMORY[0x24BDEF8C0]();
}

uint64_t sub_2212F3B04()
{
  return MEMORY[0x24BDEF8D0]();
}

uint64_t sub_2212F3B10()
{
  return MEMORY[0x24BDEF998]();
}

uint64_t sub_2212F3B1C()
{
  return MEMORY[0x24BDEF9D0]();
}

uint64_t sub_2212F3B28()
{
  return MEMORY[0x24BDEF9D8]();
}

uint64_t sub_2212F3B34()
{
  return MEMORY[0x24BDEFAB8]();
}

uint64_t sub_2212F3B40()
{
  return MEMORY[0x24BDEFAF8]();
}

uint64_t sub_2212F3B4C()
{
  return MEMORY[0x24BDEFB50]();
}

uint64_t sub_2212F3B58()
{
  return MEMORY[0x24BDEFBF0]();
}

uint64_t sub_2212F3B64()
{
  return MEMORY[0x24BDEFC18]();
}

uint64_t sub_2212F3B70()
{
  return MEMORY[0x24BDEFC60]();
}

uint64_t sub_2212F3B7C()
{
  return MEMORY[0x24BDEFC78]();
}

uint64_t sub_2212F3B88()
{
  return MEMORY[0x24BDEFC98]();
}

uint64_t sub_2212F3B94()
{
  return MEMORY[0x24BDEFCA8]();
}

uint64_t sub_2212F3BA0()
{
  return MEMORY[0x24BDEFCB8]();
}

uint64_t sub_2212F3BAC()
{
  return MEMORY[0x24BDEFCC8]();
}

uint64_t sub_2212F3BB8()
{
  return MEMORY[0x24BDEFDB0]();
}

uint64_t sub_2212F3BC4()
{
  return MEMORY[0x24BDEFE30]();
}

uint64_t sub_2212F3BD0()
{
  return MEMORY[0x24BDEFE38]();
}

uint64_t sub_2212F3BDC()
{
  return MEMORY[0x24BDEFEF8]();
}

uint64_t sub_2212F3BE8()
{
  return MEMORY[0x24BDEFF48]();
}

uint64_t sub_2212F3BF4()
{
  return MEMORY[0x24BDEFFB0]();
}

uint64_t sub_2212F3C00()
{
  return MEMORY[0x24BDF0140]();
}

uint64_t sub_2212F3C0C()
{
  return MEMORY[0x24BDF0150]();
}

uint64_t sub_2212F3C18()
{
  return MEMORY[0x24BDF0200]();
}

uint64_t sub_2212F3C24()
{
  return MEMORY[0x24BDF0210]();
}

uint64_t sub_2212F3C30()
{
  return MEMORY[0x24BDF0220]();
}

uint64_t sub_2212F3C3C()
{
  return MEMORY[0x24BDF0230]();
}

uint64_t sub_2212F3C48()
{
  return MEMORY[0x24BDF0298]();
}

uint64_t sub_2212F3C54()
{
  return MEMORY[0x24BDF02A0]();
}

uint64_t sub_2212F3C60()
{
  return MEMORY[0x24BDF02A8]();
}

uint64_t sub_2212F3C6C()
{
  return MEMORY[0x24BDF02E8]();
}

uint64_t sub_2212F3C78()
{
  return MEMORY[0x24BDF02F8]();
}

uint64_t sub_2212F3C84()
{
  return MEMORY[0x24BDF0308]();
}

uint64_t sub_2212F3C90()
{
  return MEMORY[0x24BDF03B8]();
}

uint64_t sub_2212F3C9C()
{
  return MEMORY[0x24BDF0440]();
}

uint64_t sub_2212F3CA8()
{
  return MEMORY[0x24BDF0468]();
}

uint64_t sub_2212F3CB4()
{
  return MEMORY[0x24BDF0478]();
}

uint64_t sub_2212F3CC0()
{
  return MEMORY[0x24BDF04A8]();
}

uint64_t sub_2212F3CCC()
{
  return MEMORY[0x24BDF04B0]();
}

uint64_t sub_2212F3CD8()
{
  return MEMORY[0x24BDF06A0]();
}

uint64_t sub_2212F3CE4()
{
  return MEMORY[0x24BDF08B8]();
}

uint64_t sub_2212F3CF0()
{
  return MEMORY[0x24BDF08D0]();
}

uint64_t sub_2212F3CFC()
{
  return MEMORY[0x24BDF0950]();
}

uint64_t sub_2212F3D08()
{
  return MEMORY[0x24BDF09F8]();
}

uint64_t sub_2212F3D14()
{
  return MEMORY[0x24BDF0A10]();
}

uint64_t sub_2212F3D20()
{
  return MEMORY[0x24BDF0A18]();
}

uint64_t sub_2212F3D2C()
{
  return MEMORY[0x24BDF0A20]();
}

uint64_t sub_2212F3D38()
{
  return MEMORY[0x24BDF0AF0]();
}

uint64_t sub_2212F3D44()
{
  return MEMORY[0x24BDF0AF8]();
}

uint64_t sub_2212F3D50()
{
  return MEMORY[0x24BDF0D98]();
}

uint64_t sub_2212F3D5C()
{
  return MEMORY[0x24BDF0DA8]();
}

uint64_t sub_2212F3D68()
{
  return MEMORY[0x24BDF0DC0]();
}

uint64_t sub_2212F3D74()
{
  return MEMORY[0x24BDF0E78]();
}

uint64_t sub_2212F3D80()
{
  return MEMORY[0x24BDF0E80]();
}

uint64_t sub_2212F3D8C()
{
  return MEMORY[0x24BDF0E88]();
}

uint64_t sub_2212F3D98()
{
  return MEMORY[0x24BDF0E90]();
}

uint64_t sub_2212F3DA4()
{
  return MEMORY[0x24BDF0E98]();
}

uint64_t sub_2212F3DB0()
{
  return MEMORY[0x24BDF0EA0]();
}

uint64_t sub_2212F3DBC()
{
  return MEMORY[0x24BDF0EA8]();
}

uint64_t sub_2212F3DC8()
{
  return MEMORY[0x24BDF0EC0]();
}

uint64_t sub_2212F3DD4()
{
  return MEMORY[0x24BDF0ED0]();
}

uint64_t sub_2212F3DE0()
{
  return MEMORY[0x24BDF0EE0]();
}

uint64_t sub_2212F3DEC()
{
  return MEMORY[0x24BDF0EF0]();
}

uint64_t sub_2212F3DF8()
{
  return MEMORY[0x24BDF0F00]();
}

uint64_t sub_2212F3E04()
{
  return MEMORY[0x24BDF0F10]();
}

uint64_t sub_2212F3E10()
{
  return MEMORY[0x24BDF0F18]();
}

uint64_t sub_2212F3E1C()
{
  return MEMORY[0x24BDF0F28]();
}

uint64_t sub_2212F3E28()
{
  return MEMORY[0x24BDF0F38]();
}

uint64_t sub_2212F3E34()
{
  return MEMORY[0x24BDF0FF0]();
}

uint64_t sub_2212F3E40()
{
  return MEMORY[0x24BDF1088]();
}

uint64_t sub_2212F3E4C()
{
  return MEMORY[0x24BDF10D8]();
}

uint64_t sub_2212F3E58()
{
  return MEMORY[0x24BDF10E0]();
}

uint64_t sub_2212F3E64()
{
  return MEMORY[0x24BDF10E8]();
}

uint64_t sub_2212F3E70()
{
  return MEMORY[0x24BDF10F8]();
}

uint64_t sub_2212F3E7C()
{
  return MEMORY[0x24BDF12E8]();
}

uint64_t sub_2212F3E88()
{
  return MEMORY[0x24BDF1430]();
}

uint64_t sub_2212F3E94()
{
  return MEMORY[0x24BDF1450]();
}

uint64_t sub_2212F3EA0()
{
  return MEMORY[0x24BDF1458]();
}

uint64_t sub_2212F3EAC()
{
  return MEMORY[0x24BDF1468]();
}

uint64_t sub_2212F3EB8()
{
  return MEMORY[0x24BDF1478]();
}

uint64_t sub_2212F3EC4()
{
  return MEMORY[0x24BDF14A0]();
}

uint64_t sub_2212F3ED0()
{
  return MEMORY[0x24BDF14A8]();
}

uint64_t sub_2212F3EDC()
{
  return MEMORY[0x24BDF14C0]();
}

uint64_t sub_2212F3EE8()
{
  return MEMORY[0x24BDF14C8]();
}

uint64_t sub_2212F3EF4()
{
  return MEMORY[0x24BDF14E0]();
}

uint64_t sub_2212F3F00()
{
  return MEMORY[0x24BDF14E8]();
}

uint64_t sub_2212F3F0C()
{
  return MEMORY[0x24BDF14F8]();
}

uint64_t sub_2212F3F18()
{
  return MEMORY[0x24BDF1510]();
}

uint64_t sub_2212F3F24()
{
  return MEMORY[0x24BDF1540]();
}

uint64_t sub_2212F3F30()
{
  return MEMORY[0x24BDF1560]();
}

uint64_t sub_2212F3F3C()
{
  return MEMORY[0x24BDF1580]();
}

uint64_t sub_2212F3F48()
{
  return MEMORY[0x24BDF15F8]();
}

uint64_t sub_2212F3F54()
{
  return MEMORY[0x24BDF1600]();
}

uint64_t sub_2212F3F60()
{
  return MEMORY[0x24BDF1640]();
}

uint64_t sub_2212F3F6C()
{
  return MEMORY[0x24BDF1678]();
}

uint64_t sub_2212F3F78()
{
  return MEMORY[0x24BDF16A8]();
}

uint64_t sub_2212F3F84()
{
  return MEMORY[0x24BDF16D8]();
}

uint64_t sub_2212F3F90()
{
  return MEMORY[0x24BDF16E8]();
}

uint64_t sub_2212F3F9C()
{
  return MEMORY[0x24BDF1700]();
}

uint64_t sub_2212F3FA8()
{
  return MEMORY[0x24BDF1750]();
}

uint64_t sub_2212F3FB4()
{
  return MEMORY[0x24BDF1768]();
}

uint64_t sub_2212F3FC0()
{
  return MEMORY[0x24BDF1778]();
}

uint64_t sub_2212F3FCC()
{
  return MEMORY[0x24BDF1790]();
}

uint64_t sub_2212F3FD8()
{
  return MEMORY[0x24BDF1798]();
}

uint64_t sub_2212F3FE4()
{
  return MEMORY[0x24BDF17D8]();
}

uint64_t sub_2212F3FF0()
{
  return MEMORY[0x24BDF17E8]();
}

uint64_t sub_2212F3FFC()
{
  return MEMORY[0x24BDF17F8]();
}

uint64_t sub_2212F4008()
{
  return MEMORY[0x24BDF1818]();
}

uint64_t sub_2212F4014()
{
  return MEMORY[0x24BDF1820]();
}

uint64_t sub_2212F4020()
{
  return MEMORY[0x24BDF1828]();
}

uint64_t sub_2212F402C()
{
  return MEMORY[0x24BDF1840]();
}

uint64_t sub_2212F4038()
{
  return MEMORY[0x24BDF1900]();
}

uint64_t sub_2212F4044()
{
  return MEMORY[0x24BDF1AA8]();
}

uint64_t sub_2212F4050()
{
  return MEMORY[0x24BDF1AB0]();
}

uint64_t sub_2212F405C()
{
  return MEMORY[0x24BDF1B40]();
}

uint64_t sub_2212F4068()
{
  return MEMORY[0x24BDF1BA0]();
}

uint64_t sub_2212F4074()
{
  return MEMORY[0x24BDF1BE8]();
}

uint64_t sub_2212F4080()
{
  return MEMORY[0x24BDF1D18]();
}

uint64_t sub_2212F408C()
{
  return MEMORY[0x24BDF1D50]();
}

uint64_t sub_2212F4098()
{
  return MEMORY[0x24BDF1D68]();
}

uint64_t sub_2212F40A4()
{
  return MEMORY[0x24BDF1D98]();
}

uint64_t sub_2212F40B0()
{
  return MEMORY[0x24BDF1DC8]();
}

uint64_t sub_2212F40BC()
{
  return MEMORY[0x24BDF1F38]();
}

uint64_t sub_2212F40C8()
{
  return MEMORY[0x24BDF1F40]();
}

uint64_t sub_2212F40D4()
{
  return MEMORY[0x24BDF1FC0]();
}

uint64_t sub_2212F40E0()
{
  return MEMORY[0x24BDF1FD8]();
}

uint64_t sub_2212F40EC()
{
  return MEMORY[0x24BDF1FE0]();
}

uint64_t sub_2212F40F8()
{
  return MEMORY[0x24BDF1FF0]();
}

uint64_t sub_2212F4104()
{
  return MEMORY[0x24BEC66C8]();
}

uint64_t sub_2212F4110()
{
  return MEMORY[0x24BDF2088]();
}

uint64_t sub_2212F411C()
{
  return MEMORY[0x24BDF20A0]();
}

uint64_t sub_2212F4128()
{
  return MEMORY[0x24BDF20D8]();
}

uint64_t sub_2212F4134()
{
  return MEMORY[0x24BDF20F8]();
}

uint64_t sub_2212F4140()
{
  return MEMORY[0x24BDF2138]();
}

uint64_t sub_2212F414C()
{
  return MEMORY[0x24BDF2170]();
}

uint64_t sub_2212F4158()
{
  return MEMORY[0x24BDF21B0]();
}

uint64_t sub_2212F4164()
{
  return MEMORY[0x24BDF2258]();
}

uint64_t sub_2212F4170()
{
  return MEMORY[0x24BDF2298]();
}

uint64_t sub_2212F417C()
{
  return MEMORY[0x24BDF22B0]();
}

uint64_t sub_2212F4188()
{
  return MEMORY[0x24BDF22C8]();
}

uint64_t sub_2212F4194()
{
  return MEMORY[0x24BDF2370]();
}

uint64_t sub_2212F41A0()
{
  return MEMORY[0x24BDF2378]();
}

uint64_t sub_2212F41AC()
{
  return MEMORY[0x24BDF2398]();
}

uint64_t sub_2212F41B8()
{
  return MEMORY[0x24BDF23D8]();
}

uint64_t sub_2212F41C4()
{
  return MEMORY[0x24BDF23E0]();
}

uint64_t sub_2212F41D0()
{
  return MEMORY[0x24BDF2418]();
}

uint64_t sub_2212F41DC()
{
  return MEMORY[0x24BDF2480]();
}

uint64_t sub_2212F41E8()
{
  return MEMORY[0x24BDF2490]();
}

uint64_t sub_2212F41F4()
{
  return MEMORY[0x24BDF24A8]();
}

uint64_t sub_2212F4200()
{
  return MEMORY[0x24BDF24B0]();
}

uint64_t sub_2212F420C()
{
  return MEMORY[0x24BDF2650]();
}

uint64_t sub_2212F4218()
{
  return MEMORY[0x24BDF2678]();
}

uint64_t sub_2212F4224()
{
  return MEMORY[0x24BDF2688]();
}

uint64_t sub_2212F4230()
{
  return MEMORY[0x24BDF2698]();
}

uint64_t sub_2212F423C()
{
  return MEMORY[0x24BDF26B8]();
}

uint64_t sub_2212F4248()
{
  return MEMORY[0x24BDF2708]();
}

uint64_t sub_2212F4254()
{
  return MEMORY[0x24BDF2758]();
}

uint64_t sub_2212F4260()
{
  return MEMORY[0x24BDF27C0]();
}

uint64_t sub_2212F426C()
{
  return MEMORY[0x24BDF27E0]();
}

uint64_t sub_2212F4278()
{
  return MEMORY[0x24BDF27F0]();
}

uint64_t sub_2212F4284()
{
  return MEMORY[0x24BDF2818]();
}

uint64_t sub_2212F4290()
{
  return MEMORY[0x24BDF2938]();
}

uint64_t sub_2212F429C()
{
  return MEMORY[0x24BDF29B8]();
}

uint64_t sub_2212F42A8()
{
  return MEMORY[0x24BDF29C0]();
}

uint64_t sub_2212F42B4()
{
  return MEMORY[0x24BDF29F0]();
}

uint64_t sub_2212F42C0()
{
  return MEMORY[0x24BDF2A00]();
}

uint64_t sub_2212F42CC()
{
  return MEMORY[0x24BDF2B40]();
}

uint64_t sub_2212F42D8()
{
  return MEMORY[0x24BDF2CD8]();
}

uint64_t sub_2212F42E4()
{
  return MEMORY[0x24BDF2D30]();
}

uint64_t sub_2212F42F0()
{
  return MEMORY[0x24BDF2D50]();
}

uint64_t sub_2212F42FC()
{
  return MEMORY[0x24BDF2DB8]();
}

uint64_t sub_2212F4308()
{
  return MEMORY[0x24BDF2F08]();
}

uint64_t sub_2212F4314()
{
  return MEMORY[0x24BDF2F40]();
}

uint64_t sub_2212F4320()
{
  return MEMORY[0x24BDF2F50]();
}

uint64_t sub_2212F432C()
{
  return MEMORY[0x24BDF2FD8]();
}

uint64_t sub_2212F4338()
{
  return MEMORY[0x24BDF2FF8]();
}

uint64_t sub_2212F4344()
{
  return MEMORY[0x24BDF3008]();
}

uint64_t sub_2212F4350()
{
  return MEMORY[0x24BDF3050]();
}

uint64_t sub_2212F435C()
{
  return MEMORY[0x24BDF30D8]();
}

uint64_t sub_2212F4368()
{
  return MEMORY[0x24BDF3108]();
}

uint64_t sub_2212F4374()
{
  return MEMORY[0x24BDF3118]();
}

uint64_t sub_2212F4380()
{
  return MEMORY[0x24BDF3130]();
}

uint64_t sub_2212F438C()
{
  return MEMORY[0x24BDF3178]();
}

uint64_t sub_2212F4398()
{
  return MEMORY[0x24BDF3200]();
}

uint64_t sub_2212F43A4()
{
  return MEMORY[0x24BDF3210]();
}

uint64_t sub_2212F43B0()
{
  return MEMORY[0x24BDF3280]();
}

uint64_t sub_2212F43BC()
{
  return MEMORY[0x24BDF3298]();
}

uint64_t sub_2212F43C8()
{
  return MEMORY[0x24BDF3300]();
}

uint64_t sub_2212F43D4()
{
  return MEMORY[0x24BDF3390]();
}

uint64_t sub_2212F43E0()
{
  return MEMORY[0x24BDF33C8]();
}

uint64_t sub_2212F43EC()
{
  return MEMORY[0x24BDF3448]();
}

uint64_t sub_2212F43F8()
{
  return MEMORY[0x24BDF3470]();
}

uint64_t sub_2212F4404()
{
  return MEMORY[0x24BDF3490]();
}

uint64_t sub_2212F4410()
{
  return MEMORY[0x24BDF34B8]();
}

uint64_t sub_2212F441C()
{
  return MEMORY[0x24BDF34C8]();
}

uint64_t sub_2212F4428()
{
  return MEMORY[0x24BDF34D0]();
}

uint64_t sub_2212F4434()
{
  return MEMORY[0x24BDF34F0]();
}

uint64_t sub_2212F4440()
{
  return MEMORY[0x24BDF3628]();
}

uint64_t sub_2212F444C()
{
  return MEMORY[0x24BDF3630]();
}

uint64_t sub_2212F4458()
{
  return MEMORY[0x24BDF3640]();
}

uint64_t sub_2212F4464()
{
  return MEMORY[0x24BDF3658]();
}

uint64_t sub_2212F4470()
{
  return MEMORY[0x24BDF3678]();
}

uint64_t sub_2212F447C()
{
  return MEMORY[0x24BDF3728]();
}

uint64_t sub_2212F4488()
{
  return MEMORY[0x24BDF3730]();
}

uint64_t sub_2212F4494()
{
  return MEMORY[0x24BDF3738]();
}

uint64_t sub_2212F44A0()
{
  return MEMORY[0x24BDF37B0]();
}

uint64_t sub_2212F44AC()
{
  return MEMORY[0x24BDF37C0]();
}

uint64_t sub_2212F44B8()
{
  return MEMORY[0x24BDF37D0]();
}

uint64_t sub_2212F44C4()
{
  return MEMORY[0x24BDF37E0]();
}

uint64_t sub_2212F44D0()
{
  return MEMORY[0x24BDF3840]();
}

uint64_t sub_2212F44DC()
{
  return MEMORY[0x24BDF3890]();
}

uint64_t sub_2212F44E8()
{
  return MEMORY[0x24BDF38C0]();
}

uint64_t sub_2212F44F4()
{
  return MEMORY[0x24BDF38C8]();
}

uint64_t sub_2212F4500()
{
  return MEMORY[0x24BDF38E0]();
}

uint64_t sub_2212F450C()
{
  return MEMORY[0x24BDF3900]();
}

uint64_t sub_2212F4518()
{
  return MEMORY[0x24BDF3930]();
}

uint64_t sub_2212F4524()
{
  return MEMORY[0x24BDF3940]();
}

uint64_t sub_2212F4530()
{
  return MEMORY[0x24BDF3980]();
}

uint64_t sub_2212F453C()
{
  return MEMORY[0x24BDF39B0]();
}

uint64_t sub_2212F4548()
{
  return MEMORY[0x24BDF39E0]();
}

uint64_t sub_2212F4554()
{
  return MEMORY[0x24BDF3AE0]();
}

uint64_t sub_2212F4560()
{
  return MEMORY[0x24BDF3BE8]();
}

uint64_t sub_2212F456C()
{
  return MEMORY[0x24BDF3BF8]();
}

uint64_t sub_2212F4578()
{
  return MEMORY[0x24BDF3C40]();
}

uint64_t sub_2212F4584()
{
  return MEMORY[0x24BDF3C50]();
}

uint64_t sub_2212F4590()
{
  return MEMORY[0x24BDF3C78]();
}

uint64_t sub_2212F459C()
{
  return MEMORY[0x24BDF3C90]();
}

uint64_t sub_2212F45A8()
{
  return MEMORY[0x24BDF3CA8]();
}

uint64_t sub_2212F45B4()
{
  return MEMORY[0x24BDF3CF0]();
}

uint64_t sub_2212F45C0()
{
  return MEMORY[0x24BDF3D10]();
}

uint64_t sub_2212F45CC()
{
  return MEMORY[0x24BDF3D30]();
}

uint64_t sub_2212F45D8()
{
  return MEMORY[0x24BDF3D60]();
}

uint64_t sub_2212F45E4()
{
  return MEMORY[0x24BDF3D78]();
}

uint64_t sub_2212F45F0()
{
  return MEMORY[0x24BDF3D88]();
}

uint64_t sub_2212F45FC()
{
  return MEMORY[0x24BDF3D90]();
}

uint64_t sub_2212F4608()
{
  return MEMORY[0x24BDF3DB0]();
}

uint64_t sub_2212F4614()
{
  return MEMORY[0x24BDF3DC0]();
}

uint64_t sub_2212F4620()
{
  return MEMORY[0x24BDF3DD0]();
}

uint64_t sub_2212F462C()
{
  return MEMORY[0x24BDF3E70]();
}

uint64_t sub_2212F4638()
{
  return MEMORY[0x24BDF3EB0]();
}

uint64_t sub_2212F4644()
{
  return MEMORY[0x24BDF3EC0]();
}

uint64_t sub_2212F4650()
{
  return MEMORY[0x24BDF3EF0]();
}

uint64_t sub_2212F465C()
{
  return MEMORY[0x24BDF3EF8]();
}

uint64_t sub_2212F4668()
{
  return MEMORY[0x24BDF3F18]();
}

uint64_t sub_2212F4674()
{
  return MEMORY[0x24BDF3F28]();
}

uint64_t sub_2212F4680()
{
  return MEMORY[0x24BDF3F80]();
}

uint64_t sub_2212F468C()
{
  return MEMORY[0x24BDF3FE8]();
}

uint64_t sub_2212F4698()
{
  return MEMORY[0x24BDF40C0]();
}

uint64_t sub_2212F46A4()
{
  return MEMORY[0x24BDF40D8]();
}

uint64_t sub_2212F46B0()
{
  return MEMORY[0x24BDF4128]();
}

uint64_t sub_2212F46BC()
{
  return MEMORY[0x24BDF4140]();
}

uint64_t sub_2212F46C8()
{
  return MEMORY[0x24BDF4150]();
}

uint64_t sub_2212F46D4()
{
  return MEMORY[0x24BDF4188]();
}

uint64_t sub_2212F46E0()
{
  return MEMORY[0x24BDF41F0]();
}

uint64_t sub_2212F46EC()
{
  return MEMORY[0x24BDF41F8]();
}

uint64_t sub_2212F46F8()
{
  return MEMORY[0x24BDF4208]();
}

uint64_t sub_2212F4704()
{
  return MEMORY[0x24BDF4218]();
}

uint64_t sub_2212F4710()
{
  return MEMORY[0x24BDF4230]();
}

uint64_t sub_2212F471C()
{
  return MEMORY[0x24BDF4238]();
}

uint64_t sub_2212F4728()
{
  return MEMORY[0x24BDF4248]();
}

uint64_t sub_2212F4734()
{
  return MEMORY[0x24BDF4258]();
}

uint64_t sub_2212F4740()
{
  return MEMORY[0x24BDF4268]();
}

uint64_t sub_2212F474C()
{
  return MEMORY[0x24BDF4278]();
}

uint64_t sub_2212F4758()
{
  return MEMORY[0x24BDF4280]();
}

uint64_t sub_2212F4764()
{
  return MEMORY[0x24BDF4290]();
}

uint64_t sub_2212F4770()
{
  return MEMORY[0x24BDF42A8]();
}

uint64_t sub_2212F477C()
{
  return MEMORY[0x24BDF42B0]();
}

uint64_t sub_2212F4788()
{
  return MEMORY[0x24BDF42C0]();
}

uint64_t sub_2212F4794()
{
  return MEMORY[0x24BDF4340]();
}

uint64_t sub_2212F47A0()
{
  return MEMORY[0x24BDF4358]();
}

uint64_t sub_2212F47AC()
{
  return MEMORY[0x24BDF4398]();
}

uint64_t sub_2212F47B8()
{
  return MEMORY[0x24BDF4470]();
}

uint64_t sub_2212F47C4()
{
  return MEMORY[0x24BDF4480]();
}

uint64_t sub_2212F47D0()
{
  return MEMORY[0x24BDF44B0]();
}

uint64_t sub_2212F47DC()
{
  return MEMORY[0x24BDF44E0]();
}

uint64_t sub_2212F47E8()
{
  return MEMORY[0x24BDF44E8]();
}

uint64_t sub_2212F47F4()
{
  return MEMORY[0x24BDF44F0]();
}

uint64_t sub_2212F4800()
{
  return MEMORY[0x24BDF4508]();
}

uint64_t sub_2212F480C()
{
  return MEMORY[0x24BDF4510]();
}

uint64_t sub_2212F4818()
{
  return MEMORY[0x24BDF4518]();
}

uint64_t sub_2212F4824()
{
  return MEMORY[0x24BDF46D8]();
}

uint64_t sub_2212F4830()
{
  return MEMORY[0x24BDF46E0]();
}

uint64_t sub_2212F483C()
{
  return MEMORY[0x24BDF4728]();
}

uint64_t sub_2212F4848()
{
  return MEMORY[0x24BDF4730]();
}

uint64_t sub_2212F4854()
{
  return MEMORY[0x24BDF4790]();
}

uint64_t sub_2212F4860()
{
  return MEMORY[0x24BDF47B0]();
}

uint64_t sub_2212F486C()
{
  return MEMORY[0x24BDF47B8]();
}

uint64_t sub_2212F4878()
{
  return MEMORY[0x24BDF47C8]();
}

uint64_t sub_2212F4884()
{
  return MEMORY[0x24BDF47E0]();
}

uint64_t sub_2212F4890()
{
  return MEMORY[0x24BDF47F8]();
}

uint64_t sub_2212F489C()
{
  return MEMORY[0x24BDF4808]();
}

uint64_t sub_2212F48A8()
{
  return MEMORY[0x24BDF4870]();
}

uint64_t sub_2212F48B4()
{
  return MEMORY[0x24BDF48E8]();
}

uint64_t sub_2212F48C0()
{
  return MEMORY[0x24BDF4908]();
}

uint64_t sub_2212F48CC()
{
  return MEMORY[0x24BDF4918]();
}

uint64_t sub_2212F48D8()
{
  return MEMORY[0x24BDF4980]();
}

uint64_t sub_2212F48E4()
{
  return MEMORY[0x24BDF49A0]();
}

uint64_t sub_2212F48F0()
{
  return MEMORY[0x24BDF49B8]();
}

uint64_t sub_2212F48FC()
{
  return MEMORY[0x24BDF49C8]();
}

uint64_t sub_2212F4908()
{
  return MEMORY[0x24BDF4AB8]();
}

uint64_t sub_2212F4914()
{
  return MEMORY[0x24BDF4AE0]();
}

uint64_t sub_2212F4920()
{
  return MEMORY[0x24BDF4B28]();
}

uint64_t sub_2212F492C()
{
  return MEMORY[0x24BDF4B30]();
}

uint64_t sub_2212F4938()
{
  return MEMORY[0x24BDF4B48]();
}

uint64_t sub_2212F4944()
{
  return MEMORY[0x24BDF4B58]();
}

uint64_t sub_2212F4950()
{
  return MEMORY[0x24BDF4BD0]();
}

uint64_t sub_2212F495C()
{
  return MEMORY[0x24BDF4CE0]();
}

uint64_t sub_2212F4968()
{
  return MEMORY[0x24BDF4D00]();
}

uint64_t sub_2212F4974()
{
  return MEMORY[0x24BDF4D08]();
}

uint64_t sub_2212F4980()
{
  return MEMORY[0x24BDF4D48]();
}

uint64_t sub_2212F498C()
{
  return MEMORY[0x24BDF4D58]();
}

uint64_t sub_2212F4998()
{
  return MEMORY[0x24BDF4D80]();
}

uint64_t sub_2212F49A4()
{
  return MEMORY[0x24BDF4E10]();
}

uint64_t sub_2212F49B0()
{
  return MEMORY[0x24BDF4E28]();
}

uint64_t sub_2212F49BC()
{
  return MEMORY[0x24BDF4E30]();
}

uint64_t sub_2212F49C8()
{
  return MEMORY[0x24BDF4E58]();
}

uint64_t sub_2212F49D4()
{
  return MEMORY[0x24BDF4EC0]();
}

uint64_t sub_2212F49E0()
{
  return MEMORY[0x24BDF4EC8]();
}

uint64_t sub_2212F49EC()
{
  return MEMORY[0x24BDF4ED0]();
}

uint64_t sub_2212F49F8()
{
  return MEMORY[0x24BDF4EF0]();
}

uint64_t sub_2212F4A04()
{
  return MEMORY[0x24BDF4F00]();
}

uint64_t sub_2212F4A10()
{
  return MEMORY[0x24BDF4F18]();
}

uint64_t sub_2212F4A1C()
{
  return MEMORY[0x24BDF4F20]();
}

uint64_t sub_2212F4A28()
{
  return MEMORY[0x24BDF4FC8]();
}

uint64_t sub_2212F4A34()
{
  return MEMORY[0x24BDF4FE0]();
}

uint64_t sub_2212F4A40()
{
  return MEMORY[0x24BDF5010]();
}

uint64_t sub_2212F4A4C()
{
  return MEMORY[0x24BDF5058]();
}

uint64_t sub_2212F4A58()
{
  return MEMORY[0x24BDF51E8]();
}

uint64_t sub_2212F4A64()
{
  return MEMORY[0x24BDF51F0]();
}

uint64_t sub_2212F4A70()
{
  return MEMORY[0x24BDF5258]();
}

uint64_t sub_2212F4A7C()
{
  return MEMORY[0x24BDF5260]();
}

uint64_t sub_2212F4A88()
{
  return MEMORY[0x24BDF5268]();
}

uint64_t sub_2212F4A94()
{
  return MEMORY[0x24BDF53F0]();
}

uint64_t sub_2212F4AA0()
{
  return MEMORY[0x24BDF5418]();
}

uint64_t sub_2212F4AAC()
{
  return MEMORY[0x24BDF5448]();
}

uint64_t sub_2212F4AB8()
{
  return MEMORY[0x24BDF5458]();
}

uint64_t sub_2212F4AC4()
{
  return MEMORY[0x24BDF5478]();
}

uint64_t sub_2212F4AD0()
{
  return MEMORY[0x24BDF5490]();
}

uint64_t sub_2212F4ADC()
{
  return MEMORY[0x24BDF54A0]();
}

uint64_t sub_2212F4AE8()
{
  return MEMORY[0x24BDF54A8]();
}

uint64_t sub_2212F4AF4()
{
  return MEMORY[0x24BDF54B0]();
}

uint64_t sub_2212F4B00()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_2212F4B0C()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_2212F4B18()
{
  return MEMORY[0x24BDE9EF0]();
}

uint64_t sub_2212F4B24()
{
  return MEMORY[0x24BDE9F00]();
}

uint64_t sub_2212F4B30()
{
  return MEMORY[0x24BDE9F10]();
}

uint64_t sub_2212F4B3C()
{
  return MEMORY[0x24BDE9F20]();
}

uint64_t sub_2212F4B48()
{
  return MEMORY[0x24BDE9F30]();
}

uint64_t sub_2212F4B54()
{
  return MEMORY[0x24BDE9F38]();
}

uint64_t sub_2212F4B60()
{
  return MEMORY[0x24BDE9F68]();
}

uint64_t sub_2212F4B6C()
{
  return MEMORY[0x24BDE9F78]();
}

uint64_t sub_2212F4B78()
{
  return MEMORY[0x24BDE9F80]();
}

uint64_t sub_2212F4B84()
{
  return MEMORY[0x24BDE9F88]();
}

uint64_t sub_2212F4B90()
{
  return MEMORY[0x24BDE9F90]();
}

uint64_t sub_2212F4B9C()
{
  return MEMORY[0x24BDE9FB8]();
}

uint64_t sub_2212F4BA8()
{
  return MEMORY[0x24BDE9FC0]();
}

uint64_t sub_2212F4BB4()
{
  return MEMORY[0x24BDE9FD0]();
}

uint64_t sub_2212F4BC0()
{
  return MEMORY[0x24BDE9FF8]();
}

uint64_t sub_2212F4BCC()
{
  return MEMORY[0x24BDEA008]();
}

uint64_t sub_2212F4BD8()
{
  return MEMORY[0x24BDEA010]();
}

uint64_t sub_2212F4BE4()
{
  return MEMORY[0x24BDEA020]();
}

uint64_t sub_2212F4BF0()
{
  return MEMORY[0x24BDEA028]();
}

uint64_t sub_2212F4BFC()
{
  return MEMORY[0x24BDEA038]();
}

uint64_t sub_2212F4C08()
{
  return MEMORY[0x24BDEA070]();
}

uint64_t sub_2212F4C14()
{
  return MEMORY[0x24BDEA098]();
}

uint64_t sub_2212F4C20()
{
  return MEMORY[0x24BDEA0A8]();
}

uint64_t sub_2212F4C2C()
{
  return MEMORY[0x24BDEA0B8]();
}

uint64_t sub_2212F4C38()
{
  return MEMORY[0x24BDEA0C0]();
}

uint64_t sub_2212F4C44()
{
  return MEMORY[0x24BDEA0C8]();
}

uint64_t sub_2212F4C50()
{
  return MEMORY[0x24BDEA0D0]();
}

uint64_t sub_2212F4C5C()
{
  return MEMORY[0x24BDEA0E0]();
}

uint64_t sub_2212F4C68()
{
  return MEMORY[0x24BDEA0E8]();
}

uint64_t sub_2212F4C74()
{
  return MEMORY[0x24BDEA0F8]();
}

uint64_t sub_2212F4C80()
{
  return MEMORY[0x24BDEA100]();
}

uint64_t sub_2212F4C8C()
{
  return MEMORY[0x24BDEA108]();
}

uint64_t sub_2212F4C98()
{
  return MEMORY[0x24BDEA118]();
}

uint64_t sub_2212F4CA4()
{
  return MEMORY[0x24BDEA120]();
}

uint64_t sub_2212F4CB0()
{
  return MEMORY[0x24BDEA130]();
}

uint64_t sub_2212F4CBC()
{
  return MEMORY[0x24BDEA140]();
}

uint64_t sub_2212F4CC8()
{
  return MEMORY[0x24BDEA150]();
}

uint64_t sub_2212F4CD4()
{
  return MEMORY[0x24BDEA160]();
}

uint64_t sub_2212F4CE0()
{
  return MEMORY[0x24BDEA170]();
}

uint64_t sub_2212F4CEC()
{
  return MEMORY[0x24BDEA178]();
}

uint64_t sub_2212F4CF8()
{
  return MEMORY[0x24BDEA188]();
}

uint64_t sub_2212F4D04()
{
  return MEMORY[0x24BDEA190]();
}

uint64_t sub_2212F4D10()
{
  return MEMORY[0x24BDEA198]();
}

uint64_t sub_2212F4D1C()
{
  return MEMORY[0x24BDEA1B0]();
}

uint64_t sub_2212F4D28()
{
  return MEMORY[0x24BDEA1B8]();
}

uint64_t sub_2212F4D34()
{
  return MEMORY[0x24BDEA1C0]();
}

uint64_t sub_2212F4D40()
{
  return MEMORY[0x24BDEA1D8]();
}

uint64_t sub_2212F4D4C()
{
  return MEMORY[0x24BDEA1E0]();
}

uint64_t sub_2212F4D58()
{
  return MEMORY[0x24BDEA200]();
}

uint64_t sub_2212F4D64()
{
  return MEMORY[0x24BDEA210]();
}

uint64_t sub_2212F4D70()
{
  return MEMORY[0x24BDEA218]();
}

uint64_t sub_2212F4D7C()
{
  return MEMORY[0x24BDEA220]();
}

uint64_t sub_2212F4D88()
{
  return MEMORY[0x24BDEA230]();
}

uint64_t sub_2212F4D94()
{
  return MEMORY[0x24BDEA240]();
}

uint64_t sub_2212F4DA0()
{
  return MEMORY[0x24BDEA248]();
}

uint64_t sub_2212F4DAC()
{
  return MEMORY[0x24BDEA250]();
}

uint64_t sub_2212F4DB8()
{
  return MEMORY[0x24BDEA260]();
}

uint64_t sub_2212F4DC4()
{
  return MEMORY[0x24BDEA270]();
}

uint64_t sub_2212F4DD0()
{
  return MEMORY[0x24BDEA278]();
}

uint64_t sub_2212F4DDC()
{
  return MEMORY[0x24BDEA280]();
}

uint64_t sub_2212F4DE8()
{
  return MEMORY[0x24BDEA288]();
}

uint64_t sub_2212F4DF4()
{
  return MEMORY[0x24BDEA290]();
}

uint64_t sub_2212F4E00()
{
  return MEMORY[0x24BDEA298]();
}

uint64_t sub_2212F4E0C()
{
  return MEMORY[0x24BDEA2B8]();
}

uint64_t sub_2212F4E18()
{
  return MEMORY[0x24BDEA2C0]();
}

uint64_t sub_2212F4E24()
{
  return MEMORY[0x24BDEA2C8]();
}

uint64_t sub_2212F4E30()
{
  return MEMORY[0x24BDEA2D0]();
}

uint64_t sub_2212F4E3C()
{
  return MEMORY[0x24BDEA2D8]();
}

uint64_t sub_2212F4E48()
{
  return MEMORY[0x24BDEA2E8]();
}

uint64_t sub_2212F4E54()
{
  return MEMORY[0x24BDEA2F8]();
}

uint64_t sub_2212F4E60()
{
  return MEMORY[0x24BDEA310]();
}

uint64_t sub_2212F4E6C()
{
  return MEMORY[0x24BDEA318]();
}

uint64_t sub_2212F4E78()
{
  return MEMORY[0x24BDEA320]();
}

uint64_t sub_2212F4E84()
{
  return MEMORY[0x24BDEA328]();
}

uint64_t sub_2212F4E90()
{
  return MEMORY[0x24BDEA330]();
}

uint64_t sub_2212F4E9C()
{
  return MEMORY[0x24BDEA338]();
}

uint64_t sub_2212F4EA8()
{
  return MEMORY[0x24BDEA340]();
}

uint64_t sub_2212F4EB4()
{
  return MEMORY[0x24BDEA378]();
}

uint64_t sub_2212F4EC0()
{
  return MEMORY[0x24BDEA388]();
}

uint64_t sub_2212F4ECC()
{
  return MEMORY[0x24BDEA398]();
}

uint64_t sub_2212F4ED8()
{
  return MEMORY[0x24BDEA3A0]();
}

uint64_t sub_2212F4EE4()
{
  return MEMORY[0x24BDEA3A8]();
}

uint64_t sub_2212F4EF0()
{
  return MEMORY[0x24BDEA3B0]();
}

uint64_t sub_2212F4EFC()
{
  return MEMORY[0x24BDEA3B8]();
}

uint64_t sub_2212F4F08()
{
  return MEMORY[0x24BDEA3C8]();
}

uint64_t sub_2212F4F14()
{
  return MEMORY[0x24BDEA3D0]();
}

uint64_t sub_2212F4F20()
{
  return MEMORY[0x24BDEA3D8]();
}

uint64_t sub_2212F4F2C()
{
  return MEMORY[0x24BDEA3F0]();
}

uint64_t sub_2212F4F38()
{
  return MEMORY[0x24BDEA3F8]();
}

uint64_t sub_2212F4F44()
{
  return MEMORY[0x24BDEA400]();
}

uint64_t sub_2212F4F50()
{
  return MEMORY[0x24BDEA408]();
}

uint64_t sub_2212F4F5C()
{
  return MEMORY[0x24BDEA410]();
}

uint64_t sub_2212F4F68()
{
  return MEMORY[0x24BDEA418]();
}

uint64_t sub_2212F4F74()
{
  return MEMORY[0x24BDEA420]();
}

uint64_t sub_2212F4F80()
{
  return MEMORY[0x24BDEA430]();
}

uint64_t sub_2212F4F8C()
{
  return MEMORY[0x24BDEA438]();
}

uint64_t sub_2212F4F98()
{
  return MEMORY[0x24BDEA440]();
}

uint64_t sub_2212F4FA4()
{
  return MEMORY[0x24BDEA448]();
}

uint64_t sub_2212F4FB0()
{
  return MEMORY[0x24BDEA450]();
}

uint64_t sub_2212F4FBC()
{
  return MEMORY[0x24BDEA458]();
}

uint64_t sub_2212F4FC8()
{
  return MEMORY[0x24BDEA468]();
}

uint64_t sub_2212F4FD4()
{
  return MEMORY[0x24BDEA480]();
}

uint64_t sub_2212F4FE0()
{
  return MEMORY[0x24BDEA490]();
}

uint64_t sub_2212F4FEC()
{
  return MEMORY[0x24BDEA4A0]();
}

uint64_t sub_2212F4FF8()
{
  return MEMORY[0x24BDEA4B8]();
}

uint64_t sub_2212F5004()
{
  return MEMORY[0x24BDEA4C8]();
}

uint64_t sub_2212F5010()
{
  return MEMORY[0x24BDEA4D0]();
}

uint64_t sub_2212F501C()
{
  return MEMORY[0x24BDEA4D8]();
}

uint64_t sub_2212F5028()
{
  return MEMORY[0x24BDEA4E0]();
}

uint64_t sub_2212F5034()
{
  return MEMORY[0x24BDEA4F8]();
}

uint64_t sub_2212F5040()
{
  return MEMORY[0x24BDEA500]();
}

uint64_t sub_2212F504C()
{
  return MEMORY[0x24BDEA508]();
}

uint64_t sub_2212F5058()
{
  return MEMORY[0x24BDEA510]();
}

uint64_t sub_2212F5064()
{
  return MEMORY[0x24BDEA538]();
}

uint64_t sub_2212F5070()
{
  return MEMORY[0x24BDEA540]();
}

uint64_t sub_2212F507C()
{
  return MEMORY[0x24BDEA548]();
}

uint64_t sub_2212F5088()
{
  return MEMORY[0x24BDEA550]();
}

uint64_t sub_2212F5094()
{
  return MEMORY[0x24BDEA558]();
}

uint64_t sub_2212F50A0()
{
  return MEMORY[0x24BDEA560]();
}

uint64_t sub_2212F50AC()
{
  return MEMORY[0x24BDEA568]();
}

uint64_t sub_2212F50B8()
{
  return MEMORY[0x24BDEA570]();
}

uint64_t sub_2212F50C4()
{
  return MEMORY[0x24BDEA578]();
}

uint64_t sub_2212F50D0()
{
  return MEMORY[0x24BDEA588]();
}

uint64_t sub_2212F50DC()
{
  return MEMORY[0x24BDEA5A8]();
}

uint64_t sub_2212F50E8()
{
  return MEMORY[0x24BDEA5B0]();
}

uint64_t sub_2212F50F4()
{
  return MEMORY[0x24BDEA5D8]();
}

uint64_t sub_2212F5100()
{
  return MEMORY[0x24BDEA5E0]();
}

uint64_t sub_2212F510C()
{
  return MEMORY[0x24BDEA5E8]();
}

uint64_t sub_2212F5118()
{
  return MEMORY[0x24BDEA5F0]();
}

uint64_t sub_2212F5124()
{
  return MEMORY[0x24BDEA5F8]();
}

uint64_t _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV12PickerOptionV2idSSvg_0()
{
  return MEMORY[0x24BDEA618]();
}

uint64_t sub_2212F513C()
{
  return MEMORY[0x24BDEA620]();
}

uint64_t sub_2212F5148()
{
  return MEMORY[0x24BDEA628]();
}

uint64_t sub_2212F5154()
{
  return MEMORY[0x24BDEA630]();
}

uint64_t sub_2212F5160()
{
  return MEMORY[0x24BDEA640]();
}

uint64_t sub_2212F516C()
{
  return MEMORY[0x24BDEA648]();
}

uint64_t sub_2212F5178()
{
  return MEMORY[0x24BDEA650]();
}

uint64_t sub_2212F5184()
{
  return MEMORY[0x24BDEA658]();
}

uint64_t sub_2212F5190()
{
  return MEMORY[0x24BDEA660]();
}

uint64_t sub_2212F519C()
{
  return MEMORY[0x24BDEA670]();
}

uint64_t sub_2212F51A8()
{
  return MEMORY[0x24BDEA680]();
}

uint64_t sub_2212F51B4()
{
  return MEMORY[0x24BDEA690]();
}

uint64_t sub_2212F51C0()
{
  return MEMORY[0x24BDC62A8]();
}

uint64_t sub_2212F51CC()
{
  return MEMORY[0x24BDC62B0]();
}

uint64_t sub_2212F51D8()
{
  return MEMORY[0x24BDC62C8]();
}

uint64_t sub_2212F51E4()
{
  return MEMORY[0x24BDC6B58]();
}

uint64_t sub_2212F51F0()
{
  return MEMORY[0x24BDC6B90]();
}

uint64_t sub_2212F51FC()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_2212F5208()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_2212F5214()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_2212F5220()
{
  return MEMORY[0x24BEE0548]();
}

uint64_t sub_2212F522C()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_2212F5238()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_2212F5244()
{
  return MEMORY[0x24BEE0620]();
}

uint64_t sub_2212F5250()
{
  return MEMORY[0x24BEE06A0]();
}

uint64_t sub_2212F525C()
{
  return MEMORY[0x24BEE0740]();
}

uint64_t sub_2212F5268()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_2212F5274()
{
  return MEMORY[0x24BEE07D8]();
}

uint64_t sub_2212F5280()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_2212F528C()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_2212F5298()
{
  return MEMORY[0x24BEE0830]();
}

uint64_t sub_2212F52A4()
{
  return MEMORY[0x24BEE0838]();
}

uint64_t sub_2212F52B0()
{
  return MEMORY[0x24BEE0840]();
}

uint64_t sub_2212F52BC()
{
  return MEMORY[0x24BEE0868]();
}

uint64_t sub_2212F52C8()
{
  return MEMORY[0x24BEE08B8]();
}

uint64_t sub_2212F52D4()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_2212F52E0()
{
  return MEMORY[0x24BDCF8D8]();
}

uint64_t sub_2212F52EC()
{
  return MEMORY[0x24BDCF908]();
}

uint64_t sub_2212F52F8()
{
  return MEMORY[0x24BDCF910]();
}

uint64_t sub_2212F5304()
{
  return MEMORY[0x24BDCF920]();
}

uint64_t sub_2212F5310()
{
  return MEMORY[0x24BDCF930]();
}

uint64_t sub_2212F531C()
{
  return MEMORY[0x24BDCF938]();
}

uint64_t sub_2212F5328()
{
  return MEMORY[0x24BDCF948]();
}

uint64_t sub_2212F5334()
{
  return MEMORY[0x24BDCF968]();
}

uint64_t sub_2212F5340()
{
  return MEMORY[0x24BDCF978]();
}

uint64_t sub_2212F534C()
{
  return MEMORY[0x24BDCF990]();
}

uint64_t sub_2212F5358()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_2212F5364()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_2212F5370()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_2212F537C()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_2212F5388()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_2212F5394()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_2212F53A0()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_2212F53AC()
{
  return MEMORY[0x24BDCFB28]();
}

uint64_t sub_2212F53B8()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_2212F53C4()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_2212F53D0()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_2212F53DC()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2212F53E8()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_2212F53F4()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_2212F5400()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_2212F540C()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2212F5418()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_2212F5424()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2212F5430()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_2212F543C()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_2212F5448()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_2212F5454()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_2212F5460()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_2212F546C()
{
  return MEMORY[0x24BEE0CE8]();
}

uint64_t sub_2212F5478()
{
  return MEMORY[0x24BEE0D58]();
}

uint64_t sub_2212F5484()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_2212F5490()
{
  return MEMORY[0x24BEE0DC8]();
}

uint64_t sub_2212F549C()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_2212F54A8()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_2212F54B4()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_2212F54C0()
{
  return MEMORY[0x24BEE0E40]();
}

uint64_t sub_2212F54CC()
{
  return MEMORY[0x24BEE0E50]();
}

uint64_t sub_2212F54D8()
{
  return MEMORY[0x24BEE0E60]();
}

uint64_t sub_2212F54E4()
{
  return MEMORY[0x24BEE0E68]();
}

uint64_t sub_2212F54F0()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_2212F54FC()
{
  return MEMORY[0x24BEE0E90]();
}

uint64_t sub_2212F5508()
{
  return MEMORY[0x24BEE0EC0]();
}

uint64_t sub_2212F5514()
{
  return MEMORY[0x24BEE0EE8]();
}

uint64_t sub_2212F5520()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_2212F552C()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_2212F5538()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_2212F5544()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_2212F5550()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_2212F555C()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_2212F5568()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_2212F5574()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_2212F5580()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_2212F558C()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_2212F5598()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_2212F55A4()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_2212F55B0()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_2212F55BC()
{
  return MEMORY[0x24BEE1288]();
}

uint64_t sub_2212F55C8()
{
  return MEMORY[0x24BDCFC08]();
}

uint64_t sub_2212F55D4()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_2212F55E0()
{
  return MEMORY[0x24BEE68C8]();
}

uint64_t sub_2212F55EC()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_2212F55F8()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_2212F5604()
{
  return MEMORY[0x24BEE6938]();
}

uint64_t sub_2212F5610()
{
  return MEMORY[0x24BEE6940]();
}

uint64_t sub_2212F561C()
{
  return MEMORY[0x24BEE6970]();
}

uint64_t sub_2212F5628()
{
  return MEMORY[0x24BEE6980]();
}

uint64_t sub_2212F5634()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_2212F5640()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_2212F564C()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_2212F5658()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_2212F5664()
{
  return MEMORY[0x24BEE6B38]();
}

uint64_t sub_2212F5670()
{
  return MEMORY[0x24BEE6C08]();
}

uint64_t sub_2212F567C()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_2212F5688()
{
  return MEMORY[0x24BEE15E0]();
}

uint64_t sub_2212F5694()
{
  return MEMORY[0x24BEE17F8]();
}

uint64_t sub_2212F56A0()
{
  return MEMORY[0x24BEE1870]();
}

uint64_t sub_2212F56AC()
{
  return MEMORY[0x24BEE1888]();
}

uint64_t sub_2212F56B8()
{
  return MEMORY[0x24BEE1890]();
}

uint64_t sub_2212F56C4()
{
  return MEMORY[0x24BEE1898]();
}

uint64_t sub_2212F56D0()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_2212F56DC()
{
  return MEMORY[0x24BEE18B8]();
}

uint64_t sub_2212F56E8()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_2212F56F4()
{
  return MEMORY[0x24BEE18E0]();
}

uint64_t sub_2212F5700()
{
  return MEMORY[0x24BEE18F8]();
}

uint64_t sub_2212F570C()
{
  return MEMORY[0x24BEE1900]();
}

uint64_t sub_2212F5718()
{
  return MEMORY[0x24BEE1908]();
}

uint64_t sub_2212F5724()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_2212F5730()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_2212F573C()
{
  return MEMORY[0x24BEE1950]();
}

uint64_t sub_2212F5748()
{
  return MEMORY[0x24BEE1958]();
}

uint64_t sub_2212F5754()
{
  return MEMORY[0x24BEE1960]();
}

uint64_t sub_2212F5760()
{
  return MEMORY[0x24BEE1968]();
}

uint64_t sub_2212F576C()
{
  return MEMORY[0x24BEE1970]();
}

uint64_t sub_2212F5778()
{
  return MEMORY[0x24BEE1980]();
}

uint64_t sub_2212F5784()
{
  return MEMORY[0x24BEE19B8]();
}

uint64_t sub_2212F5790()
{
  return MEMORY[0x24BEE19D0]();
}

uint64_t sub_2212F579C()
{
  return MEMORY[0x24BEE1A20]();
}

uint64_t sub_2212F57A8()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_2212F57B4()
{
  return MEMORY[0x24BEE1B68]();
}

uint64_t sub_2212F57C0()
{
  return MEMORY[0x24BDBD758]();
}

uint64_t sub_2212F57CC()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_2212F57D8()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_2212F57E4()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_2212F57F0()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_2212F57FC()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_2212F5808()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_2212F5814()
{
  return MEMORY[0x24BDF5540]();
}

uint64_t sub_2212F5820()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_2212F582C()
{
  return MEMORY[0x24BDD02F8]();
}

uint64_t sub_2212F5838()
{
  return MEMORY[0x24BDD0318]();
}

uint64_t sub_2212F5844()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_2212F5850()
{
  return MEMORY[0x24BEE1C80]();
}

uint64_t sub_2212F585C()
{
  return MEMORY[0x24BEE1DA8]();
}

uint64_t sub_2212F5868()
{
  return MEMORY[0x24BEE1DF0]();
}

uint64_t sub_2212F5874()
{
  return MEMORY[0x24BEE1E50]();
}

uint64_t sub_2212F5880()
{
  return MEMORY[0x24BEE1E58]();
}

uint64_t sub_2212F588C()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_2212F5898()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_2212F58A4()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_2212F58B0()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_2212F58BC()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_2212F58C8()
{
  return MEMORY[0x24BEE2200]();
}

uint64_t sub_2212F58D4()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_2212F58E0()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_2212F58EC()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_2212F58F8()
{
  return MEMORY[0x24BEE2378]();
}

uint64_t sub_2212F5904()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_2212F5910()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t _s17_StoreKit_SwiftUI012SubscriptionA25ControlStyleConfigurationV7SectionV2IDV4hash4intoys6HasherVz_tF_0()
{
  return MEMORY[0x24BEE23B8]();
}

uint64_t sub_2212F5928()
{
  return MEMORY[0x24BEE23C0]();
}

uint64_t sub_2212F5934()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_2212F5940()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_2212F594C()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_2212F5958()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_2212F5964()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_2212F5970()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_2212F597C()
{
  return MEMORY[0x24BEE2588]();
}

uint64_t sub_2212F5988()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t sub_2212F5994()
{
  return MEMORY[0x24BEE2610]();
}

uint64_t sub_2212F59A0()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_2212F59AC()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_2212F59B8()
{
  return MEMORY[0x24BEE2700]();
}

uint64_t sub_2212F59C4()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_2212F59D0()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_2212F59DC()
{
  return MEMORY[0x24BEE28B8]();
}

uint64_t sub_2212F59E8()
{
  return MEMORY[0x24BEE2928]();
}

uint64_t sub_2212F59F4()
{
  return MEMORY[0x24BEE2940]();
}

uint64_t sub_2212F5A00()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_2212F5A0C()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_2212F5A18()
{
  return MEMORY[0x24BEE29E8]();
}

uint64_t sub_2212F5A24()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_2212F5A30()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_2212F5A3C()
{
  return MEMORY[0x24BEE6DB0]();
}

uint64_t sub_2212F5A48()
{
  return MEMORY[0x24BEE6DB8]();
}

uint64_t sub_2212F5A54()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_2212F5A60()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_2212F5A6C()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_2212F5A78()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_2212F5A84()
{
  return MEMORY[0x24BEE2B20]();
}

uint64_t sub_2212F5A90()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_2212F5A9C()
{
  return MEMORY[0x24BEE2C00]();
}

uint64_t sub_2212F5AA8()
{
  return MEMORY[0x24BEE2E58]();
}

uint64_t sub_2212F5AB4()
{
  return MEMORY[0x24BEE2E68]();
}

uint64_t sub_2212F5AC0()
{
  return MEMORY[0x24BEE2E70]();
}

uint64_t sub_2212F5ACC()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_2212F5AD8()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_2212F5AE4()
{
  return MEMORY[0x24BEE2F68]();
}

uint64_t sub_2212F5AF0()
{
  return MEMORY[0x24BEE2FD8]();
}

uint64_t sub_2212F5AFC()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_2212F5B08()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_2212F5B14()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_2212F5B20()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_2212F5B2C()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_2212F5B38()
{
  return MEMORY[0x24BEE6F10]();
}

uint64_t sub_2212F5B44()
{
  return MEMORY[0x24BEE6F18]();
}

uint64_t sub_2212F5B50()
{
  return MEMORY[0x24BEE6F20]();
}

uint64_t sub_2212F5B5C()
{
  return MEMORY[0x24BEE6F28]();
}

uint64_t sub_2212F5B68()
{
  return MEMORY[0x24BEE6F38]();
}

uint64_t sub_2212F5B74()
{
  return MEMORY[0x24BEE6F50]();
}

uint64_t sub_2212F5B80()
{
  return MEMORY[0x24BEE3168]();
}

uint64_t sub_2212F5B8C()
{
  return MEMORY[0x24BEE3178]();
}

uint64_t sub_2212F5B98()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_2212F5BA4()
{
  return MEMORY[0x24BEE3280]();
}

uint64_t sub_2212F5BB0()
{
  return MEMORY[0x24BEE3288]();
}

uint64_t sub_2212F5BBC()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_2212F5BC8()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_2212F5BD4()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_2212F5BE0()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_2212F5BEC()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_2212F5BF8()
{
  return MEMORY[0x24BEE3348]();
}

uint64_t sub_2212F5C04()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_2212F5C10()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_2212F5C1C()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_2212F5C28()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_2212F5C34()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_2212F5C40()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_2212F5C4C()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_2212F5C58()
{
  return MEMORY[0x24BEE3490]();
}

uint64_t sub_2212F5C64()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_2212F5C70()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_2212F5C7C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_2212F5C88()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_2212F5C94()
{
  return MEMORY[0x24BEE3558]();
}

uint64_t sub_2212F5CA0()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_2212F5CAC()
{
  return MEMORY[0x24BEE3880]();
}

uint64_t sub_2212F5CB8()
{
  return MEMORY[0x24BEE38A0]();
}

uint64_t sub_2212F5CC4()
{
  return MEMORY[0x24BEE39E0]();
}

uint64_t sub_2212F5CD0()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_2212F5CDC()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2212F5CE8()
{
  return MEMORY[0x24BEE7098]();
}

uint64_t sub_2212F5CF4()
{
  return MEMORY[0x24BEE3A58]();
}

uint64_t sub_2212F5D00()
{
  return MEMORY[0x24BEE3D50]();
}

uint64_t sub_2212F5D0C()
{
  return MEMORY[0x24BEE3DC0]();
}

uint64_t sub_2212F5D18()
{
  return MEMORY[0x24BEE3DD8]();
}

uint64_t sub_2212F5D24()
{
  return MEMORY[0x24BEE3E18]();
}

uint64_t sub_2212F5D30()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_2212F5D3C()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_2212F5D48()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_2212F5D54()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_2212F5D60()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_2212F5D6C()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_2212F5D78()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_2212F5D84()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_2212F5D90()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_2212F5D9C()
{
  return MEMORY[0x24BEE3F18]();
}

uint64_t sub_2212F5DA8()
{
  return MEMORY[0x24BDC5130]();
}

uint64_t sub_2212F5DB4()
{
  return MEMORY[0x24BEE41D8]();
}

uint64_t sub_2212F5DC0()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_2212F5DCC()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_2212F5DD8()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_2212F5DE4()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_2212F5DF0()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_2212F5DFC()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_2212F5E08()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2212F5E14()
{
  return MEMORY[0x24BEE45E8]();
}

uint64_t sub_2212F5E20()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_2212F5E2C()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_2212F5E38()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_2212F5E44()
{
  return MEMORY[0x24BEE48A0]();
}

uint64_t sub_2212F5E50()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_2212F5E5C()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_2212F5E68()
{
  return MEMORY[0x24BEE4A18]();
}

uint64_t sub_2212F5E74()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x24BE1A1C8]();
}

CGColorRef CGColorCreateCopyByMatchingToColorSpace(CGColorSpaceRef a1, CGColorRenderingIntent intent, CGColorRef color, CFDictionaryRef options)
{
  return (CGColorRef)MEMORY[0x24BDBDA88](a1, *(_QWORD *)&intent, color, options);
}

CGFloat CGColorGetAlpha(CGColorRef color)
{
  CGFloat result;

  MEMORY[0x24BDBDAE8](color);
  return result;
}

CGColorSpaceRef CGColorGetColorSpace(CGColorRef color)
{
  return (CGColorSpaceRef)MEMORY[0x24BDBDAF0](color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x24BDBDB88]();
}

CGColorSpaceModel CGColorSpaceGetModel(CGColorSpaceRef space)
{
  return MEMORY[0x24BDBDC10](space);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFF8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF000]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF008]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF010]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF018]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF020]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

uint64_t dyld_program_minos_at_least()
{
  return MEMORY[0x24BDAE140]();
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x24BDAE148]();
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x24BEDD038](location);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x24BEDD0E8](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x24BEDD420](location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

long double pow(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAF688](__x, __y);
  return result;
}

float powf(float a1, float a2)
{
  float result;

  MEMORY[0x24BDAF690](a1, a2);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x24BEE7198]();
}

uint64_t swift_asyncLet_finish()
{
  return MEMORY[0x24BEE71A0]();
}

uint64_t swift_asyncLet_get()
{
  return MEMORY[0x24BEE71A8]();
}

uint64_t swift_asyncLet_get_throwing()
{
  return MEMORY[0x24BEE71B0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x24BEE71C8]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x24BEE4C50]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x24BEE4D60]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x24BEE4DC8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x24BEE4DF0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x24BEE4E00]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x24BEE4E50]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_readAtKeyPath()
{
  return MEMORY[0x24BEE4ED8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setAtReferenceWritableKeyPath()
{
  return MEMORY[0x24BEE4F20]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x24BEE4F28]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

