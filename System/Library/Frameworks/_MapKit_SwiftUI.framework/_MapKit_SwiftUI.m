id UserLocation.location.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void *UserLocation.heading.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

_QWORD *initializeBufferWithCopyOfBuffer for UserLocation(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for UserLocation(id *a1)
{

}

uint64_t assignWithCopy for UserLocation(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t assignWithTake for UserLocation(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for UserLocation(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UserLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserLocation()
{
  return &type metadata for UserLocation;
}

void type metadata accessor for EmphasisStyle(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287930);
}

void type metadata accessor for ElevationStyle(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287938);
}

void type metadata accessor for MKUserTrackingMode(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287940);
}

void type metadata accessor for FeatureType(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287948);
}

void type metadata accessor for MKLookAroundBadgePosition(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287950);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287958);
}

void type metadata accessor for Subgraph(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287960);
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287968);
}

void type metadata accessor for MKPointOfInterestCategory(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287970);
}

void type metadata accessor for MKOverlayLevel(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287978);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for MKMapRect(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287980);
}

void type metadata accessor for MKCoordinateRegion(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287988);
}

uint64_t sub_21C521A20()
{
  return sub_21C521E50((unint64_t *)&qword_255287990, (uint64_t (*)(uint64_t))type metadata accessor for MKOverlayLevel, (uint64_t)&unk_21C5E4D84);
}

uint64_t sub_21C521A4C(uint64_t a1, uint64_t a2)
{
  return sub_21C521F78(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_21C521A58(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_21C5E394C();
  *a2 = 0;
  return result;
}

uint64_t sub_21C521ACC(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_21C5E3958();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_21C521B48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_21C5E3964();
  v2 = sub_21C5E3940();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_21C521B88()
{
  return sub_21C5E3E50();
}

uint64_t sub_21C521B90(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  int v4;
  char v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x22077F37C](a1, &v6);
  v4 = v6;
  v5 = v7;
  if (v7)
    v4 = 0;
  *(_DWORD *)a2 = v4;
  *(_BYTE *)(a2 + 4) = v5;
  return result;
}

uint64_t sub_21C521BE0(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = sub_21C5E3E68();
  *(_DWORD *)a2 = 0;
  *(_BYTE *)(a2 + 4) = 1;
  return v3 & 1;
}

uint64_t sub_21C521C34@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = sub_21C5E3E74();
  *a1 = result;
  return result;
}

_QWORD *sub_21C521C58@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_21C521C68(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_21C521C74()
{
  sub_21C5E3E14();
  sub_21C5E3E20();
  return sub_21C5E3E44();
}

uint64_t sub_21C521CB8()
{
  return sub_21C5E3E20();
}

uint64_t sub_21C521CE0()
{
  sub_21C5E3E14();
  sub_21C5E3E20();
  return sub_21C5E3E44();
}

BOOL sub_21C521D20(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21C521D34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21C5E3940();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_21C521D78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21C5E3964();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_21C521DA0()
{
  sub_21C521E50(&qword_255287A70, (uint64_t (*)(uint64_t))type metadata accessor for MKPointOfInterestCategory, (uint64_t)&unk_21C5E4EB4);
  sub_21C521E50(&qword_255287A78, (uint64_t (*)(uint64_t))type metadata accessor for MKPointOfInterestCategory, (uint64_t)&unk_21C5E4E54);
  return sub_21C5E3D9C();
}

uint64_t sub_21C521E24()
{
  return sub_21C521E50(&qword_255287998, (uint64_t (*)(uint64_t))type metadata accessor for MKPointOfInterestCategory, (uint64_t)&unk_21C5E4E18);
}

uint64_t sub_21C521E50(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x22077F9A0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21C521E90()
{
  return sub_21C521E50(&qword_2552879A0, (uint64_t (*)(uint64_t))type metadata accessor for MKPointOfInterestCategory, (uint64_t)&unk_21C5E4DEC);
}

_DWORD *sub_21C521EBC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_21C521ECC(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_21C521ED8()
{
  sub_21C521E50(&qword_255287AB0, (uint64_t (*)(uint64_t))type metadata accessor for AnyAttribute, MEMORY[0x24BE096A8]);
  sub_21C521E50(&qword_255287AB8, (uint64_t (*)(uint64_t))type metadata accessor for AnyAttribute, (uint64_t)&unk_21C5E50C8);
  return sub_21C5E3D9C();
}

uint64_t sub_21C521F6C(uint64_t a1, uint64_t a2)
{
  return sub_21C521F78(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_21C521F78(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_21C5E3964();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_21C521FB4()
{
  sub_21C5E3964();
  sub_21C5E397C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C521FF4()
{
  uint64_t v0;

  sub_21C5E3964();
  sub_21C5E3E14();
  sub_21C5E397C();
  v0 = sub_21C5E3E44();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_21C522064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_21C5E3964();
  v2 = v1;
  if (v0 == sub_21C5E3964() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_21C5E3DCC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_21C5220EC()
{
  return sub_21C521E50(&qword_2552879A8, (uint64_t (*)(uint64_t))type metadata accessor for MKPointOfInterestCategory, (uint64_t)&unk_21C5E4E88);
}

void type metadata accessor for MKCoordinateSpan(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287A80);
}

void type metadata accessor for MKMapSize(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287A88);
}

uint64_t getEnumTagSinglePayload for MapContentList.UpdateToken(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MapContentList.UpdateToken(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKMapPoint(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287A90);
}

void type metadata accessor for AnyAttribute(uint64_t a1)
{
  sub_21C522298(a1, &qword_255287A98);
}

uint64_t sub_21C5221B0()
{
  return sub_21C521E50(&qword_255287AA0, (uint64_t (*)(uint64_t))type metadata accessor for AnyAttribute, (uint64_t)&unk_21C5E508C);
}

uint64_t sub_21C5221DC()
{
  return sub_21C521E50(&qword_255287AA8, (uint64_t (*)(uint64_t))type metadata accessor for AnyAttribute, (uint64_t)&unk_21C5E5060);
}

uint64_t initializeBufferWithCopyOfBuffer for MapContentList.ID.Component(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_21C522238(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_21C522258(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_21C522298(a1, (unint64_t *)&unk_255287AC0);
}

void sub_21C522298(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void static PointOfInterestCategories.all.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEE4AF8];
  *a1 = 0;
  a1[1] = v1;
}

uint64_t static PointOfInterestCategories.excluding(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = a1;
  return swift_bridgeObjectRetain();
}

uint64_t static PointOfInterestCategories.including(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  a2[1] = 0;
  return swift_bridgeObjectRetain();
}

void static PointOfInterestCategories.excludingAll.getter(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = 0;
}

uint64_t PointOfInterestCategories.init(arrayLiteral:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  a2[1] = 0;
  return result;
}

uint64_t sub_21C522338@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  a2[1] = 0;
  return result;
}

uint64_t destroy for PointOfInterestCategories()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s15_MapKit_SwiftUI25PointOfInterestCategoriesVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PointOfInterestCategories(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for PointOfInterestCategories(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PointOfInterestCategories()
{
  return &type metadata for PointOfInterestCategories;
}

void sub_21C522450(_WORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_21C522460()
{
  unsigned __int8 v1;
  unsigned __int8 v2;

  sub_21C5228D4();
  sub_21C5E3298();
  return v1 | (v2 << 8);
}

uint64_t View.mapAttribution(showsLegal:logoVisibility:)()
{
  swift_getKeyPath();
  sub_21C5E3664();
  return swift_release();
}

uint64_t sub_21C522520@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;
  char v4;

  sub_21C5228D4();
  result = sub_21C5E3298();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_21C522574@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;
  char v4;

  sub_21C5228D4();
  result = sub_21C5E3298();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_21C5225C8()
{
  sub_21C5228D4();
  return sub_21C5E32A4();
}

uint64_t sub_21C522618()
{
  sub_21C5228D4();
  return sub_21C5E32A4();
}

uint64_t sub_21C522668(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255287B30);
  v2 = sub_21C5E30A0();
  v4[0] = v1;
  v4[1] = sub_21C52270C();
  return MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v2, v4);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22077F994](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_21C52270C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255287B38;
  if (!qword_255287B38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255287B30);
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_255287B38);
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MapAttribution(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MapAttribution(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C522854 + 4 * byte_21C5E51B5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_21C522888 + 4 * asc_21C5E51B0[v4]))();
}

uint64_t sub_21C522888(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_21C522890(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x21C522898);
  return result;
}

uint64_t sub_21C5228A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x21C5228ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C5228B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_21C5228B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MapAttribution()
{
  return &type metadata for MapAttribution;
}

unint64_t sub_21C5228D4()
{
  unint64_t result;

  result = qword_255287B40;
  if (!qword_255287B40)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E521C, &type metadata for DefaultMapAttributionKey);
    atomic_store(result, (unint64_t *)&qword_255287B40);
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultMapAttributionKey()
{
  return &type metadata for DefaultMapAttributionKey;
}

uint64_t sub_21C52292C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v21[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_255287B48);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v21 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255287BA8);
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for _MapContentInputs(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_21C5E3508();
  v15 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C5E3514();
  sub_21C522EFC(a1, (uint64_t)v14);
  result = AGTypeGetKind();
  if ((result - 6) < 0xFFFFFFFC)
  {
    __break(1u);
  }
  else
  {
    v21[0] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255287BB0);
    sub_21C524DA4();
    sub_21C5E32F8();
    sub_21C52292C(v11, v14);
    sub_21C52335C((uint64_t)v8, (uint64_t)v6);
    v19 = sub_21C5E355C();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v6, 1, v19) == 1)
    {
      sub_21C524980((uint64_t)v8, &qword_255287B48);
      (*(void (**)(char *, _QWORD))(v23 + 8))(v11, v21[0]);
      sub_21C5233A4((uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v22);
      return sub_21C524980((uint64_t)v6, &qword_255287B48);
    }
    else
    {
      sub_21C5E3550();
      sub_21C524980((uint64_t)v8, &qword_255287B48);
      (*(void (**)(char *, _QWORD))(v23 + 8))(v11, v21[0]);
      sub_21C5233A4((uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v22);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v19);
    }
  }
  return result;
}

uint64_t static MapContent._makeMapContent(content:inputs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t AssociatedConformanceWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v29 = a2;
  v32 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255287B48);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v28 - v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = sub_21C5E2EC0();
  v33 = *(_QWORD *)(v15 - 8);
  v34 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v28 - v16;
  v18 = type metadata accessor for _MapContentInputs(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_21C5E3508();
  v30 = *(_QWORD *)(v21 - 8);
  v31 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C5E3514();
  sub_21C522EFC(v29, (uint64_t)v20);
  v29 = a1;
  sub_21C5232B4((uint64_t)v17, (uint64_t)v13, a1, (uint64_t)v20, (uint64_t)v23, a3, a4);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v17, v20, AssociatedTypeWitness, AssociatedConformanceWitness);
  sub_21C52335C((uint64_t)v13, (uint64_t)v11);
  v25 = sub_21C5E355C();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v11, 1, v25) == 1)
  {
    sub_21C524980((uint64_t)v13, &qword_255287B48);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v34);
    sub_21C5233A4((uint64_t)v20);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v31);
    return sub_21C524980((uint64_t)v11, &qword_255287B48);
  }
  else
  {
    sub_21C5E3550();
    sub_21C524980((uint64_t)v13, &qword_255287B48);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v34);
    sub_21C5233A4((uint64_t)v20);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v25);
  }
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22077F988]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for _MapContentInputs(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255287B50);
}

uint64_t sub_21C522EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _MapContentInputs(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C522F40(uint64_t a1)
{
  return static MapContent._mapContentCount(inputs:)(a1);
}

uint64_t static MapContent._mapContentCount(inputs:)(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(a1, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_21C522FE4()
{
  type metadata accessor for _MapContentInputs(0);
  return sub_21C5E3460();
}

uint64_t sub_21C523030()
{
  return sub_21C523058((void (*)(uint64_t))sub_21C524ACC);
}

uint64_t sub_21C523044()
{
  return sub_21C523058((void (*)(uint64_t))sub_21C524A88);
}

uint64_t sub_21C523058(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  void (*v15)(unsigned int *, uint64_t);
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255287B90);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255287B98);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v9 = (unsigned int *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v16 - v11;
  a1(v10);
  sub_21C5E34A8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_21C524980((uint64_t)v4, &qword_255287B90);
    return *MEMORY[0x24BE096C0];
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v4, v5);
  result = (*(uint64_t (**)(unsigned int *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  if (v7 == 4)
  {
    v13 = *v9;
    v15 = *(void (**)(unsigned int *, uint64_t))(v6 + 8);
    v15(v9, v5);
    v15((unsigned int *)v12, v5);
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_21C5231D8()
{
  return sub_21C523058((void (*)(uint64_t))sub_21C524E34);
}

uint64_t sub_21C5231EC()
{
  return sub_21C523058((void (*)(uint64_t))sub_21C52493C);
}

uint64_t sub_21C523200()
{
  return sub_21C523058((void (*)(uint64_t))sub_21C524DF0);
}

uint64_t sub_21C523214()
{
  return sub_21C523058((void (*)(uint64_t))sub_21C524A44);
}

uint64_t sub_21C523228()
{
  return sub_21C523058((void (*)(uint64_t))sub_21C524A00);
}

uint64_t sub_21C52323C()
{
  return sub_21C523058((void (*)(uint64_t))sub_21C5249BC);
}

uint64_t sub_21C523250@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  int v5;

  v5 = a1;
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_255287B98);
  v4 = *(_QWORD *)(result - 8);
  if (*(_QWORD *)(v4 + 64) == 4)
    return (*(uint64_t (**)(uint64_t, int *, uint64_t))(v4 + 16))(a2, &v5, result);
  __break(1u);
  return result;
}

uint64_t sub_21C5232B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  result = AGTypeGetKind();
  if ((result - 6) < 0xFFFFFFFC)
  {
    __break(1u);
  }
  else
  {
    v11 = type metadata accessor for MapContentBodyAccessor(0, a6, a7, v10);
    MEMORY[0x22077F9A0](&unk_21C5E5434, v11);
    return sub_21C5E32F8();
  }
  return result;
}

uint64_t sub_21C52335C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255287B48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C5233A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _MapContentInputs(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21C5233E0(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if ((a2 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](result);
    v4 = type metadata accessor for MapContentBodyAccessor(0, v2, v3, v3);
    MEMORY[0x22077F9A0](&unk_21C5E5434, v4);
    return sub_21C5E32EC();
  }
  return result;
}

uint64_t sub_21C523470(uint64_t result, char a2)
{
  return sub_21C5233E0(result, a2);
}

uint64_t static Never._mapContentCount(inputs:)()
{
  return 0;
}

void sub_21C523488()
{
  sub_21C5E3DFC();
  __break(1u);
}

uint64_t sub_21C52349C()
{
  return 0;
}

void sub_21C5234B0()
{
  sub_21C5E3D48();
  __break(1u);
}

uint64_t _callVisitMapContentType2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a1 + 16) + 8))(a3, a3, a4, *(_QWORD *)(a1 + 8));
}

uint64_t sub_21C523534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[4];

  v6[3] = *MEMORY[0x24BDAC8D0];
  v6[0] = a1;
  v6[1] = a4;
  v6[2] = a5;
  return _callVisitMapContentType1((uint64_t)v6, a2, a3);
}

void sub_21C523588()
{
  qword_255293A30 = MEMORY[0x24BEE4B00];
}

uint64_t sub_21C52359C()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  int IndirectAttribute2;
  _BYTE v13[12];
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = sub_21C5E2EC0();
  v2 = sub_21C5E3BB0();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v13[-v4];
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v3);
  v8 = &v13[-v7];
  sub_21C5E2F8C();
  v15 = AssociatedTypeWitness;
  v9 = sub_21C5E2DB8();
  sub_21C52951C((uint64_t)v8, (uint64_t)sub_21C524BBC, (uint64_t)v14, AssociatedTypeWitness, MEMORY[0x24BEE4078], v9, MEMORY[0x24BEE40A8], v10);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  IndirectAttribute2 = AGGraphCreateIndirectAttribute2();
  sub_21C52BAE0(IndirectAttribute2, (uint64_t)v5);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v5, 0, 1, v1);
  return sub_21C5E34B4();
}

uint64_t sub_21C52375C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v10;

  swift_getAssociatedTypeWitness();
  v0 = sub_21C5E2EC0();
  v1 = sub_21C5E3BB0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v10 - v4;
  v6 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v8 = (unsigned int *)((char *)&v10 - v7);
  sub_21C5E34A8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v0) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(unsigned int *, char *, uint64_t))(v6 + 32))(v8, v5, v0);
  sub_21C52BB38(v8);
  type metadata accessor for _MapContentOutputs.SetDependency(0);
  AGGraphSetIndirectDependency();
  return (*(uint64_t (**)(unsigned int *, uint64_t))(v6 + 8))(v8, v0);
}

uint64_t sub_21C5238E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  char *v21;
  void (*v22)(unsigned int *, char *, uint64_t);
  unsigned int *v23;
  void (*v24)(unsigned int *, uint64_t);
  _QWORD v25[3];
  uint64_t v26;

  v25[1] = swift_getAssociatedTypeWitness();
  v5 = sub_21C5E2EC0();
  v6 = sub_21C5E3BB0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v25 - v12;
  v14 = *(_QWORD *)(v5 - 8);
  v15 = MEMORY[0x24BDAC7A8](v11);
  v25[0] = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (unsigned int *)((char *)v25 - v17);
  type metadata accessor for _MapContentOutputs.SetSource(0);
  v25[2] = a3;
  v26 = v3;
  sub_21C5E34A8();
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v19(v13, 1, v5) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  v21 = v13;
  v22 = *(void (**)(unsigned int *, char *, uint64_t))(v14 + 32);
  v22(v18, v21, v5);
  sub_21C5E34A8();
  if (v19(v10, 1, v5) == 1)
  {
    (*(void (**)(unsigned int *, uint64_t))(v14 + 8))(v18, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    v23 = (unsigned int *)v25[0];
    v22((unsigned int *)v25[0], v10, v5);
    sub_21C52BB38(v23);
    sub_21C52BB38(v18);
    AGGraphSetIndirectAttribute();
    v24 = *(void (**)(unsigned int *, uint64_t))(v14 + 8);
    v24(v23, v5);
    return ((uint64_t (*)(unsigned int *, uint64_t))v24)(v18, v5);
  }
}

void sub_21C523B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;

  swift_getAssociatedTypeWitness();
  sub_21C5E2EC0();
  v5 = sub_21C5E3BB0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-v7];
  sub_21C5E34A8();
  v14 = a2;
  v15 = a3;
  v9 = sub_21C5E2DB8();
  sub_21C537458((void (*)(char *, char *))sub_21C52553C, (uint64_t)v13, MEMORY[0x24BEE4078], v9, v10, (uint64_t)&v16);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  if ((v17 & 1) == 0)
  {
    v11 = (id)AGGraphGetAttributeSubgraph();
    AGGraphClearUpdate();
    v12 = (id)AGSubgraphGetCurrent();
    AGSubgraphSetCurrent();
    sub_21C523C90();
    AGSubgraphSetCurrent();

    AGGraphSetUpdate();
  }
}

uint64_t sub_21C523C90()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v8[16];
  uint64_t v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v3 = &v8[-v2];
  sub_21C5E2F8C();
  v9 = AssociatedTypeWitness;
  v4 = sub_21C5E2DB8();
  sub_21C52951C((uint64_t)v3, (uint64_t)sub_21C5255EC, (uint64_t)v8, AssociatedTypeWitness, MEMORY[0x24BEE4078], v4, MEMORY[0x24BEE40A8], v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
  return AGGraphSetIndirectAttribute();
}

void protocol witness for MapContent.body.getter in conformance <A> Group<A>()
{
  sub_21C5E3D48();
  __break(1u);
}

void protocol witness for MapContent.body.getter in conformance <> _ConditionalMapContent<A, B>()
{
  sub_21C5E3D48();
  __break(1u);
}

void protocol witness for MapContent.body.getter in conformance <A> A?()
{
  sub_21C5E3D48();
  __break(1u);
}

void protocol witness for MapContent.body.getter in conformance <> ModifiedContent<A, B>()
{
  sub_21C5E3D48();
  __break(1u);
}

void protocol witness for MapContent.body.getter in conformance TupleMapContent<A>()
{
  sub_21C5E3D48();
  __break(1u);
}

_UNKNOWN **sub_21C523F20()
{
  return &protocol witness table for Never;
}

uint64_t dispatch thunk of MapContent.body.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static MapContent._makeMapContent(content:inputs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of static MapContent._mapContentCount(inputs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t *initializeBufferWithCopyOfBuffer for _MapContentInputs(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C5E32C8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_21C5E2ED8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_21C5E346C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t destroy for _MapContentInputs(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_21C5E32C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_21C5E2ED8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_21C5E346C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for _MapContentInputs(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_21C5E32C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C5E2ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_21C5E346C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithCopy for _MapContentInputs(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_21C5E32C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C5E2ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_21C5E346C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for _MapContentInputs(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_21C5E32C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C5E2ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_21C5E346C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for _MapContentInputs(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_21C5E32C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C5E2ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_21C5E346C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for _MapContentInputs()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C5243CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_21C5E32C8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_21C5E2ED8();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = sub_21C5E346C();
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for _MapContentInputs()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C524470(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_21C5E32C8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_21C5E2ED8();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_21C5E346C();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_21C524510()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_21C5E32C8();
  if (v1 <= 0x3F)
  {
    result = sub_21C5E2ED8();
    if (v2 <= 0x3F)
    {
      result = sub_21C5E346C();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for _MapContentOutputs()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for _MapContentOutputs()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for _MapContentOutputs(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255287B60);
}

ValueMetadata *type metadata accessor for EmptyMapContent()
{
  return &type metadata for EmptyMapContent;
}

uint64_t sub_21C52461C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C52462C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for _MapContentInputs.AddPreference(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255287B70);
}

uint64_t *sub_21C524650(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C5E349C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v9[4] = v10[4];
  }
  return a1;
}

uint64_t sub_21C5246E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_21C5E349C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  return a1;
}

uint64_t sub_21C524754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = sub_21C5E349C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  return a1;
}

uint64_t sub_21C5247C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_21C5E349C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  return a1;
}

uint64_t sub_21C52482C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_21C5E349C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  return a1;
}

uint64_t sub_21C524898()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C5248A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for _MapContentOutputs.SetDependency(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255287B80);
}

uint64_t sub_21C5248CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C5E349C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_21C52493C()
{
  unint64_t result;

  result = qword_2552894D0;
  if (!qword_2552894D0)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EA58C, &type metadata for UserAnnotationMapContentKey);
    atomic_store(result, (unint64_t *)&qword_2552894D0);
  }
  return result;
}

uint64_t sub_21C524980(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_21C5249BC()
{
  unint64_t result;

  result = qword_255288D80;
  if (!qword_255288D80)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EA46C, &type metadata for CircleMapContentKey);
    atomic_store(result, (unint64_t *)&qword_255288D80);
  }
  return result;
}

unint64_t sub_21C524A00()
{
  unint64_t result;

  result = qword_2552894C0;
  if (!qword_2552894C0)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EA4FC, &type metadata for PolygonMapContentKey);
    atomic_store(result, (unint64_t *)&qword_2552894C0);
  }
  return result;
}

unint64_t sub_21C524A44()
{
  unint64_t result;

  result = qword_255288D70;
  if (!qword_255288D70)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EA424, &type metadata for PolylineMapContentKey);
    atomic_store(result, (unint64_t *)&qword_255288D70);
  }
  return result;
}

unint64_t sub_21C524A88()
{
  unint64_t result;

  result = qword_255288D60;
  if (!qword_255288D60)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EA61C, &type metadata for MarkerMapContentKey);
    atomic_store(result, (unint64_t *)&qword_255288D60);
  }
  return result;
}

unint64_t sub_21C524ACC()
{
  unint64_t result;

  result = qword_255287BA0;
  if (!qword_255287BA0)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EA4B4, &type metadata for AnnotationMapContentKey);
    atomic_store(result, (unint64_t *)&qword_255287BA0);
  }
  return result;
}

uint64_t sub_21C524B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[6];

  v6[5] = *MEMORY[0x24BDAC8D0];
  v6[2] = a2;
  v6[3] = a1;
  v2 = sub_21C5E2DF4();
  v3 = sub_21C5E2DB8();
  return sub_21C52951C(v3, (uint64_t)sub_21C524C70, (uint64_t)v6, v2, MEMORY[0x24BEE4078], v3, MEMORY[0x24BEE40A8], v4);
}

uint64_t sub_21C524BBC(uint64_t a1)
{
  uint64_t v1;

  return sub_21C524B10(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_21C524BD8@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_21C5E2DF4();
  MEMORY[0x22077F9A0](MEMORY[0x24BE09678], v2);
  result = sub_21C5E2DAC();
  *a1 = result;
  return result;
}

uint64_t sub_21C524C70@<X0>(_DWORD *a1@<X8>)
{
  return sub_21C524BD8(a1);
}

uint64_t (*sub_21C524C8C())()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  return sub_21C524CDC;
}

uint64_t sub_21C524CCC()
{
  return swift_deallocObject();
}

uint64_t sub_21C524CDC()
{
  return sub_21C5E2DE8();
}

uint64_t sub_21C524CE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  swift_getAssociatedTypeWitness();
  sub_21C5E2EC0();
  v2 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v6 - v4, a1);
  return sub_21C5E34B4();
}

unint64_t sub_21C524DA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255287BB8;
  if (!qword_255287BB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255287BB0);
    result = MEMORY[0x22077F9A0](&unk_21C5E5434, v1);
    atomic_store(result, (unint64_t *)&qword_255287BB8);
  }
  return result;
}

unint64_t sub_21C524DF0()
{
  unint64_t result;

  result = qword_255288D90;
  if (!qword_255288D90)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EA544, &type metadata for SelectedUserAnnotationMapContentKey);
    atomic_store(result, (unint64_t *)&qword_255288D90);
  }
  return result;
}

unint64_t sub_21C524E34()
{
  unint64_t result;

  result = qword_255287BC0[0];
  if (!qword_255287BC0[0])
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EA5D4, &type metadata for SelectedMarkerMapContentKey);
    atomic_store(result, qword_255287BC0);
  }
  return result;
}

uint64_t type metadata accessor for MapContentBodyAccessor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MapContentBodyAccessor);
}

ValueMetadata *type metadata accessor for MapContentDescriptor()
{
  return &type metadata for MapContentDescriptor;
}

uint64_t sub_21C524E94()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t *sub_21C524E9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C5E349C();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_21C524F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_21C5E349C();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_21C524FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21C5E349C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_21C525010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21C5E349C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_21C525080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21C5E349C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_21C5250F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_21C5E349C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_21C525160()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C52516C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C5E349C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_21C5251A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C5251B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C5E349C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for _MapContentOutputs.SetSource(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255287C48);
}

uint64_t sub_21C525208()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C5E349C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s15_MapKit_SwiftUI18_MapContentOutputsVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C5E349C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t _s15_MapKit_SwiftUI18_MapContentOutputsVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C5E349C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t _s15_MapKit_SwiftUI18_MapContentOutputsVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C5E349C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s15_MapKit_SwiftUI18_MapContentOutputsVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C5E349C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s15_MapKit_SwiftUI18_MapContentOutputsVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C5E349C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s15_MapKit_SwiftUI18_MapContentOutputsVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C5E349C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_21C5253F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C5E349C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_21C52543C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_21C5E349C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for _MapContentOutputs.ResetPreference(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255287C58);
}

uint64_t sub_21C5254A0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C5254D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C5E349C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C52553C@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  swift_getAssociatedTypeWitness();
  result = sub_21C52BB38(a1);
  *a2 = result;
  return result;
}

uint64_t sub_21C525598()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 24))(*(_QWORD *)(v0 + 16));
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x22077F91C](a1, v6, a5);
}

uint64_t sub_21C5255EC(uint64_t a1)
{
  return sub_21C524BBC(a1);
}

BOOL static MapUserTrackingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MapUserTrackingMode.hash(into:)()
{
  return sub_21C5E3E20();
}

uint64_t MapUserTrackingMode.hashValue.getter()
{
  sub_21C5E3E14();
  sub_21C5E3E20();
  return sub_21C5E3E44();
}

BOOL sub_21C525684(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21C525698()
{
  sub_21C5E3E14();
  sub_21C5E3E20();
  return sub_21C5E3E44();
}

uint64_t sub_21C5256DC()
{
  return sub_21C5E3E20();
}

uint64_t sub_21C525704()
{
  sub_21C5E3E14();
  sub_21C5E3E20();
  return sub_21C5E3E44();
}

unint64_t sub_21C525748()
{
  unint64_t result;

  result = qword_255287C68;
  if (!qword_255287C68)
  {
    result = MEMORY[0x22077F9A0](&protocol conformance descriptor for MapUserTrackingMode, &type metadata for MapUserTrackingMode);
    atomic_store(result, (unint64_t *)&qword_255287C68);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MapUserTrackingMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MapUserTrackingMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C525874 + 4 * byte_21C5E54C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C5258A8 + 4 * byte_21C5E54C0[v4]))();
}

uint64_t sub_21C5258A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C5258B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C5258B8);
  return result;
}

uint64_t sub_21C5258C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C5258CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C5258D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C5258D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C5258E4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_21C5258F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for MapUserTrackingMode()
{
  return &type metadata for MapUserTrackingMode;
}

void static ForEach<>._makeMapContent(content:inputs:)()
{
  _s21AttachCombinerVisitorVMa();
}

void sub_21C525970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v15 - 192) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v15 - 184) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v15 - 200) = (char *)&a9 - v16;
  v17 = type metadata accessor for _MapContentInputs(0);
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v15 - 144) = v9;
  *(_QWORD *)(v15 - 136) = v14;
  *(_QWORD *)(v15 - 128) = v13;
  *(_QWORD *)(v15 - 120) = v12;
  *(_QWORD *)(v15 - 112) = v11;
  *(_QWORD *)(v15 - 104) = v10;
  _s9MakeStateVMa();
}

void sub_21C5259EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v15 - 216) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v15 - 208) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v15 - 224) = (char *)&a9 - v16;
  v17 = type metadata accessor for _MapContentOutputs(0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v15 - 144) = v9;
  *(_QWORD *)(v15 - 136) = v14;
  *(_QWORD *)(v15 - 128) = v13;
  *(_QWORD *)(v15 - 120) = v12;
  *(_QWORD *)(v15 - 112) = v11;
  *(_QWORD *)(v15 - 104) = v10;
  *(_QWORD *)(v15 - 240) = v10;
  _s18AddCombinerVisitorVMa();
}

void sub_21C525A88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v14 - v11;
  _s15_MapKit_SwiftUI05EmptyA7ContentV05_makeaF07content6inputsAA01_aF7OutputsV0cD011_GraphValueVyACG_AA01_aF6InputsVtFZ_0();
  *(_QWORD *)(v9 - 232) = v7;
  sub_21C52AAD4(v7, (uint64_t)v12, type metadata accessor for _MapContentOutputs);
  MEMORY[0x22077F9A0](&unk_21C5E5828, a1);
  v13 = *(_QWORD *)(v9 - 168);
  sub_21C522FE4();
  *(_QWORD *)(v9 - 144) = v1;
  *(_QWORD *)(v9 - 136) = v8;
  *(_QWORD *)(v9 - 128) = v6;
  *(_QWORD *)(v9 - 120) = v5;
  *(_QWORD *)(v9 - 112) = v3;
  sub_21C5E3844();
  *(_DWORD *)(v9 - 244) = sub_21C52BB38(*(unsigned int **)(v9 - 160));
  sub_21C529664(v13, v4, type metadata accessor for _MapContentInputs);
  *(_QWORD *)(v9 - 160) = v12;
  sub_21C529664((uint64_t)v12, v2, type metadata accessor for _MapContentOutputs);
  if ((id)AGSubgraphGetCurrent())
    sub_21C5260A4();
  __break(1u);
  JUMPOUT(0x21C525D78);
}

void _s21AttachCombinerVisitorVMa()
{
  JUMPOUT(0x22077F91CLL);
}

void _s9MakeStateVMa()
{
  JUMPOUT(0x22077F91CLL);
}

void _s18AddCombinerVisitorVMa()
{
  JUMPOUT(0x22077F91CLL);
}

void sub_21C525DA0(int a1@<W0>, _DWORD *a2@<X8>)
{
  *a2 = a1;
  _s9MakeStateVMa();
}

uint64_t sub_21C525E00(int *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v10;

  sub_21C52AAD4(v6, v7 + a1[17], type metadata accessor for _MapContentInputs);
  result = sub_21C52AAD4(v5, v7 + a1[18], type metadata accessor for _MapContentOutputs);
  *(_QWORD *)(v7 + a1[19]) = v4;
  v10 = v7 + a1[20];
  *(_QWORD *)v10 = v3;
  *(_QWORD *)(v10 + 8) = v2;
  *(_DWORD *)(v10 + 16) = v1;
  return result;
}

_QWORD *sub_21C525E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  swift_allocObject();
  return sub_21C525EE0(a1, a2, a3, a4, a5, a6);
}

_QWORD *sub_21C525EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  _QWORD *v6;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedTypeWitness;

  v11 = *v6;
  *((_BYTE *)v6 + *(_QWORD *)(*v6 + 176)) = 0;
  v6[2] = a1;
  sub_21C52AAD4(a2, (uint64_t)v6 + qword_255287C78, type metadata accessor for _MapContentOutputs);
  v12 = (char *)v6 + *(_QWORD *)(*v6 + 152);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v12, a4, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v11 + 88) - 8) + 32))((char *)v6 + *(_QWORD *)(*v6 + 144), a3);
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 160)) = a5;
  *(_DWORD *)((char *)v6 + *(_QWORD *)(*v6 + 168)) = a6;
  return v6;
}

id *sub_21C525FD8()
{
  id *v0;
  _QWORD *v1;
  char *v2;
  uint64_t AssociatedTypeWitness;

  v1 = *v0;

  sub_21C52A88C((uint64_t)v0 + qword_255287C78, type metadata accessor for _MapContentOutputs);
  (*(void (**)(char *))(*(_QWORD *)(v1[11] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 18));
  v2 = (char *)v0 + *((_QWORD *)*v0 + 19);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v2, AssociatedTypeWitness);
  return v0;
}

uint64_t sub_21C526084()
{
  sub_21C525FD8();
  return swift_deallocClassInstance();
}

void sub_21C5260A4()
{
  _s4ItemCMa();
}

uint64_t sub_21C5260D8()
{
  uint64_t v0;

  v0 = sub_21C5E3A18();
  swift_getTupleTypeMetadata2();
  sub_21C5E3A18();
  sub_21C5E38D4();
  return v0;
}

uint64_t sub_21C526140(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t result;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v17[0] = *(_QWORD *)(a1 + 16);
  v19 = v17[0];
  v20 = v3;
  v21 = v4;
  v22 = v5;
  v23 = v6;
  v7 = sub_21C5E3844();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v17 - v9;
  sub_21C52809C((uint64_t)v17 - v9);
  v11 = sub_21C526300((uint64_t)v10, a1);
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    v13 = (uint64_t *)(v1 + *(int *)(a1 + 80));
    v14 = *v13;
    v15 = v13[1];
    LODWORD(v13) = *((_DWORD *)v13 + 4);
    v17[2] = v14;
    v17[3] = v15;
    v18 = (int)v13;
    MEMORY[0x24BDAC7A8](result);
    v17[-2] = a1;
    v17[-1] = MEMORY[0x22077F9A0](&unk_21C5E57E8, a1);
    v16 = *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v17[0];
    v20 = v3;
    v21 = v4;
    v22 = v5;
    v23 = v6;
    v24 = v16;
    _s9ItemStateVMa();
  }
  return result;
}

uint64_t sub_21C526300(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  int v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v52 = a1;
  v3 = *(_QWORD *)(a2 + 24);
  v45 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v39 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)v30 - v6;
  v43 = sub_21C5E3BB0();
  v42 = *(_QWORD *)(v43 - 8);
  v7 = MEMORY[0x24BDAC7A8](v43);
  v48 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)v30 - v9;
  v51 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(*(_QWORD *)(v51 + 8) + 8);
  v11 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v13);
  v14 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v14);
  v36 = (char *)v30 - v15;
  v40 = v10;
  v34 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v37 = v14;
  v35 = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(v35 - 8);
  v17 = MEMORY[0x24BDAC7A8](v35);
  v46 = (char *)v30 - v18;
  v19 = v11;
  v20 = *(_QWORD *)(v11 - 8);
  v21 = v50;
  MEMORY[0x24BDAC7A8](v17);
  v23 = (char *)v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = AGSubgraphIsValid();
  if ((_DWORD)result)
  {
    v32 = v16;
    v30[1] = v20;
    v25 = v21 + *(int *)(a2 + 80);
    v31 = *(_DWORD *)(v25 + 16);
    *(_DWORD *)(v25 + 16) = v31 + 1;
    v26 = a2;
    v47 = *(_QWORD *)(a2 + 32);
    v27 = *(_QWORD *)(a2 + 48);
    v53 = v19;
    v54 = v3;
    v28 = v51;
    v55 = v47;
    v56 = v51;
    v57 = v27;
    sub_21C5E3844();
    v33 = v23;
    sub_21C5E3820();
    v49 = v26;
    v29 = *(_QWORD *)(v26 + 56);
    v53 = v19;
    v54 = v3;
    v55 = v47;
    v56 = v28;
    v57 = v27;
    v58 = v29;
    _s4ItemCMa();
  }
  return result;
}

void sub_21C526BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[9];
  uint64_t AssociatedTypeWitness;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v37 = a1;
  v38 = a2;
  v5 = *(_QWORD *)(a3 + 40);
  v36 = *(_QWORD *)(a3 + 16);
  v6 = v36;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v25[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v25[7] = (char *)v25 - v7;
  v8 = type metadata accessor for _MapContentOutputs(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v25[6] = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v28 = (char *)v25 - v11;
  v12 = type metadata accessor for _MapContentInputs(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v29 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a3 + 24);
  v35 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v27 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = *(_QWORD *)(a3 + 32);
  v19 = *(_QWORD *)(a3 + 48);
  v39 = v6;
  v40 = v15;
  v41 = v18;
  v42 = v5;
  v43 = v19;
  v20 = sub_21C5E3844();
  v31 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v25 - v21;
  sub_21C52809C((uint64_t)v25 - v21);
  v32 = v20;
  v34 = v22;
  sub_21C5E382C();
  v23 = *(int *)(a3 + 80);
  v33 = v3;
  v30 = v3 + v23;
  v24 = *(_QWORD *)(a3 + 56);
  v39 = v36;
  v40 = v15;
  v41 = v18;
  v42 = v5;
  v25[5] = v5;
  v43 = v19;
  v44 = v24;
  _s4ItemCMa();
}

uint64_t sub_21C526DE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  int v25;
  int v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  *(_QWORD *)(v9 - 200) = v5;
  *(_QWORD *)(v9 - 232) = v3;
  v11 = v1;
  MEMORY[0x22077EE30](v5, v2, v3, a1, v1);
  v12 = *(uint64_t **)(v9 - 96);
  if (v12)
  {
    v13 = *v12;
    v14 = *(_QWORD *)(*v12 + 176);
    if (*((_BYTE *)v12 + v14) == 1)
    {
      *((_BYTE *)v12 + v14) = 0;
      AGSubgraphAddChild();
      v13 = *v12;
    }
    v15 = *(_QWORD *)(v13 + 168);
    v16 = *(_DWORD *)((char *)v12 + v15);
    v17 = *(_QWORD *)(v9 - 224);
    v18 = *(_DWORD *)(v17 + 16);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 216) + 8))(*(_QWORD *)(v9 - 184), *(_QWORD *)(v9 - 208));
    if (v16 == v18)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 176) + 8))(*(_QWORD *)(v9 - 200), *(_QWORD *)(v9 - 232));
    }
    else
    {
      v28 = (uint64_t)v12 + *(_QWORD *)(*v12 + 152);
      swift_beginAccess();
      (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v9 - 272) + 24))(v28, *(_QWORD *)(v9 - 160), *(_QWORD *)(v9 - 264));
      swift_endAccess();
      *(uint64_t *)((char *)v12 + *(_QWORD *)(*v12 + 160)) = *(_QWORD *)(v9 - 152);
      v29 = *(_QWORD *)(v9 - 176);
      v30 = *(_QWORD *)(v9 - 256);
      v31 = *(_QWORD *)(v9 - 232);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 32))(v30, *(_QWORD *)(v9 - 200), v31);
      v32 = (uint64_t)v12 + *(_QWORD *)(*v12 + 144);
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 40))(v32, v30, v31);
      swift_endAccess();
      *(_DWORD *)((char *)v12 + v15) = *(_DWORD *)(v17 + 16);
    }
    return (uint64_t)v12;
  }
  else
  {
    *(_QWORD *)(v9 - 328) = v4;
    *(_QWORD *)(v9 - 320) = v6;
    *(_QWORD *)(v9 - 312) = a1;
    *(_QWORD *)(v9 - 304) = v7;
    v19 = *(_QWORD *)(v9 - 240);
    v20 = *(int **)(v9 - 192);
    v21 = (id)AGSubgraphGetGraph();
    v22 = AGSubgraphCreate();

    v23 = v22;
    AGSubgraphAddChild();
    result = AGGraphGetCurrentAttribute();
    if ((_DWORD)result != *MEMORY[0x24BE096C0])
    {
      v25 = result;
      v26 = *v20;
      sub_21C529664((uint64_t)v20 + *(int *)(v8 + 68), v19, type metadata accessor for _MapContentInputs);
      AGGraphClearUpdate();
      v27 = (id)AGSubgraphGetCurrent();
      *(_QWORD *)(v9 - 336) = v23;
      AGSubgraphSetCurrent();
      sub_21C5271E4(v26, v19, *(_QWORD *)(v9 - 200), *(_QWORD *)(v9 - 152), *(_QWORD *)(v9 - 184), *(_QWORD *)(v9 - 160), v25, *(_QWORD *)(v9 - 168), *(_QWORD *)(v9 - 248), *(_QWORD *)(v9 - 232), *(_QWORD *)(v9 - 320), *(_QWORD *)(v9 - 296), v11, *(_QWORD *)(v9 - 328));
    }
    __break(1u);
  }
  return result;
}

void sub_21C5271E4(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v15;
  _QWORD v16[24];
  int v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v17 = a7;
  v16[20] = a6;
  v16[18] = a5;
  v16[12] = a4;
  v22 = a3;
  v16[9] = a2;
  v23 = a1;
  v21 = a9;
  v30 = *MEMORY[0x24BDAC8D0];
  v20 = sub_21C5E2EC0();
  v19 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v18 = (char *)v16 - v15;
  v24 = a8;
  v25 = a10;
  v26 = a11;
  v27 = a12;
  v28 = a13;
  v29 = a14;
  _s5ChildVMa();
}

void sub_21C5272D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(v15 - 360) = a1;
  *(_QWORD *)(v15 - 344) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v15 - 392) = (char *)&a9 - v16;
  *(_QWORD *)(v15 - 408) = *(_QWORD *)(*(_QWORD *)(v11 + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v15 - 416) = AssociatedTypeWitness;
  *(_QWORD *)(v15 - 432) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v18 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v15 - 440) = (char *)&a9 - v19;
  v20 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v15 - 536) = v12;
  *(_QWORD *)(v15 - 424) = v20;
  v21 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v15 - 464) = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v15 - 304) = v9;
  *(_QWORD *)(v15 - 368) = *(_QWORD *)(v9 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v15 - 376) = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v15 - 288) = (char *)&a9 - v25;
  v26 = type metadata accessor for _MapContentInputs(0);
  *(_QWORD *)(v15 - 512) = v26;
  v27 = MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v15 - 296) = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v15 - 456) = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v15 - 144) = v12;
  *(_QWORD *)(v15 - 136) = v14;
  *(_QWORD *)(v15 - 128) = v9;
  *(_QWORD *)(v15 - 120) = v11;
  *(_QWORD *)(v15 - 528) = v10;
  *(_QWORD *)(v15 - 112) = v10;
  *(_QWORD *)(v15 - 104) = v13;
  *(_QWORD *)(v15 - 480) = v13;
  _s11ChildTraitsVMa();
}

void sub_21C5274D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  int v17;
  void (*v18)(uint64_t, _QWORD, uint64_t);
  int v19;

  *(_QWORD *)(v14 - 520) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v16 = (_DWORD *)((char *)&a9 - v15);
  v17 = *(_DWORD *)(*(_QWORD *)(v14 - 472) + *(int *)(v9 + 28));
  v18 = *(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 16);
  *(_QWORD *)(v14 - 488) = v18;
  *(_QWORD *)(v14 - 496) = v12;
  v18(v12, *(_QWORD *)(v14 - 280), v13);
  v19 = *(_DWORD *)(v14 - 268);
  *(_QWORD *)(v14 - 504) = v10;
  sub_21C527980(v19, v17, v16);
}

void sub_21C52758C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v7 - 160) = v4;
  *(_QWORD *)(v7 - 152) = MEMORY[0x22077F9A0](&unk_21C5E59E0, v4);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255287F00);
  sub_21C52951C(v1, (uint64_t)sub_21C52A8E0, v7 - 176, v4, MEMORY[0x24BEE4078], v8, MEMORY[0x24BEE40A8], v9);
  *(_QWORD *)(v7 - 448) = 0;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 520) + 8))(v1, v4);
  v10 = *(_DWORD *)(v7 - 144);
  v11 = v0;
  v12 = *(_QWORD *)(v7 - 296);
  sub_21C529664(v11, v12, type metadata accessor for _MapContentInputs);
  *(_DWORD *)(v12 + *(int *)(*(_QWORD *)(v7 - 512) + 28)) = v10;
  *(_QWORD *)(v7 - 144) = v5;
  *(_QWORD *)(v7 - 136) = v6;
  v13 = v6;
  *(_QWORD *)(v7 - 128) = v3;
  *(_QWORD *)(v7 - 120) = v2;
  v14 = *(_QWORD *)(v7 - 528);
  *(_QWORD *)(v7 - 112) = v14;
  sub_21C5E3844();
  v15 = (void (*)(uint64_t))sub_21C5E3838();
  v16 = *(_QWORD *)(v7 - 464);
  sub_21C5E3820();
  v17 = (void (*)(uint64_t, _QWORD))sub_21C5E3B20();
  v18 = *(_QWORD *)(v7 - 432);
  v19 = *(_QWORD *)(v7 - 440);
  v20 = *(_QWORD *)(v7 - 416);
  (*(void (**)(uint64_t))(v18 + 16))(v19);
  v17(v7 - 144, 0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 424) + 8))(v16, v5);
  v15(v19);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v7 - 488))(*(_QWORD *)(v7 - 496), *(_QWORD *)(v7 - 280), v13);
  v21 = *(_DWORD **)(v7 - 392);
  v22 = *(_DWORD *)(v7 - 268);
  *v21 = *(_DWORD *)(v7 - 348);
  v21[1] = v22;
  *(_QWORD *)(v7 - 144) = v5;
  *(_QWORD *)(v7 - 136) = v13;
  v23 = *(_QWORD *)(v7 - 504);
  *(_QWORD *)(v7 - 128) = *(_QWORD *)(v7 - 304);
  *(_QWORD *)(v7 - 120) = v23;
  v24 = *(_QWORD *)(v7 - 480);
  *(_QWORD *)(v7 - 112) = v14;
  *(_QWORD *)(v7 - 104) = v24;
  _s5ChildVMa();
}

uint64_t sub_21C5277A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 456) + 32))(v4 + *(int *)(a1 + 72), v3, v2);
  v7 = *(_QWORD *)(v6 - 360);
  *(_QWORD *)(v6 - 208) = v1;
  *(_QWORD *)(v6 - 200) = v7;
  *(_QWORD *)(v6 - 192) = MEMORY[0x22077F9A0](&unk_21C5E59A0, v7);
  v8 = sub_21C5E2DB8();
  v9 = MEMORY[0x24BEE4078];
  v10 = MEMORY[0x24BEE40A8];
  sub_21C52951C(v4, (uint64_t)sub_21C5296B4, v6 - 224, v7, MEMORY[0x24BEE4078], v8, MEMORY[0x24BEE40A8], v11);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 344) + 8))(v4, v7);
  v12 = *(_DWORD *)(v6 - 144);
  v13 = *(_QWORD *)(v6 - 368);
  v14 = *(_QWORD *)(v6 - 376);
  v15 = *(_QWORD *)(v6 - 288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v14, v15, v1);
  *(_QWORD *)(v6 - 240) = v1;
  *(_DWORD *)(v6 - 232) = v12;
  sub_21C52951C(v14, (uint64_t)sub_21C52A9C4, v6 - 256, v1, v9, MEMORY[0x24BEE1328], v10, v16);
  v17 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v17(v14, v1);
  v18 = *(_QWORD *)(v6 - 336);
  sub_21C52BAE0(v12, v18);
  v19 = *(_QWORD *)(v6 - 296);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 32))(v18, v19, v1, v5);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 328) + 8))(v18, *(_QWORD *)(v6 - 320));
  v17(v15, v1);
  return sub_21C52A88C(v19, type metadata accessor for _MapContentInputs);
}

void sub_21C527980(int a1@<W0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  _s11ChildTraitsVMa();
}

double sub_21C5279C8(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  double result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v4 + a1[18], v3, v1);
  *(_QWORD *)(v4 + a1[19]) = v2;
  v6 = a1[20];
  __swift_instantiateConcreteTypeFromMangledName(qword_255287F08);
  v7 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v7 + 16) = xmmword_21C5E5570;
  *(_QWORD *)(v7 + 32) = -1;
  *(_BYTE *)(v7 + 72) = 0;
  *(_QWORD *)(v4 + v6) = v7;
  return result;
}

void sub_21C527A40(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
}

uint64_t sub_21C527A50()
{
  return 0;
}

uint64_t sub_21C527A58()
{
  return 2;
}

uint64_t sub_21C527A60()
{
  return 8;
}

void sub_21C527A68()
{
  _s9ItemStateVMa();
}

uint64_t sub_21C527A9C()
{
  uint64_t v0;

  v0 = *(_QWORD *)AGGraphGetValue();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_21C527AE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t Value;

  v2 = sub_21C5E3844();
  Value = AGGraphGetValue();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, Value, v2);
}

void sub_21C527B5C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  v3 = a1[4];
  v32 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v31 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v30 = (char *)v23 - v7;
  v8 = *(_QWORD *)(v6 + 40);
  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 8) + 8);
  v10 = *(_QWORD *)(v6 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v29 = AssociatedTypeWitness;
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v25 = (char *)v23 - v13;
  v26 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v23[4] = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v16 = a1[6];
  v36 = v10;
  v37 = v15;
  v38 = v3;
  v39 = v8;
  v40 = v16;
  v24 = sub_21C5E3844();
  v23[2] = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v23[3] = (char *)v23 - v17;
  v27 = v9;
  v18 = swift_getAssociatedTypeWitness();
  v34 = *(_QWORD *)(v18 - 8);
  v35 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v33 = (char *)v23 - v20;
  MEMORY[0x24BDAC7A8](v19);
  (*(void (**)(char *, uint64_t, _QWORD *))(v22 + 16))((char *)v23 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  sub_21C527A68();
}

void sub_21C527D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v6 - 144) = v4;
  *(_QWORD *)(v6 - 136) = v1;
  *(_QWORD *)(v6 - 232) = v3;
  *(_QWORD *)(v6 - 128) = v3;
  *(_QWORD *)(v6 - 120) = v2;
  *(_QWORD *)(v6 - 112) = v5;
  *(_QWORD *)(v6 - 104) = v7;
  _s4ItemCMa();
}

uint64_t sub_21C527DB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  MEMORY[0x22077EE30](v3, v1, v2, a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v3, v2);
  if (*(_QWORD *)(v5 - 168))
    sub_21C527A68();
  return result;
}

uint64_t sub_21C52809C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t Value;

  v2 = sub_21C5E3844();
  Value = AGGraphGetValue();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, Value, v2);
}

uint64_t sub_21C528114@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Value;

  v3 = *(_DWORD *)(v1 + 4);
  v4 = *MEMORY[0x24BE096C0];
  v5 = sub_21C5E34E4();
  v6 = v5;
  if (v3 == v4)
  {
    v7 = *(_QWORD *)(v5 - 8);
    v8 = 1;
  }
  else
  {
    Value = AGGraphGetValue();
    v7 = *(_QWORD *)(v6 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, Value, v6);
    v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v8, 1, v6);
}

uint64_t sub_21C5281A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 32) - 8) + 56))(a2, 1, 1);
}

uint64_t sub_21C5281C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char v48;

  v3 = v2;
  v43 = a2;
  v5 = *(_QWORD *)(a1 + 24);
  v38 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v40 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v6 + 48);
  v10 = type metadata accessor for TagValueTraitKey.Value(0, v5, v8, v9);
  MEMORY[0x24BDAC7A8](v10);
  v37 = (char *)&v36 - v11;
  v44 = *(_QWORD *)(a1 + 16);
  v45 = v5;
  v46 = *(_OWORD *)(a1 + 32);
  v39 = v8;
  v47 = v8;
  v12 = sub_21C5E3844();
  v41 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v36 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25528A5B0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v42 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v36 - v18;
  sub_21C528114((uint64_t)&v36 - v18);
  v20 = sub_21C5E34E4();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_21C5E34D8();
    sub_21C52B92C((uint64_t)v19);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v43, v19, v20);
  }
  v22 = *(int *)(a1 + 76);
  v44 = *(_QWORD *)(v2 + v22);
  LOBYTE(v45) = 0;
  sub_21C52B96C();
  sub_21C5E34FC();
  sub_21C52809C((uint64_t)v14);
  v23 = sub_21C5E37FC();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v12);
  if ((v23 & 1) != 0)
  {
    v44 = *(_QWORD *)(v2 + v22);
    v24 = v44;
    LOBYTE(v45) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288098);
    sub_21C52BA28();
    v25 = v43;
    sub_21C5E34FC();
    v26 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v42, v25, v20);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v26, 0, 1, v20);
    v44 = v24;
    v48 = 0;
  }
  else
  {
    v27 = v2 + *(int *)(a1 + 72);
    v29 = v37;
    v28 = v38;
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
    v30(v37, v3 + *(int *)(a1 + 72), v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v29, 0, 1, v5);
    v32 = type metadata accessor for TagValueTraitKey(0, v5, v39, v31);
    MEMORY[0x22077F9A0](&unk_21C5E98D0, v32);
    v33 = v43;
    sub_21C5E34FC();
    v26 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v42, v33, v20);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v26, 0, 1, v20);
    v30(v40, v27, v5);
    sub_21C5E3C40();
    v48 = 1;
  }
  v34 = sub_21C5BAA60(v26, (uint64_t)&v44);
  sub_21C52B9B0((uint64_t)&v44);
  sub_21C52B92C(v26);
  v44 = v34;
  sub_21C52B9E4();
  return sub_21C5E34FC();
}

uint64_t sub_21C528588@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_21C5E34E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void sub_21C5285C8()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  sub_21C5E2EC0();
  v0 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v0);
  _s25ForEachPreferenceCombinerVMa();
}

uint64_t sub_21C5286A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 - 168) = a1;
  *(_QWORD *)(v3 - 160) = MEMORY[0x22077F9A0](&unk_21C5E5A20, a1);
  v5 = sub_21C5E2DB8();
  sub_21C52951C(v3 - 196, (uint64_t)sub_21C52A840, v3 - 192, a1, MEMORY[0x24BEE4078], v5, MEMORY[0x24BEE40A8], v6);
  sub_21C52BAE0(*(_DWORD *)(v3 - 144), v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v2, 0, 1, v1);
  return sub_21C5E34B4();
}

void sub_21C528778()
{
  sub_21C5285C8();
}

uint64_t sub_21C52878C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[10];

  v25[1] = swift_getAssociatedTypeWitness();
  v8 = sub_21C5E2EC0();
  v9 = sub_21C5E3BB0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v25 - v12;
  v14 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v16 = (unsigned int *)((char *)v25 - v15);
  sub_21C5E34A8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v8) != 1)
  {
    (*(void (**)(unsigned int *, char *, uint64_t))(v14 + 32))(v16, v13, v8);
    v17 = sub_21C52BB38(v16);
    MEMORY[0x24BDAC7A8](v17);
    v18 = a2[2];
    v19 = a2[3];
    v25[-10] = v18;
    v25[-9] = v19;
    v20 = a2[4];
    v21 = a2[5];
    v25[-8] = v20;
    v25[-7] = a3;
    v22 = a2[6];
    v23 = a2[7];
    v25[-6] = v21;
    v25[-5] = v22;
    v25[-4] = v23;
    v25[-3] = a4;
    v25[-2] = v4;
    v25[2] = v18;
    v25[3] = v19;
    v25[4] = v20;
    v25[5] = a3;
    v25[6] = v21;
    v25[7] = v22;
    v25[8] = v23;
    v25[9] = a4;
    _s25ForEachPreferenceCombinerVMa();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

void sub_21C528980()
{
  _s21AttachCombinerVisitorVMa();
}

void sub_21C5289DC()
{
  _s25ForEachPreferenceCombinerVMa();
}

void sub_21C528A00()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

uint64_t sub_21C528A38(int a1)
{
  if (*MEMORY[0x24BE096C0] != a1)
    _s9ItemStateVMa();
  return 0;
}

uint64_t sub_21C528AD4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_21C52878C(a1, a4, a2, a3);
}

uint64_t sub_21C528AE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;

  sub_21C5E2F8C();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_21C528B58@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _QWORD v28[8];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  LODWORD(v38) = a1;
  v34 = a9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28[7] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v28[6] = (char *)v28 - v18;
  v32 = v19;
  v20 = sub_21C5E2EC0();
  v21 = sub_21C5E3BB0();
  v31 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v33 = (char *)v28 - v22;
  v23 = type metadata accessor for _MapContentOutputs(0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v36 = (char *)v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v30 = (char *)v28 - v26;
  v28[0] = a3;
  v29 = a4;
  result = sub_21C528A38(v38);
  if (result)
  {
    v37 = a10;
    v38 = a5;
    sub_21C5E2F8C();
    swift_bridgeObjectRelease();
    v39 = a2;
    v40 = v28[0];
    v41 = v29;
    v42 = a6;
    v28[3] = a6;
    v28[4] = a7;
    v43 = a7;
    v44 = a8;
    v28[5] = a8;
    _s4ItemCMa();
  }
  __break(1u);
  return result;
}

uint64_t sub_21C528FEC@<X0>(uint64_t a1@<X8>)
{
  return sub_21C528AE8(a1);
}

uint64_t sub_21C529004@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v2;

  return sub_21C528B58(*v2, a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a2, a1[9]);
}

uint64_t sub_21C52903C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x24BDAC8D0];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = sub_21C5E3BB0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v15 - v7;
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v15 - v10;
  sub_21C528AE8((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v13 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, AssociatedTypeWitness);
  MEMORY[0x24BDAC7A8](v13);
  v15[-2] = a2;
  v15[-1] = MEMORY[0x22077F9A0](&unk_21C5E5A20, a2);
  sub_21C52951C((uint64_t)v11, (uint64_t)sub_21C52BA74, (uint64_t)&v15[-4], AssociatedTypeWitness, MEMORY[0x24BEE4078], MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE40A8], v14);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
}

void sub_21C529220()
{
  static ForEach<>._makeMapContent(content:inputs:)();
}

uint64_t ForEach<>.init<>(_:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_21C5E3814();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
}

uint64_t sub_21C529350()
{
  swift_getAssociatedTypeWitness();
  return sub_21C5E3C7C();
}

uint64_t ForEach<>.init(_:id:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_21C5E3814();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 8))(a1, a5);
}

uint64_t ForEach<>.init<>(_:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a5;
  v10[3] = a6;
  v10[4] = a3;
  v10[5] = a4;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25528A410);
  sub_21C529734();
  sub_21C5E3808();
  swift_release();
  return swift_release();
}

uint64_t sub_21C5294C8()
{
  swift_getAssociatedTypeWitness();
  return AGGraphSetOutputValue();
}

uint64_t sub_21C52951C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t, char *);
  uint64_t result;
  uint64_t v17;

  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x24BDAC7A8]();
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v15(v12, v14);
  if (v8)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  return result;
}

uint64_t sub_21C5295A8@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  sub_21C527A50();
  result = sub_21C5E2DAC();
  *a1 = result;
  return result;
}

uint64_t sub_21C52962C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = AGGraphSetValue();
  *a1 = result;
  return result;
}

uint64_t sub_21C529664(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void _s9ItemStateVMa()
{
  JUMPOUT(0x22077F91CLL);
}

uint64_t sub_21C5296B4@<X0>(_DWORD *a1@<X8>)
{
  return sub_21C52A944(a1);
}

uint64_t sub_21C5296CC()
{
  return 48;
}

__n128 sub_21C5296D8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_21C5296EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C529710(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 32))(*a1);
}

unint64_t sub_21C529734()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_25528A450;
  if (!qword_25528A450)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_25528A410);
    v2 = sub_21C5297A0();
    v3[0] = MEMORY[0x24BEE17A8];
    v3[1] = v2;
    result = MEMORY[0x22077F9A0](MEMORY[0x24BEE1BD0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_25528A450);
  }
  return result;
}

unint64_t sub_21C5297A0()
{
  unint64_t result;

  result = qword_255287C70;
  if (!qword_255287C70)
  {
    result = MEMORY[0x22077F9A0](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_255287C70);
  }
  return result;
}

_UNKNOWN **sub_21C5297E4()
{
  return &protocol witness table for Never;
}

uint64_t sub_21C5297F0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 40) + 8) + 8);
}

uint64_t sub_21C529800(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x22077F9A0](&protocol conformance descriptor for <> ForEach<A, B, C>, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C529844()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_21C5E349C();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
        return swift_initClassMetadata2();
    }
  }
  return result;
}

void _s4ItemCMa()
{
  JUMPOUT(0x22077F91CLL);
}

uint64_t dispatch thunk of DynamicMapContent.data.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_21C529950()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21C52995C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21C529998(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t sub_21C529A10(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t sub_21C529A54(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 20))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_21C529A9C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 20) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 20) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_21C529ADC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21C529AE4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C5E349C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C529B4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C529B5C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C529B6C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21C529B74()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for _MapContentInputs(319);
  if (v1 <= 0x3F)
  {
    result = sub_21C5E349C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_21C529C20(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a3[17];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_21C5E32C8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = (int *)type metadata accessor for _MapContentInputs(0);
    v12 = v11[5];
    v13 = &v8[v12];
    v14 = &v9[v12];
    v15 = sub_21C5E2ED8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = v11[6];
    v17 = &v8[v16];
    v18 = &v9[v16];
    v19 = sub_21C5E346C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    *(_DWORD *)&v8[v11[7]] = *(_DWORD *)&v9[v11[7]];
    v20 = a3[18];
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_21C5E349C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[19];
    v25 = a3[20];
    v26 = *(void **)((char *)a2 + v24);
    *(uint64_t *)((char *)v4 + v24) = (uint64_t)v26;
    v27 = (char *)v4 + v25;
    v28 = (char *)a2 + v25;
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    *((_DWORD *)v27 + 4) = *((_DWORD *)v28 + 4);
    v30 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_21C529D94(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1 + a2[17];
  v5 = sub_21C5E32C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for _MapContentInputs(0);
  v7 = v4 + *(int *)(v6 + 20);
  v8 = sub_21C5E2ED8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v4 + *(int *)(v6 + 24);
  v10 = sub_21C5E346C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[18];
  v12 = sub_21C5E349C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_DWORD *sub_21C529E80(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  id v29;

  *a1 = *a2;
  v6 = a3[17];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C5E32C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = (int *)type metadata accessor for _MapContentInputs(0);
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_21C5E2ED8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = v10[6];
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = sub_21C5E346C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  *(_DWORD *)&v7[v10[7]] = *(_DWORD *)&v8[v10[7]];
  v19 = a3[18];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_21C5E349C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = a3[19];
  v24 = a3[20];
  v25 = *(void **)((char *)a2 + v23);
  *(_QWORD *)((char *)a1 + v23) = v25;
  v26 = (char *)a1 + v24;
  v27 = (char *)a2 + v24;
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  *((_DWORD *)v26 + 4) = *((_DWORD *)v27 + 4);
  v29 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_DWORD *sub_21C529FC8(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;

  *a1 = *a2;
  v6 = a3[17];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C5E32C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for _MapContentInputs(0);
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_21C5E2ED8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v10[6];
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = sub_21C5E346C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  *(_DWORD *)&v7[v10[7]] = *(_DWORD *)&v8[v10[7]];
  v19 = a3[18];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_21C5E349C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  v23 = a3[19];
  v24 = *(void **)((char *)a2 + v23);
  v25 = *(void **)((char *)a1 + v23);
  *(_QWORD *)((char *)a1 + v23) = v24;
  v26 = v24;

  v27 = a3[20];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  *(_QWORD *)((char *)a1 + v27) = *(_QWORD *)((char *)a2 + v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_DWORD *)v28 + 4) = *((_DWORD *)v29 + 4);
  return a1;
}

_DWORD *sub_21C52A134(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;

  *a1 = *a2;
  v6 = a3[17];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C5E32C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for _MapContentInputs(0);
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_21C5E2ED8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = v10[6];
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = sub_21C5E346C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  *(_DWORD *)&v7[v10[7]] = *(_DWORD *)&v8[v10[7]];
  v19 = a3[18];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_21C5E349C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[20];
  *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_DWORD *)v24 + 4) = *((_DWORD *)v25 + 4);
  return a1;
}

_DWORD *sub_21C52A268(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;

  *a1 = *a2;
  v6 = a3[17];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C5E32C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for _MapContentInputs(0);
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v14 = sub_21C5E2ED8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = v10[6];
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = sub_21C5E346C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  *(_DWORD *)&v7[v10[7]] = *(_DWORD *)&v8[v10[7]];
  v19 = a3[18];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_21C5E349C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  v23 = a3[19];
  v24 = *(void **)((char *)a1 + v23);
  *(_QWORD *)((char *)a1 + v23) = *(_QWORD *)((char *)a2 + v23);

  v25 = a3[20];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  *(_QWORD *)((char *)a1 + v25) = *(_QWORD *)v27;
  swift_bridgeObjectRelease();
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRelease();
  *((_DWORD *)v26 + 4) = *((_DWORD *)v27 + 4);
  return a1;
}

uint64_t sub_21C52A3C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C52A3CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = type metadata accessor for _MapContentInputs(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[17];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = type metadata accessor for _MapContentOutputs(0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[18];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[19]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t sub_21C52A470()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C52A47C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = type metadata accessor for _MapContentInputs(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[17];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = type metadata accessor for _MapContentOutputs(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[18];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[19]) = (a2 - 1);
  return result;
}

uint64_t sub_21C52A51C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C5E349C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21C52A590(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_21C5E349C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 68)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 68));
  }
  return a1;
}

uint64_t sub_21C52A618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C5E349C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 68)) = *(_DWORD *)(a2 + *(int *)(a3 + 68));
  return a1;
}

uint64_t sub_21C52A674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C5E349C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 68)) = *(_DWORD *)(a2 + *(int *)(a3 + 68));
  return a1;
}

uint64_t sub_21C52A6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C5E349C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 68)) = *(_DWORD *)(a2 + *(int *)(a3 + 68));
  return a1;
}

uint64_t sub_21C52A72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_21C5E349C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 68)) = *(_DWORD *)(a2 + *(int *)(a3 + 68));
  return a1;
}

uint64_t sub_21C52A788()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _MapContentOutputs(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_21C52A7D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _MapContentOutputs(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_21C52A824()
{
  JUMPOUT(0x22077F9A0);
}

void _s25ForEachPreferenceCombinerVMa()
{
  JUMPOUT(0x22077F91CLL);
}

uint64_t sub_21C52A840@<X0>(_DWORD *a1@<X8>)
{
  return sub_21C55D7D0(a1);
}

uint64_t sub_21C52A860()
{
  return sub_21C52BA98();
}

uint64_t sub_21C52A884()
{
  return swift_release();
}

uint64_t sub_21C52A88C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void _s5ChildVMa()
{
  JUMPOUT(0x22077F91CLL);
}

void _s11ChildTraitsVMa()
{
  JUMPOUT(0x22077F91CLL);
}

uint64_t sub_21C52A8E0@<X0>(_DWORD *a1@<X8>)
{
  sub_21C5E34E4();
  return sub_21C55D7D0(a1);
}

uint64_t sub_21C52A944@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  sub_21C527A50();
  result = sub_21C5E2DAC();
  *a1 = result;
  return result;
}

uint64_t sub_21C52A9C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = AGGraphSetValue();
  *a1 = result;
  return result;
}

void sub_21C52A9FC()
{
  sub_21C528980();
}

uint64_t sub_21C52AA30()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t (*sub_21C52AA50())()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  v3 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 24) = v3;
  *(_QWORD *)(v2 + 40) = v3;
  return sub_21C52AAAC;
}

uint64_t sub_21C52AA9C()
{
  return swift_deallocObject();
}

uint64_t sub_21C52AAAC()
{
  return sub_21C5E2DC4();
}

uint64_t sub_21C52AAD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21C52AB18()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21C52ABB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((((v6 + ((v5 + 8) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v10 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    v11 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    *v10 = *v11;
    v12 = ((unint64_t)v10 + v5 + 4) & ~v5;
    v13 = ((unint64_t)v11 + v5 + 4) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v12, v13);
    v14 = (_QWORD *)((v6 + v12) & 0xFFFFFFFFFFFFF8);
    v15 = (_QWORD *)((v6 + v13) & 0xFFFFFFFFFFFFF8);
    *v14 = *v15;
    *(_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_21C52ACB8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((((a1 + 7) & 0xFFFFFFFFFFFFFFFCLL)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)
                                                                                            + 4) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
  return swift_bridgeObjectRelease();
}

_DWORD *sub_21C52AD18(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  _DWORD *v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)v4 + v7 + 4) & ~v7;
  v9 = ((unint64_t)v5 + v7 + 4) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + v9) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  *(_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

_DWORD *sub_21C52ADC0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  _DWORD *v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)v4 + v7 + 4) & ~v7;
  v9 = ((unint64_t)v5 + v7 + 4) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + v9) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  *(_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_DWORD *sub_21C52AE74(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  _DWORD *v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)v4 + v7 + 4) & ~v7;
  v9 = ((unint64_t)v5 + v7 + 4) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + v9) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  *(_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_DWORD *sub_21C52AF18(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  _DWORD *v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)v4 + v7 + 4) & ~v7;
  v9 = ((unint64_t)v5 + v7 + 4) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + v9) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  *(_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21C52AFC4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  if (v6 >= a2)
  {
    v13 = (((a1 + 7) & 0xFFFFFFFFFFFFFFFCLL) + v7 + 4) & ~v7;
    if (v5 < 0x7FFFFFFF)
    {
      v14 = *(_QWORD *)((((v8 + v13) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(v13);
    }
  }
  else
  {
    if (((((((v8 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v6 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_21C52B058 + 4 * byte_21C5E5580[v11]))();
  }
}

void sub_21C52B0F8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7 + (((_DWORD)v7 + 8) & ~(_DWORD)v7)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X14 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7 + (((_DWORD)v7 + 8) & ~(_DWORD)v7)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v11 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_21C52B208()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x21C52B290);
}

void sub_21C52B210(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x21C52B218);
  JUMPOUT(0x21C52B290);
}

void sub_21C52B26C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x21C52B290);
}

void sub_21C52B274()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x21C52B290);
}

uint64_t sub_21C52B27C@<X0>(int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a1)
    JUMPOUT(0x21C52B290);
  if (a2 < 0x7FFFFFFF)
  {
    if ((a1 & 0x80000000) == 0)
      JUMPOUT(0x21C52B28CLL);
    JUMPOUT(0x21C52B288);
  }
  return (*(uint64_t (**)(unint64_t))(v4 + 56))((((v6 + 7) & 0xFFFFFFFFFFFFFFFCLL) + v5 + 4) & a3);
}

uint64_t sub_21C52B2A8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21C52B324(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 | 3uLL) > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 8) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~(v5 | 3)));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v9 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    v10 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
    *v9 = *v10;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)v9 + v5 + 4) & ~v5, ((unint64_t)v10 + v5 + 4) & ~v5);
  }
  return v3;
}

uint64_t sub_21C52B3D8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((((a1 + 7) & 0xFFFFFFFFFFFFFFFCLL) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

_DWORD *sub_21C52B400(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  _DWORD *v4;
  _DWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 16))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_DWORD *sub_21C52B464(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  _DWORD *v4;
  _DWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_DWORD *sub_21C52B4C8(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  _DWORD *v4;
  _DWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_DWORD *sub_21C52B52C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  _DWORD *v4;
  _DWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_DWORD *)(((unint64_t)a1 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  v5 = (_DWORD *)(((unint64_t)a2 + 7) & 0xFFFFFFFFFFFFFFFCLL);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_21C52B590(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v8 = ((v6 + 8) & ~v6) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 7) & 0xFFFFFFFFFFFFFFFCLL) + v6 + 4) & ~v6);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return v5 + v12 + 1;
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_21C52B650 + 4 * byte_21C5E558F[(v8 - 1)]))();
}

void sub_21C52B6B8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((v8 + 8) & ~v8) + *(_QWORD *)(v6 + 64);
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      v14 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v15 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, ((v8 + 8) & ~v8) + *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_21C52B88C()
{
  JUMPOUT(0x22077F9A0);
}

void sub_21C52B89C()
{
  JUMPOUT(0x22077F9A0);
}

void sub_21C52B8AC()
{
  JUMPOUT(0x22077F9A0);
}

uint64_t sub_21C52B8BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t Value;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  Value = AGGraphGetValue();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, Value, AssociatedTypeWitness);
}

uint64_t sub_21C52B92C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25528A5B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_21C52B96C()
{
  unint64_t result;

  result = qword_255288090;
  if (!qword_255288090)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E9174, &type metadata for DynamicViewContentOffsetTraitKey);
    atomic_store(result, (unint64_t *)&qword_255288090);
  }
  return result;
}

uint64_t sub_21C52B9B0(uint64_t a1)
{
  destroy for MapContentList.ID.Component(a1);
  return a1;
}

unint64_t sub_21C52B9E4()
{
  unint64_t result;

  result = qword_25528A5C0;
  if (!qword_25528A5C0)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EA7A0, &_s10ChildIDKeyVN);
    atomic_store(result, (unint64_t *)&qword_25528A5C0);
  }
  return result;
}

unint64_t sub_21C52BA28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2552880A0;
  if (!qword_2552880A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255288098);
    result = MEMORY[0x22077F9A0](&unk_21C5E98D0, v1);
    atomic_store(result, (unint64_t *)&qword_2552880A0);
  }
  return result;
}

uint64_t sub_21C52BA74()
{
  return sub_21C52BA98();
}

uint64_t sub_21C52BA98()
{
  swift_getAssociatedTypeWitness();
  return AGGraphSetOutputValue();
}

uint64_t sub_21C52BAE0@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  int v5;

  v5 = a1;
  result = sub_21C5E2EC0();
  v4 = *(_QWORD *)(result - 8);
  if (*(_QWORD *)(v4 + 64) == 4)
    return (*(uint64_t (**)(uint64_t, int *, uint64_t))(v4 + 16))(a2, &v5, result);
  __break(1u);
  return result;
}

uint64_t sub_21C52BB38(unsigned int *a1)
{
  uint64_t result;

  result = sub_21C5E2EC0();
  if (*(_QWORD *)(*(_QWORD *)(result - 8) + 64) == 4)
    return *a1;
  __break(1u);
  return result;
}

uint64_t sub_21C52BB74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  char v15;
  void (*v16)(char *, uint64_t);
  void (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v22;
  uint64_t v25;

  v3 = sub_21C5E2E78();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v25 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - v11;
  v13 = v1 + *(int *)(type metadata accessor for MapPitchToggleConfig(0) + 28);
  v14 = *MEMORY[0x24BDEB498];
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v12, *MEMORY[0x24BDEB498], v3);
  v15 = sub_21C5E2E6C();
  v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v16(v12, v3);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  if ((v15 & 1) != 0)
  {
    v17(v10, a1, v3);
    v18 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v10, v3);
    if (v18 == *MEMORY[0x24BDEB480] || v18 == *MEMORY[0x24BDEB490] || v18 == v14)
      return 1;
    if (v18 == *MEMORY[0x24BDEB488])
      return 2;
  }
  else
  {
    v17(v7, v13, v3);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
    if (v22 == *MEMORY[0x24BDEB480] || v22 == *MEMORY[0x24BDEB490] || v22 == v14)
      return 1;
    v10 = v7;
    if (v22 == *MEMORY[0x24BDEB488])
      return 2;
  }
  v16(v10, v3);
  return 1;
}

uint64_t MapPitchToggle.init(scope:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  int *v6;
  uint64_t *v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t result;
  char *v12;

  *a3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289DB0);
  swift_storeEnumTagMultiPayload();
  v6 = (int *)type metadata accessor for MapPitchToggle(0);
  v7 = (uint64_t *)((char *)a3 + v6[5]);
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
  swift_storeEnumTagMultiPayload();
  v8 = (char *)a3 + v6[6];
  *(_QWORD *)v8 = swift_getKeyPath();
  v8[8] = 0;
  v9 = (char *)a3 + v6[7];
  *(_QWORD *)v9 = swift_getKeyPath();
  v9[8] = 0;
  v10 = (char *)a3 + v6[8];
  result = swift_getKeyPath();
  *(_QWORD *)v10 = result;
  v10[8] = 0;
  v12 = (char *)a3 + v6[9];
  *(_QWORD *)v12 = a1;
  v12[8] = a2 & 1;
  return result;
}

uint64_t MapPitchToggle.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  char v62;
  uint64_t KeyPath;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v90 = a1;
  v75 = type metadata accessor for _MapPitchToggle(0);
  MEMORY[0x24BDAC7A8](v75);
  v76 = (uint64_t *)((char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880A8);
  v3 = MEMORY[0x24BDAC7A8](v89);
  v74 = (uint64_t)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v77 = (uint64_t)&v69 - v5;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880B0);
  MEMORY[0x24BDAC7A8](v87);
  v88 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880B8);
  MEMORY[0x24BDAC7A8](v7);
  v72 = (uint64_t)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880C0);
  v9 = MEMORY[0x24BDAC7A8](v86);
  v71 = (uint64_t *)((char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v73 = (uint64_t)&v69 - v11;
  v12 = (int *)type metadata accessor for MapControlsConfig();
  MEMORY[0x24BDAC7A8](v12);
  v83 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_21C5E2E78();
  v84 = *(_QWORD *)(v14 - 8);
  v85 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v91 = (uint64_t)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_21C5E31A8();
  v80 = *(_QWORD *)(v16 - 8);
  v81 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = v18;
  v19 = (int *)type metadata accessor for MapPitchToggleConfig(0);
  v82 = *((_QWORD *)v19 - 1);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v70 = (uint64_t)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v69 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v79 = (char *)&v69 - v25;
  v26 = (int *)type metadata accessor for MapPitchToggle(0);
  v27 = v1 + v26[8];
  v28 = *(_QWORD *)v27;
  v29 = *(_BYTE *)(v27 + 8);
  sub_21C531A90(*(_QWORD *)v27, v29);
  v30 = sub_21C52D7BC(v28, v29);
  sub_21C531A84(v28, v29);
  v31 = v1;
  sub_21C52D204((uint64_t *)&unk_255289DB0, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDCA8], 0xD000000000000011, 0x800000021C5FC0A0, (uint64_t)v18);
  sub_21C52D204((uint64_t *)&unk_2552897E0, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB4A0], 0x536C6F72746E6F43, 0xEB00000000657A69, v91);
  v32 = v1 + v26[6];
  v33 = *(_QWORD *)v32;
  v34 = *(_BYTE *)(v32 + 8);
  j__swift_retain();
  v35 = sub_21C52D43C(v33, v34);
  j__swift_release();
  v36 = (uint64_t)v83;
  if (v30 == 3)
    v37 = 0;
  else
    v37 = v30;
  v24[1] = v37;
  v38 = (uint64_t)v79;
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(&v24[v19[6]], v78, v81);
  (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(&v24[v19[7]], v91, v85);
  *(_QWORD *)&v24[v19[8]] = v35;
  *v24 = 1;
  v39 = (uint64_t)v24;
  v40 = v26;
  sub_21C52AAD4(v39, v38, type metadata accessor for MapPitchToggleConfig);
  v41 = v38;
  sub_21C529664(v38, v36, type metadata accessor for MapPitchToggleConfig);
  v42 = v19;
  v43 = v31;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v82 + 56))(v36, 0, 1, v42);
  v44 = v36 + v12[5];
  v45 = type metadata accessor for MapScaleViewConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
  v46 = v36 + v12[6];
  v47 = type metadata accessor for MapUserLocationButtonConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  v48 = v36 + v12[7];
  v49 = type metadata accessor for MapCompassConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 1, 1, v49);
  *(_WORD *)(v36 + v12[8]) = 2;
  *(_WORD *)(v36 + v12[9]) = 2;
  *(_WORD *)(v36 + v12[10]) = 2;
  v50 = v31 + v26[7];
  v51 = *(_QWORD *)v50;
  LOBYTE(v48) = *(_BYTE *)(v50 + 8);
  sub_21C531A90(*(_QWORD *)v50, v48);
  v52 = sub_21C52D604(v51, v48);
  sub_21C531A84(v51, v48);
  if ((v52 & 1) != 0)
  {
    v53 = sub_21C5E3724();
    v54 = v72;
    sub_21C529664(v36, v72, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
    v55 = v71;
    sub_21C531B18(v54, (uint64_t)v71 + *(int *)(v86 + 36), &qword_2552880B8);
    *v55 = v53;
    sub_21C524980(v54, &qword_2552880B8);
    v56 = &qword_2552880C0;
    v57 = (uint64_t)v55;
    v58 = v73;
    sub_21C52DB08(v57, v73, &qword_2552880C0);
    sub_21C531B18(v58, v88, &qword_2552880C0);
  }
  else
  {
    v59 = v70;
    sub_21C529664(v41, v70, type metadata accessor for MapPitchToggleConfig);
    v60 = (uint64_t *)(v43 + v40[9]);
    v61 = *v60;
    v62 = *((_BYTE *)v60 + 8);
    KeyPath = swift_getKeyPath();
    v65 = v75;
    v64 = (uint64_t)v76;
    *v76 = KeyPath;
    *(_BYTE *)(v64 + 8) = 0;
    sub_21C52AAD4(v59, v64 + *(int *)(v65 + 20), type metadata accessor for MapPitchToggleConfig);
    v66 = v64 + *(int *)(v65 + 24);
    *(_QWORD *)v66 = v61;
    *(_BYTE *)(v66 + 8) = v62;
    v67 = v74;
    sub_21C529664(v64, v74, type metadata accessor for _MapPitchToggle);
    *(_WORD *)(v67 + *(int *)(v89 + 36)) = 257;
    sub_21C52A88C(v64, type metadata accessor for _MapPitchToggle);
    v56 = &qword_2552880A8;
    v58 = v77;
    sub_21C52DB08(v67, v77, &qword_2552880A8);
    sub_21C531B18(v58, v88, &qword_2552880A8);
  }
  swift_storeEnumTagMultiPayload();
  sub_21C52D9D4();
  sub_21C52DA8C();
  sub_21C5E33E8();
  sub_21C524980(v58, v56);
  sub_21C52A88C(v36, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
  return sub_21C52A88C(v41, type metadata accessor for MapPitchToggleConfig);
}

uint64_t sub_21C52C5B4()
{
  sub_21C52F5DC(&qword_255288138, (uint64_t)&unk_21C5E5CA8);
  return sub_21C5E33C4();
}

uint64_t sub_21C52C614()
{
  sub_21C52F5DC(&qword_255288138, (uint64_t)&unk_21C5E5CA8);
  return sub_21C5E3370();
}

uint64_t sub_21C52C674()
{
  return sub_21C5E3670();
}

void sub_21C52C68C()
{
  sub_21C52F5DC(&qword_255288138, (uint64_t)&unk_21C5E5CA8);
  sub_21C5E33B8();
  __break(1u);
}

id sub_21C52C6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _BYTE v31[8];

  v1 = v0;
  v2 = sub_21C5E2E78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_21C5E31A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for _MapPitchToggle(0);
  v11 = v0 + *(int *)(v10 + 24);
  if ((*(_BYTE *)(v11 + 8) & 1) != 0)
    goto LABEL_10;
  v27 = v7;
  v28 = v6;
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)v0;
  v14 = *(_BYTE *)(v0 + 8);
  sub_21C52EF74(*(_QWORD *)v0, v14);
  v15 = sub_21C52F61C(v13, v14);
  sub_21C531AC8(v13, v14);
  if (!*(_QWORD *)(v15 + 16) || (v16 = sub_21C530EAC(v12), (v17 & 1) == 0))
  {
    v29 = 0;
    v30 = 1;
    swift_bridgeObjectRelease();
    v7 = v27;
    goto LABEL_8;
  }
  sub_21C5317D4(*(_QWORD *)(v15 + 56) + 8 * v16, (uint64_t)&v29);
  v30 = 0;
  swift_bridgeObjectRelease();
  v7 = v27;
  if ((v30 & 1) != 0)
  {
LABEL_8:
    sub_21C524980((uint64_t)&v29, &qword_255288140);
LABEL_9:
    v6 = v28;
LABEL_10:
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB158]), sel_init);
    goto LABEL_11;
  }
  sub_21C531764((uint64_t)&v29, (uint64_t)v31);
  v18 = MEMORY[0x22077FAFC](v31);
  if (!v18)
  {
    sub_21C5317A0((uint64_t)v31);
    goto LABEL_9;
  }
  v19 = (void *)v18;
  v20 = objc_msgSend((id)objc_opt_self(), sel_pitchButtonWithMapView_, v18);

  sub_21C5317A0((uint64_t)v31);
  v6 = v28;
LABEL_11:
  v21 = v1 + *(int *)(v10 + 20);
  objc_msgSend(v20, sel_setVisibility_, qword_21C5E5D90[*(char *)(v21 + 1)]);
  v22 = type metadata accessor for MapPitchToggleConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v21 + *(int *)(v22 + 24), v6);
  objc_msgSend(v20, sel__setBackgroundStyle_, sub_21C5DE8D0(v9, 0));
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v21 + *(int *)(v22 + 28), v2);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  v24 = 1;
  if (v23 != *MEMORY[0x24BDEB480] && v23 != *MEMORY[0x24BDEB490] && v23 != *MEMORY[0x24BDEB498])
  {
    if (v23 == *MEMORY[0x24BDEB488])
    {
      v24 = 2;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 8))(v5, v2, 1);
      v24 = 1;
    }
  }
  objc_msgSend(v20, sel__setControlSize_, v24);
  return v20;
}

id sub_21C52C9C8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _BYTE v31[8];

  v2 = v1;
  v4 = sub_21C5E2E78();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_21C5E31A8();
  v8 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for _MapPitchToggle(0);
  v12 = v1 + *(int *)(v11 + 24);
  if ((*(_BYTE *)(v12 + 8) & 1) != 0)
    goto LABEL_8;
  v26 = *(_QWORD *)v12;
  v27 = a1;
  v13 = *(_QWORD *)v1;
  v14 = *(_BYTE *)(v1 + 8);
  sub_21C52EF74(*(_QWORD *)v1, v14);
  v15 = sub_21C52F61C(v13, v14);
  sub_21C531AC8(v13, v14);
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_21C530EAC(v26), (v17 & 1) != 0))
  {
    sub_21C5317D4(*(_QWORD *)(v15 + 56) + 8 * v16, (uint64_t)&v29);
    v30 = 0;
    swift_bridgeObjectRelease();
    a1 = v27;
    if ((v30 & 1) == 0)
    {
      sub_21C531764((uint64_t)&v29, (uint64_t)v31);
      v18 = (void *)MEMORY[0x22077FAFC](v31);
      objc_msgSend(a1, sel_setMapView_, v18);

      sub_21C5317A0((uint64_t)v31);
      goto LABEL_8;
    }
  }
  else
  {
    v29 = 0;
    v30 = 1;
    swift_bridgeObjectRelease();
    a1 = v27;
  }
  sub_21C524980((uint64_t)&v29, &qword_255288140);
LABEL_8:
  v19 = v2 + *(int *)(v11 + 20);
  objc_msgSend(a1, sel_setVisibility_, qword_21C5E5D90[*(char *)(v19 + 1)]);
  v20 = type metadata accessor for MapPitchToggleConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v19 + *(int *)(v20 + 24), v28);
  objc_msgSend(a1, sel__setBackgroundStyle_, sub_21C5DE8D0(v10, 0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v19 + *(int *)(v20 + 28), v4);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v21 == *MEMORY[0x24BDEB480] || v21 == *MEMORY[0x24BDEB490] || v21 == *MEMORY[0x24BDEB498])
    goto LABEL_18;
  if (v21 != *MEMORY[0x24BDEB488])
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_18:
    v24 = 1;
    return objc_msgSend(a1, sel__setControlSize_, v24);
  }
  v24 = 2;
  return objc_msgSend(a1, sel__setControlSize_, v24);
}

uint64_t sub_21C52CC94()
{
  return sub_21C5E3364();
}

uint64_t sub_21C52CCD4()
{
  return sub_21C5E3244();
}

uint64_t sub_21C52CCF4()
{
  return sub_21C5E3244();
}

uint64_t type metadata accessor for MapPitchToggle(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_2552880F8);
}

uint64_t sub_21C52CD28()
{
  return sub_21C5E31E4();
}

uint64_t sub_21C52CD48()
{
  return sub_21C5E31E4();
}

uint64_t sub_21C52CD68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_21C5E2E78();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return MEMORY[0x22077E710](v4);
}

uint64_t sub_21C52CDE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_21C531BA0();
  result = sub_21C5E3298();
  *a1 = v3;
  return result;
}

uint64_t sub_21C52CE34()
{
  sub_21C531BA0();
  return sub_21C5E32A4();
}

uint64_t sub_21C52CE7C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_21C531B5C();
  result = sub_21C5E3298();
  *a1 = v3;
  return result;
}

uint64_t sub_21C52CEC8()
{
  sub_21C531B5C();
  return sub_21C5E32A4();
}

uint64_t sub_21C52CF10@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_21C531AD4();
  result = sub_21C5E3298();
  *a1 = v3;
  return result;
}

uint64_t sub_21C52CF5C()
{
  sub_21C531AD4();
  swift_bridgeObjectRetain();
  return sub_21C5E32A4();
}

uint64_t sub_21C52CFB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21C5E31B4();
  *a1 = result;
  return result;
}

uint64_t sub_21C52CFE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21C5E31B4();
  *a1 = result;
  return result;
}

uint64_t sub_21C52D008()
{
  swift_retain();
  return sub_21C5E31C0();
}

uint64_t sub_21C52D030()
{
  swift_retain();
  return sub_21C5E31C0();
}

uint64_t sub_21C52D058@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_21C531BA0();
  result = sub_21C5E3298();
  *a1 = v3;
  return result;
}

uint64_t sub_21C52D0A4()
{
  sub_21C531BA0();
  return sub_21C5E32A4();
}

uint64_t sub_21C52D0EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_21C531B5C();
  result = sub_21C5E3298();
  *a1 = v3;
  return result;
}

uint64_t sub_21C52D138()
{
  sub_21C531B5C();
  return sub_21C5E32A4();
}

uint64_t type metadata accessor for _MapPitchToggle(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255288128);
}

uint64_t type metadata accessor for MapPitchToggleConfig(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255288118);
}

uint64_t sub_21C52D1A8@<X0>(uint64_t a1@<X8>)
{
  return sub_21C52D204((uint64_t *)&unk_255289DB0, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDCA8], 0xD000000000000011, 0x800000021C5FC0A0, a1);
}

uint64_t sub_21C52D1D4@<X0>(uint64_t a1@<X8>)
{
  return sub_21C52D204((uint64_t *)&unk_2552897E0, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB4A0], 0x536C6F72746E6F43, 0xEB00000000657A69, a1);
}

uint64_t sub_21C52D204@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v9 = v5;
  v11 = sub_21C5E328C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C531B18(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = sub_21C5E3B38();
    v21 = sub_21C5E35EC();
    if (os_log_type_enabled(v21, v20))
    {
      v26 = a4;
      v22 = swift_slowAlloc();
      v27 = a5;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      v30 = v24;
      *(_DWORD *)v23 = 136315138;
      v29 = sub_21C53083C(v28, v26, &v30);
      sub_21C5E3BC8();
      _os_log_impl(&dword_21C51F000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077FA6C](v24, -1, -1);
      MEMORY[0x22077FA6C](v23, -1, -1);
    }

    sub_21C5E3280();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_21C52D43C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_21C5E328C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v8 = sub_21C5E3B38();
    v9 = sub_21C5E35EC();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_21C53083C(0x6C616E6F6974704FLL, 0xEF3E726F6C6F433CLL, &v15);
      sub_21C5E3BC8();
      _os_log_impl(&dword_21C51F000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077FA6C](v12, -1, -1);
      MEMORY[0x22077FA6C](v11, -1, -1);
    }

    sub_21C5E3280();
    swift_getAtKeyPath();
    j__swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_21C52D604(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_21C5E328C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_21C5E3B38();
  v9 = sub_21C5E35EC();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_21C53083C(1819242306, 0xE400000000000000, &v15);
    sub_21C5E3BC8();
    _os_log_impl(&dword_21C51F000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22077FA6C](v12, -1, -1);
    MEMORY[0x22077FA6C](v11, -1, -1);
  }

  sub_21C5E3280();
  swift_getAtKeyPath();
  sub_21C531A84(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_21C52D7BC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_21C5E328C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    v8 = sub_21C5E3B38();
    v9 = sub_21C5E35EC();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_21C53083C(0xD000000000000014, 0x800000021C5FC0C0, &v15);
      sub_21C5E3BC8();
      _os_log_impl(&dword_21C51F000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077FA6C](v12, -1, -1);
      MEMORY[0x22077FA6C](v11, -1, -1);
    }

    sub_21C5E3280();
    swift_getAtKeyPath();
    sub_21C531A84(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_21C52D984@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_21C531AD4();
  result = sub_21C5E3298();
  *a1 = v3;
  return result;
}

unint64_t sub_21C52D9D4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_2552880C8;
  if (!qword_2552880C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552880C0);
    v2 = sub_21C52DA40();
    v3[0] = MEMORY[0x24BDF3E20];
    v3[1] = v2;
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2552880C8);
  }
  return result;
}

unint64_t sub_21C52DA40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2552880D0;
  if (!qword_2552880D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552880B8);
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDF0B90], v1);
    atomic_store(result, (unint64_t *)&qword_2552880D0);
  }
  return result;
}

unint64_t sub_21C52DA8C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2552880D8;
  if (!qword_2552880D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552880A8);
    v2[0] = sub_21C52F5DC(&qword_2552880E0, (uint64_t)&unk_21C5E5D38);
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2552880D8);
  }
  return result;
}

uint64_t sub_21C52DB08(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_21C52DB4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for MapPitchToggle(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char *v29;
  char *v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289DB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_21C5E31A8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_21C5E2E78();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_QWORD *)v15;
    v17 = v15[8];
    j__swift_retain();
    *(_QWORD *)v14 = v16;
    v14[8] = v17;
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *(_QWORD *)v20;
    v22 = v20[8];
    sub_21C531A90(*(_QWORD *)v20, v22);
    *(_QWORD *)v19 = v21;
    v19[8] = v22;
    v23 = a3[8];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = *(_QWORD *)v25;
    v27 = v25[8];
    sub_21C531A90(*(_QWORD *)v25, v27);
    *(_QWORD *)v24 = v26;
    v24[8] = v27;
    v28 = a3[9];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
  }
  return a1;
}

uint64_t destroy for MapPitchToggle(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289DB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_21C5E31A8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + a2[5];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_21C5E2E78();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  j__swift_release();
  sub_21C531A84(*(_QWORD *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
  return sub_21C531A84(*(_QWORD *)(a1 + a2[8]), *(_BYTE *)(a1 + a2[8] + 8));
}

_QWORD *initializeWithCopy for MapPitchToggle(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  char *v28;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289DB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_21C5E31A8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_21C5E2E78();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  j__swift_retain();
  *(_QWORD *)v12 = v14;
  v12[8] = v15;
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)v18;
  v20 = v18[8];
  sub_21C531A90(*(_QWORD *)v18, v20);
  *(_QWORD *)v17 = v19;
  v17[8] = v20;
  v21 = a3[8];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)v23;
  v25 = v23[8];
  sub_21C531A90(*(_QWORD *)v23, v25);
  *(_QWORD *)v22 = v24;
  v22[8] = v25;
  v26 = a3[9];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  return a1;
}

_QWORD *assignWithCopy for MapPitchToggle(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  if (a1 != a2)
  {
    sub_21C524980((uint64_t)a1, (uint64_t *)&unk_255289DB0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289DB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_21C5E31A8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v7 = a3[5];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_21C524980((uint64_t)a1 + v7, (uint64_t *)&unk_2552897E0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_21C5E2E78();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  j__swift_retain();
  *(_QWORD *)v12 = v14;
  v12[8] = v15;
  j__swift_release();
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)v18;
  v20 = v18[8];
  sub_21C531A90(*(_QWORD *)v18, v20);
  v21 = *(_QWORD *)v17;
  v22 = v17[8];
  *(_QWORD *)v17 = v19;
  v17[8] = v20;
  sub_21C531A84(v21, v22);
  v23 = a3[8];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *(_QWORD *)v25;
  v27 = v25[8];
  sub_21C531A90(*(_QWORD *)v25, v27);
  v28 = *(_QWORD *)v24;
  v29 = v24[8];
  *(_QWORD *)v24 = v26;
  v24[8] = v27;
  sub_21C531A84(v28, v29);
  v30 = a3[9];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *(_QWORD *)v31 = v33;
  return a1;
}

char *initializeWithTake for MapPitchToggle(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289DB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_21C5E31A8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_21C5E2E78();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = &a1[v13];
  v16 = &a2[v13];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = &a1[v14];
  v18 = &a2[v14];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = a3[8];
  v20 = a3[9];
  v21 = &a1[v19];
  v22 = &a2[v19];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  v23 = &a1[v20];
  v24 = &a2[v20];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v24[8];
  return a1;
}

char *assignWithTake for MapPitchToggle(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char *v30;
  char *v31;

  if (a1 != a2)
  {
    sub_21C524980((uint64_t)a1, (uint64_t *)&unk_255289DB0);
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289DB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_21C5E31A8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_21C524980((uint64_t)&a1[v8], (uint64_t *)&unk_2552897E0);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_21C5E2E78();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(_QWORD *)v15;
  LOBYTE(v15) = v15[8];
  *(_QWORD *)v14 = v16;
  v14[8] = (char)v15;
  j__swift_release();
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(_QWORD *)v19;
  LOBYTE(v19) = v19[8];
  v21 = *(_QWORD *)v18;
  v22 = v18[8];
  *(_QWORD *)v18 = v20;
  v18[8] = (char)v19;
  sub_21C531A84(v21, v22);
  v23 = a3[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *(_QWORD *)v25;
  LOBYTE(v25) = v25[8];
  v27 = *(_QWORD *)v24;
  v28 = v24[8];
  *(_QWORD *)v24 = v26;
  v24[8] = (char)v25;
  sub_21C531A84(v27, v28);
  v29 = a3[9];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v31[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for MapPitchToggle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C52E55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880E8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880F0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 > 1)
    return (v14 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MapPitchToggle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C52E618(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880E8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880F0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
  return result;
}

void sub_21C52E6C8()
{
  unint64_t v0;
  unint64_t v1;

  sub_21C52E784(319, (unint64_t *)&unk_2552897B0, (void (*)(uint64_t))MEMORY[0x24BDEDCA8]);
  if (v0 <= 0x3F)
  {
    sub_21C52E784(319, (unint64_t *)&qword_255289D70, (void (*)(uint64_t))MEMORY[0x24BDEB4A0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_21C52E784(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_21C5E2E84();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_21C52E7D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255288108;
  if (!qword_255288108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255288110);
    v2[0] = sub_21C52D9D4();
    v2[1] = sub_21C52DA8C();
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255288108);
  }
  return result;
}

uint64_t *sub_21C52E840(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_21C5E31A8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_21C5E2E78();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  swift_retain();
  return v4;
}

uint64_t sub_21C52E910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_21C5E31A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = sub_21C5E2E78();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_release();
}

_WORD *sub_21C52E988(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C5E31A8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_21C5E2E78();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_retain();
  return a1;
}

_BYTE *sub_21C52EA30(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_21C5E31A8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_21C5E2E78();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_retain();
  swift_release();
  return a1;
}

_WORD *sub_21C52EAEC(_WORD *a1, _WORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C5E31A8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_21C5E2E78();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_BYTE *sub_21C52EB90(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_21C5E31A8();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_21C5E2E78();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  swift_release();
  return a1;
}

uint64_t sub_21C52EC44()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C52EC50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  int v13;

  v6 = sub_21C5E31A8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_21C5E2E78();
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[8]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  v13 = v12 - 1;
  if (v13 < 0)
    v13 = -1;
  return (v13 + 1);
}

uint64_t sub_21C52ED00()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C52ED0C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = sub_21C5E31A8();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = sub_21C5E2E78();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[8]) = a2;
  return result;
}

uint64_t sub_21C52EDAC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_21C5E31A8();
  if (v1 <= 0x3F)
  {
    result = sub_21C5E2E78();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_21C52EE4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v24 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_21C52EF74(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(int *)(a3 + 20);
    v10 = a1 + v9;
    v11 = a2 + v9;
    *(_WORD *)(a1 + v9) = *(_WORD *)(a2 + v9);
    v12 = (int *)type metadata accessor for MapPitchToggleConfig(0);
    v13 = v12[6];
    v14 = v10 + v13;
    v15 = v11 + v13;
    v16 = sub_21C5E31A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = v12[7];
    v18 = v10 + v17;
    v19 = v11 + v17;
    v20 = sub_21C5E2E78();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    *(_QWORD *)(v10 + v12[8]) = *(_QWORD *)(v11 + v12[8]);
    v21 = *(int *)(a3 + 24);
    v22 = a1 + v21;
    v23 = a2 + v21;
    *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
    *(_QWORD *)v22 = *(_QWORD *)v23;
  }
  swift_retain();
  return a1;
}

uint64_t sub_21C52EF74(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRetain();
  else
    return swift_retain();
}

uint64_t sub_21C52EF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_21C531AC8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for MapPitchToggleConfig(0);
  v6 = v4 + *(int *)(v5 + 24);
  v7 = sub_21C5E31A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + *(int *)(v5 + 28);
  v9 = sub_21C5E2E78();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_release();
}

uint64_t sub_21C52F018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_21C52EF74(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(int *)(a3 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_WORD *)(a1 + v8) = *(_WORD *)(a2 + v8);
  v11 = (int *)type metadata accessor for MapPitchToggleConfig(0);
  v12 = v11[6];
  v13 = v9 + v12;
  v14 = v10 + v12;
  v15 = sub_21C5E31A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = v11[7];
  v17 = v9 + v16;
  v18 = v10 + v16;
  v19 = sub_21C5E2E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  *(_QWORD *)(v9 + v11[8]) = *(_QWORD *)(v10 + v11[8]);
  v20 = *(int *)(a3 + 24);
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  swift_retain();
  return a1;
}

uint64_t sub_21C52F118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_21C52EF74(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_21C531AC8(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (_BYTE *)(a1 + v10);
  v12 = a2 + v10;
  *v11 = *(_BYTE *)(a2 + v10);
  v11[1] = *(_BYTE *)(a2 + v10 + 1);
  v13 = (int *)type metadata accessor for MapPitchToggleConfig(0);
  v14 = v13[6];
  v15 = &v11[v14];
  v16 = v12 + v14;
  v17 = sub_21C5E31A8();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = v13[7];
  v19 = &v11[v18];
  v20 = v12 + v18;
  v21 = sub_21C5E2E78();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  *(_QWORD *)&v11[v13[8]] = *(_QWORD *)(v12 + v13[8]);
  swift_retain();
  swift_release();
  v22 = *(int *)(a3 + 24);
  v23 = a1 + v22;
  v24 = (uint64_t *)(a2 + v22);
  v25 = *v24;
  *(_BYTE *)(v23 + 8) = *((_BYTE *)v24 + 8);
  *(_QWORD *)v23 = v25;
  return a1;
}

uint64_t sub_21C52F238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_WORD *)(a1 + v6) = *(_WORD *)(a2 + v6);
  v9 = (int *)type metadata accessor for MapPitchToggleConfig(0);
  v10 = v9[6];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = sub_21C5E31A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = v9[7];
  v15 = v7 + v14;
  v16 = v8 + v14;
  v17 = sub_21C5E2E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *(_QWORD *)(v7 + v9[8]) = *(_QWORD *)(v8 + v9[8]);
  v18 = *(int *)(a3 + 24);
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  return a1;
}

uint64_t sub_21C52F328(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_21C531AC8(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = (_BYTE *)(a1 + v10);
  v12 = (uint64_t)a2 + v10;
  *v11 = *((_BYTE *)a2 + v10);
  v11[1] = *((_BYTE *)a2 + v10 + 1);
  v13 = (int *)type metadata accessor for MapPitchToggleConfig(0);
  v14 = v13[6];
  v15 = &v11[v14];
  v16 = v12 + v14;
  v17 = sub_21C5E31A8();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = v13[7];
  v19 = &v11[v18];
  v20 = v12 + v18;
  v21 = sub_21C5E2E78();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  *(_QWORD *)&v11[v13[8]] = *(_QWORD *)(v12 + v13[8]);
  swift_release();
  v22 = *(int *)(a3 + 24);
  v23 = a1 + v22;
  v24 = (uint64_t)a2 + v22;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  return a1;
}

uint64_t sub_21C52F434()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C52F440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for MapPitchToggleConfig(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_21C52F4B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C52F4C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = type metadata accessor for MapPitchToggleConfig(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21C52F530()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MapPitchToggleConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C52F5AC()
{
  return sub_21C52F5DC(&qword_2552880E0, (uint64_t)&unk_21C5E5D38);
}

uint64_t sub_21C52F5D0()
{
  return MEMORY[0x24BDF5560];
}

uint64_t sub_21C52F5DC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for _MapPitchToggle(255);
    result = MEMORY[0x22077F9A0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21C52F61C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_21C5E328C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    v8 = sub_21C5E3B38();
    v9 = sub_21C5E35EC();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_21C53083C(0xD000000000000010, 0x800000021C5FBD40, &v15);
      sub_21C5E3BC8();
      _os_log_impl(&dword_21C51F000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077FA6C](v12, -1, -1);
      MEMORY[0x22077FA6C](v11, -1, -1);
    }

    sub_21C5E3280();
    swift_getAtKeyPath();
    sub_21C531AC8(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_21C52F7E4@<X0>(uint64_t a1@<X8>)
{
  return sub_21C52D204(&qword_255288150, (uint64_t (*)(_QWORD))MEMORY[0x24BDEE8C8], 0xD000000000000012, 0x800000021C5FBFA0, a1);
}

uint64_t sub_21C52F810@<X0>(uint64_t a1@<X8>)
{
  return sub_21C52D204(&qword_255288B30, (uint64_t (*)(_QWORD))MEMORY[0x24BDED130], 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_21C52F844@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;

  v3 = sub_21C5E328C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 81) == 1)
  {
    v8 = *(_BYTE *)(v1 + 80);
    v9 = *(_QWORD *)(v1 + 72);
    v10 = *(_DWORD *)(v1 + 48);
    v12 = *(_QWORD *)(v1 + 32);
    v11 = *(_QWORD *)(v1 + 40);
    v13 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)a1 = v7;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
    *(_QWORD *)(a1 + 24) = v13;
    *(_WORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v11;
    *(_BYTE *)(a1 + 48) = v10 & 1;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 56);
    *(_QWORD *)(a1 + 72) = v9;
    *(_BYTE *)(a1 + 80) = v8;
    return sub_21C531930(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_21C531870);
  }
  else
  {
    sub_21C531930(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_21C531870);
    v15 = sub_21C5E3B38();
    v16 = sub_21C5E35EC();
    v17 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21[1] = v7;
      v20 = v19;
      v22 = v19;
      *(_DWORD *)v18 = 136315138;
      v21[0] = v18 + 4;
      v21[2] = sub_21C53083C(0x656C79745370614DLL, 0xE800000000000000, &v22);
      sub_21C5E3BC8();
      _os_log_impl(&dword_21C51F000, v16, v17, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077FA6C](v20, -1, -1);
      MEMORY[0x22077FA6C](v18, -1, -1);
    }

    sub_21C5E3280();
    swift_getAtKeyPath();
    sub_21C531930(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_21C53198C);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

double sub_21C52FA70(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  double v15;

  v4 = sub_21C5E328C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  swift_retain();
  v8 = sub_21C5E3B38();
  v9 = sub_21C5E35EC();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = *(double *)&v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_21C53083C(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v15);
    sub_21C5E3BC8();
    _os_log_impl(&dword_21C51F000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22077FA6C](v12, -1, -1);
    MEMORY[0x22077FA6C](v11, -1, -1);
  }

  sub_21C5E3280();
  swift_getAtKeyPath();
  sub_21C531A84(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_21C52FC30(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v8 = sub_21C5E328C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) != 0)
  {
    sub_21C531C1C(a1);
  }
  else
  {
    swift_retain();
    v12 = sub_21C5E3B38();
    v13 = sub_21C5E35EC();
    v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21 = v19;
      *(_DWORD *)v15 = 136315138;
      v18 = v15 + 4;
      v20 = sub_21C53083C(0xD000000000000028, 0x800000021C5FC0E0, &v21);
      sub_21C5E3BC8();
      _os_log_impl(&dword_21C51F000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      v16 = v19;
      swift_arrayDestroy();
      MEMORY[0x22077FA6C](v16, -1, -1);
      MEMORY[0x22077FA6C](v15, -1, -1);
    }

    sub_21C5E3280();
    swift_getAtKeyPath();
    sub_21C531BE4(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v21;
  }
  return a1;
}

uint64_t sub_21C52FE24(unint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_21C5E328C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v14 = a1 >> 8;
    v13 = a1 & 1;
  }
  else
  {
    swift_retain();
    v8 = sub_21C5E3B38();
    v9 = sub_21C5E35EC();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v17 = v12;
      *(_DWORD *)v11 = 136315138;
      v16 = sub_21C53083C(0x697274744170614DLL, 0xEE006E6F69747562, &v17);
      sub_21C5E3BC8();
      _os_log_impl(&dword_21C51F000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077FA6C](v12, -1, -1);
      MEMORY[0x22077FA6C](v11, -1, -1);
    }

    sub_21C5E3280();
    swift_getAtKeyPath();
    sub_21C531A84(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v13 = v17;
    LODWORD(v14) = BYTE1(v17);
  }
  return v13 | ((_DWORD)v14 << 8);
}

uint64_t sub_21C52FFFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v2 = v1;
  v4 = sub_21C5E328C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289DC0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C531B18(v2, (uint64_t)v10, (uint64_t *)&unk_255289DC0);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_21C52AAD4((uint64_t)v10, a1, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
  v12 = sub_21C5E3B38();
  v13 = sub_21C5E35EC();
  v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v18[1] = a1;
    v17 = v16;
    v19 = v16;
    *(_DWORD *)v15 = 136315138;
    v18[2] = sub_21C53083C(0xD000000000000011, 0x800000021C5FBFC0, &v19);
    sub_21C5E3BC8();
    _os_log_impl(&dword_21C51F000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22077FA6C](v17, -1, -1);
    MEMORY[0x22077FA6C](v15, -1, -1);
  }

  sub_21C5E3280();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_21C53022C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_21C530284(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_21C531C4C, 0xD00000000000001ELL, 0x800000021C5FC040, (uint64_t (*)(void))sub_21C531C48);
}

uint64_t sub_21C530258(uint64_t a1, uint64_t a2, char a3)
{
  return sub_21C530284(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_21C531AAC, 0xD000000000000024, 0x800000021C5FC010, (uint64_t (*)(void))sub_21C531A9C);
}

uint64_t sub_21C530284(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, unint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  os_log_type_t v18;
  NSObject *v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  unint64_t v27;
  uint64_t (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v14 = sub_21C5E328C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    a4(a1, a2);
  }
  else
  {
    v29 = a5;
    swift_retain();
    v18 = sub_21C5E3B38();
    v19 = sub_21C5E35EC();
    if (os_log_type_enabled(v19, v18))
    {
      v20 = swift_slowAlloc();
      v27 = a6;
      v21 = (uint8_t *)v20;
      v22 = swift_slowAlloc();
      v28 = a7;
      v23 = v22;
      v31 = v22;
      *(_DWORD *)v21 = 136315138;
      v26[1] = v21 + 4;
      v30 = sub_21C53083C(v29, v27, &v31);
      sub_21C5E3BC8();
      _os_log_impl(&dword_21C51F000, v19, v18, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v21, 0xCu);
      swift_arrayDestroy();
      v24 = v23;
      a7 = v28;
      MEMORY[0x22077FA6C](v24, -1, -1);
      MEMORY[0x22077FA6C](v21, -1, -1);
    }

    sub_21C5E3280();
    swift_getAtKeyPath();
    sub_21C531ABC(a1, a2, 0, a7);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return v31;
  }
  return a1;
}

uint64_t sub_21C530478@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v6 = sub_21C5E328C();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *a3 = a1;
  }
  else
  {
    sub_21C531A90(a1, 0);
    v11 = sub_21C5E3B38();
    v12 = sub_21C5E35EC();
    v13 = v11;
    if (os_log_type_enabled(v12, v11))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v17[1] = a3;
      v16 = v15;
      v18 = v15;
      *(_DWORD *)v14 = 136315138;
      v17[2] = sub_21C53083C(0xD00000000000002ELL, 0x800000021C5FBFE0, &v18);
      sub_21C5E3BC8();
      _os_log_impl(&dword_21C51F000, v12, v13, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077FA6C](v16, -1, -1);
      MEMORY[0x22077FA6C](v14, -1, -1);
    }

    sub_21C5E3280();
    swift_getAtKeyPath();
    sub_21C531A84(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_21C530648(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_21C5E328C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    v8 = sub_21C5E3B38();
    v9 = sub_21C5E35EC();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_21C53083C(0xD00000000000001FLL, 0x800000021C5FC060, &v15);
      sub_21C5E3BC8();
      _os_log_impl(&dword_21C51F000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077FA6C](v12, -1, -1);
      MEMORY[0x22077FA6C](v11, -1, -1);
    }

    sub_21C5E3280();
    swift_getAtKeyPath();
    sub_21C531AC8(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_21C530810@<X0>(uint64_t a1@<X8>)
{
  return sub_21C52D204(&qword_255288158, (uint64_t (*)(_QWORD))MEMORY[0x24BDED8A8], 0xD000000000000010, 0x800000021C5FC080, a1);
}

uint64_t sub_21C53083C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_21C53090C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_21C531830((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_21C531830((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_21C53090C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_21C5E3BD4();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_21C530AC4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_21C5E3CAC();
  if (!v8)
  {
    sub_21C5E3D3C();
    __break(1u);
LABEL_17:
    result = sub_21C5E3D90();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_21C530AC4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_21C530B58(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21C530D30(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_21C530D30(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_21C530B58(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_21C530CCC(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_21C5E3C70();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_21C5E3D3C();
      __break(1u);
LABEL_10:
      v2 = sub_21C5E3994();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_21C5E3D90();
    __break(1u);
LABEL_14:
    result = sub_21C5E3D3C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_21C530CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288148);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_21C530D30(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288148);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21C5E3D90();
  __break(1u);
  return result;
}

unint64_t sub_21C530E7C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C5E3E08();
  return sub_21C531174(a1, v2);
}

unint64_t sub_21C530EAC(uint64_t a1)
{
  uint64_t v2;

  sub_21C5E3E14();
  sub_21C5E3874();
  v2 = sub_21C5E3E44();
  return sub_21C531210(a1, v2);
}

unint64_t sub_21C530F04(uint64_t a1)
{
  uint64_t v2;

  sub_21C5E3E14();
  sub_21C5E3E20();
  v2 = sub_21C5E3E44();
  return sub_21C5312E0(a1, v2);
}

unint64_t sub_21C530F5C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C5E3B8C();
  return sub_21C53147C(a1, v2, &qword_255288BE0);
}

unint64_t sub_21C530FA8(uint64_t a1)
{
  uint64_t v2;
  _BYTE v4[72];

  sub_21C5E3E14();
  swift_bridgeObjectRetain();
  sub_21C5BA288((uint64_t)v4, a1);
  swift_bridgeObjectRelease();
  v2 = sub_21C5E3E44();
  return sub_21C53137C(a1, v2);
}

unint64_t sub_21C531010(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C5E3B8C();
  return sub_21C53147C(a1, v2, (unint64_t *)&qword_255288C20);
}

unint64_t sub_21C53105C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C5E3B8C();
  return sub_21C53147C(a1, v2, &qword_255288C40);
}

unint64_t sub_21C5310A8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C5E3B8C();
  return sub_21C53158C(a1, v2, (void (*)(_QWORD))type metadata accessor for MapBridgingUserAnnotation);
}

unint64_t sub_21C5310EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C5E3B8C();
  return sub_21C53158C(a1, v2, (void (*)(_QWORD))type metadata accessor for MapBridgingMarker);
}

unint64_t sub_21C531130(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_21C5E3B8C();
  return sub_21C53158C(a1, v2, (void (*)(_QWORD))type metadata accessor for MapBridgingCustomAnnotation);
}

unint64_t sub_21C531174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_21C531210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0 && (sub_21C5E3868() & 1) == 0)
  {
    v6 = ~v4;
    for (i = (i + 1) & v6; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v6)
    {
      if ((sub_21C5E3868() & 1) != 0)
        break;
    }
  }
  return i;
}

unint64_t sub_21C5312E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_21C53137C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v7 = swift_bridgeObjectRetain();
    v8 = sub_21C5B7F6C(v7, a1);
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = swift_bridgeObjectRetain();
        v11 = sub_21C5B7F6C(v10, a1);
        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_21C53147C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_21C531A4C(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_21C5E3B98();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_21C5E3B98();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_21C53158C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    a3(0);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_21C5E3B98();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_21C5E3B98();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_21C531694(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  if (*a1 == *a2 && (sub_21C5E2E54() & 1) != 0)
  {
    v4 = type metadata accessor for MapPitchToggleConfig(0);
    if ((sub_21C5E3178() & 1) != 0 && (sub_21C5E2E6C() & 1) != 0)
    {
      v5 = *(int *)(v4 + 32);
      v6 = *(_QWORD *)&a2[v5];
      if (*(_QWORD *)&a1[v5])
      {
        if (v6)
        {
          swift_retain();
          swift_retain();
          v7 = sub_21C5E3718();
          swift_release();
          swift_release();
          if ((v7 & 1) != 0)
            return 1;
        }
      }
      else if (!v6)
      {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_21C531764(uint64_t a1, uint64_t a2)
{
  initializeWithTake for MapViewReference(a2, a1);
  return a2;
}

uint64_t sub_21C5317A0(uint64_t a1)
{
  destroy for MapViewReference();
  return a1;
}

uint64_t sub_21C5317D4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MapViewReference(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_21C531830(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21C531870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12)
{
  if ((a12 & 1) == 0)
    return swift_retain();
  sub_21C5318C8(a1, a2, a3);
  return sub_21C5318FC(a8, a9);
}

uint64_t sub_21C5318C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21C5318FC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_21C531930(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_WORD *)(a1 + 80));
  return a1;
}

uint64_t sub_21C53198C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char a12)
{
  if ((a12 & 1) == 0)
    return swift_release();
  sub_21C5319E4(a1, a2, a3);
  return sub_21C531A18(a8, a9);
}

uint64_t sub_21C5319E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21C531A18(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21C531A4C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_21C531A84(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_21C531A90(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_21C531A9C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_21C531AAC(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_21C531ABC(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if ((a3 & 1) != 0)
    return a4();
  else
    return swift_release();
}

uint64_t sub_21C531AC8(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return swift_release();
}

unint64_t sub_21C531AD4()
{
  unint64_t result;

  result = qword_255288160;
  if (!qword_255288160)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EC94C, &type metadata for MapScopeRegistryKey);
    atomic_store(result, (unint64_t *)&qword_255288160);
  }
  return result;
}

uint64_t sub_21C531B18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_21C531B5C()
{
  unint64_t result;

  result = qword_255288168;
  if (!qword_255288168)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EC708, &type metadata for DefaultMapControlsVisibilityKey);
    atomic_store(result, (unint64_t *)&qword_255288168);
  }
  return result;
}

unint64_t sub_21C531BA0()
{
  unint64_t result;

  result = qword_255288170;
  if (!qword_255288170)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EC6D0, &type metadata for DefaultIsInMapControlsKey);
    atomic_store(result, (unint64_t *)&qword_255288170);
  }
  return result;
}

uint64_t sub_21C531BE4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_21C531BF0(result);
  else
    return swift_release();
}

uint64_t sub_21C531BF0(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_21C531C1C(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t MapContent.tint<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *KeyPath;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t *)swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a3);
  v12 = sub_21C5E2F50();
  sub_21C5C1FBC(KeyPath, (uint64_t)&v12, a2);
  swift_release();
  return swift_release();
}

uint64_t sub_21C531D3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21C5E31CC();
  *a1 = result;
  return result;
}

uint64_t sub_21C531D64()
{
  swift_retain();
  return sub_21C5E31D8();
}

uint64_t sub_21C531D8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255288178);
  v2 = sub_21C5E30A0();
  v4[0] = v1;
  v4[1] = &off_255285F08;
  return MEMORY[0x22077F9A0](&protocol conformance descriptor for <> ModifiedContent<A, B>, v2, v4);
}

uint64_t MapContent.annotationTitles(_:)(char a1, uint64_t a2)
{
  return sub_21C531E44(a1, a2);
}

uint64_t sub_21C531DFC()
{
  return sub_21C531EC4((void (*)(void))sub_21C53206C);
}

uint64_t sub_21C531E10@<X0>(_BYTE *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_21C53206C, a1);
}

uint64_t sub_21C531E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_21C53206C);
}

uint64_t MapContent.annotationSubtitles(_:)(char a1, uint64_t a2)
{
  return sub_21C531E44(a1, a2);
}

uint64_t sub_21C531E44(char a1, uint64_t a2)
{
  uint64_t *KeyPath;
  char v6;

  KeyPath = (uint64_t *)swift_getKeyPath();
  v6 = a1;
  sub_21C5C1FBC(KeyPath, (uint64_t)&v6, a2);
  return swift_release();
}

uint64_t sub_21C531EB0()
{
  return sub_21C531EC4((void (*)(void))sub_21C532028);
}

uint64_t sub_21C531EC4(void (*a1)(void))
{
  unsigned __int8 v2;

  a1();
  sub_21C5E3298();
  return v2;
}

uint64_t sub_21C531F04@<X0>(_BYTE *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_21C532028, a1);
}

uint64_t keypath_getTm@<X0>(void (*a1)(void)@<X3>, _BYTE *a2@<X8>)
{
  uint64_t result;
  char v4;

  a1();
  result = sub_21C5E3298();
  *a2 = v4;
  return result;
}

uint64_t sub_21C531F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_21C532028);
}

uint64_t keypath_setTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5();
  return sub_21C5E32A4();
}

uint64_t sub_21C531FC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255288180);
  v2 = sub_21C5E30A0();
  v4[0] = v1;
  v4[1] = &off_255285F08;
  return MEMORY[0x22077F9A0](&protocol conformance descriptor for <> ModifiedContent<A, B>, v2, v4);
}

unint64_t sub_21C532028()
{
  unint64_t result;

  result = qword_255288188;
  if (!qword_255288188)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E5E88, &type metadata for AnnotationSubtitleVisibilityEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_255288188);
  }
  return result;
}

unint64_t sub_21C53206C()
{
  unint64_t result;

  result = qword_255288190;
  if (!qword_255288190)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E5EC0, &type metadata for AnnotationTitleVisibilityEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_255288190);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnnotationSubtitleVisibilityEnvironmentKey()
{
  return &type metadata for AnnotationSubtitleVisibilityEnvironmentKey;
}

ValueMetadata *type metadata accessor for AnnotationTitleVisibilityEnvironmentKey()
{
  return &type metadata for AnnotationTitleVisibilityEnvironmentKey;
}

void sub_21C5320D0(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_21C5320D8()
{
  sub_21C532128();
  return sub_21C5E2FD4();
}

unint64_t sub_21C532128()
{
  unint64_t result;

  result = qword_255288198;
  if (!qword_255288198)
  {
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDEB328], MEMORY[0x24BDEB320]);
    atomic_store(result, (unint64_t *)&qword_255288198);
  }
  return result;
}

uint64_t sub_21C532170(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
    return sub_21C5E2E54();
  else
    return 0;
}

uint64_t MapPitchSlider.init(scope:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t KeyPath;
  uint64_t result;

  KeyPath = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a3 = KeyPath;
  *(_BYTE *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = result;
  *(_BYTE *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = a1;
  *(_BYTE *)(a3 + 40) = a2 & 1;
  return result;
}

uint64_t MapPitchSlider.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  __int16 v17;
  __int16 v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE v30[12];
  int v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a1;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552881A0);
  MEMORY[0x24BDAC7A8](v35);
  v3 = &v30[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880B8);
  MEMORY[0x24BDAC7A8](v4);
  v33 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880C0);
  v6 = MEMORY[0x24BDAC7A8](v36);
  v8 = (uint64_t *)&v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v34 = &v30[-v9];
  v10 = (int *)type metadata accessor for MapControlsConfig();
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(_QWORD *)v1;
  v14 = *(_BYTE *)(v1 + 8);
  v15 = *(_QWORD *)(v1 + 16);
  v16 = *(_BYTE *)(v1 + 24);
  v32 = *(_QWORD *)(v1 + 32);
  v31 = *(unsigned __int8 *)(v1 + 40);
  sub_21C531A90(v13, v14);
  sub_21C531A90(v15, v16);
  sub_21C531A90(v15, v16);
  v17 = sub_21C52D7BC(v15, v16);
  sub_21C531A84(v15, v16);
  sub_21C531A84(v13, v14);
  sub_21C531A84(v15, v16);
  if (v17 == 3)
    v18 = 0;
  else
    v18 = v17;
  v19 = type metadata accessor for MapPitchToggleConfig(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  v20 = &v12[v10[5]];
  v21 = type metadata accessor for MapScaleViewConfig(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = &v12[v10[6]];
  v23 = type metadata accessor for MapUserLocationButtonConfig(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = &v12[v10[7]];
  v25 = type metadata accessor for MapCompassConfig(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  *(_WORD *)&v12[v10[8]] = 2;
  *(_WORD *)&v12[v10[9]] = (v18 << 8) | 1;
  *(_WORD *)&v12[v10[10]] = 2;
  sub_21C531A90(v13, v14);
  sub_21C531A90(v15, v16);
  sub_21C531A90(v13, v14);
  LOBYTE(v24) = sub_21C52D604(v13, v14);
  sub_21C531A84(v13, v14);
  sub_21C531A84(v13, v14);
  sub_21C531A84(v15, v16);
  if ((v24 & 1) != 0)
  {
    v26 = sub_21C5E3724();
    v27 = v33;
    sub_21C53276C((uint64_t)v12, (uint64_t)v33);
    sub_21C531B18((uint64_t)v27, (uint64_t)v8 + *(int *)(v36 + 36), &qword_2552880B8);
    *v8 = v26;
    sub_21C524980((uint64_t)v27, &qword_2552880B8);
    v28 = v34;
    sub_21C5327B0((uint64_t)v8, (uint64_t)v34);
    sub_21C531B18((uint64_t)v28, (uint64_t)v3, &qword_2552880C0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552881A8);
    sub_21C52D9D4();
    sub_21C532680();
    sub_21C5E33E8();
    sub_21C524980((uint64_t)v28, &qword_2552880C0);
  }
  else
  {
    *(_QWORD *)v3 = swift_getKeyPath();
    v3[8] = 0;
    *((_QWORD *)v3 + 2) = v32;
    v3[24] = v31;
    v3[25] = 1;
    v3[26] = v18;
    *(_WORD *)(v3 + 27) = 257;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552881A8);
    sub_21C52D9D4();
    sub_21C532680();
    sub_21C5E33E8();
  }
  return sub_21C532730((uint64_t)v12);
}

uint64_t sub_21C532644@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_21C5E3724();
  *a1 = result;
  return result;
}

unint64_t sub_21C532680()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2552881B0;
  if (!qword_2552881B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552881A8);
    v2[0] = sub_21C5326EC();
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2552881B0);
  }
  return result;
}

unint64_t sub_21C5326EC()
{
  unint64_t result;

  result = qword_2552881B8;
  if (!qword_2552881B8)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E5FFC, &type metadata for _MapPitchSlider);
    atomic_store(result, (unint64_t *)&qword_2552881B8);
  }
  return result;
}

uint64_t sub_21C532730(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MapControlsConfig();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21C53276C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MapControlsConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C5327B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C5327F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for MapPitchSlider(uint64_t a1)
{
  sub_21C531A84(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return sub_21C531A84(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for MapPitchSlider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_21C531A90(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_21C531A90(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for MapPitchSlider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_21C531A90(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_21C531A84(v6, v7);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_21C531A90(v8, v9);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  sub_21C531A84(v10, v11);
  v12 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v12;
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MapPitchSlider(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_21C531A84(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v8;
  sub_21C531A84(v9, v10);
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MapPitchSlider(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MapPitchSlider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MapPitchSlider()
{
  return &type metadata for MapPitchSlider;
}

unint64_t sub_21C532A64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2552881C0;
  if (!qword_2552881C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2552881C8);
    v2[0] = sub_21C52D9D4();
    v2[1] = sub_21C532680();
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2552881C0);
  }
  return result;
}

uint64_t destroy for ResolvedShapeStyle(uint64_t a1)
{
  return sub_21C531AC8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t initializeWithCopy for _MapPitchSlider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_21C52EF74(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  return a1;
}

uint64_t assignWithCopy for _MapPitchSlider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_21C52EF74(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_21C531AC8(v6, v7);
  v8 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  return a1;
}

__n128 __swift_memcpy27_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for _MapPitchSlider(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_21C531AC8(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
  *(_BYTE *)(a1 + 26) = *((_BYTE *)a2 + 26);
  return a1;
}

uint64_t getEnumTagSinglePayload for _MapPitchSlider(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 27))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _MapPitchSlider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 27) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 27) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for _MapPitchSlider()
{
  return &type metadata for _MapPitchSlider;
}

uint64_t sub_21C532CCC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t storeEnumTagSinglePayload for MapPitchSliderConfig(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C532D28 + 4 * byte_21C5E5F05[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_21C532D5C + 4 * byte_21C5E5F00[v4]))();
}

uint64_t sub_21C532D5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_21C532D64(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x21C532D6CLL);
  return result;
}

uint64_t sub_21C532D78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x21C532D80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C532D84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_21C532D8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MapPitchSliderConfig()
{
  return &type metadata for MapPitchSliderConfig;
}

uint64_t sub_21C532DA8()
{
  return MEMORY[0x24BDF3E20];
}

uint64_t sub_21C532DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  type metadata accessor for _AnyEquatableBox(0, a2, a3, a4);
  v5 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v5 + 96) - 8) + 32))(v5 + *(_QWORD *)(*(_QWORD *)v5 + 112), a1);
  return v5;
}

uint64_t sub_21C532E0C(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 96) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112), a1);
  return v2;
}

uint64_t sub_21C532E60(uint64_t a1, _QWORD *a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a1 + 80))(*a2) & 1;
}

void sub_21C532E90()
{
  sub_21C5E3D48();
  __break(1u);
}

uint64_t sub_21C532EE4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnyEquatableBox()
{
  return objc_opt_self();
}

uint64_t sub_21C532F14()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_21C532F84()
{
  uint64_t result;
  char v1;

  result = swift_dynamicCastClass();
  if (result)
  {
    swift_retain();
    v1 = sub_21C5E3934();
    swift_release();
    return v1 & 1;
  }
  return result;
}

uint64_t sub_21C533008()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 96) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
}

uint64_t sub_21C533024()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 96) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _AnyEquatableBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AnyEquatableBox);
}

ValueMetadata *type metadata accessor for AnyEquatable()
{
  return &type metadata for AnyEquatable;
}

BOOL sub_21C53307C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  switch(v2)
  {
    case 5:
      return v3 == 5;
    case 4:
      return v3 == 4;
    case 3:
      return v3 == 3;
  }
  if ((v3 - 3) < 3)
    return 0;
  return v2 == v3;
}

void static MapItemDetailSelectionAccessoryStyle.automatic.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

void static MapItemDetailSelectionAccessoryStyle.CalloutStyle.automatic.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static MapItemDetailSelectionAccessoryStyle.CalloutStyle.full.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static MapItemDetailSelectionAccessoryStyle.CalloutStyle.compact.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static MapItemDetailSelectionAccessoryStyle.callout.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

_BYTE *static MapItemDetailSelectionAccessoryStyle.callout(_:)@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void static MapItemDetailSelectionAccessoryStyle.sheet.getter(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

void static MapItemDetailSelectionAccessoryStyle.caption.getter(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t View.mapFeatureSelectionAccessory(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C533254(a1, a2, a3, (uint64_t)&unk_21C5E6148, (void (*)(void))MEMORY[0x24BDF2370]);
}

uint64_t sub_21C533150()
{
  sub_21C5338B0();
  return sub_21C5E3298();
}

uint64_t sub_21C533184@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_21C5338B0();
  result = sub_21C5E3298();
  *a1 = v3;
  return result;
}

uint64_t sub_21C5331D0@<X0>(_BYTE *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_21C5338B0, a1);
}

uint64_t sub_21C5331E4()
{
  sub_21C5338B0();
  return sub_21C5E32A4();
}

uint64_t sub_21C53322C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_21C5338B0);
}

uint64_t MapContent.mapItemDetailSelectionAccessory(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_21C533254(a1, a2, a3, (uint64_t)&unk_21C5E6170, (void (*)(void))sub_21C5C1FBC);
}

uint64_t sub_21C533254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  swift_getKeyPath();
  a5();
  return swift_release();
}

uint64_t sub_21C5332CC()
{
  sub_21C53386C();
  return sub_21C5E3298();
}

uint64_t sub_21C533300@<X0>(_BYTE *a1@<X8>)
{
  return keypath_getTm((void (*)(void))sub_21C53386C, a1);
}

uint64_t sub_21C533314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (void (*)(void))sub_21C53386C);
}

uint64_t getEnumTagSinglePayload for MapItemDetailSelectionAccessoryStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  if (*a1 <= 5u)
    v6 = 5;
  else
    v6 = *a1;
  v7 = v6 - 6;
  if (*a1 < 3u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MapItemDetailSelectionAccessoryStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_21C533414 + 4 * byte_21C5E6125[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_21C533448 + 4 * byte_21C5E6120[v4]))();
}

uint64_t sub_21C533448(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C533450(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C533458);
  return result;
}

uint64_t sub_21C533464(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C53346CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_21C533470(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C533478(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MapItemDetailSelectionAccessoryStyle()
{
  return &type metadata for MapItemDetailSelectionAccessoryStyle;
}

ValueMetadata *type metadata accessor for MapItemDetailSelectionAccessoryStyle.CalloutStyle()
{
  return &type metadata for MapItemDetailSelectionAccessoryStyle.CalloutStyle;
}

uint64_t sub_21C5334AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255288250);
  v2 = sub_21C5E30A0();
  v4[0] = v1;
  v4[1] = sub_21C53350C();
  return MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_21C53350C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255288258;
  if (!qword_255288258)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255288250);
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_255288258);
  }
  return result;
}

uint64_t sub_21C533558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255288260);
  v2 = sub_21C5E30A0();
  v4[0] = v1;
  v4[1] = &off_255285F08;
  return MEMORY[0x22077F9A0](&protocol conformance descriptor for <> ModifiedContent<A, B>, v2, v4);
}

uint64_t _s15_MapKit_SwiftUI36MapItemDetailSelectionAccessoryStyleV12CalloutStyleVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C533604 + 4 * byte_21C5E612F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C533638 + 4 * byte_21C5E612A[v4]))();
}

uint64_t sub_21C533638(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C533640(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C533648);
  return result;
}

uint64_t sub_21C533654(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C53365CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C533660(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C533668(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MapItemDetailSelectionAccessoryStyle.CalloutStyle.Storage()
{
  return &type metadata for MapItemDetailSelectionAccessoryStyle.CalloutStyle.Storage;
}

uint64_t getEnumTagSinglePayload for MapItemDetailSelectionAccessoryStyle.Storage(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
  {
    v6 = *a1;
    if (v6 >= 3)
      v7 = v6 - 2;
    else
      v7 = 0;
    if (v7 >= 4)
      return v7 - 3;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_21C5336D4 + 4 * byte_21C5E6134[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for MapItemDetailSelectionAccessoryStyle.Storage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFB)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_21C533780 + 4 * byte_21C5E613E[v5]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_21C5337B4 + 4 * byte_21C5E6139[v5]))();
}

uint64_t sub_21C5337B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C5337BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C5337C4);
  return result;
}

uint64_t sub_21C5337D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C5337D8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_21C5337DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C5337E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C5337F0(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_21C533804(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for MapItemDetailSelectionAccessoryStyle.Storage()
{
  return &type metadata for MapItemDetailSelectionAccessoryStyle.Storage;
}

unint64_t sub_21C533828()
{
  unint64_t result;

  result = qword_255288268;
  if (!qword_255288268)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E6204, &type metadata for MapItemDetailSelectionAccessoryStyle.CalloutStyle.Storage);
    atomic_store(result, (unint64_t *)&qword_255288268);
  }
  return result;
}

unint64_t sub_21C53386C()
{
  unint64_t result;

  result = qword_255288270;
  if (!qword_255288270)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E6308, &type metadata for DefaultMapItemDetailSelectionAccessoryStyleKey);
    atomic_store(result, (unint64_t *)&qword_255288270);
  }
  return result;
}

unint64_t sub_21C5338B0()
{
  unint64_t result;

  result = qword_255288278;
  if (!qword_255288278)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E62D0, &type metadata for DefaultMapFeatureSelectionAccessoryStyleKey);
    atomic_store(result, (unint64_t *)&qword_255288278);
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultMapFeatureSelectionAccessoryStyleKey()
{
  return &type metadata for DefaultMapFeatureSelectionAccessoryStyleKey;
}

ValueMetadata *type metadata accessor for DefaultMapItemDetailSelectionAccessoryStyleKey()
{
  return &type metadata for DefaultMapItemDetailSelectionAccessoryStyleKey;
}

void sub_21C533914(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t Marker.init(coordinate:label:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, double *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  return sub_21C534AB4(a1, a2, a3, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Marker, a4, a5, a6);
}

uint64_t type metadata accessor for Marker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Marker);
}

uint64_t Marker.init<>(_:monogram:coordinate:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, char a3@<W6>, double *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  return sub_21C534CAC(a1, a2, a3, a4, a5, a6, &qword_255288280);
}

uint64_t sub_21C533980(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t Marker.init<A>(_:monogram:coordinate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, double *a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  return sub_21C534DF4(a1, a2, a3, a4, a5, a6, a7, &qword_255288280, a8, a9, a10, (uint64_t)sub_21C53744C, (uint64_t)sub_21C53397C);
}

uint64_t Marker.init<>(_:systemImage:coordinate:)@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  return sub_21C533A58(&qword_255288290, a1, a2, a3);
}

uint64_t Marker.init<A>(_:systemImage:coordinate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  return sub_21C533B6C(a1, a2, a3, a4, a5, &qword_255288290, (uint64_t)sub_21C53744C, (uint64_t)sub_21C533A00, a6, a7, a8);
}

uint64_t Marker.init<>(_:image:coordinate:)@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  return sub_21C533A58(&qword_255288290, a1, a2, a3);
}

uint64_t sub_21C533A58@<X0>(uint64_t *a1@<X6>, double *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v7;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a1);
  *(double *)((char *)a2 + *(int *)(v7 + 40)) = 0.0;
  *((_BYTE *)a2 + *(int *)(v7 + 44)) = 0;
  *a2 = a3;
  a2[1] = a4;
  sub_21C5E376C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t Marker.init<A>(_:image:coordinate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  return sub_21C533B6C(a1, a2, a3, a4, a5, &qword_255288290, (uint64_t)sub_21C53744C, (uint64_t)sub_21C533B4C, a6, a7, a8);
}

uint64_t sub_21C533B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, double *a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  _QWORD v26[12];

  v26[0] = a7;
  v26[1] = a8;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288298);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(a6);
  *(double *)((char *)a9 + v24[10]) = 0.0;
  *((_BYTE *)a9 + v24[11]) = 0;
  *a9 = a10;
  a9[1] = a11;
  v26[8] = a4;
  v26[9] = a5;
  v26[10] = a1;
  v26[4] = a2;
  v26[5] = a3;
  sub_21C5E376C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))((char *)a9 + v24[9], v23, v20);
}

void Marker.init<>(item:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_21C535138(a1, 0, a2);
}

unint64_t sub_21C533CB4()
{
  unint64_t result;

  result = qword_2552882A0;
  if (!qword_2552882A0)
  {
    result = MEMORY[0x22077F9A0](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2552882A0);
  }
  return result;
}

void Marker.init<>(feature:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_21C535138(a1, 1, a2);
}

uint64_t static Marker._makeMapContent(content:inputs:)@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void (*v23)(int *, char *, uint64_t);
  int v24;
  void (*v25)(int *, uint64_t);
  int *v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t List;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _DWORD v53[6];
  uint64_t v54;
  __int16 v55;
  char v56;
  uint64_t v57;

  v57 = *MEMORY[0x24BDAC8D0];
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552882A8);
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v47 = v10;
  v48 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552882B0);
  v49 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v49 + 64);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v14 = (int *)((char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v37 - v15;
  v17 = sub_21C5E2EC0();
  v43 = *(_QWORD *)(v17 - 8);
  v44 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v37 - v18;
  v46 = a5;
  _s15_MapKit_SwiftUI05EmptyA7ContentV05_makeaF07content6inputsAA01_aF7OutputsV0cD011_GraphValueVyACG_AA01_aF6InputsVtFZ_0();
  v51 = a3;
  v52 = a4;
  type metadata accessor for Marker(255, a3, a4, v20);
  sub_21C5E2EC0();
  sub_21C59C8F8((void (*)(uint64_t))sub_21C5340C4, a3, (uint64_t)v19);
  v38 = type metadata accessor for _MapContentInputs(0);
  v42 = v19;
  v21 = v49;
  v41 = a4;
  sub_21C5E3304();
  v22 = sub_21C52BB38(a1);
  v23 = *(void (**)(int *, char *, uint64_t))(v21 + 16);
  v45 = v16;
  v50 = v11;
  v23(v14, v16, v11);
  if (v12 != 4)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  v24 = *v14;
  v25 = *(void (**)(int *, uint64_t))(v21 + 8);
  v25(v14, v50);
  v26 = (int *)v48;
  sub_21C5E32B0();
  if (v47 != 4)
    goto LABEL_5;
  v27 = *v26;
  v28 = (*(uint64_t (**)(int *, uint64_t))(v39 + 8))(v26, v40);
  v29 = *(_DWORD *)(a2 + *(int *)(v38 + 28));
  v53[0] = v22;
  v53[1] = v24;
  v53[2] = v27;
  v53[3] = v29;
  v53[4] = 0;
  v54 = 0;
  v55 = 771;
  v56 = 6;
  MEMORY[0x24BDAC7A8](v28);
  List = type metadata accessor for Marker.MakeList(0, a3, v41, v30);
  *(&v37 - 2) = List;
  *(&v37 - 1) = MEMORY[0x22077F9A0](&unk_21C5E6568, List);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552882B8);
  sub_21C52951C((uint64_t)v53, (uint64_t)sub_21C535F6C, (uint64_t)(&v37 - 4), List, MEMORY[0x24BEE4078], v32, MEMORY[0x24BEE40A8], v33);
  v34 = swift_release();
  MEMORY[0x24BDAC7A8](v34);
  *((_DWORD *)&v37 - 4) = v35;
  sub_21C524A88();
  sub_21C5E3478();
  v25((int *)v45, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v42, v44);
}

uint64_t sub_21C5340C4(uint64_t a1)
{
  uint64_t v1;

  return sub_21C53569C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))type metadata accessor for Marker, (uint64_t)sub_21C537430);
}

uint64_t sub_21C5340EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t Value;
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;
  _BYTE *v41;
  uint64_t v42;
  _QWORD *v43;
  _BYTE *v44;
  int v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_BYTE *, uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(_BYTE *, uint64_t);
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  int v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  _BOOL4 v67;
  BOOL v68;
  int v69;
  uint64_t v70;
  int v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  _QWORD *v77;
  void *v78;
  void (*v79)(uint64_t, _BYTE *, _QWORD *);
  _BYTE *v80;
  _BYTE *v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v90[12];
  int v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE *v108;
  _BYTE *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v2 = v1;
  v119 = *MEMORY[0x24BDAC8D0];
  v97 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v97);
  v99 = &v90[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v98 = type metadata accessor for MapContentList.Item(0);
  v100 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v102 = (uint64_t *)&v90[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v96 = type metadata accessor for ResolvedMarker();
  MEMORY[0x24BDAC7A8](v96);
  v101 = &v90[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_21C5E328C();
  v110 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v90[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552884D0);
  v10 = MEMORY[0x24BDAC7A8](v103);
  v92 = &v90[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v109 = &v90[-v12];
  v104 = (_QWORD *)sub_21C5E34E4();
  v116 = *(v104 - 1);
  v13 = MEMORY[0x24BDAC7A8](v104);
  v108 = &v90[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v115 = &v90[-v15];
  v16 = sub_21C5E3340();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = &v90[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = type metadata accessor for Marker(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v20);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v90[-v23];
  v107 = v2;
  LODWORD(v2) = *(_DWORD *)(v2 + 12);
  Value = AGGraphGetValue();
  v94 = v26;
  v105 = v22;
  v27 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v22 + 16);
  v111 = v24;
  v112 = v21;
  v28 = v24;
  v29 = v103;
  v30 = Value;
  v31 = v21;
  v32 = v116;
  v27(v28, v30, v31);
  v33 = AGGraphGetValue();
  v93 = v34;
  v106 = v17;
  v35 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 16);
  v113 = v19;
  v114 = v16;
  v95 = v35;
  v35(v19, (_BYTE *)v33, v16);
  v36 = *(int *)(v29 + 48);
  if ((_DWORD)v2 == *MEMORY[0x24BE096C0])
  {
    v44 = v109;
    sub_21C5E34D8();
    v45 = 0;
    v43 = *(_QWORD **)(v32 + 32);
    v46 = v104;
  }
  else
  {
    v37 = v104;
    v38 = AGGraphGetValue();
    v40 = v39;
    v41 = v92;
    (*(void (**)(_BYTE *, uint64_t, _QWORD *))(v32 + 16))(v92, v38, v37);
    v41[v36] = v40 & 1;
    v42 = *(int *)(v29 + 48);
    v43 = *(_QWORD **)(v32 + 32);
    v44 = v109;
    ((void (*)(_BYTE *, _BYTE *, _QWORD *))v43)(v109, v41, v37);
    v45 = v41[v42];
    v46 = v37;
  }
  LODWORD(v103) = v45;
  v44[v36] = v45;
  v104 = v43;
  ((void (*)(_BYTE *, _BYTE *, _QWORD *))v43)(v115, v44, v46);
  v47 = v107;
  v48 = AGGraphGetValue();
  v49 = v110;
  v50 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v110 + 16);
  v50(v9, v48, v7);
  v51 = sub_21C5E31B4();
  v52 = *(void (**)(_BYTE *, uint64_t))(v49 + 8);
  v52(v9, v7);
  v53 = *(_QWORD *)(v47 + 24);
  v54 = (v51 | v53) == 0;
  if (v51)
  {
    v55 = v116;
    if (v53)
    {
      swift_retain();
      swift_retain();
      v54 = sub_21C5E3718();
      swift_release();
      swift_release();
    }
  }
  else
  {
    v55 = v116;
  }
  LODWORD(v92) = v54;
  v56 = AGGraphGetValue();
  v50(v9, v56, v7);
  sub_21C53206C();
  sub_21C5E3298();
  v57 = v117;
  v52(v9, v7);
  v58 = *(unsigned __int8 *)(v47 + 32);
  LODWORD(v110) = v57;
  if (v58 == 3)
    v59 = 1;
  else
    v59 = sub_21C5E2E54() ^ 1;
  v91 = v59;
  v60 = AGGraphGetValue();
  v50(v9, v60, v7);
  sub_21C532028();
  sub_21C5E3298();
  v61 = v117;
  v52(v9, v7);
  v62 = *(unsigned __int8 *)(v47 + 33);
  LODWORD(v109) = v61;
  if (v62 == 3)
    v63 = 1;
  else
    v63 = sub_21C5E2E54() ^ 1;
  v64 = AGGraphGetValue();
  v50(v9, v64, v7);
  sub_21C53386C();
  sub_21C5E3298();
  v52(v9, v7);
  LODWORD(v65) = v117;
  v66 = *(unsigned __int8 *)(v47 + 34);
  if (v117 == 6)
  {
    v67 = v103 != 0;
    v68 = v66 == 6;
  }
  else
  {
    if (v66 == 6)
      goto LABEL_23;
    switch(v117)
    {
      case 5u:
        v67 = v103 != 0;
        v68 = v66 == 5;
        break;
      case 4u:
        v67 = v103 != 0;
        v68 = v66 == 4;
        break;
      case 3u:
        v67 = v103 != 0;
        v68 = v66 == 3;
        break;
      default:
        if ((v66 - 3) >= 3
          && !((v94 | v93) & 1 | ((v92 & 1) == 0) | ((_DWORD)v103 != 0) | v91 & 1 | v63 & 1)
          && v117 == v66)
        {
          goto LABEL_20;
        }
        goto LABEL_23;
    }
  }
  v69 = !v68;
  if (!((v69 | v94 | v93) & 1 | ((v92 & 1) == 0) | (v67 | v91 | v63) & 1))
  {
LABEL_20:
    if (AGGraphGetOutputValue())
      goto LABEL_26;
  }
LABEL_23:
  LODWORD(v94) = *(_DWORD *)(v47 + 16) + 1;
  *(_DWORD *)(v47 + 16) = v94;
  v70 = v51;
  v71 = v65;
  v72 = v111;
  v73 = *v111;
  v74 = v111[1];
  v75 = (int *)v96;
  v76 = (uint64_t)v101;
  v95(&v101[*(int *)(v96 + 32)], v113, v114);
  v77 = v46;
  v78 = *(void **)((char *)v72 + *(int *)(v112 + 40));
  LOBYTE(v72) = *((_BYTE *)v72 + *(int *)(v112 + 44));
  v79 = *(void (**)(uint64_t, _BYTE *, _QWORD *))(v55 + 16);
  v80 = v115;
  v79(v76 + v75[12], v115, v77);
  *(_QWORD *)v76 = v73;
  *(_QWORD *)(v76 + 8) = v74;
  *(_BYTE *)(v76 + 16) = v110;
  *(_BYTE *)(v76 + 17) = (_BYTE)v109;
  LODWORD(v103) = v71;
  *(_BYTE *)(v76 + 18) = v71;
  v51 = v70;
  *(_QWORD *)(v76 + v75[9]) = v78;
  *(_BYTE *)(v76 + v75[10]) = (_BYTE)v72;
  *(_QWORD *)(v76 + v75[11]) = v70;
  v79((uint64_t)v108, v80, v77);
  v81 = v99;
  sub_21C529664(v76, (uint64_t)v99, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedMarker);
  swift_storeEnumTagMultiPayload();
  sub_21C52B9E4();
  swift_retain();
  v82 = v78;
  sub_21C5E34F0();
  v83 = v117;
  if (!v117)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_255287F08);
    v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = xmmword_21C5E5570;
    *(_QWORD *)(v83 + 32) = 0;
    *(_BYTE *)(v83 + 72) = 0;
  }
  v84 = (uint64_t)v102;
  *v102 = v83;
  v85 = v98;
  ((void (*)(uint64_t, _BYTE *, _QWORD *))v104)(v84 + *(int *)(v98 + 28), v108, v77);
  *(_DWORD *)(v84 + 8) = v94;
  sub_21C536C90((uint64_t)v81, v84 + *(int *)(v85 + 24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552884D8);
  v86 = (*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
  v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_21C5E5570;
  sub_21C529664(v84, v65 + v86, type metadata accessor for MapContentList.Item);
  v117 = sub_21C5BA7C0(v65);
  v118 = v87;
  AGGraphSetOutputValue();
  swift_bridgeObjectRelease();
  v88 = v84;
  v46 = v77;
  sub_21C52A88C(v88, type metadata accessor for MapContentList.Item);
  sub_21C52A88C(v76, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedMarker);
  v55 = v116;
  LOBYTE(v65) = v103;
LABEL_26:
  *(_BYTE *)(v47 + 34) = v65;
  *(_BYTE *)(v47 + 33) = (_BYTE)v109;
  *(_BYTE *)(v47 + 32) = v110;
  *(_QWORD *)(v47 + 24) = v51;
  swift_release();
  (*(void (**)(_BYTE *, _QWORD *))(v55 + 8))(v115, v46);
  (*(void (**)(_BYTE *, uint64_t))(v106 + 8))(v113, v114);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v105 + 8))(v111, v112);
}

void sub_21C534A84(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_21C534A90@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return static Marker._makeMapContent(content:inputs:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
}

uint64_t sub_21C534A9C()
{
  return 1;
}

uint64_t SelectedMarker.init(coordinate:label:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, double *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  return sub_21C534AB4(a1, a2, a3, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for SelectedMarker, a4, a5, a6);
}

uint64_t sub_21C534AB4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t (*a4)(_QWORD, uint64_t, uint64_t)@<X4>, double *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v11;

  v11 = a4(0, a2, a3);
  *(double *)((char *)a5 + *(int *)(v11 + 40)) = 0.0;
  *((_BYTE *)a5 + *(int *)(v11 + 44)) = 0;
  *a5 = a6;
  a5[1] = a7;
  return a1();
}

uint64_t _s15_MapKit_SwiftUI6MarkerV_10coordinateACy0cD04TextVGAE18LocalizedStringKeyV_So22CLLocationCoordinate2DVtcAGRszrlufC_0@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;

  result = sub_21C5E3604();
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = result;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8 & 1;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 0;
  return result;
}

uint64_t _s15_MapKit_SwiftUI6MarkerV_10coordinateACy0cD04TextVGqd___So22CLLocationCoordinate2DVtcAGRszSyRd__lufC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v10 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  v12 = sub_21C5E3610();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, a2);
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(_QWORD *)(a3 + 16) = v12;
  *(_QWORD *)(a3 + 24) = v14;
  *(_BYTE *)(a3 + 32) = v16 & 1;
  *(_QWORD *)(a3 + 40) = v18;
  *(_QWORD *)(a3 + 48) = 0;
  *(_BYTE *)(a3 + 56) = 0;
  return result;
}

uint64_t SelectedMarker.init<>(_:monogram:coordinate:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, char a3@<W6>, double *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  return sub_21C534CAC(a1, a2, a3, a4, a5, a6, &qword_2552882C0);
}

uint64_t sub_21C534CAC@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, char a3@<W6>, double *a4@<X8>, double a5@<D0>, double a6@<D1>, uint64_t *a7)
{
  uint64_t v13;

  v13 = __swift_instantiateConcreteTypeFromMangledName(a7);
  *(double *)((char *)a4 + *(int *)(v13 + 40)) = 0.0;
  *((_BYTE *)a4 + *(int *)(v13 + 44)) = 0;
  *a4 = a5;
  a4[1] = a6;
  sub_21C5E376C();
  sub_21C533980(a1, a2, a3 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t SelectedMarker.init<A>(_:monogram:coordinate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, double *a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  return sub_21C534DF4(a1, a2, a3, a4, a5, a6, a7, &qword_2552882C0, a8, a9, a10, (uint64_t)sub_21C53744C, (uint64_t)sub_21C53397C);
}

uint64_t sub_21C534DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, double *a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13)
{
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int *v26;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v28[2] = a12;
  v28[0] = a7;
  v28[1] = a13;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288288);
  v23 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v25 = (char *)v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = (int *)__swift_instantiateConcreteTypeFromMangledName(a8);
  *(double *)((char *)a9 + v26[10]) = 0.0;
  *((_BYTE *)a9 + v26[11]) = 0;
  *a9 = a10;
  a9[1] = a11;
  v34 = a6;
  v35 = v28[0];
  v36 = a1;
  v30 = a2;
  v31 = a3;
  a4 &= 1u;
  v32 = a4;
  v33 = a5;
  sub_21C5E376C();
  sub_21C533980(a2, a3, a4);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 8))(a1, a6);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v23 + 32))((char *)a9 + v26[9], v25, v29);
}

uint64_t SelectedMarker.init<>(_:systemImage:coordinate:)@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  return sub_21C533A58(qword_2552882C8, a1, a2, a3);
}

uint64_t SelectedMarker.init<A>(_:systemImage:coordinate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  return sub_21C533B6C(a1, a2, a3, a4, a5, qword_2552882C8, (uint64_t)sub_21C536004, (uint64_t)sub_21C533A00, a6, a7, a8);
}

uint64_t SelectedMarker.init<>(_:image:coordinate:)@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  return sub_21C533A58(qword_2552882C8, a1, a2, a3);
}

uint64_t sub_21C534FE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_21C5E3604();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t SelectedMarker.init<A>(_:image:coordinate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  return sub_21C533B6C(a1, a2, a3, a4, a5, qword_2552882C8, (uint64_t)sub_21C53744C, (uint64_t)sub_21C533B4C, a6, a7, a8);
}

uint64_t sub_21C535098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_21C5E3610();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v7 & 1;
  *(_QWORD *)(a2 + 24) = v8;
  return result;
}

void SelectedMarker.init<>(item:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_21C535138(a1, 0, a2);
}

void SelectedMarker.init<>(feature:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_21C535138(a1, 1, a2);
}

void sub_21C535138(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v6 = objc_msgSend(a1, sel_placemark);
  v7 = objc_msgSend(v6, sel_location);

  if (v7)
  {
    objc_msgSend(v7, sel_coordinate);
    v9 = v8;
    v11 = v10;

  }
  else
  {
    v11 = 0;
    v9 = 0;
  }
  v12 = a1;
  v13 = objc_msgSend(v12, sel_name);
  if (v13)
  {
    v14 = v13;
    sub_21C5E3964();

  }
  sub_21C533CB4();
  v15 = sub_21C5E3610();
  v17 = v16;
  v19 = v18;
  v21 = v20;

  *(_QWORD *)a3 = v9;
  *(_QWORD *)(a3 + 8) = v11;
  *(_QWORD *)(a3 + 16) = v15;
  *(_QWORD *)(a3 + 24) = v17;
  *(_BYTE *)(a3 + 32) = v19 & 1;
  *(_QWORD *)(a3 + 40) = v21;
  *(_QWORD *)(a3 + 48) = v12;
  *(_BYTE *)(a3 + 56) = a2;
}

uint64_t static SelectedMarker._mapContentCount(inputs:)()
{
  return 1;
}

uint64_t static SelectedMarker._makeMapContent(content:inputs:)@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  uint64_t v22;
  unsigned int v23;
  void (*v24)(unsigned int *, char *, uint64_t);
  unsigned int v25;
  void (*v26)(unsigned int *, uint64_t);
  unsigned int *v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t List;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD v54[2];
  __int16 v55;
  __int128 v56;
  unint64_t v57;
  uint64_t v58;
  __int16 v59;
  uint64_t v60;

  v50 = a2;
  v60 = *MEMORY[0x24BDAC8D0];
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552882A8);
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v47 = v9;
  v48 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552882B0);
  v49 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v49 + 64);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v13 = (unsigned int *)((char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v38 - v14;
  v44 = sub_21C5E2EC0();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v17 = (char *)&v38 - v16;
  v46 = a5;
  _s15_MapKit_SwiftUI05EmptyA7ContentV05_makeaF07content6inputsAA01_aF7OutputsV0cD011_GraphValueVyACG_AA01_aF6InputsVtFZ_0();
  v52 = a3;
  v53 = a4;
  type metadata accessor for SelectedMarker(255, a3, a4, v18);
  sub_21C5E2EC0();
  sub_21C59C8F8((void (*)(uint64_t))sub_21C5360A4, a3, (uint64_t)v17);
  v39 = type metadata accessor for _MapContentInputs(0);
  v19 = v50;
  v42 = v17;
  v20 = a4;
  sub_21C5E3304();
  v21 = a1;
  v22 = v49;
  v23 = sub_21C52BB38(v21);
  v24 = *(void (**)(unsigned int *, char *, uint64_t))(v22 + 16);
  v45 = v15;
  v51 = v10;
  v24(v13, v15, v10);
  if (v11 != 4)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  v25 = *v13;
  v26 = *(void (**)(unsigned int *, uint64_t))(v22 + 8);
  v26(v13, v51);
  v27 = (unsigned int *)v48;
  sub_21C5E32B0();
  if (v47 != 4)
    goto LABEL_5;
  v28 = *v27;
  v29 = (*(uint64_t (**)(unsigned int *, uint64_t))(v40 + 8))(v27, v41);
  v30 = *(_DWORD *)(v19 + *(int *)(v39 + 28));
  *(_QWORD *)&v56 = __PAIR64__(v25, v23);
  *((_QWORD *)&v56 + 1) = __PAIR64__(v30, v28);
  LODWORD(v57) = 0;
  v58 = 0;
  v59 = 771;
  v54[0] = v56;
  v54[1] = v57;
  v55 = 771;
  MEMORY[0x24BDAC7A8](v29);
  List = type metadata accessor for SelectedMarker.MakeList(0, a3, v20, v31);
  *(&v38 - 2) = List;
  *(&v38 - 1) = MEMORY[0x22077F9A0](&unk_21C5E6528, List);
  sub_21C5360D8((uint64_t)&v56);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552882B8);
  sub_21C52951C((uint64_t)v54, (uint64_t)sub_21C53741C, (uint64_t)(&v38 - 4), List, MEMORY[0x24BEE4078], v33, MEMORY[0x24BEE40A8], v34);
  v35 = swift_release();
  MEMORY[0x24BDAC7A8](v35);
  *((_DWORD *)&v38 - 4) = v36;
  sub_21C524E34();
  sub_21C5E3478();
  sub_21C536100((uint64_t)&v56);
  v26((unsigned int *)v45, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v42, v44);
}

uint64_t sub_21C53569C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[6];

  v8 = a4(0);
  v9 = a1 + *(int *)(v8 + 36);
  v13[2] = v8;
  v13[3] = a2;
  v10 = sub_21C5E2DD0();
  sub_21C52951C(v9, a5, (uint64_t)v13, a2, MEMORY[0x24BEE4078], v10, MEMORY[0x24BEE40A8], v11);
  return v13[5];
}

uint64_t sub_21C535728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t Value;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, _QWORD *);
  uint64_t v49;
  void (*v50)(char *, _QWORD *);
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  BOOL v58;
  char v59;
  char v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int *v66;
  void *v67;
  void (*v68)(uint64_t, char *, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  char *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v2 = v1;
  v109 = *MEMORY[0x24BDAC8D0];
  v86 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v86);
  v88 = (uint64_t)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for MapContentList.Item(0);
  v89 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v90 = (uint64_t *)((char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = type metadata accessor for ResolvedMarker();
  MEMORY[0x24BDAC7A8](v85);
  v98 = (uint64_t)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = (_QWORD *)sub_21C5E328C();
  v104 = *(v93 - 1);
  MEMORY[0x24BDAC7A8](v93);
  v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552884D0);
  v9 = MEMORY[0x24BDAC7A8](v91);
  v81 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v92 = (char *)&v80 - v11;
  v106 = sub_21C5E34E4();
  v12 = *(_QWORD *)(v106 - 8);
  v13 = MEMORY[0x24BDAC7A8](v106);
  v97 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v105 = (char *)&v80 - v15;
  v16 = sub_21C5E3340();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SelectedMarker(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v20);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v80 - v23;
  v95 = v2;
  LODWORD(v2) = *(_DWORD *)(v2 + 12);
  Value = AGGraphGetValue();
  v83 = v26;
  v94 = v22;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v99 = v24;
  v100 = v21;
  v27(v24, Value, v21);
  v28 = AGGraphGetValue();
  v82 = v29;
  v96 = v17;
  v30 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
  v31 = v91;
  v101 = v19;
  v102 = v16;
  v84 = v30;
  v30((uint64_t)v19, (char *)v28, v16);
  v32 = *(int *)(v31 + 48);
  v33 = *MEMORY[0x24BE096C0];
  v103 = v12;
  if ((_DWORD)v2 == v33)
  {
    v41 = v92;
    sub_21C5E34D8();
    v42 = 0;
    v40 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v43 = v106;
  }
  else
  {
    v34 = v106;
    v35 = AGGraphGetValue();
    v37 = v36;
    v38 = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v81, v35, v34);
    v38[v32] = v37 & 1;
    v39 = *(int *)(v31 + 48);
    v40 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v41 = v92;
    v40(v92, v38, v34);
    v42 = v38[v39];
    v43 = v34;
  }
  LODWORD(v92) = v42;
  v41[v32] = v42;
  v40(v105, v41, v43);
  v44 = v95;
  v45 = v93;
  v46 = AGGraphGetValue();
  v47 = v104;
  v48 = *(void (**)(char *, uint64_t, _QWORD *))(v104 + 16);
  v48(v8, v46, v45);
  v49 = sub_21C5E31B4();
  v50 = *(void (**)(char *, _QWORD *))(v47 + 8);
  v50(v8, v45);
  v51 = *(_QWORD *)(v44 + 24);
  v52 = (v49 | v51) == 0;
  if (v49)
  {
    v53 = v103;
    if (v51)
    {
      swift_retain();
      swift_retain();
      v52 = sub_21C5E3718();
      swift_release();
      swift_release();
    }
  }
  else
  {
    v53 = v103;
  }
  LODWORD(v91) = v52;
  v54 = AGGraphGetValue();
  v48(v8, v54, v45);
  sub_21C53206C();
  sub_21C5E3298();
  v55 = v107;
  v50(v8, v45);
  if (*(_BYTE *)(v44 + 32) == 3)
    LOBYTE(v56) = 1;
  else
    v56 = sub_21C5E2E54() ^ 1;
  v57 = AGGraphGetValue();
  v48(v8, v57, v45);
  sub_21C532028();
  sub_21C5E3298();
  LODWORD(v104) = v107;
  v50(v8, v45);
  if (*(_BYTE *)(v44 + 33) == 3
    || (v58 = (_DWORD)v92 != 0,
        v59 = v83 | v82,
        v60 = sub_21C5E2E54(),
        v59 & 1 | ((v91 & 1) == 0) | (v58 | v56) & 1)
    || (v60 & 1) == 0
    || !AGGraphGetOutputValue())
  {
    v93 = v40;
    LODWORD(v91) = *(_DWORD *)(v44 + 16) + 1;
    *(_DWORD *)(v44 + 16) = v91;
    v62 = v98;
    v61 = v99;
    v63 = *v99;
    v64 = v99[1];
    v65 = v55;
    v66 = (int *)v85;
    v84(v98 + *(int *)(v85 + 32), v101, v102);
    v67 = *(void **)((char *)v61 + *(int *)(v100 + 40));
    LOBYTE(v61) = *((_BYTE *)v61 + *(int *)(v100 + 44));
    v68 = *(void (**)(uint64_t, char *, uint64_t))(v53 + 16);
    v70 = v105;
    v69 = v106;
    v68(v62 + v66[12], v105, v106);
    *(_QWORD *)v62 = v63;
    *(_QWORD *)(v62 + 8) = v64;
    LODWORD(v92) = v65;
    *(_BYTE *)(v62 + 16) = v65;
    *(_BYTE *)(v62 + 17) = v104;
    *(_BYTE *)(v62 + 18) = 6;
    *(_QWORD *)(v62 + v66[9]) = v67;
    *(_BYTE *)(v62 + v66[10]) = (_BYTE)v61;
    *(_QWORD *)(v62 + v66[11]) = v49;
    v68((uint64_t)v97, v70, v69);
    v71 = v88;
    sub_21C529664(v62, v88, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedMarker);
    swift_storeEnumTagMultiPayload();
    sub_21C52B9E4();
    swift_retain();
    v72 = v67;
    sub_21C5E34F0();
    v73 = v107;
    if (!v107)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_255287F08);
      v73 = swift_allocObject();
      *(_OWORD *)(v73 + 16) = xmmword_21C5E5570;
      *(_QWORD *)(v73 + 32) = 0;
      *(_BYTE *)(v73 + 72) = 0;
    }
    v74 = (uint64_t)v90;
    *v90 = v73;
    v75 = v87;
    ((void (*)(uint64_t, char *, uint64_t))v93)(v74 + *(int *)(v87 + 28), v97, v106);
    *(_DWORD *)(v74 + 8) = v91;
    sub_21C536C90(v71, v74 + *(int *)(v75 + 24));
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552884D8);
    v76 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
    v77 = swift_allocObject();
    *(_OWORD *)(v77 + 16) = xmmword_21C5E5570;
    sub_21C529664(v74, v77 + v76, type metadata accessor for MapContentList.Item);
    v107 = sub_21C5BA7C0(v77);
    v108 = v78;
    AGGraphSetOutputValue();
    swift_bridgeObjectRelease();
    sub_21C52A88C(v74, type metadata accessor for MapContentList.Item);
    sub_21C52A88C(v98, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedMarker);
    v53 = v103;
    LOBYTE(v55) = (_BYTE)v92;
  }
  *(_BYTE *)(v44 + 33) = v104;
  *(_BYTE *)(v44 + 32) = v55;
  *(_QWORD *)(v44 + 24) = v49;
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v105, v106);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v101, v102);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v94 + 8))(v99, v100);
}

uint64_t sub_21C535F54@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return static SelectedMarker._makeMapContent(content:inputs:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
}

uint64_t type metadata accessor for Marker.MakeList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Marker.MakeList);
}

uint64_t sub_21C535F6C@<X0>(_DWORD *a1@<X8>)
{
  return sub_21C5295A8(a1);
}

uint64_t sub_21C535F90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C523250(*(_DWORD *)(v1 + 16), a1);
}

uint64_t type metadata accessor for SelectedMarker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SelectedMarker);
}

uint64_t sub_21C535FA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  sub_21C536CF0(v2, v3, v4);
  return swift_bridgeObjectRetain();
}

uint64_t sub_21C535FE4@<X0>(uint64_t a1@<X8>)
{
  return sub_21C534FE8(a1);
}

uint64_t sub_21C536004@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C535098(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_21C536020@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_bridgeObjectRetain();
  result = sub_21C5E3754();
  *a1 = result;
  return result;
}

uint64_t sub_21C536060@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_bridgeObjectRetain();
  result = sub_21C5E3760();
  *a1 = result;
  return result;
}

uint64_t sub_21C5360A4(uint64_t a1)
{
  uint64_t v1;

  return sub_21C53569C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))type metadata accessor for SelectedMarker, (uint64_t)sub_21C536CD4);
}

uint64_t type metadata accessor for SelectedMarker.MakeList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SelectedMarker.MakeList);
}

uint64_t sub_21C5360D8(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_21C536100(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_21C536128()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21C536154()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21C5361E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v6 + ((v5 + 16) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v10 = ((unint64_t)a1 + v5 + 16) & ~v5;
    v11 = ((unint64_t)a2 + v5 + 16) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v10, v11);
    v12 = (v6 + v10) & 0xFFFFFFFFFFFFFFF8;
    v13 = (v6 + v11) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(void **)v13;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
    v15 = v14;
  }
  return v3;
}

void sub_21C5362C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = (a1 + *(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v3);

}

_OWORD *sub_21C536310(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (v8 + v6) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + v7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(void **)v10;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v12 = v11;
  return a1;
}

_QWORD *sub_21C53639C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  id v13;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (v8 + v6) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + v7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(void **)v10;
  v12 = *(void **)v9;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  v13 = v11;

  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

_OWORD *sub_21C536438(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (v8 + v6) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + v7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

_OWORD *sub_21C5364C0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (v8 + v6) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + v7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(void **)v9;
  *(_QWORD *)v9 = *(_QWORD *)v10;

  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  return a1;
}

uint64_t sub_21C536550(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFE)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  if (v6 >= a2)
  {
    v15 = (a1 + v7 + 16) & ~v7;
    if (v5 < 0x7FFFFFFE)
    {
      v16 = *(_QWORD *)((v8 + v15) & 0xFFFFFFFFFFFFF8);
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      if ((v16 + 1) >= 2)
        return v16;
      else
        return 0;
    }
    else
    {
      return (*(uint64_t (**)(uint64_t))(v4 + 48))(v15);
    }
  }
  else
  {
    v9 = ((v8 + ((v7 + 16) & ~(_DWORD)v7)) & 0xFFFFFFF8) + 9;
    v10 = (a2 - v6 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_21C5365E8 + 4 * byte_21C5E6340[v13]))();
  }
}

void sub_21C536690(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64)
       + 7
       + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & 0xFFFFFFFFFFFFFFF8)
     + 9;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X14 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_21C5367C0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x21C536848);
}

void sub_21C5367C8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x21C5367D0);
  JUMPOUT(0x21C536848);
}

void sub_21C53681C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x21C536848);
}

void sub_21C536824()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x21C536848);
}

uint64_t sub_21C53682C@<X0>(unsigned int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_WORD *)(v8 + v9) = 0;
  if (!a1)
    goto LABEL_6;
  v3 = (v8 + v7 + 16) & a3;
  if (a2 < 0x7FFFFFFE)
  {
    if (a1 > 0x7FFFFFFE)
      JUMPOUT(0x21C536838);
    *(_QWORD *)((v6 + v3) & 0xFFFFFFFFFFFFFFF8) = a1;
LABEL_6:
    JUMPOUT(0x21C536848);
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 56))(v3);
}

uint64_t sub_21C536860()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21C536868()
{
  return swift_release();
}

uint64_t sub_21C536870(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_retain();
  return a1;
}

uint64_t sub_21C5368B4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_21C536944(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t sub_21C536990(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 34))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_21C5369EC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t sub_21C536A44(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  swift_retain();
  return a1;
}

uint64_t sub_21C536A90(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  return a1;
}

__n128 __swift_memcpy35_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_21C536B28(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  return a1;
}

uint64_t sub_21C536B7C(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 35))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_21C536BD8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 35) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 35) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

void sub_21C536C34()
{
  JUMPOUT(0x22077F9A0);
}

void sub_21C536C44()
{
  JUMPOUT(0x22077F9A0);
}

uint64_t type metadata accessor for ResolvedMarker()
{
  uint64_t result;

  result = qword_2552884E0;
  if (!qword_2552884E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C536C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MapContentList.Item.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C536CD4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21C589A6C(a1, a2);
}

uint64_t sub_21C536CF0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

_QWORD *sub_21C536D00(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  id v19;
  uint64_t v20;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
    v7 = a3[8];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_21C5E3340();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[9];
    v12 = a3[10];
    v13 = *(void **)((char *)a2 + v11);
    *(_QWORD *)((char *)v4 + v11) = v13;
    *((_BYTE *)v4 + v12) = *((_BYTE *)a2 + v12);
    v14 = a3[12];
    *(_QWORD *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    v15 = (char *)v4 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = sub_21C5E34E4();
    v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v19 = v13;
    swift_retain();
    v18(v15, v16, v17);
  }
  return v4;
}

uint64_t sub_21C536E08(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + a2[8];
  v5 = sub_21C5E3340();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  swift_release();
  v6 = a1 + a2[12];
  v7 = sub_21C5E34E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_21C536E8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  id v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21C5E3340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[9];
  v11 = a3[10];
  v12 = *(void **)(a2 + v10);
  *(_QWORD *)(a1 + v10) = v12;
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v13 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_21C5E34E4();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v18 = v12;
  swift_retain();
  v17(v14, v15, v16);
  return a1;
}

uint64_t sub_21C536F68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21C5E3340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[9];
  v11 = *(void **)(a1 + v10);
  v12 = *(void **)(a2 + v10);
  *(_QWORD *)(a1 + v10) = v12;
  v13 = v12;

  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  v14 = a3[12];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t sub_21C537060(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21C5E3340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v11 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_21C537124(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21C5E3340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[9];
  v11 = *(void **)(a1 + v10);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);

  v12 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_release();
  v13 = a3[12];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_21C5371FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C537208(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;

  v6 = sub_21C5E3340();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v8 = sub_21C5E34E4();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[12];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[9]);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  v11 = v10 - 1;
  if (v11 < 0)
    v11 = -1;
  return (v11 + 1);
}

uint64_t sub_21C5372B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C5372C4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_21C5E3340();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[8];
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[9]) = a2;
      return result;
    }
    v10 = sub_21C5E34E4();
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[12];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t sub_21C537364()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_21C5E3340();
  if (v1 <= 0x3F)
  {
    result = sub_21C5E34E4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_21C53741C@<X0>(_DWORD *a1@<X8>)
{
  return sub_21C535F6C(a1);
}

uint64_t sub_21C537430@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21C536CD4(a1, a2);
}

uint64_t sub_21C537458@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

void UserAnnotation.init<>(anchor:)(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
}

uint64_t UserAnnotation.init<>()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_21C5E3880();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = 0;
  a1[3] = 0;
  return result;
}

uint64_t UserAnnotation.init(anchor:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  return sub_21C5380E4(a1, a2, a3, a4, (uint64_t)sub_21C537654, a5, a6, a7);
}

uint64_t sub_21C537630()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C537654()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t static UserAnnotation._mapContentCount(inputs:)()
{
  return 1;
}

uint64_t static UserAnnotation._makeMapContent(content:inputs:)(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t List;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  _BYTE v24[20];
  _DWORD v25[4];
  uint64_t v26;
  char v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552882A8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (int *)&v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s15_MapKit_SwiftUI05EmptyA7ContentV05_makeaF07content6inputsAA01_aF7OutputsV0cD011_GraphValueVyACG_AA01_aF6InputsVtFZ_0();
  type metadata accessor for UserAnnotation(0, a3, a4, v12);
  v13 = sub_21C52BB38(a1);
  sub_21C5E32B0();
  if (v10 != 4)
    __break(1u);
  v14 = *v11;
  (*(void (**)(int *, uint64_t))(v9 + 8))(v11, v8);
  v15 = type metadata accessor for _MapContentInputs(0);
  v16 = *(_DWORD *)(a2 + *(int *)(v15 + 28));
  v25[0] = v13;
  v25[1] = v14;
  v25[2] = v16;
  v25[3] = 0;
  v26 = 0;
  v27 = 6;
  MEMORY[0x24BDAC7A8](v15);
  List = type metadata accessor for UserAnnotation.MakeList(0, a3, a4, v17);
  *(_QWORD *)&v24[-16] = List;
  *(_QWORD *)&v24[-8] = MEMORY[0x22077F9A0](&unk_21C5E6850, List);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552882B8);
  sub_21C52951C((uint64_t)v25, (uint64_t)sub_21C535F6C, (uint64_t)&v24[-32], List, MEMORY[0x24BEE4078], v19, MEMORY[0x24BEE40A8], v20);
  v21 = swift_release();
  MEMORY[0x24BDAC7A8](v21);
  *(_DWORD *)&v24[-16] = v22;
  sub_21C52493C();
  return sub_21C5E3478();
}

uint64_t sub_21C5378B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *Value;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t OutputValue;
  char v48;
  int v49;
  uint64_t v50;
  BOOL v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;
  uint64_t v62;
  int v63;
  void (*v64)(uint64_t, char *, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v100 = *MEMORY[0x24BDAC8D0];
  v82 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v82);
  v89 = (uint64_t)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for MapContentList.Item(0);
  v84 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v86 = (uint64_t *)((char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v81 = type metadata accessor for ResolvedUserAnnotation();
  MEMORY[0x24BDAC7A8](v81);
  v85 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_21C5E328C();
  v87 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552884D0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v76 - v12;
  v14 = sub_21C5E34E4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v88 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v95 = (char *)&v76 - v18;
  v92 = v1;
  v19 = *(_DWORD *)(v1 + 8);
  v20 = *(_QWORD *)(a1 + 24);
  v79 = *(_QWORD *)(a1 + 16);
  v78 = v20;
  type metadata accessor for UserAnnotation(0, v79, v20, v21);
  Value = (uint64_t *)AGGraphGetValue();
  v77 = v23;
  v24 = *Value;
  v25 = Value[1];
  v26 = Value[2];
  v27 = *(int *)(v8 + 48);
  v28 = *MEMORY[0x24BE096C0];
  v90 = Value[3];
  v91 = v15;
  v94 = v26;
  if (v19 == v28)
  {
    sub_21C531AAC(v26);
    sub_21C5E34D8();
    v34 = 0;
    v13[v27] = 0;
    v33 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  }
  else
  {
    v29 = AGGraphGetValue();
    v31 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v11, v29, v14);
    v11[v27] = v31 & 1;
    v32 = *(int *)(v8 + 48);
    v33 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v33(v13, v11, v14);
    v13[v27] = v11[v32];
    sub_21C531AAC(v26);
    v34 = v13[v27];
  }
  v35 = v14;
  v80 = (void (*)(uint64_t, char *, uint64_t))v33;
  v33(v95, v13, v14);
  v36 = v92;
  v37 = v93;
  v38 = AGGraphGetValue();
  v39 = v87;
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
  v40(v7, v38, v37);
  v41 = sub_21C5E31B4();
  v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  v42(v7, v37);
  v43 = *(_QWORD *)(v36 + 16);
  v44 = (v41 | v43) == 0;
  if (v41 && v43)
  {
    swift_retain();
    swift_retain();
    v44 = sub_21C5E3718();
    swift_release();
    swift_release();
  }
  v45 = v93;
  v46 = AGGraphGetValue();
  v40(v7, v46, v45);
  sub_21C53386C();
  sub_21C5E3298();
  OutputValue = ((uint64_t (*)(char *, uint64_t))v42)(v7, v45);
  v48 = v98;
  v49 = *(unsigned __int8 *)(v36 + 24);
  if (v98 == 6)
  {
    v50 = v94;
    if ((v49 != 6) | v77 & 1 | ((v44 & 1) == 0) | v34 & 1)
      goto LABEL_24;
  }
  else
  {
    v50 = v94;
    if (v49 == 6)
      goto LABEL_24;
    switch(v98)
    {
      case 5u:
        v51 = v49 == 5;
        break;
      case 4u:
        v51 = v49 == 4;
        break;
      case 3u:
        v51 = v49 == 3;
        break;
      default:
        if ((v49 - 3) < 3 || v77 & 1 | ((v44 & 1) == 0) | v34 & 1 || v98 != v49)
          goto LABEL_24;
        goto LABEL_21;
    }
    v52 = !v51;
    if ((v52 | v77) & 1 | ((v44 & 1) == 0) | v34 & 1)
      goto LABEL_24;
  }
LABEL_21:
  OutputValue = AGGraphGetOutputValue();
  if (OutputValue)
  {
    *(_BYTE *)(v36 + 24) = v48;
    *(_QWORD *)(v36 + 16) = v41;
    goto LABEL_33;
  }
LABEL_24:
  if (v50)
    v53 = v90;
  else
    v53 = 0;
  v96 = v50;
  v97 = v53;
  MEMORY[0x24BDAC7A8](OutputValue);
  v54 = v78;
  *(&v76 - 2) = v79;
  *(&v76 - 1) = v54;
  sub_21C531AAC(v50);
  swift_getFunctionTypeMetadata1();
  sub_21C5E3BB0();
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552886F0);
  sub_21C537458((void (*)(char *, char *))sub_21C539124, (uint64_t)(&v76 - 4), MEMORY[0x24BEE4078], v55, v56, (uint64_t)&v98);
  sub_21C531A9C(v96);
  v57 = v98;
  if (v98)
  {
    v58 = v99;
    v59 = swift_allocObject();
    *(_QWORD *)(v59 + 16) = v57;
    *(_QWORD *)(v59 + 24) = v58;
    v60 = sub_21C539148;
  }
  else
  {
    v60 = 0;
    v59 = 0;
  }
  v61 = (uint64_t)v85;
  v62 = v91;
  v63 = *(_DWORD *)(v36 + 12) + 1;
  *(_DWORD *)(v36 + 12) = v63;
  v64 = *(void (**)(uint64_t, char *, uint64_t))(v62 + 16);
  v65 = v95;
  v64(v61 + *(int *)(v81 + 32), v95, v35);
  *(_QWORD *)v61 = v24;
  *(_QWORD *)(v61 + 8) = v25;
  *(_QWORD *)(v61 + 16) = v60;
  *(_QWORD *)(v61 + 24) = v59;
  *(_QWORD *)(v61 + 32) = v41;
  *(_BYTE *)(v61 + 40) = v48;
  v64((uint64_t)v88, v65, v35);
  sub_21C529664(v61, v89, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedUserAnnotation);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_21C531AAC((uint64_t)v60);
  sub_21C52B9E4();
  sub_21C5E34F0();
  v66 = v98;
  v67 = v35;
  if (!v98)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_255287F08);
    v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_21C5E5570;
    *(_QWORD *)(v66 + 32) = 0;
    *(_BYTE *)(v66 + 72) = 0;
  }
  v68 = (uint64_t)v86;
  *v86 = v66;
  v69 = v83;
  v80(v68 + *(int *)(v83 + 28), v88, v67);
  *(_DWORD *)(v68 + 8) = v63;
  sub_21C536C90(v89, v68 + *(int *)(v69 + 24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552884D8);
  v70 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = xmmword_21C5E5570;
  sub_21C529664(v68, v71 + v70, type metadata accessor for MapContentList.Item);
  v98 = sub_21C5BA7C0(v71);
  v99 = v72;
  AGGraphSetOutputValue();
  sub_21C531A9C((uint64_t)v60);
  swift_bridgeObjectRelease();
  v73 = v68;
  v35 = v67;
  sub_21C52A88C(v73, type metadata accessor for MapContentList.Item);
  sub_21C52A88C(v61, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedUserAnnotation);
  v74 = v92;
  *(_BYTE *)(v92 + 24) = v48;
  *(_QWORD *)(v74 + 16) = v41;
LABEL_33:
  swift_retain();
  swift_release();
  sub_21C531A9C(v94);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v95, v35);
}

uint64_t sub_21C5380C0(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  return static UserAnnotation._makeMapContent(content:inputs:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t SelectedUserAnnotation.init(anchor:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  return sub_21C5380E4(a1, a2, a3, a4, (uint64_t)sub_21C539838, a5, a6, a7);
}

uint64_t sub_21C5380E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  _QWORD *v16;
  uint64_t result;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a1;
  v16[5] = a2;
  result = sub_21C531A9C(0);
  *(double *)a6 = a7;
  *(double *)(a6 + 8) = a8;
  *(_QWORD *)(a6 + 16) = a5;
  *(_QWORD *)(a6 + 24) = v16;
  return result;
}

uint64_t _s15_MapKit_SwiftUI14UserAnnotationV6anchor7contentACyxG0cD09UnitPointV_xAA0E8LocationVctcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(_QWORD *)(a3 + 16) = result;
  *(_QWORD *)(a3 + 24) = a2;
  return result;
}

uint64_t static SelectedUserAnnotation._makeMapContent(content:inputs:)(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t List;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  _BYTE v24[20];
  _DWORD v25[4];
  uint64_t v26;
  char v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552882A8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (int *)&v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  _s15_MapKit_SwiftUI05EmptyA7ContentV05_makeaF07content6inputsAA01_aF7OutputsV0cD011_GraphValueVyACG_AA01_aF6InputsVtFZ_0();
  type metadata accessor for SelectedUserAnnotation(0, a3, a4, v12);
  v13 = sub_21C52BB38(a1);
  sub_21C5E32B0();
  if (v10 != 4)
    __break(1u);
  v14 = *v11;
  (*(void (**)(int *, uint64_t))(v9 + 8))(v11, v8);
  v15 = type metadata accessor for _MapContentInputs(0);
  v16 = *(_DWORD *)(a2 + *(int *)(v15 + 28));
  v25[0] = v13;
  v25[1] = v14;
  v25[2] = v16;
  v25[3] = 0;
  v26 = 0;
  v27 = 6;
  MEMORY[0x24BDAC7A8](v15);
  List = type metadata accessor for SelectedUserAnnotation.MakeList(0, a3, a4, v17);
  *(_QWORD *)&v24[-16] = List;
  *(_QWORD *)&v24[-8] = MEMORY[0x22077F9A0](&unk_21C5E6810, List);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552882B8);
  sub_21C52951C((uint64_t)v25, (uint64_t)sub_21C53741C, (uint64_t)&v24[-32], List, MEMORY[0x24BEE4078], v19, MEMORY[0x24BEE40A8], v20);
  v21 = swift_release();
  MEMORY[0x24BDAC7A8](v21);
  *(_DWORD *)&v24[-16] = v22;
  sub_21C524DF0();
  return sub_21C5E3478();
}

uint64_t sub_21C5383A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *Value;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t OutputValue;
  char v48;
  int v49;
  uint64_t v50;
  BOOL v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;
  uint64_t v62;
  int v63;
  void (*v64)(uint64_t, char *, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v100 = *MEMORY[0x24BDAC8D0];
  v82 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v82);
  v89 = (uint64_t)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for MapContentList.Item(0);
  v84 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v86 = (uint64_t *)((char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v81 = type metadata accessor for ResolvedUserAnnotation();
  MEMORY[0x24BDAC7A8](v81);
  v85 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_21C5E328C();
  v87 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552884D0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v76 - v12;
  v14 = sub_21C5E34E4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v88 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v95 = (char *)&v76 - v18;
  v92 = v1;
  v19 = *(_DWORD *)(v1 + 8);
  v20 = *(_QWORD *)(a1 + 24);
  v79 = *(_QWORD *)(a1 + 16);
  v78 = v20;
  type metadata accessor for SelectedUserAnnotation(0, v79, v20, v21);
  Value = (uint64_t *)AGGraphGetValue();
  v77 = v23;
  v24 = *Value;
  v25 = Value[1];
  v26 = Value[2];
  v27 = *(int *)(v8 + 48);
  v28 = *MEMORY[0x24BE096C0];
  v90 = Value[3];
  v91 = v15;
  v94 = v26;
  if (v19 == v28)
  {
    sub_21C531AAC(v26);
    sub_21C5E34D8();
    v34 = 0;
    v13[v27] = 0;
    v33 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  }
  else
  {
    v29 = AGGraphGetValue();
    v31 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v11, v29, v14);
    v11[v27] = v31 & 1;
    v32 = *(int *)(v8 + 48);
    v33 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v33(v13, v11, v14);
    v13[v27] = v11[v32];
    sub_21C531AAC(v26);
    v34 = v13[v27];
  }
  v35 = v14;
  v80 = (void (*)(uint64_t, char *, uint64_t))v33;
  v33(v95, v13, v14);
  v36 = v92;
  v37 = v93;
  v38 = AGGraphGetValue();
  v39 = v87;
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
  v40(v7, v38, v37);
  v41 = sub_21C5E31B4();
  v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  v42(v7, v37);
  v43 = *(_QWORD *)(v36 + 16);
  v44 = (v41 | v43) == 0;
  if (v41 && v43)
  {
    swift_retain();
    swift_retain();
    v44 = sub_21C5E3718();
    swift_release();
    swift_release();
  }
  v45 = v93;
  v46 = AGGraphGetValue();
  v40(v7, v46, v45);
  sub_21C53386C();
  sub_21C5E3298();
  OutputValue = ((uint64_t (*)(char *, uint64_t))v42)(v7, v45);
  v48 = v98;
  v49 = *(unsigned __int8 *)(v36 + 24);
  if (v98 == 6)
  {
    v50 = v94;
    if ((v49 != 6) | v77 & 1 | ((v44 & 1) == 0) | v34 & 1)
      goto LABEL_24;
  }
  else
  {
    v50 = v94;
    if (v49 == 6)
      goto LABEL_24;
    switch(v98)
    {
      case 5u:
        v51 = v49 == 5;
        break;
      case 4u:
        v51 = v49 == 4;
        break;
      case 3u:
        v51 = v49 == 3;
        break;
      default:
        if ((v49 - 3) < 3 || v77 & 1 | ((v44 & 1) == 0) | v34 & 1 || v98 != v49)
          goto LABEL_24;
        goto LABEL_21;
    }
    v52 = !v51;
    if ((v52 | v77) & 1 | ((v44 & 1) == 0) | v34 & 1)
      goto LABEL_24;
  }
LABEL_21:
  OutputValue = AGGraphGetOutputValue();
  if (OutputValue)
  {
    *(_BYTE *)(v36 + 24) = v48;
    *(_QWORD *)(v36 + 16) = v41;
    goto LABEL_33;
  }
LABEL_24:
  if (v50)
    v53 = v90;
  else
    v53 = 0;
  v96 = v50;
  v97 = v53;
  MEMORY[0x24BDAC7A8](OutputValue);
  v54 = v78;
  *(&v76 - 2) = v79;
  *(&v76 - 1) = v54;
  sub_21C531AAC(v50);
  swift_getFunctionTypeMetadata1();
  sub_21C5E3BB0();
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552886F0);
  sub_21C537458((void (*)(char *, char *))sub_21C539194, (uint64_t)(&v76 - 4), MEMORY[0x24BEE4078], v55, v56, (uint64_t)&v98);
  sub_21C531A9C(v96);
  v57 = v98;
  if (v98)
  {
    v58 = v99;
    v59 = swift_allocObject();
    *(_QWORD *)(v59 + 16) = v57;
    *(_QWORD *)(v59 + 24) = v58;
    v60 = sub_21C539814;
  }
  else
  {
    v60 = 0;
    v59 = 0;
  }
  v61 = (uint64_t)v85;
  v62 = v91;
  v63 = *(_DWORD *)(v36 + 12) + 1;
  *(_DWORD *)(v36 + 12) = v63;
  v64 = *(void (**)(uint64_t, char *, uint64_t))(v62 + 16);
  v65 = v95;
  v64(v61 + *(int *)(v81 + 32), v95, v35);
  *(_QWORD *)v61 = v24;
  *(_QWORD *)(v61 + 8) = v25;
  *(_QWORD *)(v61 + 16) = v60;
  *(_QWORD *)(v61 + 24) = v59;
  *(_QWORD *)(v61 + 32) = v41;
  *(_BYTE *)(v61 + 40) = v48;
  v64((uint64_t)v88, v65, v35);
  sub_21C529664(v61, v89, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedUserAnnotation);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_21C531AAC((uint64_t)v60);
  sub_21C52B9E4();
  sub_21C5E34F0();
  v66 = v98;
  v67 = v35;
  if (!v98)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_255287F08);
    v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_21C5E5570;
    *(_QWORD *)(v66 + 32) = 0;
    *(_BYTE *)(v66 + 72) = 0;
  }
  v68 = (uint64_t)v86;
  *v86 = v66;
  v69 = v83;
  v80(v68 + *(int *)(v83 + 28), v88, v67);
  *(_DWORD *)(v68 + 8) = v63;
  sub_21C536C90(v89, v68 + *(int *)(v69 + 24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552884D8);
  v70 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = xmmword_21C5E5570;
  sub_21C529664(v68, v71 + v70, type metadata accessor for MapContentList.Item);
  v98 = sub_21C5BA7C0(v71);
  v99 = v72;
  AGGraphSetOutputValue();
  sub_21C531A9C((uint64_t)v60);
  swift_bridgeObjectRelease();
  v73 = v68;
  v35 = v67;
  sub_21C52A88C(v73, type metadata accessor for MapContentList.Item);
  sub_21C52A88C(v61, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedUserAnnotation);
  v74 = v92;
  *(_BYTE *)(v92 + 24) = v48;
  *(_QWORD *)(v74 + 16) = v41;
LABEL_33:
  swift_retain();
  swift_release();
  sub_21C531A9C(v94);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v95, v35);
}

uint64_t sub_21C538BB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void (*v3)(__int128 *);
  uint64_t result;
  __int128 v5;

  v5 = *(_OWORD *)MEMORY[0x24BDAC7A8](a1);
  v3(&v5);
  result = sub_21C5E37B4();
  *a2 = result;
  return result;
}

uint64_t sub_21C538C4C(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  return static SelectedUserAnnotation._makeMapContent(content:inputs:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t type metadata accessor for UserAnnotation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserAnnotation);
}

uint64_t type metadata accessor for UserAnnotation.MakeList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserAnnotation.MakeList);
}

uint64_t type metadata accessor for SelectedUserAnnotation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SelectedUserAnnotation);
}

uint64_t type metadata accessor for SelectedUserAnnotation.MakeList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SelectedUserAnnotation.MakeList);
}

uint64_t sub_21C538C88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C538C98()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21C538CA0(uint64_t result)
{
  if (*(_QWORD *)(result + 16))
    return swift_release();
  return result;
}

ValueMetadata *type metadata accessor for DefaultUserAnnotationContent()
{
  return &type metadata for DefaultUserAnnotationContent;
}

uint64_t sub_21C538CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v3;
    *(_QWORD *)(a1 + 24) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  return a1;
}

_QWORD *sub_21C538D28(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = a1 + 2;
  v5 = a2 + 2;
  v4 = a2[2];
  if (!a1[2])
  {
    if (v4)
    {
      v7 = a2[3];
      a1[2] = v4;
      a1[3] = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = a2[3];
  a1[2] = v4;
  a1[3] = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_21C538DB8(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v4)
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v4;
      *(_QWORD *)(a1 + 24) = v7;
      return a1;
    }
LABEL_7:
    *v3 = *v5;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v6;
  swift_release();
  return a1;
}

uint64_t sub_21C538E34(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_21C538E90(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

uint64_t sub_21C538EE4()
{
  return MEMORY[0x24BDF5138];
}

uint64_t sub_21C538EF0()
{
  return swift_allocateGenericValueMetadata();
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t destroy for MapPin()
{
  return swift_release();
}

uint64_t sub_21C538F28(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t sub_21C538F64(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t sub_21C538FD0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t sub_21C539014(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_21C539070(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

void sub_21C5390C8()
{
  JUMPOUT(0x22077F9A0);
}

void sub_21C5390D8()
{
  JUMPOUT(0x22077F9A0);
}

uint64_t type metadata accessor for ResolvedUserAnnotation()
{
  uint64_t result;

  result = qword_2552886F8;
  if (!qword_2552886F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C539124@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21C5391B8(a1, (uint64_t)sub_21C539178, a2);
}

uint64_t sub_21C539148()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_21C539178@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_21C538BB4(a1, a2);
}

uint64_t sub_21C539194@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21C5391B8(a1, (uint64_t)sub_21C539834, a2);
}

uint64_t sub_21C5391B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = *a1;
  v6 = a1[1];
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v3 + 16);
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v6;
  *a3 = a2;
  a3[1] = v8;
  return swift_retain();
}

uint64_t sub_21C53921C()
{
  swift_release();
  return swift_deallocObject();
}

_OWORD *sub_21C539240(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _OWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_OWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    v7 = a2[2];
    if (v7)
    {
      v8 = a2[3];
      *((_QWORD *)v4 + 2) = v7;
      *((_QWORD *)v4 + 3) = v8;
      swift_retain();
    }
    else
    {
      a1[1] = *((_OWORD *)a2 + 1);
    }
    *((_QWORD *)v4 + 4) = a2[4];
    *((_BYTE *)v4 + 40) = *((_BYTE *)a2 + 40);
    v10 = *(int *)(a3 + 32);
    v11 = (char *)v4 + v10;
    v12 = (uint64_t)a2 + v10;
    v13 = sub_21C5E34E4();
    v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_retain();
    v14(v11, v12, v13);
  }
  return v4;
}

uint64_t sub_21C53931C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(a1 + 16))
    swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_21C5E34E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_21C539374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(int *)(a3 + 32);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_21C5E34E4();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_retain();
  v12(v9, v10, v11);
  return a1;
}

uint64_t sub_21C539424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = (_OWORD *)(a1 + 16);
  v8 = (_OWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v7)
    {
      v10 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 24) = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *v6 = *v8;
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v9;
  swift_retain();
  swift_release();
LABEL_8:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v11 = *(int *)(a3 + 32);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_21C539510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(int *)(a3 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_21C5395A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = (_OWORD *)(a1 + 16);
  v8 = (_OWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v7)
    {
      v10 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 24) = v10;
      goto LABEL_8;
    }
LABEL_7:
    *v6 = *v8;
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v9;
  swift_release();
LABEL_8:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v11 = *(int *)(a3 + 32);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_21C539670()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C53967C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_21C5E34E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v9);
  }
}

uint64_t sub_21C539704()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C539710(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 16) = a2;
  }
  else
  {
    v7 = sub_21C5E34E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21C539784()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C5E34E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21C539844(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_21C5E349C();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_21C5398DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_21C5E349C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_21C539924(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21C5E349C();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *sub_21C539994(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C5E349C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_21C539A08(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21C5E349C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_21C539A64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_21C5E349C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_21C539AD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C539ADC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for _MapContentOutputs(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_21C539B58()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21C539B64(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for _MapContentOutputs(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MultiPreferenceCombinerVisitor()
{
  uint64_t result;

  result = qword_255288708;
  if (!qword_255288708)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_21C539C14()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C5E349C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C539C8C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v29 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_21C5E3AFC();
  if (!v20)
    return sub_21C5E3A18();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_21C5E38BC();
  v34 = sub_21C5E3D18();
  sub_21C5E3CD0();
  v37 = v8;
  result = sub_21C5E3AF0();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_21C5E3B20();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v14);
      v24(v43, 0);
      v28 = v42;
      v38(v14, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
      sub_21C5E3D00();
      result = sub_21C5E3B14();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21C539F7C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char *v18;
  int v19;
  int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t WeakValue;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v36 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v36 - v11;
  v38 = a2;
  v39 = a3;
  sub_21C5E2F8C();
  v13 = sub_21C5E2DA0();
  v14 = swift_bridgeObjectRetain();
  if (MEMORY[0x22077EF80](v14, v13))
  {
    v15 = 0;
    v16 = a1 + 36;
    v17 = 1;
    do
    {
      v21 = sub_21C5E3A30();
      v22 = sub_21C5E39F4();
      if ((v21 & 1) != 0)
      {
        v23 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_14;
      }
      else
      {
        sub_21C5E3C88();
        v22 = swift_unknownObjectRelease();
        v23 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_14:
          __break(1u);
          return swift_bridgeObjectRelease();
        }
      }
      if ((v17 & 1) != 0)
      {
        WeakValue = AGGraphGetWeakValue();
        if (WeakValue)
        {
          v25 = v37;
          v26 = v13;
          v27 = a1;
          v28 = a4;
          v29 = v12;
          v30 = v36;
          (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, WeakValue, AssociatedTypeWitness);
          (*(void (**)(char *, uint64_t))(v25 + 8))(v28, AssociatedTypeWitness);
          v31 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
          v32 = v29;
          v33 = v30;
          v12 = v29;
          a4 = v28;
          a1 = v27;
          v13 = v26;
          v31(v32, v33, AssociatedTypeWitness);
        }
        else
        {
          sub_21C5E2F8C();
          v34 = v37;
          (*(void (**)(char *, uint64_t))(v37 + 8))(a4, AssociatedTypeWitness);
          v31 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
        }
        v31(a4, v12, AssociatedTypeWitness);
      }
      else
      {
        MEMORY[0x24BDAC7A8](v22);
        v18 = v39;
        *(&v36 - 4) = v38;
        *(&v36 - 3) = v18;
        *((_DWORD *)&v36 - 4) = v19;
        *((_DWORD *)&v36 - 3) = v20;
        sub_21C5E2F98();
      }
      v17 = 0;
      v16 += 8;
      ++v15;
    }
    while (v23 != MEMORY[0x22077EF80](a1, v13));
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C53A230@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t WeakValue;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  WeakValue = AGGraphGetWeakValue();
  if (WeakValue)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, WeakValue, AssociatedTypeWitness);
  else
    return sub_21C5E2F8C();
}

uint64_t sub_21C53A2E0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;

  return sub_21C539F7C(*v2, *(char **)(a1 + 16), *(char **)(a1 + 24), a2);
}

uint64_t sub_21C53A2F0()
{
  return sub_21C53AB98();
}

uint64_t sub_21C53A2FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t Value;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  Value = AGGraphGetValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, Value, AssociatedTypeWitness);
  return sub_21C5E2F98();
}

uint64_t sub_21C53A3B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t Value;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  Value = AGGraphGetValue();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, Value, AssociatedTypeWitness);
}

uint64_t sub_21C53A424@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, 1, 1, AssociatedTypeWitness);
}

uint64_t sub_21C53A474@<X0>(uint64_t a1@<X8>)
{
  return sub_21C53A2FC(a1);
}

uint64_t sub_21C53A484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  _QWORD v33[7];

  v4 = v3;
  v33[6] = *MEMORY[0x24BDAC8D0];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_21C5E2EC0();
  v9 = sub_21C5E3BB0();
  v31 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v27 - v10;
  v33[0] = *v3;
  v33[3] = a2;
  v33[4] = a3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288718);
  v12 = sub_21C5E2DB8();
  sub_21C53A9B0();
  v13 = sub_21C5E39AC();
  swift_bridgeObjectRelease();
  v14 = MEMORY[0x22077EF68](v13, v12);
  switch(v14)
  {
    case 2:
      sub_21C5E3A84();
      v30 = v9;
      v16 = v33[0];
      sub_21C5E3A84();
      v17 = swift_bridgeObjectRelease();
      v28 = &v27;
      v33[0] = __PAIR64__(v33[0], v16);
      MEMORY[0x24BDAC7A8](v17);
      v29 = v4;
      *(&v27 - 4) = AssociatedTypeWitness;
      v19 = type metadata accessor for PairPreferenceCombiner(0, a2, a3, v18);
      *(&v27 - 3) = v19;
      *(&v27 - 2) = MEMORY[0x22077F9A0](&unk_21C5E6A88, v19);
      sub_21C52951C((uint64_t)v33, (uint64_t)sub_21C53ABE8, (uint64_t)(&v27 - 6), v19, MEMORY[0x24BEE4078], v12, MEMORY[0x24BEE40A8], v20);
      break;
    case 1:
      sub_21C5E3A84();
      swift_bridgeObjectRelease();
      sub_21C52BAE0(v33[0], (uint64_t)v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v11, 0, 1, v8);
      type metadata accessor for MultiPreferenceCombinerVisitor();
      sub_21C524CE4((uint64_t)v11);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v11, v9);
    case 0:
      return swift_bridgeObjectRelease();
    default:
      v21 = sub_21C53A9FC(v13, a2, a3);
      v30 = v9;
      v22 = v21;
      v23 = swift_bridgeObjectRelease();
      v28 = &v27;
      v33[0] = v22;
      MEMORY[0x24BDAC7A8](v23);
      v29 = v4;
      *(&v27 - 4) = AssociatedTypeWitness;
      v25 = type metadata accessor for PreferenceCombiner(0, a2, a3, v24);
      *(&v27 - 3) = v25;
      *(&v27 - 2) = MEMORY[0x22077F9A0](&unk_21C5E6AC8, v25);
      sub_21C52951C((uint64_t)v33, (uint64_t)sub_21C52A840, (uint64_t)(&v27 - 6), v25, MEMORY[0x24BEE4078], v12, MEMORY[0x24BEE40A8], v26);
      swift_bridgeObjectRelease();
      break;
  }
  sub_21C52BAE0(v32, (uint64_t)v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v11, 0, 1, v8);
  type metadata accessor for MultiPreferenceCombinerVisitor();
  sub_21C524CE4((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v11, v30);
}

uint64_t sub_21C53A868@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;

  swift_getAssociatedTypeWitness();
  sub_21C5E2EC0();
  v6 = sub_21C5E3BB0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v13[-v8];
  sub_21C5232AC();
  v14 = a1;
  v15 = a2;
  v10 = sub_21C5E2DB8();
  sub_21C537458((void (*)(char *, char *))sub_21C52553C, (uint64_t)v13, MEMORY[0x24BEE4078], v10, v11, a3);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_21C53A998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_21C53A868(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_21C53A9B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255288720[0];
  if (!qword_255288720[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255288718);
    result = MEMORY[0x22077F9A0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, qword_255288720);
  }
  return result;
}

uint64_t sub_21C53A9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[6];

  v8[5] = a1;
  v8[2] = a2;
  v8[3] = a3;
  swift_getAssociatedTypeWitness();
  sub_21C5E2DB8();
  v3 = sub_21C5E3A6C();
  v4 = sub_21C5E2DA0();
  v5 = MEMORY[0x22077F9A0](MEMORY[0x24BEE12E0], v3);
  return sub_21C539C8C((void (*)(char *, char *))sub_21C53AADC, (uint64_t)v8, v3, v4, MEMORY[0x24BEE4078], v5, MEMORY[0x24BEE40A8], v6);
}

uint64_t type metadata accessor for PreferenceCombiner(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreferenceCombiner);
}

uint64_t type metadata accessor for PairPreferenceCombiner(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PairPreferenceCombiner);
}

uint64_t sub_21C53AADC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AGCreateWeakAttribute();
  *a1 = result;
  return result;
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MapViewReference(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MapViewReference(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void sub_21C53AB60()
{
  JUMPOUT(0x22077F9A0);
}

void sub_21C53AB70()
{
  JUMPOUT(0x22077F9A0);
}

uint64_t sub_21C53AB80@<X0>(uint64_t a1@<X8>)
{
  return sub_21C53A230(a1);
}

uint64_t sub_21C53AB8C@<X0>(uint64_t a1@<X8>)
{
  return sub_21C53A3B0(a1);
}

uint64_t sub_21C53AB98()
{
  sub_21C5E3E80();
  sub_21C5E3988();
  swift_bridgeObjectRelease();
  return 548047074;
}

uint64_t sub_21C53ABE8@<X0>(_DWORD *a1@<X8>)
{
  return sub_21C52A840(a1);
}

uint64_t MapAnnotation.init(coordinate:anchorPoint:content:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, double *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  *a4 = a5;
  a4[1] = a6;
  a4[2] = a7;
  a4[3] = a8;
  type metadata accessor for MapAnnotation(0, a2, a3, a3);
  return a1();
}

uint64_t type metadata accessor for MapAnnotation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MapAnnotation);
}

uint64_t MapAnnotation._annotationData.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v7;
  v9 = v7[1];
  (*(void (**)(char *))(v4 + 16))(v6);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = *(_OWORD *)(a1 + 16);
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v4 + 32))(v11 + v10, v6, a1);
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v9;
  *(_BYTE *)(a2 + 16) = 2;
  *(_QWORD *)(a2 + 24) = sub_21C53AEE0;
  *(_QWORD *)(a2 + 32) = v11;
  return result;
}

void sub_21C53AD30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  double v18;
  double v19;
  double *v20;
  double v21;
  double v22;
  uint64_t v23;

  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SwiftUIAnnotationView();
  v12 = swift_dynamicCastClass();
  if (v12)
  {
    v14 = (char *)v12;
    v15 = type metadata accessor for MapAnnotation(0, a4, a5, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3 + *(int *)(v15 + 40), a4);
    v16 = a1;
    v17 = sub_21C5E37B4();
    sub_21C5DF6CC(v17);
    swift_release();
    v18 = *(double *)(a3 + 16);
    v19 = *(double *)(a3 + 24);
    v20 = (double *)&v14[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_contentAnchorPoint];
    *v20 = v18;
    v20[1] = v19;
    objc_msgSend(v14, sel_frame);
    objc_msgSend(v14, sel_setCenterOffset_, v21 * 0.5 - v18 * v21, v22 * 0.5 - v19 * v22);

  }
}

uint64_t sub_21C53AE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for MapAnnotation(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + *(int *)(v6 + 40) + ((v7 + 32) & ~v7), v5);
  return swift_deallocObject();
}

void sub_21C53AEE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MapAnnotation(0, v7, v8, a4) - 8) + 80);
  sub_21C53AD30(a1, a2, v4 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t MapPin.init(coordinate:tint:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(_QWORD *)(a2 + 16) = result;
  return result;
}

uint64_t MapPin._annotationData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C53AFCC(0, (uint64_t)sub_21C53AF70, a1);
}

void sub_21C53AF70(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_21C53B02C(a1, a2, *(_QWORD *)(v2 + 32), 0x24BDDB150, (SEL *)&selRef_setPinTintColor_);
}

uint64_t sub_21C53AF9C@<X0>(uint64_t a1@<X8>)
{
  return sub_21C53B158(0, (uint64_t)sub_21C53BC84, a1);
}

uint64_t MapMarker._annotationData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_21C53AFCC(1, (uint64_t)sub_21C53B114, a1);
}

uint64_t sub_21C53AFCC@<X0>(char a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v7 = *v3;
  v8 = v3[1];
  v9 = v3[2];
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v7;
  v10[3] = v8;
  v10[4] = v9;
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  *(_QWORD *)(a3 + 32) = v10;
  return swift_retain();
}

void sub_21C53B02C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v8;
  void *v9;
  void *v10;
  id v11;

  objc_opt_self();
  v8 = (void *)swift_dynamicCastObjCClass();
  if (v8)
  {
    v9 = v8;
    if (a3)
    {
      sub_21C53BC34();
      swift_retain_n();
      v11 = a1;
      v10 = (void *)sub_21C5E3B80();
      objc_msgSend(v9, *a5, v10);
      swift_release();

    }
    else
    {
      objc_msgSend(v8, *a5, 0);
    }
  }
}

void sub_21C53B114(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_21C53B02C(a1, a2, *(_QWORD *)(v2 + 32), 0x24BDDB138, (SEL *)&selRef_setMarkerTintColor_);
}

uint64_t sub_21C53B140@<X0>(uint64_t a1@<X8>)
{
  return sub_21C53B158(1, (uint64_t)sub_21C53BC80, a1);
}

uint64_t sub_21C53B158@<X0>(char a1@<W3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v7 = *v3;
  v8 = v3[1];
  v9 = v3[2];
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v7;
  v10[3] = v8;
  v10[4] = v9;
  *(_QWORD *)a3 = v7;
  *(_QWORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  *(_QWORD *)(a3 + 32) = v10;
  return swift_retain();
}

uint64_t dispatch thunk of MapAnnotationProtocol._annotationData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_21C53B1C4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21C53B23C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 32) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v9 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    v10 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v9 = *v10;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)v9 + v5 + 16) & ~v5, ((unint64_t)v10 + v5 + 16) & ~v5);
  }
  return v3;
}

uint64_t sub_21C53B2F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_OWORD *sub_21C53B320(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 16))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_21C53B388(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v4[1] = v5[1];
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_21C53B400(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_21C53B468(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v4[1] = v5[1];
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_21C53B4D4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v8 = ((v6 + 32) & ~v6) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v6 + 16) & ~v6);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return v5 + v12 + 1;
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_21C53B594 + 4 * byte_21C5E6B10[(v8 - 1)]))();
}

void sub_21C53B5FC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((v8 + 32) & ~v8) + *(_QWORD *)(v6 + 64);
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      v14 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v15 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, ((v8 + 32) & ~v8) + *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t initializeBufferWithCopyOfBuffer for MapPin(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MapPin(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MapPin()
{
  return &type metadata for MapPin;
}

_QWORD *_s15_MapKit_SwiftUI6MapPinVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s15_MapKit_SwiftUI6MapPinVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s15_MapKit_SwiftUI6MapPinVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MapMarker()
{
  return &type metadata for MapMarker;
}

uint64_t destroy for _MapAnnotationData()
{
  return swift_release();
}

uint64_t initializeWithCopy for _MapAnnotationData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for _MapAnnotationData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for _MapAnnotationData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for _MapAnnotationData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _MapAnnotationData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for _MapAnnotationData()
{
  return &type metadata for _MapAnnotationData;
}

uint64_t storeEnumTagSinglePayload for _MapAnnotationData.ViewType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_21C53BB48 + 4 * byte_21C5E6B23[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_21C53BB7C + 4 * byte_21C5E6B1E[v4]))();
}

uint64_t sub_21C53BB7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C53BB84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C53BB8CLL);
  return result;
}

uint64_t sub_21C53BB98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C53BBA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_21C53BBA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C53BBAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for _MapAnnotationData.ViewType()
{
  return &type metadata for _MapAnnotationData.ViewType;
}

unint64_t sub_21C53BBCC()
{
  unint64_t result;

  result = qword_2552888A8;
  if (!qword_2552888A8)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E6C2C, &type metadata for _MapAnnotationData.ViewType);
    atomic_store(result, (unint64_t *)&qword_2552888A8);
  }
  return result;
}

uint64_t sub_21C53BC10()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_21C53BC34()
{
  unint64_t result;

  result = qword_2552888B0;
  if (!qword_2552888B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2552888B0);
  }
  return result;
}

uint64_t View.mapCameraKeyframeAnimator<A, B>(trigger:keyframes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)();
  _QWORD *v29;

  v26 = a9;
  v24 = a6;
  v25 = a2;
  v16 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, a5);
  v20 = sub_21C532DB4((uint64_t)v18, a5, a8, v19);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a4;
  v21[3] = a5;
  v21[4] = v24;
  v21[5] = a7;
  v21[6] = a8;
  v21[7] = a10;
  v21[8] = v25;
  v21[9] = a3;
  v27 = v20;
  v28 = sub_21C53BF34;
  v29 = v21;
  swift_retain();
  sub_21C5E3664();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_21C53BDD0()
{
  uint64_t v1;

  sub_21C53C98C();
  sub_21C5E3298();
  return v1;
}

double sub_21C53BE0C@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  uint64_t v4;

  sub_21C53C98C();
  sub_21C5E3298();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return result;
}

double sub_21C53BE60@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  uint64_t v4;

  sub_21C53C98C();
  sub_21C5E3298();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_QWORD *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_21C53BEB4(uint64_t *a1)
{
  sub_21C531C1C(*a1);
  sub_21C53C98C();
  return sub_21C5E32A4();
}

uint64_t sub_21C53BF10()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C53BF34()
{
  return sub_21C5E30B8();
}

uint64_t sub_21C53BFB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552888B8);
  v2 = sub_21C5E30A0();
  v4[0] = v1;
  v4[1] = sub_21C53C018();
  return MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_21C53C018()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2552888C0;
  if (!qword_2552888C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552888B8);
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_2552888C0);
  }
  return result;
}

char *sub_21C53C064(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = sub_21C5E2D64();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[*(int *)(a3 + 24)], (char *)a2 + *(int *)(a3 + 24), v11);
  }
  return a1;
}

uint64_t sub_21C53C138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_21C5E2D64();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v8(v5, v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + *(int *)(a2 + 24), v6);
}

uint64_t sub_21C53C1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C5E2D64();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t sub_21C53C270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C5E2D64();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t sub_21C53C318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C5E2D64();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t sub_21C53C3C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_21C5E2D64();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t sub_21C53C468()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C53C474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_21C5E2D64();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_21C53C4EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C53C4F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_21C5E2D64();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for KeyframeAnimationState()
{
  uint64_t result;

  result = qword_2552888D0;
  if (!qword_2552888D0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_21C53C5B4()
{
  unint64_t v0;
  unint64_t v1;

  sub_21C53C638();
  if (v0 <= 0x3F)
  {
    sub_21C5E2D64();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_21C53C638()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2552888E0)
  {
    v0 = sub_21C5E30E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2552888E0);
  }
}

uint64_t destroy for MapCameraKeyframeAnimationInfo()
{
  swift_release();
  return swift_release();
}

uint64_t _s15_MapKit_SwiftUI30MapCameraKeyframeAnimationInfoVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for MapCameraKeyframeAnimationInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MapCameraKeyframeAnimationInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MapCameraKeyframeAnimationInfo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MapCameraKeyframeAnimationInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MapCameraKeyframeAnimationInfo()
{
  return &type metadata for MapCameraKeyframeAnimationInfo;
}

uint64_t sub_21C53C830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  void (*v15)(_OWORD *);
  void (*v16)(char *, uint64_t);
  _OWORD v18[2];
  uint64_t v19;

  v7 = *(_QWORD *)(a6 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v18 - v11;
  v14 = *(_OWORD *)(v13 + 16);
  v18[0] = *(_OWORD *)v13;
  v18[1] = v14;
  v19 = *(_QWORD *)(v13 + 32);
  v15(v18);
  sub_21C5E30F4();
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v10, a6);
  sub_21C5E30F4();
  sub_21C5E30F4();
  v16(v10, a6);
  return ((uint64_t (*)(char *, uint64_t))v16)(v12, a6);
}

uint64_t sub_21C53C958()
{
  uint64_t *v0;

  return sub_21C53C830(v0[8], v0[9], v0[10], v0[2], v0[3], v0[4]);
}

unint64_t sub_21C53C98C()
{
  unint64_t result;

  result = qword_2552888E8[0];
  if (!qword_2552888E8[0])
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E6CF0, &type metadata for MapCameraKeyframeAnimationKey);
    atomic_store(result, qword_2552888E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MapCameraKeyframeAnimationKey()
{
  return &type metadata for MapCameraKeyframeAnimationKey;
}

void sub_21C53C9E0(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

MKMapItemRequest __swiftcall MKMapItemRequest.init(feature:)(_MapKit_SwiftUI::MapFeature feature)
{
  void *v1;
  id v2;

  v1 = *(void **)feature.mapFeatureAnnotation.super.isa;
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithMapFeatureAnnotation_, *(_QWORD *)feature.mapFeatureAnnotation.super.isa);

  return (MKMapItemRequest)v2;
}

id MKMapItemRequest.feature.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id result;

  v3 = objc_msgSend(v1, sel_mapFeatureAnnotation);

  if (!v3)
  {
    v4 = (void *)objc_opt_self();
    v5 = *MEMORY[0x24BDBCAB0];
    v6 = (void *)sub_21C5E3940();
    objc_msgSend(v4, sel_raise_format_arguments_, v5, v6, sub_21C5E3E8C());

  }
  result = objc_msgSend(v1, sel_mapFeatureAnnotation);
  if (result)
    *a1 = result;
  else
    __break(1u);
  return result;
}

id MKMapItemRequest.mapFeature.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  id result;

  result = objc_msgSend(v1, sel_mapFeatureAnnotation);
  *a1 = result;
  return result;
}

uint64_t sub_21C53CB40()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_21C5E37A8();
  if (v1 <= 0x3F)
  {
    result = sub_21C5E37F0();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_21C53CBCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  if (((v9 + 16) & (unint64_t)~v9) + v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v10 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v10 = ((v8 + 16) & ~(unint64_t)v8) + v7;
  v11 = v8 & 0x100000;
  if (v9 > 7 || v11 != 0 || v10 + 1 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v9 & 0xF8 ^ 0x1F8) & (v9 + 16)));
LABEL_21:
    swift_retain();
    return v4;
  }
  v15 = *((unsigned __int8 *)a2 + v10);
  if (v15 >= 2)
  {
    if (v10 <= 3)
      v16 = v10;
    else
      v16 = 4;
    __asm { BR              X14 }
  }
  if (v15 != 1)
  {
    (*(void (**)(uint64_t *, uint64_t *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
    *(_QWORD *)(((unint64_t)v4 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)v4 + v10) = 0;
    goto LABEL_21;
  }
  *a1 = *a2;
  v17 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = ((unint64_t)v17 + v9 + 8) & ~v9;
  v20 = ((unint64_t)v18 + v9 + 8) & ~v9;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  swift_retain();
  v21(v19, v20, v5);
  *((_BYTE *)v4 + v10) = 1;
  return v4;
}

uint64_t sub_21C53CD88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (((v7 + 16) & (unint64_t)~v7) + v5 > v6)
    v6 = ((v7 + 16) & ~v7) + v5;
  v8 = *(unsigned __int8 *)(a1 + v6);
  if (v8 >= 2)
  {
    if (v6 <= 3)
      v9 = v6;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v8 == 1)
  {
    swift_release();
    swift_release();
    return (*(uint64_t (**)(unint64_t, uint64_t))(v4 + 8))((((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7, v3);
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v4 + 8))(a1, *(_QWORD *)(a2 + 16));
    return swift_release();
  }
}

_QWORD *sub_21C53CEBC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (((v8 + 16) & (unint64_t)~v8) + v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v9 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v9 = ((v8 + 16) & ~v8) + v7;
  v10 = *((unsigned __int8 *)a2 + v9);
  if (v10 >= 2)
  {
    if (v9 <= 3)
      v11 = v9;
    else
      v11 = 4;
    __asm { BR              X14 }
  }
  if (v10 == 1)
  {
    *a1 = *a2;
    v12 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v14 = ((unint64_t)v12 + v8 + 8) & ~v8;
    v15 = ((unint64_t)v13 + v8 + 8) & ~v8;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_retain();
    swift_retain();
    v16(v14, v15, v5);
    v17 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
    *(_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    swift_retain();
    v17 = 0;
  }
  *((_BYTE *)a1 + v9) = v17;
  return a1;
}

_QWORD *sub_21C53D040(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    if (((v8 + 16) & (unint64_t)~v8) + v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
      v9 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    else
      v9 = ((v8 + 16) & ~v8) + v7;
    v10 = *((unsigned __int8 *)a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    v12 = ~v8;
    if (v10 == 1)
    {
      swift_release();
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v12, v5);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
      swift_release();
    }
    v13 = *((unsigned __int8 *)a2 + v9);
    if (v13 >= 2)
    {
      if (v9 <= 3)
        v14 = v9;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (v13 == 1)
    {
      *a1 = *a2;
      v15 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      v16 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v15 = *v16;
      v17 = ((unint64_t)v15 + v8 + 8) & v12;
      v18 = ((unint64_t)v16 + v8 + 8) & v12;
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      swift_retain();
      swift_retain();
      v19(v17, v18, v5);
      *((_BYTE *)a1 + v9) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *(_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)a1 + v9) = 0;
      swift_retain();
    }
  }
  return a1;
}

_QWORD *sub_21C53D2D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  char v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (((v7 + 16) & (unint64_t)~v7) + v6 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v8 = ((v7 + 16) & ~v7) + v6;
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X14 }
  }
  if (v9 == 1)
  {
    *a1 = *a2;
    v11 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v12 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v11 = *v12;
    (*(void (**)(unint64_t, unint64_t))(v5 + 32))(((unint64_t)v11 + v7 + 8) & ~v7, ((unint64_t)v12 + v7 + 8) & ~v7);
    v13 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 32))(a1, a2);
    v13 = 0;
    *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  *((_BYTE *)a1 + v8) = v13;
  return a1;
}

uint64_t *sub_21C53D42C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    if (((v8 + 16) & (unint64_t)~v8) + v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
      v9 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    else
      v9 = ((v8 + 16) & ~v8) + v7;
    v10 = *((unsigned __int8 *)a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    v12 = ~v8;
    if (v10 == 1)
    {
      swift_release();
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v12, v5);
    }
    else
    {
      (*(void (**)(uint64_t *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
      swift_release();
    }
    v13 = *((unsigned __int8 *)a2 + v9);
    if (v13 >= 2)
    {
      if (v9 <= 3)
        v14 = v9;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (v13 == 1)
    {
      v16 = *a2;
      v15 = (unint64_t)a2 + 15;
      *a1 = v16;
      v17 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v17 = *(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)v17 + v8 + 8) & v12, ((v15 & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v12, v5);
      v18 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 32))(a1, a2, v5);
      v18 = 0;
      *(_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    }
    *((_BYTE *)a1 + v9) = v18;
  }
  return a1;
}

uint64_t sub_21C53D6AC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  int v9;
  unsigned int v11;
  int v12;
  unsigned int v13;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
  if (v5 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v6 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v6 = v5;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_22;
  v7 = v6 + 1;
  v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    v11 = ((a2 + ~(-1 << v8) - 254) >> v8) + 1;
    if (HIWORD(v11))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v11 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v11 < 2)
    {
LABEL_22:
      v13 = *(unsigned __int8 *)(a1 + v6);
      if (v13 >= 2)
        return (v13 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_22;
LABEL_15:
  v12 = (v9 - 1) << v8;
  if (v7 > 3)
    v12 = 0;
  if (!(_DWORD)v7)
    return (v12 + 255);
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_21C53D788 + 4 * byte_21C5E6D58[(v7 - 1)]))();
}

void sub_21C53D7D4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v6;
  if (v7 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v8 = v7 + 1;
  if (a3 < 0xFF)
  {
    v9 = 0;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 + ~(-1 << (8 * v8)) - 254) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v10 = a2 - 255;
  if (v8 < 4)
  {
    if ((_DWORD)v7 != -1)
    {
      v12 = v10 & ~(-1 << (8 * v8));
      bzero(a1, v8);
      if ((_DWORD)v8 == 3)
      {
        *a1 = v12;
        *((_BYTE *)a1 + 2) = BYTE2(v12);
      }
      else if ((_DWORD)v8 == 2)
      {
        *a1 = v12;
      }
      else
      {
        *(_BYTE *)a1 = v12;
      }
    }
  }
  else
  {
    bzero(a1, v7 + 1);
    *(_DWORD *)a1 = v10;
  }
  __asm { BR              X10 }
}

uint64_t sub_21C53D994(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + v3;
  if (v4 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v5 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v5 = v4;
  if (*(unsigned __int8 *)(a1 + v5) < 2u)
    return *(unsigned __int8 *)(a1 + v5);
  if (v5 <= 3)
    v6 = v5;
  else
    v6 = 4;
  return ((uint64_t (*)(void))((char *)&loc_21C53D9F4 + 4 * byte_21C5E6D66[v6]))();
}

void sub_21C53DA3C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (a2 > 1)
  {
    v9 = *(_QWORD *)(v4 + 64);
    v10 = ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v9;
    if (v10 <= ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
      v11 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    else
      v11 = v10;
    v12 = a2 - 2;
    if (v11 < 4)
    {
      v13 = v12 >> (8 * v11);
      v14 = v12 & ~(-1 << (8 * v11));
      a1[v11] = v13 + 2;
      bzero(a1, v11);
      if ((_DWORD)v11 == 3)
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
      else if ((_DWORD)v11 == 2)
      {
        *(_WORD *)a1 = v14;
      }
      else
      {
        *a1 = v14;
      }
    }
    else
    {
      a1[v11] = 2;
      bzero(a1, v11);
      *(_DWORD *)a1 = v12;
    }
  }
  else
  {
    v5 = *(unsigned __int8 *)(v4 + 80);
    v6 = *(_QWORD *)(v4 + 64);
    v7 = ((v5 + 16) & ~v5) + v6;
    v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v7 > v8)
      v8 = v7;
    a1[v8] = a2;
  }
}

uint64_t type metadata accessor for StateOrBinding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateOrBinding);
}

uint64_t sub_21C53DB50()
{
  return sub_21C5E3058();
}

void static MapCameraUpdateFrequency.onEnd.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t View.onMapCameraChange(frequency:_:)(char *a1, uint64_t a2, uint64_t a3)
{
  return sub_21C53DDD8(a1, a2, a3);
}

{
  return sub_21C53DDD8(a1, a2, a3);
}

uint64_t sub_21C53DB84()
{
  uint64_t v1;

  sub_21C53E634();
  sub_21C5E3298();
  return v1;
}

uint64_t sub_21C53DBBC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_21C53E634();
  result = sub_21C5E3298();
  *a1 = v3;
  return result;
}

uint64_t sub_21C53DC08@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_21C53E634();
  result = sub_21C5E3298();
  *a1 = v3;
  return result;
}

uint64_t sub_21C53DC54()
{
  sub_21C53E634();
  swift_bridgeObjectRetain();
  return sub_21C5E32A4();
}

uint64_t sub_21C53DCB4(_QWORD **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v9 = *a1;
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_21C5B833C(0, v9[2] + 1, 1, v9);
    v9 = (_QWORD *)result;
  }
  v12 = v9[2];
  v11 = v9[3];
  if (v12 >= v11 >> 1)
  {
    result = (uint64_t)sub_21C5B833C((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
    v9 = (_QWORD *)result;
  }
  v9[2] = v12 + 1;
  v13 = &v9[3 * v12];
  *((_BYTE *)v13 + 32) = a2 & 1;
  v13[5] = sub_21C53E614;
  v13[6] = v8;
  *a1 = v9;
  return result;
}

uint64_t sub_21C53DD94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C53DDB8(_QWORD **a1)
{
  uint64_t v1;

  return sub_21C53DCB4(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_21C53DDD8(char *a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;

  v5 = *a1;
  swift_getKeyPath();
  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  swift_retain();
  sub_21C5E36A0();
  swift_release();
  return swift_release();
}

uint64_t sub_21C53DE8C(_QWORD **a1, char a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v8 = *a1;
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_21C5B833C(0, v8[2] + 1, 1, v8);
    v8 = (_QWORD *)result;
  }
  v11 = v8[2];
  v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    result = (uint64_t)sub_21C5B833C((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
    v8 = (_QWORD *)result;
  }
  v8[2] = v11 + 1;
  v12 = &v8[3 * v11];
  *((_BYTE *)v12 + 32) = a2 & 1;
  v12[5] = a3;
  v12[6] = a4;
  *a1 = v8;
  return result;
}

uint64_t sub_21C53DF50(_QWORD **a1)
{
  uint64_t v1;

  return sub_21C53DE8C(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

double MapCameraUpdateContext.camera.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v3;

  result = *(double *)(v1 + 32);
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  *(double *)(a1 + 32) = result;
  return result;
}

double MapCameraUpdateContext.region.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double MapCameraUpdateContext.rect.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

BOOL sub_21C53DF88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void static MapCameraUpdateFrequency.continuous.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MapCameraUpdateContext(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 104))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MapCameraUpdateContext(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 104) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MapCameraUpdateContext()
{
  return &type metadata for MapCameraUpdateContext;
}

ValueMetadata *type metadata accessor for MapCameraUpdateFrequency()
{
  return &type metadata for MapCameraUpdateFrequency;
}

uint64_t sub_21C53E064(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255288970);
  v2 = sub_21C5E30A0();
  v4[0] = v1;
  v4[1] = sub_21C53E0C4();
  return MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_21C53E0C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255288978;
  if (!qword_255288978)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255288970);
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDF1248], v1);
    atomic_store(result, (unint64_t *)&qword_255288978);
  }
  return result;
}

uint64_t _s15_MapKit_SwiftUI11MapPolylineV12ContourStyleV7StorageOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s15_MapKit_SwiftUI24MapCameraUpdateFrequencyV7StorageOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_21C53E1EC + 4 * byte_21C5E6DD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_21C53E220 + 4 * byte_21C5E6DD0[v4]))();
}

uint64_t sub_21C53E220(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C53E228(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x21C53E230);
  return result;
}

uint64_t sub_21C53E23C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x21C53E244);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_21C53E248(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_21C53E250(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_21C53E25C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MapCameraUpdateFrequency.Storage()
{
  return &type metadata for MapCameraUpdateFrequency.Storage;
}

uint64_t sub_21C53E27C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MapCameraChangeResponder(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MapCameraChangeResponder(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MapCameraChangeResponder(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MapCameraChangeResponder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MapCameraChangeResponder()
{
  return &type metadata for MapCameraChangeResponder;
}

unint64_t sub_21C53E3C4()
{
  unint64_t result;

  result = qword_255288980;
  if (!qword_255288980)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E6E8C, &type metadata for MapCameraUpdateFrequency.Storage);
    atomic_store(result, (unint64_t *)&qword_255288980);
  }
  return result;
}

void sub_21C53E408()
{
  qword_255293A38 = MEMORY[0x24BEE4AF8];
}

uint64_t sub_21C53E41C@<X0>(_QWORD *a1@<X8>)
{
  if (qword_2552878D8 != -1)
    swift_once();
  *a1 = qword_255293A38;
  return swift_bridgeObjectRetain();
}

uint64_t *sub_21C53E46C@<X0>(id a1@<X1>, uint64_t *result@<X0>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = (uint64_t)result;
  if ((result[13] & 1) != 0)
  {
    v6 = objc_msgSend(a1, sel_camera);
    objc_msgSend(v6, sel_centerCoordinate);
    v36 = v8;
    v37 = v7;
    objc_msgSend(v6, sel_centerCoordinateDistance);
    v35 = v9;
    objc_msgSend(v6, sel_heading);
    v34 = v10;
    objc_msgSend(v6, sel_pitch);
    v33 = v11;

    objc_msgSend(a1, sel_region);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;
    objc_msgSend(a1, sel_visibleMapRect);
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;
    result = (uint64_t *)swift_beginAccess();
    v29 = v33;
    v28 = v34;
    v31 = v35;
    v30 = v36;
    v32 = v37;
    *(_QWORD *)v3 = v37;
    *(_QWORD *)(v3 + 8) = v36;
    *(_QWORD *)(v3 + 16) = v35;
    *(_QWORD *)(v3 + 24) = v34;
    *(_QWORD *)(v3 + 32) = v33;
    *(_QWORD *)(v3 + 40) = v13;
    *(_QWORD *)(v3 + 48) = v15;
    *(_QWORD *)(v3 + 56) = v17;
    *(_QWORD *)(v3 + 64) = v19;
    *(_QWORD *)(v3 + 72) = v21;
    *(_QWORD *)(v3 + 80) = v23;
    *(_QWORD *)(v3 + 88) = v25;
    *(_QWORD *)(v3 + 96) = v27;
    *(_BYTE *)(v3 + 104) = 0;
  }
  else
  {
    v25 = result[11];
    v27 = result[12];
    v21 = result[9];
    v23 = result[10];
    v17 = result[7];
    v19 = result[8];
    v13 = result[5];
    v15 = result[6];
    v28 = result[3];
    v29 = result[4];
    v30 = result[1];
    v31 = result[2];
    v32 = *result;
  }
  *a3 = v32;
  a3[1] = v30;
  a3[2] = v31;
  a3[3] = v28;
  a3[4] = v29;
  a3[5] = v13;
  a3[6] = v15;
  a3[7] = v17;
  a3[8] = v19;
  a3[9] = v21;
  a3[10] = v23;
  a3[11] = v25;
  a3[12] = v27;
  return result;
}

uint64_t sub_21C53E5F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C53E614()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_21C53E634()
{
  unint64_t result;

  result = qword_255288988;
  if (!qword_255288988)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E6F28, &type metadata for MapCameraChangeRespondersEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_255288988);
  }
  return result;
}

ValueMetadata *type metadata accessor for MapCameraChangeRespondersEnvironmentKey()
{
  return &type metadata for MapCameraChangeRespondersEnvironmentKey;
}

unint64_t sub_21C53E68C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255288D30);
  v2 = sub_21C5E3D84();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_21C531B18(v6, (uint64_t)&v13, &qword_255288D98);
    v7 = v13;
    result = sub_21C530EAC(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = sub_21C531764((uint64_t)&v14, v3[7] + 8 * result);
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 16;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t StaticMap.init(content:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = type metadata accessor for StaticMap(0, a2, a3, a3);
  *(_QWORD *)(a4 + *(int *)(v6 + 40)) = 0;
  result = a1();
  *(_QWORD *)(a4 + *(int *)(v6 + 36)) = 0xA000000000000000;
  return result;
}

uint64_t type metadata accessor for StaticMap(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StaticMap);
}

uint64_t StaticMap.init(locationManager:content:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = type metadata accessor for StaticMap(0, a3, a4, a3);
  v9 = *(int *)(v8 + 40);
  result = a2();
  *(_QWORD *)(a5 + *(int *)(v8 + 36)) = 0xA000000000000000;
  *(_QWORD *)(a5 + v9) = a1;
  return result;
}

_QWORD *StaticMap.init<>(position:)@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  a2[1] = 0;
  return result;
}

_QWORD *StaticMap.init<>(position:locationManager:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t StaticMap.init(position:content:)@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v7 = *a1;
  v8 = type metadata accessor for StaticMap(0, a3, a4, a3);
  *(_QWORD *)(a5 + *(int *)(v8 + 40)) = 0;
  result = a2();
  *(_QWORD *)(a5 + *(int *)(v8 + 36)) = v7;
  return result;
}

uint64_t StaticMap.init(position:locationManager:content:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v10 = *a1;
  v11 = type metadata accessor for StaticMap(0, a5, a6, a4);
  v12 = *(int *)(v11 + 40);
  result = a3();
  *(_QWORD *)(a7 + *(int *)(v11 + 36)) = v10;
  *(_QWORD *)(a7 + v12) = a2;
  return result;
}

uint64_t static StaticMap._makeView(view:inputs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  __int128 v19;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288990);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StaticMap(0, a3, a4, v11);
  v23 = a3;
  v24 = a4;
  v25 = a1;
  MEMORY[0x22077F9A0](&protocol conformance descriptor for StaticMap<A>, v12);
  sub_21C5E361C();
  v14 = type metadata accessor for StaticMap.Child(0, a3, a4, v13);
  swift_dynamicCast();
  type metadata accessor for StaticMapBridgingView(0);
  v21 = v14;
  v22 = MEMORY[0x22077F9A0](&unk_21C5E7210, v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288998);
  sub_21C52951C((uint64_t)&v19, (uint64_t)sub_21C55D854, (uint64_t)v20, v14, MEMORY[0x24BEE4078], v15, MEMORY[0x24BEE40A8], v16);
  sub_21C52BAE0(v26, (uint64_t)v10);
  sub_21C521E50(qword_2552889A0, type metadata accessor for StaticMapBridgingView, (uint64_t)&unk_21C5E71C0);
  sub_21C5E3628();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_21C53EB84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t result;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _DWORD *v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _DWORD *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _DWORD *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v76 = a3;
  v77 = a5;
  v73 = a4;
  v74 = a2;
  v63 = a6;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D48);
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v66 = v7;
  v67 = (_DWORD *)((char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255288D50);
  v64 = *(_QWORD *)(v65 - 8);
  v82 = *(_QWORD *)(v64 + 64);
  MEMORY[0x24BDAC7A8](v65);
  v75 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C5E2EC0();
  v80 = *(_QWORD *)(v9 - 8);
  v81 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v79 = (uint64_t)&v60 - v10;
  v11 = type metadata accessor for _MapContentOutputs(0);
  MEMORY[0x24BDAC7A8](v11);
  v78 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_21C5E346C();
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v70 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_21C5E2ED8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v69 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v60 - v18;
  v20 = sub_21C5E32C8();
  v68 = *(_QWORD *)(v20 - 8);
  v21 = v68;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (int *)type metadata accessor for _MapContentInputs(0);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v83 = (uint64_t)&v60 - v28;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v29(v23, a1, v20);
  v30 = v15;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v31(v19, v74, v14);
  *(_DWORD *)&v27[v24[7]] = *MEMORY[0x24BE096C0];
  v29(v27, (uint64_t)v23, v20);
  v31(&v27[v24[5]], (uint64_t)v19, v14);
  v31(v69, (uint64_t)v19, v14);
  v32 = v73;
  v33 = v70;
  sub_21C5E3454();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v14);
  v34 = v77;
  v35 = v23;
  v36 = (int *)v75;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v35, v20);
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v27[v24[6]], v33, v72);
  v37 = v83;
  sub_21C52AAD4((uint64_t)v27, v83, type metadata accessor for _MapContentInputs);
  sub_21C524ACC();
  sub_21C5E3448();
  sub_21C524A88();
  sub_21C5E3448();
  sub_21C524E34();
  sub_21C5E3448();
  sub_21C524A44();
  sub_21C5E3448();
  sub_21C524A00();
  sub_21C5E3448();
  sub_21C5249BC();
  sub_21C5E3448();
  sub_21C52493C();
  sub_21C5E3448();
  sub_21C524DF0();
  sub_21C5E3448();
  v86 = v32;
  v87 = v34;
  type metadata accessor for StaticMap(255, v32, v34, v38);
  sub_21C5E2EC0();
  v39 = v79;
  sub_21C59C8F8((void (*)(uint64_t))sub_21C561D1C, v32, v79);
  v40 = v78;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 32))(v39, v37, v32, v34);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v39, v81);
  v84 = v32;
  v85 = v34;
  result = sub_21C59C8F8((void (*)(uint64_t))sub_21C561D24, (uint64_t)&type metadata for MapCameraPosition, (uint64_t)v36);
  if (v82 == 4)
  {
    v42 = *v36;
    v43 = (*(uint64_t (**)(int *, uint64_t))(v64 + 8))(v36, v65);
    MEMORY[0x24BDAC7A8](v43);
    *(&v60 - 2) = v32;
    *(&v60 - 1) = v34;
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288B78);
    v45 = v67;
    result = sub_21C59C8F8((void (*)(uint64_t))sub_21C561D2C, v44, (uint64_t)v67);
    if (v66 == 4)
    {
      LODWORD(v82) = *v45;
      (*(void (**)(_DWORD *, uint64_t))(v61 + 8))(v45, v62);
      v46 = (uint64_t)v40;
      LODWORD(v81) = sub_21C523030();
      LODWORD(v80) = sub_21C523044();
      v47 = sub_21C5231D8();
      v48 = sub_21C523214();
      v49 = sub_21C523228();
      v50 = v42;
      v51 = sub_21C52323C();
      v52 = sub_21C5231EC();
      v53 = sub_21C523200();
      v55 = type metadata accessor for StaticMap.Child(0, v32, v34, v54);
      v56 = v63;
      v63[3] = v55;
      v57 = (_DWORD *)swift_allocObject();
      *v56 = v57;
      v58 = v80;
      v57[4] = v81;
      v57[5] = v58;
      v57[6] = v47;
      v57[7] = v48;
      v57[8] = v49;
      v57[9] = v51;
      v57[10] = v52;
      v57[11] = v53;
      v59 = v82;
      v57[12] = v50;
      v57[13] = v59;
      sub_21C52A88C(v46, type metadata accessor for _MapContentOutputs);
      return sub_21C52A88C(v83, type metadata accessor for _MapContentInputs);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_21C53F224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;

  return sub_21C53EB84(a1, a2, v3[4], v3[2], v3[3], a3);
}

uint64_t type metadata accessor for StaticMap.Child(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StaticMap.Child);
}

uint64_t type metadata accessor for StaticMapBridgingView(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255288B50);
}

uint64_t sub_21C53F250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];

  v9[2] = type metadata accessor for StaticMap(0, a2, a3, a4);
  v9[3] = a2;
  v6 = sub_21C5E2DD0();
  sub_21C52951C(a1, (uint64_t)sub_21C536CD4, (uint64_t)v9, a2, MEMORY[0x24BEE4078], v6, MEMORY[0x24BEE40A8], v7);
  return v9[5];
}

uint64_t sub_21C53F2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[6];

  v5 = type metadata accessor for StaticMap(0, a2, a3, a4);
  v6 = a1 + *(int *)(v5 + 36);
  v10[2] = v5;
  v7 = sub_21C5E2DD0();
  sub_21C52951C(v6, (uint64_t)sub_21C561DA8, (uint64_t)v10, (uint64_t)&type metadata for MapCameraPosition, MEMORY[0x24BEE4078], v7, MEMORY[0x24BEE40A8], v8);
  return v10[5];
}

uint64_t sub_21C53F364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];

  v5 = type metadata accessor for StaticMap(0, a2, a3, a4);
  v6 = a1 + *(int *)(v5 + 40);
  v11[2] = v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288B78);
  v8 = sub_21C5E2DD0();
  sub_21C52951C(v6, (uint64_t)sub_21C561D44, (uint64_t)v11, v7, MEMORY[0x24BEE4078], v8, MEMORY[0x24BEE40A8], v9);
  return v11[5];
}

uint64_t sub_21C53F400()
{
  _DWORD *v0;

  if (*v0 == *MEMORY[0x24BE096C0])
    return 0;
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21C53F460()
{
  uint64_t v0;

  if (*(_DWORD *)(v0 + 4) == *MEMORY[0x24BE096C0])
    return 0;
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21C53F4C0()
{
  uint64_t v0;

  if (*(_DWORD *)(v0 + 8) == *MEMORY[0x24BE096C0])
    return 0;
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21C53F520()
{
  uint64_t v0;

  if (*(_DWORD *)(v0 + 12) == *MEMORY[0x24BE096C0])
    return 0;
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21C53F580()
{
  uint64_t v0;

  if (*(_DWORD *)(v0 + 16) == *MEMORY[0x24BE096C0])
    return 0;
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21C53F5E0()
{
  uint64_t v0;

  if (*(_DWORD *)(v0 + 20) == *MEMORY[0x24BE096C0])
    return 0;
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21C53F640()
{
  uint64_t v0;

  if (*(_DWORD *)(v0 + 24) == *MEMORY[0x24BE096C0])
    return 0;
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21C53F6A0()
{
  uint64_t v0;

  if (*(_DWORD *)(v0 + 28) == *MEMORY[0x24BE096C0])
    return 0;
  AGGraphGetValue();
  return swift_bridgeObjectRetain();
}

id sub_21C53F700@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;

  v61 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255288B40);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (uint64_t *)((char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288B38);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = type metadata accessor for StaticMapBridgingView(0);
  v7 = MEMORY[0x24BDAC7A8](v59);
  v9 = (uint64_t *)((char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v60 = (uint64_t)&v47 - v10;
  v11 = sub_21C53F400();
  if (!v11)
    v11 = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
  v57 = v12;
  v58 = v11;
  v13 = sub_21C53F460();
  if (!v13)
    v13 = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
  v55 = v14;
  v56 = v13;
  v15 = sub_21C53F4C0();
  if (!v15)
    v15 = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
  v53 = v16;
  v54 = v15;
  v17 = sub_21C53F520();
  if (!v17)
    v17 = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
  v51 = v18;
  v52 = v17;
  v19 = sub_21C53F580();
  if (!v19)
    v19 = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
  v21 = v19;
  v50 = v20;
  v22 = sub_21C53F5E0();
  if (!v22)
    v22 = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
  v24 = v22;
  v49 = v23;
  v25 = sub_21C53F640();
  if (!v25)
    v25 = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
  v27 = v25;
  v48 = v26;
  v28 = sub_21C53F6A0();
  if (!v28)
    v28 = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
  v30 = v28;
  v31 = v29;
  v32 = *(_QWORD *)AGGraphGetValue();
  sub_21C55DA30(v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288B78);
  v62 = *(id *)AGGraphGetValue();
  *v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288150);
  swift_storeEnumTagMultiPayload();
  *v3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288B30);
  swift_storeEnumTagMultiPayload();
  KeyPath = swift_getKeyPath();
  v34 = v57;
  *v9 = v58;
  v9[1] = v34;
  v35 = v55;
  v9[2] = v56;
  v9[3] = v35;
  v36 = v51;
  v9[6] = v52;
  v9[7] = v36;
  v37 = v50;
  v9[8] = v21;
  v9[9] = v37;
  v38 = v49;
  v9[10] = v24;
  v9[11] = v38;
  v39 = v48;
  v9[12] = v27;
  v9[13] = v39;
  v9[14] = v30;
  v9[15] = v31;
  v40 = (uint64_t)v62;
  v9[16] = v32;
  v9[17] = v40;
  v41 = v59;
  v42 = (uint64_t)v9 + *(int *)(v59 + 56);
  v43 = v53;
  v9[4] = v54;
  v9[5] = v43;
  sub_21C52DB08((uint64_t)v6, v42, &qword_255288B38);
  sub_21C52DB08((uint64_t)v3, (uint64_t)v9 + *(int *)(v41 + 60), (uint64_t *)&unk_255288B40);
  v44 = (char *)v9 + *(int *)(v41 + 64);
  *(_QWORD *)v44 = KeyPath;
  *(_OWORD *)(v44 + 8) = 0u;
  *(_OWORD *)(v44 + 24) = 0u;
  *(_OWORD *)(v44 + 40) = 0u;
  *(_OWORD *)(v44 + 56) = 0u;
  *(_OWORD *)(v44 + 66) = 0u;
  v45 = v60;
  sub_21C52AAD4((uint64_t)v9, v60, type metadata accessor for StaticMapBridgingView);
  sub_21C52AAD4(v45, v61, type metadata accessor for StaticMapBridgingView);
  return v62;
}

uint64_t sub_21C53FA70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticMapBridgingView(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t static StaticMap._makeViewList(view:inputs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticMap(0, a3, a4, a4);
  MEMORY[0x22077F9A0](&protocol conformance descriptor for StaticMap<A>, v4);
  return sub_21C5E3160();
}

uint64_t static StaticMap._viewListCount(inputs:)()
{
  return 1;
}

void StaticMap.body.getter()
{
  sub_21C5E3D48();
  __break(1u);
}

uint64_t sub_21C53FB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static StaticMap._makeView(view:inputs:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_21C53FB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static StaticMap._makeViewList(view:inputs:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void sub_21C53FB80()
{
  sub_21C5E3D48();
  __break(1u);
}

uint64_t sub_21C53FBC8()
{
  sub_21C521E50(&qword_255288B80, type metadata accessor for StaticMapBridgingView, (uint64_t)&unk_21C5E7130);
  return sub_21C5E33C4();
}

uint64_t sub_21C53FC30()
{
  sub_21C521E50(&qword_255288B80, type metadata accessor for StaticMapBridgingView, (uint64_t)&unk_21C5E7130);
  return sub_21C5E3370();
}

void sub_21C53FC98()
{
  sub_21C521E50(&qword_255288B80, type metadata accessor for StaticMapBridgingView, (uint64_t)&unk_21C5E7130);
  sub_21C5E33B8();
  __break(1u);
}

uint64_t sub_21C53FCD4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v2 = sub_21C5E328C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288BA8);
  sub_21C5E3538();
  v6 = sub_21C5E2EA8();
  swift_release();
  v7 = 0;
  if ((v6 & 1) == 0)
  {
    sub_21C5E3538();
    v7 = sub_21C5E2EB4();
    swift_release();
  }
  sub_21C5E3520();
  v8 = (void *)v10[1];
  sub_21C5E352C();
  sub_21C53FDF4(a1, (uint64_t)v8, (uint64_t)v5, v7);

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_21C53FDF4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v19;
  uint64_t KeyPath;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  unint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  unint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  _QWORD *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BOOL8 v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  _DWORD *v91;
  uint64_t v92;
  int v93;
  _DWORD *v94;
  uint64_t v95;
  int v96;
  _DWORD *v97;
  uint64_t v98;
  int v99;
  _DWORD *v100;
  uint64_t v101;
  int v102;
  _DWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t result;
  _DWORD *v107;
  uint64_t v108;
  uint64_t v109;
  _DWORD *v110;
  _DWORD *v111;
  _DWORD *v112;
  uint64_t v113;
  _DWORD *v114;
  _DWORD *v115;
  _DWORD *v116;
  uint64_t v117;

  v5 = v4;
  v117 = a4;
  v9 = type metadata accessor for StaticMapBridgingView(0);
  MEMORY[0x24BDAC7A8](v9);
  v113 = (uint64_t)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_setDelegate_, a2);
  objc_msgSend(a1, sel_beginUpdates);
  v11 = *(_DWORD *)(a2 + qword_255288E40);
  v116 = (_DWORD *)(a2 + qword_255288E40);
  v12 = *(_QWORD *)(a2 + qword_255288E40 + 8);
  v13 = *v4;
  v14 = v5[1];
  v15 = sub_21C5B6EE4(v13);
  if (v11 == -1 || v15 == -1 || v11 != v15 || v12 != v14)
  {
    v19 = sub_21C540738(0, 0, 0, 0, v13);
    KeyPath = swift_getKeyPath();
    sub_21C5557B4(a1, v19, a3, v117, KeyPath);
    swift_release();
    swift_bridgeObjectRelease();
  }
  v21 = *(_DWORD *)(a2 + qword_255288E48);
  v115 = (_DWORD *)(a2 + qword_255288E48);
  v22 = *(_QWORD *)(a2 + qword_255288E48 + 8);
  v23 = v5[2];
  v24 = v5[3];
  v25 = sub_21C5B6EE4(v23);
  if (v21 == -1 || v25 == -1 || v21 != v25 || v22 != v24)
  {
    v29 = sub_21C540E00(0, 0, 0, 0, a3, 0, v23);
    v30 = swift_getKeyPath();
    sub_21C555CF0(a1, v29, a3, v117, v30);
    swift_release();
    swift_bridgeObjectRelease();
  }
  v31 = *(_DWORD *)(a2 + qword_255288E50);
  v114 = (_DWORD *)(a2 + qword_255288E50);
  v32 = *(_QWORD *)(a2 + qword_255288E50 + 8);
  v33 = v5[4];
  v34 = v5[5];
  v35 = sub_21C5B6EE4(v33);
  if (v31 == -1 || v35 == -1 || v31 != v35 || v32 != v34)
  {
    v39 = sub_21C540E00(0, 0, 0, 0, a3, 1, v33);
    v40 = swift_getKeyPath();
    sub_21C555CF0(a1, v39, a3, v117, v40);
    swift_bridgeObjectRelease();
    swift_release();
  }
  v41 = *(_DWORD *)(a2 + qword_255288E58);
  v112 = (_DWORD *)(a2 + qword_255288E58);
  v42 = *(_QWORD *)(a2 + qword_255288E58 + 8);
  v44 = v5[12];
  v43 = v5[13];
  v45 = sub_21C5B6EE4(v44);
  if (v41 == -1 || v45 == -1 || v41 != v45 || v42 != v43)
  {
    v49 = sub_21C541114(0, 0, 0, 0, v44);
    v50 = swift_getKeyPath();
    sub_21C556264(a1, v49, a3, v117, v50);
    swift_release();
    swift_bridgeObjectRelease();
  }
  v109 = v44;
  v51 = *(_DWORD *)(a2 + qword_255288E60);
  v111 = (_DWORD *)(a2 + qword_255288E60);
  v52 = *(_QWORD *)(a2 + qword_255288E60 + 8);
  v53 = v5[14];
  v54 = v5[15];
  v55 = sub_21C5B6EE4(v53);
  if (v51 == -1 || v55 == -1 || v51 != v55 || v52 != v54)
  {
    v56 = sub_21C541114(0, 0, 0, 0, v53);
    v57 = swift_getKeyPath();
    sub_21C556264(a1, v56, a3, v117, v57);
    swift_bridgeObjectRelease();
    swift_release();
  }
  v58 = *(_DWORD *)(a2 + qword_255288E70);
  v110 = (_DWORD *)(a2 + qword_255288E70);
  v59 = *(_QWORD *)(a2 + qword_255288E70 + 8);
  v60 = v5[6];
  v61 = v5[7];
  v62 = sub_21C5B6EE4(v60);
  if (v58 == -1 || v62 == -1 || v58 != v62 || v59 != v61)
  {
    v63 = (char *)sub_21C567700(v60);
    v64 = swift_getKeyPath();
    sub_21C556704(a1, v63, a3, v117, v64);
    swift_release();
    swift_bridgeObjectRelease();
  }
  v65 = a2 + qword_255288E78;
  v66 = *(_DWORD *)(a2 + qword_255288E78);
  v67 = *(_QWORD *)(a2 + qword_255288E78 + 8);
  v68 = v5[8];
  v69 = v5[9];
  v70 = sub_21C5B6EE4(v68);
  if (v66 == -1 || v70 == -1 || v66 != v70 || v67 != v69)
  {
    v71 = sub_21C567AA4(v68);
    v72 = swift_getKeyPath();
    sub_21C556BF0(a1, (uint64_t)v71, a3, v117, v72);
    swift_release();
    swift_bridgeObjectRelease();
  }
  v73 = a2 + qword_255288E80;
  v74 = *(_DWORD *)(a2 + qword_255288E80);
  v75 = *(_QWORD *)(a2 + qword_255288E80 + 8);
  v76 = v5[10];
  v77 = v5[11];
  v78 = sub_21C5B6EE4(v76);
  if (v74 == -1 || v78 == -1 || v74 != v78 || v75 != v77)
  {
    v79 = sub_21C567F14(v76);
    v80 = swift_getKeyPath();
    sub_21C5570F0(a1, v79, a3, v117, v80);
    swift_release();
    swift_bridgeObjectRelease();
  }
  v81 = v5[16];
  v82 = *(_QWORD *)(v109 + 16);
  v83 = v113;
  sub_21C529664((uint64_t)v5, v113, type metadata accessor for StaticMapBridgingView);
  if (v82)
    v84 = 1;
  else
    v84 = *(_QWORD *)(*(_QWORD *)(v83 + 112) + 16) != 0;
  sub_21C55DA30(v81);
  sub_21C52A88C(v83, type metadata accessor for StaticMapBridgingView);
  v85 = *(_QWORD *)(a2 + qword_255288A28);
  *(_QWORD *)(a2 + qword_255288A28) = v81;
  sub_21C55DA30(v81);
  sub_21C560A38(v85);
  sub_21C55DA30(v81);
  if (v81 >> 61 == 4)
  {
    v86 = *(_QWORD *)(v81 + 24);
    sub_21C55DA30(v86);
    sub_21C560A4C(v81, a1);
    sub_21C55DAAC(v86);
LABEL_72:
    sub_21C55DAAC(v81);
    goto LABEL_73;
  }
  objc_msgSend(a1, sel_setShowsUserLocation_, v84);
  if ((v81 >> 61) < 4)
  {
    sub_21C560A4C(v81, a1);
    goto LABEL_72;
  }
  if (v81 == 0xA000000000000000)
  {
    v81 = 0xA000000000000000;
    sub_21C560A4C(0xA000000000000000, a1);
  }
  else
  {
    v81 = 0xA000000000000008;
  }
LABEL_73:
  sub_21C55DAAC(v81);
  sub_21C5416A8(a1);
  sub_21C5418A8(a1);
  sub_21C541D08(a1);
  objc_msgSend(a1, sel_endUpdates);
  v87 = v5[11];
  *(_DWORD *)v73 = sub_21C5B6EE4(v5[10]);
  *(_QWORD *)(v73 + 8) = v87;
  v88 = v5[9];
  *(_DWORD *)v65 = sub_21C5B6EE4(v5[8]);
  *(_QWORD *)(v65 + 8) = v88;
  v89 = v5[7];
  v90 = sub_21C5B6EE4(v5[6]);
  v91 = v110;
  *v110 = v90;
  *((_QWORD *)v91 + 1) = v89;
  v92 = v5[15];
  v93 = sub_21C5B6EE4(v5[14]);
  v94 = v111;
  *v111 = v93;
  *((_QWORD *)v94 + 1) = v92;
  v95 = v5[13];
  v96 = sub_21C5B6EE4(v5[12]);
  v97 = v112;
  *v112 = v96;
  *((_QWORD *)v97 + 1) = v95;
  v98 = v5[5];
  v99 = sub_21C5B6EE4(v5[4]);
  v100 = v114;
  *v114 = v99;
  *((_QWORD *)v100 + 1) = v98;
  v101 = v5[3];
  v102 = sub_21C5B6EE4(v5[2]);
  v103 = v115;
  *v115 = v102;
  *((_QWORD *)v103 + 1) = v101;
  v104 = *v5;
  v105 = v5[1];
  result = sub_21C5B6EE4(v104);
  v107 = v116;
  *v116 = result;
  *((_QWORD *)v107 + 1) = v105;
  return result;
}

id sub_21C54059C()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB1E0]), sel_initWithFrame_locationManager_, *(_QWORD *)(v0 + 136), 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, sel_setHonorsLayoutMargins_, 1);
  return v1;
}

id sub_21C540600@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StaticMapBridgingViewCoordinator(0)), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_21C540638()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_255288B88);
  sub_21C5E35E0();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1410];
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21C5E5570;
  sub_21C5E35D4();
  sub_21C521E50(&qword_255288B90, v0, MEMORY[0x24BDF1420]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288B98);
  sub_21C5616A0(&qword_255288BA0, &qword_255288B98, MEMORY[0x24BEE12C8]);
  return sub_21C5E3BEC();
}

unint64_t sub_21C540738(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  void *v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v67;
  char *v68;
  _BOOL4 v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  char *v83;
  _QWORD *v84;
  int *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  id v91;
  unsigned __int8 v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  char v96;

  v89 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v89);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = (int *)type metadata accessor for ResolvedAnnotation();
  MEMORY[0x24BDAC7A8](v85);
  v84 = (uint64_t *)((char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D00);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for CustomAnnotationViewModel(0);
  v70 = *(_QWORD *)(v71 - 8);
  v16 = MEMORY[0x24BDAC7A8](v71);
  v72 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v73 = (uint64_t)&v67 - v18;
  v87 = type metadata accessor for MapContentList.Item(0);
  v19 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v86 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = a1;
  v94 = a2;
  v95 = a3;
  v96 = a4;
  if (a2)
  {
    v21 = v11;
    swift_retain();
    swift_retain();
    sub_21C5616E0(a3, a4);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CA8);
    MEMORY[0x22077ECE0](&v91, v22);
    v23 = v95;
    v24 = v96;
    swift_release();
    swift_release();
    sub_21C5616F0(v23, v24);
    v69 = v92 - 1 < 2;
    if ((v92 - 1) > 1u)
      sub_21C5616F0(v91, v92);
    v11 = v21;
  }
  else
  {
    v69 = 0;
  }
  v25 = (uint64_t)v72;
  v27 = (uint64_t *)v86;
  v26 = v87;
  v28 = *(_QWORD *)(a5 + 16);
  if (!v28)
    return MEMORY[0x24BEE4AF8];
  v29 = a5 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  v88 = *(_QWORD *)(v19 + 72);
  v67 = a5;
  swift_bridgeObjectRetain();
  v90 = MEMORY[0x24BEE4AF8];
  v30 = v71;
  v31 = v70;
  v68 = v11;
  do
  {
    sub_21C529664(v29, (uint64_t)v27, type metadata accessor for MapContentList.Item);
    sub_21C529664((uint64_t)v27 + *(int *)(v26 + 24), (uint64_t)v11, type metadata accessor for MapContentList.Item.Content);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_21C52A88C((uint64_t)v11, type metadata accessor for MapContentList.Item.Content);
      v32 = 1;
    }
    else
    {
      sub_21C52AAD4((uint64_t)v11, (uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedAnnotation);
      v33 = (char *)v27 + *(int *)(v26 + 28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255288C98);
      sub_21C5616A0(&qword_255288CA0, &qword_255288C98, (uint64_t)&unk_21C5E98D0);
      sub_21C5E34F0();
      v34 = v93;
      v35 = *v27;
      swift_bridgeObjectRetain();
      v36 = (void *)sub_21C5E3328();
      v83 = v33;
      if (v36)
      {
        v37 = v36;
        v38 = objc_msgSend(v36, sel_string);

        v77 = sub_21C5E3964();
        v76 = v39;

      }
      else
      {
        v77 = 0;
        v76 = 0;
      }
      v40 = (void *)sub_21C5E331C();
      v82 = v35;
      if (v40)
      {
        v41 = v40;
        v42 = objc_msgSend(v40, sel_string);

        v75 = sub_21C5E3964();
        v74 = v43;

      }
      else
      {
        v75 = 0;
        v74 = 0;
      }
      v44 = v84;
      v45 = v85[11];
      v46 = *(void **)((char *)v84 + v85[12]);
      v47 = *((_BYTE *)v84 + v85[9]);
      v48 = *((_BYTE *)v84 + v85[10]);
      v49 = *(_QWORD *)((char *)v84 + v85[7]);
      v50 = *v84;
      v51 = v84[1];
      v52 = v84[2];
      v53 = v84[3];
      v78 = v69 & (v34 ^ 1);
      v54 = *(_QWORD *)((char *)v84 + v45);
      v79 = *(_QWORD *)((char *)v84 + v45 + 8);
      LODWORD(v45) = *((unsigned __int8 *)v84 + v45 + 16);
      v80 = *((unsigned __int8 *)v84 + v85[13]);
      v81 = v45;
      v55 = v46;
      swift_retain();
      sub_21C52A88C((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedAnnotation);
      v30 = v71;
      v56 = &v15[*(int *)(v71 + 64)];
      v57 = sub_21C5E34E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v56, v83, v57);
      v32 = 0;
      v58 = v77;
      *(_QWORD *)v15 = v82;
      *((_QWORD *)v15 + 1) = v58;
      v59 = v75;
      *((_QWORD *)v15 + 2) = v76;
      *((_QWORD *)v15 + 3) = v59;
      *((_QWORD *)v15 + 4) = v74;
      *((_QWORD *)v15 + 5) = v46;
      v15[48] = v47;
      v15[49] = v48;
      *((_QWORD *)v15 + 7) = v50;
      *((_QWORD *)v15 + 8) = v51;
      *((_QWORD *)v15 + 9) = v49;
      *((_QWORD *)v15 + 10) = v52;
      *((_QWORD *)v15 + 11) = v53;
      v15[96] = v78;
      v60 = v79;
      *((_QWORD *)v15 + 13) = v54;
      *((_QWORD *)v15 + 14) = v60;
      v15[120] = v81;
      v15[121] = v80;
      v11 = v68;
      v31 = v70;
      v25 = (uint64_t)v72;
      v27 = (uint64_t *)v86;
      v26 = v87;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v15, v32, 1, v30);
    sub_21C52A88C((uint64_t)v27, type metadata accessor for MapContentList.Item);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v15, 1, v30) == 1)
    {
      sub_21C524980((uint64_t)v15, &qword_255288D00);
    }
    else
    {
      v61 = v73;
      sub_21C52AAD4((uint64_t)v15, v73, type metadata accessor for CustomAnnotationViewModel);
      sub_21C52AAD4(v61, v25, type metadata accessor for CustomAnnotationViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v62 = v90;
      else
        v62 = sub_21C5B8460(0, *(_QWORD *)(v90 + 16) + 1, 1, v90);
      v64 = *(_QWORD *)(v62 + 16);
      v63 = *(_QWORD *)(v62 + 24);
      if (v64 >= v63 >> 1)
        v62 = sub_21C5B8460(v63 > 1, v64 + 1, 1, v62);
      *(_QWORD *)(v62 + 16) = v64 + 1;
      v65 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      v90 = v62;
      sub_21C52AAD4(v25, v62 + v65 + *(_QWORD *)(v31 + 72) * v64, type metadata accessor for CustomAnnotationViewModel);
      v27 = (uint64_t *)v86;
      v26 = v87;
    }
    v29 += v88;
    --v28;
  }
  while (v28);
  swift_bridgeObjectRelease();
  return v90;
}

unint64_t sub_21C540E00(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char v46;

  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CC0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for MarkerAnnotationViewModel(0);
  v16 = *(_QWORD *)(v40 - 8);
  v17 = MEMORY[0x24BDAC7A8](v40);
  v39 = (uint64_t)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v38 = (uint64_t)&v36 - v19;
  if ((a6 & 1) != 0)
  {
    v20 = 1;
    v21 = *(_QWORD *)(a7 + 16);
    if (!v21)
      return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v43 = a1;
    v44 = a2;
    v45 = a3;
    v46 = a4;
    if (a2)
    {
      swift_retain();
      swift_retain();
      sub_21C5616E0(a3, a4);
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CA8);
      MEMORY[0x22077ECE0](&v41, v22);
      v23 = v45;
      v24 = v46;
      swift_release();
      swift_release();
      sub_21C5616F0(v23, v24);
      v20 = v42 - 1 < 2;
      if ((v42 - 1) > 1u)
        sub_21C5616F0(v41, v42);
      v21 = *(_QWORD *)(a7 + 16);
      if (!v21)
        return MEMORY[0x24BEE4AF8];
    }
    else
    {
      v20 = 0;
      v21 = *(_QWORD *)(a7 + 16);
      if (!v21)
        return MEMORY[0x24BEE4AF8];
    }
  }
  v25 = *(_QWORD *)(type metadata accessor for MapContentList.Item(0) - 8);
  v26 = (_QWORD *)(a7 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80)));
  v27 = *(_QWORD *)(v25 + 72);
  v36 = a7;
  swift_bridgeObjectRetain();
  v28 = MEMORY[0x24BEE4AF8];
  v29 = a6 & 1;
  v37 = v29;
  do
  {
    sub_21C559244(v26, v29, v20, (uint64_t)v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v40) == 1)
    {
      sub_21C524980((uint64_t)v15, &qword_255288CC0);
    }
    else
    {
      v30 = v27;
      v31 = v20;
      v32 = v38;
      sub_21C52AAD4((uint64_t)v15, v38, type metadata accessor for MarkerAnnotationViewModel);
      sub_21C52AAD4(v32, v39, type metadata accessor for MarkerAnnotationViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_21C5B868C(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
      v34 = *(_QWORD *)(v28 + 16);
      v33 = *(_QWORD *)(v28 + 24);
      if (v34 >= v33 >> 1)
        v28 = sub_21C5B868C(v33 > 1, v34 + 1, 1, v28);
      *(_QWORD *)(v28 + 16) = v34 + 1;
      sub_21C52AAD4(v39, v28+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v34, type metadata accessor for MarkerAnnotationViewModel);
      v20 = v31;
      v27 = v30;
      v29 = v37;
    }
    v26 = (_QWORD *)((char *)v26 + v27);
    --v21;
  }
  while (v21);
  swift_bridgeObjectRelease();
  return v28;
}

unint64_t sub_21C541114(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v50;
  char *v51;
  _BOOL4 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t *v62;
  id v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char v68;

  v59 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v59);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ResolvedUserAnnotation();
  MEMORY[0x24BDAC7A8](v12);
  v54 = (uint64_t)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C70);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for UserAnnotationViewModel(0);
  v56 = *(_QWORD *)(v60 - 8);
  v17 = MEMORY[0x24BDAC7A8](v60);
  v58 = (uint64_t)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v53 = (uint64_t)&v50 - v19;
  v55 = type metadata accessor for MapContentList.Item(0);
  v20 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v62 = (uint64_t *)((char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = a1;
  v66 = a2;
  v67 = a3;
  v68 = a4;
  if (a2)
  {
    swift_retain();
    swift_retain();
    sub_21C5616E0(a3, a4);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CA8);
    MEMORY[0x22077ECE0](&v63, v22);
    v23 = v67;
    v24 = v68;
    swift_release();
    swift_release();
    sub_21C5616F0(v23, v24);
    v52 = v64 - 1 < 2;
    if ((v64 - 1) > 1u)
      sub_21C5616F0(v63, v64);
  }
  else
  {
    v52 = 0;
  }
  v26 = v55;
  v25 = v56;
  v27 = (uint64_t)v62;
  v28 = *(_QWORD *)(a5 + 16);
  if (!v28)
    return MEMORY[0x24BEE4AF8];
  v29 = a5 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  v57 = *(_QWORD *)(v20 + 72);
  v50 = a5;
  swift_bridgeObjectRetain();
  v61 = MEMORY[0x24BEE4AF8];
  v30 = v60;
  v51 = v11;
  do
  {
    sub_21C529664(v29, v27, type metadata accessor for MapContentList.Item);
    sub_21C529664(v27 + *(int *)(v26 + 24), (uint64_t)v11, type metadata accessor for MapContentList.Item.Content);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v31 = v54;
      sub_21C52AAD4((uint64_t)v11, v54, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedUserAnnotation);
      v32 = (char *)v62 + *(int *)(v26 + 28);
      __swift_instantiateConcreteTypeFromMangledName(&qword_255288C98);
      sub_21C5616A0(&qword_255288CA0, &qword_255288C98, (uint64_t)&unk_21C5E98D0);
      sub_21C5E34F0();
      v33 = *v62;
      v35 = *(_QWORD *)(v31 + 16);
      v34 = *(_QWORD *)(v31 + 24);
      v36 = *(_QWORD *)v31;
      v37 = *(_QWORD *)(v31 + 8);
      v38 = v52 & (v65 ^ 1);
      v39 = *(_BYTE *)(v31 + 40);
      swift_bridgeObjectRetain();
      sub_21C531AAC(v35);
      sub_21C52A88C(v31, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedUserAnnotation);
      v40 = &v16[*(int *)(v60 + 36)];
      v41 = sub_21C5E34E4();
      v42 = v32;
      v27 = (uint64_t)v62;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v40, v42, v41);
      v43 = 0;
      *(_QWORD *)v16 = v33;
      *((_QWORD *)v16 + 1) = v35;
      v11 = v51;
      *((_QWORD *)v16 + 2) = v34;
      *((_QWORD *)v16 + 3) = v36;
      *((_QWORD *)v16 + 4) = v37;
      v16[40] = v38;
      v26 = v55;
      v25 = v56;
      v16[41] = v39;
      v30 = v60;
    }
    else
    {
      sub_21C52A88C((uint64_t)v11, type metadata accessor for MapContentList.Item.Content);
      v43 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v16, v43, 1, v30);
    sub_21C52A88C(v27, type metadata accessor for MapContentList.Item);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v16, 1, v30) == 1)
    {
      sub_21C524980((uint64_t)v16, &qword_255288C70);
    }
    else
    {
      v44 = v53;
      sub_21C52AAD4((uint64_t)v16, v53, type metadata accessor for UserAnnotationViewModel);
      sub_21C52AAD4(v44, v58, type metadata accessor for UserAnnotationViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v45 = v61;
      else
        v45 = sub_21C5B86A0(0, *(_QWORD *)(v61 + 16) + 1, 1, v61);
      v47 = *(_QWORD *)(v45 + 16);
      v46 = *(_QWORD *)(v45 + 24);
      if (v47 >= v46 >> 1)
        v45 = sub_21C5B86A0(v46 > 1, v47 + 1, 1, v45);
      *(_QWORD *)(v45 + 16) = v47 + 1;
      v48 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      v61 = v45;
      sub_21C52AAD4(v58, v45 + v48 + *(_QWORD *)(v25 + 72) * v47, type metadata accessor for UserAnnotationViewModel);
      v27 = (uint64_t)v62;
    }
    v29 += v57;
    --v28;
  }
  while (v28);
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t sub_21C541638(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *a2 + *a5;
  *(_DWORD *)v8 = *(_DWORD *)a1;
  *(_QWORD *)(v8 + 8) = v5;
  *(_QWORD *)(v8 + 16) = v6;
  *(_QWORD *)(v8 + 24) = v7;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_21C5416A8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[5];
  __int16 v25;

  v2 = v1 + *(int *)(type metadata accessor for StaticMapBridgingView(0) + 64);
  v3 = *(_OWORD *)(v2 + 64);
  v24[3] = *(_OWORD *)(v2 + 48);
  v24[4] = v3;
  v25 = *(_WORD *)(v2 + 80);
  v4 = *(_OWORD *)(v2 + 32);
  v24[1] = *(_OWORD *)(v2 + 16);
  v24[2] = v4;
  v24[0] = *(_OWORD *)v2;
  sub_21C531930((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_21C531870);
  sub_21C52F844((uint64_t)v18);
  sub_21C531930((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_21C53198C);
  v6 = v18[0];
  v5 = v18[1];
  v7 = v19;
  v8 = v22;
  v9 = v23;
  if (v19 != 1)
  {
    v11 = sub_21C5C82B0();
    v14 = v6;
    v15 = v5;
    v16 = v7;
LABEL_7:
    sub_21C5319E4(v14, v15, v16);
    sub_21C531A18(v8, v9);
    v10 = a1;
    goto LABEL_10;
  }
  if ((v21 & 1) == 0)
  {
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB098]), sel_initWithElevationStyle_, v20);
    v14 = v6;
    v15 = v5;
    v16 = 1;
    goto LABEL_7;
  }
  v10 = a1;
  if (v23 == 1)
  {
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB1B0]), sel_init);
    sub_21C5319E4(v6, v5, 1);
    v12 = v8;
    v13 = 1;
  }
  else
  {
    v11 = sub_21C5C8424();
    sub_21C5319E4(v6, v5, 1);
    v12 = v8;
    v13 = v9;
  }
  sub_21C531A18(v12, v13);
LABEL_10:
  objc_msgSend(v10, sel_setPreferredConfiguration_, v11);

}

id sub_21C5418A8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  char v25;
  void (*v26)(char *, uint64_t);
  double v27;
  char v28;
  double v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;

  v34 = a1;
  v1 = sub_21C5E3088();
  v33 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v31 - v5;
  v7 = sub_21C5E3418();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21C5E32E0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticMapBridgingView(0);
  sub_21C52F7E4((uint64_t)v13);
  sub_21C5E340C();
  sub_21C5E35F8();
  sub_21C5E32D4();
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v32);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_21C52F810((uint64_t)v6);
  v22 = *MEMORY[0x24BDED100];
  v23 = v33;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 104);
  v24(v4, v22, v1);
  v25 = sub_21C5E307C();
  v26 = *(void (**)(char *, uint64_t))(v23 + 8);
  v26(v4, v1);
  v26(v6, v1);
  if ((v25 & 1) != 0)
    v27 = v17;
  else
    v27 = v21;
  sub_21C52F810((uint64_t)v6);
  v24(v4, v22, v1);
  v28 = sub_21C5E307C();
  v26(v4, v1);
  v26(v6, v1);
  if ((v28 & 1) != 0)
    v29 = v21;
  else
    v29 = v17;
  return objc_msgSend(v34, sel_setLayoutMargins_, v15, v27, v19, v29);
}

unint64_t sub_21C541B08@<X0>(unint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v20[5];
  char v21;
  __int128 v22;
  __int128 v23;
  char v24;
  char v25;

  v3 = result;
  if ((result >> 61) < 4)
  {
    v5 = *MEMORY[0x24BEBE158];
    v6 = *(_QWORD *)(MEMORY[0x24BEBE158] + 8);
    v7 = *(_QWORD *)(MEMORY[0x24BEBE158] + 16);
    v8 = *(_QWORD *)(MEMORY[0x24BEBE158] + 24);
    result = sub_21C55DA30(result);
    v9 = 0;
    goto LABEL_29;
  }
  if (result >> 61 != 4)
  {
    if (result != 0xA000000000000000)
      goto LABEL_11;
    sub_21C56F064(v20, 0xA000000000000000);
    result = sub_21C52DB08((uint64_t)v20, (uint64_t)&v22, (uint64_t *)&unk_255289580);
    if ((v24 & 1) != 0)
      goto LABEL_11;
    result = swift_allocObject();
    v9 = 0;
    v12 = v22;
    v13 = v23;
    v3 = result | 0x2000000000000000;
    goto LABEL_28;
  }
  v11 = *(_QWORD *)(result + 24);
  sub_21C55DA30(v11);
  if ((objc_msgSend(a2, sel_hasUserLocation) & 1) != 0)
  {
    result = sub_21C55DAAC(v11);
LABEL_11:
    v3 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 2;
    goto LABEL_29;
  }
  if (v11 == 0xA000000000000000)
  {
    v14 = sub_21C55DA30(0xA000000000000000);
    sub_21C56F064(v20, v14);
    result = sub_21C52DB08((uint64_t)v20, (uint64_t)&v22, (uint64_t *)&unk_255289580);
    if ((v24 & 1) != 0)
      goto LABEL_11;
    result = swift_allocObject();
    v12 = v22;
    v13 = v23;
    v3 = result | 0x2000000000000000;
    v9 = 1;
LABEL_28:
    *(_OWORD *)(result + 16) = v12;
    *(_OWORD *)(result + 32) = v13;
    v7 = 0x403C000000000000;
    v5 = 0x404C000000000000;
    v6 = 0x404C000000000000;
    v8 = 0x404C000000000000;
    goto LABEL_29;
  }
  sub_21C55DA30(v11);
  sub_21C541B08(v20, v11, a2);
  v15 = v20[0];
  v16 = v20[1];
  v6 = v20[2];
  v17 = v20[3];
  v18 = v20[4];
  v19 = v21;
  sub_21C55DAAC(v11);
  sub_21C55DAAC(v11);
  result = sub_21C52DB08((uint64_t)v20, (uint64_t)&v22, (uint64_t *)&unk_255288BB0);
  if (v25 == 2)
    v3 = 0;
  else
    v3 = v15;
  if (v25 == 2)
    v5 = 0;
  else
    v5 = v16;
  if (v25 == 2)
  {
    v6 = 0;
    v7 = 0;
  }
  else
  {
    v7 = v17;
  }
  if (v25 == 2)
    v8 = 0;
  else
    v8 = v18;
  if (v25 == 2)
    v9 = 2;
  else
    v9 = v19;
LABEL_29:
  *(_QWORD *)a3 = v3;
  *(_QWORD *)(a3 + 8) = v5;
  *(_QWORD *)(a3 + 16) = v6;
  *(_QWORD *)(a3 + 24) = v7;
  *(_QWORD *)(a3 + 32) = v8;
  *(_BYTE *)(a3 + 40) = v9;
  return result;
}

void sub_21C541D08(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;

  v3 = *(_QWORD *)(v1 + qword_255288E50 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_21C5B9FA4(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v8 = sub_21C5E3D60();
    swift_release();
    if (v8)
      goto LABEL_4;
  }
  else if (*(_QWORD *)(v4 + 16))
  {
LABEL_4:
    if ((v4 & 0xC000000000000001) != 0)
    {
      v5 = (_BYTE *)MEMORY[0x22077F1B4](0, v4);
      goto LABEL_7;
    }
    if (*(_QWORD *)(v4 + 16))
    {
      v5 = *(id *)(v4 + 32);
LABEL_7:
      v12 = v5;
      swift_release();
      if (v12[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature] == 1)
      {
        v6 = *(void **)&v12[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem];
        if (v6)
        {
          v7 = v6;
          objc_msgSend(a1, sel_selectMapItem_, v7);

        }
      }
      else
      {
        objc_msgSend(a1, sel_selectAnnotation_animated_);
      }

      return;
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    v11 = sub_21C5E3D60();
    swift_release();
    if (!v11)
      goto LABEL_25;
    goto LABEL_17;
  }
  swift_release();
  v9 = *(_QWORD *)(v1 + qword_255288E60 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = sub_21C5B9FA4(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1 < 0 || (v1 & 0x4000000000000000) != 0)
    goto LABEL_24;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_25:
    swift_release();
    return;
  }
LABEL_17:
  if ((v1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x22077F1B4](0, v1);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    v10 = *(_QWORD *)(v1 + 16);
    swift_release();
    if (!v10)
    {
      __break(1u);
      return;
    }
  }
  if ((objc_msgSend(a1, sel_showsUserLocation) & 1) != 0)
    objc_msgSend(a1, sel_selectUserLocationAnimated_, 0);
}

id sub_21C541F88(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  void *v8;

  v6 = a3;
  swift_unknownObjectRetain();
  v7 = a1;
  v8 = (void *)sub_21C570290(a4, 0);

  swift_unknownObjectRelease();
  return v8;
}

id sub_21C541FEC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  void *v8;

  v6 = a3;
  swift_unknownObjectRetain();
  v7 = a1;
  v8 = (void *)sub_21C589CD8(a4);

  swift_unknownObjectRelease();
  return v8;
}

id sub_21C54204C(char *a1)
{
  objc_super v2;

  *(_QWORD *)&a1[qword_255288A28] = 0xF000000000000007;
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for StaticMapBridgingViewCoordinator(0);
  return objc_msgSendSuper2(&v2, sel_init);
}

unint64_t sub_21C54209C()
{
  uint64_t v0;

  return sub_21C560A38(*(_QWORD *)(v0 + qword_255288A28));
}

id sub_21C5420AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StaticMapBridgingViewCoordinator(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_21C5420E0(uint64_t a1)
{
  return sub_21C560A38(*(_QWORD *)(a1 + qword_255288A28));
}

uint64_t sub_21C5420F0(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(_BYTE *, _QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  double v47;
  double v48;
  double v49;
  double v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t (*v56)();
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  id v73;
  id v74;
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  char v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  id v96;
  id v97;
  void (*v98)(__int128 *, _QWORD);
  uint64_t v99;
  uint64_t v100;
  char v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  unint64_t v119;
  int64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  _QWORD *v133;
  id v134;
  void (*v135)(_OWORD *, _QWORD);
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  char v141;
  _QWORD *v142;
  void *v143;
  _QWORD *v144;
  void (*v145)(id *, _QWORD);
  uint64_t v146;
  uint64_t v147;
  void *v148;
  unint64_t v149;
  char v150;
  char v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  void *v166;
  uint64_t v167;
  id v168;
  id v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  char v174;
  unint64_t v175;
  uint64_t v176;
  _BOOL8 v177;
  uint64_t v178;
  char v179;
  unint64_t v180;
  char v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  BOOL v186;
  uint64_t v187;
  id v188;
  id v189;
  uint64_t v190;
  void (*v191)(__int128 *, _QWORD);
  uint64_t v192;
  uint64_t v193;
  char v194;
  uint64_t v195;
  char v196;
  unint64_t v197;
  uint64_t v198;
  _BOOL8 v199;
  uint64_t v200;
  char v201;
  unint64_t v202;
  char v203;
  _QWORD *v204;
  uint64_t v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  uint64_t v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  uint64_t v225;
  uint64_t v226;
  id v227;
  uint64_t result;
  uint64_t v229;
  uint64_t (*v230)();
  uint64_t v231;
  id v232;
  _QWORD *v233;
  _QWORD *v234;
  _QWORD *v235;
  int64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  id v240;
  char *v241;
  _QWORD *v242;
  uint64_t v243;
  _OWORD v244[8];
  uint64_t v245;
  uint64_t v246;
  id v247[4];
  _QWORD *v248;
  _OWORD v249[8];
  uint64_t v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  uint64_t v259;
  _BYTE v260[136];
  uint64_t v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  uint64_t v270;
  _BYTE v271[144];
  _OWORD v272[2];
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  uint64_t v279;
  _BYTE v280[40];
  double v281;
  double v282;
  double v283;
  double v284;
  char v285;
  double v286;
  double v287;
  double v288;
  double v289;
  char v290;

  v232 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288BC8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v229 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v260 = v5;
  v240 = v5;
  v243 = a5;
  v13 = (void (*)(_BYTE *, _QWORD))swift_readAtKeyPath();
  v15 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRetain();
  v13(v271, 0);

  v16 = a2[2];
  if (v16)
  {
    v236 = (int64_t)v12;
    v237 = a3;
    v238 = v15;
    v239 = a4;
    v17 = (char *)v272 + 8;
    swift_bridgeObjectRetain();
    v18 = v16 - 1;
    v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v20 = 4;
    v233 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v234 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v241 = (char *)v272 + 8;
    v242 = a2;
    while (1)
    {
      v21 = *(_OWORD *)&a2[v20 + 10];
      v22 = *(_OWORD *)&a2[v20 + 14];
      v277 = *(_OWORD *)&a2[v20 + 12];
      v278 = v22;
      v23 = *(_OWORD *)&a2[v20 + 2];
      v24 = *(_OWORD *)&a2[v20 + 6];
      v273 = *(_OWORD *)&a2[v20 + 4];
      v274 = v24;
      v25 = *(_OWORD *)&a2[v20 + 6];
      v26 = *(_OWORD *)&a2[v20 + 10];
      v275 = *(_OWORD *)&a2[v20 + 8];
      v276 = v26;
      v27 = *(_OWORD *)&a2[v20 + 2];
      v272[0] = *(_OWORD *)&a2[v20];
      v272[1] = v27;
      v28 = *(_OWORD *)&a2[v20 + 14];
      *(_OWORD *)&v271[96] = v277;
      *(_OWORD *)&v271[112] = v28;
      *(_OWORD *)&v271[32] = v273;
      *(_OWORD *)&v271[48] = v25;
      *(_OWORD *)&v271[64] = v275;
      *(_OWORD *)&v271[80] = v21;
      v279 = a2[v20 + 16];
      *(_QWORD *)&v271[128] = a2[v20 + 16];
      *(_OWORD *)v271 = v272[0];
      *(_OWORD *)&v271[16] = v23;
      sub_21C560EF0((uint64_t)v17, (uint64_t)v280);
      v29 = *(_QWORD *)&v272[0];
      *(_QWORD *)&v262 = v240;
      v30 = v240;
      sub_21C560F2C((uint64_t)v272);
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      v31 = *(_QWORD *)&v260[24];
      if (!*(_QWORD *)(*(_QWORD *)&v260[24] + 16))
        break;
      v32 = sub_21C530FA8(v29);
      if ((v33 & 1) == 0)
        break;
      v34 = *(id *)(*(_QWORD *)(v31 + 56) + 8 * v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v249[0] = v30;
      v35 = v30;
      v36 = v34;
      swift_getAtKeyPath();

      v37 = v252;
      if (!*(_QWORD *)(v252 + 16) || (v38 = sub_21C530F5C((uint64_t)v36), (v39 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_34;
      }
      v40 = *(_QWORD *)(v37 + 56) + 136 * v38;
      *(_OWORD *)v260 = *(_OWORD *)v40;
      v41 = *(_OWORD *)(v40 + 48);
      v42 = *(_OWORD *)(v40 + 64);
      v43 = *(_OWORD *)(v40 + 32);
      *(_OWORD *)&v260[16] = *(_OWORD *)(v40 + 16);
      *(_OWORD *)&v260[32] = v43;
      *(_OWORD *)&v260[48] = v41;
      *(_OWORD *)&v260[64] = v42;
      v44 = *(_OWORD *)(v40 + 80);
      v45 = *(_OWORD *)(v40 + 96);
      v46 = *(_OWORD *)(v40 + 112);
      *(_QWORD *)&v260[128] = *(_QWORD *)(v40 + 128);
      *(_OWORD *)&v260[96] = v45;
      *(_OWORD *)&v260[112] = v46;
      *(_OWORD *)&v260[80] = v44;
      sub_21C560F2C((uint64_t)v260);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v47 = *(double *)&v260[8];
      v48 = *(double *)&v260[16];
      v49 = *(double *)&v260[24];
      v50 = *(double *)&v260[32];
      v51 = v260[40];
      sub_21C560EF0((uint64_t)v280, (uint64_t)&v286);
      if ((v290 & 1) != 0)
      {
        if (!v51 || v286 != v47 || v287 != v48 || v288 != v49 || v289 != v50)
          goto LABEL_33;
      }
      else if ((v51 & 1) != 0 || v286 != v47 || v287 != v48 || v288 != v49)
      {
LABEL_33:
        sub_21C560E74((uint64_t)v260);
LABEL_34:

        v17 = v241;
        a2 = v242;
LABEL_35:
        sub_21C560EF0((uint64_t)v280, (uint64_t)&v281);
        if ((v285 & 1) != 0)
          v73 = objc_msgSend((id)objc_opt_self(), sel_circleWithMapRect_, v281, v282, v283, v284);
        else
          v73 = objc_msgSend((id)objc_opt_self(), sel_circleWithCenterCoordinate_radius_, v281, v282, v283);
        v74 = v73;
        sub_21C560F2C((uint64_t)v272);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_21C5B8D34(0, v19[2] + 1, 1, v19);
        v76 = v19[2];
        v75 = v19[3];
        if (v76 >= v75 >> 1)
          v19 = sub_21C5B8D34((_QWORD *)(v75 > 1), v76 + 1, 1, v19);
        *(_OWORD *)&v260[32] = *(_OWORD *)&v271[32];
        *(_OWORD *)&v260[48] = *(_OWORD *)&v271[48];
        *(_QWORD *)&v260[128] = *(_QWORD *)&v271[128];
        *(_OWORD *)&v260[96] = *(_OWORD *)&v271[96];
        *(_OWORD *)&v260[112] = *(_OWORD *)&v271[112];
        *(_OWORD *)&v260[64] = *(_OWORD *)&v271[64];
        *(_OWORD *)&v260[80] = *(_OWORD *)&v271[80];
        *(_OWORD *)v260 = *(_OWORD *)v271;
        *(_OWORD *)&v260[16] = *(_OWORD *)&v271[16];
        v19[2] = v76 + 1;
        v77 = &v19[18 * v76];
        v77[4] = v74;
        *(_OWORD *)(v77 + 5) = *(_OWORD *)v260;
        v78 = *(_OWORD *)&v260[16];
        v79 = *(_OWORD *)&v260[32];
        v80 = *(_OWORD *)&v260[48];
        *(_OWORD *)(v77 + 13) = *(_OWORD *)&v260[64];
        *(_OWORD *)(v77 + 11) = v80;
        *(_OWORD *)(v77 + 9) = v79;
        *(_OWORD *)(v77 + 7) = v78;
        v81 = *(_OWORD *)&v260[80];
        v82 = *(_OWORD *)&v260[96];
        v83 = *(_OWORD *)&v260[112];
        v77[21] = *(_QWORD *)&v260[128];
        *(_OWORD *)(v77 + 19) = v83;
        *(_OWORD *)(v77 + 17) = v82;
        *(_OWORD *)(v77 + 15) = v81;
        sub_21C560E74((uint64_t)v272);
        if (!v18)
          goto LABEL_50;
        goto LABEL_43;
      }
      if (v279 != *(_QWORD *)&v260[128])
        goto LABEL_33;
      v52 = sub_21C5E328C();
      v53 = *(_QWORD *)(v52 - 8);
      v54 = v236;
      (*(void (**)(int64_t, uint64_t, uint64_t))(v53 + 16))(v236, v237, v52);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v52);
      v55 = v232;
      v56 = sub_21C55F304(v55, v36, v239, v54, (uint64_t)v272);
      v58 = v57;
      v235 = (_QWORD *)v59;
      v231 = v60;
      sub_21C524980(v54, &qword_255288BC8);

      v229 = v58;
      if (v56)
      {
        v61 = swift_allocObject();
        *(_QWORD *)(v61 + 16) = v56;
        *(_QWORD *)(v61 + 24) = v58;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v233 = sub_21C5B8580(0, v233[2] + 1, 1, v233);
        v63 = v233[2];
        v62 = v233[3];
        if (v63 >= v62 >> 1)
          v233 = sub_21C5B8580((_QWORD *)(v62 > 1), v63 + 1, 1, v233);
        v64 = v233;
        v233[2] = v63 + 1;
        v65 = &v64[2 * v63];
        v65[4] = sub_21C562160;
        v65[5] = v61;
      }
      v230 = v56;
      v66 = (uint64_t)v235;
      if (v235)
      {
        v67 = swift_allocObject();
        *(_QWORD *)(v67 + 16) = v66;
        *(_QWORD *)(v67 + 24) = v231;
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v17 = v241;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v234 = sub_21C5B8580(0, v234[2] + 1, 1, v234);
        v70 = v234[2];
        v69 = v234[3];
        if (v70 >= v69 >> 1)
          v234 = sub_21C5B8580((_QWORD *)(v69 > 1), v70 + 1, 1, v234);
        v71 = v234;
        v234[2] = v70 + 1;
        v72 = &v71[2 * v70];
        v72[4] = sub_21C53E614;
        v72[5] = v67;
      }
      else
      {
        v17 = v241;
      }
      v84 = v238;
      swift_bridgeObjectRetain();
      v85 = sub_21C530F5C((uint64_t)v36);
      v87 = v86;
      swift_bridgeObjectRelease();
      if ((v87 & 1) != 0)
      {
        v88 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v244[0] = v84;
        if ((v88 & 1) == 0)
        {
          sub_21C55C248();
          v84 = *(_QWORD *)&v244[0];
        }

        v89 = *(_QWORD *)(v84 + 56) + 136 * v85;
        v262 = *(_OWORD *)v89;
        v90 = *(_OWORD *)(v89 + 48);
        v91 = *(_OWORD *)(v89 + 64);
        v92 = *(_OWORD *)(v89 + 32);
        v263 = *(_OWORD *)(v89 + 16);
        v264 = v92;
        v265 = v90;
        v266 = v91;
        v93 = *(_OWORD *)(v89 + 80);
        v94 = *(_OWORD *)(v89 + 96);
        v95 = *(_OWORD *)(v89 + 112);
        v270 = *(_QWORD *)(v89 + 128);
        v268 = v94;
        v269 = v95;
        v267 = v93;
        v238 = v84;
        sub_21C55B37C(v85, v84);
        swift_bridgeObjectRelease();
        sub_21C560E74((uint64_t)&v262);
      }
      *(_QWORD *)&v244[0] = v35;
      v96 = v35;
      sub_21C560F2C((uint64_t)v272);
      v97 = v36;
      v98 = (void (*)(__int128 *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
      v100 = v99;
      v101 = swift_isUniquelyReferenced_nonNull_native();
      v247[0] = *(id *)(v100 + 16);
      *(_QWORD *)(v100 + 16) = 0x8000000000000000;
      sub_21C55CFDC((uint64_t)v272, v97, v101);
      *(id *)(v100 + 16) = v247[0];

      swift_bridgeObjectRelease();
      v98(&v262, 0);
      sub_21C531A9C((uint64_t)v235);
      sub_21C531A9C((uint64_t)v230);

      sub_21C560E74((uint64_t)v260);
      sub_21C560E74((uint64_t)v272);
      a2 = v242;
      if (!v18)
      {
LABEL_50:
        swift_bridgeObjectRelease();
        v15 = v238;
        v235 = v19;
        if (v239)
          goto LABEL_51;
        goto LABEL_52;
      }
LABEL_43:
      --v18;
      v20 += 17;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  v233 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v234 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v235 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (a4)
  {
LABEL_51:
    v102 = (void *)objc_opt_self();
    v103 = swift_allocObject();
    *(_QWORD *)(v103 + 16) = v233;
    *(_QWORD *)&v271[32] = sub_21C560FAC;
    *(_QWORD *)&v271[40] = v103;
    v104 = MEMORY[0x24BDAC760];
    *(_QWORD *)v271 = MEMORY[0x24BDAC760];
    *(_QWORD *)&v271[8] = 1107296256;
    *(_QWORD *)&v271[16] = sub_21C558F28;
    *(_QWORD *)&v271[24] = &block_descriptor;
    v105 = _Block_copy(v271);
    swift_bridgeObjectRetain();
    swift_release();
    v106 = swift_allocObject();
    *(_QWORD *)(v106 + 16) = v234;
    *(_QWORD *)&v271[32] = sub_21C560FCC;
    *(_QWORD *)&v271[40] = v106;
    *(_QWORD *)v271 = v104;
    *(_QWORD *)&v271[8] = 1107296256;
    *(_QWORD *)&v271[16] = sub_21C558F54;
    *(_QWORD *)&v271[24] = &block_descriptor_49;
    v107 = _Block_copy(v271);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v102, sel_animateWithDuration_animations_completion_, v105, v107, 0.25);
    _Block_release(v107);
    _Block_release(v105);
  }
LABEL_52:
  v108 = *(_QWORD *)(v15 + 64);
  v237 = v15 + 64;
  v109 = -1;
  v110 = -1 << *(_BYTE *)(v15 + 32);
  v231 = ~v110;
  if (-v110 < 64)
    v109 = ~(-1 << -(char)v110);
  v111 = v109 & v108;
  v236 = (unint64_t)(63 - v110) >> 6;
  swift_bridgeObjectRetain();
  v238 = v15;
  v239 = 0;
  while (1)
  {
    if (v111)
    {
      v242 = (_QWORD *)((v111 - 1) & v111);
      v119 = __clz(__rbit64(v111)) | (v239 << 6);
      goto LABEL_73;
    }
    v120 = v239 + 1;
    if (__OFADD__(v239, 1))
    {
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (v120 >= v236)
      goto LABEL_80;
    v121 = *(_QWORD *)(v237 + 8 * v120);
    v122 = v239 + 1;
    if (!v121)
    {
      v122 = v239 + 2;
      if (v239 + 2 >= v236)
        goto LABEL_80;
      v121 = *(_QWORD *)(v237 + 8 * v122);
      if (!v121)
      {
        v122 = v239 + 3;
        if (v239 + 3 >= v236)
          goto LABEL_80;
        v121 = *(_QWORD *)(v237 + 8 * v122);
        if (!v121)
          break;
      }
    }
LABEL_72:
    v242 = (_QWORD *)((v121 - 1) & v121);
    v119 = __clz(__rbit64(v121)) + (v122 << 6);
    v239 = v122;
LABEL_73:
    v124 = *(void **)(*(_QWORD *)(v15 + 48) + 8 * v119);
    v125 = *(_QWORD *)(v15 + 56) + 136 * v119;
    v249[0] = *(_OWORD *)v125;
    v126 = *(_OWORD *)(v125 + 64);
    v128 = *(_OWORD *)(v125 + 16);
    v127 = *(_OWORD *)(v125 + 32);
    v249[3] = *(_OWORD *)(v125 + 48);
    v249[4] = v126;
    v249[1] = v128;
    v249[2] = v127;
    v130 = *(_OWORD *)(v125 + 96);
    v129 = *(_OWORD *)(v125 + 112);
    v131 = *(_OWORD *)(v125 + 80);
    v250 = *(_QWORD *)(v125 + 128);
    v249[6] = v130;
    v249[7] = v129;
    v249[5] = v131;
    v256 = *(_OWORD *)(v125 + 80);
    v257 = *(_OWORD *)(v125 + 96);
    v258 = *(_OWORD *)(v125 + 112);
    v259 = *(_QWORD *)(v125 + 128);
    v252 = *(_OWORD *)(v125 + 16);
    v253 = *(_OWORD *)(v125 + 32);
    v254 = *(_OWORD *)(v125 + 48);
    v255 = *(_OWORD *)(v125 + 64);
    v251 = *(_OWORD *)v125;
    *(_QWORD *)v260 = v124;
    *(_OWORD *)&v260[40] = v253;
    *(_OWORD *)&v260[56] = v254;
    *(_OWORD *)&v260[8] = v251;
    *(_OWORD *)&v260[24] = v252;
    v261 = v259;
    *(_OWORD *)&v260[104] = v257;
    *(_OWORD *)&v260[120] = v258;
    *(_OWORD *)&v260[72] = v255;
    *(_OWORD *)&v260[88] = v256;
    nullsub_1(v260);
    sub_21C52DB08((uint64_t)v260, (uint64_t)v271, (uint64_t *)&unk_255288BD0);
    v241 = *(char **)v271;
    v268 = *(_OWORD *)&v271[104];
    v269 = *(_OWORD *)&v271[120];
    v270 = *(_QWORD *)&v271[136];
    v264 = *(_OWORD *)&v271[40];
    v265 = *(_OWORD *)&v271[56];
    v266 = *(_OWORD *)&v271[72];
    v267 = *(_OWORD *)&v271[88];
    v262 = *(_OWORD *)&v271[8];
    v263 = *(_OWORD *)&v271[24];
    v132 = *(_QWORD *)&v271[8];
    v247[0] = v240;
    v133 = v240;
    sub_21C560F2C((uint64_t)v249);
    v134 = v124;
    swift_bridgeObjectRetain();
    v135 = (void (*)(_OWORD *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v137 = v136;
    swift_bridgeObjectRetain();
    v138 = sub_21C530FA8(v132);
    v140 = v139;
    swift_bridgeObjectRelease();
    if ((v140 & 1) != 0)
    {
      v141 = swift_isUniquelyReferenced_nonNull_native();
      v142 = *(_QWORD **)(v137 + 24);
      v248 = v142;
      *(_QWORD *)(v137 + 24) = 0x8000000000000000;
      if ((v141 & 1) == 0)
      {
        sub_21C55CD08(&qword_255288BF0);
        v142 = v248;
      }
      swift_bridgeObjectRelease();
      v143 = *(void **)(v142[7] + 8 * v138);
      sub_21C55BA94(v138, (uint64_t)v142);
      *(_QWORD *)(v137 + 24) = v142;

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v135(v244, 0);

    v248 = v133;
    v144 = v133;
    v145 = (void (*)(id *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v147 = v146;
    swift_bridgeObjectRetain();
    v148 = v241;
    v149 = sub_21C530F5C((uint64_t)v241);
    v151 = v150;
    swift_bridgeObjectRelease();
    if ((v151 & 1) != 0)
    {
      v152 = swift_isUniquelyReferenced_nonNull_native();
      v153 = *(_QWORD *)(v147 + 16);
      v246 = v153;
      *(_QWORD *)(v147 + 16) = 0x8000000000000000;
      if (!v152)
      {
        sub_21C55C248();
        v153 = v246;
      }

      v112 = *(_QWORD *)(v153 + 56) + 136 * v149;
      v244[0] = *(_OWORD *)v112;
      v113 = *(_OWORD *)(v112 + 48);
      v114 = *(_OWORD *)(v112 + 64);
      v115 = *(_OWORD *)(v112 + 32);
      v244[1] = *(_OWORD *)(v112 + 16);
      v244[2] = v115;
      v244[3] = v113;
      v244[4] = v114;
      v116 = *(_OWORD *)(v112 + 80);
      v117 = *(_OWORD *)(v112 + 96);
      v118 = *(_OWORD *)(v112 + 112);
      v245 = *(_QWORD *)(v112 + 128);
      v244[6] = v117;
      v244[7] = v118;
      v244[5] = v116;
      sub_21C55B37C(v149, v153);
      *(_QWORD *)(v147 + 16) = v153;
      swift_bridgeObjectRelease();
      sub_21C560E74((uint64_t)v244);
    }
    v145(v247, 0);

    sub_21C560E74((uint64_t)&v262);
    v15 = v238;
    v111 = (unint64_t)v242;
  }
  v123 = v239 + 4;
  if (v239 + 4 < v236)
  {
    v121 = *(_QWORD *)(v237 + 8 * v123);
    if (!v121)
    {
      while (1)
      {
        v122 = v123 + 1;
        if (__OFADD__(v123, 1))
          goto LABEL_117;
        if (v122 >= v236)
          goto LABEL_80;
        v121 = *(_QWORD *)(v237 + 8 * v122);
        ++v123;
        if (v121)
          goto LABEL_72;
      }
    }
    v122 = v239 + 4;
    goto LABEL_72;
  }
LABEL_80:
  sub_21C52A884();
  v154 = swift_bridgeObjectRetain();
  v155 = sub_21C559098(v154);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v155 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_21C5E3DD8();
    sub_21C531A4C(0, (unint64_t *)&qword_255289570);
    v156 = v155;
    goto LABEL_82;
  }
LABEL_118:
  sub_21C531A4C(0, (unint64_t *)&qword_255289570);
  swift_bridgeObjectRetain();
  v156 = sub_21C5E3D54();
  swift_bridgeObjectRelease();
LABEL_82:
  v157 = (uint64_t)v235;
  swift_bridgeObjectRelease();
  sub_21C5589DC(v156);
  swift_bridgeObjectRelease();
  v158 = *(_QWORD *)(v157 + 16);
  if (!v158)
    return v157;
  v239 = (uint64_t)&v271[8];
  swift_bridgeObjectRetain();
  v241 = (char *)(v158 - 1);
  v159 = 4;
  while (2)
  {
    *(_OWORD *)v271 = *(_OWORD *)&v235[v159];
    v160 = *(_OWORD *)&v235[v159 + 2];
    v161 = *(_OWORD *)&v235[v159 + 4];
    v162 = *(_OWORD *)&v235[v159 + 8];
    *(_OWORD *)&v271[48] = *(_OWORD *)&v235[v159 + 6];
    *(_OWORD *)&v271[64] = v162;
    *(_OWORD *)&v271[16] = v160;
    *(_OWORD *)&v271[32] = v161;
    v163 = *(_OWORD *)&v235[v159 + 10];
    v164 = *(_OWORD *)&v235[v159 + 12];
    v165 = *(_OWORD *)&v235[v159 + 16];
    *(_OWORD *)&v271[112] = *(_OWORD *)&v235[v159 + 14];
    *(_OWORD *)&v271[128] = v165;
    *(_OWORD *)&v271[80] = v163;
    *(_OWORD *)&v271[96] = v164;
    v166 = *(void **)v271;
    v167 = *(_QWORD *)&v271[8];
    *(_QWORD *)&v262 = v240;
    v168 = v240;
    sub_21C560DB8((uint64_t)v271);
    swift_bridgeObjectRetain();
    v169 = v166;
    v242 = (_QWORD *)swift_modifyAtReferenceWritableKeyPath();
    v171 = v170;
    v172 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v251 = *(_QWORD *)(v171 + 24);
    v173 = v251;
    *(_QWORD *)(v171 + 24) = 0x8000000000000000;
    v175 = sub_21C530FA8(v167);
    v176 = *(_QWORD *)(v173 + 16);
    v177 = (v174 & 1) == 0;
    v178 = v176 + v177;
    if (__OFADD__(v176, v177))
    {
      __break(1u);
LABEL_113:
      __break(1u);
      goto LABEL_114;
    }
    v179 = v174;
    if (*(_QWORD *)(v173 + 24) >= v178)
    {
      if ((v172 & 1) != 0)
      {
        v182 = (_QWORD *)v251;
        if ((v174 & 1) == 0)
          goto LABEL_93;
      }
      else
      {
        sub_21C55CD08(&qword_255288BF0);
        v182 = (_QWORD *)v251;
        if ((v179 & 1) == 0)
          goto LABEL_93;
      }
      goto LABEL_91;
    }
    sub_21C55AFC8(v178, v172, &qword_255288BF0);
    v180 = sub_21C530FA8(v167);
    if ((v179 & 1) == (v181 & 1))
    {
      v175 = v180;
      v182 = (_QWORD *)v251;
      if ((v179 & 1) == 0)
      {
LABEL_93:
        v182[(v175 >> 6) + 8] |= 1 << v175;
        v184 = 8 * v175;
        *(_QWORD *)(v182[6] + v184) = v167;
        *(_QWORD *)(v182[7] + v184) = v169;
        v185 = v182[2];
        v186 = __OFADD__(v185, 1);
        v187 = v185 + 1;
        if (v186)
          goto LABEL_115;
        v182[2] = v187;
        swift_bridgeObjectRetain();
LABEL_95:
        *(_QWORD *)(v171 + 24) = v182;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ((void (*)(_BYTE *, _QWORD))v242)(v260, 0);

        *(_QWORD *)&v251 = v168;
        v188 = v168;
        v189 = v169;
        v190 = v239;
        sub_21C560F2C(v239);
        v191 = (void (*)(__int128 *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
        v193 = v192;
        v194 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v249[0] = *(_QWORD *)(v193 + 16);
        v195 = *(_QWORD *)&v249[0];
        *(_QWORD *)(v193 + 16) = 0x8000000000000000;
        v197 = sub_21C530F5C((uint64_t)v189);
        v198 = *(_QWORD *)(v195 + 16);
        v199 = (v196 & 1) == 0;
        v200 = v198 + v199;
        if (__OFADD__(v198, v199))
          goto LABEL_113;
        v201 = v196;
        if (*(_QWORD *)(v195 + 24) >= v200)
        {
          if ((v194 & 1) != 0)
          {
            if ((v196 & 1) == 0)
              goto LABEL_104;
          }
          else
          {
            sub_21C55C248();
            if ((v201 & 1) == 0)
              goto LABEL_104;
          }
        }
        else
        {
          sub_21C559E0C(v200, v194);
          v202 = sub_21C530F5C((uint64_t)v189);
          if ((v201 & 1) != (v203 & 1))
            goto LABEL_120;
          v197 = v202;
          if ((v201 & 1) == 0)
          {
LABEL_104:
            v204 = *(_QWORD **)&v249[0];
            *(_QWORD *)(*(_QWORD *)&v249[0] + 8 * (v197 >> 6) + 64) |= 1 << v197;
            *(_QWORD *)(v204[6] + 8 * v197) = v189;
            v218 = v204[7] + 136 * v197;
            *(_OWORD *)v218 = *(_OWORD *)v190;
            v219 = *(_OWORD *)(v190 + 64);
            v221 = *(_OWORD *)(v190 + 16);
            v220 = *(_OWORD *)(v190 + 32);
            *(_OWORD *)(v218 + 48) = *(_OWORD *)(v190 + 48);
            *(_OWORD *)(v218 + 64) = v219;
            *(_OWORD *)(v218 + 16) = v221;
            *(_OWORD *)(v218 + 32) = v220;
            v222 = *(_OWORD *)(v190 + 80);
            v223 = *(_OWORD *)(v190 + 96);
            v224 = *(_OWORD *)(v190 + 112);
            *(_QWORD *)(v218 + 128) = *(_QWORD *)(v190 + 128);
            *(_OWORD *)(v218 + 96) = v223;
            *(_OWORD *)(v218 + 112) = v224;
            *(_OWORD *)(v218 + 80) = v222;
            v225 = v204[2];
            v186 = __OFADD__(v225, 1);
            v226 = v225 + 1;
            if (v186)
              goto LABEL_116;
            v204[2] = v226;
            v227 = v189;
            goto LABEL_106;
          }
        }
        v204 = *(_QWORD **)&v249[0];
        v205 = *(_QWORD *)(*(_QWORD *)&v249[0] + 56) + 136 * v197;
        *(_OWORD *)v260 = *(_OWORD *)v205;
        v206 = *(_OWORD *)(v205 + 64);
        v208 = *(_OWORD *)(v205 + 16);
        v207 = *(_OWORD *)(v205 + 32);
        *(_OWORD *)&v260[48] = *(_OWORD *)(v205 + 48);
        *(_OWORD *)&v260[64] = v206;
        *(_OWORD *)&v260[16] = v208;
        *(_OWORD *)&v260[32] = v207;
        v210 = *(_OWORD *)(v205 + 96);
        v209 = *(_OWORD *)(v205 + 112);
        v211 = *(_OWORD *)(v205 + 80);
        *(_QWORD *)&v260[128] = *(_QWORD *)(v205 + 128);
        *(_OWORD *)&v260[96] = v210;
        *(_OWORD *)&v260[112] = v209;
        *(_OWORD *)&v260[80] = v211;
        sub_21C560E74((uint64_t)v260);
        *(_OWORD *)v205 = *(_OWORD *)v190;
        v212 = *(_OWORD *)(v190 + 64);
        v214 = *(_OWORD *)(v190 + 16);
        v213 = *(_OWORD *)(v190 + 32);
        *(_OWORD *)(v205 + 48) = *(_OWORD *)(v190 + 48);
        *(_OWORD *)(v205 + 64) = v212;
        *(_OWORD *)(v205 + 16) = v214;
        *(_OWORD *)(v205 + 32) = v213;
        v216 = *(_OWORD *)(v190 + 96);
        v215 = *(_OWORD *)(v190 + 112);
        v217 = *(_OWORD *)(v190 + 80);
        *(_QWORD *)(v205 + 128) = *(_QWORD *)(v190 + 128);
        *(_OWORD *)(v205 + 96) = v216;
        *(_OWORD *)(v205 + 112) = v215;
        *(_OWORD *)(v205 + 80) = v217;
LABEL_106:
        *(_QWORD *)(v193 + 16) = v204;

        swift_bridgeObjectRelease();
        v191(&v262, 0);

        sub_21C560E74(v190);
        if (!v241)
        {
          v157 = (uint64_t)v235;
          swift_bridgeObjectRelease();
          return v157;
        }
        --v241;
        v159 += 18;
        continue;
      }
LABEL_91:
      v183 = v182[7];

      *(_QWORD *)(v183 + 8 * v175) = v169;
      goto LABEL_95;
    }
    break;
  }
  sub_21C5E3DF0();
  __break(1u);
LABEL_120:
  sub_21C531A4C(0, &qword_255288BE0);
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

_QWORD *sub_21C5433F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(__int128 *, _QWORD);
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  __int128 v18;
  id v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char *v50;
  id v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  float64x2_t *v74;
  float64x2_t *v75;
  uint64_t v76;
  int32x2_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t (*v86)();
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v109;
  void *v110;
  void *v111;
  void *v112;
  id v113;
  id v114;
  void (*v115)(__int128 *, _QWORD);
  uint64_t v116;
  uint64_t v117;
  char v118;
  id v119;
  uint64_t v120;
  char v121;
  void *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  void *v138;
  void *v139;
  id v140;
  id v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  void *v155;
  void *v156;
  char v157;
  char v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  id v162;
  id v163;
  void (*v164)(id *, _QWORD);
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  char v168;
  char v169;
  char v170;
  uint64_t v171;
  void *v172;
  void *v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  char v178;
  char v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  _QWORD *result;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  __int128 *v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  void *v201;
  id v202;
  id v203;
  void (*v204)(id *, _QWORD);
  uint64_t v205;
  uint64_t v206;
  char v207;
  _QWORD *v208;
  char v209;
  unint64_t v210;
  uint64_t v211;
  _BOOL8 v212;
  uint64_t v213;
  char v214;
  unint64_t v215;
  char v216;
  _QWORD *v217;
  uint64_t v218;
  uint64_t v219;
  BOOL v220;
  uint64_t v221;
  uint64_t v222;
  id v223;
  id v224;
  id v225;
  void *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char v230;
  _QWORD *v231;
  char v232;
  unint64_t v233;
  uint64_t v234;
  _BOOL8 v235;
  uint64_t v236;
  char v237;
  uint64_t v238;
  unint64_t v239;
  char v240;
  _QWORD *v241;
  uint64_t v242;
  void *v243;
  uint64_t v244;
  uint64_t v245;
  void *v246;
  void *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char v251;
  char v252;
  id v253;
  uint64_t v254;
  void *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  id v259;
  id v260;
  _QWORD *v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  id v268;
  id v269;
  id v270;
  uint64_t v271;
  _QWORD *v272;
  _QWORD *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  int v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  _QWORD *v285;
  id v286;
  id v287;
  uint64_t v288;
  id v289;
  id v290;
  __n128 *v291;
  uint64_t v292;
  void *v293;
  id v294;
  id v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  void *v299;
  unint64_t v300;
  void *v301;
  uint64_t v302;
  uint64_t v303;
  id v304[4];
  id v305;
  char v306;
  char v307;
  id v308[12];
  char v309;
  uint64_t v310;
  char v311;
  uint64_t v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  _OWORD v321[7];
  id v322;
  __n128 v323;
  uint64_t v324;
  __n128 v325;
  __n128 v326;
  uint64_t v327;

  v269 = a1;
  v271 = 0;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288BC8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v262 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v308[0] = v5;
  v286 = v5;
  v302 = a5;
  v13 = (void (*)(__int128 *, _QWORD))swift_readAtKeyPath();
  v283 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRetain();
  v13(&v313, 0);

  v290 = *(id *)(a2 + 16);
  if (!v290)
  {
    v272 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v273 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v285 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (a4)
      goto LABEL_68;
    goto LABEL_69;
  }
  v263 = v12;
  v264 = a3;
  v266 = a2;
  v267 = a4;
  v291 = (__n128 *)((char *)v321 + 8);
  v292 = a2 + 32;
  swift_bridgeObjectRetain();
  v15 = 0;
  v272 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v273 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v285 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v16 = v290;
  do
  {
    v17 = v292 + 120 * (_QWORD)v15;
    v18 = *(_OWORD *)(v17 + 80);
    v321[4] = *(_OWORD *)(v17 + 64);
    v321[5] = v18;
    v321[6] = *(_OWORD *)(v17 + 96);
    v19 = *(id *)(v17 + 112);
    v322 = v19;
    v20 = *(_OWORD *)(v17 + 16);
    v321[0] = *(_OWORD *)v17;
    v321[1] = v20;
    v21 = *(_OWORD *)(v17 + 48);
    v321[2] = *(_OWORD *)(v17 + 32);
    v321[3] = v21;
    v293 = *(void **)v17;
    v22 = *(_QWORD *)(v17 + 8);
    v300 = *(_QWORD *)(v17 + 16);
    v301 = (void *)v22;
    v23 = *(void **)(v17 + 24);
    v298 = *(_QWORD *)(v17 + 32);
    v299 = v23;
    v24 = *(_QWORD *)(v17 + 40);
    v25 = *(_QWORD *)(v17 + 48);
    v26 = *(_QWORD *)(v17 + 56);
    v27 = *(_QWORD *)(v17 + 64);
    v28 = *(_QWORD *)(v17 + 72);
    v296 = *(_QWORD *)(v17 + 80);
    v297 = v27;
    LODWORD(v295) = *(unsigned __int8 *)(v17 + 88);
    v29 = *(_QWORD *)(v17 + 96);
    LODWORD(v294) = *(unsigned __int8 *)(v17 + 104);
    v324 = v291[1].n128_i64[0];
    v323 = *v291;
    v30 = *(_QWORD *)&v321[0];
    v308[0] = v286;
    v31 = v286;
    sub_21C561244((uint64_t)v321);
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();

    v32 = *((_QWORD *)&v314 + 1);
    if (!*(_QWORD *)(*((_QWORD *)&v314 + 1) + 16) || (v33 = sub_21C530FA8(v30), (v34 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v63 = v323.n128_i64[1];
      v62 = (_QWORD *)v323.n128_u64[0];
      if ((v323.n128_u64[1] & 0x8000000000000000) == 0)
      {
LABEL_18:
        v64 = v324;
        sub_21C531A4C(0, (unint64_t *)&qword_255288C20);
        sub_21C5612DC((uint64_t)&v323);
        v62 = sub_21C5AF348(v62, v63, v64);
LABEL_22:
        v65 = v293;
        v66 = (uint64_t)v301;
        sub_21C561244((uint64_t)v321);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v67 = v285;
        else
          v67 = sub_21C5B8E5C(0, v285[2] + 1, 1, v285);
        v69 = v67[2];
        v68 = v67[3];
        if (v69 >= v68 >> 1)
          v67 = sub_21C5B8E5C((_QWORD *)(v68 > 1), v69 + 1, 1, v67);
        LOBYTE(v304[0]) = (_BYTE)v295;
        LOBYTE(v305) = (_BYTE)v294;
        v67[2] = v69 + 1;
        v285 = v67;
        v70 = &v67[16 * v69];
        v70[4] = v62;
        v70[5] = v65;
        v71 = v300;
        v70[6] = v66;
        v70[7] = v71;
        v72 = v298;
        v70[8] = v299;
        v70[9] = v72;
        v70[10] = v24;
        v70[11] = v25;
        v70[12] = v26;
        v70[13] = v297;
        v70[14] = v28;
        v70[15] = v296;
        *((_BYTE *)v70 + 128) = v304[0];
        LODWORD(v72) = v313;
        *((_DWORD *)v70 + 33) = *(_DWORD *)((char *)&v313 + 3);
        *(_DWORD *)((char *)v70 + 129) = v72;
        v70[17] = v29;
        *((_BYTE *)v70 + 144) = (_BYTE)v305;
        LODWORD(v72) = v308[0];
        *((_DWORD *)v70 + 37) = *(_DWORD *)((char *)v308 + 3);
        *(_DWORD *)((char *)v70 + 145) = v72;
        v70[19] = v19;
        sub_21C561308((uint64_t)v321);
        goto LABEL_27;
      }
      goto LABEL_21;
    }
    v35 = *(id *)(*(_QWORD *)(v32 + 56) + 8 * v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v308[0] = v31;
    v36 = v31;
    v37 = v35;
    swift_getAtKeyPath();

    v38 = v314;
    if (!*(_QWORD *)(v314 + 16) || (v39 = sub_21C531010((uint64_t)v37), (v40 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_17:
      v16 = v290;
      v63 = v323.n128_i64[1];
      v62 = (_QWORD *)v323.n128_u64[0];
      if ((v323.n128_u64[1] & 0x8000000000000000) == 0)
        goto LABEL_18;
LABEL_21:
      sub_21C5612DC((uint64_t)&v323);
      goto LABEL_22;
    }
    v268 = v36;
    v280 = v29;
    v41 = *(_QWORD *)(v38 + 56) + 120 * v39;
    v42 = *(_QWORD *)v41;
    v43 = *(void **)(v41 + 8);
    v45 = *(_QWORD *)(v41 + 16);
    v44 = *(_QWORD *)(v41 + 24);
    v287 = v37;
    v46 = *(char **)(v41 + 32);
    v278 = (uint64_t)v19;
    v279 = v46;
    v47 = *(_QWORD *)(v41 + 64);
    v48 = *(_QWORD *)(v41 + 80);
    v49 = *(unsigned __int8 *)(v41 + 88);
    v289 = *(id *)(v41 + 96);
    v281 = *(unsigned __int8 *)(v41 + 104);
    v270 = *(id *)(v41 + 112);
    v275 = v42;
    swift_bridgeObjectRetain();
    v284 = (uint64_t)v43;
    v288 = v45;
    v282 = v44;
    sub_21C5611D8(v43, v45);
    v50 = v279;
    v51 = v287;
    v52 = v281;
    v274 = v50;
    v276 = v47;
    swift_bridgeObjectRetain();
    v277 = v48;
    LODWORD(v279) = v49;
    sub_21C52EF74(v48, v49);
    sub_21C52EF74((uint64_t)v289, v52);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21C5613A0(&v323, &v325);
    sub_21C5613A0(&v325, &v326);
    if ((v326.n128_u64[1] & 0x8000000000000000) != 0)
    {
      v326.n128_u64[1] &= ~0x8000000000000000;
      v53 = v288;
      if (v288 < 0)
      {
        v61 = v52;
        v80 = v288;
        sub_21C531A4C(0, (unint64_t *)&qword_255289570);
        sub_21C5612DC((uint64_t)&v323);
        v57 = (void *)v284;
        sub_21C5611D8((void *)v284, v80);
        v81 = sub_21C5E3B98();
        sub_21C561218(v57, v80);
        sub_21C5613DC((uint64_t)&v323);
        v29 = v280;
        v19 = (id)v278;
        if ((v81 & 1) == 0)
          goto LABEL_60;
        goto LABEL_38;
      }
LABEL_20:
      swift_bridgeObjectRelease();
      sub_21C561218((void *)v284, v53);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v277, (char)v279);
      sub_21C531AC8((uint64_t)v289, v52);

      v16 = v290;
      v29 = v280;
      v19 = (id)v278;
      v63 = v323.n128_i64[1];
      v62 = (_QWORD *)v323.n128_u64[0];
      if ((v323.n128_u64[1] & 0x8000000000000000) == 0)
        goto LABEL_18;
      goto LABEL_21;
    }
    v53 = v288;
    if (v288 < 0)
      goto LABEL_20;
    v54 = v52;
    v265 = v327;
    v55 = v326.n128_u64[0];
    v56 = v282;
    v57 = (void *)v284;
    if ((v326.n128_u8[8] & 1) != 0)
    {
      v29 = v280;
      v19 = (id)v278;
      if ((v288 & 1) != 0 && (v73 = *(_QWORD *)(v326.n128_u64[0] + 16), v73 == *(_QWORD *)(v284 + 16)))
      {
        if (!v73)
        {
          v61 = v54;
          goto LABEL_57;
        }
        v74 = (float64x2_t *)(v326.n128_u64[0] + 32);
        v75 = (float64x2_t *)(v284 + 32);
        v76 = v73 - 1;
        v61 = v54;
        while (1)
        {
          v77 = vmovn_s64(vceqq_f64(*v74, *v75));
          if ((v77.i32[0] & v77.i32[1] & 1) == 0)
            break;
          if (!v76)
            goto LABEL_57;
          ++v75;
          ++v74;
          --v76;
        }
LABEL_62:
        swift_bridgeObjectRelease();
        v122 = v57;
        v123 = v53;
LABEL_63:
        sub_21C561218(v122, v123);
        swift_bridgeObjectRelease();

        sub_21C531AC8(v277, (char)v279);
        v78 = (uint64_t)v289;
        v79 = v61;
      }
      else
      {
LABEL_36:
        swift_bridgeObjectRelease();
        sub_21C561218(v57, v53);
        swift_bridgeObjectRelease();

        sub_21C531AC8(v277, (char)v279);
        v78 = (uint64_t)v289;
        v79 = v54;
      }
      sub_21C531AC8(v78, v79);

      goto LABEL_17;
    }
    v29 = v280;
    v19 = (id)v278;
    if ((v288 & 1) != 0 || *(_QWORD *)(v326.n128_u64[0] + 16) != *(_QWORD *)(v284 + 16))
      goto LABEL_36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = (uint64_t)v57;
    v59 = v53;
    v60 = v271;
    HIDWORD(v262) = sub_21C559680(v55, v58);
    v271 = v60;
    v53 = v59;
    v57 = (void *)v284;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v61 = v54;
    if ((v262 & 0x100000000) == 0)
      goto LABEL_62;
LABEL_57:
    if (v265)
    {
      if (!v56)
        goto LABEL_62;
      swift_bridgeObjectRetain();
      v120 = swift_bridgeObjectRetain();
      v121 = sub_21C5B7B9C(v120, v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v121 & 1) == 0)
      {
LABEL_60:
        swift_bridgeObjectRelease();
        v122 = v57;
        v123 = v288;
        goto LABEL_63;
      }
    }
    else if (v56)
    {
      goto LABEL_62;
    }
LABEL_38:
    if (v322 != v270)
      goto LABEL_60;
    v82 = sub_21C5E328C();
    v83 = *(_QWORD *)(v82 - 8);
    v84 = (uint64_t)v263;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v263, v264, v82);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v82);
    v85 = v269;
    v86 = sub_21C55F734(v85, v51, v267, v84, (uint64_t)v321);
    v88 = v87;
    v90 = v89;
    v92 = v91;
    sub_21C524980(v84, &qword_255288BC8);

    if (v86)
    {
      v93 = swift_allocObject();
      *(_QWORD *)(v93 + 16) = v86;
      *(_QWORD *)(v93 + 24) = v88;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v272 = sub_21C5B8580(0, v272[2] + 1, 1, v272);
      v95 = v272[2];
      v94 = v272[3];
      if (v95 >= v94 >> 1)
        v272 = sub_21C5B8580((_QWORD *)(v94 > 1), v95 + 1, 1, v272);
      v96 = v272;
      v272[2] = v95 + 1;
      v97 = &v96[2 * v95];
      v97[4] = sub_21C562160;
      v97[5] = v93;
    }
    v300 = v92;
    v301 = (void *)v90;
    if (v90)
    {
      v98 = swift_allocObject();
      *(_QWORD *)(v98 + 16) = v90;
      *(_QWORD *)(v98 + 24) = v92;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v273 = sub_21C5B8580(0, v273[2] + 1, 1, v273);
      v100 = v273[2];
      v99 = v273[3];
      if (v100 >= v99 >> 1)
        v273 = sub_21C5B8580((_QWORD *)(v99 > 1), v100 + 1, 1, v273);
      v101 = v273;
      v273[2] = v100 + 1;
      v102 = &v101[2 * v100];
      v102[4] = sub_21C562160;
      v102[5] = v98;
    }
    v103 = v283;
    swift_bridgeObjectRetain();
    v104 = sub_21C531010((uint64_t)v287);
    v106 = v105;
    swift_bridgeObjectRelease();
    v107 = (uint64_t)v86;
    if ((v106 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v313 = v103;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_21C55C460();
        v103 = v313;
      }

      v109 = *(_QWORD *)(v103 + 56) + 120 * v104;
      v110 = *(void **)(v109 + 8);
      v111 = *(void **)(v109 + 32);
      v112 = *(void **)(v109 + 64);
      v294 = *(id *)(v109 + 16);
      v295 = v112;
      v297 = *(_QWORD *)(v109 + 80);
      LODWORD(v296) = *(unsigned __int8 *)(v109 + 88);
      v299 = *(void **)(v109 + 96);
      LODWORD(v298) = *(unsigned __int8 *)(v109 + 104);
      v283 = v103;
      sub_21C55B538(v104, v103);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21C561218(v110, (uint64_t)v294);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v297, v296);
      sub_21C531AC8((uint64_t)v299, v298);
    }
    v308[0] = v268;
    v113 = v268;
    sub_21C561244((uint64_t)v321);
    v114 = v287;
    v115 = (void (*)(__int128 *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v117 = v116;
    v118 = swift_isUniquelyReferenced_nonNull_native();
    v304[0] = *(id *)(v117 + 16);
    *(_QWORD *)(v117 + 16) = 0x8000000000000000;
    sub_21C55D168((uint64_t)v321, v114, v118);
    *(id *)(v117 + 16) = v304[0];

    swift_bridgeObjectRelease();
    v115(&v313, 0);
    sub_21C531A9C((uint64_t)v301);
    sub_21C531A9C(v107);

    v119 = v308[0];
    swift_bridgeObjectRelease();

    sub_21C561218(v57, v288);
    swift_bridgeObjectRelease();

    sub_21C531AC8(v277, (char)v279);
    sub_21C531AC8((uint64_t)v289, v281);
    sub_21C561308((uint64_t)v321);
    v16 = v290;
LABEL_27:
    v15 = (char *)v15 + 1;
  }
  while (v15 != v16);
  swift_bridgeObjectRelease();
  if (v267)
  {
LABEL_68:
    v124 = (void *)objc_opt_self();
    v125 = swift_allocObject();
    *(_QWORD *)(v125 + 16) = v272;
    *(_QWORD *)&v315 = sub_21C5620F8;
    *((_QWORD *)&v315 + 1) = v125;
    v126 = MEMORY[0x24BDAC760];
    *(_QWORD *)&v313 = MEMORY[0x24BDAC760];
    *((_QWORD *)&v313 + 1) = 1107296256;
    *(_QWORD *)&v314 = sub_21C558F28;
    *((_QWORD *)&v314 + 1) = &block_descriptor_75;
    v127 = _Block_copy(&v313);
    swift_bridgeObjectRetain();
    swift_release();
    v128 = swift_allocObject();
    *(_QWORD *)(v128 + 16) = v273;
    *(_QWORD *)&v315 = sub_21C561FAC;
    *((_QWORD *)&v315 + 1) = v128;
    *(_QWORD *)&v313 = v126;
    *((_QWORD *)&v313 + 1) = 1107296256;
    *(_QWORD *)&v314 = sub_21C558F54;
    *((_QWORD *)&v314 + 1) = &block_descriptor_82;
    v129 = _Block_copy(&v313);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v124, sel_animateWithDuration_animations_completion_, v127, v129, 0.25);
    _Block_release(v129);
    _Block_release(v127);
  }
LABEL_69:
  v130 = v283;
  v131 = *(_QWORD *)(v283 + 64);
  v280 = v283 + 64;
  v132 = -1;
  v133 = -1 << *(_BYTE *)(v283 + 32);
  v278 = ~v133;
  if (-v133 < 64)
    v132 = ~(-1 << -(char)v133);
  v134 = v132 & v131;
  v279 = (char *)((unint64_t)(63 - v133) >> 6);
  swift_bridgeObjectRetain();
  v284 = 0;
  while (2)
  {
    if (v134)
    {
      v300 = (v134 - 1) & v134;
      v142 = __clz(__rbit64(v134)) | (v284 << 6);
LABEL_87:
      v146 = *(void **)(*(_QWORD *)(v130 + 48) + 8 * v142);
      v147 = *(_QWORD *)(v130 + 56) + 120 * v142;
      v148 = *(void **)v147;
      v149 = *(void **)(v147 + 8);
      v150 = *(void **)(v147 + 16);
      v151 = *(void **)(v147 + 24);
      v152 = *(void **)(v147 + 32);
      v154 = *(void **)(v147 + 48);
      v153 = *(void **)(v147 + 56);
      v155 = *(void **)(v147 + 64);
      v156 = *(void **)(v147 + 72);
      v287 = *(id *)(v147 + 80);
      v157 = *(_BYTE *)(v147 + 88);
      v288 = *(_QWORD *)(v147 + 96);
      v289 = v146;
      v158 = *(_BYTE *)(v147 + 104);
      v159 = *(_QWORD *)(v147 + 112);
      v307 = v157;
      v306 = v158;
      v160 = *(void **)(v147 + 40);
      v308[0] = v146;
      v308[1] = v148;
      v308[2] = v149;
      v308[3] = v150;
      v308[4] = v151;
      v308[5] = v152;
      v308[6] = v160;
      v308[7] = v154;
      v308[8] = v153;
      v308[9] = v155;
      v308[10] = v156;
      v308[11] = v287;
      v309 = v157;
      v310 = v288;
      v311 = v158;
      v312 = v159;
      nullsub_1(v308);
      sub_21C52DB08((uint64_t)v308, (uint64_t)&v313, &qword_255288C18);
      v161 = *((_QWORD *)&v313 + 1);
      v301 = (void *)v313;
      v292 = *((_QWORD *)&v314 + 1);
      v293 = (void *)v314;
      v291 = (__n128 *)v315;
      v294 = (id)*((_QWORD *)&v317 + 1);
      v295 = (id)*((_QWORD *)&v315 + 1);
      v297 = *((_QWORD *)&v318 + 1);
      LODWORD(v296) = v319;
      v299 = (void *)*((_QWORD *)&v319 + 1);
      LODWORD(v298) = v320;
      v305 = v286;
      v290 = v286;
      swift_bridgeObjectRetain();
      sub_21C5611D8(v149, (uint64_t)v150);
      v162 = v152;
      swift_bridgeObjectRetain();
      sub_21C52EF74((uint64_t)v287, v157);
      sub_21C52EF74(v288, v158);
      v163 = v289;
      swift_bridgeObjectRetain();
      v164 = (void (*)(id *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
      v166 = v165;
      swift_bridgeObjectRetain();
      v167 = sub_21C530FA8(v161);
      v169 = v168;
      swift_bridgeObjectRelease();
      if ((v169 & 1) != 0)
      {
        v170 = swift_isUniquelyReferenced_nonNull_native();
        v171 = *(_QWORD *)(v166 + 24);
        v303 = v171;
        *(_QWORD *)(v166 + 24) = 0x8000000000000000;
        if ((v170 & 1) == 0)
        {
          sub_21C55CD08(&qword_255288C28);
          v171 = v303;
        }
        swift_bridgeObjectRelease();
        v172 = *(void **)(*(_QWORD *)(v171 + 56) + 8 * v167);
        sub_21C55BA94(v167, v171);
        *(_QWORD *)(v166 + 24) = v171;

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v139 = v301;
      v173 = v290;
      v164(v304, 0);

      v305 = v173;
      v174 = v173;
      v140 = (id)swift_modifyAtReferenceWritableKeyPath();
      v176 = v175;
      swift_bridgeObjectRetain();
      v177 = sub_21C531010((uint64_t)v139);
      v179 = v178;
      swift_bridgeObjectRelease();
      if ((v179 & 1) != 0)
      {
        v289 = v140;
        v290 = (id)v161;
        v180 = swift_isUniquelyReferenced_nonNull_native();
        v181 = *(_QWORD *)(v176 + 16);
        v303 = v181;
        *(_QWORD *)(v176 + 16) = 0x8000000000000000;
        if (!v180)
        {
          sub_21C55C460();
          v181 = v303;
        }

        v135 = *(_QWORD *)(v181 + 56) + 120 * v177;
        v136 = *(void **)(v135 + 8);
        v137 = *(_QWORD *)(v135 + 16);
        v138 = *(void **)(v135 + 32);
        v282 = *(_QWORD *)(v135 + 80);
        v281 = *(unsigned __int8 *)(v135 + 88);
        v288 = *(_QWORD *)(v135 + 96);
        LODWORD(v287) = *(unsigned __int8 *)(v135 + 104);
        sub_21C55B538(v177, v181);
        *(_QWORD *)(v176 + 16) = v181;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21C561218(v136, v137);
        swift_bridgeObjectRelease();

        sub_21C531AC8(v282, v281);
        sub_21C531AC8(v288, (char)v287);
        v139 = v301;
        v140 = v289;
      }
      ((void (*)(id *, _QWORD))v140)(v304, 0);
      v141 = v305;
      swift_bridgeObjectRelease();

      sub_21C561218(v293, v292);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v297, v296);
      sub_21C531AC8((uint64_t)v299, v298);

      v130 = v283;
      v134 = v300;
      continue;
    }
    break;
  }
  v143 = v284 + 1;
  if (__OFADD__(v284, 1))
  {
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
  if (v143 >= (uint64_t)v279)
    goto LABEL_98;
  v144 = *(_QWORD *)(v280 + 8 * v143);
  if (v144)
    goto LABEL_86;
  v145 = v284 + 2;
  if (v284 + 2 >= (uint64_t)v279)
    goto LABEL_98;
  v144 = *(_QWORD *)(v280 + 8 * v145);
  if (v144)
    goto LABEL_85;
  v145 = v284 + 3;
  if (v284 + 3 >= (uint64_t)v279)
    goto LABEL_98;
  v144 = *(_QWORD *)(v280 + 8 * v145);
  if (v144)
    goto LABEL_85;
  v145 = v284 + 4;
  if (v284 + 4 < (uint64_t)v279)
  {
    v144 = *(_QWORD *)(v280 + 8 * v145);
    if (!v144)
    {
      while (1)
      {
        v143 = v145 + 1;
        if (__OFADD__(v145, 1))
          goto LABEL_134;
        if (v143 >= (uint64_t)v279)
          goto LABEL_98;
        v144 = *(_QWORD *)(v280 + 8 * v143);
        ++v145;
        if (v144)
          goto LABEL_86;
      }
    }
LABEL_85:
    v143 = v145;
LABEL_86:
    v300 = (v144 - 1) & v144;
    v142 = __clz(__rbit64(v144)) + (v143 << 6);
    v284 = v143;
    goto LABEL_87;
  }
LABEL_98:
  sub_21C52A884();
  v182 = swift_bridgeObjectRetain();
  v183 = sub_21C559098(v182);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v183 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_21C5E3DD8();
    sub_21C531A4C(0, (unint64_t *)&qword_255289570);
    v184 = v183;
    goto LABEL_100;
  }
LABEL_135:
  sub_21C531A4C(0, (unint64_t *)&qword_255289570);
  swift_bridgeObjectRetain();
  v184 = sub_21C5E3D54();
  swift_bridgeObjectRelease();
LABEL_100:
  swift_bridgeObjectRelease();
  sub_21C5589DC(v184);
  swift_bridgeObjectRelease();
  result = v285;
  v186 = v285[2];
  if (!v186)
    return result;
  swift_bridgeObjectRetain();
  v187 = v285;
  v288 = v186 - 1;
  v188 = 32;
  while (2)
  {
    v282 = v188;
    v189 = (__int128 *)((char *)v187 + v188);
    v191 = v189[2];
    v190 = v189[3];
    v192 = v189[1];
    v313 = *v189;
    v314 = v192;
    v315 = v191;
    v316 = v190;
    v194 = v189[6];
    v193 = v189[7];
    v195 = v189[5];
    v317 = v189[4];
    v318 = v195;
    v319 = v194;
    v320 = v193;
    v298 = *((_QWORD *)&v314 + 1);
    v299 = (void *)v314;
    v196 = v315;
    v197 = v316;
    LODWORD(v290) = HIDWORD(v316);
    LODWORD(v289) = DWORD2(v316);
    v293 = (void *)*((_QWORD *)&v317 + 1);
    v198 = v317;
    v294 = (id)*((_QWORD *)&v315 + 1);
    v296 = *((_QWORD *)&v195 + 1);
    v199 = v195;
    LODWORD(v295) = v194;
    v300 = *((_QWORD *)&v194 + 1);
    LODWORD(v297) = v193;
    v291 = (__n128 *)*((_QWORD *)&v193 + 1);
    v200 = *((_QWORD *)&v313 + 1);
    v201 = (void *)v313;
    v304[0] = v286;
    v202 = v286;
    sub_21C56112C((uint64_t)&v313);
    swift_bridgeObjectRetain();
    v203 = v201;
    v204 = (void (*)(id *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v206 = v205;
    v207 = swift_isUniquelyReferenced_nonNull_native();
    v305 = *(id *)(v206 + 24);
    v208 = v305;
    *(_QWORD *)(v206 + 24) = 0x8000000000000000;
    v301 = (void *)v200;
    v210 = sub_21C530FA8(v200);
    v211 = v208[2];
    v212 = (v209 & 1) == 0;
    v213 = v211 + v212;
    if (__OFADD__(v211, v212))
    {
      __break(1u);
LABEL_130:
      __break(1u);
      goto LABEL_131;
    }
    v214 = v209;
    if (v208[3] >= v213)
    {
      if ((v207 & 1) != 0)
      {
        v217 = v305;
        if ((v209 & 1) != 0)
          goto LABEL_110;
      }
      else
      {
        sub_21C55CD08(&qword_255288C28);
        v217 = v305;
        if ((v214 & 1) != 0)
          goto LABEL_110;
      }
LABEL_106:
      v217[(v210 >> 6) + 8] |= 1 << v210;
      v218 = 8 * v210;
      *(_QWORD *)(v217[6] + v218) = v301;
      *(_QWORD *)(v217[7] + v218) = v203;
      v219 = v217[2];
      v220 = __OFADD__(v219, 1);
      v221 = v219 + 1;
      if (v220)
        goto LABEL_132;
      v217[2] = v221;
      swift_bridgeObjectRetain();
LABEL_111:
      *(_QWORD *)(v206 + 24) = v217;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v204(v308, 0);

      v304[0] = v202;
      v223 = v202;
      v224 = v203;
      swift_bridgeObjectRetain();
      v292 = v196;
      sub_21C5611D8(v299, v298);
      v225 = v294;
      v226 = v293;
      swift_bridgeObjectRetain();
      sub_21C52EF74(v296, (char)v295);
      sub_21C52EF74(v300, v297);
      v227 = swift_modifyAtReferenceWritableKeyPath();
      v229 = v228;
      v230 = swift_isUniquelyReferenced_nonNull_native();
      v305 = *(id *)(v229 + 16);
      v231 = v305;
      *(_QWORD *)(v229 + 16) = 0x8000000000000000;
      v233 = sub_21C531010((uint64_t)v224);
      v234 = v231[2];
      v235 = (v232 & 1) == 0;
      v236 = v234 + v235;
      if (__OFADD__(v234, v235))
        goto LABEL_130;
      v237 = v232;
      v238 = v231[3];
      v287 = v224;
      if (v238 >= v236)
      {
        if ((v230 & 1) == 0)
          sub_21C55C460();
      }
      else
      {
        sub_21C55A248(v236, v230);
        v239 = sub_21C531010((uint64_t)v224);
        if ((v237 & 1) != (v240 & 1))
          goto LABEL_137;
        v233 = v239;
      }
      v283 = v227;
      v284 = (uint64_t)v225;
      v241 = v305;
      if ((v237 & 1) != 0)
      {
        v242 = *((_QWORD *)v305 + 7) + 120 * v233;
        v243 = *(void **)(v242 + 8);
        v244 = *(_QWORD *)(v242 + 16);
        v278 = *(_QWORD *)(v242 + 32);
        v280 = *(_QWORD *)(v242 + 80);
        LODWORD(v279) = *(unsigned __int8 *)(v242 + 88);
        v245 = *(_QWORD *)(v242 + 96);
        v281 = *(unsigned __int8 *)(v242 + 104);
        swift_bridgeObjectRelease();
        sub_21C561218(v243, v244);
        swift_bridgeObjectRelease();

        sub_21C531AC8(v280, (char)v279);
        sub_21C531AC8(v245, v281);
        v246 = v226;
        v248 = v298;
        v247 = v299;
        *(_QWORD *)v242 = v301;
        *(_QWORD *)(v242 + 8) = v247;
        v249 = v292;
        *(_QWORD *)(v242 + 16) = v248;
        *(_QWORD *)(v242 + 24) = v249;
        *(_QWORD *)(v242 + 32) = v294;
        *(_QWORD *)(v242 + 40) = v197;
        LODWORD(v249) = (_DWORD)v290;
        *(_DWORD *)(v242 + 48) = (_DWORD)v289;
        *(_DWORD *)(v242 + 52) = v249;
        *(_QWORD *)(v242 + 56) = v198;
        *(_QWORD *)(v242 + 64) = v246;
        *(_QWORD *)(v242 + 72) = v199;
        v250 = v296;
        *(_QWORD *)(v242 + 80) = v296;
        v251 = (char)v295;
        *(_BYTE *)(v242 + 88) = (_BYTE)v295;
        *(_QWORD *)(v242 + 96) = v300;
        v252 = v297;
        *(_BYTE *)(v242 + 104) = v297;
        *(_QWORD *)(v242 + 112) = v291;
        v253 = v287;
      }
      else
      {
        *((_QWORD *)v305 + (v233 >> 6) + 8) |= 1 << v233;
        v253 = v287;
        *(_QWORD *)(v241[6] + 8 * v233) = v287;
        v254 = v241[7] + 120 * v233;
        v255 = v299;
        *(_QWORD *)v254 = v301;
        *(_QWORD *)(v254 + 8) = v255;
        v256 = v292;
        *(_QWORD *)(v254 + 16) = v298;
        *(_QWORD *)(v254 + 24) = v256;
        *(_QWORD *)(v254 + 32) = v294;
        *(_QWORD *)(v254 + 40) = v197;
        LODWORD(v255) = (_DWORD)v290;
        *(_DWORD *)(v254 + 48) = (_DWORD)v289;
        *(_DWORD *)(v254 + 52) = (_DWORD)v255;
        *(_QWORD *)(v254 + 56) = v198;
        *(_QWORD *)(v254 + 64) = v226;
        *(_QWORD *)(v254 + 72) = v199;
        v250 = v296;
        *(_QWORD *)(v254 + 80) = v296;
        v251 = (char)v295;
        *(_BYTE *)(v254 + 88) = (_BYTE)v295;
        *(_QWORD *)(v254 + 96) = v300;
        v252 = v297;
        *(_BYTE *)(v254 + 104) = v297;
        *(_QWORD *)(v254 + 112) = v291;
        v257 = v241[2];
        v220 = __OFADD__(v257, 1);
        v258 = v257 + 1;
        if (v220)
          goto LABEL_133;
        v241[2] = v258;
        v259 = v253;
        v248 = v298;
      }
      *(_QWORD *)(v229 + 16) = v241;

      swift_bridgeObjectRelease();
      ((void (*)(id *, _QWORD))v283)(v308, 0);

      v260 = v304[0];
      swift_bridgeObjectRelease();

      sub_21C561218(v299, v248);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v250, v251);
      sub_21C531AC8(v300, v252);
      if (!v288)
      {
        v261 = v285;
        swift_bridgeObjectRelease();
        return v261;
      }
      --v288;
      v188 = v282 + 128;
      v187 = v285;
      continue;
    }
    break;
  }
  sub_21C55AFC8(v213, v207, &qword_255288C28);
  v215 = sub_21C530FA8((uint64_t)v301);
  if ((v214 & 1) == (v216 & 1))
  {
    v210 = v215;
    v217 = v305;
    if ((v214 & 1) == 0)
      goto LABEL_106;
LABEL_110:
    v222 = v217[7];

    *(_QWORD *)(v222 + 8 * v210) = v203;
    goto LABEL_111;
  }
  sub_21C5E3DF0();
  __break(1u);
LABEL_137:
  sub_21C531A4C(0, (unint64_t *)&qword_255288C20);
  result = (_QWORD *)sub_21C5E3DF0();
  __break(1u);
  return result;
}

_QWORD *sub_21C544C70(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(__int128 *, _QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  unint64_t v27;
  char v28;
  id v29;
  char *v30;
  id v31;
  _QWORD *v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  int v38;
  void *v39;
  void *v40;
  int v41;
  void *v42;
  void *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t (*v49)();
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  char v64;
  _QWORD *v65;
  void *ObjCClassFromMetadata;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  _QWORD *v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  id v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  void *v82;
  _QWORD *v83;
  unint64_t v84;
  char v85;
  char v86;
  char v87;
  uint64_t v88;
  void *v89;
  void *v90;
  __int16 v91;
  char *v92;
  id v93;
  void (*v94)(id *, _QWORD);
  uint64_t v95;
  uint64_t v96;
  char v97;
  char *v98;
  _QWORD *v99;
  void *v100;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  void *v111;
  void *v112;
  uint64_t v113;
  __int16 v114;
  char *v115;
  id v116;
  char *v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  char *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  int v128;
  void *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  void (*v134)(id *, _QWORD);
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  unint64_t v139;
  char v140;
  uint64_t v141;
  void *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  char v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  _QWORD *result;
  char *v155;
  char *v156;
  uint64_t v157;
  void *v158;
  void *v159;
  char v160;
  __int16 v161;
  __int16 v162;
  uint64_t v163;
  void *v164;
  __int16 v165;
  char v166;
  char *v167;
  void *v168;
  uint64_t v169;
  void *v170;
  int v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  int v179;
  char *v180;
  id v181;
  char *v182;
  id v183;
  void (*v184)(id *, _QWORD);
  uint64_t v185;
  uint64_t v186;
  char v187;
  _QWORD *v188;
  char v189;
  unint64_t v190;
  uint64_t v191;
  _BOOL8 v192;
  uint64_t v193;
  char v194;
  unint64_t v195;
  char v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  BOOL v201;
  uint64_t v202;
  char *v203;
  id v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char v208;
  _QWORD *v209;
  char v210;
  unint64_t v211;
  uint64_t v212;
  _BOOL8 v213;
  uint64_t v214;
  char v215;
  uint64_t v216;
  unint64_t v217;
  char v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  id v223;
  _QWORD *v224;
  uint64_t v225;
  int v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  id v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  _QWORD *v235;
  int64_t v236;
  _QWORD *v237;
  id v238;
  id v239;
  _QWORD *v240;
  id v241;
  _QWORD *v242;
  char *v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  void *v248;
  uint64_t v249;
  void *v250;
  void *v251;
  id v252;
  char *v253;
  __int16 v254;
  id aBlock;
  uint64_t v256;
  _QWORD *v257;
  _QWORD *v258;
  uint64_t (*v259)();
  uint64_t v260;
  _QWORD *v261;
  __int128 v262[5];
  __int128 v263;
  uint64_t v264;
  __int16 v265;
  uint64_t v266;
  uint64_t v267;
  void *v268;
  __int16 v269;

  v228 = a3;
  v231 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288BC8);
  MEMORY[0x24BDAC7A8](v9);
  v227 = (char *)&v225 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock = v5;
  v243 = v5;
  v11 = (void (*)(__int128 *, _QWORD))swift_readAtKeyPath();
  v240 = *(_QWORD **)(v12 + 16);
  swift_bridgeObjectRetain();
  v11(v262, 0);

  v13 = *((_QWORD *)a2 + 2);
  v244 = a5;
  if (v13)
  {
    v229 = a4;
    v246 = (char *)v262 + 8;
    swift_bridgeObjectRetain();
    v14 = 0;
    v234 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v242 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v235 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v245 = a2;
    while (1)
    {
      v15 = *(_OWORD *)&a2[v14 + 80];
      v262[2] = *(_OWORD *)&a2[v14 + 64];
      v262[3] = v15;
      v16 = *(_OWORD *)&a2[v14 + 112];
      v262[4] = *(_OWORD *)&a2[v14 + 96];
      v263 = v16;
      v17 = *(_OWORD *)&a2[v14 + 48];
      v262[0] = *(_OWORD *)&a2[v14 + 32];
      v262[1] = v17;
      v18 = *(_QWORD *)&a2[v14 + 40];
      v252 = *(id *)&a2[v14 + 32];
      v19 = *(unsigned __int16 *)&a2[v14 + 48];
      v251 = *(void **)&a2[v14 + 56];
      v20 = *(_QWORD *)&a2[v14 + 64];
      v21 = *(_QWORD *)&a2[v14 + 72];
      v22 = *(_QWORD *)&a2[v14 + 80];
      v250 = *(void **)&a2[v14 + 88];
      v23 = *(_QWORD *)&a2[v14 + 96];
      v249 = *(_QWORD *)&a2[v14 + 104];
      LODWORD(v248) = a2[v14 + 112];
      v247 = *(_QWORD *)&a2[v14 + 120];
      v265 = *((_WORD *)v246 + 4);
      v264 = *(_QWORD *)v246;
      v24 = *(_QWORD *)&v262[0];
      v253 = v243;
      v25 = v243;
      sub_21C561498((uint64_t)v262);
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      v26 = v258;
      if (!v258[2] || (v27 = sub_21C530FA8(v24), (v28 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      v29 = *(id *)(v26[7] + 8 * v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v253 = v25;
      v30 = v25;
      v31 = v29;
      swift_getAtKeyPath();

      v32 = v257;
      if (!v257[2] || (v33 = sub_21C53105C((uint64_t)v31), (v34 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        a2 = v245;
        goto LABEL_20;
      }
      v233 = v18;
      v230 = v30;
      LODWORD(v236) = v19;
      v35 = v32[7] + 96 * v33;
      v36 = *(_QWORD **)v35;
      v37 = *(void **)(v35 + 8);
      v38 = *(unsigned __int16 *)(v35 + 16);
      v241 = *(id *)(v35 + 24);
      v39 = *(void **)(v35 + 56);
      v40 = *(void **)(v35 + 72);
      v41 = *(unsigned __int8 *)(v35 + 80);
      v232 = *(_QWORD *)(v35 + 88);
      v237 = v36;
      swift_bridgeObjectRetain();
      sub_21C561470(v37, v38);
      v238 = v241;
      v239 = v39;
      swift_bridgeObjectRetain();
      v241 = v40;
      sub_21C52EF74((uint64_t)v40, v41);
      v42 = v31;

      swift_bridgeObjectRelease();
      v43 = v37;
      swift_bridgeObjectRelease();
      sub_21C561514(&v264, (uint64_t)&v266);
      sub_21C561514(&v266, (uint64_t)&aBlock);
      v253 = (char *)v37;
      v254 = v38;
      if (!sub_21C5D6EFC((uint64_t)&aBlock, (uint64_t)&v253))
      {
        swift_bridgeObjectRelease();
        sub_21C56148C(v37, v38);
        swift_bridgeObjectRelease();

        v62 = (uint64_t)v241;
        v63 = v41;
        goto LABEL_19;
      }
      v44 = v41;
      if (*((_QWORD *)&v263 + 1) != v232)
        break;
      v248 = v43;
      LODWORD(v249) = v38;
      v45 = sub_21C5E328C();
      v46 = *(_QWORD *)(v45 - 8);
      v47 = (uint64_t)v227;
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v227, v228, v45);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v45);
      v48 = v231;
      v250 = v42;
      v49 = sub_21C55FBD4(v48, v42, v229, v47, v262);
      v51 = v50;
      v53 = v52;
      v251 = v54;
      sub_21C524980(v47, &qword_255288BC8);

      v252 = v53;
      a2 = v245;
      if (v49)
      {
        v55 = swift_allocObject();
        *(_QWORD *)(v55 + 16) = v49;
        *(_QWORD *)(v55 + 24) = v51;
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v57 = (uint64_t)v241;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v234 = sub_21C5B8580(0, v234[2] + 1, 1, v234);
        v59 = v234[2];
        v58 = v234[3];
        if (v59 >= v58 >> 1)
          v234 = sub_21C5B8580((_QWORD *)(v58 > 1), v59 + 1, 1, v234);
        v60 = v234;
        v234[2] = v59 + 1;
        v61 = &v60[2 * v59];
        v61[4] = sub_21C562160;
        v61[5] = v55;
        v53 = v252;
      }
      else
      {
        v57 = (uint64_t)v241;
      }
      v226 = v44;
      v247 = v51;
      if (v53)
      {
        v76 = swift_allocObject();
        *(_QWORD *)(v76 + 16) = v53;
        *(_QWORD *)(v76 + 24) = v251;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v235 = sub_21C5B8580(0, v235[2] + 1, 1, v235);
        v78 = v235[2];
        v77 = v235[3];
        if (v78 >= v77 >> 1)
          v235 = sub_21C5B8580((_QWORD *)(v77 > 1), v78 + 1, 1, v235);
        v79 = v57;
        v80 = v235;
        v235[2] = v78 + 1;
        v81 = &v80[2 * v78];
        v81[4] = sub_21C562160;
        v81[5] = v76;
      }
      else
      {
        v79 = v57;
      }
      v82 = v250;
      v83 = v240;
      swift_bridgeObjectRetain();
      v84 = sub_21C53105C((uint64_t)v82);
      v86 = v85;
      swift_bridgeObjectRelease();
      if ((v86 & 1) != 0)
      {
        v87 = swift_isUniquelyReferenced_nonNull_native();
        aBlock = v83;
        if ((v87 & 1) == 0)
        {
          sub_21C55C884();
          v83 = aBlock;
        }

        v88 = v83[7] + 96 * v84;
        v89 = *(void **)(v88 + 8);
        v90 = *(void **)(v88 + 24);
        v233 = *(_QWORD *)(v88 + 56);
        v250 = *(void **)(v88 + 72);
        LODWORD(v236) = *(unsigned __int8 *)(v88 + 80);
        v91 = *(_WORD *)(v88 + 16);
        v240 = v83;
        sub_21C55B6F4(v84, (uint64_t)v83);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21C56148C(v89, v91);
        swift_bridgeObjectRelease();

        sub_21C531AC8((uint64_t)v250, v236);
        a2 = v245;
        v79 = (uint64_t)v241;
      }
      v253 = v230;
      v92 = v230;
      sub_21C561498((uint64_t)v262);
      v93 = v82;
      v94 = (void (*)(id *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
      v96 = v95;
      v97 = swift_isUniquelyReferenced_nonNull_native();
      v261 = *(_QWORD **)(v96 + 16);
      *(_QWORD *)(v96 + 16) = 0x8000000000000000;
      sub_21C55D2EC(v262, v93, v97);
      *(_QWORD *)(v96 + 16) = v261;

      swift_bridgeObjectRelease();
      v94(&aBlock, 0);
      sub_21C531A9C((uint64_t)v252);
      sub_21C531A9C((uint64_t)v49);

      v98 = v253;
      swift_bridgeObjectRelease();

      sub_21C56148C(v248, v249);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v79, v226);
LABEL_33:
      sub_21C56157C((uint64_t)v262);
      v14 += 96;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        a4 = v229;
        goto LABEL_50;
      }
    }
    swift_bridgeObjectRelease();
    sub_21C56148C(v43, v38);
    swift_bridgeObjectRelease();

    v62 = (uint64_t)v241;
    v63 = v41;
LABEL_19:
    sub_21C531AC8(v62, v63);

    LOWORD(v19) = v236;
    a2 = v245;
    v18 = v233;
LABEL_20:
    sub_21C561514(&v264, (uint64_t)&v267);
    sub_21C561514(&v267, (uint64_t)&v268);
    v64 = v269;
    if (v269 < 0)
    {
      v269 &= ~0x8000u;
      v70 = v268;
      sub_21C561550((uint64_t)&v264);
LABEL_28:
      sub_21C561498((uint64_t)v262);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v71 = v242;
      else
        v71 = sub_21C5B8F68(0, v242[2] + 1, 1, v242);
      v73 = v71[2];
      v72 = v71[3];
      if (v73 >= v72 >> 1)
        v71 = sub_21C5B8F68((_QWORD *)(v72 > 1), v73 + 1, 1, v71);
      v71[2] = v73 + 1;
      v242 = v71;
      v74 = &v71[13 * v73];
      v75 = v252;
      v74[4] = v70;
      v74[5] = v75;
      v74[6] = v18;
      *((_WORD *)v74 + 28) = v19;
      v74[8] = v251;
      v74[9] = v20;
      v74[10] = v21;
      v74[11] = v22;
      v74[12] = v250;
      v74[13] = v23;
      v74[14] = v249;
      *((_BYTE *)v74 + 120) = (_BYTE)v248;
      v74[16] = v247;
      goto LABEL_33;
    }
    v65 = v268;
    if ((v269 & 0x100) != 0)
    {
      sub_21C531A4C(0, &qword_255288C48);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      v67 = v65[2];
      v68 = (uint64_t)(v65 + 4);
      if ((v64 & 1) == 0)
      {
LABEL_23:
        v69 = objc_msgSend(ObjCClassFromMetadata, sel_polylineWithPoints_count_, v68, v67);
LABEL_27:
        v70 = v69;
        goto LABEL_28;
      }
    }
    else
    {
      ObjCClassFromMetadata = (void *)objc_opt_self();
      v67 = v65[2];
      v68 = (uint64_t)(v65 + 4);
      if ((v64 & 1) == 0)
        goto LABEL_23;
    }
    v69 = objc_msgSend(ObjCClassFromMetadata, sel_polylineWithCoordinates_count_, v68, v67);
    goto LABEL_27;
  }
  v234 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v242 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v235 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_50:
  v99 = v240;
  if (a4)
  {
    v100 = (void *)objc_opt_self();
    v101 = swift_allocObject();
    *(_QWORD *)(v101 + 16) = v234;
    v259 = sub_21C5620F8;
    v260 = v101;
    v102 = (void *)MEMORY[0x24BDAC760];
    aBlock = (id)MEMORY[0x24BDAC760];
    v256 = 1107296256;
    v257 = sub_21C558F28;
    v258 = &block_descriptor_109;
    v103 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    v104 = swift_allocObject();
    *(_QWORD *)(v104 + 16) = v235;
    v259 = sub_21C561FAC;
    v260 = v104;
    aBlock = v102;
    v256 = 1107296256;
    v257 = sub_21C558F54;
    v258 = &block_descriptor_116;
    v105 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v100, sel_animateWithDuration_animations_completion_, v103, v105, 0.25);
    _Block_release(v105);
    _Block_release(v103);
  }
  v106 = v99[8];
  v237 = v99 + 8;
  v107 = -1;
  v108 = -1 << *((_BYTE *)v99 + 32);
  v233 = ~v108;
  if (-v108 < 64)
    v107 = ~(-1 << -(char)v108);
  v109 = v107 & v106;
  v236 = (unint64_t)(63 - v108) >> 6;
  swift_bridgeObjectRetain();
  v241 = 0;
  v240 = v99;
  while (1)
  {
    if (v109)
    {
      v118 = __clz(__rbit64(v109));
      v109 &= v109 - 1;
      v119 = v118 | ((_QWORD)v241 << 6);
      goto LABEL_73;
    }
    v120 = (uint64_t)v241 + 1;
    if (__OFADD__(v241, 1))
    {
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
      goto LABEL_114;
    }
    if (v120 >= v236)
      goto LABEL_81;
    v121 = v237[v120];
    v122 = (uint64_t)v241 + 1;
    if (!v121)
    {
      v122 = (uint64_t)v241 + 2;
      if ((uint64_t)v241 + 2 >= v236)
        goto LABEL_81;
      v121 = v237[v122];
      if (!v121)
      {
        v122 = (uint64_t)v241 + 3;
        if ((uint64_t)v241 + 3 >= v236)
          goto LABEL_81;
        v121 = v237[v122];
        if (!v121)
          break;
      }
    }
LABEL_72:
    v109 = (v121 - 1) & v121;
    v119 = __clz(__rbit64(v121)) + (v122 << 6);
    v241 = (id)v122;
LABEL_73:
    v124 = *(void **)(v99[6] + 8 * v119);
    v125 = v99[7] + 96 * v119;
    v126 = *(_QWORD *)v125;
    v127 = *(void **)(v125 + 8);
    v128 = *(unsigned __int16 *)(v125 + 16);
    v129 = *(void **)(v125 + 24);
    v130 = v99;
    v131 = *(_QWORD *)(v125 + 56);
    v132 = *(_QWORD *)(v125 + 72);
    v133 = *(unsigned __int8 *)(v125 + 80);
    v253 = v243;
    v245 = v243;
    swift_bridgeObjectRetain();
    v248 = v127;
    LODWORD(v247) = v128;
    sub_21C561470(v127, v128);
    v115 = v129;
    v249 = v131;
    swift_bridgeObjectRetain();
    v251 = (void *)v132;
    LODWORD(v250) = v133;
    sub_21C52EF74(v132, v133);
    v252 = v124;
    swift_bridgeObjectRetain();
    v134 = (void (*)(id *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v136 = v135;
    swift_bridgeObjectRetain();
    v137 = sub_21C530FA8(v126);
    LOBYTE(v132) = v138;
    swift_bridgeObjectRelease();
    v246 = v115;
    if ((v132 & 1) != 0)
    {
      v139 = v109;
      v140 = swift_isUniquelyReferenced_nonNull_native();
      v141 = *(_QWORD *)(v136 + 24);
      v261 = (_QWORD *)v141;
      *(_QWORD *)(v136 + 24) = 0x8000000000000000;
      if ((v140 & 1) == 0)
      {
        sub_21C55CD08(&qword_255288C50);
        v141 = (uint64_t)v261;
      }
      swift_bridgeObjectRelease();
      v142 = *(void **)(*(_QWORD *)(v141 + 56) + 8 * v137);
      sub_21C55BA94(v137, v141);
      *(_QWORD *)(v136 + 24) = v141;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v109 = v139;
      v99 = v240;
      v115 = v246;
    }
    else
    {
      swift_bridgeObjectRelease();
      v99 = v130;
    }
    v116 = v252;
    v134(&aBlock, 0);

    v253 = v245;
    v143 = v245;
    v245 = (char *)swift_modifyAtReferenceWritableKeyPath();
    v145 = v144;
    swift_bridgeObjectRetain();
    v146 = sub_21C53105C((uint64_t)v116);
    v148 = v147;
    swift_bridgeObjectRelease();
    if ((v148 & 1) != 0)
    {
      v239 = (id)v109;
      v149 = swift_isUniquelyReferenced_nonNull_native();
      v150 = *(_QWORD *)(v145 + 16);
      v261 = (_QWORD *)v150;
      *(_QWORD *)(v145 + 16) = 0x8000000000000000;
      if (!v149)
      {
        sub_21C55C884();
        v150 = (uint64_t)v261;
      }

      v110 = *(_QWORD *)(v150 + 56) + 96 * v146;
      v111 = *(void **)(v110 + 8);
      v112 = *(void **)(v110 + 24);
      v113 = *(_QWORD *)(v110 + 72);
      LODWORD(v238) = *(unsigned __int8 *)(v110 + 80);
      v114 = *(_WORD *)(v110 + 16);
      sub_21C55B6F4(v146, v150);
      *(_QWORD *)(v145 + 16) = v150;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21C56148C(v111, v114);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v113, (char)v238);
      v99 = v240;
      v109 = (unint64_t)v239;
      v115 = v246;
      v116 = v252;
    }
    ((void (*)(id *, _QWORD))v245)(&aBlock, 0);
    v117 = v253;
    swift_bridgeObjectRelease();

    sub_21C56148C(v248, v247);
    swift_bridgeObjectRelease();

    sub_21C531AC8((uint64_t)v251, (char)v250);
  }
  v123 = (char *)v241 + 4;
  if ((uint64_t)v241 + 4 < v236)
  {
    v121 = v237[(_QWORD)v123];
    if (!v121)
    {
      while (1)
      {
        v122 = (uint64_t)(v123 + 1);
        if (__OFADD__(v123, 1))
          goto LABEL_113;
        if (v122 >= v236)
          goto LABEL_81;
        v121 = v237[v122];
        ++v123;
        if (v121)
          goto LABEL_72;
      }
    }
    v122 = (uint64_t)v241 + 4;
    goto LABEL_72;
  }
LABEL_81:
  sub_21C52A884();
  v151 = swift_bridgeObjectRetain();
  v152 = sub_21C559098(v151);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v152 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_21C5E3DD8();
    sub_21C531A4C(0, (unint64_t *)&qword_255289570);
    v153 = v152;
    goto LABEL_83;
  }
LABEL_114:
  sub_21C531A4C(0, (unint64_t *)&qword_255289570);
  swift_bridgeObjectRetain();
  v153 = sub_21C5E3D54();
  swift_bridgeObjectRelease();
LABEL_83:
  swift_bridgeObjectRelease();
  sub_21C5589DC(v153);
  swift_bridgeObjectRelease();
  result = v242;
  v155 = (char *)v242[2];
  if (!v155)
    return result;
  swift_bridgeObjectRetain();
  v156 = 0;
  while (2)
  {
    v245 = v155;
    v241 = v156;
    v168 = *(void **)&v156[(_QWORD)v242 + 32];
    v169 = *(_QWORD *)&v156[(_QWORD)v242 + 40];
    v170 = *(void **)&v156[(_QWORD)v242 + 48];
    v171 = *(unsigned __int16 *)&v156[(_QWORD)v242 + 56];
    v172 = *(char **)&v156[(_QWORD)v242 + 64];
    v174 = *(_QWORD *)&v156[(_QWORD)v242 + 72];
    v173 = *(_QWORD *)&v156[(_QWORD)v242 + 80];
    v175 = *(_QWORD *)&v156[(_QWORD)v242 + 88];
    v176 = *(_QWORD *)&v156[(_QWORD)v242 + 96];
    v177 = *(_QWORD *)&v156[(_QWORD)v242 + 104];
    v178 = *(void **)&v156[(_QWORD)v242 + 112];
    v179 = v156[(_QWORD)v242 + 120];
    v247 = *(_QWORD *)&v156[(_QWORD)v242 + 128];
    v253 = v243;
    v180 = v243;
    v181 = v168;
    swift_bridgeObjectRetain();
    v251 = v170;
    LODWORD(v250) = v171;
    sub_21C561470(v170, v171);
    v246 = v172;
    v182 = v172;
    v249 = v176;
    swift_bridgeObjectRetain();
    v248 = v178;
    LODWORD(v252) = v179;
    sub_21C52EF74((uint64_t)v178, v179);
    swift_bridgeObjectRetain();
    v183 = v181;
    v184 = (void (*)(id *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v186 = v185;
    v187 = swift_isUniquelyReferenced_nonNull_native();
    v261 = *(_QWORD **)(v186 + 24);
    v188 = v261;
    *(_QWORD *)(v186 + 24) = 0x8000000000000000;
    v190 = sub_21C530FA8(v169);
    v191 = v188[2];
    v192 = (v189 & 1) == 0;
    v193 = v191 + v192;
    if (__OFADD__(v191, v192))
    {
      __break(1u);
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
    v194 = v189;
    if (v188[3] >= v193)
    {
      if ((v187 & 1) == 0)
        sub_21C55CD08(&qword_255288C50);
      goto LABEL_93;
    }
    sub_21C55AFC8(v193, v187, &qword_255288C50);
    v195 = sub_21C530FA8(v169);
    if ((v194 & 1) == (v196 & 1))
    {
      v190 = v195;
LABEL_93:
      v197 = v261;
      if ((v194 & 1) != 0)
      {
        v198 = v261[7];

        *(_QWORD *)(v198 + 8 * v190) = v183;
      }
      else
      {
        v261[(v190 >> 6) + 8] |= 1 << v190;
        v199 = 8 * v190;
        *(_QWORD *)(v197[6] + v199) = v169;
        *(_QWORD *)(v197[7] + v199) = v183;
        v200 = v197[2];
        v201 = __OFADD__(v200, 1);
        v202 = v200 + 1;
        if (v201)
          goto LABEL_111;
        v197[2] = v202;
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(v186 + 24) = v197;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v184(&aBlock, 0);

      v253 = v180;
      v203 = v180;
      v204 = v183;
      swift_bridgeObjectRetain();
      sub_21C561470(v251, (__int16)v250);
      v205 = v182;
      swift_bridgeObjectRetain();
      v163 = (uint64_t)v248;
      v166 = (char)v252;
      sub_21C52EF74((uint64_t)v248, (char)v252);
      v240 = (_QWORD *)swift_modifyAtReferenceWritableKeyPath();
      v207 = v206;
      v208 = swift_isUniquelyReferenced_nonNull_native();
      v261 = *(_QWORD **)(v207 + 16);
      v209 = v261;
      *(_QWORD *)(v207 + 16) = 0x8000000000000000;
      v211 = sub_21C53105C((uint64_t)v204);
      v212 = v209[2];
      v213 = (v210 & 1) == 0;
      v214 = v212 + v213;
      if (__OFADD__(v212, v213))
        goto LABEL_109;
      v215 = v210;
      v216 = v209[3];
      v239 = v205;
      if (v216 >= v214)
      {
        if ((v208 & 1) == 0)
          sub_21C55C884();
      }
      else
      {
        sub_21C55A8F0(v214, v208);
        v217 = sub_21C53105C((uint64_t)v204);
        if ((v215 & 1) != (v218 & 1))
          goto LABEL_116;
        v211 = v217;
      }
      v219 = v261;
      if ((v215 & 1) != 0)
      {
        v157 = v261[7] + 96 * v211;
        v158 = *(void **)(v157 + 8);
        v159 = *(void **)(v157 + 24);
        v238 = *(id *)(v157 + 72);
        v160 = *(_BYTE *)(v157 + 80);
        v161 = *(_WORD *)(v157 + 16);
        swift_bridgeObjectRelease();
        v162 = v161;
        v163 = (uint64_t)v248;
        sub_21C56148C(v158, v162);
        swift_bridgeObjectRelease();

        sub_21C531AC8((uint64_t)v238, v160);
        v164 = v251;
        *(_QWORD *)v157 = v169;
        *(_QWORD *)(v157 + 8) = v164;
        v165 = (__int16)v250;
        *(_WORD *)(v157 + 16) = (_WORD)v250;
        *(_QWORD *)(v157 + 24) = v246;
        *(_QWORD *)(v157 + 32) = v174;
        *(_QWORD *)(v157 + 40) = v173;
        *(_QWORD *)(v157 + 48) = v175;
        *(_QWORD *)(v157 + 56) = v249;
        *(_QWORD *)(v157 + 64) = v177;
        *(_QWORD *)(v157 + 72) = v163;
        *(_BYTE *)(v157 + 80) = (_BYTE)v252;
        *(_QWORD *)(v157 + 88) = v247;
        v166 = (char)v252;
      }
      else
      {
        v261[(v211 >> 6) + 8] |= 1 << v211;
        *(_QWORD *)(v219[6] + 8 * v211) = v204;
        v220 = v219[7] + 96 * v211;
        v164 = v251;
        *(_QWORD *)v220 = v169;
        *(_QWORD *)(v220 + 8) = v164;
        v165 = (__int16)v250;
        *(_WORD *)(v220 + 16) = (_WORD)v250;
        *(_QWORD *)(v220 + 24) = v246;
        *(_QWORD *)(v220 + 32) = v174;
        *(_QWORD *)(v220 + 40) = v173;
        *(_QWORD *)(v220 + 48) = v175;
        *(_QWORD *)(v220 + 56) = v249;
        *(_QWORD *)(v220 + 64) = v177;
        *(_QWORD *)(v220 + 72) = v163;
        *(_BYTE *)(v220 + 80) = v166;
        *(_QWORD *)(v220 + 88) = v247;
        v221 = v219[2];
        v201 = __OFADD__(v221, 1);
        v222 = v221 + 1;
        if (v201)
          goto LABEL_112;
        v219[2] = v222;
        v223 = v204;
      }
      *(_QWORD *)(v207 + 16) = v219;

      swift_bridgeObjectRelease();
      ((void (*)(id *, _QWORD))v240)(&aBlock, 0);

      v167 = v253;
      swift_bridgeObjectRelease();

      sub_21C56148C(v164, v165);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v163, v166);
      v156 = (char *)v241 + 104;
      v155 = v245 - 1;
      if (v245 == (char *)1)
      {
        v224 = v242;
        swift_bridgeObjectRelease();
        return v224;
      }
      continue;
    }
    break;
  }
  sub_21C5E3DF0();
  __break(1u);
LABEL_116:
  sub_21C531A4C(0, &qword_255288C40);
  result = (_QWORD *)sub_21C5E3DF0();
  __break(1u);
  return result;
}

uint64_t sub_21C5464F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *, _QWORD);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  char **v49;
  _QWORD *v50;
  uint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  id v56;
  _QWORD *v57;
  unint64_t v58;
  char v59;
  id v60;
  id v61;
  id v62;
  _QWORD *v63;
  uint64_t v64;
  void *v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t (*v85)();
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int64_t v90;
  uint64_t v91;
  char isUniquelyReferenced_nonNull_native;
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  char v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  int64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  int64_t v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  void (*v149)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v150;
  char *v151;
  uint64_t v152;
  void **v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  id v159;
  void (*v160)(uint64_t *, _QWORD);
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  char v165;
  char v166;
  uint64_t v167;
  void *v168;
  id v169;
  void (*v170)(uint64_t *, _QWORD);
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  char v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t result;
  uint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void **v190;
  void *v191;
  uint64_t v192;
  uint64_t v193;
  id v194;
  id v195;
  void (*v196)(uint64_t *, _QWORD);
  uint64_t v197;
  uint64_t v198;
  char v199;
  _QWORD *v200;
  char v201;
  unint64_t v202;
  uint64_t v203;
  _BOOL8 v204;
  uint64_t v205;
  char v206;
  unint64_t v207;
  char v208;
  _QWORD *v209;
  uint64_t v210;
  uint64_t v211;
  BOOL v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void (*v218)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v219;
  id v220;
  id v221;
  void (*v222)(uint64_t *, _QWORD);
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  char v226;
  char v227;
  int v228;
  uint64_t v229;
  int v230;
  _QWORD *v231;
  char v232;
  unint64_t v233;
  uint64_t v234;
  _BOOL8 v235;
  uint64_t v236;
  char v237;
  unint64_t v238;
  char v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  id v243;
  unint64_t v244;
  _QWORD v245[2];
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  id v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t (*v256)();
  _QWORD *v257;
  uint64_t v258;
  uint64_t v259;
  int64_t v260;
  _QWORD *v261;
  _QWORD *v262;
  uint64_t v263;
  id v264;
  uint64_t v265;
  int64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  void **v271;
  uint64_t v272;
  void **v273;
  char *v274;
  uint64_t v275;
  unint64_t v276;
  uint64_t v277;
  void (*v278)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v279;
  uint64_t *v280;
  uint64_t *v281;
  id v282;
  uint64_t v283;
  uint64_t aBlock;
  uint64_t v285;
  _QWORD *v286;
  _QWORD *v287;
  uint64_t (*v288)();
  uint64_t v289;
  _QWORD *v290;
  id v291;

  v253 = a4;
  v251 = a3;
  v252 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288BC8);
  MEMORY[0x24BDAC7A8](v8);
  v250 = (char *)v245 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v267 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C68);
  v268 = *(_QWORD *)(v267 - 8);
  v10 = MEMORY[0x24BDAC7A8](v267);
  v12 = (char *)v245 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v271 = (void **)((char *)v245 - v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C70);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v245 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v249 = (uint64_t)v245 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v248 = (uint64_t)v245 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v259 = (uint64_t)v245 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v265 = (uint64_t)v245 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v270 = (uint64_t)v245 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v272 = (uint64_t)v245 - v28;
  v279 = type metadata accessor for UserAnnotationViewModel(0);
  v29 = *(_QWORD *)(v279 - 8);
  v30 = MEMORY[0x24BDAC7A8](v279);
  v247 = (uint64_t)v245 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v258 = (uint64_t)v245 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v281 = (_QWORD *)((char *)v245 - v35);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v269 = (uint64_t)v245 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v280 = (_QWORD *)((char *)v245 - v38);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C78);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v274 = (char *)v245 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v273 = (void **)((char *)v245 - v42);
  v291 = v5;
  v282 = v5;
  v43 = (void (*)(uint64_t *, _QWORD))swift_readAtKeyPath();
  v275 = *(_QWORD *)(v44 + 16);
  swift_bridgeObjectRetain();
  v43(&aBlock, 0);

  v45 = *(_QWORD *)(a2 + 16);
  v277 = a5;
  v283 = v29;
  if (!v45)
  {
    v261 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v276 = MEMORY[0x24BEE4AF8];
    v262 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_50;
  }
  v246 = v17;
  v46 = a2;
  v47 = a2 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  v48 = *(_QWORD *)(v29 + 72);
  v245[1] = v46;
  swift_bridgeObjectRetain();
  v49 = &off_24E05E000;
  v261 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v276 = MEMORY[0x24BEE4AF8];
  v262 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v257 = v12;
  v50 = v12;
  v266 = v48;
  do
  {
    v53 = v50;
    v54 = v281;
    sub_21C529664(v47, (uint64_t)v281, type metadata accessor for UserAnnotationViewModel);
    v55 = *v54;
    v291 = v282;
    v56 = v282;
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();

    v57 = v287;
    if (!v287[2] || (v58 = sub_21C530FA8(v55), (v59 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50 = v53;
LABEL_12:
      v73 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MapBridgingUserAnnotation()), v49[283]);
      v74 = (uint64_t)v50 + *(int *)(v267 + 48);
      *v50 = v73;
      sub_21C529664((uint64_t)v281, v74, type metadata accessor for UserAnnotationViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v75 = v276;
      else
        v75 = sub_21C5B9090(0, *(_QWORD *)(v276 + 16) + 1, 1, v276);
      v77 = *(_QWORD *)(v75 + 16);
      v76 = *(_QWORD *)(v75 + 24);
      if (v77 >= v76 >> 1)
        v75 = sub_21C5B9090(v76 > 1, v77 + 1, 1, v75);
      *(_QWORD *)(v75 + 16) = v77 + 1;
      v78 = (*(unsigned __int8 *)(v268 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v268 + 80);
      v276 = v75;
      sub_21C52DB08((uint64_t)v50, v75 + v78 + *(_QWORD *)(v268 + 72) * v77, &qword_255288C68);
      sub_21C52A88C((uint64_t)v281, type metadata accessor for UserAnnotationViewModel);
      goto LABEL_5;
    }
    v60 = *(id *)(v57[7] + 8 * v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v291 = v56;
    v61 = v56;
    v62 = v60;
    swift_getAtKeyPath();

    v63 = v286;
    v64 = v286[2];
    v263 = (uint64_t)v61;
    if (v64)
    {
      v65 = v62;
      v66 = sub_21C5310A8((uint64_t)v62);
      if ((v67 & 1) != 0)
      {
        v68 = v259;
        sub_21C529664(v63[7] + v66 * v266, v259, type metadata accessor for UserAnnotationViewModel);
        v69 = v283;
        v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v283 + 56);
        v71 = v68;
        v72 = 0;
      }
      else
      {
        v69 = v283;
        v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v283 + 56);
        v68 = v259;
        v71 = v259;
        v72 = 1;
      }
      v79 = v279;
      v278 = v70;
      v70(v71, v72, 1, v279);
    }
    else
    {
      v65 = v62;
      v69 = v283;
      v68 = v259;
      v79 = v279;
      v278 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v283 + 56);
      v278(v259, 1, 1, v279);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v80 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
    if (v80(v68, 1, v79) == 1)
    {

      sub_21C524980(v68, &qword_255288C70);
      v50 = v257;
      v48 = v266;
      v49 = &off_24E05E000;
      goto LABEL_12;
    }
    sub_21C52AAD4(v68, v258, type metadata accessor for UserAnnotationViewModel);
    v81 = sub_21C5E328C();
    v82 = *(_QWORD *)(v81 - 8);
    v83 = (uint64_t)v250;
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v250, v251, v81);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56))(v83, 0, 1, v81);
    v84 = v252;
    v264 = v65;
    v85 = sub_21C560034(v84, v65, v253, v83, (uint64_t)v281);
    v87 = v86;
    v89 = v88;
    v260 = v90;
    sub_21C524980(v83, &qword_255288BC8);

    v256 = v85;
    v255 = v87;
    if (v85)
    {
      v91 = swift_allocObject();
      *(_QWORD *)(v91 + 16) = v85;
      *(_QWORD *)(v91 + 24) = v87;
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v93 = v278;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v261 = sub_21C5B8580(0, v261[2] + 1, 1, v261);
      v95 = v261[2];
      v94 = v261[3];
      if (v95 >= v94 >> 1)
        v261 = sub_21C5B8580((_QWORD *)(v94 > 1), v95 + 1, 1, v261);
      v96 = v261;
      v261[2] = v95 + 1;
      v97 = &v96[2 * v95];
      v97[4] = sub_21C562160;
      v97[5] = v91;
      if (!v89)
        goto LABEL_35;
LABEL_30:
      v98 = swift_allocObject();
      *(_QWORD *)(v98 + 16) = v89;
      *(_QWORD *)(v98 + 24) = v260;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v262 = sub_21C5B8580(0, v262[2] + 1, 1, v262);
      v100 = v262[2];
      v99 = v262[3];
      if (v100 >= v99 >> 1)
        v262 = sub_21C5B8580((_QWORD *)(v99 > 1), v100 + 1, 1, v262);
      v101 = v262;
      v262[2] = v100 + 1;
      v102 = &v101[2 * v100];
      v102[4] = sub_21C562160;
      v102[5] = v98;
      goto LABEL_35;
    }
    v93 = v278;
    if (v89)
      goto LABEL_30;
LABEL_35:
    v103 = v275;
    swift_bridgeObjectRetain();
    v104 = sub_21C5310A8((uint64_t)v264);
    v106 = v105;
    swift_bridgeObjectRelease();
    v254 = v89;
    if ((v106 & 1) != 0)
    {
      v107 = swift_isUniquelyReferenced_nonNull_native();
      aBlock = v103;
      if (!v107)
      {
        sub_21C55CAE0(type metadata accessor for UserAnnotationViewModel, &qword_255288C90);
        v103 = aBlock;
      }

      v108 = v248;
      sub_21C52AAD4(*(_QWORD *)(v103 + 56) + v104 * v266, v248, type metadata accessor for UserAnnotationViewModel);
      v275 = v103;
      sub_21C55B8B0(v104, v103, type metadata accessor for UserAnnotationViewModel);
      swift_bridgeObjectRelease();
      v109 = 0;
    }
    else
    {
      v109 = 1;
      v108 = v248;
    }
    v110 = v108;
    v111 = v108;
    v112 = v279;
    v93(v110, v109, 1, v279);
    sub_21C524980(v111, &qword_255288C70);
    v113 = v249;
    sub_21C529664((uint64_t)v281, v249, type metadata accessor for UserAnnotationViewModel);
    v278 = v93;
    v93(v113, 0, 1, v112);
    v291 = (id)v263;
    v114 = (id)v263;
    v115 = v264;
    v264 = (id)swift_modifyAtReferenceWritableKeyPath();
    v117 = v116;
    if (v80(v113, 1, v112) == 1)
    {
      sub_21C524980(v113, &qword_255288C70);
      swift_bridgeObjectRetain();
      v263 = (uint64_t)v115;
      v118 = sub_21C5310A8((uint64_t)v115);
      v120 = v119;
      swift_bridgeObjectRelease();
      if ((v120 & 1) != 0)
      {
        v121 = swift_isUniquelyReferenced_nonNull_native();
        v122 = *(_QWORD *)(v117 + 16);
        v290 = (_QWORD *)v122;
        *(_QWORD *)(v117 + 16) = 0x8000000000000000;
        v123 = v278;
        if ((v121 & 1) == 0)
        {
          sub_21C55CAE0(type metadata accessor for UserAnnotationViewModel, &qword_255288C90);
          v122 = (uint64_t)v290;
        }

        v124 = (uint64_t)v246;
        sub_21C52AAD4(*(_QWORD *)(v122 + 56) + v118 * v266, (uint64_t)v246, type metadata accessor for UserAnnotationViewModel);
        sub_21C55B8B0(v118, v122, type metadata accessor for UserAnnotationViewModel);
        *(_QWORD *)(v117 + 16) = v122;
        swift_bridgeObjectRelease();
        v125 = 0;
      }
      else
      {
        v125 = 1;
        v124 = (uint64_t)v246;
        v123 = v278;
      }
      v123(v124, v125, 1, v279);
      v115 = (id)v263;

      sub_21C524980(v124, &qword_255288C70);
    }
    else
    {
      v51 = v247;
      sub_21C52AAD4(v113, v247, type metadata accessor for UserAnnotationViewModel);
      v52 = swift_isUniquelyReferenced_nonNull_native();
      v290 = *(_QWORD **)(v117 + 16);
      *(_QWORD *)(v117 + 16) = 0x8000000000000000;
      sub_21C55D460(v51, v115, v52, (uint64_t (*)(void *))sub_21C5310A8, type metadata accessor for UserAnnotationViewModel, &qword_255288C90, (void (*)(_QWORD))type metadata accessor for MapBridgingUserAnnotation);
      *(_QWORD *)(v117 + 16) = v290;

      swift_bridgeObjectRelease();
    }
    v50 = v257;
    ((void (*)(uint64_t *, _QWORD))v264)(&aBlock, 0);
    sub_21C531A9C(v254);
    sub_21C531A9C((uint64_t)v256);

    sub_21C52A88C(v258, type metadata accessor for UserAnnotationViewModel);
    sub_21C52A88C((uint64_t)v281, type metadata accessor for UserAnnotationViewModel);
    v48 = v266;
    v49 = &off_24E05E000;
LABEL_5:
    v47 += v48;
    --v45;
  }
  while (v45);
  swift_bridgeObjectRelease();
LABEL_50:
  v127 = v274;
  v126 = v275;
  v128 = v283;
  if (v253)
  {
    v129 = (void *)objc_opt_self();
    v130 = swift_allocObject();
    *(_QWORD *)(v130 + 16) = v261;
    v288 = sub_21C5620F8;
    v289 = v130;
    v131 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v285 = 1107296256;
    v286 = sub_21C558F28;
    v287 = &block_descriptor_141;
    v132 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    v133 = swift_allocObject();
    *(_QWORD *)(v133 + 16) = v262;
    v288 = sub_21C561FAC;
    v289 = v133;
    aBlock = v131;
    v285 = 1107296256;
    v286 = sub_21C558F54;
    v287 = &block_descriptor_148;
    v134 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v129, sel_animateWithDuration_animations_completion_, v132, v134, 0.25);
    v126 = v275;
    _Block_release(v134);
    _Block_release(v132);
  }
  v135 = *(_QWORD *)(v126 + 64);
  v264 = (id)(v126 + 64);
  v136 = -1;
  v137 = -1 << *(_BYTE *)(v126 + 32);
  v263 = ~v137;
  if (-v137 < 64)
    v136 = ~(-1 << -(char)v137);
  v138 = v136 & v135;
  v266 = (unint64_t)(63 - v137) >> 6;
  v260 = v266 - 1;
  swift_bridgeObjectRetain();
  v139 = 0;
LABEL_57:
  if (v138)
  {
    v281 = (uint64_t *)((v138 - 1) & v138);
    v142 = __clz(__rbit64(v138)) | (v139 << 6);
    v143 = v139;
LABEL_59:
    v144 = *(_QWORD *)(v275 + 56);
    v145 = *(void **)(*(_QWORD *)(v275 + 48) + 8 * v142);
    *v127 = v145;
    v146 = v144 + *(_QWORD *)(v128 + 72) * v142;
    v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C80);
    sub_21C529664(v146, (uint64_t)v127 + *(int *)(v147 + 48), type metadata accessor for UserAnnotationViewModel);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 56))(v127, 0, 1, v147);
    v148 = v145;
    v149 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v143;
    goto LABEL_78;
  }
  v143 = v139 + 1;
  if (__OFADD__(v139, 1))
  {
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
    goto LABEL_130;
  }
  v149 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v139;
  if (v143 >= v266)
    goto LABEL_77;
  v150 = *((_QWORD *)v264 + v143);
  if (v150)
  {
LABEL_63:
    v281 = (uint64_t *)((v150 - 1) & v150);
    v142 = __clz(__rbit64(v150)) + (v143 << 6);
    goto LABEL_59;
  }
  v151 = (char *)(v139 + 2);
  v149 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 1);
  if (v139 + 2 >= v266)
    goto LABEL_77;
  v150 = *((_QWORD *)v264 + (_QWORD)v151);
  if (v150)
    goto LABEL_66;
  v149 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 2);
  if (v139 + 3 >= v266)
    goto LABEL_77;
  v150 = *((_QWORD *)v264 + v139 + 3);
  if (v150)
  {
    v143 = v139 + 3;
    goto LABEL_63;
  }
  v151 = (char *)(v139 + 4);
  v149 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 3);
  if (v139 + 4 >= v266)
    goto LABEL_77;
  v150 = *((_QWORD *)v264 + (_QWORD)v151);
  if (v150)
  {
LABEL_66:
    v143 = (int64_t)v151;
    goto LABEL_63;
  }
  while (2)
  {
    v143 = (int64_t)(v151 + 1);
    if (__OFADD__(v151, 1))
    {
      __break(1u);
LABEL_132:
      sub_21C5E3DF0();
      __break(1u);
LABEL_133:
      type metadata accessor for MapBridgingUserAnnotation();
      result = sub_21C5E3DF0();
      __break(1u);
    }
    else
    {
      if (v143 < v266)
      {
        v150 = *((_QWORD *)v264 + v143);
        ++v151;
        if (v150)
          goto LABEL_63;
        continue;
      }
      v149 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v260;
LABEL_77:
      v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C80);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56))(v127, 1, 1, v152);
      v281 = 0;
LABEL_78:
      v153 = v273;
      sub_21C52DB08((uint64_t)v127, (uint64_t)v273, &qword_255288C78);
      v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C80);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 48))(v153, 1, v154) != 1)
      {
        v278 = v149;
        v155 = *v153;
        v156 = (uint64_t)v153 + *(int *)(v154 + 48);
        v157 = v280;
        sub_21C52AAD4(v156, (uint64_t)v280, type metadata accessor for UserAnnotationViewModel);
        v158 = *v157;
        v291 = v282;
        v159 = v282;
        swift_bridgeObjectRetain();
        v160 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
        v162 = v161;
        swift_bridgeObjectRetain();
        v163 = sub_21C530FA8(v158);
        v165 = v164;
        swift_bridgeObjectRelease();
        if ((v165 & 1) != 0)
        {
          v166 = swift_isUniquelyReferenced_nonNull_native();
          v167 = *(_QWORD *)(v162 + 24);
          v290 = (_QWORD *)v167;
          *(_QWORD *)(v162 + 24) = 0x8000000000000000;
          if ((v166 & 1) == 0)
          {
            sub_21C55CD08(&qword_255288C88);
            v167 = (uint64_t)v290;
          }
          swift_bridgeObjectRelease();
          v168 = *(void **)(*(_QWORD *)(v167 + 56) + 8 * v163);
          sub_21C55BA94(v163, v167);
          *(_QWORD *)(v162 + 24) = v167;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v160(&aBlock, 0);

        v291 = v159;
        v169 = v159;
        v170 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
        v172 = v171;
        swift_bridgeObjectRetain();
        v173 = sub_21C5310A8((uint64_t)v155);
        v175 = v174;
        swift_bridgeObjectRelease();
        v176 = v279;
        v128 = v283;
        if ((v175 & 1) != 0)
        {
          v177 = swift_isUniquelyReferenced_nonNull_native();
          v178 = *(_QWORD *)(v172 + 16);
          v290 = (_QWORD *)v178;
          *(_QWORD *)(v172 + 16) = 0x8000000000000000;
          if (!v177)
          {
            sub_21C55CAE0(type metadata accessor for UserAnnotationViewModel, &qword_255288C90);
            v178 = (uint64_t)v290;
          }

          v141 = v272;
          sub_21C52AAD4(*(_QWORD *)(v178 + 56) + *(_QWORD *)(v128 + 72) * v173, v272, type metadata accessor for UserAnnotationViewModel);
          sub_21C55B8B0(v173, v178, type metadata accessor for UserAnnotationViewModel);
          *(_QWORD *)(v172 + 16) = v178;
          swift_bridgeObjectRelease();
          v140 = 0;
        }
        else
        {
          v140 = 1;
          v141 = v272;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v128 + 56))(v141, v140, 1, v176);
        sub_21C524980(v141, &qword_255288C70);
        v170(&aBlock, 0);

        sub_21C52A88C((uint64_t)v280, type metadata accessor for UserAnnotationViewModel);
        v139 = (int64_t)v278;
        v138 = (unint64_t)v281;
        v127 = v274;
        goto LABEL_57;
      }
      sub_21C52A884();
      v179 = swift_bridgeObjectRetain();
      v180 = sub_21C558F90(v179);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!(v180 >> 62))
      {
        swift_bridgeObjectRetain();
        sub_21C5E3DD8();
        sub_21C531A4C(0, (unint64_t *)&qword_255289570);
        v181 = v180;
        goto LABEL_90;
      }
LABEL_130:
      sub_21C531A4C(0, (unint64_t *)&qword_255289570);
      swift_bridgeObjectRetain();
      v181 = sub_21C5E3D54();
      swift_bridgeObjectRelease();
LABEL_90:
      swift_bridgeObjectRelease();
      sub_21C5589DC(v181);
      swift_bridgeObjectRelease();
      result = v276;
      v183 = *(_QWORD *)(v276 + 16);
      if (v183)
      {
        v184 = (uint64_t *)((char *)v271 + *(int *)(v267 + 48));
        v185 = v276 + ((*(unsigned __int8 *)(v268 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v268 + 80));
        v278 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v268 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          v280 = (uint64_t *)v185;
          v281 = (uint64_t *)v183;
          v190 = v271;
          sub_21C531B18(v185, (uint64_t)v271, &qword_255288C68);
          v191 = *v190;
          v192 = (uint64_t)v184;
          v193 = *v184;
          v291 = v282;
          v194 = v282;
          swift_bridgeObjectRetain();
          v195 = v191;
          v196 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v198 = v197;
          v199 = swift_isUniquelyReferenced_nonNull_native();
          v290 = *(_QWORD **)(v198 + 24);
          v200 = v290;
          *(_QWORD *)(v198 + 24) = 0x8000000000000000;
          v202 = sub_21C530FA8(v193);
          v203 = v200[2];
          v204 = (v201 & 1) == 0;
          v205 = v203 + v204;
          if (__OFADD__(v203, v204))
          {
            __break(1u);
            goto LABEL_126;
          }
          v206 = v201;
          if (v200[3] >= v205)
          {
            if ((v199 & 1) != 0)
            {
              v209 = v290;
              if ((v201 & 1) != 0)
                goto LABEL_103;
            }
            else
            {
              sub_21C55CD08(&qword_255288C88);
              v209 = v290;
              if ((v206 & 1) != 0)
                goto LABEL_103;
            }
          }
          else
          {
            sub_21C55AFC8(v205, v199, &qword_255288C88);
            v207 = sub_21C530FA8(v193);
            if ((v206 & 1) != (v208 & 1))
              goto LABEL_132;
            v202 = v207;
            v209 = v290;
            if ((v206 & 1) != 0)
            {
LABEL_103:
              v214 = v209[7];
              v215 = 8 * v202;

              *(_QWORD *)(v214 + v215) = v195;
              goto LABEL_104;
            }
          }
          v209[(v202 >> 6) + 8] |= 1 << v202;
          v210 = 8 * v202;
          *(_QWORD *)(v209[6] + v210) = v193;
          *(_QWORD *)(v209[7] + v210) = v195;
          v211 = v209[2];
          v212 = __OFADD__(v211, 1);
          v213 = v211 + 1;
          if (v212)
            goto LABEL_127;
          v209[2] = v213;
          swift_bridgeObjectRetain();
LABEL_104:
          *(_QWORD *)(v198 + 24) = v209;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v196(&aBlock, 0);

          v184 = (uint64_t *)v192;
          v216 = v270;
          sub_21C529664(v192, v270, type metadata accessor for UserAnnotationViewModel);
          v217 = v283;
          v218 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v283 + 56);
          v219 = v279;
          v218(v216, 0, 1, v279);
          v291 = v194;
          v220 = v194;
          v221 = v195;
          v222 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v224 = v223;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v217 + 48))(v216, 1, v219) == 1)
          {
            sub_21C524980(v216, &qword_255288C70);
            swift_bridgeObjectRetain();
            v225 = sub_21C5310A8((uint64_t)v221);
            v227 = v226;
            swift_bridgeObjectRelease();
            if ((v227 & 1) != 0)
            {
              v228 = swift_isUniquelyReferenced_nonNull_native();
              v229 = *(_QWORD *)(v224 + 16);
              v290 = (_QWORD *)v229;
              *(_QWORD *)(v224 + 16) = 0x8000000000000000;
              if (!v228)
              {
                sub_21C55CAE0(type metadata accessor for UserAnnotationViewModel, &qword_255288C90);
                v229 = (uint64_t)v290;
              }

              v187 = v265;
              sub_21C52AAD4(*(_QWORD *)(v229 + 56) + *(_QWORD *)(v283 + 72) * v225, v265, type metadata accessor for UserAnnotationViewModel);
              sub_21C55B8B0(v225, v229, type metadata accessor for UserAnnotationViewModel);
              *(_QWORD *)(v224 + 16) = v229;
              swift_bridgeObjectRelease();
              v186 = 0;
            }
            else
            {
              v186 = 1;
              v187 = v265;
            }
            v218(v187, v186, 1, v219);

            sub_21C524980(v187, &qword_255288C70);
            goto LABEL_94;
          }
          sub_21C52AAD4(v216, v269, type metadata accessor for UserAnnotationViewModel);
          v230 = swift_isUniquelyReferenced_nonNull_native();
          v290 = *(_QWORD **)(v224 + 16);
          v231 = v290;
          *(_QWORD *)(v224 + 16) = 0x8000000000000000;
          v233 = sub_21C5310A8((uint64_t)v221);
          v234 = v231[2];
          v235 = (v232 & 1) == 0;
          v236 = v234 + v235;
          if (__OFADD__(v234, v235))
            goto LABEL_128;
          v237 = v232;
          if (v231[3] >= v236)
          {
            if ((v230 & 1) != 0)
            {
              v240 = v290;
              if ((v232 & 1) == 0)
                goto LABEL_113;
            }
            else
            {
              sub_21C55CAE0(type metadata accessor for UserAnnotationViewModel, &qword_255288C90);
              v240 = v290;
              if ((v237 & 1) == 0)
                goto LABEL_113;
            }
          }
          else
          {
            sub_21C55AC7C(v236, v230, type metadata accessor for UserAnnotationViewModel, &qword_255288C90);
            v238 = sub_21C5310A8((uint64_t)v221);
            if ((v237 & 1) != (v239 & 1))
              goto LABEL_133;
            v233 = v238;
            v240 = v290;
            if ((v237 & 1) == 0)
            {
LABEL_113:
              v240[(v233 >> 6) + 8] |= 1 << v233;
              *(_QWORD *)(v240[6] + 8 * v233) = v221;
              sub_21C52AAD4(v269, v240[7] + *(_QWORD *)(v283 + 72) * v233, type metadata accessor for UserAnnotationViewModel);
              v241 = v240[2];
              v212 = __OFADD__(v241, 1);
              v242 = v241 + 1;
              if (v212)
                goto LABEL_129;
              v240[2] = v242;
              v243 = v221;
              goto LABEL_118;
            }
          }
          sub_21C56171C(v269, v240[7] + *(_QWORD *)(v283 + 72) * v233, type metadata accessor for UserAnnotationViewModel);
LABEL_118:
          *(_QWORD *)(v224 + 16) = v240;

          swift_bridgeObjectRelease();
LABEL_94:
          v189 = (uint64_t)v280;
          v188 = (uint64_t)v281;
          v222(&aBlock, 0);

          sub_21C52A88C(v192, type metadata accessor for UserAnnotationViewModel);
          v185 = (uint64_t)v278 + v189;
          v183 = v188 - 1;
          if (!v183)
          {
            v244 = v276;
            swift_bridgeObjectRelease();
            return v244;
          }
        }
      }
    }
    return result;
  }
}

uint64_t sub_21C547E6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t *, _QWORD);
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  _QWORD *v60;
  unint64_t v61;
  char v62;
  id v63;
  id v64;
  id v65;
  _QWORD *v66;
  unint64_t v67;
  uint64_t v68;
  char v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  objc_class *v79;
  _BYTE *v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  char *v86;
  char *v87;
  void *v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unsigned int (*v97)(uint64_t, uint64_t, uint64_t);
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  id v104;
  id v105;
  uint64_t v106;
  double v107;
  double v108;
  void *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  void *v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  void *v129;
  uint64_t v130;
  uint64_t (*v131)();
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v140;
  id v141;
  id v142;
  void (*v143)(uint64_t *, _QWORD);
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  char v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  int64_t v164;
  uint64_t v165;
  unint64_t v166;
  int64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  int64_t v174;
  unint64_t v175;
  int64_t v176;
  uint64_t v177;
  void **v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  id v184;
  void (*v185)(uint64_t *, _QWORD);
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  char v189;
  char v190;
  char v191;
  uint64_t v192;
  void *v193;
  id v194;
  void (*v195)(uint64_t *, _QWORD);
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  char v199;
  char v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  unint64_t v206;
  uint64_t result;
  uint64_t v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  void **v215;
  void *v216;
  uint64_t v217;
  uint64_t v218;
  id v219;
  id v220;
  void (*v221)(uint64_t *, _QWORD);
  uint64_t v222;
  uint64_t v223;
  char v224;
  _QWORD *v225;
  char v226;
  unint64_t v227;
  uint64_t v228;
  _BOOL8 v229;
  uint64_t v230;
  char v231;
  unint64_t v232;
  char v233;
  _QWORD *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  BOOL v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  void (*v243)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v244;
  id v245;
  id v246;
  void (*v247)(uint64_t *, _QWORD);
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  char v251;
  char v252;
  int v253;
  uint64_t v254;
  int v255;
  _QWORD *v256;
  char v257;
  unint64_t v258;
  uint64_t v259;
  _BOOL8 v260;
  uint64_t v261;
  char v262;
  unint64_t v263;
  char v264;
  _QWORD *v265;
  uint64_t v266;
  uint64_t v267;
  id v268;
  unint64_t v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  unint64_t v273;
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void *v280;
  uint64_t v281;
  uint64_t (*v282)();
  uint64_t (*v283)();
  unsigned int (*v284)(uint64_t, uint64_t, uint64_t);
  id v285;
  _QWORD *v286;
  _QWORD *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  _QWORD *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  void **v297;
  uint64_t v298;
  char *v299;
  void **v300;
  _QWORD *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  int64_t v306;
  unint64_t v307;
  uint64_t v308;
  uint64_t *v309;
  uint64_t v310;
  id v311;
  uint64_t v312;
  unint64_t v313;
  _QWORD *v314;
  uint64_t v315;
  uint64_t v316;
  __int128 v317;
  uint64_t aBlock;
  uint64_t v319;
  _QWORD *v320;
  _QWORD *v321;
  uint64_t (*v322)();
  uint64_t v323;
  objc_super v324;

  v281 = a4;
  v280 = a1;
  v293 = __swift_instantiateConcreteTypeFromMangledName(&qword_25528A520);
  v294 = *(_QWORD *)(v293 - 8);
  v8 = MEMORY[0x24BDAC7A8](v293);
  v10 = (char *)&v270 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v297 = (void **)((char *)&v270 - v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CC0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v270 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v279 = (uint64_t)&v270 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v278 = (uint64_t)&v270 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v290 = (uint64_t)&v270 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v291 = (uint64_t)&v270 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v296 = (uint64_t)&v270 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v299 = (char *)&v270 - v26;
  v27 = type metadata accessor for MarkerAnnotationViewModel(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v272 = (uint64_t)&v270 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v288 = (uint64_t)&v270 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v277 = (uint64_t)&v270 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v289 = (uint64_t)&v270 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = (uint64_t *)((char *)&v270 - v38);
  v40 = MEMORY[0x24BDAC7A8](v37);
  v295 = (uint64_t)&v270 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v309 = (uint64_t *)((char *)&v270 - v42);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CC8);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v301 = (uint64_t *)((char *)&v270 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v44);
  v300 = (void **)((char *)&v270 - v46);
  *(_QWORD *)&v317 = v5;
  v311 = v5;
  v312 = a5;
  v47 = (void (*)(uint64_t *, _QWORD))swift_readAtKeyPath();
  v304 = *(_QWORD *)(v48 + 16);
  swift_bridgeObjectRetain();
  v47(&aBlock, 0);

  v49 = *(_QWORD *)(a2 + 16);
  v308 = v27;
  v310 = v28;
  if (v49)
  {
    v50 = *(unsigned __int8 *)(v28 + 80);
    v51 = a2 + ((v50 + 32) & ~v50);
    v298 = *(_QWORD *)(v28 + 72);
    v275 = v50 | 7;
    v276 = (v50 + 24) & ~v50;
    v274 = (v29 + v276 + 7) & 0xFFFFFFFFFFFFFFF8;
    v273 = v274 + 40;
    v270 = a2;
    swift_bridgeObjectRetain();
    v286 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v307 = MEMORY[0x24BEE4AF8];
    v287 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v292 = v10;
    v271 = v15;
    v313 = (unint64_t)v39;
    while (1)
    {
      v306 = v49;
      v305 = v51;
      sub_21C529664(v51, (uint64_t)v39, type metadata accessor for MarkerAnnotationViewModel);
      v58 = *v39;
      *(_QWORD *)&v317 = v311;
      v59 = v311;
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      v60 = v321;
      if (v321[2] && (v61 = sub_21C530FA8(v58), (v62 & 1) != 0))
      {
        v63 = *(id *)(v60[7] + 8 * v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v317 = v59;
        v64 = v59;
        v65 = v63;
        swift_getAtKeyPath();

        v66 = v320;
        if (v320[2])
        {
          v67 = sub_21C5310EC((uint64_t)v65);
          v68 = v290;
          if ((v69 & 1) != 0)
          {
            sub_21C529664(v66[7] + v67 * v298, v290, type metadata accessor for MarkerAnnotationViewModel);
            v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
            v71 = v68;
            v72 = 0;
          }
          else
          {
            v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
            v71 = v290;
            v72 = 1;
          }
          v303 = (uint64_t)v70;
          v70(v71, v72, 1, v27);
        }
        else
        {
          v68 = v290;
          v303 = *(_QWORD *)(v28 + 56);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v303)(v290, 1, 1, v27);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v97 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
        if (v97(v68, 1, v27) != 1)
        {
          v284 = v97;
          v285 = v64;
          sub_21C52AAD4(v68, v289, type metadata accessor for MarkerAnnotationViewModel);
          v321 = (_QWORD *)sub_21C531A4C(0, &qword_255288BE8);
          v322 = (uint64_t (*)())&off_24E057A88;
          v98 = v280;
          aBlock = (uint64_t)v280;
          v99 = v313;
          v100 = v277;
          sub_21C529664(v313, v277, type metadata accessor for MarkerAnnotationViewModel);
          sub_21C560FD4((uint64_t)&aBlock, (uint64_t)&v317);
          v101 = v288;
          sub_21C529664(v100, v288, type metadata accessor for MarkerAnnotationViewModel);
          sub_21C560FD4((uint64_t)&v317, (uint64_t)&v314);
          v102 = swift_allocObject();
          *(_QWORD *)(v102 + 16) = v65;
          sub_21C52AAD4(v100, v102 + v276, type metadata accessor for MarkerAnnotationViewModel);
          sub_21C56101C(&v317, v102 + v274);
          v103 = v98;
          v104 = v65;
          v105 = v103;
          v106 = v281;
          if (!v281)
            goto LABEL_26;
          swift_retain();
          objc_msgSend(v104, sel_coordinate);
          if (vabdd_f64(v108, *(double *)(v99 + 88)) >= 0.00000000999999994
            || vabdd_f64(v107, *(double *)(v99 + 96)) >= 0.00000000999999994)
          {
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v314);
            sub_21C52A88C(v101, type metadata accessor for MarkerAnnotationViewModel);
            v110 = (_QWORD *)swift_allocObject();
            v110[2] = sub_21C561704;
            v110[3] = v102;
            v110[4] = v106;
            v111 = swift_allocObject();
            *(_QWORD *)(v111 + 16) = sub_21C561704;
            *(_QWORD *)(v111 + 24) = v102;
            v302 = v111;
            swift_retain();
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

            v112 = swift_allocObject();
            *(_QWORD *)(v112 + 16) = sub_21C561420;
            *(_QWORD *)(v112 + 24) = v110;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v286 = sub_21C5B8580(0, v286[2] + 1, 1, v286);
            v114 = v286[2];
            v113 = v286[3];
            if (v114 >= v113 >> 1)
              v286 = sub_21C5B8580((_QWORD *)(v113 > 1), v114 + 1, 1, v286);
            v115 = v110;
            v116 = v286;
            v286[2] = v114 + 1;
            v117 = &v116[2 * v114];
            v117[4] = sub_21C562160;
            v117[5] = v112;
            v118 = swift_allocObject();
            *(_QWORD *)(v118 + 16) = sub_21C56142C;
            *(_QWORD *)(v118 + 24) = v302;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v287 = sub_21C5B8580(0, v287[2] + 1, 1, v287);
            v120 = v287[2];
            v119 = v287[3];
            if (v120 >= v119 >> 1)
              v287 = sub_21C5B8580((_QWORD *)(v119 > 1), v120 + 1, 1, v287);
            v121 = v287;
            v287[2] = v120 + 1;
            v122 = &v121[2 * v120];
            v122[4] = sub_21C562160;
            v122[5] = v118;
            v283 = sub_21C561420;
            v282 = sub_21C56142C;
          }
          else
          {
            swift_release();
LABEL_26:
            objc_msgSend(v104, sel_setCoordinate_, *(double *)(v101 + 88), *(double *)(v101 + 96));
            if (*(_QWORD *)(v101 + 16))
              v109 = (void *)sub_21C5E3940();
            else
              v109 = 0;
            objc_msgSend(v104, sel_setTitle_, v109);

            v123 = *(_QWORD *)(v101 + 32);
            v283 = (uint64_t (*)())v105;
            if (v123)
              v124 = (void *)sub_21C5E3940();
            else
              v124 = 0;
            objc_msgSend(v104, sel_setSubtitle_, v124);

            v125 = v315;
            v126 = v316;
            __swift_project_boxed_opaque_existential_1(&v314, v315);
            v127 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v126 + 24))(v104, v125, v126);
            if (v127)
            {
              v128 = (void *)v127;
              objc_opt_self();
              v129 = (void *)swift_dynamicCastObjCClass();
              v130 = v288;
              v131 = v283;
              if (v129)
              {
                sub_21C568894(v129, 0);
                v130 = v288;
              }
              swift_release();

            }
            else
            {
              swift_release();
              v130 = v288;
              v131 = v283;
            }
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v314);
            sub_21C52A88C(v130, type metadata accessor for MarkerAnnotationViewModel);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

            v283 = 0;
            v115 = 0;
            v282 = 0;
            v302 = 0;
          }
          v132 = v304;
          swift_bridgeObjectRetain();
          v133 = sub_21C5310EC((uint64_t)v104);
          v135 = v134;
          swift_bridgeObjectRelease();
          if ((v135 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            aBlock = v132;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_21C55CAE0(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0);
              v132 = aBlock;
            }

            v137 = v278;
            sub_21C52AAD4(*(_QWORD *)(v132 + 56) + v133 * v298, v278, type metadata accessor for MarkerAnnotationViewModel);
            v304 = v132;
            sub_21C55B8B0(v133, v132, type metadata accessor for MarkerAnnotationViewModel);
            swift_bridgeObjectRelease();
            v138 = 0;
          }
          else
          {
            v138 = 1;
            v137 = v278;
          }
          v139 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v303;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v303)(v137, v138, 1, v27);
          sub_21C524980(v137, &qword_255288CC0);
          v140 = v279;
          sub_21C529664(v313, v279, type metadata accessor for MarkerAnnotationViewModel);
          v139(v140, 0, 1, v27);
          *(_QWORD *)&v317 = v285;
          v141 = v285;
          v142 = v104;
          v143 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v145 = v144;
          if (v284(v140, 1, v27) == 1)
          {
            v285 = v115;
            sub_21C524980(v140, &qword_255288CC0);
            swift_bridgeObjectRetain();
            v146 = sub_21C5310EC((uint64_t)v142);
            v148 = v147;
            swift_bridgeObjectRelease();
            if ((v148 & 1) != 0)
            {
              v149 = swift_isUniquelyReferenced_nonNull_native();
              v150 = *(_QWORD *)(v145 + 16);
              v314 = (_QWORD *)v150;
              *(_QWORD *)(v145 + 16) = 0x8000000000000000;
              if ((v149 & 1) == 0)
              {
                sub_21C55CAE0(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0);
                v150 = (uint64_t)v314;
              }

              v151 = (uint64_t)v271;
              sub_21C52AAD4(*(_QWORD *)(v150 + 56) + v146 * v298, (uint64_t)v271, type metadata accessor for MarkerAnnotationViewModel);
              sub_21C55B8B0(v146, v150, type metadata accessor for MarkerAnnotationViewModel);
              *(_QWORD *)(v145 + 16) = v150;
              swift_bridgeObjectRelease();
              v152 = 0;
            }
            else
            {
              v152 = 1;
              v151 = (uint64_t)v271;
            }
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v303)(v151, v152, 1, v27);

            sub_21C524980(v151, &qword_255288CC0);
            v54 = v306;
            v55 = v305;
          }
          else
          {
            v52 = v272;
            sub_21C52AAD4(v140, v272, type metadata accessor for MarkerAnnotationViewModel);
            v53 = swift_isUniquelyReferenced_nonNull_native();
            v314 = *(_QWORD **)(v145 + 16);
            *(_QWORD *)(v145 + 16) = 0x8000000000000000;
            sub_21C55D460(v52, v142, v53, (uint64_t (*)(void *))sub_21C5310EC, type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0, (void (*)(_QWORD))type metadata accessor for MapBridgingMarker);
            *(_QWORD *)(v145 + 16) = v314;

            swift_bridgeObjectRelease();
            v54 = v306;
            v55 = v305;
          }
          v56 = (uint64_t)v283;
          v57 = (uint64_t)v282;
          v143(&aBlock, 0);
          sub_21C531A9C(v57);
          sub_21C531A9C(v56);

          sub_21C52A88C(v289, type metadata accessor for MarkerAnnotationViewModel);
          v39 = (uint64_t *)v313;
          sub_21C52A88C(v313, type metadata accessor for MarkerAnnotationViewModel);
          goto LABEL_5;
        }

        sub_21C524980(v68, &qword_255288CC0);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v73 = *(_QWORD *)(v313 + 8);
      v74 = *(_QWORD *)(v313 + 16);
      v302 = *(_QWORD *)(v313 + 24);
      v75 = *(_QWORD *)(v313 + 32);
      v76 = *(_QWORD *)(v313 + 88);
      v77 = *(_QWORD *)(v313 + 96);
      v78 = *(void **)(v313 + 40);
      LODWORD(v303) = *(unsigned __int8 *)(v313 + 48);
      v79 = (objc_class *)type metadata accessor for MapBridgingMarker();
      v80 = objc_allocWithZone(v79);
      v81 = &v80[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_title];
      *v81 = 0;
      v81[1] = 0;
      v82 = (uint64_t *)&v80[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_subtitle];
      *v82 = 0;
      v82[1] = 0;
      v83 = OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem;
      *(_QWORD *)&v80[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem] = 0;
      v84 = OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature;
      v80[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature] = 0;
      *v81 = v73;
      v81[1] = v74;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v85 = v78;
      v86 = v80;
      swift_bridgeObjectRelease();
      *v82 = v302;
      v82[1] = v75;
      swift_bridgeObjectRelease();
      v87 = &v86[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_coordinate];
      *(_QWORD *)v87 = v76;
      *((_QWORD *)v87 + 1) = v77;
      v88 = *(void **)&v80[v83];
      *(_QWORD *)&v80[v83] = v78;
      v89 = v85;

      v80[v84] = v303;
      v324.receiver = v86;
      v324.super_class = v79;
      v39 = (uint64_t *)v313;
      v90 = objc_msgSendSuper2(&v324, sel_init);

      v91 = (uint64_t)v292;
      v92 = (uint64_t)v292 + *(int *)(v293 + 48);
      *v292 = v90;
      sub_21C529664((uint64_t)v39, v92, type metadata accessor for MarkerAnnotationViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v93 = v307;
      else
        v93 = sub_21C5B90A4(0, *(_QWORD *)(v307 + 16) + 1, 1, v307);
      v95 = *(_QWORD *)(v93 + 16);
      v94 = *(_QWORD *)(v93 + 24);
      v27 = v308;
      v28 = v310;
      if (v95 >= v94 >> 1)
        v93 = sub_21C5B90A4(v94 > 1, v95 + 1, 1, v93);
      *(_QWORD *)(v93 + 16) = v95 + 1;
      v96 = (*(unsigned __int8 *)(v294 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v294 + 80);
      v307 = v93;
      sub_21C52DB08(v91, v93 + v96 + *(_QWORD *)(v294 + 72) * v95, &qword_25528A520);
      sub_21C52A88C((uint64_t)v39, type metadata accessor for MarkerAnnotationViewModel);
      v54 = v306;
      v55 = v305;
LABEL_5:
      v51 = v55 + v298;
      v49 = v54 - 1;
      if (!v49)
      {
        swift_bridgeObjectRelease();
        goto LABEL_62;
      }
    }
  }
  v286 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v307 = MEMORY[0x24BEE4AF8];
  v287 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_62:
  v153 = v304;
  if (v281)
  {
    v154 = (void *)objc_opt_self();
    v155 = swift_allocObject();
    *(_QWORD *)(v155 + 16) = v286;
    v322 = sub_21C5620F8;
    v323 = v155;
    v156 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v319 = 1107296256;
    v320 = sub_21C558F28;
    v321 = &block_descriptor_172;
    v157 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    v158 = swift_allocObject();
    *(_QWORD *)(v158 + 16) = v287;
    v322 = sub_21C561FAC;
    v323 = v158;
    aBlock = v156;
    v319 = 1107296256;
    v320 = sub_21C558F54;
    v321 = &block_descriptor_179;
    v159 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v154, sel_animateWithDuration_animations_completion_, v157, v159, 0.25);
    v153 = v304;
    _Block_release(v159);
    _Block_release(v157);
  }
  v160 = *(_QWORD *)(v153 + 64);
  v305 = v153 + 64;
  v161 = -1;
  v162 = -1 << *(_BYTE *)(v153 + 32);
  v303 = ~v162;
  if (-v162 < 64)
    v161 = ~(-1 << -(char)v162);
  v163 = v161 & v160;
  v306 = (unint64_t)(63 - v162) >> 6;
  v302 = v306 - 1;
  swift_bridgeObjectRetain();
  v164 = 0;
  while (1)
  {
    if (v163)
    {
      v313 = (v163 - 1) & v163;
      v166 = __clz(__rbit64(v163)) | (v164 << 6);
      v167 = v164;
LABEL_71:
      v168 = *(_QWORD *)(v304 + 56);
      v169 = *(void **)(*(_QWORD *)(v304 + 48) + 8 * v166);
      v170 = (uint64_t)v301;
      *v301 = v169;
      v171 = v168 + *(_QWORD *)(v28 + 72) * v166;
      v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CD0);
      sub_21C529664(v171, v170 + *(int *)(v172 + 48), type metadata accessor for MarkerAnnotationViewModel);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v172 - 8) + 56))(v170, 0, 1, v172);
      v173 = v169;
      v174 = v167;
      goto LABEL_90;
    }
    v167 = v164 + 1;
    if (__OFADD__(v164, 1))
      goto LABEL_136;
    v174 = v164;
    if (v167 < v306)
    {
      v175 = *(_QWORD *)(v305 + 8 * v167);
      if (v175)
        goto LABEL_75;
      v176 = v164 + 2;
      v174 = v164 + 1;
      if (v164 + 2 < v306)
      {
        v175 = *(_QWORD *)(v305 + 8 * v176);
        if (v175)
          goto LABEL_78;
        v174 = v164 + 2;
        if (v164 + 3 < v306)
        {
          v175 = *(_QWORD *)(v305 + 8 * (v164 + 3));
          if (v175)
          {
            v167 = v164 + 3;
            goto LABEL_75;
          }
          v176 = v164 + 4;
          v174 = v164 + 3;
          if (v164 + 4 < v306)
            break;
        }
      }
    }
LABEL_89:
    v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CD0);
    v170 = (uint64_t)v301;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 56))(v301, 1, 1, v177);
    v313 = 0;
LABEL_90:
    v178 = v300;
    sub_21C52DB08(v170, (uint64_t)v300, &qword_255288CC8);
    v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CD0);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v179 - 8) + 48))(v178, 1, v179) == 1)
    {
      sub_21C52A884();
      v204 = swift_bridgeObjectRetain();
      v205 = sub_21C559098(v204);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v205 >> 62)
        goto LABEL_140;
      swift_bridgeObjectRetain();
      sub_21C5E3DD8();
      sub_21C531A4C(0, (unint64_t *)&qword_255289570);
      v206 = v205;
      while (1)
      {
        swift_bridgeObjectRelease();
        sub_21C5589DC(v206);
        swift_bridgeObjectRelease();
        result = v307;
        v208 = *(_QWORD *)(v307 + 16);
        if (!v208)
          return result;
        v209 = (uint64_t *)((char *)v297 + *(int *)(v293 + 48));
        v210 = v307 + ((*(unsigned __int8 *)(v294 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v294 + 80));
        v306 = *(_QWORD *)(v294 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          v313 = v208;
          v309 = (uint64_t *)v210;
          v215 = v297;
          sub_21C531B18(v210, (uint64_t)v297, &qword_25528A520);
          v216 = *v215;
          v217 = (uint64_t)v209;
          v218 = *v209;
          *(_QWORD *)&v317 = v311;
          v219 = v311;
          swift_bridgeObjectRetain();
          v220 = v216;
          v221 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v223 = v222;
          v224 = swift_isUniquelyReferenced_nonNull_native();
          v314 = *(_QWORD **)(v223 + 24);
          v225 = v314;
          *(_QWORD *)(v223 + 24) = 0x8000000000000000;
          v227 = sub_21C530FA8(v218);
          v228 = v225[2];
          v229 = (v226 & 1) == 0;
          v230 = v228 + v229;
          if (__OFADD__(v228, v229))
            break;
          v231 = v226;
          if (v225[3] >= v230)
          {
            if ((v224 & 1) == 0)
              sub_21C55CD08(&qword_255288CD8);
          }
          else
          {
            sub_21C55AFC8(v230, v224, &qword_255288CD8);
            v232 = sub_21C530FA8(v218);
            if ((v231 & 1) != (v233 & 1))
              goto LABEL_142;
            v227 = v232;
          }
          v234 = v314;
          if ((v231 & 1) != 0)
          {
            v235 = v314[7];
            v236 = 8 * v227;

            *(_QWORD *)(v235 + v236) = v220;
          }
          else
          {
            v314[(v227 >> 6) + 8] |= 1 << v227;
            v237 = 8 * v227;
            *(_QWORD *)(v234[6] + v237) = v218;
            *(_QWORD *)(v234[7] + v237) = v220;
            v238 = v234[2];
            v239 = __OFADD__(v238, 1);
            v240 = v238 + 1;
            if (v239)
              goto LABEL_137;
            v234[2] = v240;
            swift_bridgeObjectRetain();
          }
          *(_QWORD *)(v223 + 24) = v234;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v221(&aBlock, 0);

          v209 = (uint64_t *)v217;
          v241 = v296;
          sub_21C529664(v217, v296, type metadata accessor for MarkerAnnotationViewModel);
          v242 = v310;
          v243 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v310 + 56);
          v244 = v308;
          v243(v241, 0, 1, v308);
          *(_QWORD *)&v317 = v219;
          v245 = v219;
          v246 = v220;
          v247 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v249 = v248;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v242 + 48))(v241, 1, v244) == 1)
          {
            sub_21C524980(v241, &qword_255288CC0);
            swift_bridgeObjectRetain();
            v250 = sub_21C5310EC((uint64_t)v246);
            v252 = v251;
            swift_bridgeObjectRelease();
            if ((v252 & 1) != 0)
            {
              v253 = swift_isUniquelyReferenced_nonNull_native();
              v254 = *(_QWORD *)(v249 + 16);
              v314 = (_QWORD *)v254;
              *(_QWORD *)(v249 + 16) = 0x8000000000000000;
              if (!v253)
              {
                sub_21C55CAE0(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0);
                v254 = (uint64_t)v314;
              }

              v212 = v291;
              sub_21C52AAD4(*(_QWORD *)(v254 + 56) + *(_QWORD *)(v242 + 72) * v250, v291, type metadata accessor for MarkerAnnotationViewModel);
              sub_21C55B8B0(v250, v254, type metadata accessor for MarkerAnnotationViewModel);
              *(_QWORD *)(v249 + 16) = v254;
              swift_bridgeObjectRelease();
              v211 = 0;
            }
            else
            {
              v211 = 1;
              v212 = v291;
            }
            v243(v212, v211, 1, v308);

            sub_21C524980(v212, &qword_255288CC0);
          }
          else
          {
            sub_21C52AAD4(v241, v295, type metadata accessor for MarkerAnnotationViewModel);
            v255 = swift_isUniquelyReferenced_nonNull_native();
            v314 = *(_QWORD **)(v249 + 16);
            v256 = v314;
            *(_QWORD *)(v249 + 16) = 0x8000000000000000;
            v258 = sub_21C5310EC((uint64_t)v246);
            v259 = v256[2];
            v260 = (v257 & 1) == 0;
            v261 = v259 + v260;
            if (__OFADD__(v259, v260))
              goto LABEL_138;
            v262 = v257;
            if (v256[3] >= v261)
            {
              if ((v255 & 1) == 0)
                sub_21C55CAE0(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0);
            }
            else
            {
              sub_21C55AC7C(v261, v255, type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0);
              v263 = sub_21C5310EC((uint64_t)v246);
              if ((v262 & 1) != (v264 & 1))
                goto LABEL_143;
              v258 = v263;
            }
            v265 = v314;
            if ((v262 & 1) != 0)
            {
              sub_21C56171C(v295, v314[7] + *(_QWORD *)(v242 + 72) * v258, type metadata accessor for MarkerAnnotationViewModel);
            }
            else
            {
              v314[(v258 >> 6) + 8] |= 1 << v258;
              *(_QWORD *)(v265[6] + 8 * v258) = v246;
              sub_21C52AAD4(v295, v265[7] + *(_QWORD *)(v242 + 72) * v258, type metadata accessor for MarkerAnnotationViewModel);
              v266 = v265[2];
              v239 = __OFADD__(v266, 1);
              v267 = v266 + 1;
              if (v239)
                goto LABEL_139;
              v265[2] = v267;
              v268 = v246;
            }
            *(_QWORD *)(v249 + 16) = v265;

            swift_bridgeObjectRelease();
          }
          v213 = v313;
          v214 = (uint64_t)v309;
          v247(&aBlock, 0);

          sub_21C52A88C(v217, type metadata accessor for MarkerAnnotationViewModel);
          v210 = v214 + v306;
          v208 = v213 - 1;
          if (!v208)
          {
            v269 = v307;
            swift_bridgeObjectRelease();
            return v269;
          }
        }
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        sub_21C531A4C(0, (unint64_t *)&qword_255289570);
        swift_bridgeObjectRetain();
        v206 = sub_21C5E3D54();
        swift_bridgeObjectRelease();
      }
    }
    v180 = *v178;
    v181 = (uint64_t)v178 + *(int *)(v179 + 48);
    v182 = v309;
    sub_21C52AAD4(v181, (uint64_t)v309, type metadata accessor for MarkerAnnotationViewModel);
    v183 = *v182;
    *(_QWORD *)&v317 = v311;
    v184 = v311;
    swift_bridgeObjectRetain();
    v185 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v187 = v186;
    swift_bridgeObjectRetain();
    v188 = sub_21C530FA8(v183);
    v190 = v189;
    swift_bridgeObjectRelease();
    if ((v190 & 1) != 0)
    {
      v191 = swift_isUniquelyReferenced_nonNull_native();
      v192 = *(_QWORD *)(v187 + 24);
      v314 = (_QWORD *)v192;
      *(_QWORD *)(v187 + 24) = 0x8000000000000000;
      if ((v191 & 1) == 0)
      {
        sub_21C55CD08(&qword_255288CD8);
        v192 = (uint64_t)v314;
      }
      swift_bridgeObjectRelease();
      v193 = *(void **)(*(_QWORD *)(v192 + 56) + 8 * v188);
      sub_21C55BA94(v188, v192);
      *(_QWORD *)(v187 + 24) = v192;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 = v308;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v185(&aBlock, 0);

    *(_QWORD *)&v317 = v184;
    v194 = v184;
    v195 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v197 = v196;
    swift_bridgeObjectRetain();
    v198 = sub_21C5310EC((uint64_t)v180);
    v200 = v199;
    swift_bridgeObjectRelease();
    v28 = v310;
    v201 = (uint64_t)v299;
    if ((v200 & 1) != 0)
    {
      v202 = swift_isUniquelyReferenced_nonNull_native();
      v203 = *(_QWORD *)(v197 + 16);
      v314 = (_QWORD *)v203;
      *(_QWORD *)(v197 + 16) = 0x8000000000000000;
      if (!v202)
      {
        sub_21C55CAE0(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0);
        v203 = (uint64_t)v314;
      }

      sub_21C52AAD4(*(_QWORD *)(v203 + 56) + *(_QWORD *)(v28 + 72) * v198, v201, type metadata accessor for MarkerAnnotationViewModel);
      sub_21C55B8B0(v198, v203, type metadata accessor for MarkerAnnotationViewModel);
      *(_QWORD *)(v197 + 16) = v203;
      swift_bridgeObjectRelease();
      v165 = 0;
    }
    else
    {
      v165 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v201, v165, 1, v27);
    sub_21C524980(v201, &qword_255288CC0);
    v195(&aBlock, 0);

    sub_21C52A88C((uint64_t)v309, type metadata accessor for MarkerAnnotationViewModel);
    v164 = v174;
    v163 = v313;
  }
  v175 = *(_QWORD *)(v305 + 8 * v176);
  if (v175)
  {
LABEL_78:
    v167 = v176;
LABEL_75:
    v313 = (v175 - 1) & v175;
    v166 = __clz(__rbit64(v175)) + (v167 << 6);
    goto LABEL_71;
  }
  while (1)
  {
    v167 = v176 + 1;
    if (__OFADD__(v176, 1))
      break;
    if (v167 >= v306)
    {
      v174 = v302;
      goto LABEL_89;
    }
    v175 = *(_QWORD *)(v305 + 8 * v167);
    ++v176;
    if (v175)
      goto LABEL_75;
  }
  __break(1u);
LABEL_142:
  sub_21C5E3DF0();
  __break(1u);
LABEL_143:
  type metadata accessor for MapBridgingMarker();
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

uint64_t sub_21C549CD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t *, _QWORD);
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  _QWORD *v60;
  unint64_t v61;
  char v62;
  id v63;
  id v64;
  id v65;
  _QWORD *v66;
  unint64_t v67;
  uint64_t v68;
  char v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  objc_class *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  id v85;
  char *v86;
  char *v87;
  void *v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unsigned int (*v97)(uint64_t, uint64_t, uint64_t);
  void *v98;
  double *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  id v104;
  id v105;
  uint64_t v106;
  double v107;
  double v108;
  void *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  void *v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  char *v129;
  uint64_t v130;
  uint64_t (*v131)();
  uint64_t v132;
  unint64_t v133;
  char v134;
  char v135;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v140;
  id v141;
  id v142;
  void (*v143)(uint64_t *, _QWORD);
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  char v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  int64_t v164;
  uint64_t v165;
  unint64_t v166;
  int64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  _QWORD *v174;
  unint64_t v175;
  int64_t v176;
  uint64_t v177;
  void **v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  id v184;
  void (*v185)(uint64_t *, _QWORD);
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  char v189;
  char v190;
  char v191;
  uint64_t v192;
  void *v193;
  id v194;
  void (*v195)(uint64_t *, _QWORD);
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  char v199;
  char v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  unint64_t v206;
  uint64_t result;
  double *v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  double *v213;
  uint64_t v214;
  void **v215;
  void *v216;
  uint64_t v217;
  uint64_t v218;
  id v219;
  id v220;
  void (*v221)(uint64_t *, _QWORD);
  uint64_t v222;
  uint64_t v223;
  char v224;
  _QWORD *v225;
  char v226;
  unint64_t v227;
  uint64_t v228;
  _BOOL8 v229;
  uint64_t v230;
  char v231;
  unint64_t v232;
  char v233;
  _QWORD *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  BOOL v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  void (*v243)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v244;
  id v245;
  id v246;
  void (*v247)(uint64_t *, _QWORD);
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  char v251;
  char v252;
  int v253;
  uint64_t v254;
  int v255;
  _QWORD *v256;
  char v257;
  unint64_t v258;
  uint64_t v259;
  _BOOL8 v260;
  uint64_t v261;
  char v262;
  unint64_t v263;
  char v264;
  _QWORD *v265;
  uint64_t v266;
  uint64_t v267;
  id v268;
  unint64_t v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  unint64_t v273;
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void *v280;
  uint64_t v281;
  uint64_t (*v282)();
  uint64_t (*v283)();
  unsigned int (*v284)(uint64_t, uint64_t, uint64_t);
  id v285;
  _QWORD *v286;
  _QWORD *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  void (*v293)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  void **v299;
  uint64_t v300;
  char *v301;
  void **v302;
  _QWORD *v303;
  uint64_t v304;
  uint64_t v305;
  int64_t v306;
  unint64_t v307;
  uint64_t v308;
  uint64_t *v309;
  uint64_t v310;
  id v311;
  uint64_t v312;
  double *v313;
  _QWORD *v314;
  uint64_t v315;
  uint64_t v316;
  __int128 v317;
  uint64_t aBlock;
  uint64_t v319;
  _QWORD *v320;
  _QWORD *v321;
  uint64_t (*v322)();
  uint64_t v323;
  objc_super v324;

  v281 = a4;
  v280 = a1;
  v295 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CF8);
  v296 = *(_QWORD *)(v295 - 8);
  v8 = MEMORY[0x24BDAC7A8](v295);
  v10 = (char *)&v270 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v299 = (void **)((char *)&v270 - v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D00);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v270 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v279 = (uint64_t)&v270 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v278 = (uint64_t)&v270 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v290 = (uint64_t)&v270 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v292 = (uint64_t)&v270 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v298 = (uint64_t)&v270 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v301 = (char *)&v270 - v26;
  v27 = type metadata accessor for CustomAnnotationViewModel(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v272 = (uint64_t)&v270 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v288 = (uint64_t)&v270 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v277 = (uint64_t)&v270 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v289 = (uint64_t)&v270 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = (uint64_t *)((char *)&v270 - v38);
  v40 = MEMORY[0x24BDAC7A8](v37);
  v297 = (uint64_t)&v270 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v309 = (uint64_t *)((char *)&v270 - v42);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D08);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v303 = (uint64_t *)((char *)&v270 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v44);
  v302 = (void **)((char *)&v270 - v46);
  *(_QWORD *)&v317 = v5;
  v311 = v5;
  v312 = a5;
  v47 = (void (*)(uint64_t *, _QWORD))swift_readAtKeyPath();
  v304 = *(_QWORD *)(v48 + 16);
  swift_bridgeObjectRetain();
  v47(&aBlock, 0);

  v49 = *(_QWORD *)(a2 + 16);
  v308 = v27;
  v310 = v28;
  if (v49)
  {
    v50 = *(unsigned __int8 *)(v28 + 80);
    v51 = a2 + ((v50 + 32) & ~v50);
    v300 = *(_QWORD *)(v28 + 72);
    v275 = v50 | 7;
    v276 = (v50 + 24) & ~v50;
    v274 = (v29 + v276 + 7) & 0xFFFFFFFFFFFFFFF8;
    v273 = v274 + 40;
    v270 = a2;
    swift_bridgeObjectRetain();
    v286 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v307 = MEMORY[0x24BEE4AF8];
    v287 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v294 = v10;
    v271 = v15;
    v313 = (double *)v39;
    while (1)
    {
      v306 = v49;
      v305 = v51;
      sub_21C529664(v51, (uint64_t)v39, type metadata accessor for CustomAnnotationViewModel);
      v58 = *v39;
      *(_QWORD *)&v317 = v311;
      v59 = v311;
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      v60 = v321;
      if (v321[2] && (v61 = sub_21C530FA8(v58), (v62 & 1) != 0))
      {
        v63 = *(id *)(v60[7] + 8 * v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v317 = v59;
        v64 = v59;
        v65 = v63;
        swift_getAtKeyPath();

        v66 = v320;
        if (v320[2])
        {
          v67 = sub_21C531130((uint64_t)v65);
          v68 = v290;
          if ((v69 & 1) != 0)
          {
            sub_21C529664(v66[7] + v67 * v300, v290, type metadata accessor for CustomAnnotationViewModel);
            v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
            v71 = v68;
            v72 = 0;
          }
          else
          {
            v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
            v71 = v290;
            v72 = 1;
          }
          v293 = v70;
          v70(v71, v72, 1, v27);
        }
        else
        {
          v68 = v290;
          v293 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
          v293(v290, 1, 1, v27);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v97 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
        if (v97(v68, 1, v27) != 1)
        {
          v284 = v97;
          v285 = v64;
          sub_21C52AAD4(v68, v289, type metadata accessor for CustomAnnotationViewModel);
          v321 = (_QWORD *)sub_21C531A4C(0, &qword_255288BE8);
          v322 = (uint64_t (*)())&off_24E057A88;
          v98 = v280;
          aBlock = (uint64_t)v280;
          v99 = v313;
          v100 = v277;
          sub_21C529664((uint64_t)v313, v277, type metadata accessor for CustomAnnotationViewModel);
          sub_21C560FD4((uint64_t)&aBlock, (uint64_t)&v317);
          v101 = v288;
          sub_21C529664(v100, v288, type metadata accessor for CustomAnnotationViewModel);
          sub_21C560FD4((uint64_t)&v317, (uint64_t)&v314);
          v102 = swift_allocObject();
          *(_QWORD *)(v102 + 16) = v65;
          sub_21C52AAD4(v100, v102 + v276, type metadata accessor for CustomAnnotationViewModel);
          sub_21C56101C(&v317, v102 + v274);
          v103 = v98;
          v104 = v65;
          v105 = v103;
          v106 = v281;
          if (!v281)
            goto LABEL_26;
          swift_retain();
          objc_msgSend(v104, sel_coordinate);
          if (vabdd_f64(v108, v99[7]) >= 0.00000000999999994 || vabdd_f64(v107, v99[8]) >= 0.00000000999999994)
          {
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v314);
            sub_21C52A88C(v101, type metadata accessor for CustomAnnotationViewModel);
            v110 = (_QWORD *)swift_allocObject();
            v110[2] = sub_21C561764;
            v110[3] = v102;
            v110[4] = v106;
            v111 = swift_allocObject();
            *(_QWORD *)(v111 + 16) = sub_21C561764;
            *(_QWORD *)(v111 + 24) = v102;
            v291 = v111;
            swift_retain();
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

            v112 = swift_allocObject();
            *(_QWORD *)(v112 + 16) = sub_21C561420;
            *(_QWORD *)(v112 + 24) = v110;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v286 = sub_21C5B8580(0, v286[2] + 1, 1, v286);
            v114 = v286[2];
            v113 = v286[3];
            if (v114 >= v113 >> 1)
              v286 = sub_21C5B8580((_QWORD *)(v113 > 1), v114 + 1, 1, v286);
            v115 = v110;
            v116 = v286;
            v286[2] = v114 + 1;
            v117 = &v116[2 * v114];
            v117[4] = sub_21C562160;
            v117[5] = v112;
            v118 = swift_allocObject();
            *(_QWORD *)(v118 + 16) = sub_21C56142C;
            *(_QWORD *)(v118 + 24) = v291;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v287 = sub_21C5B8580(0, v287[2] + 1, 1, v287);
            v120 = v287[2];
            v119 = v287[3];
            if (v120 >= v119 >> 1)
              v287 = sub_21C5B8580((_QWORD *)(v119 > 1), v120 + 1, 1, v287);
            v121 = v287;
            v287[2] = v120 + 1;
            v122 = &v121[2 * v120];
            v122[4] = sub_21C562160;
            v122[5] = v118;
            v283 = sub_21C561420;
            v282 = sub_21C56142C;
          }
          else
          {
            swift_release();
LABEL_26:
            objc_msgSend(v104, sel_setCoordinate_, *(double *)(v101 + 56), *(double *)(v101 + 64));
            if (*(_QWORD *)(v101 + 16))
              v109 = (void *)sub_21C5E3940();
            else
              v109 = 0;
            objc_msgSend(v104, sel_setTitle_, v109);

            v123 = *(_QWORD *)(v101 + 32);
            v283 = (uint64_t (*)())v105;
            if (v123)
              v124 = (void *)sub_21C5E3940();
            else
              v124 = 0;
            objc_msgSend(v104, sel_setSubtitle_, v124);

            v125 = v315;
            v126 = v316;
            __swift_project_boxed_opaque_existential_1(&v314, v315);
            v127 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v126 + 24))(v104, v125, v126);
            if (v127)
            {
              v128 = (void *)v127;
              type metadata accessor for SwiftUIAnnotationView();
              v129 = (char *)swift_dynamicCastClass();
              v130 = v288;
              v131 = v283;
              if (v129)
              {
                sub_21C568604(v129, 0);
                v130 = v288;
              }
              swift_release();

            }
            else
            {
              swift_release();
              v130 = v288;
              v131 = v283;
            }
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v314);
            sub_21C52A88C(v130, type metadata accessor for CustomAnnotationViewModel);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

            v283 = 0;
            v115 = 0;
            v282 = 0;
            v291 = 0;
          }
          v132 = v304;
          swift_bridgeObjectRetain();
          v133 = sub_21C531130((uint64_t)v104);
          v135 = v134;
          swift_bridgeObjectRelease();
          if ((v135 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            aBlock = v132;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_21C55CAE0(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20);
              v132 = aBlock;
            }

            v137 = v278;
            sub_21C52AAD4(*(_QWORD *)(v132 + 56) + v133 * v300, v278, type metadata accessor for CustomAnnotationViewModel);
            v304 = v132;
            sub_21C55B8B0(v133, v132, type metadata accessor for CustomAnnotationViewModel);
            swift_bridgeObjectRelease();
            v138 = 0;
          }
          else
          {
            v138 = 1;
            v137 = v278;
          }
          v139 = v293;
          v293(v137, v138, 1, v27);
          sub_21C524980(v137, &qword_255288D00);
          v140 = v279;
          sub_21C529664((uint64_t)v313, v279, type metadata accessor for CustomAnnotationViewModel);
          v139(v140, 0, 1, v27);
          *(_QWORD *)&v317 = v285;
          v141 = v285;
          v142 = v104;
          v143 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v145 = v144;
          if (v284(v140, 1, v27) == 1)
          {
            v285 = v115;
            sub_21C524980(v140, &qword_255288D00);
            swift_bridgeObjectRetain();
            v146 = sub_21C531130((uint64_t)v142);
            v148 = v147;
            swift_bridgeObjectRelease();
            if ((v148 & 1) != 0)
            {
              v149 = swift_isUniquelyReferenced_nonNull_native();
              v150 = *(_QWORD *)(v145 + 16);
              v314 = (_QWORD *)v150;
              *(_QWORD *)(v145 + 16) = 0x8000000000000000;
              if ((v149 & 1) == 0)
              {
                sub_21C55CAE0(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20);
                v150 = (uint64_t)v314;
              }

              v151 = (uint64_t)v271;
              sub_21C52AAD4(*(_QWORD *)(v150 + 56) + v146 * v300, (uint64_t)v271, type metadata accessor for CustomAnnotationViewModel);
              sub_21C55B8B0(v146, v150, type metadata accessor for CustomAnnotationViewModel);
              *(_QWORD *)(v145 + 16) = v150;
              swift_bridgeObjectRelease();
              v152 = 0;
            }
            else
            {
              v152 = 1;
              v151 = (uint64_t)v271;
            }
            v293(v151, v152, 1, v27);

            sub_21C524980(v151, &qword_255288D00);
            v54 = v306;
            v55 = v305;
          }
          else
          {
            v52 = v272;
            sub_21C52AAD4(v140, v272, type metadata accessor for CustomAnnotationViewModel);
            v53 = swift_isUniquelyReferenced_nonNull_native();
            v314 = *(_QWORD **)(v145 + 16);
            *(_QWORD *)(v145 + 16) = 0x8000000000000000;
            sub_21C55D460(v52, v142, v53, (uint64_t (*)(void *))sub_21C531130, type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20, (void (*)(_QWORD))type metadata accessor for MapBridgingCustomAnnotation);
            *(_QWORD *)(v145 + 16) = v314;

            swift_bridgeObjectRelease();
            v54 = v306;
            v55 = v305;
          }
          v56 = (uint64_t)v283;
          v57 = (uint64_t)v282;
          v143(&aBlock, 0);
          sub_21C531A9C(v57);
          sub_21C531A9C(v56);

          sub_21C52A88C(v289, type metadata accessor for CustomAnnotationViewModel);
          v39 = (uint64_t *)v313;
          sub_21C52A88C((uint64_t)v313, type metadata accessor for CustomAnnotationViewModel);
          goto LABEL_5;
        }

        sub_21C524980(v68, &qword_255288D00);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v73 = *((_QWORD *)v313 + 1);
      v74 = *((_QWORD *)v313 + 2);
      v75 = *((_QWORD *)v313 + 3);
      v76 = *((_QWORD *)v313 + 4);
      v77 = *((_QWORD *)v313 + 7);
      v78 = *((_QWORD *)v313 + 8);
      v79 = (void *)*((_QWORD *)v313 + 5);
      v80 = (objc_class *)type metadata accessor for MapBridgingCustomAnnotation();
      v81 = (char *)objc_allocWithZone(v80);
      v82 = &v81[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_title];
      *(_QWORD *)v82 = 0;
      *((_QWORD *)v82 + 1) = 0;
      v83 = &v81[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_subtitle];
      *(_QWORD *)v83 = 0;
      *((_QWORD *)v83 + 1) = 0;
      v84 = OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_mapItem;
      *(_QWORD *)&v81[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_mapItem] = 0;
      *(_QWORD *)v82 = v73;
      *((_QWORD *)v82 + 1) = v74;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v85 = v79;
      v86 = v81;
      swift_bridgeObjectRelease();
      *(_QWORD *)v83 = v75;
      *((_QWORD *)v83 + 1) = v76;
      swift_bridgeObjectRelease();
      v87 = &v86[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_coordinate];
      *(_QWORD *)v87 = v77;
      *((_QWORD *)v87 + 1) = v78;
      v88 = *(void **)&v81[v84];
      *(_QWORD *)&v81[v84] = v79;
      v89 = v85;

      v324.receiver = v86;
      v324.super_class = v80;
      v39 = (uint64_t *)v313;
      v90 = objc_msgSendSuper2(&v324, sel_init);

      v91 = (uint64_t)v294;
      v92 = (uint64_t)v294 + *(int *)(v295 + 48);
      *v294 = v90;
      sub_21C529664((uint64_t)v39, v92, type metadata accessor for CustomAnnotationViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v93 = v307;
      else
        v93 = sub_21C5B92C4(0, *(_QWORD *)(v307 + 16) + 1, 1, v307);
      v95 = *(_QWORD *)(v93 + 16);
      v94 = *(_QWORD *)(v93 + 24);
      v27 = v308;
      v28 = v310;
      if (v95 >= v94 >> 1)
        v93 = sub_21C5B92C4(v94 > 1, v95 + 1, 1, v93);
      *(_QWORD *)(v93 + 16) = v95 + 1;
      v96 = (*(unsigned __int8 *)(v296 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v296 + 80);
      v307 = v93;
      sub_21C52DB08(v91, v93 + v96 + *(_QWORD *)(v296 + 72) * v95, &qword_255288CF8);
      sub_21C52A88C((uint64_t)v39, type metadata accessor for CustomAnnotationViewModel);
      v54 = v306;
      v55 = v305;
LABEL_5:
      v51 = v55 + v300;
      v49 = v54 - 1;
      if (!v49)
      {
        swift_bridgeObjectRelease();
        goto LABEL_62;
      }
    }
  }
  v286 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v307 = MEMORY[0x24BEE4AF8];
  v287 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_62:
  v153 = v304;
  if (v281)
  {
    v154 = (void *)objc_opt_self();
    v155 = swift_allocObject();
    *(_QWORD *)(v155 + 16) = v286;
    v322 = sub_21C5620F8;
    v323 = v155;
    v156 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v319 = 1107296256;
    v320 = sub_21C558F28;
    v321 = &block_descriptor_203;
    v157 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    v158 = swift_allocObject();
    *(_QWORD *)(v158 + 16) = v287;
    v322 = sub_21C561FAC;
    v323 = v158;
    aBlock = v156;
    v319 = 1107296256;
    v320 = sub_21C558F54;
    v321 = &block_descriptor_210;
    v159 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v154, sel_animateWithDuration_animations_completion_, v157, v159, 0.25);
    v153 = v304;
    _Block_release(v159);
    _Block_release(v157);
  }
  v160 = *(_QWORD *)(v153 + 64);
  v305 = v153 + 64;
  v161 = -1;
  v162 = -1 << *(_BYTE *)(v153 + 32);
  v300 = ~v162;
  if (-v162 < 64)
    v161 = ~(-1 << -(char)v162);
  v163 = v161 & v160;
  v306 = (unint64_t)(63 - v162) >> 6;
  v294 = (_QWORD *)(v306 - 1);
  swift_bridgeObjectRetain();
  v164 = 0;
  while (1)
  {
    if (v163)
    {
      v313 = (double *)((v163 - 1) & v163);
      v166 = __clz(__rbit64(v163)) | (v164 << 6);
      v167 = v164;
LABEL_71:
      v168 = *(_QWORD *)(v304 + 56);
      v169 = *(void **)(*(_QWORD *)(v304 + 48) + 8 * v166);
      v170 = (uint64_t)v303;
      *v303 = v169;
      v171 = v168 + *(_QWORD *)(v28 + 72) * v166;
      v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D10);
      sub_21C529664(v171, v170 + *(int *)(v172 + 48), type metadata accessor for CustomAnnotationViewModel);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v172 - 8) + 56))(v170, 0, 1, v172);
      v173 = v169;
      v174 = (_QWORD *)v167;
      goto LABEL_90;
    }
    v167 = v164 + 1;
    if (__OFADD__(v164, 1))
      goto LABEL_136;
    v174 = (_QWORD *)v164;
    if (v167 < v306)
    {
      v175 = *(_QWORD *)(v305 + 8 * v167);
      if (v175)
        goto LABEL_75;
      v176 = v164 + 2;
      v174 = (_QWORD *)(v164 + 1);
      if (v164 + 2 < v306)
      {
        v175 = *(_QWORD *)(v305 + 8 * v176);
        if (v175)
          goto LABEL_78;
        v174 = (_QWORD *)(v164 + 2);
        if (v164 + 3 < v306)
        {
          v175 = *(_QWORD *)(v305 + 8 * (v164 + 3));
          if (v175)
          {
            v167 = v164 + 3;
            goto LABEL_75;
          }
          v176 = v164 + 4;
          v174 = (_QWORD *)(v164 + 3);
          if (v164 + 4 < v306)
            break;
        }
      }
    }
LABEL_89:
    v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D10);
    v170 = (uint64_t)v303;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 56))(v303, 1, 1, v177);
    v313 = 0;
LABEL_90:
    v178 = v302;
    sub_21C52DB08(v170, (uint64_t)v302, &qword_255288D08);
    v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D10);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v179 - 8) + 48))(v178, 1, v179) == 1)
    {
      sub_21C52A884();
      v204 = swift_bridgeObjectRetain();
      v205 = sub_21C559098(v204);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v205 >> 62)
        goto LABEL_140;
      swift_bridgeObjectRetain();
      sub_21C5E3DD8();
      sub_21C531A4C(0, (unint64_t *)&qword_255289570);
      v206 = v205;
      while (1)
      {
        swift_bridgeObjectRelease();
        sub_21C5589DC(v206);
        swift_bridgeObjectRelease();
        result = v307;
        v208 = *(double **)(v307 + 16);
        if (!v208)
          return result;
        v209 = (uint64_t *)((char *)v299 + *(int *)(v295 + 48));
        v210 = v307 + ((*(unsigned __int8 *)(v296 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v296 + 80));
        v306 = *(_QWORD *)(v296 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          v313 = v208;
          v309 = (uint64_t *)v210;
          v215 = v299;
          sub_21C531B18(v210, (uint64_t)v299, &qword_255288CF8);
          v216 = *v215;
          v217 = (uint64_t)v209;
          v218 = *v209;
          *(_QWORD *)&v317 = v311;
          v219 = v311;
          swift_bridgeObjectRetain();
          v220 = v216;
          v221 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v223 = v222;
          v224 = swift_isUniquelyReferenced_nonNull_native();
          v314 = *(_QWORD **)(v223 + 24);
          v225 = v314;
          *(_QWORD *)(v223 + 24) = 0x8000000000000000;
          v227 = sub_21C530FA8(v218);
          v228 = v225[2];
          v229 = (v226 & 1) == 0;
          v230 = v228 + v229;
          if (__OFADD__(v228, v229))
            break;
          v231 = v226;
          if (v225[3] >= v230)
          {
            if ((v224 & 1) == 0)
              sub_21C55CD08(&qword_255288D18);
          }
          else
          {
            sub_21C55AFC8(v230, v224, &qword_255288D18);
            v232 = sub_21C530FA8(v218);
            if ((v231 & 1) != (v233 & 1))
              goto LABEL_142;
            v227 = v232;
          }
          v234 = v314;
          if ((v231 & 1) != 0)
          {
            v235 = v314[7];
            v236 = 8 * v227;

            *(_QWORD *)(v235 + v236) = v220;
          }
          else
          {
            v314[(v227 >> 6) + 8] |= 1 << v227;
            v237 = 8 * v227;
            *(_QWORD *)(v234[6] + v237) = v218;
            *(_QWORD *)(v234[7] + v237) = v220;
            v238 = v234[2];
            v239 = __OFADD__(v238, 1);
            v240 = v238 + 1;
            if (v239)
              goto LABEL_137;
            v234[2] = v240;
            swift_bridgeObjectRetain();
          }
          *(_QWORD *)(v223 + 24) = v234;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v221(&aBlock, 0);

          v209 = (uint64_t *)v217;
          v241 = v298;
          sub_21C529664(v217, v298, type metadata accessor for CustomAnnotationViewModel);
          v242 = v310;
          v243 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v310 + 56);
          v244 = v308;
          v243(v241, 0, 1, v308);
          *(_QWORD *)&v317 = v219;
          v245 = v219;
          v246 = v220;
          v247 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v249 = v248;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v242 + 48))(v241, 1, v244) == 1)
          {
            sub_21C524980(v241, &qword_255288D00);
            swift_bridgeObjectRetain();
            v250 = sub_21C531130((uint64_t)v246);
            v252 = v251;
            swift_bridgeObjectRelease();
            if ((v252 & 1) != 0)
            {
              v253 = swift_isUniquelyReferenced_nonNull_native();
              v254 = *(_QWORD *)(v249 + 16);
              v314 = (_QWORD *)v254;
              *(_QWORD *)(v249 + 16) = 0x8000000000000000;
              if (!v253)
              {
                sub_21C55CAE0(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20);
                v254 = (uint64_t)v314;
              }

              v212 = v292;
              sub_21C52AAD4(*(_QWORD *)(v254 + 56) + *(_QWORD *)(v242 + 72) * v250, v292, type metadata accessor for CustomAnnotationViewModel);
              sub_21C55B8B0(v250, v254, type metadata accessor for CustomAnnotationViewModel);
              *(_QWORD *)(v249 + 16) = v254;
              swift_bridgeObjectRelease();
              v211 = 0;
            }
            else
            {
              v211 = 1;
              v212 = v292;
            }
            v243(v212, v211, 1, v308);

            sub_21C524980(v212, &qword_255288D00);
          }
          else
          {
            sub_21C52AAD4(v241, v297, type metadata accessor for CustomAnnotationViewModel);
            v255 = swift_isUniquelyReferenced_nonNull_native();
            v314 = *(_QWORD **)(v249 + 16);
            v256 = v314;
            *(_QWORD *)(v249 + 16) = 0x8000000000000000;
            v258 = sub_21C531130((uint64_t)v246);
            v259 = v256[2];
            v260 = (v257 & 1) == 0;
            v261 = v259 + v260;
            if (__OFADD__(v259, v260))
              goto LABEL_138;
            v262 = v257;
            if (v256[3] >= v261)
            {
              if ((v255 & 1) == 0)
                sub_21C55CAE0(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20);
            }
            else
            {
              sub_21C55AC7C(v261, v255, type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20);
              v263 = sub_21C531130((uint64_t)v246);
              if ((v262 & 1) != (v264 & 1))
                goto LABEL_143;
              v258 = v263;
            }
            v265 = v314;
            if ((v262 & 1) != 0)
            {
              sub_21C56171C(v297, v314[7] + *(_QWORD *)(v242 + 72) * v258, type metadata accessor for CustomAnnotationViewModel);
            }
            else
            {
              v314[(v258 >> 6) + 8] |= 1 << v258;
              *(_QWORD *)(v265[6] + 8 * v258) = v246;
              sub_21C52AAD4(v297, v265[7] + *(_QWORD *)(v242 + 72) * v258, type metadata accessor for CustomAnnotationViewModel);
              v266 = v265[2];
              v239 = __OFADD__(v266, 1);
              v267 = v266 + 1;
              if (v239)
                goto LABEL_139;
              v265[2] = v267;
              v268 = v246;
            }
            *(_QWORD *)(v249 + 16) = v265;

            swift_bridgeObjectRelease();
          }
          v213 = v313;
          v214 = (uint64_t)v309;
          v247(&aBlock, 0);

          sub_21C52A88C(v217, type metadata accessor for CustomAnnotationViewModel);
          v210 = v214 + v306;
          v208 = (double *)((char *)v213 - 1);
          if (!v208)
          {
            v269 = v307;
            swift_bridgeObjectRelease();
            return v269;
          }
        }
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        sub_21C531A4C(0, (unint64_t *)&qword_255289570);
        swift_bridgeObjectRetain();
        v206 = sub_21C5E3D54();
        swift_bridgeObjectRelease();
      }
    }
    v180 = *v178;
    v181 = (uint64_t)v178 + *(int *)(v179 + 48);
    v182 = v309;
    sub_21C52AAD4(v181, (uint64_t)v309, type metadata accessor for CustomAnnotationViewModel);
    v183 = *v182;
    *(_QWORD *)&v317 = v311;
    v184 = v311;
    swift_bridgeObjectRetain();
    v185 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v187 = v186;
    swift_bridgeObjectRetain();
    v188 = sub_21C530FA8(v183);
    v190 = v189;
    swift_bridgeObjectRelease();
    if ((v190 & 1) != 0)
    {
      v191 = swift_isUniquelyReferenced_nonNull_native();
      v192 = *(_QWORD *)(v187 + 24);
      v314 = (_QWORD *)v192;
      *(_QWORD *)(v187 + 24) = 0x8000000000000000;
      if ((v191 & 1) == 0)
      {
        sub_21C55CD08(&qword_255288D18);
        v192 = (uint64_t)v314;
      }
      swift_bridgeObjectRelease();
      v193 = *(void **)(*(_QWORD *)(v192 + 56) + 8 * v188);
      sub_21C55BA94(v188, v192);
      *(_QWORD *)(v187 + 24) = v192;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 = v308;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v185(&aBlock, 0);

    *(_QWORD *)&v317 = v184;
    v194 = v184;
    v195 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v197 = v196;
    swift_bridgeObjectRetain();
    v198 = sub_21C531130((uint64_t)v180);
    v200 = v199;
    swift_bridgeObjectRelease();
    v28 = v310;
    v201 = (uint64_t)v301;
    if ((v200 & 1) != 0)
    {
      v202 = swift_isUniquelyReferenced_nonNull_native();
      v203 = *(_QWORD *)(v197 + 16);
      v314 = (_QWORD *)v203;
      *(_QWORD *)(v197 + 16) = 0x8000000000000000;
      if (!v202)
      {
        sub_21C55CAE0(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20);
        v203 = (uint64_t)v314;
      }

      sub_21C52AAD4(*(_QWORD *)(v203 + 56) + *(_QWORD *)(v28 + 72) * v198, v201, type metadata accessor for CustomAnnotationViewModel);
      sub_21C55B8B0(v198, v203, type metadata accessor for CustomAnnotationViewModel);
      *(_QWORD *)(v197 + 16) = v203;
      swift_bridgeObjectRelease();
      v165 = 0;
    }
    else
    {
      v165 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v201, v165, 1, v27);
    sub_21C524980(v201, &qword_255288D00);
    v195(&aBlock, 0);

    sub_21C52A88C((uint64_t)v309, type metadata accessor for CustomAnnotationViewModel);
    v164 = (int64_t)v174;
    v163 = (unint64_t)v313;
  }
  v175 = *(_QWORD *)(v305 + 8 * v176);
  if (v175)
  {
LABEL_78:
    v167 = v176;
LABEL_75:
    v313 = (double *)((v175 - 1) & v175);
    v166 = __clz(__rbit64(v175)) + (v167 << 6);
    goto LABEL_71;
  }
  while (1)
  {
    v167 = v176 + 1;
    if (__OFADD__(v176, 1))
      break;
    if (v167 >= v306)
    {
      v174 = v294;
      goto LABEL_89;
    }
    v175 = *(_QWORD *)(v305 + 8 * v167);
    ++v176;
    if (v175)
      goto LABEL_75;
  }
  __break(1u);
LABEL_142:
  sub_21C5E3DF0();
  __break(1u);
LABEL_143:
  type metadata accessor for MapBridgingCustomAnnotation();
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

uint64_t sub_21C54BAF8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(_BYTE *, _QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  double v47;
  double v48;
  double v49;
  double v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t (*v56)();
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  id v84;
  id v85;
  void (*v86)(__int128 *, _QWORD);
  uint64_t v87;
  uint64_t v88;
  char v89;
  id v90;
  id v91;
  unint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  uint64_t v131;
  _QWORD *v132;
  id v133;
  void (*v134)(_OWORD *, _QWORD);
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  char v139;
  char v140;
  _QWORD *v141;
  void *v142;
  _QWORD *v143;
  void (*v144)(id *, _QWORD);
  uint64_t v145;
  uint64_t v146;
  void *v147;
  unint64_t v148;
  char v149;
  char v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  _QWORD *v156;
  void *v157;
  uint64_t v158;
  uint64_t v159;
  _OWORD *v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  void *v167;
  uint64_t v168;
  id v169;
  id v170;
  void (*v171)(_BYTE *, _QWORD);
  uint64_t v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  char v176;
  unint64_t v177;
  uint64_t v178;
  _BOOL8 v179;
  uint64_t v180;
  char v181;
  unint64_t v182;
  char v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  BOOL v188;
  uint64_t v189;
  id v190;
  id v191;
  uint64_t v192;
  void (*v193)(__int128 *, _QWORD);
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  char v198;
  unint64_t v199;
  uint64_t v200;
  _BOOL8 v201;
  uint64_t v202;
  char v203;
  unint64_t v204;
  char v205;
  _QWORD *v206;
  uint64_t v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  uint64_t v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  uint64_t v227;
  uint64_t v228;
  id v229;
  uint64_t result;
  _QWORD v231[2];
  uint64_t v232;
  id v233;
  _QWORD *v234;
  _QWORD *v235;
  uint64_t v236;
  char *v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t v240;
  id v241;
  void *v242;
  char *v243;
  uint64_t v244;
  _OWORD v245[8];
  uint64_t v246;
  uint64_t v247;
  id v248[4];
  _QWORD *v249;
  _OWORD v250[8];
  uint64_t v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  uint64_t v260;
  _BYTE v261[136];
  uint64_t v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  uint64_t v271;
  _BYTE v272[144];
  _OWORD v273[2];
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  uint64_t v280;
  _BYTE v281[40];
  double v282;
  double v283;
  double v284;
  double v285;
  char v286;
  double v287;
  double v288;
  double v289;
  double v290;
  char v291;

  v233 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288BC8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v231 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v261 = v5;
  v241 = v5;
  v244 = a5;
  v13 = (void (*)(_BYTE *, _QWORD))swift_readAtKeyPath();
  v15 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRetain();
  v13(v272, 0);

  v16 = *(_QWORD *)(a2 + 16);
  if (v16)
  {
    v237 = v12;
    v239 = v15;
    v240 = a3;
    v242 = (void *)a4;
    v17 = (char *)v273 + 8;
    swift_bridgeObjectRetain();
    v18 = v16 - 1;
    v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v20 = 32;
    v234 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v235 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v243 = (char *)v273 + 8;
    while (1)
    {
      v21 = *(_OWORD *)(a2 + v20 + 80);
      v22 = *(_OWORD *)(a2 + v20 + 112);
      v278 = *(_OWORD *)(a2 + v20 + 96);
      v279 = v22;
      v23 = *(_OWORD *)(a2 + v20 + 16);
      v24 = *(_OWORD *)(a2 + v20 + 48);
      v274 = *(_OWORD *)(a2 + v20 + 32);
      v275 = v24;
      v25 = *(_OWORD *)(a2 + v20 + 48);
      v26 = *(_OWORD *)(a2 + v20 + 80);
      v276 = *(_OWORD *)(a2 + v20 + 64);
      v277 = v26;
      v27 = *(_OWORD *)(a2 + v20 + 16);
      v273[0] = *(_OWORD *)(a2 + v20);
      v273[1] = v27;
      v28 = *(_OWORD *)(a2 + v20 + 112);
      *(_OWORD *)&v272[96] = v278;
      *(_OWORD *)&v272[112] = v28;
      *(_OWORD *)&v272[32] = v274;
      *(_OWORD *)&v272[48] = v25;
      *(_OWORD *)&v272[64] = v276;
      *(_OWORD *)&v272[80] = v21;
      v280 = *(_QWORD *)(a2 + v20 + 128);
      *(_QWORD *)&v272[128] = *(_QWORD *)(a2 + v20 + 128);
      *(_OWORD *)v272 = v273[0];
      *(_OWORD *)&v272[16] = v23;
      sub_21C560EF0((uint64_t)v17, (uint64_t)v281);
      v29 = *(_QWORD *)&v273[0];
      *(_QWORD *)&v263 = v241;
      v30 = v241;
      sub_21C560F2C((uint64_t)v273);
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      v31 = *(_QWORD *)&v261[24];
      if (!*(_QWORD *)(*(_QWORD *)&v261[24] + 16))
        break;
      v32 = sub_21C530FA8(v29);
      if ((v33 & 1) == 0)
        break;
      v238 = v19;
      v34 = *(id *)(*(_QWORD *)(v31 + 56) + 8 * v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v250[0] = v30;
      v35 = v30;
      v36 = v34;
      swift_getAtKeyPath();

      v37 = v253;
      if (!*(_QWORD *)(v253 + 16) || (v38 = sub_21C530F5C((uint64_t)v36), (v39 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_39;
      }
      v40 = *(_QWORD *)(v37 + 56) + 136 * v38;
      *(_OWORD *)v261 = *(_OWORD *)v40;
      v41 = *(_OWORD *)(v40 + 48);
      v42 = *(_OWORD *)(v40 + 64);
      v43 = *(_OWORD *)(v40 + 32);
      *(_OWORD *)&v261[16] = *(_OWORD *)(v40 + 16);
      *(_OWORD *)&v261[32] = v43;
      *(_OWORD *)&v261[48] = v41;
      *(_OWORD *)&v261[64] = v42;
      v44 = *(_OWORD *)(v40 + 80);
      v45 = *(_OWORD *)(v40 + 96);
      v46 = *(_OWORD *)(v40 + 112);
      *(_QWORD *)&v261[128] = *(_QWORD *)(v40 + 128);
      *(_OWORD *)&v261[96] = v45;
      *(_OWORD *)&v261[112] = v46;
      *(_OWORD *)&v261[80] = v44;
      sub_21C560F2C((uint64_t)v261);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v47 = *(double *)&v261[8];
      v48 = *(double *)&v261[16];
      v49 = *(double *)&v261[24];
      v50 = *(double *)&v261[32];
      v51 = v261[40];
      sub_21C560EF0((uint64_t)v281, (uint64_t)&v287);
      if ((v291 & 1) != 0)
      {
        if (!v51 || v287 != v47 || v288 != v48 || v289 != v49 || v290 != v50)
          goto LABEL_38;
      }
      else if ((v51 & 1) != 0 || v287 != v47 || v288 != v48 || v289 != v49)
      {
LABEL_38:
        sub_21C560E74((uint64_t)v261);
LABEL_39:

        v19 = v238;
        v17 = v243;
LABEL_40:
        sub_21C560EF0((uint64_t)v281, (uint64_t)&v282);
        if ((v286 & 1) != 0)
          v90 = objc_msgSend((id)objc_opt_self(), sel_circleWithMapRect_, v282, v283, v284, v285);
        else
          v90 = objc_msgSend((id)objc_opt_self(), sel_circleWithCenterCoordinate_radius_, v282, v283, v284);
        v91 = v90;
        sub_21C560F2C((uint64_t)v273);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_21C5B8D34(0, v19[2] + 1, 1, v19);
        v93 = v19[2];
        v92 = v19[3];
        if (v93 >= v92 >> 1)
          v19 = sub_21C5B8D34((_QWORD *)(v92 > 1), v93 + 1, 1, v19);
        *(_OWORD *)&v261[32] = *(_OWORD *)&v272[32];
        *(_OWORD *)&v261[48] = *(_OWORD *)&v272[48];
        *(_QWORD *)&v261[128] = *(_QWORD *)&v272[128];
        *(_OWORD *)&v261[96] = *(_OWORD *)&v272[96];
        *(_OWORD *)&v261[112] = *(_OWORD *)&v272[112];
        *(_OWORD *)&v261[64] = *(_OWORD *)&v272[64];
        *(_OWORD *)&v261[80] = *(_OWORD *)&v272[80];
        *(_OWORD *)v261 = *(_OWORD *)v272;
        *(_OWORD *)&v261[16] = *(_OWORD *)&v272[16];
        v19[2] = v93 + 1;
        v94 = &v19[18 * v93];
        v94[4] = v91;
        *(_OWORD *)(v94 + 5) = *(_OWORD *)v261;
        v95 = *(_OWORD *)&v261[16];
        v96 = *(_OWORD *)&v261[32];
        v97 = *(_OWORD *)&v261[48];
        *(_OWORD *)(v94 + 13) = *(_OWORD *)&v261[64];
        *(_OWORD *)(v94 + 11) = v97;
        *(_OWORD *)(v94 + 9) = v96;
        *(_OWORD *)(v94 + 7) = v95;
        v98 = *(_OWORD *)&v261[80];
        v99 = *(_OWORD *)&v261[96];
        v100 = *(_OWORD *)&v261[112];
        v94[21] = *(_QWORD *)&v261[128];
        *(_OWORD *)(v94 + 19) = v100;
        *(_OWORD *)(v94 + 17) = v99;
        *(_OWORD *)(v94 + 15) = v98;
        sub_21C560E74((uint64_t)v273);
        goto LABEL_48;
      }
      if (v280 != *(_QWORD *)&v261[128])
        goto LABEL_38;
      v52 = sub_21C5E328C();
      v53 = *(_QWORD *)(v52 - 8);
      v54 = (uint64_t)v237;
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v237, v240, v52);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v52);
      v55 = v233;
      v56 = sub_21C55F51C(v55, v36, (uint64_t)v242, v54, (uint64_t)v273);
      v58 = v57;
      v236 = v59;
      v232 = v60;
      sub_21C524980(v54, &qword_255288BC8);

      v231[1] = v58;
      if (v56)
      {
        v61 = swift_allocObject();
        *(_QWORD *)(v61 + 16) = v56;
        *(_QWORD *)(v61 + 24) = v58;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v234 = sub_21C5B8580(0, v234[2] + 1, 1, v234);
        v63 = v234[2];
        v62 = v234[3];
        if (v63 >= v62 >> 1)
          v234 = sub_21C5B8580((_QWORD *)(v62 > 1), v63 + 1, 1, v234);
        v64 = v234;
        v234[2] = v63 + 1;
        v65 = &v64[2 * v63];
        v65[4] = sub_21C562160;
        v65[5] = v61;
      }
      v66 = v236;
      if (v236)
      {
        v67 = swift_allocObject();
        *(_QWORD *)(v67 + 16) = v66;
        *(_QWORD *)(v67 + 24) = v232;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v235 = sub_21C5B8580(0, v235[2] + 1, 1, v235);
        v69 = v235[2];
        v68 = v235[3];
        if (v69 >= v68 >> 1)
          v235 = sub_21C5B8580((_QWORD *)(v68 > 1), v69 + 1, 1, v235);
        v70 = v235;
        v235[2] = v69 + 1;
        v71 = &v70[2 * v69];
        v71[4] = sub_21C562160;
        v71[5] = v67;
      }
      v72 = v239;
      swift_bridgeObjectRetain();
      v73 = sub_21C530F5C((uint64_t)v36);
      v75 = v74;
      swift_bridgeObjectRelease();
      if ((v75 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v245[0] = v72;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_21C55C248();
          v72 = *(_QWORD *)&v245[0];
        }

        v77 = *(_QWORD *)(v72 + 56) + 136 * v73;
        v263 = *(_OWORD *)v77;
        v78 = *(_OWORD *)(v77 + 48);
        v79 = *(_OWORD *)(v77 + 64);
        v80 = *(_OWORD *)(v77 + 32);
        v264 = *(_OWORD *)(v77 + 16);
        v265 = v80;
        v266 = v78;
        v267 = v79;
        v81 = *(_OWORD *)(v77 + 80);
        v82 = *(_OWORD *)(v77 + 96);
        v83 = *(_OWORD *)(v77 + 112);
        v271 = *(_QWORD *)(v77 + 128);
        v269 = v82;
        v270 = v83;
        v268 = v81;
        v239 = v72;
        sub_21C55B37C(v73, v72);
        swift_bridgeObjectRelease();
        sub_21C560E74((uint64_t)&v263);
      }
      *(_QWORD *)&v245[0] = v35;
      v84 = v35;
      sub_21C560F2C((uint64_t)v273);
      v85 = v36;
      v86 = (void (*)(__int128 *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
      v88 = v87;
      v89 = swift_isUniquelyReferenced_nonNull_native();
      v248[0] = *(id *)(v88 + 16);
      *(_QWORD *)(v88 + 16) = 0x8000000000000000;
      sub_21C55CFDC((uint64_t)v273, v85, v89);
      *(id *)(v88 + 16) = v248[0];

      swift_bridgeObjectRelease();
      v86(&v263, 0);
      sub_21C531A9C(v236);
      sub_21C531A9C((uint64_t)v56);

      sub_21C560E74((uint64_t)v261);
      sub_21C560E74((uint64_t)v273);
      v19 = v238;
      v17 = v243;
LABEL_48:
      if (!v18)
      {
        swift_bridgeObjectRelease();
        v15 = v239;
        v238 = v19;
        if (v242)
          goto LABEL_51;
        goto LABEL_52;
      }
      --v18;
      v20 += 136;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  v234 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v235 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v238 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (a4)
  {
LABEL_51:
    v101 = (void *)objc_opt_self();
    v102 = swift_allocObject();
    *(_QWORD *)(v102 + 16) = v234;
    *(_QWORD *)&v272[32] = sub_21C5620F8;
    *(_QWORD *)&v272[40] = v102;
    v103 = MEMORY[0x24BDAC760];
    *(_QWORD *)v272 = MEMORY[0x24BDAC760];
    *(_QWORD *)&v272[8] = 1107296256;
    *(_QWORD *)&v272[16] = sub_21C558F28;
    *(_QWORD *)&v272[24] = &block_descriptor_237;
    v104 = _Block_copy(v272);
    swift_bridgeObjectRetain();
    swift_release();
    v105 = swift_allocObject();
    *(_QWORD *)(v105 + 16) = v235;
    *(_QWORD *)&v272[32] = sub_21C561FAC;
    *(_QWORD *)&v272[40] = v105;
    *(_QWORD *)v272 = v103;
    *(_QWORD *)&v272[8] = 1107296256;
    *(_QWORD *)&v272[16] = sub_21C558F54;
    *(_QWORD *)&v272[24] = &block_descriptor_244;
    v106 = _Block_copy(v272);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v101, sel_animateWithDuration_animations_completion_, v104, v106, 0.25);
    _Block_release(v106);
    _Block_release(v104);
  }
LABEL_52:
  v107 = *(_QWORD *)(v15 + 64);
  v237 = (char *)(v15 + 64);
  v108 = -1;
  v109 = -1 << *(_BYTE *)(v15 + 32);
  v232 = ~v109;
  if (-v109 < 64)
    v108 = ~(-1 << -(char)v109);
  v110 = v108 & v107;
  v236 = (unint64_t)(63 - v109) >> 6;
  swift_bridgeObjectRetain();
  v239 = v15;
  v240 = 0;
  while (1)
  {
    if (v110)
    {
      v243 = (char *)((v110 - 1) & v110);
      v118 = __clz(__rbit64(v110)) | (v240 << 6);
      goto LABEL_73;
    }
    v119 = v240 + 1;
    if (__OFADD__(v240, 1))
    {
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    if (v119 >= v236)
      goto LABEL_80;
    v120 = *(_QWORD *)&v237[8 * v119];
    v121 = v240 + 1;
    if (!v120)
    {
      v121 = v240 + 2;
      if (v240 + 2 >= v236)
        goto LABEL_80;
      v120 = *(_QWORD *)&v237[8 * v121];
      if (!v120)
      {
        v121 = v240 + 3;
        if (v240 + 3 >= v236)
          goto LABEL_80;
        v120 = *(_QWORD *)&v237[8 * v121];
        if (!v120)
          break;
      }
    }
LABEL_72:
    v243 = (char *)((v120 - 1) & v120);
    v118 = __clz(__rbit64(v120)) + (v121 << 6);
    v240 = v121;
LABEL_73:
    v123 = *(void **)(*(_QWORD *)(v15 + 48) + 8 * v118);
    v124 = *(_QWORD *)(v15 + 56) + 136 * v118;
    v250[0] = *(_OWORD *)v124;
    v125 = *(_OWORD *)(v124 + 64);
    v127 = *(_OWORD *)(v124 + 16);
    v126 = *(_OWORD *)(v124 + 32);
    v250[3] = *(_OWORD *)(v124 + 48);
    v250[4] = v125;
    v250[1] = v127;
    v250[2] = v126;
    v129 = *(_OWORD *)(v124 + 96);
    v128 = *(_OWORD *)(v124 + 112);
    v130 = *(_OWORD *)(v124 + 80);
    v251 = *(_QWORD *)(v124 + 128);
    v250[6] = v129;
    v250[7] = v128;
    v250[5] = v130;
    v257 = *(_OWORD *)(v124 + 80);
    v258 = *(_OWORD *)(v124 + 96);
    v259 = *(_OWORD *)(v124 + 112);
    v260 = *(_QWORD *)(v124 + 128);
    v253 = *(_OWORD *)(v124 + 16);
    v254 = *(_OWORD *)(v124 + 32);
    v255 = *(_OWORD *)(v124 + 48);
    v256 = *(_OWORD *)(v124 + 64);
    v252 = *(_OWORD *)v124;
    *(_QWORD *)v261 = v123;
    *(_OWORD *)&v261[40] = v254;
    *(_OWORD *)&v261[56] = v255;
    *(_OWORD *)&v261[8] = v252;
    *(_OWORD *)&v261[24] = v253;
    v262 = v260;
    *(_OWORD *)&v261[104] = v258;
    *(_OWORD *)&v261[120] = v259;
    *(_OWORD *)&v261[72] = v256;
    *(_OWORD *)&v261[88] = v257;
    nullsub_1(v261);
    sub_21C52DB08((uint64_t)v261, (uint64_t)v272, (uint64_t *)&unk_255288BD0);
    v242 = *(void **)v272;
    v269 = *(_OWORD *)&v272[104];
    v270 = *(_OWORD *)&v272[120];
    v271 = *(_QWORD *)&v272[136];
    v265 = *(_OWORD *)&v272[40];
    v266 = *(_OWORD *)&v272[56];
    v267 = *(_OWORD *)&v272[72];
    v268 = *(_OWORD *)&v272[88];
    v263 = *(_OWORD *)&v272[8];
    v264 = *(_OWORD *)&v272[24];
    v131 = *(_QWORD *)&v272[8];
    v248[0] = v241;
    v132 = v241;
    sub_21C560F2C((uint64_t)v250);
    v133 = v123;
    swift_bridgeObjectRetain();
    v134 = (void (*)(_OWORD *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v136 = v135;
    swift_bridgeObjectRetain();
    v137 = sub_21C530FA8(v131);
    v139 = v138;
    swift_bridgeObjectRelease();
    if ((v139 & 1) != 0)
    {
      v140 = swift_isUniquelyReferenced_nonNull_native();
      v141 = *(_QWORD **)(v136 + 24);
      v249 = v141;
      *(_QWORD *)(v136 + 24) = 0x8000000000000000;
      if ((v140 & 1) == 0)
      {
        sub_21C55CD08(&qword_255288BF0);
        v141 = v249;
      }
      swift_bridgeObjectRelease();
      v142 = *(void **)(v141[7] + 8 * v137);
      sub_21C55BA94(v137, (uint64_t)v141);
      *(_QWORD *)(v136 + 24) = v141;

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v134(v245, 0);

    v249 = v132;
    v143 = v132;
    v144 = (void (*)(id *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v146 = v145;
    swift_bridgeObjectRetain();
    v147 = v242;
    v148 = sub_21C530F5C((uint64_t)v242);
    v150 = v149;
    swift_bridgeObjectRelease();
    if ((v150 & 1) != 0)
    {
      v151 = swift_isUniquelyReferenced_nonNull_native();
      v152 = *(_QWORD *)(v146 + 16);
      v247 = v152;
      *(_QWORD *)(v146 + 16) = 0x8000000000000000;
      if (!v151)
      {
        sub_21C55C248();
        v152 = v247;
      }

      v111 = *(_QWORD *)(v152 + 56) + 136 * v148;
      v245[0] = *(_OWORD *)v111;
      v112 = *(_OWORD *)(v111 + 48);
      v113 = *(_OWORD *)(v111 + 64);
      v114 = *(_OWORD *)(v111 + 32);
      v245[1] = *(_OWORD *)(v111 + 16);
      v245[2] = v114;
      v245[3] = v112;
      v245[4] = v113;
      v115 = *(_OWORD *)(v111 + 80);
      v116 = *(_OWORD *)(v111 + 96);
      v117 = *(_OWORD *)(v111 + 112);
      v246 = *(_QWORD *)(v111 + 128);
      v245[6] = v116;
      v245[7] = v117;
      v245[5] = v115;
      sub_21C55B37C(v148, v152);
      *(_QWORD *)(v146 + 16) = v152;
      swift_bridgeObjectRelease();
      sub_21C560E74((uint64_t)v245);
    }
    v144(v248, 0);

    sub_21C560E74((uint64_t)&v263);
    v15 = v239;
    v110 = (unint64_t)v243;
  }
  v122 = v240 + 4;
  if (v240 + 4 < v236)
  {
    v120 = *(_QWORD *)&v237[8 * v122];
    if (!v120)
    {
      while (1)
      {
        v121 = v122 + 1;
        if (__OFADD__(v122, 1))
          goto LABEL_123;
        if (v121 >= v236)
          goto LABEL_80;
        v120 = *(_QWORD *)&v237[8 * v121];
        ++v122;
        if (v120)
          goto LABEL_72;
      }
    }
    v121 = v240 + 4;
    goto LABEL_72;
  }
LABEL_80:
  sub_21C52A884();
  v153 = swift_bridgeObjectRetain();
  v154 = sub_21C559098(v153);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v154 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_21C5E3DD8();
    sub_21C531A4C(0, (unint64_t *)&qword_255289570);
    v155 = v154;
    goto LABEL_82;
  }
LABEL_124:
  sub_21C531A4C(0, (unint64_t *)&qword_255289570);
  swift_bridgeObjectRetain();
  v155 = sub_21C5E3D54();
  swift_bridgeObjectRelease();
LABEL_82:
  v156 = v238;
  swift_bridgeObjectRelease();
  if (sub_21C5584A4(v155))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
    v157 = (void *)sub_21C5E39D0();
    objc_msgSend(v233, sel_removeOverlays_, v157);
    goto LABEL_88;
  }
  if (!sub_21C5584A4(v155))
  {
    swift_bridgeObjectRelease();
    v158 = v156[2];
    if (v158)
      goto LABEL_89;
    return (uint64_t)v156;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
  v157 = (void *)sub_21C5E39D0();
  objc_msgSend(v233, sel_removeAnnotations_, v157);
LABEL_88:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v158 = v156[2];
  if (!v158)
    return (uint64_t)v156;
LABEL_89:
  v240 = (uint64_t)&v272[8];
  swift_bridgeObjectRetain();
  v243 = (char *)(v158 - 1);
  v159 = 32;
  while (1)
  {
    v242 = (void *)v159;
    v160 = (_OWORD *)((char *)v156 + v159);
    *(_OWORD *)v272 = *v160;
    v161 = v160[1];
    v162 = v160[2];
    v163 = v160[4];
    *(_OWORD *)&v272[48] = v160[3];
    *(_OWORD *)&v272[64] = v163;
    *(_OWORD *)&v272[16] = v161;
    *(_OWORD *)&v272[32] = v162;
    v164 = v160[5];
    v165 = v160[6];
    v166 = v160[8];
    *(_OWORD *)&v272[112] = v160[7];
    *(_OWORD *)&v272[128] = v166;
    *(_OWORD *)&v272[80] = v164;
    *(_OWORD *)&v272[96] = v165;
    v167 = *(void **)v272;
    v168 = *(_QWORD *)&v272[8];
    *(_QWORD *)&v263 = v241;
    v169 = v241;
    sub_21C560DB8((uint64_t)v272);
    swift_bridgeObjectRetain();
    v170 = v167;
    v171 = (void (*)(_BYTE *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v173 = v172;
    v174 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v252 = *(_QWORD *)(v173 + 24);
    v175 = v252;
    *(_QWORD *)(v173 + 24) = 0x8000000000000000;
    v177 = sub_21C530FA8(v168);
    v178 = *(_QWORD *)(v175 + 16);
    v179 = (v176 & 1) == 0;
    v180 = v178 + v179;
    if (__OFADD__(v178, v179))
    {
      __break(1u);
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    v181 = v176;
    if (*(_QWORD *)(v175 + 24) < v180)
      break;
    if ((v174 & 1) != 0)
    {
      v184 = (_QWORD *)v252;
      if ((v176 & 1) != 0)
        goto LABEL_97;
    }
    else
    {
      sub_21C55CD08(&qword_255288BF0);
      v184 = (_QWORD *)v252;
      if ((v181 & 1) != 0)
      {
LABEL_97:
        v185 = v184[7];

        *(_QWORD *)(v185 + 8 * v177) = v170;
        goto LABEL_101;
      }
    }
LABEL_99:
    v184[(v177 >> 6) + 8] |= 1 << v177;
    v186 = 8 * v177;
    *(_QWORD *)(v184[6] + v186) = v168;
    *(_QWORD *)(v184[7] + v186) = v170;
    v187 = v184[2];
    v188 = __OFADD__(v187, 1);
    v189 = v187 + 1;
    if (v188)
      goto LABEL_121;
    v184[2] = v189;
    swift_bridgeObjectRetain();
LABEL_101:
    *(_QWORD *)(v173 + 24) = v184;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v171(v261, 0);

    *(_QWORD *)&v252 = v169;
    v190 = v169;
    v191 = v170;
    v192 = v240;
    sub_21C560F2C(v240);
    v193 = (void (*)(__int128 *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v195 = v194;
    v196 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v250[0] = *(_QWORD *)(v195 + 16);
    v197 = *(_QWORD *)&v250[0];
    *(_QWORD *)(v195 + 16) = 0x8000000000000000;
    v199 = sub_21C530F5C((uint64_t)v191);
    v200 = *(_QWORD *)(v197 + 16);
    v201 = (v198 & 1) == 0;
    v202 = v200 + v201;
    if (__OFADD__(v200, v201))
      goto LABEL_119;
    v203 = v198;
    if (*(_QWORD *)(v197 + 24) >= v202)
    {
      if ((v196 & 1) != 0)
      {
        if ((v198 & 1) != 0)
          goto LABEL_108;
      }
      else
      {
        sub_21C55C248();
        if ((v203 & 1) != 0)
          goto LABEL_108;
      }
    }
    else
    {
      sub_21C559E0C(v202, v196);
      v204 = sub_21C530F5C((uint64_t)v191);
      if ((v203 & 1) != (v205 & 1))
        goto LABEL_126;
      v199 = v204;
      if ((v203 & 1) != 0)
      {
LABEL_108:
        v206 = *(_QWORD **)&v250[0];
        v207 = *(_QWORD *)(*(_QWORD *)&v250[0] + 56) + 136 * v199;
        *(_OWORD *)v261 = *(_OWORD *)v207;
        v208 = *(_OWORD *)(v207 + 64);
        v210 = *(_OWORD *)(v207 + 16);
        v209 = *(_OWORD *)(v207 + 32);
        *(_OWORD *)&v261[48] = *(_OWORD *)(v207 + 48);
        *(_OWORD *)&v261[64] = v208;
        *(_OWORD *)&v261[16] = v210;
        *(_OWORD *)&v261[32] = v209;
        v212 = *(_OWORD *)(v207 + 96);
        v211 = *(_OWORD *)(v207 + 112);
        v213 = *(_OWORD *)(v207 + 80);
        *(_QWORD *)&v261[128] = *(_QWORD *)(v207 + 128);
        *(_OWORD *)&v261[96] = v212;
        *(_OWORD *)&v261[112] = v211;
        *(_OWORD *)&v261[80] = v213;
        sub_21C560E74((uint64_t)v261);
        *(_OWORD *)v207 = *(_OWORD *)v192;
        v214 = *(_OWORD *)(v192 + 64);
        v216 = *(_OWORD *)(v192 + 16);
        v215 = *(_OWORD *)(v192 + 32);
        *(_OWORD *)(v207 + 48) = *(_OWORD *)(v192 + 48);
        *(_OWORD *)(v207 + 64) = v214;
        *(_OWORD *)(v207 + 16) = v216;
        *(_OWORD *)(v207 + 32) = v215;
        v218 = *(_OWORD *)(v192 + 96);
        v217 = *(_OWORD *)(v192 + 112);
        v219 = *(_OWORD *)(v192 + 80);
        *(_QWORD *)(v207 + 128) = *(_QWORD *)(v192 + 128);
        *(_OWORD *)(v207 + 96) = v218;
        *(_OWORD *)(v207 + 112) = v217;
        *(_OWORD *)(v207 + 80) = v219;
        goto LABEL_112;
      }
    }
    v206 = *(_QWORD **)&v250[0];
    *(_QWORD *)(*(_QWORD *)&v250[0] + 8 * (v199 >> 6) + 64) |= 1 << v199;
    *(_QWORD *)(v206[6] + 8 * v199) = v191;
    v220 = v206[7] + 136 * v199;
    *(_OWORD *)v220 = *(_OWORD *)v192;
    v221 = *(_OWORD *)(v192 + 64);
    v223 = *(_OWORD *)(v192 + 16);
    v222 = *(_OWORD *)(v192 + 32);
    *(_OWORD *)(v220 + 48) = *(_OWORD *)(v192 + 48);
    *(_OWORD *)(v220 + 64) = v221;
    *(_OWORD *)(v220 + 16) = v223;
    *(_OWORD *)(v220 + 32) = v222;
    v224 = *(_OWORD *)(v192 + 80);
    v225 = *(_OWORD *)(v192 + 96);
    v226 = *(_OWORD *)(v192 + 112);
    *(_QWORD *)(v220 + 128) = *(_QWORD *)(v192 + 128);
    *(_OWORD *)(v220 + 96) = v225;
    *(_OWORD *)(v220 + 112) = v226;
    *(_OWORD *)(v220 + 80) = v224;
    v227 = v206[2];
    v188 = __OFADD__(v227, 1);
    v228 = v227 + 1;
    if (v188)
      goto LABEL_122;
    v206[2] = v228;
    v229 = v191;
LABEL_112:
    *(_QWORD *)(v195 + 16) = v206;

    swift_bridgeObjectRelease();
    v193(&v263, 0);

    sub_21C560E74(v192);
    if (!v243)
    {
      v156 = v238;
      swift_bridgeObjectRelease();
      return (uint64_t)v156;
    }
    --v243;
    v159 = (uint64_t)v242 + 144;
    v156 = v238;
  }
  sub_21C55AFC8(v180, v174, &qword_255288BF0);
  v182 = sub_21C530FA8(v168);
  if ((v181 & 1) == (v183 & 1))
  {
    v177 = v182;
    v184 = (_QWORD *)v252;
    if ((v181 & 1) != 0)
      goto LABEL_97;
    goto LABEL_99;
  }
  sub_21C5E3DF0();
  __break(1u);
LABEL_126:
  sub_21C531A4C(0, &qword_255288BE0);
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

_QWORD *sub_21C54CEA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(__int128 *, _QWORD);
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  __int128 v18;
  id v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char *v50;
  id v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  float64x2_t *v74;
  float64x2_t *v75;
  uint64_t v76;
  int32x2_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t (*v86)();
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v109;
  void *v110;
  void *v111;
  void *v112;
  id v113;
  id v114;
  void (*v115)(__int128 *, _QWORD);
  uint64_t v116;
  uint64_t v117;
  char v118;
  id v119;
  uint64_t v120;
  char v121;
  void *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  void *v136;
  uint64_t v137;
  void *v138;
  void *v139;
  id v140;
  id v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  void *v155;
  void *v156;
  char v157;
  char v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  id v162;
  id v163;
  void (*v164)(id *, _QWORD);
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  char v168;
  char v169;
  char v170;
  uint64_t v171;
  void *v172;
  void *v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  char v178;
  char v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  void *v185;
  _QWORD *result;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  __int128 *v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  void *v202;
  id v203;
  id v204;
  void (*v205)(id *, _QWORD);
  uint64_t v206;
  uint64_t v207;
  char v208;
  _QWORD *v209;
  char v210;
  unint64_t v211;
  uint64_t v212;
  _BOOL8 v213;
  uint64_t v214;
  char v215;
  unint64_t v216;
  char v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  BOOL v221;
  uint64_t v222;
  uint64_t v223;
  id v224;
  id v225;
  id v226;
  void *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char v231;
  _QWORD *v232;
  char v233;
  unint64_t v234;
  uint64_t v235;
  _BOOL8 v236;
  uint64_t v237;
  char v238;
  uint64_t v239;
  unint64_t v240;
  char v241;
  _QWORD *v242;
  uint64_t v243;
  void *v244;
  uint64_t v245;
  uint64_t v246;
  void *v247;
  void *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char v252;
  char v253;
  id v254;
  uint64_t v255;
  void *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  id v260;
  id v261;
  _QWORD *v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  id v269;
  id v270;
  id v271;
  uint64_t v272;
  _QWORD *v273;
  _QWORD *v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  uint64_t v281;
  int v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  _QWORD *v286;
  id v287;
  id v288;
  uint64_t v289;
  id v290;
  id v291;
  __n128 *v292;
  uint64_t v293;
  void *v294;
  id v295;
  id v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  void *v300;
  unint64_t v301;
  void *v302;
  uint64_t v303;
  uint64_t v304;
  id v305[4];
  id v306;
  char v307;
  char v308;
  id v309[12];
  char v310;
  uint64_t v311;
  char v312;
  uint64_t v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  _OWORD v322[7];
  id v323;
  __n128 v324;
  uint64_t v325;
  __n128 v326;
  __n128 v327;
  uint64_t v328;

  v269 = a1;
  v272 = 0;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288BC8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v263 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v309[0] = v5;
  v287 = v5;
  v303 = a5;
  v13 = (void (*)(__int128 *, _QWORD))swift_readAtKeyPath();
  v284 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRetain();
  v13(&v314, 0);

  v291 = *(id *)(a2 + 16);
  if (!v291)
  {
    v273 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v274 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v286 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (a4)
      goto LABEL_68;
    goto LABEL_69;
  }
  v264 = v12;
  v265 = a3;
  v267 = a2;
  v268 = a4;
  v292 = (__n128 *)((char *)v322 + 8);
  v293 = a2 + 32;
  swift_bridgeObjectRetain();
  v15 = 0;
  v273 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v274 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v286 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v16 = v291;
  do
  {
    v17 = v293 + 120 * (_QWORD)v15;
    v18 = *(_OWORD *)(v17 + 80);
    v322[4] = *(_OWORD *)(v17 + 64);
    v322[5] = v18;
    v322[6] = *(_OWORD *)(v17 + 96);
    v19 = *(id *)(v17 + 112);
    v323 = v19;
    v20 = *(_OWORD *)(v17 + 16);
    v322[0] = *(_OWORD *)v17;
    v322[1] = v20;
    v21 = *(_OWORD *)(v17 + 48);
    v322[2] = *(_OWORD *)(v17 + 32);
    v322[3] = v21;
    v294 = *(void **)v17;
    v22 = *(_QWORD *)(v17 + 8);
    v301 = *(_QWORD *)(v17 + 16);
    v302 = (void *)v22;
    v23 = *(void **)(v17 + 24);
    v299 = *(_QWORD *)(v17 + 32);
    v300 = v23;
    v24 = *(_QWORD *)(v17 + 40);
    v25 = *(_QWORD *)(v17 + 48);
    v26 = *(_QWORD *)(v17 + 56);
    v27 = *(_QWORD *)(v17 + 64);
    v28 = *(_QWORD *)(v17 + 72);
    v297 = *(_QWORD *)(v17 + 80);
    v298 = v27;
    LODWORD(v296) = *(unsigned __int8 *)(v17 + 88);
    v29 = *(_QWORD *)(v17 + 96);
    LODWORD(v295) = *(unsigned __int8 *)(v17 + 104);
    v325 = v292[1].n128_i64[0];
    v324 = *v292;
    v30 = *(_QWORD *)&v322[0];
    v309[0] = v287;
    v31 = v287;
    sub_21C561244((uint64_t)v322);
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();

    v32 = *((_QWORD *)&v315 + 1);
    if (!*(_QWORD *)(*((_QWORD *)&v315 + 1) + 16) || (v33 = sub_21C530FA8(v30), (v34 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v63 = v324.n128_i64[1];
      v62 = (_QWORD *)v324.n128_u64[0];
      if ((v324.n128_u64[1] & 0x8000000000000000) == 0)
      {
LABEL_18:
        v64 = v325;
        sub_21C531A4C(0, (unint64_t *)&qword_255288C20);
        sub_21C5612DC((uint64_t)&v324);
        v62 = sub_21C5AF348(v62, v63, v64);
LABEL_22:
        v65 = v294;
        v66 = (uint64_t)v302;
        sub_21C561244((uint64_t)v322);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v67 = v286;
        else
          v67 = sub_21C5B8E5C(0, v286[2] + 1, 1, v286);
        v69 = v67[2];
        v68 = v67[3];
        if (v69 >= v68 >> 1)
          v67 = sub_21C5B8E5C((_QWORD *)(v68 > 1), v69 + 1, 1, v67);
        LOBYTE(v305[0]) = (_BYTE)v296;
        LOBYTE(v306) = (_BYTE)v295;
        v67[2] = v69 + 1;
        v286 = v67;
        v70 = &v67[16 * v69];
        v70[4] = v62;
        v70[5] = v65;
        v71 = v301;
        v70[6] = v66;
        v70[7] = v71;
        v72 = v299;
        v70[8] = v300;
        v70[9] = v72;
        v70[10] = v24;
        v70[11] = v25;
        v70[12] = v26;
        v70[13] = v298;
        v70[14] = v28;
        v70[15] = v297;
        *((_BYTE *)v70 + 128) = v305[0];
        LODWORD(v72) = v314;
        *((_DWORD *)v70 + 33) = *(_DWORD *)((char *)&v314 + 3);
        *(_DWORD *)((char *)v70 + 129) = v72;
        v70[17] = v29;
        *((_BYTE *)v70 + 144) = (_BYTE)v306;
        LODWORD(v72) = v309[0];
        *((_DWORD *)v70 + 37) = *(_DWORD *)((char *)v309 + 3);
        *(_DWORD *)((char *)v70 + 145) = v72;
        v70[19] = v19;
        sub_21C561308((uint64_t)v322);
        goto LABEL_27;
      }
      goto LABEL_21;
    }
    v35 = *(id *)(*(_QWORD *)(v32 + 56) + 8 * v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v309[0] = v31;
    v36 = v31;
    v37 = v35;
    swift_getAtKeyPath();

    v38 = v315;
    if (!*(_QWORD *)(v315 + 16) || (v39 = sub_21C531010((uint64_t)v37), (v40 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

LABEL_17:
      v16 = v291;
      v63 = v324.n128_i64[1];
      v62 = (_QWORD *)v324.n128_u64[0];
      if ((v324.n128_u64[1] & 0x8000000000000000) == 0)
        goto LABEL_18;
LABEL_21:
      sub_21C5612DC((uint64_t)&v324);
      goto LABEL_22;
    }
    v270 = v36;
    v281 = v29;
    v41 = *(_QWORD *)(v38 + 56) + 120 * v39;
    v42 = *(_QWORD *)v41;
    v43 = *(void **)(v41 + 8);
    v45 = *(_QWORD *)(v41 + 16);
    v44 = *(_QWORD *)(v41 + 24);
    v288 = v37;
    v46 = *(char **)(v41 + 32);
    v279 = (uint64_t)v19;
    v280 = v46;
    v47 = *(_QWORD *)(v41 + 64);
    v48 = *(_QWORD *)(v41 + 80);
    v49 = *(unsigned __int8 *)(v41 + 88);
    v290 = *(id *)(v41 + 96);
    v282 = *(unsigned __int8 *)(v41 + 104);
    v271 = *(id *)(v41 + 112);
    v276 = v42;
    swift_bridgeObjectRetain();
    v285 = (uint64_t)v43;
    v289 = v45;
    v283 = v44;
    sub_21C5611D8(v43, v45);
    v50 = v280;
    v51 = v288;
    v52 = v282;
    v275 = v50;
    v277 = v47;
    swift_bridgeObjectRetain();
    v278 = v48;
    LODWORD(v280) = v49;
    sub_21C52EF74(v48, v49);
    sub_21C52EF74((uint64_t)v290, v52);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21C5613A0(&v324, &v326);
    sub_21C5613A0(&v326, &v327);
    if ((v327.n128_u64[1] & 0x8000000000000000) != 0)
    {
      v327.n128_u64[1] &= ~0x8000000000000000;
      v53 = v289;
      if (v289 < 0)
      {
        v61 = v52;
        v80 = v289;
        sub_21C531A4C(0, (unint64_t *)&qword_255289570);
        sub_21C5612DC((uint64_t)&v324);
        v57 = (void *)v285;
        sub_21C5611D8((void *)v285, v80);
        v81 = sub_21C5E3B98();
        sub_21C561218(v57, v80);
        sub_21C5613DC((uint64_t)&v324);
        v29 = v281;
        v19 = (id)v279;
        if ((v81 & 1) == 0)
          goto LABEL_60;
        goto LABEL_38;
      }
LABEL_20:
      swift_bridgeObjectRelease();
      sub_21C561218((void *)v285, v53);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v278, (char)v280);
      sub_21C531AC8((uint64_t)v290, v52);

      v16 = v291;
      v29 = v281;
      v19 = (id)v279;
      v63 = v324.n128_i64[1];
      v62 = (_QWORD *)v324.n128_u64[0];
      if ((v324.n128_u64[1] & 0x8000000000000000) == 0)
        goto LABEL_18;
      goto LABEL_21;
    }
    v53 = v289;
    if (v289 < 0)
      goto LABEL_20;
    v54 = v52;
    v266 = v328;
    v55 = v327.n128_u64[0];
    v56 = v283;
    v57 = (void *)v285;
    if ((v327.n128_u8[8] & 1) != 0)
    {
      v29 = v281;
      v19 = (id)v279;
      if ((v289 & 1) != 0 && (v73 = *(_QWORD *)(v327.n128_u64[0] + 16), v73 == *(_QWORD *)(v285 + 16)))
      {
        if (!v73)
        {
          v61 = v54;
          goto LABEL_57;
        }
        v74 = (float64x2_t *)(v327.n128_u64[0] + 32);
        v75 = (float64x2_t *)(v285 + 32);
        v76 = v73 - 1;
        v61 = v54;
        while (1)
        {
          v77 = vmovn_s64(vceqq_f64(*v74, *v75));
          if ((v77.i32[0] & v77.i32[1] & 1) == 0)
            break;
          if (!v76)
            goto LABEL_57;
          ++v75;
          ++v74;
          --v76;
        }
LABEL_62:
        swift_bridgeObjectRelease();
        v122 = v57;
        v123 = v53;
LABEL_63:
        sub_21C561218(v122, v123);
        swift_bridgeObjectRelease();

        sub_21C531AC8(v278, (char)v280);
        v78 = (uint64_t)v290;
        v79 = v61;
      }
      else
      {
LABEL_36:
        swift_bridgeObjectRelease();
        sub_21C561218(v57, v53);
        swift_bridgeObjectRelease();

        sub_21C531AC8(v278, (char)v280);
        v78 = (uint64_t)v290;
        v79 = v54;
      }
      sub_21C531AC8(v78, v79);

      goto LABEL_17;
    }
    v29 = v281;
    v19 = (id)v279;
    if ((v289 & 1) != 0 || *(_QWORD *)(v327.n128_u64[0] + 16) != *(_QWORD *)(v285 + 16))
      goto LABEL_36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = (uint64_t)v57;
    v59 = v53;
    v60 = v272;
    HIDWORD(v263) = sub_21C559680(v55, v58);
    v272 = v60;
    v53 = v59;
    v57 = (void *)v285;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v61 = v54;
    if ((v263 & 0x100000000) == 0)
      goto LABEL_62;
LABEL_57:
    if (v266)
    {
      if (!v56)
        goto LABEL_62;
      swift_bridgeObjectRetain();
      v120 = swift_bridgeObjectRetain();
      v121 = sub_21C5B7B9C(v120, v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v121 & 1) == 0)
      {
LABEL_60:
        swift_bridgeObjectRelease();
        v122 = v57;
        v123 = v289;
        goto LABEL_63;
      }
    }
    else if (v56)
    {
      goto LABEL_62;
    }
LABEL_38:
    if (v323 != v271)
      goto LABEL_60;
    v82 = sub_21C5E328C();
    v83 = *(_QWORD *)(v82 - 8);
    v84 = (uint64_t)v264;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v264, v265, v82);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v82);
    v85 = v269;
    v86 = sub_21C55F984(v85, v51, v268, v84, (uint64_t)v322);
    v88 = v87;
    v90 = v89;
    v92 = v91;
    sub_21C524980(v84, &qword_255288BC8);

    if (v86)
    {
      v93 = swift_allocObject();
      *(_QWORD *)(v93 + 16) = v86;
      *(_QWORD *)(v93 + 24) = v88;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v273 = sub_21C5B8580(0, v273[2] + 1, 1, v273);
      v95 = v273[2];
      v94 = v273[3];
      if (v95 >= v94 >> 1)
        v273 = sub_21C5B8580((_QWORD *)(v94 > 1), v95 + 1, 1, v273);
      v96 = v273;
      v273[2] = v95 + 1;
      v97 = &v96[2 * v95];
      v97[4] = sub_21C562160;
      v97[5] = v93;
    }
    v301 = v92;
    v302 = (void *)v90;
    if (v90)
    {
      v98 = swift_allocObject();
      *(_QWORD *)(v98 + 16) = v90;
      *(_QWORD *)(v98 + 24) = v92;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v274 = sub_21C5B8580(0, v274[2] + 1, 1, v274);
      v100 = v274[2];
      v99 = v274[3];
      if (v100 >= v99 >> 1)
        v274 = sub_21C5B8580((_QWORD *)(v99 > 1), v100 + 1, 1, v274);
      v101 = v274;
      v274[2] = v100 + 1;
      v102 = &v101[2 * v100];
      v102[4] = sub_21C562160;
      v102[5] = v98;
    }
    v103 = v284;
    swift_bridgeObjectRetain();
    v104 = sub_21C531010((uint64_t)v288);
    v106 = v105;
    swift_bridgeObjectRelease();
    v107 = (uint64_t)v86;
    if ((v106 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v314 = v103;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_21C55C460();
        v103 = v314;
      }

      v109 = *(_QWORD *)(v103 + 56) + 120 * v104;
      v110 = *(void **)(v109 + 8);
      v111 = *(void **)(v109 + 32);
      v112 = *(void **)(v109 + 64);
      v295 = *(id *)(v109 + 16);
      v296 = v112;
      v298 = *(_QWORD *)(v109 + 80);
      LODWORD(v297) = *(unsigned __int8 *)(v109 + 88);
      v300 = *(void **)(v109 + 96);
      LODWORD(v299) = *(unsigned __int8 *)(v109 + 104);
      v284 = v103;
      sub_21C55B538(v104, v103);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21C561218(v110, (uint64_t)v295);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v298, v297);
      sub_21C531AC8((uint64_t)v300, v299);
    }
    v309[0] = v270;
    v113 = v270;
    sub_21C561244((uint64_t)v322);
    v114 = v288;
    v115 = (void (*)(__int128 *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v117 = v116;
    v118 = swift_isUniquelyReferenced_nonNull_native();
    v305[0] = *(id *)(v117 + 16);
    *(_QWORD *)(v117 + 16) = 0x8000000000000000;
    sub_21C55D168((uint64_t)v322, v114, v118);
    *(id *)(v117 + 16) = v305[0];

    swift_bridgeObjectRelease();
    v115(&v314, 0);
    sub_21C531A9C((uint64_t)v302);
    sub_21C531A9C(v107);

    v119 = v309[0];
    swift_bridgeObjectRelease();

    sub_21C561218(v57, v289);
    swift_bridgeObjectRelease();

    sub_21C531AC8(v278, (char)v280);
    sub_21C531AC8((uint64_t)v290, v282);
    sub_21C561308((uint64_t)v322);
    v16 = v291;
LABEL_27:
    v15 = (char *)v15 + 1;
  }
  while (v15 != v16);
  swift_bridgeObjectRelease();
  if (v268)
  {
LABEL_68:
    v124 = (void *)objc_opt_self();
    v125 = swift_allocObject();
    *(_QWORD *)(v125 + 16) = v273;
    *(_QWORD *)&v316 = sub_21C5620F8;
    *((_QWORD *)&v316 + 1) = v125;
    v126 = MEMORY[0x24BDAC760];
    *(_QWORD *)&v314 = MEMORY[0x24BDAC760];
    *((_QWORD *)&v314 + 1) = 1107296256;
    *(_QWORD *)&v315 = sub_21C558F28;
    *((_QWORD *)&v315 + 1) = &block_descriptor_274;
    v127 = _Block_copy(&v314);
    swift_bridgeObjectRetain();
    swift_release();
    v128 = swift_allocObject();
    *(_QWORD *)(v128 + 16) = v274;
    *(_QWORD *)&v316 = sub_21C561FAC;
    *((_QWORD *)&v316 + 1) = v128;
    *(_QWORD *)&v314 = v126;
    *((_QWORD *)&v314 + 1) = 1107296256;
    *(_QWORD *)&v315 = sub_21C558F54;
    *((_QWORD *)&v315 + 1) = &block_descriptor_281;
    v129 = _Block_copy(&v314);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v124, sel_animateWithDuration_animations_completion_, v127, v129, 0.25);
    _Block_release(v129);
    _Block_release(v127);
  }
LABEL_69:
  v130 = v284;
  v131 = *(_QWORD *)(v284 + 64);
  v281 = v284 + 64;
  v132 = -1;
  v133 = -1 << *(_BYTE *)(v284 + 32);
  v279 = ~v133;
  if (-v133 < 64)
    v132 = ~(-1 << -(char)v133);
  v134 = v132 & v131;
  v280 = (char *)((unint64_t)(63 - v133) >> 6);
  swift_bridgeObjectRetain();
  v285 = 0;
  while (2)
  {
    if (v134)
    {
      v301 = (v134 - 1) & v134;
      v142 = __clz(__rbit64(v134)) | (v285 << 6);
LABEL_87:
      v146 = *(void **)(*(_QWORD *)(v130 + 48) + 8 * v142);
      v147 = *(_QWORD *)(v130 + 56) + 120 * v142;
      v148 = *(void **)v147;
      v149 = *(void **)(v147 + 8);
      v150 = *(void **)(v147 + 16);
      v151 = *(void **)(v147 + 24);
      v152 = *(void **)(v147 + 32);
      v154 = *(void **)(v147 + 48);
      v153 = *(void **)(v147 + 56);
      v155 = *(void **)(v147 + 64);
      v156 = *(void **)(v147 + 72);
      v288 = *(id *)(v147 + 80);
      v157 = *(_BYTE *)(v147 + 88);
      v289 = *(_QWORD *)(v147 + 96);
      v290 = v146;
      v158 = *(_BYTE *)(v147 + 104);
      v159 = *(_QWORD *)(v147 + 112);
      v308 = v157;
      v307 = v158;
      v160 = *(void **)(v147 + 40);
      v309[0] = v146;
      v309[1] = v148;
      v309[2] = v149;
      v309[3] = v150;
      v309[4] = v151;
      v309[5] = v152;
      v309[6] = v160;
      v309[7] = v154;
      v309[8] = v153;
      v309[9] = v155;
      v309[10] = v156;
      v309[11] = v288;
      v310 = v157;
      v311 = v289;
      v312 = v158;
      v313 = v159;
      nullsub_1(v309);
      sub_21C52DB08((uint64_t)v309, (uint64_t)&v314, &qword_255288C18);
      v161 = *((_QWORD *)&v314 + 1);
      v302 = (void *)v314;
      v293 = *((_QWORD *)&v315 + 1);
      v294 = (void *)v315;
      v292 = (__n128 *)v316;
      v295 = (id)*((_QWORD *)&v318 + 1);
      v296 = (id)*((_QWORD *)&v316 + 1);
      v298 = *((_QWORD *)&v319 + 1);
      LODWORD(v297) = v320;
      v300 = (void *)*((_QWORD *)&v320 + 1);
      LODWORD(v299) = v321;
      v306 = v287;
      v291 = v287;
      swift_bridgeObjectRetain();
      sub_21C5611D8(v149, (uint64_t)v150);
      v162 = v152;
      swift_bridgeObjectRetain();
      sub_21C52EF74((uint64_t)v288, v157);
      sub_21C52EF74(v289, v158);
      v163 = v290;
      swift_bridgeObjectRetain();
      v164 = (void (*)(id *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
      v166 = v165;
      swift_bridgeObjectRetain();
      v167 = sub_21C530FA8(v161);
      v169 = v168;
      swift_bridgeObjectRelease();
      if ((v169 & 1) != 0)
      {
        v170 = swift_isUniquelyReferenced_nonNull_native();
        v171 = *(_QWORD *)(v166 + 24);
        v304 = v171;
        *(_QWORD *)(v166 + 24) = 0x8000000000000000;
        if ((v170 & 1) == 0)
        {
          sub_21C55CD08(&qword_255288C28);
          v171 = v304;
        }
        swift_bridgeObjectRelease();
        v172 = *(void **)(*(_QWORD *)(v171 + 56) + 8 * v167);
        sub_21C55BA94(v167, v171);
        *(_QWORD *)(v166 + 24) = v171;

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v139 = v302;
      v173 = v291;
      v164(v305, 0);

      v306 = v173;
      v174 = v173;
      v140 = (id)swift_modifyAtReferenceWritableKeyPath();
      v176 = v175;
      swift_bridgeObjectRetain();
      v177 = sub_21C531010((uint64_t)v139);
      v179 = v178;
      swift_bridgeObjectRelease();
      if ((v179 & 1) != 0)
      {
        v290 = v140;
        v291 = (id)v161;
        v180 = swift_isUniquelyReferenced_nonNull_native();
        v181 = *(_QWORD *)(v176 + 16);
        v304 = v181;
        *(_QWORD *)(v176 + 16) = 0x8000000000000000;
        if (!v180)
        {
          sub_21C55C460();
          v181 = v304;
        }

        v135 = *(_QWORD *)(v181 + 56) + 120 * v177;
        v136 = *(void **)(v135 + 8);
        v137 = *(_QWORD *)(v135 + 16);
        v138 = *(void **)(v135 + 32);
        v283 = *(_QWORD *)(v135 + 80);
        v282 = *(unsigned __int8 *)(v135 + 88);
        v289 = *(_QWORD *)(v135 + 96);
        LODWORD(v288) = *(unsigned __int8 *)(v135 + 104);
        sub_21C55B538(v177, v181);
        *(_QWORD *)(v176 + 16) = v181;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21C561218(v136, v137);
        swift_bridgeObjectRelease();

        sub_21C531AC8(v283, v282);
        sub_21C531AC8(v289, (char)v288);
        v139 = v302;
        v140 = v290;
      }
      ((void (*)(id *, _QWORD))v140)(v305, 0);
      v141 = v306;
      swift_bridgeObjectRelease();

      sub_21C561218(v294, v293);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v298, v297);
      sub_21C531AC8((uint64_t)v300, v299);

      v130 = v284;
      v134 = v301;
      continue;
    }
    break;
  }
  v143 = v285 + 1;
  if (__OFADD__(v285, 1))
  {
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
  if (v143 >= (uint64_t)v280)
    goto LABEL_98;
  v144 = *(_QWORD *)(v281 + 8 * v143);
  if (v144)
    goto LABEL_86;
  v145 = v285 + 2;
  if (v285 + 2 >= (uint64_t)v280)
    goto LABEL_98;
  v144 = *(_QWORD *)(v281 + 8 * v145);
  if (v144)
    goto LABEL_85;
  v145 = v285 + 3;
  if (v285 + 3 >= (uint64_t)v280)
    goto LABEL_98;
  v144 = *(_QWORD *)(v281 + 8 * v145);
  if (v144)
    goto LABEL_85;
  v145 = v285 + 4;
  if (v285 + 4 < (uint64_t)v280)
  {
    v144 = *(_QWORD *)(v281 + 8 * v145);
    if (!v144)
    {
      while (1)
      {
        v143 = v145 + 1;
        if (__OFADD__(v145, 1))
          goto LABEL_140;
        if (v143 >= (uint64_t)v280)
          goto LABEL_98;
        v144 = *(_QWORD *)(v281 + 8 * v143);
        ++v145;
        if (v144)
          goto LABEL_86;
      }
    }
LABEL_85:
    v143 = v145;
LABEL_86:
    v301 = (v144 - 1) & v144;
    v142 = __clz(__rbit64(v144)) + (v143 << 6);
    v285 = v143;
    goto LABEL_87;
  }
LABEL_98:
  sub_21C52A884();
  v182 = swift_bridgeObjectRetain();
  v183 = sub_21C559098(v182);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v183 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_21C5E3DD8();
    sub_21C531A4C(0, (unint64_t *)&qword_255289570);
    v184 = v183;
    goto LABEL_100;
  }
LABEL_141:
  sub_21C531A4C(0, (unint64_t *)&qword_255289570);
  swift_bridgeObjectRetain();
  v184 = sub_21C5E3D54();
  swift_bridgeObjectRelease();
LABEL_100:
  swift_bridgeObjectRelease();
  if (sub_21C5584A4(v184))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
    v185 = (void *)sub_21C5E39D0();
    objc_msgSend(v269, sel_removeOverlays_, v185);
    goto LABEL_106;
  }
  if (sub_21C5584A4(v184))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
    v185 = (void *)sub_21C5E39D0();
    objc_msgSend(v269, sel_removeAnnotations_, v185);
LABEL_106:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  result = v286;
  v187 = v286[2];
  if (!v187)
    return result;
  swift_bridgeObjectRetain();
  v188 = v286;
  v289 = v187 - 1;
  v189 = 32;
  while (2)
  {
    v283 = v189;
    v190 = (__int128 *)((char *)v188 + v189);
    v192 = v190[2];
    v191 = v190[3];
    v193 = v190[1];
    v314 = *v190;
    v315 = v193;
    v316 = v192;
    v317 = v191;
    v195 = v190[6];
    v194 = v190[7];
    v196 = v190[5];
    v318 = v190[4];
    v319 = v196;
    v320 = v195;
    v321 = v194;
    v299 = *((_QWORD *)&v315 + 1);
    v300 = (void *)v315;
    v197 = v316;
    v198 = v317;
    LODWORD(v291) = HIDWORD(v317);
    LODWORD(v290) = DWORD2(v317);
    v294 = (void *)*((_QWORD *)&v318 + 1);
    v199 = v318;
    v295 = (id)*((_QWORD *)&v316 + 1);
    v297 = *((_QWORD *)&v196 + 1);
    v200 = v196;
    LODWORD(v296) = v195;
    v301 = *((_QWORD *)&v195 + 1);
    LODWORD(v298) = v194;
    v292 = (__n128 *)*((_QWORD *)&v194 + 1);
    v201 = *((_QWORD *)&v314 + 1);
    v202 = (void *)v314;
    v305[0] = v287;
    v203 = v287;
    sub_21C56112C((uint64_t)&v314);
    swift_bridgeObjectRetain();
    v204 = v202;
    v205 = (void (*)(id *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v207 = v206;
    v208 = swift_isUniquelyReferenced_nonNull_native();
    v306 = *(id *)(v207 + 24);
    v209 = v306;
    *(_QWORD *)(v207 + 24) = 0x8000000000000000;
    v302 = (void *)v201;
    v211 = sub_21C530FA8(v201);
    v212 = v209[2];
    v213 = (v210 & 1) == 0;
    v214 = v212 + v213;
    if (__OFADD__(v212, v213))
    {
      __break(1u);
LABEL_136:
      __break(1u);
      goto LABEL_137;
    }
    v215 = v210;
    if (v209[3] >= v214)
    {
      if ((v208 & 1) != 0)
      {
        v218 = v306;
        if ((v210 & 1) != 0)
          goto LABEL_117;
      }
      else
      {
        sub_21C55CD08(&qword_255288C28);
        v218 = v306;
        if ((v215 & 1) != 0)
          goto LABEL_117;
      }
LABEL_113:
      v218[(v211 >> 6) + 8] |= 1 << v211;
      v219 = 8 * v211;
      *(_QWORD *)(v218[6] + v219) = v302;
      *(_QWORD *)(v218[7] + v219) = v204;
      v220 = v218[2];
      v221 = __OFADD__(v220, 1);
      v222 = v220 + 1;
      if (v221)
        goto LABEL_138;
      v218[2] = v222;
      swift_bridgeObjectRetain();
LABEL_118:
      *(_QWORD *)(v207 + 24) = v218;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v205(v309, 0);

      v305[0] = v203;
      v224 = v203;
      v225 = v204;
      swift_bridgeObjectRetain();
      v293 = v197;
      sub_21C5611D8(v300, v299);
      v226 = v295;
      v227 = v294;
      swift_bridgeObjectRetain();
      sub_21C52EF74(v297, (char)v296);
      sub_21C52EF74(v301, v298);
      v228 = swift_modifyAtReferenceWritableKeyPath();
      v230 = v229;
      v231 = swift_isUniquelyReferenced_nonNull_native();
      v306 = *(id *)(v230 + 16);
      v232 = v306;
      *(_QWORD *)(v230 + 16) = 0x8000000000000000;
      v234 = sub_21C531010((uint64_t)v225);
      v235 = v232[2];
      v236 = (v233 & 1) == 0;
      v237 = v235 + v236;
      if (__OFADD__(v235, v236))
        goto LABEL_136;
      v238 = v233;
      v239 = v232[3];
      v288 = v225;
      if (v239 >= v237)
      {
        if ((v231 & 1) == 0)
          sub_21C55C460();
      }
      else
      {
        sub_21C55A248(v237, v231);
        v240 = sub_21C531010((uint64_t)v225);
        if ((v238 & 1) != (v241 & 1))
          goto LABEL_143;
        v234 = v240;
      }
      v284 = v228;
      v285 = (uint64_t)v226;
      v242 = v306;
      if ((v238 & 1) != 0)
      {
        v243 = *((_QWORD *)v306 + 7) + 120 * v234;
        v244 = *(void **)(v243 + 8);
        v245 = *(_QWORD *)(v243 + 16);
        v279 = *(_QWORD *)(v243 + 32);
        v281 = *(_QWORD *)(v243 + 80);
        LODWORD(v280) = *(unsigned __int8 *)(v243 + 88);
        v246 = *(_QWORD *)(v243 + 96);
        v282 = *(unsigned __int8 *)(v243 + 104);
        swift_bridgeObjectRelease();
        sub_21C561218(v244, v245);
        swift_bridgeObjectRelease();

        sub_21C531AC8(v281, (char)v280);
        sub_21C531AC8(v246, v282);
        v247 = v227;
        v249 = v299;
        v248 = v300;
        *(_QWORD *)v243 = v302;
        *(_QWORD *)(v243 + 8) = v248;
        v250 = v293;
        *(_QWORD *)(v243 + 16) = v249;
        *(_QWORD *)(v243 + 24) = v250;
        *(_QWORD *)(v243 + 32) = v295;
        *(_QWORD *)(v243 + 40) = v198;
        LODWORD(v250) = (_DWORD)v291;
        *(_DWORD *)(v243 + 48) = (_DWORD)v290;
        *(_DWORD *)(v243 + 52) = v250;
        *(_QWORD *)(v243 + 56) = v199;
        *(_QWORD *)(v243 + 64) = v247;
        *(_QWORD *)(v243 + 72) = v200;
        v251 = v297;
        *(_QWORD *)(v243 + 80) = v297;
        v252 = (char)v296;
        *(_BYTE *)(v243 + 88) = (_BYTE)v296;
        *(_QWORD *)(v243 + 96) = v301;
        v253 = v298;
        *(_BYTE *)(v243 + 104) = v298;
        *(_QWORD *)(v243 + 112) = v292;
        v254 = v288;
      }
      else
      {
        *((_QWORD *)v306 + (v234 >> 6) + 8) |= 1 << v234;
        v254 = v288;
        *(_QWORD *)(v242[6] + 8 * v234) = v288;
        v255 = v242[7] + 120 * v234;
        v256 = v300;
        *(_QWORD *)v255 = v302;
        *(_QWORD *)(v255 + 8) = v256;
        v257 = v293;
        *(_QWORD *)(v255 + 16) = v299;
        *(_QWORD *)(v255 + 24) = v257;
        *(_QWORD *)(v255 + 32) = v295;
        *(_QWORD *)(v255 + 40) = v198;
        LODWORD(v256) = (_DWORD)v291;
        *(_DWORD *)(v255 + 48) = (_DWORD)v290;
        *(_DWORD *)(v255 + 52) = (_DWORD)v256;
        *(_QWORD *)(v255 + 56) = v199;
        *(_QWORD *)(v255 + 64) = v227;
        *(_QWORD *)(v255 + 72) = v200;
        v251 = v297;
        *(_QWORD *)(v255 + 80) = v297;
        v252 = (char)v296;
        *(_BYTE *)(v255 + 88) = (_BYTE)v296;
        *(_QWORD *)(v255 + 96) = v301;
        v253 = v298;
        *(_BYTE *)(v255 + 104) = v298;
        *(_QWORD *)(v255 + 112) = v292;
        v258 = v242[2];
        v221 = __OFADD__(v258, 1);
        v259 = v258 + 1;
        if (v221)
          goto LABEL_139;
        v242[2] = v259;
        v260 = v254;
        v249 = v299;
      }
      *(_QWORD *)(v230 + 16) = v242;

      swift_bridgeObjectRelease();
      ((void (*)(id *, _QWORD))v284)(v309, 0);

      v261 = v305[0];
      swift_bridgeObjectRelease();

      sub_21C561218(v300, v249);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v251, v252);
      sub_21C531AC8(v301, v253);
      if (!v289)
      {
        v262 = v286;
        swift_bridgeObjectRelease();
        return v262;
      }
      --v289;
      v189 = v283 + 128;
      v188 = v286;
      continue;
    }
    break;
  }
  sub_21C55AFC8(v214, v208, &qword_255288C28);
  v216 = sub_21C530FA8((uint64_t)v302);
  if ((v215 & 1) == (v217 & 1))
  {
    v211 = v216;
    v218 = v306;
    if ((v215 & 1) == 0)
      goto LABEL_113;
LABEL_117:
    v223 = v218[7];

    *(_QWORD *)(v223 + 8 * v211) = v204;
    goto LABEL_118;
  }
  sub_21C5E3DF0();
  __break(1u);
LABEL_143:
  sub_21C531A4C(0, (unint64_t *)&qword_255288C20);
  result = (_QWORD *)sub_21C5E3DF0();
  __break(1u);
  return result;
}

_QWORD *sub_21C54E7B4(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(__int128 *, _QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  unint64_t v27;
  char v28;
  id v29;
  char *v30;
  id v31;
  _QWORD *v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  int v38;
  void *v39;
  void *v40;
  int v41;
  void *v42;
  void *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t (*v49)();
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  void *v54;
  uint64_t v55;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  char v64;
  _QWORD *v65;
  void *ObjCClassFromMetadata;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  _QWORD *v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  id v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  void *v82;
  _QWORD *v83;
  unint64_t v84;
  char v85;
  char v86;
  char v87;
  uint64_t v88;
  void *v89;
  void *v90;
  __int16 v91;
  char *v92;
  id v93;
  void (*v94)(id *, _QWORD);
  uint64_t v95;
  uint64_t v96;
  char v97;
  char *v98;
  _QWORD *v99;
  void *v100;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  void *v111;
  void *v112;
  uint64_t v113;
  __int16 v114;
  char *v115;
  id v116;
  char *v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  char *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  int v128;
  void *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  void (*v134)(id *, _QWORD);
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  unint64_t v139;
  char v140;
  uint64_t v141;
  void *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  char v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  void *v154;
  _QWORD *result;
  char *v156;
  char *v157;
  uint64_t v158;
  void *v159;
  void *v160;
  char v161;
  __int16 v162;
  __int16 v163;
  uint64_t v164;
  void *v165;
  __int16 v166;
  char v167;
  char *v168;
  void *v169;
  uint64_t v170;
  void *v171;
  int v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  int v180;
  char *v181;
  id v182;
  char *v183;
  id v184;
  void (*v185)(id *, _QWORD);
  uint64_t v186;
  uint64_t v187;
  char v188;
  _QWORD *v189;
  char v190;
  unint64_t v191;
  uint64_t v192;
  _BOOL8 v193;
  uint64_t v194;
  char v195;
  unint64_t v196;
  char v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  BOOL v202;
  uint64_t v203;
  char *v204;
  id v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char v209;
  _QWORD *v210;
  char v211;
  unint64_t v212;
  uint64_t v213;
  _BOOL8 v214;
  uint64_t v215;
  char v216;
  uint64_t v217;
  unint64_t v218;
  char v219;
  _QWORD *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  id v224;
  _QWORD *v225;
  uint64_t v226;
  int v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  id v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  _QWORD *v236;
  int64_t v237;
  _QWORD *v238;
  id v239;
  id v240;
  _QWORD *v241;
  id v242;
  _QWORD *v243;
  char *v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  void *v249;
  uint64_t v250;
  void *v251;
  void *v252;
  id v253;
  char *v254;
  __int16 v255;
  id aBlock;
  uint64_t v257;
  _QWORD *v258;
  _QWORD *v259;
  uint64_t (*v260)();
  uint64_t v261;
  _QWORD *v262;
  __int128 v263[5];
  __int128 v264;
  uint64_t v265;
  __int16 v266;
  uint64_t v267;
  uint64_t v268;
  void *v269;
  __int16 v270;

  v229 = a3;
  v231 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288BC8);
  MEMORY[0x24BDAC7A8](v9);
  v228 = (char *)&v226 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock = v5;
  v244 = v5;
  v11 = (void (*)(__int128 *, _QWORD))swift_readAtKeyPath();
  v241 = *(_QWORD **)(v12 + 16);
  swift_bridgeObjectRetain();
  v11(v263, 0);

  v13 = *((_QWORD *)a2 + 2);
  v245 = a5;
  if (v13)
  {
    v230 = a4;
    v247 = (char *)v263 + 8;
    swift_bridgeObjectRetain();
    v14 = 0;
    v235 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v243 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v236 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v246 = a2;
    while (1)
    {
      v15 = *(_OWORD *)&a2[v14 + 80];
      v263[2] = *(_OWORD *)&a2[v14 + 64];
      v263[3] = v15;
      v16 = *(_OWORD *)&a2[v14 + 112];
      v263[4] = *(_OWORD *)&a2[v14 + 96];
      v264 = v16;
      v17 = *(_OWORD *)&a2[v14 + 48];
      v263[0] = *(_OWORD *)&a2[v14 + 32];
      v263[1] = v17;
      v18 = *(_QWORD *)&a2[v14 + 40];
      v253 = *(id *)&a2[v14 + 32];
      v19 = *(unsigned __int16 *)&a2[v14 + 48];
      v252 = *(void **)&a2[v14 + 56];
      v20 = *(_QWORD *)&a2[v14 + 64];
      v21 = *(_QWORD *)&a2[v14 + 72];
      v22 = *(_QWORD *)&a2[v14 + 80];
      v251 = *(void **)&a2[v14 + 88];
      v23 = *(_QWORD *)&a2[v14 + 96];
      v250 = *(_QWORD *)&a2[v14 + 104];
      LODWORD(v249) = a2[v14 + 112];
      v248 = *(_QWORD *)&a2[v14 + 120];
      v266 = *((_WORD *)v247 + 4);
      v265 = *(_QWORD *)v247;
      v24 = *(_QWORD *)&v263[0];
      v254 = v244;
      v25 = v244;
      sub_21C561498((uint64_t)v263);
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      v26 = v259;
      if (!v259[2] || (v27 = sub_21C530FA8(v24), (v28 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      v29 = *(id *)(v26[7] + 8 * v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v254 = v25;
      v30 = v25;
      v31 = v29;
      swift_getAtKeyPath();

      v32 = v258;
      if (!v258[2] || (v33 = sub_21C53105C((uint64_t)v31), (v34 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        a2 = v246;
        goto LABEL_20;
      }
      v234 = v18;
      v232 = v30;
      LODWORD(v237) = v19;
      v35 = v32[7] + 96 * v33;
      v36 = *(_QWORD **)v35;
      v37 = *(void **)(v35 + 8);
      v38 = *(unsigned __int16 *)(v35 + 16);
      v242 = *(id *)(v35 + 24);
      v39 = *(void **)(v35 + 56);
      v40 = *(void **)(v35 + 72);
      v41 = *(unsigned __int8 *)(v35 + 80);
      v233 = *(_QWORD *)(v35 + 88);
      v238 = v36;
      swift_bridgeObjectRetain();
      sub_21C561470(v37, v38);
      v239 = v242;
      v240 = v39;
      swift_bridgeObjectRetain();
      v242 = v40;
      sub_21C52EF74((uint64_t)v40, v41);
      v42 = v31;

      swift_bridgeObjectRelease();
      v43 = v37;
      swift_bridgeObjectRelease();
      sub_21C561514(&v265, (uint64_t)&v267);
      sub_21C561514(&v267, (uint64_t)&aBlock);
      v254 = (char *)v37;
      v255 = v38;
      if (!sub_21C5D6EFC((uint64_t)&aBlock, (uint64_t)&v254))
      {
        swift_bridgeObjectRelease();
        sub_21C56148C(v37, v38);
        swift_bridgeObjectRelease();

        v62 = (uint64_t)v242;
        v63 = v41;
        goto LABEL_19;
      }
      v44 = v41;
      if (*((_QWORD *)&v264 + 1) != v233)
        break;
      v249 = v43;
      LODWORD(v250) = v38;
      v45 = sub_21C5E328C();
      v46 = *(_QWORD *)(v45 - 8);
      v47 = (uint64_t)v228;
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v228, v229, v45);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v45);
      v48 = v231;
      v251 = v42;
      v49 = sub_21C55FE04(v48, v42, v230, v47, v263);
      v51 = v50;
      v53 = v52;
      v252 = v54;
      sub_21C524980(v47, &qword_255288BC8);

      v253 = v53;
      a2 = v246;
      if (v49)
      {
        v55 = swift_allocObject();
        *(_QWORD *)(v55 + 16) = v49;
        *(_QWORD *)(v55 + 24) = v51;
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v57 = (uint64_t)v242;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v235 = sub_21C5B8580(0, v235[2] + 1, 1, v235);
        v59 = v235[2];
        v58 = v235[3];
        if (v59 >= v58 >> 1)
          v235 = sub_21C5B8580((_QWORD *)(v58 > 1), v59 + 1, 1, v235);
        v60 = v235;
        v235[2] = v59 + 1;
        v61 = &v60[2 * v59];
        v61[4] = sub_21C562160;
        v61[5] = v55;
        v53 = v253;
      }
      else
      {
        v57 = (uint64_t)v242;
      }
      v227 = v44;
      v248 = v51;
      if (v53)
      {
        v76 = swift_allocObject();
        *(_QWORD *)(v76 + 16) = v53;
        *(_QWORD *)(v76 + 24) = v252;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v236 = sub_21C5B8580(0, v236[2] + 1, 1, v236);
        v78 = v236[2];
        v77 = v236[3];
        if (v78 >= v77 >> 1)
          v236 = sub_21C5B8580((_QWORD *)(v77 > 1), v78 + 1, 1, v236);
        v79 = v57;
        v80 = v236;
        v236[2] = v78 + 1;
        v81 = &v80[2 * v78];
        v81[4] = sub_21C562160;
        v81[5] = v76;
      }
      else
      {
        v79 = v57;
      }
      v82 = v251;
      v83 = v241;
      swift_bridgeObjectRetain();
      v84 = sub_21C53105C((uint64_t)v82);
      v86 = v85;
      swift_bridgeObjectRelease();
      if ((v86 & 1) != 0)
      {
        v87 = swift_isUniquelyReferenced_nonNull_native();
        aBlock = v83;
        if ((v87 & 1) == 0)
        {
          sub_21C55C884();
          v83 = aBlock;
        }

        v88 = v83[7] + 96 * v84;
        v89 = *(void **)(v88 + 8);
        v90 = *(void **)(v88 + 24);
        v234 = *(_QWORD *)(v88 + 56);
        v251 = *(void **)(v88 + 72);
        LODWORD(v237) = *(unsigned __int8 *)(v88 + 80);
        v91 = *(_WORD *)(v88 + 16);
        v241 = v83;
        sub_21C55B6F4(v84, (uint64_t)v83);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_21C56148C(v89, v91);
        swift_bridgeObjectRelease();

        sub_21C531AC8((uint64_t)v251, v237);
        a2 = v246;
        v79 = (uint64_t)v242;
      }
      v254 = v232;
      v92 = v232;
      sub_21C561498((uint64_t)v263);
      v93 = v82;
      v94 = (void (*)(id *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
      v96 = v95;
      v97 = swift_isUniquelyReferenced_nonNull_native();
      v262 = *(_QWORD **)(v96 + 16);
      *(_QWORD *)(v96 + 16) = 0x8000000000000000;
      sub_21C55D2EC(v263, v93, v97);
      *(_QWORD *)(v96 + 16) = v262;

      swift_bridgeObjectRelease();
      v94(&aBlock, 0);
      sub_21C531A9C((uint64_t)v253);
      sub_21C531A9C((uint64_t)v49);

      v98 = v254;
      swift_bridgeObjectRelease();

      sub_21C56148C(v249, v250);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v79, v227);
LABEL_33:
      sub_21C56157C((uint64_t)v263);
      v14 += 96;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        a4 = v230;
        goto LABEL_50;
      }
    }
    swift_bridgeObjectRelease();
    sub_21C56148C(v43, v38);
    swift_bridgeObjectRelease();

    v62 = (uint64_t)v242;
    v63 = v41;
LABEL_19:
    sub_21C531AC8(v62, v63);

    LOWORD(v19) = v237;
    a2 = v246;
    v18 = v234;
LABEL_20:
    sub_21C561514(&v265, (uint64_t)&v268);
    sub_21C561514(&v268, (uint64_t)&v269);
    v64 = v270;
    if (v270 < 0)
    {
      v270 &= ~0x8000u;
      v70 = v269;
      sub_21C561550((uint64_t)&v265);
LABEL_28:
      sub_21C561498((uint64_t)v263);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v71 = v243;
      else
        v71 = sub_21C5B8F68(0, v243[2] + 1, 1, v243);
      v73 = v71[2];
      v72 = v71[3];
      if (v73 >= v72 >> 1)
        v71 = sub_21C5B8F68((_QWORD *)(v72 > 1), v73 + 1, 1, v71);
      v71[2] = v73 + 1;
      v243 = v71;
      v74 = &v71[13 * v73];
      v75 = v253;
      v74[4] = v70;
      v74[5] = v75;
      v74[6] = v18;
      *((_WORD *)v74 + 28) = v19;
      v74[8] = v252;
      v74[9] = v20;
      v74[10] = v21;
      v74[11] = v22;
      v74[12] = v251;
      v74[13] = v23;
      v74[14] = v250;
      *((_BYTE *)v74 + 120) = (_BYTE)v249;
      v74[16] = v248;
      goto LABEL_33;
    }
    v65 = v269;
    if ((v270 & 0x100) != 0)
    {
      sub_21C531A4C(0, &qword_255288C48);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      v67 = v65[2];
      v68 = (uint64_t)(v65 + 4);
      if ((v64 & 1) == 0)
      {
LABEL_23:
        v69 = objc_msgSend(ObjCClassFromMetadata, sel_polylineWithPoints_count_, v68, v67);
LABEL_27:
        v70 = v69;
        goto LABEL_28;
      }
    }
    else
    {
      ObjCClassFromMetadata = (void *)objc_opt_self();
      v67 = v65[2];
      v68 = (uint64_t)(v65 + 4);
      if ((v64 & 1) == 0)
        goto LABEL_23;
    }
    v69 = objc_msgSend(ObjCClassFromMetadata, sel_polylineWithCoordinates_count_, v68, v67);
    goto LABEL_27;
  }
  v235 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v243 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v236 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_50:
  v99 = v241;
  if (a4)
  {
    v100 = (void *)objc_opt_self();
    v101 = swift_allocObject();
    *(_QWORD *)(v101 + 16) = v235;
    v260 = sub_21C5620F8;
    v261 = v101;
    v102 = (void *)MEMORY[0x24BDAC760];
    aBlock = (id)MEMORY[0x24BDAC760];
    v257 = 1107296256;
    v258 = sub_21C558F28;
    v259 = &block_descriptor_311;
    v103 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    v104 = swift_allocObject();
    *(_QWORD *)(v104 + 16) = v236;
    v260 = sub_21C561FAC;
    v261 = v104;
    aBlock = v102;
    v257 = 1107296256;
    v258 = sub_21C558F54;
    v259 = &block_descriptor_318;
    v105 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v100, sel_animateWithDuration_animations_completion_, v103, v105, 0.25);
    _Block_release(v105);
    _Block_release(v103);
  }
  v106 = v99[8];
  v238 = v99 + 8;
  v107 = -1;
  v108 = -1 << *((_BYTE *)v99 + 32);
  v234 = ~v108;
  if (-v108 < 64)
    v107 = ~(-1 << -(char)v108);
  v109 = v107 & v106;
  v237 = (unint64_t)(63 - v108) >> 6;
  swift_bridgeObjectRetain();
  v242 = 0;
  v241 = v99;
  while (1)
  {
    if (v109)
    {
      v118 = __clz(__rbit64(v109));
      v109 &= v109 - 1;
      v119 = v118 | ((_QWORD)v242 << 6);
      goto LABEL_73;
    }
    v120 = (uint64_t)v242 + 1;
    if (__OFADD__(v242, 1))
    {
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    if (v120 >= v237)
      goto LABEL_81;
    v121 = v238[v120];
    v122 = (uint64_t)v242 + 1;
    if (!v121)
    {
      v122 = (uint64_t)v242 + 2;
      if ((uint64_t)v242 + 2 >= v237)
        goto LABEL_81;
      v121 = v238[v122];
      if (!v121)
      {
        v122 = (uint64_t)v242 + 3;
        if ((uint64_t)v242 + 3 >= v237)
          goto LABEL_81;
        v121 = v238[v122];
        if (!v121)
          break;
      }
    }
LABEL_72:
    v109 = (v121 - 1) & v121;
    v119 = __clz(__rbit64(v121)) + (v122 << 6);
    v242 = (id)v122;
LABEL_73:
    v124 = *(void **)(v99[6] + 8 * v119);
    v125 = v99[7] + 96 * v119;
    v126 = *(_QWORD *)v125;
    v127 = *(void **)(v125 + 8);
    v128 = *(unsigned __int16 *)(v125 + 16);
    v129 = *(void **)(v125 + 24);
    v130 = v99;
    v131 = *(_QWORD *)(v125 + 56);
    v132 = *(_QWORD *)(v125 + 72);
    v133 = *(unsigned __int8 *)(v125 + 80);
    v254 = v244;
    v246 = v244;
    swift_bridgeObjectRetain();
    v249 = v127;
    LODWORD(v248) = v128;
    sub_21C561470(v127, v128);
    v115 = v129;
    v250 = v131;
    swift_bridgeObjectRetain();
    v252 = (void *)v132;
    LODWORD(v251) = v133;
    sub_21C52EF74(v132, v133);
    v253 = v124;
    swift_bridgeObjectRetain();
    v134 = (void (*)(id *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v136 = v135;
    swift_bridgeObjectRetain();
    v137 = sub_21C530FA8(v126);
    LOBYTE(v132) = v138;
    swift_bridgeObjectRelease();
    v247 = v115;
    if ((v132 & 1) != 0)
    {
      v139 = v109;
      v140 = swift_isUniquelyReferenced_nonNull_native();
      v141 = *(_QWORD *)(v136 + 24);
      v262 = (_QWORD *)v141;
      *(_QWORD *)(v136 + 24) = 0x8000000000000000;
      if ((v140 & 1) == 0)
      {
        sub_21C55CD08(&qword_255288C50);
        v141 = (uint64_t)v262;
      }
      swift_bridgeObjectRelease();
      v142 = *(void **)(*(_QWORD *)(v141 + 56) + 8 * v137);
      sub_21C55BA94(v137, v141);
      *(_QWORD *)(v136 + 24) = v141;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v109 = v139;
      v99 = v241;
      v115 = v247;
    }
    else
    {
      swift_bridgeObjectRelease();
      v99 = v130;
    }
    v116 = v253;
    v134(&aBlock, 0);

    v254 = v246;
    v143 = v246;
    v246 = (char *)swift_modifyAtReferenceWritableKeyPath();
    v145 = v144;
    swift_bridgeObjectRetain();
    v146 = sub_21C53105C((uint64_t)v116);
    v148 = v147;
    swift_bridgeObjectRelease();
    if ((v148 & 1) != 0)
    {
      v240 = (id)v109;
      v149 = swift_isUniquelyReferenced_nonNull_native();
      v150 = *(_QWORD *)(v145 + 16);
      v262 = (_QWORD *)v150;
      *(_QWORD *)(v145 + 16) = 0x8000000000000000;
      if (!v149)
      {
        sub_21C55C884();
        v150 = (uint64_t)v262;
      }

      v110 = *(_QWORD *)(v150 + 56) + 96 * v146;
      v111 = *(void **)(v110 + 8);
      v112 = *(void **)(v110 + 24);
      v113 = *(_QWORD *)(v110 + 72);
      LODWORD(v239) = *(unsigned __int8 *)(v110 + 80);
      v114 = *(_WORD *)(v110 + 16);
      sub_21C55B6F4(v146, v150);
      *(_QWORD *)(v145 + 16) = v150;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21C56148C(v111, v114);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v113, (char)v239);
      v99 = v241;
      v109 = (unint64_t)v240;
      v115 = v247;
      v116 = v253;
    }
    ((void (*)(id *, _QWORD))v246)(&aBlock, 0);
    v117 = v254;
    swift_bridgeObjectRelease();

    sub_21C56148C(v249, v248);
    swift_bridgeObjectRelease();

    sub_21C531AC8((uint64_t)v252, (char)v251);
  }
  v123 = (char *)v242 + 4;
  if ((uint64_t)v242 + 4 < v237)
  {
    v121 = v238[(_QWORD)v123];
    if (!v121)
    {
      while (1)
      {
        v122 = (uint64_t)(v123 + 1);
        if (__OFADD__(v123, 1))
          goto LABEL_119;
        if (v122 >= v237)
          goto LABEL_81;
        v121 = v238[v122];
        ++v123;
        if (v121)
          goto LABEL_72;
      }
    }
    v122 = (uint64_t)v242 + 4;
    goto LABEL_72;
  }
LABEL_81:
  sub_21C52A884();
  v151 = swift_bridgeObjectRetain();
  v152 = sub_21C559098(v151);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v152 >> 62))
  {
    swift_bridgeObjectRetain();
    sub_21C5E3DD8();
    sub_21C531A4C(0, (unint64_t *)&qword_255289570);
    v153 = v152;
    goto LABEL_83;
  }
LABEL_120:
  sub_21C531A4C(0, (unint64_t *)&qword_255289570);
  swift_bridgeObjectRetain();
  v153 = sub_21C5E3D54();
  swift_bridgeObjectRelease();
LABEL_83:
  swift_bridgeObjectRelease();
  if (sub_21C5584A4(v153))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
    v154 = (void *)sub_21C5E39D0();
    objc_msgSend(v231, sel_removeOverlays_, v154);
    goto LABEL_87;
  }
  if (sub_21C5584A4(v153))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
    v154 = (void *)sub_21C5E39D0();
    objc_msgSend(v231, sel_removeAnnotations_, v154);
LABEL_87:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  result = v243;
  v156 = (char *)v243[2];
  if (!v156)
    return result;
  swift_bridgeObjectRetain();
  v157 = 0;
  while (2)
  {
    v246 = v156;
    v242 = v157;
    v169 = *(void **)&v157[(_QWORD)v243 + 32];
    v170 = *(_QWORD *)&v157[(_QWORD)v243 + 40];
    v171 = *(void **)&v157[(_QWORD)v243 + 48];
    v172 = *(unsigned __int16 *)&v157[(_QWORD)v243 + 56];
    v173 = *(char **)&v157[(_QWORD)v243 + 64];
    v175 = *(_QWORD *)&v157[(_QWORD)v243 + 72];
    v174 = *(_QWORD *)&v157[(_QWORD)v243 + 80];
    v176 = *(_QWORD *)&v157[(_QWORD)v243 + 88];
    v177 = *(_QWORD *)&v157[(_QWORD)v243 + 96];
    v178 = *(_QWORD *)&v157[(_QWORD)v243 + 104];
    v179 = *(void **)&v157[(_QWORD)v243 + 112];
    v180 = v157[(_QWORD)v243 + 120];
    v248 = *(_QWORD *)&v157[(_QWORD)v243 + 128];
    v254 = v244;
    v181 = v244;
    v182 = v169;
    swift_bridgeObjectRetain();
    v252 = v171;
    LODWORD(v251) = v172;
    sub_21C561470(v171, v172);
    v247 = v173;
    v183 = v173;
    v250 = v177;
    swift_bridgeObjectRetain();
    v249 = v179;
    LODWORD(v253) = v180;
    sub_21C52EF74((uint64_t)v179, v180);
    swift_bridgeObjectRetain();
    v184 = v182;
    v185 = (void (*)(id *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v187 = v186;
    v188 = swift_isUniquelyReferenced_nonNull_native();
    v262 = *(_QWORD **)(v187 + 24);
    v189 = v262;
    *(_QWORD *)(v187 + 24) = 0x8000000000000000;
    v191 = sub_21C530FA8(v170);
    v192 = v189[2];
    v193 = (v190 & 1) == 0;
    v194 = v192 + v193;
    if (__OFADD__(v192, v193))
    {
      __break(1u);
LABEL_115:
      __break(1u);
      goto LABEL_116;
    }
    v195 = v190;
    if (v189[3] >= v194)
    {
      if ((v188 & 1) == 0)
        sub_21C55CD08(&qword_255288C50);
      goto LABEL_98;
    }
    sub_21C55AFC8(v194, v188, &qword_255288C50);
    v196 = sub_21C530FA8(v170);
    if ((v195 & 1) == (v197 & 1))
    {
      v191 = v196;
LABEL_98:
      v198 = v262;
      if ((v195 & 1) != 0)
      {
        v199 = v262[7];

        *(_QWORD *)(v199 + 8 * v191) = v184;
      }
      else
      {
        v262[(v191 >> 6) + 8] |= 1 << v191;
        v200 = 8 * v191;
        *(_QWORD *)(v198[6] + v200) = v170;
        *(_QWORD *)(v198[7] + v200) = v184;
        v201 = v198[2];
        v202 = __OFADD__(v201, 1);
        v203 = v201 + 1;
        if (v202)
          goto LABEL_117;
        v198[2] = v203;
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(v187 + 24) = v198;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v185(&aBlock, 0);

      v254 = v181;
      v204 = v181;
      v205 = v184;
      swift_bridgeObjectRetain();
      sub_21C561470(v252, (__int16)v251);
      v206 = v183;
      swift_bridgeObjectRetain();
      v164 = (uint64_t)v249;
      v167 = (char)v253;
      sub_21C52EF74((uint64_t)v249, (char)v253);
      v241 = (_QWORD *)swift_modifyAtReferenceWritableKeyPath();
      v208 = v207;
      v209 = swift_isUniquelyReferenced_nonNull_native();
      v262 = *(_QWORD **)(v208 + 16);
      v210 = v262;
      *(_QWORD *)(v208 + 16) = 0x8000000000000000;
      v212 = sub_21C53105C((uint64_t)v205);
      v213 = v210[2];
      v214 = (v211 & 1) == 0;
      v215 = v213 + v214;
      if (__OFADD__(v213, v214))
        goto LABEL_115;
      v216 = v211;
      v217 = v210[3];
      v240 = v206;
      if (v217 >= v215)
      {
        if ((v209 & 1) == 0)
          sub_21C55C884();
      }
      else
      {
        sub_21C55A8F0(v215, v209);
        v218 = sub_21C53105C((uint64_t)v205);
        if ((v216 & 1) != (v219 & 1))
          goto LABEL_122;
        v212 = v218;
      }
      v220 = v262;
      if ((v216 & 1) != 0)
      {
        v158 = v262[7] + 96 * v212;
        v159 = *(void **)(v158 + 8);
        v160 = *(void **)(v158 + 24);
        v239 = *(id *)(v158 + 72);
        v161 = *(_BYTE *)(v158 + 80);
        v162 = *(_WORD *)(v158 + 16);
        swift_bridgeObjectRelease();
        v163 = v162;
        v164 = (uint64_t)v249;
        sub_21C56148C(v159, v163);
        swift_bridgeObjectRelease();

        sub_21C531AC8((uint64_t)v239, v161);
        v165 = v252;
        *(_QWORD *)v158 = v170;
        *(_QWORD *)(v158 + 8) = v165;
        v166 = (__int16)v251;
        *(_WORD *)(v158 + 16) = (_WORD)v251;
        *(_QWORD *)(v158 + 24) = v247;
        *(_QWORD *)(v158 + 32) = v175;
        *(_QWORD *)(v158 + 40) = v174;
        *(_QWORD *)(v158 + 48) = v176;
        *(_QWORD *)(v158 + 56) = v250;
        *(_QWORD *)(v158 + 64) = v178;
        *(_QWORD *)(v158 + 72) = v164;
        *(_BYTE *)(v158 + 80) = (_BYTE)v253;
        *(_QWORD *)(v158 + 88) = v248;
        v167 = (char)v253;
      }
      else
      {
        v262[(v212 >> 6) + 8] |= 1 << v212;
        *(_QWORD *)(v220[6] + 8 * v212) = v205;
        v221 = v220[7] + 96 * v212;
        v165 = v252;
        *(_QWORD *)v221 = v170;
        *(_QWORD *)(v221 + 8) = v165;
        v166 = (__int16)v251;
        *(_WORD *)(v221 + 16) = (_WORD)v251;
        *(_QWORD *)(v221 + 24) = v247;
        *(_QWORD *)(v221 + 32) = v175;
        *(_QWORD *)(v221 + 40) = v174;
        *(_QWORD *)(v221 + 48) = v176;
        *(_QWORD *)(v221 + 56) = v250;
        *(_QWORD *)(v221 + 64) = v178;
        *(_QWORD *)(v221 + 72) = v164;
        *(_BYTE *)(v221 + 80) = v167;
        *(_QWORD *)(v221 + 88) = v248;
        v222 = v220[2];
        v202 = __OFADD__(v222, 1);
        v223 = v222 + 1;
        if (v202)
          goto LABEL_118;
        v220[2] = v223;
        v224 = v205;
      }
      *(_QWORD *)(v208 + 16) = v220;

      swift_bridgeObjectRelease();
      ((void (*)(id *, _QWORD))v241)(&aBlock, 0);

      v168 = v254;
      swift_bridgeObjectRelease();

      sub_21C56148C(v165, v166);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v164, v167);
      v157 = (char *)v242 + 104;
      v156 = v246 - 1;
      if (v246 == (char *)1)
      {
        v225 = v243;
        swift_bridgeObjectRelease();
        return v225;
      }
      continue;
    }
    break;
  }
  sub_21C5E3DF0();
  __break(1u);
LABEL_122:
  sub_21C531A4C(0, &qword_255288C40);
  result = (_QWORD *)sub_21C5E3DF0();
  __break(1u);
  return result;
}

uint64_t sub_21C5500C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *, _QWORD);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  char **v49;
  _QWORD *v50;
  uint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  id v56;
  _QWORD *v57;
  unint64_t v58;
  char v59;
  id v60;
  id v61;
  id v62;
  _QWORD *v63;
  uint64_t v64;
  void *v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t (*v85)();
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int64_t v90;
  uint64_t v91;
  char isUniquelyReferenced_nonNull_native;
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char v119;
  char v120;
  char v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  int64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  int64_t v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  void (*v149)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v150;
  char *v151;
  uint64_t v152;
  void **v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  id v159;
  void (*v160)(uint64_t *, _QWORD);
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  char v165;
  char v166;
  uint64_t v167;
  void *v168;
  id v169;
  void (*v170)(uint64_t *, _QWORD);
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  char v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  void *v182;
  uint64_t result;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void **v191;
  void *v192;
  uint64_t v193;
  uint64_t v194;
  id v195;
  id v196;
  void (*v197)(uint64_t *, _QWORD);
  uint64_t v198;
  uint64_t v199;
  char v200;
  _QWORD *v201;
  char v202;
  unint64_t v203;
  uint64_t v204;
  _BOOL8 v205;
  uint64_t v206;
  char v207;
  unint64_t v208;
  char v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  BOOL v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void (*v219)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v220;
  id v221;
  id v222;
  void (*v223)(uint64_t *, _QWORD);
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  char v227;
  char v228;
  int v229;
  uint64_t v230;
  int v231;
  _QWORD *v232;
  char v233;
  unint64_t v234;
  uint64_t v235;
  _BOOL8 v236;
  uint64_t v237;
  char v238;
  unint64_t v239;
  char v240;
  _QWORD *v241;
  uint64_t v242;
  uint64_t v243;
  id v244;
  unint64_t v245;
  _QWORD v246[2];
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  id v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t (*v257)();
  _QWORD *v258;
  uint64_t v259;
  uint64_t v260;
  int64_t v261;
  _QWORD *v262;
  _QWORD *v263;
  uint64_t v264;
  id v265;
  uint64_t v266;
  int64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  void **v272;
  uint64_t v273;
  void **v274;
  char *v275;
  uint64_t v276;
  unint64_t v277;
  uint64_t v278;
  void (*v279)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v280;
  uint64_t *v281;
  uint64_t *v282;
  id v283;
  uint64_t v284;
  uint64_t aBlock;
  uint64_t v286;
  _QWORD *v287;
  _QWORD *v288;
  uint64_t (*v289)();
  uint64_t v290;
  _QWORD *v291;
  id v292;

  v254 = a4;
  v252 = a3;
  v253 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288BC8);
  MEMORY[0x24BDAC7A8](v8);
  v251 = (char *)v246 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C68);
  v269 = *(_QWORD *)(v268 - 8);
  v10 = MEMORY[0x24BDAC7A8](v268);
  v12 = (char *)v246 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v272 = (void **)((char *)v246 - v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C70);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v246 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v250 = (uint64_t)v246 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v249 = (uint64_t)v246 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v260 = (uint64_t)v246 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v266 = (uint64_t)v246 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v271 = (uint64_t)v246 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v273 = (uint64_t)v246 - v28;
  v280 = type metadata accessor for UserAnnotationViewModel(0);
  v29 = *(_QWORD *)(v280 - 8);
  v30 = MEMORY[0x24BDAC7A8](v280);
  v248 = (uint64_t)v246 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v259 = (uint64_t)v246 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v282 = (_QWORD *)((char *)v246 - v35);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v270 = (uint64_t)v246 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v281 = (_QWORD *)((char *)v246 - v38);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C78);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v275 = (char *)v246 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v274 = (void **)((char *)v246 - v42);
  v292 = v5;
  v283 = v5;
  v43 = (void (*)(uint64_t *, _QWORD))swift_readAtKeyPath();
  v276 = *(_QWORD *)(v44 + 16);
  swift_bridgeObjectRetain();
  v43(&aBlock, 0);

  v45 = *(_QWORD *)(a2 + 16);
  v278 = a5;
  v284 = v29;
  if (!v45)
  {
    v262 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v277 = MEMORY[0x24BEE4AF8];
    v263 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_50;
  }
  v247 = v17;
  v46 = a2;
  v47 = a2 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  v48 = *(_QWORD *)(v29 + 72);
  v246[1] = v46;
  swift_bridgeObjectRetain();
  v49 = &off_24E05E000;
  v262 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v277 = MEMORY[0x24BEE4AF8];
  v263 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v258 = v12;
  v50 = v12;
  v267 = v48;
  do
  {
    v53 = v50;
    v54 = v282;
    sub_21C529664(v47, (uint64_t)v282, type metadata accessor for UserAnnotationViewModel);
    v55 = *v54;
    v292 = v283;
    v56 = v283;
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();

    v57 = v288;
    if (!v288[2] || (v58 = sub_21C530FA8(v55), (v59 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50 = v53;
LABEL_12:
      v73 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MapBridgingUserAnnotation()), v49[283]);
      v74 = (uint64_t)v50 + *(int *)(v268 + 48);
      *v50 = v73;
      sub_21C529664((uint64_t)v282, v74, type metadata accessor for UserAnnotationViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v75 = v277;
      else
        v75 = sub_21C5B9090(0, *(_QWORD *)(v277 + 16) + 1, 1, v277);
      v77 = *(_QWORD *)(v75 + 16);
      v76 = *(_QWORD *)(v75 + 24);
      if (v77 >= v76 >> 1)
        v75 = sub_21C5B9090(v76 > 1, v77 + 1, 1, v75);
      *(_QWORD *)(v75 + 16) = v77 + 1;
      v78 = (*(unsigned __int8 *)(v269 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v269 + 80);
      v277 = v75;
      sub_21C52DB08((uint64_t)v50, v75 + v78 + *(_QWORD *)(v269 + 72) * v77, &qword_255288C68);
      sub_21C52A88C((uint64_t)v282, type metadata accessor for UserAnnotationViewModel);
      goto LABEL_5;
    }
    v60 = *(id *)(v57[7] + 8 * v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v292 = v56;
    v61 = v56;
    v62 = v60;
    swift_getAtKeyPath();

    v63 = v287;
    v64 = v287[2];
    v264 = (uint64_t)v61;
    if (v64)
    {
      v65 = v62;
      v66 = sub_21C5310A8((uint64_t)v62);
      if ((v67 & 1) != 0)
      {
        v68 = v260;
        sub_21C529664(v63[7] + v66 * v267, v260, type metadata accessor for UserAnnotationViewModel);
        v69 = v284;
        v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v284 + 56);
        v71 = v68;
        v72 = 0;
      }
      else
      {
        v69 = v284;
        v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v284 + 56);
        v68 = v260;
        v71 = v260;
        v72 = 1;
      }
      v79 = v280;
      v279 = v70;
      v70(v71, v72, 1, v280);
    }
    else
    {
      v65 = v62;
      v69 = v284;
      v68 = v260;
      v79 = v280;
      v279 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v284 + 56);
      v279(v260, 1, 1, v280);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v80 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
    if (v80(v68, 1, v79) == 1)
    {

      sub_21C524980(v68, &qword_255288C70);
      v50 = v258;
      v48 = v267;
      v49 = &off_24E05E000;
      goto LABEL_12;
    }
    sub_21C52AAD4(v68, v259, type metadata accessor for UserAnnotationViewModel);
    v81 = sub_21C5E328C();
    v82 = *(_QWORD *)(v81 - 8);
    v83 = (uint64_t)v251;
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v251, v252, v81);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56))(v83, 0, 1, v81);
    v84 = v253;
    v265 = v65;
    v85 = sub_21C56030C(v84, v65, v254, v83, (uint64_t)v282);
    v87 = v86;
    v89 = v88;
    v261 = v90;
    sub_21C524980(v83, &qword_255288BC8);

    v257 = v85;
    v256 = v87;
    if (v85)
    {
      v91 = swift_allocObject();
      *(_QWORD *)(v91 + 16) = v85;
      *(_QWORD *)(v91 + 24) = v87;
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v93 = v279;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v262 = sub_21C5B8580(0, v262[2] + 1, 1, v262);
      v95 = v262[2];
      v94 = v262[3];
      if (v95 >= v94 >> 1)
        v262 = sub_21C5B8580((_QWORD *)(v94 > 1), v95 + 1, 1, v262);
      v96 = v262;
      v262[2] = v95 + 1;
      v97 = &v96[2 * v95];
      v97[4] = sub_21C562160;
      v97[5] = v91;
      if (!v89)
        goto LABEL_35;
LABEL_30:
      v98 = swift_allocObject();
      *(_QWORD *)(v98 + 16) = v89;
      *(_QWORD *)(v98 + 24) = v261;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v263 = sub_21C5B8580(0, v263[2] + 1, 1, v263);
      v100 = v263[2];
      v99 = v263[3];
      if (v100 >= v99 >> 1)
        v263 = sub_21C5B8580((_QWORD *)(v99 > 1), v100 + 1, 1, v263);
      v101 = v263;
      v263[2] = v100 + 1;
      v102 = &v101[2 * v100];
      v102[4] = sub_21C562160;
      v102[5] = v98;
      goto LABEL_35;
    }
    v93 = v279;
    if (v89)
      goto LABEL_30;
LABEL_35:
    v103 = v276;
    swift_bridgeObjectRetain();
    v104 = sub_21C5310A8((uint64_t)v265);
    v106 = v105;
    swift_bridgeObjectRelease();
    v255 = v89;
    if ((v106 & 1) != 0)
    {
      v107 = swift_isUniquelyReferenced_nonNull_native();
      aBlock = v103;
      if (!v107)
      {
        sub_21C55CAE0(type metadata accessor for UserAnnotationViewModel, &qword_255288C90);
        v103 = aBlock;
      }

      v108 = v249;
      sub_21C52AAD4(*(_QWORD *)(v103 + 56) + v104 * v267, v249, type metadata accessor for UserAnnotationViewModel);
      v276 = v103;
      sub_21C55B8B0(v104, v103, type metadata accessor for UserAnnotationViewModel);
      swift_bridgeObjectRelease();
      v109 = 0;
    }
    else
    {
      v109 = 1;
      v108 = v249;
    }
    v110 = v108;
    v111 = v108;
    v112 = v280;
    v93(v110, v109, 1, v280);
    sub_21C524980(v111, &qword_255288C70);
    v113 = v250;
    sub_21C529664((uint64_t)v282, v250, type metadata accessor for UserAnnotationViewModel);
    v279 = v93;
    v93(v113, 0, 1, v112);
    v292 = (id)v264;
    v114 = (id)v264;
    v115 = v265;
    v265 = (id)swift_modifyAtReferenceWritableKeyPath();
    v117 = v116;
    if (v80(v113, 1, v112) == 1)
    {
      sub_21C524980(v113, &qword_255288C70);
      swift_bridgeObjectRetain();
      v264 = (uint64_t)v115;
      v118 = sub_21C5310A8((uint64_t)v115);
      v120 = v119;
      swift_bridgeObjectRelease();
      if ((v120 & 1) != 0)
      {
        v121 = swift_isUniquelyReferenced_nonNull_native();
        v122 = *(_QWORD *)(v117 + 16);
        v291 = (_QWORD *)v122;
        *(_QWORD *)(v117 + 16) = 0x8000000000000000;
        v123 = v279;
        if ((v121 & 1) == 0)
        {
          sub_21C55CAE0(type metadata accessor for UserAnnotationViewModel, &qword_255288C90);
          v122 = (uint64_t)v291;
        }

        v124 = (uint64_t)v247;
        sub_21C52AAD4(*(_QWORD *)(v122 + 56) + v118 * v267, (uint64_t)v247, type metadata accessor for UserAnnotationViewModel);
        sub_21C55B8B0(v118, v122, type metadata accessor for UserAnnotationViewModel);
        *(_QWORD *)(v117 + 16) = v122;
        swift_bridgeObjectRelease();
        v125 = 0;
      }
      else
      {
        v125 = 1;
        v124 = (uint64_t)v247;
        v123 = v279;
      }
      v123(v124, v125, 1, v280);
      v115 = (id)v264;

      sub_21C524980(v124, &qword_255288C70);
    }
    else
    {
      v51 = v248;
      sub_21C52AAD4(v113, v248, type metadata accessor for UserAnnotationViewModel);
      v52 = swift_isUniquelyReferenced_nonNull_native();
      v291 = *(_QWORD **)(v117 + 16);
      *(_QWORD *)(v117 + 16) = 0x8000000000000000;
      sub_21C55D460(v51, v115, v52, (uint64_t (*)(void *))sub_21C5310A8, type metadata accessor for UserAnnotationViewModel, &qword_255288C90, (void (*)(_QWORD))type metadata accessor for MapBridgingUserAnnotation);
      *(_QWORD *)(v117 + 16) = v291;

      swift_bridgeObjectRelease();
    }
    v50 = v258;
    ((void (*)(uint64_t *, _QWORD))v265)(&aBlock, 0);
    sub_21C531A9C(v255);
    sub_21C531A9C((uint64_t)v257);

    sub_21C52A88C(v259, type metadata accessor for UserAnnotationViewModel);
    sub_21C52A88C((uint64_t)v282, type metadata accessor for UserAnnotationViewModel);
    v48 = v267;
    v49 = &off_24E05E000;
LABEL_5:
    v47 += v48;
    --v45;
  }
  while (v45);
  swift_bridgeObjectRelease();
LABEL_50:
  v127 = v275;
  v126 = v276;
  v128 = v284;
  if (v254)
  {
    v129 = (void *)objc_opt_self();
    v130 = swift_allocObject();
    *(_QWORD *)(v130 + 16) = v262;
    v289 = sub_21C5620F8;
    v290 = v130;
    v131 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v286 = 1107296256;
    v287 = sub_21C558F28;
    v288 = &block_descriptor_345;
    v132 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    v133 = swift_allocObject();
    *(_QWORD *)(v133 + 16) = v263;
    v289 = sub_21C561FAC;
    v290 = v133;
    aBlock = v131;
    v286 = 1107296256;
    v287 = sub_21C558F54;
    v288 = &block_descriptor_352;
    v134 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v129, sel_animateWithDuration_animations_completion_, v132, v134, 0.25);
    v126 = v276;
    _Block_release(v134);
    _Block_release(v132);
  }
  v135 = *(_QWORD *)(v126 + 64);
  v265 = (id)(v126 + 64);
  v136 = -1;
  v137 = -1 << *(_BYTE *)(v126 + 32);
  v264 = ~v137;
  if (-v137 < 64)
    v136 = ~(-1 << -(char)v137);
  v138 = v136 & v135;
  v267 = (unint64_t)(63 - v137) >> 6;
  v261 = v267 - 1;
  swift_bridgeObjectRetain();
  v139 = 0;
LABEL_57:
  if (v138)
  {
    v282 = (uint64_t *)((v138 - 1) & v138);
    v142 = __clz(__rbit64(v138)) | (v139 << 6);
    v143 = v139;
LABEL_59:
    v144 = *(_QWORD *)(v276 + 56);
    v145 = *(void **)(*(_QWORD *)(v276 + 48) + 8 * v142);
    *v127 = v145;
    v146 = v144 + *(_QWORD *)(v128 + 72) * v142;
    v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C80);
    sub_21C529664(v146, (uint64_t)v127 + *(int *)(v147 + 48), type metadata accessor for UserAnnotationViewModel);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 56))(v127, 0, 1, v147);
    v148 = v145;
    v149 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v143;
    goto LABEL_78;
  }
  v143 = v139 + 1;
  if (__OFADD__(v139, 1))
  {
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
    goto LABEL_136;
  }
  v149 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v139;
  if (v143 >= v267)
    goto LABEL_77;
  v150 = *((_QWORD *)v265 + v143);
  if (v150)
  {
LABEL_63:
    v282 = (uint64_t *)((v150 - 1) & v150);
    v142 = __clz(__rbit64(v150)) + (v143 << 6);
    goto LABEL_59;
  }
  v151 = (char *)(v139 + 2);
  v149 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 1);
  if (v139 + 2 >= v267)
    goto LABEL_77;
  v150 = *((_QWORD *)v265 + (_QWORD)v151);
  if (v150)
    goto LABEL_66;
  v149 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 2);
  if (v139 + 3 >= v267)
    goto LABEL_77;
  v150 = *((_QWORD *)v265 + v139 + 3);
  if (v150)
  {
    v143 = v139 + 3;
    goto LABEL_63;
  }
  v151 = (char *)(v139 + 4);
  v149 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 3);
  if (v139 + 4 >= v267)
    goto LABEL_77;
  v150 = *((_QWORD *)v265 + (_QWORD)v151);
  if (v150)
  {
LABEL_66:
    v143 = (int64_t)v151;
    goto LABEL_63;
  }
  while (2)
  {
    v143 = (int64_t)(v151 + 1);
    if (__OFADD__(v151, 1))
    {
      __break(1u);
LABEL_138:
      sub_21C5E3DF0();
      __break(1u);
LABEL_139:
      type metadata accessor for MapBridgingUserAnnotation();
      result = sub_21C5E3DF0();
      __break(1u);
    }
    else
    {
      if (v143 < v267)
      {
        v150 = *((_QWORD *)v265 + v143);
        ++v151;
        if (v150)
          goto LABEL_63;
        continue;
      }
      v149 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v261;
LABEL_77:
      v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C80);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56))(v127, 1, 1, v152);
      v282 = 0;
LABEL_78:
      v153 = v274;
      sub_21C52DB08((uint64_t)v127, (uint64_t)v274, &qword_255288C78);
      v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C80);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 48))(v153, 1, v154) != 1)
      {
        v279 = v149;
        v155 = *v153;
        v156 = (uint64_t)v153 + *(int *)(v154 + 48);
        v157 = v281;
        sub_21C52AAD4(v156, (uint64_t)v281, type metadata accessor for UserAnnotationViewModel);
        v158 = *v157;
        v292 = v283;
        v159 = v283;
        swift_bridgeObjectRetain();
        v160 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
        v162 = v161;
        swift_bridgeObjectRetain();
        v163 = sub_21C530FA8(v158);
        v165 = v164;
        swift_bridgeObjectRelease();
        if ((v165 & 1) != 0)
        {
          v166 = swift_isUniquelyReferenced_nonNull_native();
          v167 = *(_QWORD *)(v162 + 24);
          v291 = (_QWORD *)v167;
          *(_QWORD *)(v162 + 24) = 0x8000000000000000;
          if ((v166 & 1) == 0)
          {
            sub_21C55CD08(&qword_255288C88);
            v167 = (uint64_t)v291;
          }
          swift_bridgeObjectRelease();
          v168 = *(void **)(*(_QWORD *)(v167 + 56) + 8 * v163);
          sub_21C55BA94(v163, v167);
          *(_QWORD *)(v162 + 24) = v167;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v160(&aBlock, 0);

        v292 = v159;
        v169 = v159;
        v170 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
        v172 = v171;
        swift_bridgeObjectRetain();
        v173 = sub_21C5310A8((uint64_t)v155);
        v175 = v174;
        swift_bridgeObjectRelease();
        v176 = v280;
        v128 = v284;
        if ((v175 & 1) != 0)
        {
          v177 = swift_isUniquelyReferenced_nonNull_native();
          v178 = *(_QWORD *)(v172 + 16);
          v291 = (_QWORD *)v178;
          *(_QWORD *)(v172 + 16) = 0x8000000000000000;
          if (!v177)
          {
            sub_21C55CAE0(type metadata accessor for UserAnnotationViewModel, &qword_255288C90);
            v178 = (uint64_t)v291;
          }

          v141 = v273;
          sub_21C52AAD4(*(_QWORD *)(v178 + 56) + *(_QWORD *)(v128 + 72) * v173, v273, type metadata accessor for UserAnnotationViewModel);
          sub_21C55B8B0(v173, v178, type metadata accessor for UserAnnotationViewModel);
          *(_QWORD *)(v172 + 16) = v178;
          swift_bridgeObjectRelease();
          v140 = 0;
        }
        else
        {
          v140 = 1;
          v141 = v273;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v128 + 56))(v141, v140, 1, v176);
        sub_21C524980(v141, &qword_255288C70);
        v170(&aBlock, 0);

        sub_21C52A88C((uint64_t)v281, type metadata accessor for UserAnnotationViewModel);
        v139 = (int64_t)v279;
        v138 = (unint64_t)v282;
        v127 = v275;
        goto LABEL_57;
      }
      sub_21C52A884();
      v179 = swift_bridgeObjectRetain();
      v180 = sub_21C558F90(v179);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!(v180 >> 62))
      {
        swift_bridgeObjectRetain();
        sub_21C5E3DD8();
        sub_21C531A4C(0, (unint64_t *)&qword_255289570);
        v181 = v180;
        goto LABEL_90;
      }
LABEL_136:
      sub_21C531A4C(0, (unint64_t *)&qword_255289570);
      swift_bridgeObjectRetain();
      v181 = sub_21C5E3D54();
      swift_bridgeObjectRelease();
LABEL_90:
      swift_bridgeObjectRelease();
      if (sub_21C5584A4(v181))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
        v182 = (void *)sub_21C5E39D0();
        objc_msgSend(v253, sel_removeOverlays_, v182);
        goto LABEL_94;
      }
      if (sub_21C5584A4(v181))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
        v182 = (void *)sub_21C5E39D0();
        objc_msgSend(v253, sel_removeAnnotations_, v182);
LABEL_94:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      else
      {
        swift_bridgeObjectRelease();
      }
      result = v277;
      v184 = *(_QWORD *)(v277 + 16);
      if (v184)
      {
        v185 = (uint64_t *)((char *)v272 + *(int *)(v268 + 48));
        v186 = v277 + ((*(unsigned __int8 *)(v269 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v269 + 80));
        v279 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v269 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          v281 = (uint64_t *)v186;
          v282 = (uint64_t *)v184;
          v191 = v272;
          sub_21C531B18(v186, (uint64_t)v272, &qword_255288C68);
          v192 = *v191;
          v193 = (uint64_t)v185;
          v194 = *v185;
          v292 = v283;
          v195 = v283;
          swift_bridgeObjectRetain();
          v196 = v192;
          v197 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v199 = v198;
          v200 = swift_isUniquelyReferenced_nonNull_native();
          v291 = *(_QWORD **)(v199 + 24);
          v201 = v291;
          *(_QWORD *)(v199 + 24) = 0x8000000000000000;
          v203 = sub_21C530FA8(v194);
          v204 = v201[2];
          v205 = (v202 & 1) == 0;
          v206 = v204 + v205;
          if (__OFADD__(v204, v205))
          {
            __break(1u);
            goto LABEL_132;
          }
          v207 = v202;
          if (v201[3] >= v206)
          {
            if ((v200 & 1) != 0)
            {
              v210 = v291;
              if ((v202 & 1) != 0)
                goto LABEL_108;
            }
            else
            {
              sub_21C55CD08(&qword_255288C88);
              v210 = v291;
              if ((v207 & 1) != 0)
                goto LABEL_108;
            }
          }
          else
          {
            sub_21C55AFC8(v206, v200, &qword_255288C88);
            v208 = sub_21C530FA8(v194);
            if ((v207 & 1) != (v209 & 1))
              goto LABEL_138;
            v203 = v208;
            v210 = v291;
            if ((v207 & 1) != 0)
            {
LABEL_108:
              v215 = v210[7];
              v216 = 8 * v203;

              *(_QWORD *)(v215 + v216) = v196;
              goto LABEL_109;
            }
          }
          v210[(v203 >> 6) + 8] |= 1 << v203;
          v211 = 8 * v203;
          *(_QWORD *)(v210[6] + v211) = v194;
          *(_QWORD *)(v210[7] + v211) = v196;
          v212 = v210[2];
          v213 = __OFADD__(v212, 1);
          v214 = v212 + 1;
          if (v213)
            goto LABEL_133;
          v210[2] = v214;
          swift_bridgeObjectRetain();
LABEL_109:
          *(_QWORD *)(v199 + 24) = v210;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v197(&aBlock, 0);

          v185 = (uint64_t *)v193;
          v217 = v271;
          sub_21C529664(v193, v271, type metadata accessor for UserAnnotationViewModel);
          v218 = v284;
          v219 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v284 + 56);
          v220 = v280;
          v219(v217, 0, 1, v280);
          v292 = v195;
          v221 = v195;
          v222 = v196;
          v223 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v225 = v224;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v218 + 48))(v217, 1, v220) == 1)
          {
            sub_21C524980(v217, &qword_255288C70);
            swift_bridgeObjectRetain();
            v226 = sub_21C5310A8((uint64_t)v222);
            v228 = v227;
            swift_bridgeObjectRelease();
            if ((v228 & 1) != 0)
            {
              v229 = swift_isUniquelyReferenced_nonNull_native();
              v230 = *(_QWORD *)(v225 + 16);
              v291 = (_QWORD *)v230;
              *(_QWORD *)(v225 + 16) = 0x8000000000000000;
              if (!v229)
              {
                sub_21C55CAE0(type metadata accessor for UserAnnotationViewModel, &qword_255288C90);
                v230 = (uint64_t)v291;
              }

              v188 = v266;
              sub_21C52AAD4(*(_QWORD *)(v230 + 56) + *(_QWORD *)(v284 + 72) * v226, v266, type metadata accessor for UserAnnotationViewModel);
              sub_21C55B8B0(v226, v230, type metadata accessor for UserAnnotationViewModel);
              *(_QWORD *)(v225 + 16) = v230;
              swift_bridgeObjectRelease();
              v187 = 0;
            }
            else
            {
              v187 = 1;
              v188 = v266;
            }
            v219(v188, v187, 1, v220);

            sub_21C524980(v188, &qword_255288C70);
            goto LABEL_99;
          }
          sub_21C52AAD4(v217, v270, type metadata accessor for UserAnnotationViewModel);
          v231 = swift_isUniquelyReferenced_nonNull_native();
          v291 = *(_QWORD **)(v225 + 16);
          v232 = v291;
          *(_QWORD *)(v225 + 16) = 0x8000000000000000;
          v234 = sub_21C5310A8((uint64_t)v222);
          v235 = v232[2];
          v236 = (v233 & 1) == 0;
          v237 = v235 + v236;
          if (__OFADD__(v235, v236))
            goto LABEL_134;
          v238 = v233;
          if (v232[3] >= v237)
          {
            if ((v231 & 1) != 0)
            {
              v241 = v291;
              if ((v233 & 1) == 0)
                goto LABEL_118;
            }
            else
            {
              sub_21C55CAE0(type metadata accessor for UserAnnotationViewModel, &qword_255288C90);
              v241 = v291;
              if ((v238 & 1) == 0)
                goto LABEL_118;
            }
          }
          else
          {
            sub_21C55AC7C(v237, v231, type metadata accessor for UserAnnotationViewModel, &qword_255288C90);
            v239 = sub_21C5310A8((uint64_t)v222);
            if ((v238 & 1) != (v240 & 1))
              goto LABEL_139;
            v234 = v239;
            v241 = v291;
            if ((v238 & 1) == 0)
            {
LABEL_118:
              v241[(v234 >> 6) + 8] |= 1 << v234;
              *(_QWORD *)(v241[6] + 8 * v234) = v222;
              sub_21C52AAD4(v270, v241[7] + *(_QWORD *)(v284 + 72) * v234, type metadata accessor for UserAnnotationViewModel);
              v242 = v241[2];
              v213 = __OFADD__(v242, 1);
              v243 = v242 + 1;
              if (v213)
                goto LABEL_135;
              v241[2] = v243;
              v244 = v222;
              goto LABEL_123;
            }
          }
          sub_21C56171C(v270, v241[7] + *(_QWORD *)(v284 + 72) * v234, type metadata accessor for UserAnnotationViewModel);
LABEL_123:
          *(_QWORD *)(v225 + 16) = v241;

          swift_bridgeObjectRelease();
LABEL_99:
          v190 = (uint64_t)v281;
          v189 = (uint64_t)v282;
          v223(&aBlock, 0);

          sub_21C52A88C(v193, type metadata accessor for UserAnnotationViewModel);
          v186 = (uint64_t)v279 + v190;
          v184 = v189 - 1;
          if (!v184)
          {
            v245 = v277;
            swift_bridgeObjectRelease();
            return v245;
          }
        }
      }
    }
    return result;
  }
}

uint64_t sub_21C551AD8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t *, _QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  int64_t v54;
  uint64_t (*v55)();
  uint64_t v56;
  id v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  id v62;
  id v63;
  id v64;
  _QWORD *v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  objc_class *v78;
  _BYTE *v79;
  _QWORD *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  char *v85;
  char *v86;
  void *v87;
  id v88;
  id v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(uint64_t, uint64_t, uint64_t);
  id v95;
  uint64_t v96;
  double *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  double v105;
  double v106;
  void *v107;
  void *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  void *v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  char v133;
  int v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v139;
  id v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  int64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  int64_t v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  int64_t v172;
  unint64_t v173;
  int64_t v174;
  uint64_t v175;
  void **v176;
  uint64_t v177;
  void *v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  id v182;
  void (*v183)(uint64_t *, _QWORD);
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  char v187;
  char v188;
  char v189;
  uint64_t v190;
  void *v191;
  id v192;
  void (*v193)(uint64_t *, _QWORD);
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  char v197;
  char v198;
  int v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  void *v205;
  uint64_t v206;
  uint64_t *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int64_t v212;
  uint64_t v213;
  void **v214;
  void *v215;
  uint64_t v216;
  id v217;
  id v218;
  void (*v219)(uint64_t *, _QWORD);
  uint64_t v220;
  uint64_t v221;
  char v222;
  _QWORD *v223;
  char v224;
  unint64_t v225;
  uint64_t v226;
  _BOOL8 v227;
  uint64_t v228;
  char v229;
  unint64_t v230;
  char v231;
  _QWORD *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  BOOL v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  void (*v241)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v242;
  id v243;
  id v244;
  void (*v245)(uint64_t *, _QWORD);
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  char v249;
  char v250;
  int v251;
  uint64_t v252;
  int v253;
  _QWORD *v254;
  char v255;
  unint64_t v256;
  uint64_t v257;
  _BOOL8 v258;
  uint64_t v259;
  char v260;
  unint64_t v261;
  char v262;
  _QWORD *v263;
  uint64_t v264;
  uint64_t v265;
  id v266;
  uint64_t result;
  _QWORD v268[2];
  char *v269;
  uint64_t v270;
  unint64_t v271;
  unint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  id v278;
  uint64_t v279;
  uint64_t (*v280)();
  uint64_t (*v281)();
  _QWORD *v282;
  unsigned int (*v283)(uint64_t, uint64_t, uint64_t);
  id v284;
  _QWORD *v285;
  _QWORD *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  double *v295;
  void **v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  void **v300;
  _QWORD *v301;
  uint64_t v302;
  uint64_t v303;
  _QWORD *v304;
  int64_t v305;
  unint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t *v309;
  uint64_t v310;
  id v311;
  uint64_t v312;
  _QWORD *v313;
  uint64_t v314;
  uint64_t v315;
  __int128 v316;
  uint64_t aBlock;
  uint64_t v318;
  _QWORD *v319;
  _QWORD *v320;
  uint64_t (*v321)();
  uint64_t v322;
  objc_super v323;

  v279 = a4;
  v278 = a1;
  v291 = __swift_instantiateConcreteTypeFromMangledName(&qword_25528A520);
  v292 = *(_QWORD *)(v291 - 8);
  v8 = MEMORY[0x24BDAC7A8](v291);
  v304 = (_QWORD *)((char *)v268 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v296 = (void **)((char *)v268 - v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CC0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v268 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v277 = (uint64_t)v268 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v276 = (uint64_t)v268 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v289 = (uint64_t)v268 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v290 = (uint64_t)v268 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v294 = (uint64_t)v268 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v298 = (uint64_t)v268 - v25;
  v26 = type metadata accessor for MarkerAnnotationViewModel(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_QWORD *)(v27 + 64);
  v29 = MEMORY[0x24BDAC7A8](v26);
  v270 = (uint64_t)v268 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v287 = (uint64_t)v268 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v275 = (uint64_t)v268 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v288 = (uint64_t)v268 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (double *)((char *)v268 - v37);
  v39 = MEMORY[0x24BDAC7A8](v36);
  v293 = (uint64_t)v268 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v309 = (_QWORD *)((char *)v268 - v41);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CC8);
  v43 = MEMORY[0x24BDAC7A8](v42);
  v301 = (_QWORD *)((char *)v268 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v43);
  v300 = (void **)((char *)v268 - v45);
  *(_QWORD *)&v316 = v5;
  v311 = v5;
  v312 = a5;
  v46 = (void (*)(uint64_t *, _QWORD))swift_readAtKeyPath();
  v299 = *(_QWORD *)(v47 + 16);
  swift_bridgeObjectRetain();
  v46(&aBlock, 0);

  v48 = *(_QWORD *)(a2 + 16);
  v307 = v26;
  v310 = v27;
  if (v48)
  {
    v269 = v14;
    v49 = *(unsigned __int8 *)(v27 + 80);
    v50 = a2 + ((v49 + 32) & ~v49);
    v297 = *(_QWORD *)(v27 + 72);
    v273 = v49 | 7;
    v274 = (v49 + 24) & ~v49;
    v272 = (v28 + v274 + 7) & 0xFFFFFFFFFFFFFFF8;
    v271 = v272 + 40;
    v268[1] = a2;
    swift_bridgeObjectRetain();
    v51 = MEMORY[0x24BEE4AF8];
    v285 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v286 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v295 = v38;
    while (1)
    {
      v305 = v50;
      sub_21C529664(v50, (uint64_t)v38, type metadata accessor for MarkerAnnotationViewModel);
      v56 = *(_QWORD *)v38;
      *(_QWORD *)&v316 = v311;
      v57 = v311;
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      v58 = v320;
      v59 = v320[2];
      v306 = v51;
      v308 = v48;
      if (v59 && (v60 = sub_21C530FA8(v56), (v61 & 1) != 0))
      {
        v62 = *(id *)(v58[7] + 8 * v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v316 = v57;
        v63 = v57;
        v64 = v62;
        swift_getAtKeyPath();

        v65 = v319;
        if (v319[2] && (v66 = sub_21C5310EC((uint64_t)v64), (v67 & 1) != 0))
        {
          v68 = v289;
          sub_21C529664(v65[7] + v66 * v297, v289, type metadata accessor for MarkerAnnotationViewModel);
          v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
          v70 = v68;
          v71 = 0;
        }
        else
        {
          v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
          v68 = v289;
          v70 = v289;
          v71 = 1;
        }
        v303 = (uint64_t)v69;
        v69(v70, v71, 1, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
        if (v94(v68, 1, v26) != 1)
        {
          v284 = v63;
          sub_21C52AAD4(v68, v288, type metadata accessor for MarkerAnnotationViewModel);
          v320 = (_QWORD *)sub_21C531A4C(0, (unint64_t *)&unk_255289520);
          v321 = (uint64_t (*)())&off_24E057E28;
          v95 = v278;
          aBlock = (uint64_t)v278;
          v96 = (uint64_t)v38;
          v97 = v38;
          v98 = v275;
          sub_21C529664(v96, v275, type metadata accessor for MarkerAnnotationViewModel);
          sub_21C560FD4((uint64_t)&aBlock, (uint64_t)&v316);
          v99 = v287;
          sub_21C529664(v98, v287, type metadata accessor for MarkerAnnotationViewModel);
          sub_21C560FD4((uint64_t)&v316, (uint64_t)&v313);
          v100 = swift_allocObject();
          *(_QWORD *)(v100 + 16) = v64;
          sub_21C52AAD4(v98, v100 + v274, type metadata accessor for MarkerAnnotationViewModel);
          sub_21C56101C(&v316, v100 + v272);
          v101 = v95;
          v102 = v64;
          v103 = v101;
          v104 = v279;
          if (!v279)
            goto LABEL_24;
          swift_retain();
          objc_msgSend(v102, sel_coordinate);
          v38 = v97;
          if (vabdd_f64(v106, v97[11]) >= 0.00000000999999994 || vabdd_f64(v105, v97[12]) >= 0.00000000999999994)
          {
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v313);
            sub_21C52A88C(v99, type metadata accessor for MarkerAnnotationViewModel);
            v108 = v103;
            v109 = (_QWORD *)swift_allocObject();
            v109[2] = sub_21C561704;
            v109[3] = v100;
            v109[4] = v104;
            v110 = swift_allocObject();
            *(_QWORD *)(v110 + 16) = sub_21C561704;
            *(_QWORD *)(v110 + 24) = v100;
            v302 = v110;
            swift_retain();
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

            v111 = swift_allocObject();
            *(_QWORD *)(v111 + 16) = sub_21C562158;
            *(_QWORD *)(v111 + 24) = v109;
            swift_retain();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v282 = v109;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              v285 = sub_21C5B8580(0, v285[2] + 1, 1, v285);
            v113 = v299;
            v93 = v308;
            v115 = v285[2];
            v114 = v285[3];
            if (v115 >= v114 >> 1)
              v285 = sub_21C5B8580((_QWORD *)(v114 > 1), v115 + 1, 1, v285);
            v116 = v285;
            v285[2] = v115 + 1;
            v117 = &v116[2 * v115];
            v117[4] = sub_21C562160;
            v117[5] = v111;
            v118 = swift_allocObject();
            *(_QWORD *)(v118 + 16) = sub_21C561F98;
            *(_QWORD *)(v118 + 24) = v302;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v286 = sub_21C5B8580(0, v286[2] + 1, 1, v286);
            v120 = v286[2];
            v119 = v286[3];
            if (v120 >= v119 >> 1)
              v286 = sub_21C5B8580((_QWORD *)(v119 > 1), v120 + 1, 1, v286);
            v121 = v286;
            v286[2] = v120 + 1;
            v122 = &v121[2 * v120];
            v122[4] = sub_21C562160;
            v122[5] = v118;
            v281 = sub_21C562158;
            v280 = sub_21C561F98;
          }
          else
          {
            swift_release();
LABEL_24:
            objc_msgSend(v102, sel_setCoordinate_, *(double *)(v99 + 88), *(double *)(v99 + 96));
            if (*(_QWORD *)(v99 + 16))
              v107 = (void *)sub_21C5E3940();
            else
              v107 = 0;
            v38 = v295;
            v93 = v308;
            objc_msgSend(v102, sel_setTitle_, v107);

            v123 = *(_QWORD *)(v99 + 32);
            v281 = (uint64_t (*)())v103;
            if (v123)
              v124 = (void *)sub_21C5E3940();
            else
              v124 = 0;
            objc_msgSend(v102, sel_setSubtitle_, v124);

            v125 = v314;
            v126 = v315;
            __swift_project_boxed_opaque_existential_1(&v313, v314);
            v127 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v126 + 24))(v102, v125, v126);
            if (v127)
            {
              v128 = (void *)v127;
              objc_opt_self();
              v129 = (void *)swift_dynamicCastObjCClass();
              v130 = v287;
              if (v129)
              {
                sub_21C568894(v129, 0);
                v130 = v287;
              }
              swift_release();

            }
            else
            {
              swift_release();
              v130 = v287;
            }
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v313);
            sub_21C52A88C(v130, type metadata accessor for MarkerAnnotationViewModel);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

            v281 = 0;
            v282 = 0;
            v280 = 0;
            v302 = 0;
            v113 = v299;
          }
          swift_bridgeObjectRetain();
          v131 = sub_21C5310EC((uint64_t)v102);
          v133 = v132;
          swift_bridgeObjectRelease();
          v283 = v94;
          if ((v133 & 1) != 0)
          {
            v134 = swift_isUniquelyReferenced_nonNull_native();
            aBlock = v113;
            if (!v134)
            {
              sub_21C55CAE0(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0);
              v113 = aBlock;
            }
            v135 = v102;

            v136 = v276;
            sub_21C52AAD4(*(_QWORD *)(v113 + 56) + v131 * v297, v276, type metadata accessor for MarkerAnnotationViewModel);
            v299 = v113;
            sub_21C55B8B0(v131, v113, type metadata accessor for MarkerAnnotationViewModel);
            swift_bridgeObjectRelease();
            v137 = 0;
          }
          else
          {
            v135 = v102;
            v137 = 1;
            v136 = v276;
          }
          v138 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v303;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v303)(v136, v137, 1, v26);
          sub_21C524980(v136, &qword_255288CC0);
          v139 = v277;
          sub_21C529664((uint64_t)v38, v277, type metadata accessor for MarkerAnnotationViewModel);
          v138(v139, 0, 1, v26);
          *(_QWORD *)&v316 = v284;
          v140 = v284;
          v141 = v135;
          v284 = (id)swift_modifyAtReferenceWritableKeyPath();
          v143 = v142;
          if (v283(v139, 1, v26) == 1)
          {
            sub_21C524980(v139, &qword_255288CC0);
            swift_bridgeObjectRetain();
            v144 = sub_21C5310EC((uint64_t)v141);
            v146 = v145;
            swift_bridgeObjectRelease();
            if ((v146 & 1) != 0)
            {
              v147 = swift_isUniquelyReferenced_nonNull_native();
              v148 = *(_QWORD *)(v143 + 16);
              v313 = (_QWORD *)v148;
              *(_QWORD *)(v143 + 16) = 0x8000000000000000;
              if ((v147 & 1) == 0)
              {
                sub_21C55CAE0(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0);
                v148 = (uint64_t)v313;
              }

              v149 = (uint64_t)v269;
              sub_21C52AAD4(*(_QWORD *)(v148 + 56) + v144 * v297, (uint64_t)v269, type metadata accessor for MarkerAnnotationViewModel);
              sub_21C55B8B0(v144, v148, type metadata accessor for MarkerAnnotationViewModel);
              *(_QWORD *)(v143 + 16) = v148;
              swift_bridgeObjectRelease();
              v150 = 0;
            }
            else
            {
              v150 = 1;
              v149 = (uint64_t)v269;
            }
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v303)(v149, v150, 1, v26);

            sub_21C524980(v149, &qword_255288CC0);
            v38 = v295;
          }
          else
          {
            v52 = v270;
            sub_21C52AAD4(v139, v270, type metadata accessor for MarkerAnnotationViewModel);
            v53 = swift_isUniquelyReferenced_nonNull_native();
            v313 = *(_QWORD **)(v143 + 16);
            *(_QWORD *)(v143 + 16) = 0x8000000000000000;
            sub_21C55D460(v52, v141, v53, (uint64_t (*)(void *))sub_21C5310EC, type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0, (void (*)(_QWORD))type metadata accessor for MapBridgingMarker);
            *(_QWORD *)(v143 + 16) = v313;

            swift_bridgeObjectRelease();
          }
          v54 = v305;
          v55 = v281;
          ((void (*)(uint64_t *, _QWORD))v284)(&aBlock, 0);
          sub_21C531A9C((uint64_t)v280);
          sub_21C531A9C((uint64_t)v55);

          sub_21C52A88C(v288, type metadata accessor for MarkerAnnotationViewModel);
          sub_21C52A88C((uint64_t)v38, type metadata accessor for MarkerAnnotationViewModel);
          v51 = v306;
          goto LABEL_5;
        }

        sub_21C524980(v68, &qword_255288CC0);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v73 = *((_QWORD *)v38 + 1);
      v72 = *((_QWORD *)v38 + 2);
      v74 = *((_QWORD *)v38 + 4);
      v302 = *((_QWORD *)v38 + 3);
      v75 = *((_QWORD *)v38 + 11);
      v76 = *((_QWORD *)v38 + 12);
      v77 = (void *)*((_QWORD *)v38 + 5);
      LODWORD(v303) = *((unsigned __int8 *)v38 + 48);
      v78 = (objc_class *)type metadata accessor for MapBridgingMarker();
      v79 = objc_allocWithZone(v78);
      v80 = &v79[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_title];
      *v80 = 0;
      v80[1] = 0;
      v81 = (uint64_t *)&v79[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_subtitle];
      *v81 = 0;
      v81[1] = 0;
      v82 = OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem;
      *(_QWORD *)&v79[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem] = 0;
      v83 = OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature;
      v79[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature] = 0;
      *v80 = v73;
      v80[1] = v72;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v84 = v77;
      v85 = v79;
      swift_bridgeObjectRelease();
      *v81 = v302;
      v81[1] = v74;
      swift_bridgeObjectRelease();
      v86 = &v85[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_coordinate];
      *(_QWORD *)v86 = v75;
      *((_QWORD *)v86 + 1) = v76;
      v87 = *(void **)&v79[v82];
      *(_QWORD *)&v79[v82] = v77;
      v38 = v295;
      v88 = v84;

      v79[v83] = v303;
      v323.receiver = v85;
      v323.super_class = v78;
      v89 = objc_msgSendSuper2(&v323, sel_init);

      v90 = (uint64_t)v304 + *(int *)(v291 + 48);
      *v304 = v89;
      sub_21C529664((uint64_t)v38, v90, type metadata accessor for MarkerAnnotationViewModel);
      v51 = v306;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v51 = sub_21C5B90A4(0, *(_QWORD *)(v51 + 16) + 1, 1, v51);
      v92 = *(_QWORD *)(v51 + 16);
      v91 = *(_QWORD *)(v51 + 24);
      v26 = v307;
      v27 = v310;
      v93 = v308;
      if (v92 >= v91 >> 1)
        v51 = sub_21C5B90A4(v91 > 1, v92 + 1, 1, v51);
      *(_QWORD *)(v51 + 16) = v92 + 1;
      sub_21C52DB08((uint64_t)v304, v51+ ((*(unsigned __int8 *)(v292 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v292 + 80))+ *(_QWORD *)(v292 + 72) * v92, &qword_25528A520);
      sub_21C52A88C((uint64_t)v38, type metadata accessor for MarkerAnnotationViewModel);
      v54 = v305;
LABEL_5:
      v50 = v54 + v297;
      v48 = v93 - 1;
      if (!v48)
      {
        swift_bridgeObjectRelease();
        goto LABEL_59;
      }
    }
  }
  v51 = MEMORY[0x24BEE4AF8];
  v285 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v286 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_59:
  v306 = v51;
  if (v279)
  {
    v151 = (void *)objc_opt_self();
    v152 = swift_allocObject();
    *(_QWORD *)(v152 + 16) = v285;
    v321 = sub_21C5620F8;
    v322 = v152;
    v153 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v318 = 1107296256;
    v319 = sub_21C558F28;
    v320 = &block_descriptor_379;
    v154 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    v155 = swift_allocObject();
    *(_QWORD *)(v155 + 16) = v286;
    v321 = sub_21C561FAC;
    v322 = v155;
    aBlock = v153;
    v318 = 1107296256;
    v319 = sub_21C558F54;
    v320 = &block_descriptor_386;
    v156 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v151, sel_animateWithDuration_animations_completion_, v154, v156, 0.25);
    _Block_release(v156);
    _Block_release(v154);
  }
  v157 = *(_QWORD *)(v299 + 64);
  v304 = (_QWORD *)(v299 + 64);
  v158 = -1;
  v159 = -1 << *(_BYTE *)(v299 + 32);
  v303 = ~v159;
  if (-v159 < 64)
    v158 = ~(-1 << -(char)v159);
  v160 = v158 & v157;
  v305 = (unint64_t)(63 - v159) >> 6;
  v302 = v305 - 1;
  swift_bridgeObjectRetain();
  v161 = 0;
  while (1)
  {
    if (v160)
    {
      v308 = (v160 - 1) & v160;
      v164 = __clz(__rbit64(v160)) | (v161 << 6);
      v165 = v161;
      goto LABEL_68;
    }
    v165 = v161 + 1;
    if (__OFADD__(v161, 1))
      goto LABEL_139;
    v172 = v161;
    if (v165 < v305)
      break;
LABEL_86:
    v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CD0);
    v168 = (uint64_t)v301;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 56))(v301, 1, 1, v175);
    v308 = 0;
LABEL_87:
    v176 = v300;
    sub_21C52DB08(v168, (uint64_t)v300, &qword_255288CC8);
    v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CD0);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 48))(v176, 1, v177) == 1)
    {
      sub_21C52A884();
      v201 = swift_bridgeObjectRetain();
      v202 = sub_21C559098(v201);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v202 >> 62)
        goto LABEL_143;
      swift_bridgeObjectRetain();
      sub_21C5E3DD8();
      sub_21C531A4C(0, (unint64_t *)&qword_255289570);
      v203 = v202;
      while (1)
      {
        v204 = v306;
        swift_bridgeObjectRelease();
        if (sub_21C5584A4(v203))
          break;
        if (sub_21C5584A4(v203))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
          v205 = (void *)sub_21C5E39D0();
          objc_msgSend(v278, sel_removeAnnotations_, v205);
LABEL_103:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v206 = *(_QWORD *)(v204 + 16);
          if (!v206)
            return v204;
          goto LABEL_104;
        }
        swift_bridgeObjectRelease();
        v206 = *(_QWORD *)(v204 + 16);
        if (!v206)
          return v204;
LABEL_104:
        v207 = (uint64_t *)((char *)v296 + *(int *)(v291 + 48));
        v208 = (char *)(v204
                      + ((*(unsigned __int8 *)(v292 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v292 + 80)));
        v304 = *(_QWORD **)(v292 + 72);
        swift_bridgeObjectRetain();
        v309 = v207;
        while (1)
        {
          v308 = v206;
          v305 = (int64_t)v208;
          v213 = (uint64_t)v208;
          v214 = v296;
          sub_21C531B18(v213, (uint64_t)v296, &qword_25528A520);
          v215 = *v214;
          v216 = *v207;
          *(_QWORD *)&v316 = v311;
          v217 = v311;
          swift_bridgeObjectRetain();
          v218 = v215;
          v219 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v221 = v220;
          v222 = swift_isUniquelyReferenced_nonNull_native();
          v313 = *(_QWORD **)(v221 + 24);
          v223 = v313;
          *(_QWORD *)(v221 + 24) = 0x8000000000000000;
          v225 = sub_21C530FA8(v216);
          v226 = v223[2];
          v227 = (v224 & 1) == 0;
          v228 = v226 + v227;
          if (__OFADD__(v226, v227))
            break;
          v229 = v224;
          if (v223[3] >= v228)
          {
            if ((v222 & 1) == 0)
              sub_21C55CD08(&qword_255288CD8);
          }
          else
          {
            sub_21C55AFC8(v228, v222, &qword_255288CD8);
            v230 = sub_21C530FA8(v216);
            if ((v229 & 1) != (v231 & 1))
              goto LABEL_145;
            v225 = v230;
          }
          v232 = v313;
          if ((v229 & 1) != 0)
          {
            v233 = v313[7];
            v234 = 8 * v225;

            *(_QWORD *)(v233 + v234) = v218;
          }
          else
          {
            v313[(v225 >> 6) + 8] |= 1 << v225;
            v235 = 8 * v225;
            *(_QWORD *)(v232[6] + v235) = v216;
            *(_QWORD *)(v232[7] + v235) = v218;
            v236 = v232[2];
            v237 = __OFADD__(v236, 1);
            v238 = v236 + 1;
            if (v237)
              goto LABEL_140;
            v232[2] = v238;
            swift_bridgeObjectRetain();
          }
          *(_QWORD *)(v221 + 24) = v232;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v219(&aBlock, 0);

          v239 = v294;
          sub_21C529664((uint64_t)v309, v294, type metadata accessor for MarkerAnnotationViewModel);
          v240 = v310;
          v241 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v310 + 56);
          v242 = v307;
          v241(v239, 0, 1, v307);
          *(_QWORD *)&v316 = v217;
          v243 = v217;
          v244 = v218;
          v245 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v247 = v246;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v240 + 48))(v239, 1, v242) == 1)
          {
            sub_21C524980(v239, &qword_255288CC0);
            swift_bridgeObjectRetain();
            v248 = sub_21C5310EC((uint64_t)v244);
            v250 = v249;
            swift_bridgeObjectRelease();
            if ((v250 & 1) != 0)
            {
              v251 = swift_isUniquelyReferenced_nonNull_native();
              v252 = *(_QWORD *)(v247 + 16);
              v313 = (_QWORD *)v252;
              *(_QWORD *)(v247 + 16) = 0x8000000000000000;
              v211 = v308;
              if (!v251)
              {
                sub_21C55CAE0(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0);
                v252 = (uint64_t)v313;
              }

              v210 = v290;
              sub_21C52AAD4(*(_QWORD *)(v252 + 56) + *(_QWORD *)(v240 + 72) * v248, v290, type metadata accessor for MarkerAnnotationViewModel);
              sub_21C55B8B0(v248, v252, type metadata accessor for MarkerAnnotationViewModel);
              *(_QWORD *)(v247 + 16) = v252;
              swift_bridgeObjectRelease();
              v209 = 0;
            }
            else
            {
              v209 = 1;
              v210 = v290;
              v211 = v308;
            }
            v241(v210, v209, 1, v307);

            sub_21C524980(v210, &qword_255288CC0);
          }
          else
          {
            sub_21C52AAD4(v239, v293, type metadata accessor for MarkerAnnotationViewModel);
            v253 = swift_isUniquelyReferenced_nonNull_native();
            v313 = *(_QWORD **)(v247 + 16);
            v254 = v313;
            *(_QWORD *)(v247 + 16) = 0x8000000000000000;
            v256 = sub_21C5310EC((uint64_t)v244);
            v257 = v254[2];
            v258 = (v255 & 1) == 0;
            v259 = v257 + v258;
            if (__OFADD__(v257, v258))
              goto LABEL_141;
            v260 = v255;
            if (v254[3] >= v259)
            {
              if ((v253 & 1) == 0)
                sub_21C55CAE0(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0);
            }
            else
            {
              sub_21C55AC7C(v259, v253, type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0);
              v261 = sub_21C5310EC((uint64_t)v244);
              if ((v260 & 1) != (v262 & 1))
                goto LABEL_146;
              v256 = v261;
            }
            v263 = v313;
            if ((v260 & 1) != 0)
            {
              sub_21C56171C(v293, v313[7] + *(_QWORD *)(v240 + 72) * v256, type metadata accessor for MarkerAnnotationViewModel);
            }
            else
            {
              v313[(v256 >> 6) + 8] |= 1 << v256;
              *(_QWORD *)(v263[6] + 8 * v256) = v244;
              sub_21C52AAD4(v293, v263[7] + *(_QWORD *)(v240 + 72) * v256, type metadata accessor for MarkerAnnotationViewModel);
              v264 = v263[2];
              v237 = __OFADD__(v264, 1);
              v265 = v264 + 1;
              if (v237)
                goto LABEL_142;
              v263[2] = v265;
              v266 = v244;
            }
            *(_QWORD *)(v247 + 16) = v263;

            swift_bridgeObjectRelease();
            v211 = v308;
          }
          v207 = v309;
          v212 = v305;
          v245(&aBlock, 0);

          sub_21C52A88C((uint64_t)v207, type metadata accessor for MarkerAnnotationViewModel);
          v208 = (char *)v304 + v212;
          v206 = v211 - 1;
          if (!v206)
          {
            v204 = v306;
            swift_bridgeObjectRelease();
            return v204;
          }
        }
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        sub_21C531A4C(0, (unint64_t *)&qword_255289570);
        swift_bridgeObjectRetain();
        v203 = sub_21C5E3D54();
        swift_bridgeObjectRelease();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
      v205 = (void *)sub_21C5E39D0();
      objc_msgSend(v278, sel_removeOverlays_, v205);
      goto LABEL_103;
    }
    v178 = *v176;
    v179 = (uint64_t)v176 + *(int *)(v177 + 48);
    v180 = v309;
    sub_21C52AAD4(v179, (uint64_t)v309, type metadata accessor for MarkerAnnotationViewModel);
    v181 = *v180;
    *(_QWORD *)&v316 = v311;
    v182 = v311;
    swift_bridgeObjectRetain();
    v183 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v185 = v184;
    swift_bridgeObjectRetain();
    v186 = sub_21C530FA8(v181);
    v188 = v187;
    swift_bridgeObjectRelease();
    if ((v188 & 1) != 0)
    {
      v189 = swift_isUniquelyReferenced_nonNull_native();
      v190 = *(_QWORD *)(v185 + 24);
      v313 = (_QWORD *)v190;
      *(_QWORD *)(v185 + 24) = 0x8000000000000000;
      if ((v189 & 1) == 0)
      {
        sub_21C55CD08(&qword_255288CD8);
        v190 = (uint64_t)v313;
      }
      swift_bridgeObjectRelease();
      v191 = *(void **)(*(_QWORD *)(v190 + 56) + 8 * v186);
      sub_21C55BA94(v186, v190);
      *(_QWORD *)(v185 + 24) = v190;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = v307;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v183(&aBlock, 0);

    *(_QWORD *)&v316 = v182;
    v192 = v182;
    v193 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v195 = v194;
    swift_bridgeObjectRetain();
    v196 = sub_21C5310EC((uint64_t)v178);
    v198 = v197;
    swift_bridgeObjectRelease();
    v27 = v310;
    if ((v198 & 1) != 0)
    {
      v199 = swift_isUniquelyReferenced_nonNull_native();
      v200 = *(_QWORD *)(v195 + 16);
      v313 = (_QWORD *)v200;
      *(_QWORD *)(v195 + 16) = 0x8000000000000000;
      if (!v199)
      {
        sub_21C55CAE0(type metadata accessor for MarkerAnnotationViewModel, (uint64_t *)&unk_255288CE0);
        v200 = (uint64_t)v313;
      }

      v163 = v298;
      sub_21C52AAD4(*(_QWORD *)(v200 + 56) + *(_QWORD *)(v27 + 72) * v196, v298, type metadata accessor for MarkerAnnotationViewModel);
      sub_21C55B8B0(v196, v200, type metadata accessor for MarkerAnnotationViewModel);
      *(_QWORD *)(v195 + 16) = v200;
      swift_bridgeObjectRelease();
      v162 = 0;
    }
    else
    {
      v162 = 1;
      v163 = v298;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v163, v162, 1, v26);
    sub_21C524980(v163, &qword_255288CC0);
    v193(&aBlock, 0);

    sub_21C52A88C((uint64_t)v309, type metadata accessor for MarkerAnnotationViewModel);
    v161 = v172;
    v160 = v308;
  }
  v173 = v304[v165];
  if (v173)
    goto LABEL_72;
  v174 = v161 + 2;
  v172 = v161 + 1;
  if (v161 + 2 >= v305)
    goto LABEL_86;
  v173 = v304[v174];
  if (v173)
  {
LABEL_75:
    v165 = v174;
    goto LABEL_72;
  }
  v172 = v161 + 2;
  if (v161 + 3 >= v305)
    goto LABEL_86;
  v173 = v304[v161 + 3];
  if (v173)
  {
    v165 = v161 + 3;
LABEL_72:
    v308 = (v173 - 1) & v173;
    v164 = __clz(__rbit64(v173)) + (v165 << 6);
LABEL_68:
    v166 = *(_QWORD *)(v299 + 56);
    v167 = *(void **)(*(_QWORD *)(v299 + 48) + 8 * v164);
    v168 = (uint64_t)v301;
    *v301 = v167;
    v169 = v166 + *(_QWORD *)(v27 + 72) * v164;
    v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CD0);
    sub_21C529664(v169, v168 + *(int *)(v170 + 48), type metadata accessor for MarkerAnnotationViewModel);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 56))(v168, 0, 1, v170);
    v171 = v167;
    v172 = v165;
    goto LABEL_87;
  }
  v174 = v161 + 4;
  v172 = v161 + 3;
  if (v161 + 4 >= v305)
    goto LABEL_86;
  v173 = v304[v174];
  if (v173)
    goto LABEL_75;
  while (1)
  {
    v165 = v174 + 1;
    if (__OFADD__(v174, 1))
      break;
    if (v165 >= v305)
    {
      v172 = v302;
      goto LABEL_86;
    }
    v173 = v304[v165];
    ++v174;
    if (v173)
      goto LABEL_72;
  }
  __break(1u);
LABEL_145:
  sub_21C5E3DF0();
  __break(1u);
LABEL_146:
  type metadata accessor for MapBridgingMarker();
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

uint64_t sub_21C553960(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t *, _QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  int64_t v54;
  uint64_t (*v55)();
  uint64_t v56;
  id v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  id v62;
  id v63;
  id v64;
  _QWORD *v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  void (*v69)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  objc_class *v79;
  char *v80;
  uint64_t *v81;
  uint64_t *v82;
  uint64_t v83;
  id v84;
  char *v85;
  uint64_t *v86;
  void *v87;
  id v88;
  id v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(uint64_t, uint64_t, uint64_t);
  id v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  double v105;
  double v106;
  void *v107;
  void *v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  char v133;
  int v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v139;
  id v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  char v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  int64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  int64_t v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  int64_t v172;
  unint64_t v173;
  int64_t v174;
  uint64_t v175;
  void **v176;
  uint64_t v177;
  void *v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  id v182;
  void (*v183)(uint64_t *, _QWORD);
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  char v187;
  char v188;
  char v189;
  uint64_t v190;
  void *v191;
  id v192;
  void (*v193)(uint64_t *, _QWORD);
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  char v197;
  char v198;
  int v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  void *v205;
  uint64_t v206;
  uint64_t *v207;
  int64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int64_t v212;
  uint64_t v213;
  void **v214;
  void *v215;
  uint64_t v216;
  id v217;
  id v218;
  void (*v219)(uint64_t *, _QWORD);
  uint64_t v220;
  uint64_t v221;
  char v222;
  _QWORD *v223;
  char v224;
  unint64_t v225;
  uint64_t v226;
  _BOOL8 v227;
  uint64_t v228;
  char v229;
  unint64_t v230;
  char v231;
  _QWORD *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  BOOL v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  void (*v241)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v242;
  id v243;
  id v244;
  void (*v245)(uint64_t *, _QWORD);
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  char v249;
  char v250;
  int v251;
  uint64_t v252;
  int v253;
  _QWORD *v254;
  char v255;
  unint64_t v256;
  uint64_t v257;
  _BOOL8 v258;
  uint64_t v259;
  char v260;
  unint64_t v261;
  char v262;
  _QWORD *v263;
  uint64_t v264;
  uint64_t v265;
  id v266;
  uint64_t result;
  _QWORD v268[2];
  char *v269;
  uint64_t v270;
  unint64_t v271;
  unint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  id v278;
  uint64_t v279;
  uint64_t (*v280)();
  uint64_t (*v281)();
  _QWORD *v282;
  unsigned int (*v283)(uint64_t, uint64_t, uint64_t);
  id v284;
  _QWORD *v285;
  _QWORD *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  void (*v292)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  void **v297;
  int64_t v298;
  uint64_t v299;
  uint64_t v300;
  void **v301;
  _QWORD *v302;
  uint64_t v303;
  uint64_t *v304;
  int64_t v305;
  unint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t *v309;
  uint64_t v310;
  id v311;
  uint64_t v312;
  _QWORD *v313;
  uint64_t v314;
  uint64_t v315;
  __int128 v316;
  uint64_t aBlock;
  uint64_t v318;
  _QWORD *v319;
  _QWORD *v320;
  uint64_t (*v321)();
  uint64_t v322;
  objc_super v323;

  v279 = a4;
  v278 = a1;
  v293 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CF8);
  v294 = *(_QWORD *)(v293 - 8);
  v8 = MEMORY[0x24BDAC7A8](v293);
  v303 = (uint64_t)v268 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v297 = (void **)((char *)v268 - v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D00);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v268 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v277 = (uint64_t)v268 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v276 = (uint64_t)v268 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v289 = (uint64_t)v268 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v291 = (uint64_t)v268 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v296 = (uint64_t)v268 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v299 = (uint64_t)v268 - v25;
  v26 = type metadata accessor for CustomAnnotationViewModel(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_QWORD *)(v27 + 64);
  v29 = MEMORY[0x24BDAC7A8](v26);
  v270 = (uint64_t)v268 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v287 = (uint64_t)v268 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v275 = (uint64_t)v268 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v288 = (uint64_t)v268 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (_QWORD *)((char *)v268 - v37);
  v39 = MEMORY[0x24BDAC7A8](v36);
  v295 = (uint64_t)v268 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v309 = (_QWORD *)((char *)v268 - v41);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D08);
  v43 = MEMORY[0x24BDAC7A8](v42);
  v302 = (_QWORD *)((char *)v268 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v43);
  v301 = (void **)((char *)v268 - v45);
  *(_QWORD *)&v316 = v5;
  v311 = v5;
  v312 = a5;
  v46 = (void (*)(uint64_t *, _QWORD))swift_readAtKeyPath();
  v300 = *(_QWORD *)(v47 + 16);
  swift_bridgeObjectRetain();
  v46(&aBlock, 0);

  v48 = *(_QWORD *)(a2 + 16);
  v307 = v26;
  v310 = v27;
  if (v48)
  {
    v269 = v14;
    v49 = *(unsigned __int8 *)(v27 + 80);
    v50 = a2 + ((v49 + 32) & ~v49);
    v298 = *(_QWORD *)(v27 + 72);
    v273 = v49 | 7;
    v274 = (v49 + 24) & ~v49;
    v272 = (v28 + v274 + 7) & 0xFFFFFFFFFFFFFFF8;
    v271 = v272 + 40;
    v268[1] = a2;
    swift_bridgeObjectRetain();
    v51 = MEMORY[0x24BEE4AF8];
    v285 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v286 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v304 = v38;
    while (1)
    {
      v305 = v50;
      sub_21C529664(v50, (uint64_t)v38, type metadata accessor for CustomAnnotationViewModel);
      v56 = *v38;
      *(_QWORD *)&v316 = v311;
      v57 = v311;
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();

      v58 = v320;
      v59 = v320[2];
      v306 = v51;
      v308 = v48;
      if (v59 && (v60 = sub_21C530FA8(v56), (v61 & 1) != 0))
      {
        v62 = *(id *)(v58[7] + 8 * v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v316 = v57;
        v63 = v57;
        v64 = v62;
        swift_getAtKeyPath();

        v65 = v319;
        if (v319[2] && (v66 = sub_21C531130((uint64_t)v64), (v67 & 1) != 0))
        {
          v68 = v289;
          sub_21C529664(v65[7] + v66 * v298, v289, type metadata accessor for CustomAnnotationViewModel);
          v69 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56);
          v70 = v68;
          v71 = 0;
        }
        else
        {
          v69 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56);
          v68 = v289;
          v70 = v289;
          v71 = 1;
        }
        v292 = v69;
        v69(v70, v71, 1, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
        if (v94(v68, 1, v26) != 1)
        {
          v284 = v63;
          sub_21C52AAD4(v68, v288, type metadata accessor for CustomAnnotationViewModel);
          v320 = (_QWORD *)sub_21C531A4C(0, (unint64_t *)&unk_255289520);
          v321 = (uint64_t (*)())&off_24E057E28;
          v95 = v278;
          aBlock = (uint64_t)v278;
          v96 = (uint64_t)v38;
          v97 = v38;
          v98 = v275;
          sub_21C529664(v96, v275, type metadata accessor for CustomAnnotationViewModel);
          sub_21C560FD4((uint64_t)&aBlock, (uint64_t)&v316);
          v99 = v287;
          sub_21C529664(v98, v287, type metadata accessor for CustomAnnotationViewModel);
          sub_21C560FD4((uint64_t)&v316, (uint64_t)&v313);
          v100 = swift_allocObject();
          *(_QWORD *)(v100 + 16) = v64;
          sub_21C52AAD4(v98, v100 + v274, type metadata accessor for CustomAnnotationViewModel);
          sub_21C56101C(&v316, v100 + v272);
          v101 = v95;
          v102 = v64;
          v103 = v101;
          v104 = v279;
          if (!v279)
            goto LABEL_24;
          swift_retain();
          objc_msgSend(v102, sel_coordinate);
          v38 = v97;
          if (vabdd_f64(v106, *((double *)v97 + 7)) >= 0.00000000999999994
            || vabdd_f64(v105, *((double *)v97 + 8)) >= 0.00000000999999994)
          {
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v313);
            sub_21C52A88C(v99, type metadata accessor for CustomAnnotationViewModel);
            v108 = v103;
            v109 = (_QWORD *)swift_allocObject();
            v109[2] = sub_21C561764;
            v109[3] = v100;
            v109[4] = v104;
            v110 = swift_allocObject();
            *(_QWORD *)(v110 + 16) = sub_21C561764;
            *(_QWORD *)(v110 + 24) = v100;
            v290 = v110;
            swift_retain();
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

            v111 = swift_allocObject();
            *(_QWORD *)(v111 + 16) = sub_21C562158;
            *(_QWORD *)(v111 + 24) = v109;
            swift_retain();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v282 = v109;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              v285 = sub_21C5B8580(0, v285[2] + 1, 1, v285);
            v113 = v300;
            v93 = v308;
            v115 = v285[2];
            v114 = v285[3];
            if (v115 >= v114 >> 1)
              v285 = sub_21C5B8580((_QWORD *)(v114 > 1), v115 + 1, 1, v285);
            v116 = v285;
            v285[2] = v115 + 1;
            v117 = &v116[2 * v115];
            v117[4] = sub_21C562160;
            v117[5] = v111;
            v118 = swift_allocObject();
            *(_QWORD *)(v118 + 16) = sub_21C561F98;
            *(_QWORD *)(v118 + 24) = v290;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v286 = sub_21C5B8580(0, v286[2] + 1, 1, v286);
            v120 = v286[2];
            v119 = v286[3];
            if (v120 >= v119 >> 1)
              v286 = sub_21C5B8580((_QWORD *)(v119 > 1), v120 + 1, 1, v286);
            v121 = v286;
            v286[2] = v120 + 1;
            v122 = &v121[2 * v120];
            v122[4] = sub_21C562160;
            v122[5] = v118;
            v281 = sub_21C562158;
            v280 = sub_21C561F98;
          }
          else
          {
            swift_release();
LABEL_24:
            objc_msgSend(v102, sel_setCoordinate_, *(double *)(v99 + 56), *(double *)(v99 + 64));
            if (*(_QWORD *)(v99 + 16))
              v107 = (void *)sub_21C5E3940();
            else
              v107 = 0;
            v38 = v304;
            v93 = v308;
            objc_msgSend(v102, sel_setTitle_, v107);

            v123 = *(_QWORD *)(v99 + 32);
            v281 = (uint64_t (*)())v103;
            if (v123)
              v124 = (void *)sub_21C5E3940();
            else
              v124 = 0;
            objc_msgSend(v102, sel_setSubtitle_, v124);

            v125 = v314;
            v126 = v315;
            __swift_project_boxed_opaque_existential_1(&v313, v314);
            v127 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v126 + 24))(v102, v125, v126);
            if (v127)
            {
              v128 = (void *)v127;
              type metadata accessor for SwiftUIAnnotationView();
              v129 = (char *)swift_dynamicCastClass();
              v130 = v287;
              if (v129)
              {
                sub_21C568604(v129, 0);
                v130 = v287;
              }
              swift_release();

            }
            else
            {
              swift_release();
              v130 = v287;
            }
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v313);
            sub_21C52A88C(v130, type metadata accessor for CustomAnnotationViewModel);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);

            v281 = 0;
            v282 = 0;
            v280 = 0;
            v290 = 0;
            v113 = v300;
          }
          swift_bridgeObjectRetain();
          v131 = sub_21C531130((uint64_t)v102);
          v133 = v132;
          swift_bridgeObjectRelease();
          v283 = v94;
          if ((v133 & 1) != 0)
          {
            v134 = swift_isUniquelyReferenced_nonNull_native();
            aBlock = v113;
            if (!v134)
            {
              sub_21C55CAE0(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20);
              v113 = aBlock;
            }
            v135 = v102;

            v136 = v276;
            sub_21C52AAD4(*(_QWORD *)(v113 + 56) + v131 * v298, v276, type metadata accessor for CustomAnnotationViewModel);
            v300 = v113;
            sub_21C55B8B0(v131, v113, type metadata accessor for CustomAnnotationViewModel);
            swift_bridgeObjectRelease();
            v137 = 0;
          }
          else
          {
            v135 = v102;
            v137 = 1;
            v136 = v276;
          }
          v138 = v292;
          v292(v136, v137, 1, v26);
          sub_21C524980(v136, &qword_255288D00);
          v139 = v277;
          sub_21C529664((uint64_t)v38, v277, type metadata accessor for CustomAnnotationViewModel);
          v138(v139, 0, 1, v26);
          *(_QWORD *)&v316 = v284;
          v140 = v284;
          v141 = v135;
          v284 = (id)swift_modifyAtReferenceWritableKeyPath();
          v143 = v142;
          if (v283(v139, 1, v26) == 1)
          {
            sub_21C524980(v139, &qword_255288D00);
            swift_bridgeObjectRetain();
            v144 = sub_21C531130((uint64_t)v141);
            v146 = v145;
            swift_bridgeObjectRelease();
            if ((v146 & 1) != 0)
            {
              v147 = swift_isUniquelyReferenced_nonNull_native();
              v148 = *(_QWORD *)(v143 + 16);
              v313 = (_QWORD *)v148;
              *(_QWORD *)(v143 + 16) = 0x8000000000000000;
              if ((v147 & 1) == 0)
              {
                sub_21C55CAE0(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20);
                v148 = (uint64_t)v313;
              }

              v149 = (uint64_t)v269;
              sub_21C52AAD4(*(_QWORD *)(v148 + 56) + v144 * v298, (uint64_t)v269, type metadata accessor for CustomAnnotationViewModel);
              sub_21C55B8B0(v144, v148, type metadata accessor for CustomAnnotationViewModel);
              *(_QWORD *)(v143 + 16) = v148;
              swift_bridgeObjectRelease();
              v150 = 0;
            }
            else
            {
              v150 = 1;
              v149 = (uint64_t)v269;
            }
            v292(v149, v150, 1, v26);

            sub_21C524980(v149, &qword_255288D00);
            v38 = v304;
          }
          else
          {
            v52 = v270;
            sub_21C52AAD4(v139, v270, type metadata accessor for CustomAnnotationViewModel);
            v53 = swift_isUniquelyReferenced_nonNull_native();
            v313 = *(_QWORD **)(v143 + 16);
            *(_QWORD *)(v143 + 16) = 0x8000000000000000;
            sub_21C55D460(v52, v141, v53, (uint64_t (*)(void *))sub_21C531130, type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20, (void (*)(_QWORD))type metadata accessor for MapBridgingCustomAnnotation);
            *(_QWORD *)(v143 + 16) = v313;

            swift_bridgeObjectRelease();
          }
          v54 = v305;
          v55 = v281;
          ((void (*)(uint64_t *, _QWORD))v284)(&aBlock, 0);
          sub_21C531A9C((uint64_t)v280);
          sub_21C531A9C((uint64_t)v55);

          sub_21C52A88C(v288, type metadata accessor for CustomAnnotationViewModel);
          sub_21C52A88C((uint64_t)v38, type metadata accessor for CustomAnnotationViewModel);
          v51 = v306;
          goto LABEL_5;
        }

        sub_21C524980(v68, &qword_255288D00);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v73 = v38[1];
      v72 = v38[2];
      v75 = v38[3];
      v74 = v38[4];
      v76 = v38[7];
      v77 = v38[8];
      v78 = (void *)v304[5];
      v79 = (objc_class *)type metadata accessor for MapBridgingCustomAnnotation();
      v80 = (char *)objc_allocWithZone(v79);
      v81 = (uint64_t *)&v80[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_title];
      *v81 = 0;
      v81[1] = 0;
      v82 = (uint64_t *)&v80[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_subtitle];
      *v82 = 0;
      v82[1] = 0;
      v83 = OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_mapItem;
      *(_QWORD *)&v80[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_mapItem] = 0;
      *v81 = v73;
      v81[1] = v72;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v84 = v78;
      v85 = v80;
      swift_bridgeObjectRelease();
      *v82 = v75;
      v82[1] = v74;
      swift_bridgeObjectRelease();
      v86 = (uint64_t *)&v85[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_coordinate];
      *v86 = v76;
      v86[1] = v77;
      v87 = *(void **)&v80[v83];
      *(_QWORD *)&v80[v83] = v78;
      v38 = v304;
      v88 = v84;

      v323.receiver = v85;
      v323.super_class = v79;
      v89 = objc_msgSendSuper2(&v323, sel_init);

      v90 = v303 + *(int *)(v293 + 48);
      *(_QWORD *)v303 = v89;
      sub_21C529664((uint64_t)v38, v90, type metadata accessor for CustomAnnotationViewModel);
      v51 = v306;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v51 = sub_21C5B92C4(0, *(_QWORD *)(v51 + 16) + 1, 1, v51);
      v92 = *(_QWORD *)(v51 + 16);
      v91 = *(_QWORD *)(v51 + 24);
      v26 = v307;
      v27 = v310;
      v93 = v308;
      if (v92 >= v91 >> 1)
        v51 = sub_21C5B92C4(v91 > 1, v92 + 1, 1, v51);
      *(_QWORD *)(v51 + 16) = v92 + 1;
      sub_21C52DB08(v303, v51+ ((*(unsigned __int8 *)(v294 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v294 + 80))+ *(_QWORD *)(v294 + 72) * v92, &qword_255288CF8);
      sub_21C52A88C((uint64_t)v38, type metadata accessor for CustomAnnotationViewModel);
      v54 = v305;
LABEL_5:
      v50 = v54 + v298;
      v48 = v93 - 1;
      if (!v48)
      {
        swift_bridgeObjectRelease();
        goto LABEL_59;
      }
    }
  }
  v51 = MEMORY[0x24BEE4AF8];
  v285 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v286 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_59:
  v306 = v51;
  if (v279)
  {
    v151 = (void *)objc_opt_self();
    v152 = swift_allocObject();
    *(_QWORD *)(v152 + 16) = v285;
    v321 = sub_21C5620F8;
    v322 = v152;
    v153 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v318 = 1107296256;
    v319 = sub_21C558F28;
    v320 = &block_descriptor_413;
    v154 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    v155 = swift_allocObject();
    *(_QWORD *)(v155 + 16) = v286;
    v321 = sub_21C561FAC;
    v322 = v155;
    aBlock = v153;
    v318 = 1107296256;
    v319 = sub_21C558F54;
    v320 = &block_descriptor_420;
    v156 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v151, sel_animateWithDuration_animations_completion_, v154, v156, 0.25);
    _Block_release(v156);
    _Block_release(v154);
  }
  v157 = *(_QWORD *)(v300 + 64);
  v304 = (uint64_t *)(v300 + 64);
  v158 = -1;
  v159 = -1 << *(_BYTE *)(v300 + 32);
  v303 = ~v159;
  if (-v159 < 64)
    v158 = ~(-1 << -(char)v159);
  v160 = v158 & v157;
  v305 = (unint64_t)(63 - v159) >> 6;
  v298 = v305 - 1;
  swift_bridgeObjectRetain();
  v161 = 0;
  while (1)
  {
    if (v160)
    {
      v308 = (v160 - 1) & v160;
      v164 = __clz(__rbit64(v160)) | (v161 << 6);
      v165 = v161;
      goto LABEL_68;
    }
    v165 = v161 + 1;
    if (__OFADD__(v161, 1))
      goto LABEL_139;
    v172 = v161;
    if (v165 < v305)
      break;
LABEL_86:
    v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D10);
    v168 = (uint64_t)v302;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 56))(v302, 1, 1, v175);
    v308 = 0;
LABEL_87:
    v176 = v301;
    sub_21C52DB08(v168, (uint64_t)v301, &qword_255288D08);
    v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D10);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 48))(v176, 1, v177) == 1)
    {
      sub_21C52A884();
      v201 = swift_bridgeObjectRetain();
      v202 = sub_21C559098(v201);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v202 >> 62)
        goto LABEL_143;
      swift_bridgeObjectRetain();
      sub_21C5E3DD8();
      sub_21C531A4C(0, (unint64_t *)&qword_255289570);
      v203 = v202;
      while (1)
      {
        v204 = v306;
        swift_bridgeObjectRelease();
        if (sub_21C5584A4(v203))
          break;
        if (sub_21C5584A4(v203))
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
          v205 = (void *)sub_21C5E39D0();
          objc_msgSend(v278, sel_removeAnnotations_, v205);
LABEL_103:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v206 = *(_QWORD *)(v204 + 16);
          if (!v206)
            return v204;
          goto LABEL_104;
        }
        swift_bridgeObjectRelease();
        v206 = *(_QWORD *)(v204 + 16);
        if (!v206)
          return v204;
LABEL_104:
        v207 = (uint64_t *)((char *)v297 + *(int *)(v293 + 48));
        v208 = v204 + ((*(unsigned __int8 *)(v294 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v294 + 80));
        v304 = *(uint64_t **)(v294 + 72);
        swift_bridgeObjectRetain();
        v309 = v207;
        while (1)
        {
          v308 = v206;
          v305 = v208;
          v213 = v208;
          v214 = v297;
          sub_21C531B18(v213, (uint64_t)v297, &qword_255288CF8);
          v215 = *v214;
          v216 = *v207;
          *(_QWORD *)&v316 = v311;
          v217 = v311;
          swift_bridgeObjectRetain();
          v218 = v215;
          v219 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v221 = v220;
          v222 = swift_isUniquelyReferenced_nonNull_native();
          v313 = *(_QWORD **)(v221 + 24);
          v223 = v313;
          *(_QWORD *)(v221 + 24) = 0x8000000000000000;
          v225 = sub_21C530FA8(v216);
          v226 = v223[2];
          v227 = (v224 & 1) == 0;
          v228 = v226 + v227;
          if (__OFADD__(v226, v227))
            break;
          v229 = v224;
          if (v223[3] >= v228)
          {
            if ((v222 & 1) == 0)
              sub_21C55CD08(&qword_255288D18);
          }
          else
          {
            sub_21C55AFC8(v228, v222, &qword_255288D18);
            v230 = sub_21C530FA8(v216);
            if ((v229 & 1) != (v231 & 1))
              goto LABEL_145;
            v225 = v230;
          }
          v232 = v313;
          if ((v229 & 1) != 0)
          {
            v233 = v313[7];
            v234 = 8 * v225;

            *(_QWORD *)(v233 + v234) = v218;
          }
          else
          {
            v313[(v225 >> 6) + 8] |= 1 << v225;
            v235 = 8 * v225;
            *(_QWORD *)(v232[6] + v235) = v216;
            *(_QWORD *)(v232[7] + v235) = v218;
            v236 = v232[2];
            v237 = __OFADD__(v236, 1);
            v238 = v236 + 1;
            if (v237)
              goto LABEL_140;
            v232[2] = v238;
            swift_bridgeObjectRetain();
          }
          *(_QWORD *)(v221 + 24) = v232;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v219(&aBlock, 0);

          v239 = v296;
          sub_21C529664((uint64_t)v309, v296, type metadata accessor for CustomAnnotationViewModel);
          v240 = v310;
          v241 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v310 + 56);
          v242 = v307;
          v241(v239, 0, 1, v307);
          *(_QWORD *)&v316 = v217;
          v243 = v217;
          v244 = v218;
          v245 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
          v247 = v246;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v240 + 48))(v239, 1, v242) == 1)
          {
            sub_21C524980(v239, &qword_255288D00);
            swift_bridgeObjectRetain();
            v248 = sub_21C531130((uint64_t)v244);
            v250 = v249;
            swift_bridgeObjectRelease();
            if ((v250 & 1) != 0)
            {
              v251 = swift_isUniquelyReferenced_nonNull_native();
              v252 = *(_QWORD *)(v247 + 16);
              v313 = (_QWORD *)v252;
              *(_QWORD *)(v247 + 16) = 0x8000000000000000;
              v211 = v308;
              if (!v251)
              {
                sub_21C55CAE0(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20);
                v252 = (uint64_t)v313;
              }

              v210 = v291;
              sub_21C52AAD4(*(_QWORD *)(v252 + 56) + *(_QWORD *)(v240 + 72) * v248, v291, type metadata accessor for CustomAnnotationViewModel);
              sub_21C55B8B0(v248, v252, type metadata accessor for CustomAnnotationViewModel);
              *(_QWORD *)(v247 + 16) = v252;
              swift_bridgeObjectRelease();
              v209 = 0;
            }
            else
            {
              v209 = 1;
              v210 = v291;
              v211 = v308;
            }
            v241(v210, v209, 1, v307);

            sub_21C524980(v210, &qword_255288D00);
          }
          else
          {
            sub_21C52AAD4(v239, v295, type metadata accessor for CustomAnnotationViewModel);
            v253 = swift_isUniquelyReferenced_nonNull_native();
            v313 = *(_QWORD **)(v247 + 16);
            v254 = v313;
            *(_QWORD *)(v247 + 16) = 0x8000000000000000;
            v256 = sub_21C531130((uint64_t)v244);
            v257 = v254[2];
            v258 = (v255 & 1) == 0;
            v259 = v257 + v258;
            if (__OFADD__(v257, v258))
              goto LABEL_141;
            v260 = v255;
            if (v254[3] >= v259)
            {
              if ((v253 & 1) == 0)
                sub_21C55CAE0(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20);
            }
            else
            {
              sub_21C55AC7C(v259, v253, type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20);
              v261 = sub_21C531130((uint64_t)v244);
              if ((v260 & 1) != (v262 & 1))
                goto LABEL_146;
              v256 = v261;
            }
            v263 = v313;
            if ((v260 & 1) != 0)
            {
              sub_21C56171C(v295, v313[7] + *(_QWORD *)(v240 + 72) * v256, type metadata accessor for CustomAnnotationViewModel);
            }
            else
            {
              v313[(v256 >> 6) + 8] |= 1 << v256;
              *(_QWORD *)(v263[6] + 8 * v256) = v244;
              sub_21C52AAD4(v295, v263[7] + *(_QWORD *)(v240 + 72) * v256, type metadata accessor for CustomAnnotationViewModel);
              v264 = v263[2];
              v237 = __OFADD__(v264, 1);
              v265 = v264 + 1;
              if (v237)
                goto LABEL_142;
              v263[2] = v265;
              v266 = v244;
            }
            *(_QWORD *)(v247 + 16) = v263;

            swift_bridgeObjectRelease();
            v211 = v308;
          }
          v207 = v309;
          v212 = v305;
          v245(&aBlock, 0);

          sub_21C52A88C((uint64_t)v207, type metadata accessor for CustomAnnotationViewModel);
          v208 = (int64_t)v304 + v212;
          v206 = v211 - 1;
          if (!v206)
          {
            v204 = v306;
            swift_bridgeObjectRelease();
            return v204;
          }
        }
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        sub_21C531A4C(0, (unint64_t *)&qword_255289570);
        swift_bridgeObjectRetain();
        v203 = sub_21C5E3D54();
        swift_bridgeObjectRelease();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
      v205 = (void *)sub_21C5E39D0();
      objc_msgSend(v278, sel_removeOverlays_, v205);
      goto LABEL_103;
    }
    v178 = *v176;
    v179 = (uint64_t)v176 + *(int *)(v177 + 48);
    v180 = v309;
    sub_21C52AAD4(v179, (uint64_t)v309, type metadata accessor for CustomAnnotationViewModel);
    v181 = *v180;
    *(_QWORD *)&v316 = v311;
    v182 = v311;
    swift_bridgeObjectRetain();
    v183 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v185 = v184;
    swift_bridgeObjectRetain();
    v186 = sub_21C530FA8(v181);
    v188 = v187;
    swift_bridgeObjectRelease();
    if ((v188 & 1) != 0)
    {
      v189 = swift_isUniquelyReferenced_nonNull_native();
      v190 = *(_QWORD *)(v185 + 24);
      v313 = (_QWORD *)v190;
      *(_QWORD *)(v185 + 24) = 0x8000000000000000;
      if ((v189 & 1) == 0)
      {
        sub_21C55CD08(&qword_255288D18);
        v190 = (uint64_t)v313;
      }
      swift_bridgeObjectRelease();
      v191 = *(void **)(*(_QWORD *)(v190 + 56) + 8 * v186);
      sub_21C55BA94(v186, v190);
      *(_QWORD *)(v185 + 24) = v190;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = v307;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v183(&aBlock, 0);

    *(_QWORD *)&v316 = v182;
    v192 = v182;
    v193 = (void (*)(uint64_t *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
    v195 = v194;
    swift_bridgeObjectRetain();
    v196 = sub_21C531130((uint64_t)v178);
    v198 = v197;
    swift_bridgeObjectRelease();
    v27 = v310;
    if ((v198 & 1) != 0)
    {
      v199 = swift_isUniquelyReferenced_nonNull_native();
      v200 = *(_QWORD *)(v195 + 16);
      v313 = (_QWORD *)v200;
      *(_QWORD *)(v195 + 16) = 0x8000000000000000;
      if (!v199)
      {
        sub_21C55CAE0(type metadata accessor for CustomAnnotationViewModel, (uint64_t *)&unk_255288D20);
        v200 = (uint64_t)v313;
      }

      v163 = v299;
      sub_21C52AAD4(*(_QWORD *)(v200 + 56) + *(_QWORD *)(v27 + 72) * v196, v299, type metadata accessor for CustomAnnotationViewModel);
      sub_21C55B8B0(v196, v200, type metadata accessor for CustomAnnotationViewModel);
      *(_QWORD *)(v195 + 16) = v200;
      swift_bridgeObjectRelease();
      v162 = 0;
    }
    else
    {
      v162 = 1;
      v163 = v299;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v163, v162, 1, v26);
    sub_21C524980(v163, &qword_255288D00);
    v193(&aBlock, 0);

    sub_21C52A88C((uint64_t)v309, type metadata accessor for CustomAnnotationViewModel);
    v161 = v172;
    v160 = v308;
  }
  v173 = v304[v165];
  if (v173)
    goto LABEL_72;
  v174 = v161 + 2;
  v172 = v161 + 1;
  if (v161 + 2 >= v305)
    goto LABEL_86;
  v173 = v304[v174];
  if (v173)
  {
LABEL_75:
    v165 = v174;
    goto LABEL_72;
  }
  v172 = v161 + 2;
  if (v161 + 3 >= v305)
    goto LABEL_86;
  v173 = v304[v161 + 3];
  if (v173)
  {
    v165 = v161 + 3;
LABEL_72:
    v308 = (v173 - 1) & v173;
    v164 = __clz(__rbit64(v173)) + (v165 << 6);
LABEL_68:
    v166 = *(_QWORD *)(v300 + 56);
    v167 = *(void **)(*(_QWORD *)(v300 + 48) + 8 * v164);
    v168 = (uint64_t)v302;
    *v302 = v167;
    v169 = v166 + *(_QWORD *)(v27 + 72) * v164;
    v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D10);
    sub_21C529664(v169, v168 + *(int *)(v170 + 48), type metadata accessor for CustomAnnotationViewModel);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 56))(v168, 0, 1, v170);
    v171 = v167;
    v172 = v165;
    goto LABEL_87;
  }
  v174 = v161 + 4;
  v172 = v161 + 3;
  if (v161 + 4 >= v305)
    goto LABEL_86;
  v173 = v304[v174];
  if (v173)
    goto LABEL_75;
  while (1)
  {
    v165 = v174 + 1;
    if (__OFADD__(v174, 1))
      break;
    if (v165 >= v305)
    {
      v172 = v298;
      goto LABEL_86;
    }
    v173 = v304[v165];
    ++v174;
    if (v173)
      goto LABEL_72;
  }
  __break(1u);
LABEL_145:
  sub_21C5E3DF0();
  __break(1u);
LABEL_146:
  type metadata accessor for MapBridgingCustomAnnotation();
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

void sub_21C5557B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v6;
  uint64_t KeyPath;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t i;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  char v30[8];
  unint64_t v31;
  char v32[16];

  v5 = a1;
  v6 = sub_21C549CD4(a1, a2, a3, a4, a5);
  sub_21C531A4C(0, &qword_255288BE8);
  type metadata accessor for CustomAnnotationViewModel(0);
  sub_21C521E50(&qword_255288CF0, type metadata accessor for CustomAnnotationViewModel, (uint64_t)&unk_21C5E7BC4);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v8 = sub_21C5606DC(v6, KeyPath, (uint64_t)v32, &qword_255288CF8, type metadata accessor for CustomAnnotationViewModel);
  swift_release_n();
  v9 = MEMORY[0x24BEE4AF8];
  v31 = MEMORY[0x24BEE4AF8];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_21C5E3D60();
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
    goto LABEL_12;
  }
  v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
    goto LABEL_11;
LABEL_3:
  if (v10 < 1)
  {
    __break(1u);
    goto LABEL_47;
  }
  v11 = v5;
  v12 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0)
      MEMORY[0x22077F1B4](v12, v8);
    else
      v13 = *(id *)(v8 + 8 * v12 + 32);
    ++v12;
    sub_21C5E3CB8();
    sub_21C5E3CE8();
    sub_21C5E3CF4();
    sub_21C5E3CC4();
  }
  while (v10 != v12);
  swift_bridgeObjectRelease();
  v14 = v31;
  v5 = v11;
  v9 = MEMORY[0x24BEE4AF8];
LABEL_12:
  swift_bridgeObjectRetain();
  if ((v14 & 0x8000000000000000) != 0 || (v14 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
    sub_21C5E3D54();
    swift_release();
  }
  else
  {
    sub_21C5E3DD8();
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
  v15 = (void *)sub_21C5E39D0();
  objc_msgSend(v5, sel_addAnnotations_, v15);
  swift_bridgeObjectRelease();

  MEMORY[0x24BDAC7A8](v16);
  v17 = swift_getKeyPath();
  swift_retain();
  v18 = sub_21C5606DC(v6, v17, (uint64_t)v30, &qword_255288CF8, type metadata accessor for CustomAnnotationViewModel);
  swift_bridgeObjectRelease();
  swift_release_n();
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_21C5E3D60();
    swift_bridgeObjectRelease();
    if (!v19)
      goto LABEL_24;
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v19)
      goto LABEL_24;
  }
  if (v19 < 1)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    MEMORY[0x22077F1B4](0, MEMORY[0x24BEE4AF8]);
    swift_unknownObjectRelease();
    goto LABEL_43;
  }
  for (i = 0; i != v19; ++i)
  {
    if ((v18 & 0xC000000000000001) != 0)
    {
      MEMORY[0x22077F1B4](i, v18);
      swift_unknownObjectRelease();
    }
  }
LABEL_24:
  swift_bridgeObjectRelease();
  v31 = v9;
  if ((v9 & 0xC000000000000000) != 0)
    goto LABEL_41;
  sub_21C5E3CDC();
  do
  {
    v21 = v31;
    v31 = v9;
    if ((v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v22 = sub_21C5E3D60();
      if (!v22)
      {
LABEL_45:
        swift_release();
        swift_release();
        sub_21C531A4C(0, &qword_255288C08);
        v29 = (void *)sub_21C5E39D0();
        objc_msgSend(v5, sel_addMapItems_, v29);
        swift_bridgeObjectRelease();

        return;
      }
    }
    else
    {
      v22 = *(_QWORD *)(v21 + 16);
      swift_bridgeObjectRetain();
      if (!v22)
        goto LABEL_45;
    }
    v23 = 4;
    while (1)
    {
      v24 = (v21 & 0xC000000000000001) != 0
          ? (char *)MEMORY[0x22077F1B4](v23 - 4, v21)
          : (char *)*(id *)(v21 + 8 * v23);
      v25 = v24;
      v26 = v23 - 3;
      if (__OFADD__(v23 - 4, 1))
        break;
      v27 = *(void **)&v24[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem];
      v9 = v27;

      if (v27)
      {
        MEMORY[0x22077EEE4]();
        if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_21C5E3A00();
        sub_21C5E3A3C();
        sub_21C5E39E8();
      }
      ++v23;
      if (v26 == v22)
        goto LABEL_45;
    }
    __break(1u);
LABEL_41:
    v28 = MEMORY[0x24BEE4AF8];
    sub_21C5E3D60();
    sub_21C5E3CDC();
  }
  while (!sub_21C5E3D60());
  if ((v28 & 0xC000000000000001) != 0)
    goto LABEL_48;
LABEL_43:
  swift_release();
}

void sub_21C555CF0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v6;
  uint64_t KeyPath;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t i;
  id v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t j;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  char v32[8];
  unint64_t v33;
  char v34[16];

  v5 = a1;
  v6 = sub_21C547E6C(a1, a2, a3, a4, a5);
  sub_21C531A4C(0, &qword_255288BE8);
  type metadata accessor for MarkerAnnotationViewModel(0);
  sub_21C521E50((unint64_t *)&unk_255288CB0, type metadata accessor for MarkerAnnotationViewModel, (uint64_t)&unk_21C5E7B54);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v8 = 0;
  v9 = sub_21C5606DC(v6, KeyPath, (uint64_t)v34, &qword_25528A520, type metadata accessor for MarkerAnnotationViewModel);
  swift_release_n();
  v33 = MEMORY[0x24BEE4AF8];
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_21C5E3D60();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10)
  {
    if (v10 < 1)
      goto LABEL_49;
    v11 = v5;
    for (i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x22077F1B4](i, v9);
      else
        v13 = *(id *)(v9 + 8 * i + 32);
      if ((*((_BYTE *)v13 + OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature) & 1) != 0)
      {

      }
      else
      {
        sub_21C5E3CB8();
        sub_21C5E3CE8();
        sub_21C5E3CF4();
        sub_21C5E3CC4();
      }
    }
    swift_bridgeObjectRelease();
    v14 = v33;
    v5 = v11;
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v15 = MEMORY[0x24BEE4AF8];
  if ((v14 & 0x8000000000000000) != 0 || (v14 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
    sub_21C5E3D54();
    swift_release();
  }
  else
  {
    sub_21C5E3DD8();
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
  v16 = (void *)sub_21C5E39D0();
  objc_msgSend(v5, sel_addAnnotations_, v16);
  swift_bridgeObjectRelease();

  MEMORY[0x24BDAC7A8](v17);
  v18 = swift_getKeyPath();
  swift_retain();
  v8 = sub_21C5606DC(v6, v18, (uint64_t)v32, &qword_25528A520, type metadata accessor for MarkerAnnotationViewModel);
  swift_bridgeObjectRelease();
  swift_release_n();
  v33 = v15;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_21C5E3D60();
    swift_bridgeObjectRelease();
    if (v19)
      goto LABEL_20;
LABEL_33:
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x24BEE4AF8];
    goto LABEL_34;
  }
  v19 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v19)
    goto LABEL_33;
LABEL_20:
  if (v19 < 1)
    goto LABEL_50;
  for (j = 0; j != v19; ++j)
  {
    if ((v8 & 0xC000000000000001) != 0)
      v21 = (id)MEMORY[0x22077F1B4](j, v8);
    else
      v21 = *(id *)(v8 + 8 * j + 32);
    if (*((_BYTE *)v21 + OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature) == 1)
    {
      sub_21C5E3CB8();
      sub_21C5E3CE8();
      sub_21C5E3CF4();
      sub_21C5E3CC4();
    }
    else
    {

    }
  }
  swift_bridgeObjectRelease();
  v22 = v33;
LABEL_34:
  v8 = sub_21C558868(v22);
  swift_release();
  if (v8)
  {
    v33 = v15;
    if (v8 >> 62)
      goto LABEL_51;
    v23 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v23; v23 = sub_21C5E3D60())
    {
      v24 = 4;
      while (1)
      {
        v25 = (v8 & 0xC000000000000001) != 0
            ? (char *)MEMORY[0x22077F1B4](v24 - 4, v8)
            : (char *)*(id *)(v8 + 8 * v24);
        v26 = v25;
        v27 = v24 - 3;
        if (__OFADD__(v24 - 4, 1))
          break;
        v28 = *(void **)&v25[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem];
        v29 = v28;

        if (v28)
        {
          MEMORY[0x22077EEE4](v30);
          if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_21C5E3A00();
          sub_21C5E3A3C();
          sub_21C5E39E8();
        }
        ++v24;
        if (v27 == v23)
          goto LABEL_52;
      }
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      swift_bridgeObjectRetain();
    }
LABEL_52:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_21C531A4C(0, &qword_255288C08);
    v31 = (void *)sub_21C5E39D0();
    objc_msgSend(v5, sel_addMapItems_, v31);
    swift_bridgeObjectRelease();

  }
}

void sub_21C556264(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t j;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  _BYTE v27[8];
  _BYTE v28[16];

  v5 = sub_21C5464F0(a1, a2, a3, a4, a5);
  sub_21C531A4C(0, &qword_255288BE8);
  type metadata accessor for UserAnnotationViewModel(0);
  sub_21C521E50(&qword_255288C60, type metadata accessor for UserAnnotationViewModel, (uint64_t)&unk_21C5E7AE4);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_21C5606DC(v5, KeyPath, (uint64_t)v28, &qword_255288C68, type metadata accessor for UserAnnotationViewModel);
  swift_release_n();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_21C5E3D60();
    swift_bridgeObjectRelease();
    if (!v8)
      goto LABEL_9;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
      goto LABEL_9;
  }
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_42;
  }
  for (i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      MEMORY[0x22077F1B4](i, v7);
      swift_unknownObjectRelease();
    }
  }
LABEL_9:
  swift_bridgeObjectRelease();
  v10 = MEMORY[0x24BEE4AF8];
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
    sub_21C5E3D54();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
  v11 = (void *)sub_21C5E39D0();
  objc_msgSend(a1, sel_addAnnotations_, v11);
  swift_bridgeObjectRelease();

  MEMORY[0x24BDAC7A8](v12);
  v13 = swift_getKeyPath();
  swift_retain();
  v14 = sub_21C5606DC(v5, v13, (uint64_t)v27, &qword_255288C68, type metadata accessor for UserAnnotationViewModel);
  swift_bridgeObjectRelease();
  swift_release_n();
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_21C5E3D60();
    swift_bridgeObjectRelease();
    if (!v15)
      goto LABEL_19;
  }
  else
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      goto LABEL_19;
  }
  if (v15 < 1)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  for (j = 0; j != v15; ++j)
  {
    if ((v14 & 0xC000000000000001) != 0)
    {
      MEMORY[0x22077F1B4](j, v14);
      swift_unknownObjectRelease();
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  if ((v10 & 0xC000000000000000) != 0)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_21C5E3D60();
    sub_21C5E3CDC();
    if (sub_21C5E3D60())
    {
      if ((v17 & 0xC000000000000001) == 0)
      {
LABEL_22:
        swift_release();
        return;
      }
LABEL_43:
      MEMORY[0x22077F1B4](0, MEMORY[0x24BEE4AF8]);
      swift_unknownObjectRelease();
      goto LABEL_22;
    }
  }
  else
  {
    sub_21C5E3CDC();
  }
  if (v10 < 0 || (v10 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v18 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  for (; v18; v18 = sub_21C5E3D60())
  {
    v19 = 4;
    while (1)
    {
      v20 = (v10 & 0xC000000000000001) != 0
          ? (char *)MEMORY[0x22077F1B4](v19 - 4, v10)
          : (char *)*(id *)(v10 + 8 * v19);
      v21 = v20;
      v22 = v19 - 3;
      if (__OFADD__(v19 - 4, 1))
        break;
      v23 = *(void **)&v20[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem];
      v24 = v23;

      if (v23)
      {
        MEMORY[0x22077EEE4]();
        if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_21C5E3A00();
        sub_21C5E3A3C();
        sub_21C5E39E8();
      }
      ++v19;
      if (v22 == v18)
        goto LABEL_40;
    }
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
  }
LABEL_40:
  swift_release();
  swift_release();
  sub_21C531A4C(0, &qword_255288C08);
  v25 = (void *)sub_21C5E39D0();
  objc_msgSend(a1, sel_addMapItems_, v25);
  swift_bridgeObjectRelease();

}

uint64_t sub_21C556704(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  _QWORD *v9;
  void *v10;
  __int16 v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t v19;
  id v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  unint64_t v46;
  unint64_t i;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t result;
  uint64_t (*v55)@<X0>(uint64_t *@<X8>);
  id v56;
  void *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t (*v63)@<X0>(uint64_t *@<X8>);
  uint64_t v64;
  unint64_t v65;

  v5 = sub_21C544C70(a1, a2, a3, a4, a5);
  v65 = sub_21C5605E4(MEMORY[0x24BEE4AF8], &qword_255288C38);
  v6 = v5[2];
  if (v6)
  {
    v7 = 0;
    v63 = 0;
    v8 = sub_21C559238;
    v9 = v5 + 8;
    v55 = sub_21C561F9C;
    do
    {
      v60 = v6;
      v61 = v7;
      v10 = (void *)*(v9 - 2);
      v11 = *((_WORD *)v9 - 4);
      v12 = (void *)*v9;
      v13 = v9[6];
      v14 = *((_BYTE *)v9 + 56);
      v15 = v9[8];
      v62 = (id)*(v9 - 4);
      swift_bridgeObjectRetain();
      v57 = v10;
      sub_21C561470(v10, v11);
      v56 = v12;
      v16 = v15;
      swift_bridgeObjectRetain();
      v59 = v13;
      v58 = v14;
      sub_21C52EF74(v13, v14);
      sub_21C531A9C(v61);
      v17 = swift_allocObject();
      v18 = v8;
      *(_QWORD *)(v17 + 16) = v8;
      *(_QWORD *)(v17 + 24) = 0;
      v19 = v17;
      v20 = v62;
      sub_21C531A9C((uint64_t)v63);
      v21 = (_QWORD *)v65;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v24 = sub_21C530F04(v16);
      v25 = *(_QWORD *)(v65 + 16);
      v26 = (v23 & 1) == 0;
      v27 = v25 + v26;
      if (__OFADD__(v25, v26))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      v28 = v23;
      if (*(_QWORD *)(v65 + 24) >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_21C55C6EC(&qword_255288C38);
          v21 = (_QWORD *)v65;
        }
      }
      else
      {
        sub_21C55A61C(v27, isUniquelyReferenced_nonNull_native, &qword_255288C38);
        v21 = (_QWORD *)v65;
        v29 = sub_21C530F04(v16);
        if ((v28 & 1) != (v30 & 1))
          goto LABEL_45;
        v24 = v29;
      }
      swift_bridgeObjectRelease();
      v31 = swift_bridgeObjectRetain();
      if ((v28 & 1) == 0)
      {
        v32 = (*(uint64_t (**)(uint64_t))(v19 + 16))(v31);
        v21[(v24 >> 6) + 8] |= 1 << v24;
        v33 = 8 * v24;
        *(_QWORD *)(v21[6] + v33) = v16;
        *(_QWORD *)(v21[7] + v33) = v32;
        v34 = v21[2];
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_43;
        v21[2] = v36;
      }
      v37 = v21[7];
      v65 = (unint64_t)v21;
      v38 = swift_bridgeObjectRelease();
      MEMORY[0x22077EEE4](v38);
      if (*(_QWORD *)((*(_QWORD *)(v37 + 8 * v24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v37 + 8 * v24) & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
        sub_21C5E3A00();
      sub_21C5E3A3C();
      sub_21C5E39E8();
      swift_bridgeObjectRelease();

      sub_21C56148C(v57, v11);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v59, v58);
      v9 += 13;
      v7 = (uint64_t)v18;
      v63 = sub_21C561F9C;
      v6 = v60 - 1;
      v8 = v18;
    }
    while (v60 != 1);
  }
  else
  {
    v8 = 0;
    v55 = 0;
  }
  v64 = (uint64_t)v8;
  swift_bridgeObjectRelease();
  v39 = 0;
  v41 = v65 + 64;
  v40 = *(_QWORD *)(v65 + 64);
  v42 = 1 << *(_BYTE *)(v65 + 32);
  v43 = -1;
  if (v42 < 64)
    v43 = ~(-1 << v42);
  v44 = v43 & v40;
  v45 = (unint64_t)(v42 + 63) >> 6;
  if ((v43 & v40) == 0)
    goto LABEL_21;
LABEL_20:
  v46 = __clz(__rbit64(v44));
  v44 &= v44 - 1;
  for (i = v46 | (v39 << 6); ; i = __clz(__rbit64(v49)) + (v39 << 6))
  {
    v51 = 8 * i;
    v52 = *(_QWORD *)(*(_QWORD *)(v65 + 48) + v51);
    if (*(_QWORD *)(*(_QWORD *)(v65 + 56) + v51) >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
      sub_21C5E3D54();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_21C5E3DD8();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
    v53 = (void *)sub_21C5E39D0();
    objc_msgSend(a1, sel_addOverlays_level_, v53, v52);
    swift_bridgeObjectRelease();

    if (v44)
      goto LABEL_20;
LABEL_21:
    v48 = v39 + 1;
    if (__OFADD__(v39, 1))
      goto LABEL_42;
    if (v48 >= v45)
    {
LABEL_40:
      swift_release();
      sub_21C531A9C(v64);
      return sub_21C531A9C((uint64_t)v55);
    }
    v49 = *(_QWORD *)(v41 + 8 * v48);
    ++v39;
    if (!v49)
    {
      v39 = v48 + 1;
      if (v48 + 1 >= v45)
        goto LABEL_40;
      v49 = *(_QWORD *)(v41 + 8 * v39);
      if (!v49)
      {
        v39 = v48 + 2;
        if (v48 + 2 >= v45)
          goto LABEL_40;
        v49 = *(_QWORD *)(v41 + 8 * v39);
        if (!v49)
          break;
      }
    }
LABEL_34:
    v44 = (v49 - 1) & v49;
  }
  v50 = v48 + 3;
  if (v50 >= v45)
    goto LABEL_40;
  v49 = *(_QWORD *)(v41 + 8 * v50);
  if (v49)
  {
    v39 = v50;
    goto LABEL_34;
  }
  while (1)
  {
    v39 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v39 >= v45)
      goto LABEL_40;
    v49 = *(_QWORD *)(v41 + 8 * v39);
    ++v50;
    if (v49)
      goto LABEL_34;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  type metadata accessor for MKOverlayLevel(0);
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

uint64_t sub_21C556BF0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t (*v9)@<X0>(uint64_t *@<X8>);
  uint64_t v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  char isUniquelyReferenced_nonNull_native;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  unint64_t v46;
  unint64_t i;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t result;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t (*v63)();
  uint64_t v64;
  uint64_t (*v65)@<X0>(uint64_t *@<X8>);
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;

  v5 = sub_21C5433F8(a1, a2, a3, a4, a5);
  v6 = sub_21C5605E4(MEMORY[0x24BEE4AF8], &qword_255288C10);
  v7 = v5[2];
  if (v7)
  {
    v8 = 0;
    v9 = 0;
    v64 = v7 - 1;
    v10 = 32;
    v55 = v5;
    while (1)
    {
      v56 = v10;
      v11 = (__int128 *)((char *)v5 + v10);
      v12 = *v11;
      v13 = v11[1];
      v14 = v11[3];
      v70 = v11[2];
      v71 = v14;
      v68 = v12;
      v69 = v13;
      v15 = v11[4];
      v16 = v11[5];
      v17 = v11[7];
      v74 = v11[6];
      v75 = v17;
      v72 = v15;
      v73 = v16;
      sub_21C56112C((uint64_t)&v68);
      sub_21C531A9C((uint64_t)v8);
      v18 = (void *)v69;
      v58 = (void *)*((_QWORD *)&v70 + 1);
      v57 = *((_QWORD *)&v69 + 1);
      v60 = *((_QWORD *)&v73 + 1);
      v59 = v74;
      v62 = *((_QWORD *)&v74 + 1);
      v61 = v75;
      v19 = *((_QWORD *)&v75 + 1);
      v20 = (void *)v68;
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = sub_21C559238;
      *(_QWORD *)(v21 + 24) = 0;
      v67 = v21;
      v22 = v20;
      sub_21C531A9C((uint64_t)v9);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v25 = sub_21C530F04(v19);
      v26 = *(_QWORD *)(v6 + 16);
      v27 = (v24 & 1) == 0;
      v28 = v26 + v27;
      if (__OFADD__(v26, v27))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v29 = v24;
      if (*(_QWORD *)(v6 + 24) >= v28)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_21C55C6EC(&qword_255288C10);
      }
      else
      {
        sub_21C55A61C(v28, isUniquelyReferenced_nonNull_native, &qword_255288C10);
        v30 = sub_21C530F04(v19);
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_46;
        v25 = v30;
      }
      swift_bridgeObjectRelease();
      v32 = swift_bridgeObjectRetain();
      if ((v29 & 1) == 0)
      {
        v33 = (*(uint64_t (**)(uint64_t))(v67 + 16))(v32);
        *(_QWORD *)(v6 + 8 * (v25 >> 6) + 64) |= 1 << v25;
        v34 = 8 * v25;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + v34) = v19;
        *(_QWORD *)(*(_QWORD *)(v6 + 56) + v34) = v33;
        v35 = *(_QWORD *)(v6 + 16);
        v36 = __OFADD__(v35, 1);
        v37 = v35 + 1;
        if (v36)
          goto LABEL_44;
        *(_QWORD *)(v6 + 16) = v37;
      }
      v38 = *(_QWORD *)(v6 + 56);
      v39 = swift_bridgeObjectRelease();
      MEMORY[0x22077EEE4](v39);
      if (*(_QWORD *)((*(_QWORD *)(v38 + 8 * v25) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v38 + 8 * v25) & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
        sub_21C5E3A00();
      sub_21C5E3A3C();
      sub_21C5E39E8();
      swift_bridgeObjectRelease();

      sub_21C561218(v18, v57);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v60, v59);
      sub_21C531AC8(v62, v61);
      if (!v64)
        break;
      --v64;
      v5 = v55;
      v10 = v56 + 128;
      v8 = sub_21C559238;
      v9 = sub_21C561F9C;
    }
    swift_bridgeObjectRelease();
    v63 = sub_21C559238;
    v65 = sub_21C561F9C;
  }
  else
  {
    swift_bridgeObjectRelease();
    v63 = 0;
    v65 = 0;
  }
  v40 = 0;
  v41 = v6 + 64;
  v42 = 1 << *(_BYTE *)(v6 + 32);
  v43 = -1;
  if (v42 < 64)
    v43 = ~(-1 << v42);
  v44 = v43 & *(_QWORD *)(v6 + 64);
  v45 = (unint64_t)(v42 + 63) >> 6;
  if (!v44)
    goto LABEL_22;
LABEL_21:
  v46 = __clz(__rbit64(v44));
  v44 &= v44 - 1;
  for (i = v46 | (v40 << 6); ; i = __clz(__rbit64(v49)) + (v40 << 6))
  {
    v51 = 8 * i;
    v52 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v51);
    if (*(_QWORD *)(*(_QWORD *)(v6 + 56) + v51) >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
      sub_21C5E3D54();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_21C5E3DD8();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
    v53 = (void *)sub_21C5E39D0();
    objc_msgSend(a1, sel_addOverlays_level_, v53, v52);
    swift_bridgeObjectRelease();

    if (v44)
      goto LABEL_21;
LABEL_22:
    v48 = v40 + 1;
    if (__OFADD__(v40, 1))
      goto LABEL_43;
    if (v48 >= v45)
    {
LABEL_41:
      swift_release();
      sub_21C531A9C((uint64_t)v63);
      return sub_21C531A9C((uint64_t)v65);
    }
    v49 = *(_QWORD *)(v41 + 8 * v48);
    ++v40;
    if (!v49)
    {
      v40 = v48 + 1;
      if (v48 + 1 >= v45)
        goto LABEL_41;
      v49 = *(_QWORD *)(v41 + 8 * v40);
      if (!v49)
      {
        v40 = v48 + 2;
        if (v48 + 2 >= v45)
          goto LABEL_41;
        v49 = *(_QWORD *)(v41 + 8 * v40);
        if (!v49)
          break;
      }
    }
LABEL_35:
    v44 = (v49 - 1) & v49;
  }
  v50 = v48 + 3;
  if (v50 >= v45)
    goto LABEL_41;
  v49 = *(_QWORD *)(v41 + 8 * v50);
  if (v49)
  {
    v40 = v50;
    goto LABEL_35;
  }
  while (1)
  {
    v40 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v40 >= v45)
      goto LABEL_41;
    v49 = *(_QWORD *)(v41 + 8 * v40);
    ++v50;
    if (v49)
      goto LABEL_35;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  type metadata accessor for MKOverlayLevel(0);
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

uint64_t sub_21C5570F0(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t (*v13)@<X0>(uint64_t *@<X8>);
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t i;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int64_t v49;
  unint64_t v50;
  unint64_t j;
  int64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t result;
  uint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;
  uint64_t (*v62)@<X0>(uint64_t *@<X8>);
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;

  v5 = sub_21C5420F0(a1, a2, a3, a4, a5);
  v6 = sub_21C5605E4(MEMORY[0x24BEE4AF8], &qword_255288BC0);
  v7 = *(_QWORD *)(v5 + 16);
  if (v7)
  {
    v8 = *(_OWORD *)(v5 + 128);
    v69 = *(_OWORD *)(v5 + 112);
    v70 = v8;
    v9 = *(_OWORD *)(v5 + 160);
    v71 = *(_OWORD *)(v5 + 144);
    v72 = v9;
    v10 = *(_OWORD *)(v5 + 48);
    v11 = *(_OWORD *)(v5 + 80);
    v12 = *(_OWORD *)(v5 + 96);
    v66 = *(_OWORD *)(v5 + 64);
    v67 = v11;
    v68 = v12;
    v59 = v5;
    v64 = *(_OWORD *)(v5 + 32);
    v65 = v10;
    sub_21C560DB8((uint64_t)&v64);
    sub_21C531A9C(0);
    v13 = 0;
    v14 = *((_QWORD *)&v72 + 1);
    v61 = v7 - 1;
    v15 = sub_21C559238;
    for (i = 176; ; i += 144)
    {
      v17 = (void *)v64;
      v18 = swift_allocObject();
      v19 = (uint64_t)v15;
      *(_QWORD *)(v18 + 16) = v15;
      *(_QWORD *)(v18 + 24) = 0;
      v20 = v17;
      sub_21C531A9C((uint64_t)v13);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v23 = sub_21C530F04(v14);
      v24 = *(_QWORD *)(v6 + 16);
      v25 = (v22 & 1) == 0;
      v26 = v24 + v25;
      if (__OFADD__(v24, v25))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v27 = v22;
      if (*(_QWORD *)(v6 + 24) >= v26)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_21C55C6EC(&qword_255288BC0);
      }
      else
      {
        sub_21C55A61C(v26, isUniquelyReferenced_nonNull_native, &qword_255288BC0);
        v28 = sub_21C530F04(v14);
        if ((v27 & 1) != (v29 & 1))
          goto LABEL_46;
        v23 = v28;
      }
      swift_bridgeObjectRelease();
      v30 = swift_bridgeObjectRetain();
      if ((v27 & 1) == 0)
      {
        v31 = (*(uint64_t (**)(uint64_t))(v18 + 16))(v30);
        *(_QWORD *)(v6 + 8 * (v23 >> 6) + 64) |= 1 << v23;
        v32 = 8 * v23;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + v32) = v14;
        *(_QWORD *)(*(_QWORD *)(v6 + 56) + v32) = v31;
        v33 = *(_QWORD *)(v6 + 16);
        v34 = __OFADD__(v33, 1);
        v35 = v33 + 1;
        if (v34)
          goto LABEL_44;
        *(_QWORD *)(v6 + 16) = v35;
      }
      v36 = *(_QWORD *)(v6 + 56);
      v37 = swift_bridgeObjectRelease();
      MEMORY[0x22077EEE4](v37);
      if (*(_QWORD *)((*(_QWORD *)(v36 + 8 * v23) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v36 + 8 * v23) & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
        sub_21C5E3A00();
      sub_21C5E3A3C();
      sub_21C5E39E8();

      sub_21C560E74((uint64_t)&v64 + 8);
      if (!v61)
        break;
      v64 = *(_OWORD *)(v59 + i);
      v38 = *(_OWORD *)(v59 + i + 16);
      v39 = *(_OWORD *)(v59 + i + 32);
      v40 = *(_OWORD *)(v59 + i + 64);
      v67 = *(_OWORD *)(v59 + i + 48);
      v68 = v40;
      v65 = v38;
      v66 = v39;
      v41 = *(_OWORD *)(v59 + i + 80);
      v42 = *(_OWORD *)(v59 + i + 96);
      v43 = *(_OWORD *)(v59 + i + 112);
      v72 = *(_OWORD *)(v59 + i + 128);
      v70 = v42;
      v71 = v43;
      v69 = v41;
      sub_21C560DB8((uint64_t)&v64);
      v15 = (uint64_t (*)())v19;
      sub_21C531A9C(v19);
      v14 = *((_QWORD *)&v72 + 1);
      --v61;
      v13 = sub_21C560E4C;
    }
    swift_bridgeObjectRelease();
    v60 = sub_21C559238;
    v62 = sub_21C560E4C;
  }
  else
  {
    swift_bridgeObjectRelease();
    v60 = 0;
    v62 = 0;
  }
  v44 = 0;
  v45 = v6 + 64;
  v46 = 1 << *(_BYTE *)(v6 + 32);
  v47 = -1;
  if (v46 < 64)
    v47 = ~(-1 << v46);
  v48 = v47 & *(_QWORD *)(v6 + 64);
  v49 = (unint64_t)(v46 + 63) >> 6;
  if (!v48)
    goto LABEL_22;
LABEL_21:
  v50 = __clz(__rbit64(v48));
  v48 &= v48 - 1;
  for (j = v50 | (v44 << 6); ; j = __clz(__rbit64(v53)) + (v44 << 6))
  {
    v55 = 8 * j;
    v56 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v55);
    if (*(_QWORD *)(*(_QWORD *)(v6 + 56) + v55) >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
      sub_21C5E3D54();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_21C5E3DD8();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
    v57 = (void *)sub_21C5E39D0();
    objc_msgSend(a1, sel_addOverlays_level_, v57, v56);
    swift_bridgeObjectRelease();

    if (v48)
      goto LABEL_21;
LABEL_22:
    v52 = v44 + 1;
    if (__OFADD__(v44, 1))
      goto LABEL_43;
    if (v52 >= v49)
    {
LABEL_41:
      swift_release();
      sub_21C531A9C((uint64_t)v60);
      return sub_21C531A9C((uint64_t)v62);
    }
    v53 = *(_QWORD *)(v45 + 8 * v52);
    ++v44;
    if (!v53)
    {
      v44 = v52 + 1;
      if (v52 + 1 >= v49)
        goto LABEL_41;
      v53 = *(_QWORD *)(v45 + 8 * v44);
      if (!v53)
      {
        v44 = v52 + 2;
        if (v52 + 2 >= v49)
          goto LABEL_41;
        v53 = *(_QWORD *)(v45 + 8 * v44);
        if (!v53)
          break;
      }
    }
LABEL_35:
    v48 = (v53 - 1) & v53;
  }
  v54 = v52 + 3;
  if (v54 >= v49)
    goto LABEL_41;
  v53 = *(_QWORD *)(v45 + 8 * v54);
  if (v53)
  {
    v44 = v54;
    goto LABEL_35;
  }
  while (1)
  {
    v44 = v54 + 1;
    if (__OFADD__(v54, 1))
      break;
    if (v44 >= v49)
      goto LABEL_41;
    v53 = *(_QWORD *)(v45 + 8 * v44);
    ++v54;
    if (v53)
      goto LABEL_35;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  type metadata accessor for MKOverlayLevel(0);
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

uint64_t sub_21C5575D4(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  _QWORD *v9;
  void *v10;
  __int16 v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t v19;
  id v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  unint64_t v46;
  unint64_t i;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t result;
  uint64_t (*v55)@<X0>(uint64_t *@<X8>);
  id v56;
  void *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t (*v63)@<X0>(uint64_t *@<X8>);
  uint64_t v64;
  unint64_t v65;

  v5 = sub_21C54E7B4(a1, a2, a3, a4, a5);
  v65 = sub_21C5605E4(MEMORY[0x24BEE4AF8], &qword_255288C38);
  v6 = v5[2];
  if (v6)
  {
    v7 = 0;
    v63 = 0;
    v8 = sub_21C559238;
    v9 = v5 + 8;
    v55 = sub_21C561F9C;
    do
    {
      v60 = v6;
      v61 = v7;
      v10 = (void *)*(v9 - 2);
      v11 = *((_WORD *)v9 - 4);
      v12 = (void *)*v9;
      v13 = v9[6];
      v14 = *((_BYTE *)v9 + 56);
      v15 = v9[8];
      v62 = (id)*(v9 - 4);
      swift_bridgeObjectRetain();
      v57 = v10;
      sub_21C561470(v10, v11);
      v56 = v12;
      v16 = v15;
      swift_bridgeObjectRetain();
      v59 = v13;
      v58 = v14;
      sub_21C52EF74(v13, v14);
      sub_21C531A9C(v61);
      v17 = swift_allocObject();
      v18 = v8;
      *(_QWORD *)(v17 + 16) = v8;
      *(_QWORD *)(v17 + 24) = 0;
      v19 = v17;
      v20 = v62;
      sub_21C531A9C((uint64_t)v63);
      v21 = (_QWORD *)v65;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v24 = sub_21C530F04(v16);
      v25 = *(_QWORD *)(v65 + 16);
      v26 = (v23 & 1) == 0;
      v27 = v25 + v26;
      if (__OFADD__(v25, v26))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      v28 = v23;
      if (*(_QWORD *)(v65 + 24) >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_21C55C6EC(&qword_255288C38);
          v21 = (_QWORD *)v65;
        }
      }
      else
      {
        sub_21C55A61C(v27, isUniquelyReferenced_nonNull_native, &qword_255288C38);
        v21 = (_QWORD *)v65;
        v29 = sub_21C530F04(v16);
        if ((v28 & 1) != (v30 & 1))
          goto LABEL_45;
        v24 = v29;
      }
      swift_bridgeObjectRelease();
      v31 = swift_bridgeObjectRetain();
      if ((v28 & 1) == 0)
      {
        v32 = (*(uint64_t (**)(uint64_t))(v19 + 16))(v31);
        v21[(v24 >> 6) + 8] |= 1 << v24;
        v33 = 8 * v24;
        *(_QWORD *)(v21[6] + v33) = v16;
        *(_QWORD *)(v21[7] + v33) = v32;
        v34 = v21[2];
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_43;
        v21[2] = v36;
      }
      v37 = v21[7];
      v65 = (unint64_t)v21;
      v38 = swift_bridgeObjectRelease();
      MEMORY[0x22077EEE4](v38);
      if (*(_QWORD *)((*(_QWORD *)(v37 + 8 * v24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v37 + 8 * v24) & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
        sub_21C5E3A00();
      sub_21C5E3A3C();
      sub_21C5E39E8();
      swift_bridgeObjectRelease();

      sub_21C56148C(v57, v11);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v59, v58);
      v9 += 13;
      v7 = (uint64_t)v18;
      v63 = sub_21C561F9C;
      v6 = v60 - 1;
      v8 = v18;
    }
    while (v60 != 1);
  }
  else
  {
    v8 = 0;
    v55 = 0;
  }
  v64 = (uint64_t)v8;
  swift_bridgeObjectRelease();
  v39 = 0;
  v41 = v65 + 64;
  v40 = *(_QWORD *)(v65 + 64);
  v42 = 1 << *(_BYTE *)(v65 + 32);
  v43 = -1;
  if (v42 < 64)
    v43 = ~(-1 << v42);
  v44 = v43 & v40;
  v45 = (unint64_t)(v42 + 63) >> 6;
  if ((v43 & v40) == 0)
    goto LABEL_21;
LABEL_20:
  v46 = __clz(__rbit64(v44));
  v44 &= v44 - 1;
  for (i = v46 | (v39 << 6); ; i = __clz(__rbit64(v49)) + (v39 << 6))
  {
    v51 = 8 * i;
    v52 = *(_QWORD *)(*(_QWORD *)(v65 + 48) + v51);
    if (*(_QWORD *)(*(_QWORD *)(v65 + 56) + v51) >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
      sub_21C5E3D54();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_21C5E3DD8();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
    v53 = (void *)sub_21C5E39D0();
    objc_msgSend(a1, sel_addOverlays_level_, v53, v52);
    swift_bridgeObjectRelease();

    if (v44)
      goto LABEL_20;
LABEL_21:
    v48 = v39 + 1;
    if (__OFADD__(v39, 1))
      goto LABEL_42;
    if (v48 >= v45)
    {
LABEL_40:
      swift_release();
      sub_21C531A9C(v64);
      return sub_21C531A9C((uint64_t)v55);
    }
    v49 = *(_QWORD *)(v41 + 8 * v48);
    ++v39;
    if (!v49)
    {
      v39 = v48 + 1;
      if (v48 + 1 >= v45)
        goto LABEL_40;
      v49 = *(_QWORD *)(v41 + 8 * v39);
      if (!v49)
      {
        v39 = v48 + 2;
        if (v48 + 2 >= v45)
          goto LABEL_40;
        v49 = *(_QWORD *)(v41 + 8 * v39);
        if (!v49)
          break;
      }
    }
LABEL_34:
    v44 = (v49 - 1) & v49;
  }
  v50 = v48 + 3;
  if (v50 >= v45)
    goto LABEL_40;
  v49 = *(_QWORD *)(v41 + 8 * v50);
  if (v49)
  {
    v39 = v50;
    goto LABEL_34;
  }
  while (1)
  {
    v39 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v39 >= v45)
      goto LABEL_40;
    v49 = *(_QWORD *)(v41 + 8 * v39);
    ++v50;
    if (v49)
      goto LABEL_34;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  type metadata accessor for MKOverlayLevel(0);
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

uint64_t sub_21C557AC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();
  uint64_t (*v9)@<X0>(uint64_t *@<X8>);
  uint64_t v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  char isUniquelyReferenced_nonNull_native;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  unint64_t v46;
  unint64_t i;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t result;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t (*v63)();
  uint64_t v64;
  uint64_t (*v65)@<X0>(uint64_t *@<X8>);
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;

  v5 = sub_21C54CEA8(a1, a2, a3, a4, a5);
  v6 = sub_21C5605E4(MEMORY[0x24BEE4AF8], &qword_255288C10);
  v7 = v5[2];
  if (v7)
  {
    v8 = 0;
    v9 = 0;
    v64 = v7 - 1;
    v10 = 32;
    v55 = v5;
    while (1)
    {
      v56 = v10;
      v11 = (__int128 *)((char *)v5 + v10);
      v12 = *v11;
      v13 = v11[1];
      v14 = v11[3];
      v70 = v11[2];
      v71 = v14;
      v68 = v12;
      v69 = v13;
      v15 = v11[4];
      v16 = v11[5];
      v17 = v11[7];
      v74 = v11[6];
      v75 = v17;
      v72 = v15;
      v73 = v16;
      sub_21C56112C((uint64_t)&v68);
      sub_21C531A9C((uint64_t)v8);
      v18 = (void *)v69;
      v58 = (void *)*((_QWORD *)&v70 + 1);
      v57 = *((_QWORD *)&v69 + 1);
      v60 = *((_QWORD *)&v73 + 1);
      v59 = v74;
      v62 = *((_QWORD *)&v74 + 1);
      v61 = v75;
      v19 = *((_QWORD *)&v75 + 1);
      v20 = (void *)v68;
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = sub_21C559238;
      *(_QWORD *)(v21 + 24) = 0;
      v67 = v21;
      v22 = v20;
      sub_21C531A9C((uint64_t)v9);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v25 = sub_21C530F04(v19);
      v26 = *(_QWORD *)(v6 + 16);
      v27 = (v24 & 1) == 0;
      v28 = v26 + v27;
      if (__OFADD__(v26, v27))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v29 = v24;
      if (*(_QWORD *)(v6 + 24) >= v28)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_21C55C6EC(&qword_255288C10);
      }
      else
      {
        sub_21C55A61C(v28, isUniquelyReferenced_nonNull_native, &qword_255288C10);
        v30 = sub_21C530F04(v19);
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_46;
        v25 = v30;
      }
      swift_bridgeObjectRelease();
      v32 = swift_bridgeObjectRetain();
      if ((v29 & 1) == 0)
      {
        v33 = (*(uint64_t (**)(uint64_t))(v67 + 16))(v32);
        *(_QWORD *)(v6 + 8 * (v25 >> 6) + 64) |= 1 << v25;
        v34 = 8 * v25;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + v34) = v19;
        *(_QWORD *)(*(_QWORD *)(v6 + 56) + v34) = v33;
        v35 = *(_QWORD *)(v6 + 16);
        v36 = __OFADD__(v35, 1);
        v37 = v35 + 1;
        if (v36)
          goto LABEL_44;
        *(_QWORD *)(v6 + 16) = v37;
      }
      v38 = *(_QWORD *)(v6 + 56);
      v39 = swift_bridgeObjectRelease();
      MEMORY[0x22077EEE4](v39);
      if (*(_QWORD *)((*(_QWORD *)(v38 + 8 * v25) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v38 + 8 * v25) & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
        sub_21C5E3A00();
      sub_21C5E3A3C();
      sub_21C5E39E8();
      swift_bridgeObjectRelease();

      sub_21C561218(v18, v57);
      swift_bridgeObjectRelease();

      sub_21C531AC8(v60, v59);
      sub_21C531AC8(v62, v61);
      if (!v64)
        break;
      --v64;
      v5 = v55;
      v10 = v56 + 128;
      v8 = sub_21C559238;
      v9 = sub_21C561F9C;
    }
    swift_bridgeObjectRelease();
    v63 = sub_21C559238;
    v65 = sub_21C561F9C;
  }
  else
  {
    swift_bridgeObjectRelease();
    v63 = 0;
    v65 = 0;
  }
  v40 = 0;
  v41 = v6 + 64;
  v42 = 1 << *(_BYTE *)(v6 + 32);
  v43 = -1;
  if (v42 < 64)
    v43 = ~(-1 << v42);
  v44 = v43 & *(_QWORD *)(v6 + 64);
  v45 = (unint64_t)(v42 + 63) >> 6;
  if (!v44)
    goto LABEL_22;
LABEL_21:
  v46 = __clz(__rbit64(v44));
  v44 &= v44 - 1;
  for (i = v46 | (v40 << 6); ; i = __clz(__rbit64(v49)) + (v40 << 6))
  {
    v51 = 8 * i;
    v52 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v51);
    if (*(_QWORD *)(*(_QWORD *)(v6 + 56) + v51) >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
      sub_21C5E3D54();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_21C5E3DD8();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
    v53 = (void *)sub_21C5E39D0();
    objc_msgSend(a1, sel_addOverlays_level_, v53, v52);
    swift_bridgeObjectRelease();

    if (v44)
      goto LABEL_21;
LABEL_22:
    v48 = v40 + 1;
    if (__OFADD__(v40, 1))
      goto LABEL_43;
    if (v48 >= v45)
    {
LABEL_41:
      swift_release();
      sub_21C531A9C((uint64_t)v63);
      return sub_21C531A9C((uint64_t)v65);
    }
    v49 = *(_QWORD *)(v41 + 8 * v48);
    ++v40;
    if (!v49)
    {
      v40 = v48 + 1;
      if (v48 + 1 >= v45)
        goto LABEL_41;
      v49 = *(_QWORD *)(v41 + 8 * v40);
      if (!v49)
      {
        v40 = v48 + 2;
        if (v48 + 2 >= v45)
          goto LABEL_41;
        v49 = *(_QWORD *)(v41 + 8 * v40);
        if (!v49)
          break;
      }
    }
LABEL_35:
    v44 = (v49 - 1) & v49;
  }
  v50 = v48 + 3;
  if (v50 >= v45)
    goto LABEL_41;
  v49 = *(_QWORD *)(v41 + 8 * v50);
  if (v49)
  {
    v40 = v50;
    goto LABEL_35;
  }
  while (1)
  {
    v40 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v40 >= v45)
      goto LABEL_41;
    v49 = *(_QWORD *)(v41 + 8 * v40);
    ++v50;
    if (v49)
      goto LABEL_35;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  type metadata accessor for MKOverlayLevel(0);
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

uint64_t sub_21C557FC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t (*v13)@<X0>(uint64_t *@<X8>);
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t i;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int64_t v49;
  unint64_t v50;
  unint64_t j;
  int64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t result;
  uint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;
  uint64_t (*v62)@<X0>(uint64_t *@<X8>);
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;

  v5 = sub_21C54BAF8(a1, a2, a3, a4, a5);
  v6 = sub_21C5605E4(MEMORY[0x24BEE4AF8], &qword_255288BC0);
  v7 = *(_QWORD *)(v5 + 16);
  if (v7)
  {
    v8 = *(_OWORD *)(v5 + 128);
    v69 = *(_OWORD *)(v5 + 112);
    v70 = v8;
    v9 = *(_OWORD *)(v5 + 160);
    v71 = *(_OWORD *)(v5 + 144);
    v72 = v9;
    v10 = *(_OWORD *)(v5 + 48);
    v11 = *(_OWORD *)(v5 + 80);
    v12 = *(_OWORD *)(v5 + 96);
    v66 = *(_OWORD *)(v5 + 64);
    v67 = v11;
    v68 = v12;
    v59 = v5;
    v64 = *(_OWORD *)(v5 + 32);
    v65 = v10;
    sub_21C560DB8((uint64_t)&v64);
    sub_21C531A9C(0);
    v13 = 0;
    v14 = *((_QWORD *)&v72 + 1);
    v61 = v7 - 1;
    v15 = sub_21C559238;
    for (i = 176; ; i += 144)
    {
      v17 = (void *)v64;
      v18 = swift_allocObject();
      v19 = (uint64_t)v15;
      *(_QWORD *)(v18 + 16) = v15;
      *(_QWORD *)(v18 + 24) = 0;
      v20 = v17;
      sub_21C531A9C((uint64_t)v13);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v23 = sub_21C530F04(v14);
      v24 = *(_QWORD *)(v6 + 16);
      v25 = (v22 & 1) == 0;
      v26 = v24 + v25;
      if (__OFADD__(v24, v25))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v27 = v22;
      if (*(_QWORD *)(v6 + 24) >= v26)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_21C55C6EC(&qword_255288BC0);
      }
      else
      {
        sub_21C55A61C(v26, isUniquelyReferenced_nonNull_native, &qword_255288BC0);
        v28 = sub_21C530F04(v14);
        if ((v27 & 1) != (v29 & 1))
          goto LABEL_46;
        v23 = v28;
      }
      swift_bridgeObjectRelease();
      v30 = swift_bridgeObjectRetain();
      if ((v27 & 1) == 0)
      {
        v31 = (*(uint64_t (**)(uint64_t))(v18 + 16))(v30);
        *(_QWORD *)(v6 + 8 * (v23 >> 6) + 64) |= 1 << v23;
        v32 = 8 * v23;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + v32) = v14;
        *(_QWORD *)(*(_QWORD *)(v6 + 56) + v32) = v31;
        v33 = *(_QWORD *)(v6 + 16);
        v34 = __OFADD__(v33, 1);
        v35 = v33 + 1;
        if (v34)
          goto LABEL_44;
        *(_QWORD *)(v6 + 16) = v35;
      }
      v36 = *(_QWORD *)(v6 + 56);
      v37 = swift_bridgeObjectRelease();
      MEMORY[0x22077EEE4](v37);
      if (*(_QWORD *)((*(_QWORD *)(v36 + 8 * v23) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v36 + 8 * v23) & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
        sub_21C5E3A00();
      sub_21C5E3A3C();
      sub_21C5E39E8();

      sub_21C560E74((uint64_t)&v64 + 8);
      if (!v61)
        break;
      v64 = *(_OWORD *)(v59 + i);
      v38 = *(_OWORD *)(v59 + i + 16);
      v39 = *(_OWORD *)(v59 + i + 32);
      v40 = *(_OWORD *)(v59 + i + 64);
      v67 = *(_OWORD *)(v59 + i + 48);
      v68 = v40;
      v65 = v38;
      v66 = v39;
      v41 = *(_OWORD *)(v59 + i + 80);
      v42 = *(_OWORD *)(v59 + i + 96);
      v43 = *(_OWORD *)(v59 + i + 112);
      v72 = *(_OWORD *)(v59 + i + 128);
      v70 = v42;
      v71 = v43;
      v69 = v41;
      sub_21C560DB8((uint64_t)&v64);
      v15 = (uint64_t (*)())v19;
      sub_21C531A9C(v19);
      v14 = *((_QWORD *)&v72 + 1);
      --v61;
      v13 = sub_21C561F9C;
    }
    swift_bridgeObjectRelease();
    v60 = sub_21C559238;
    v62 = sub_21C561F9C;
  }
  else
  {
    swift_bridgeObjectRelease();
    v60 = 0;
    v62 = 0;
  }
  v44 = 0;
  v45 = v6 + 64;
  v46 = 1 << *(_BYTE *)(v6 + 32);
  v47 = -1;
  if (v46 < 64)
    v47 = ~(-1 << v46);
  v48 = v47 & *(_QWORD *)(v6 + 64);
  v49 = (unint64_t)(v46 + 63) >> 6;
  if (!v48)
    goto LABEL_22;
LABEL_21:
  v50 = __clz(__rbit64(v48));
  v48 &= v48 - 1;
  for (j = v50 | (v44 << 6); ; j = __clz(__rbit64(v53)) + (v44 << 6))
  {
    v55 = 8 * j;
    v56 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v55);
    if (*(_QWORD *)(*(_QWORD *)(v6 + 56) + v55) >> 62)
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
      sub_21C5E3D54();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_21C5E3DD8();
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
    v57 = (void *)sub_21C5E39D0();
    objc_msgSend(a1, sel_addOverlays_level_, v57, v56);
    swift_bridgeObjectRelease();

    if (v48)
      goto LABEL_21;
LABEL_22:
    v52 = v44 + 1;
    if (__OFADD__(v44, 1))
      goto LABEL_43;
    if (v52 >= v49)
    {
LABEL_41:
      swift_release();
      sub_21C531A9C((uint64_t)v60);
      return sub_21C531A9C((uint64_t)v62);
    }
    v53 = *(_QWORD *)(v45 + 8 * v52);
    ++v44;
    if (!v53)
    {
      v44 = v52 + 1;
      if (v52 + 1 >= v49)
        goto LABEL_41;
      v53 = *(_QWORD *)(v45 + 8 * v44);
      if (!v53)
      {
        v44 = v52 + 2;
        if (v52 + 2 >= v49)
          goto LABEL_41;
        v53 = *(_QWORD *)(v45 + 8 * v44);
        if (!v53)
          break;
      }
    }
LABEL_35:
    v48 = (v53 - 1) & v53;
  }
  v54 = v52 + 3;
  if (v54 >= v49)
    goto LABEL_41;
  v53 = *(_QWORD *)(v45 + 8 * v54);
  if (v53)
  {
    v44 = v54;
    goto LABEL_35;
  }
  while (1)
  {
    v44 = v54 + 1;
    if (__OFADD__(v54, 1))
      break;
    if (v44 >= v49)
      goto LABEL_41;
    v53 = *(_QWORD *)(v45 + 8 * v44);
    ++v54;
    if (v53)
      goto LABEL_35;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  type metadata accessor for MKOverlayLevel(0);
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

uint64_t sub_21C5584A4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_21C5E3CDC();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x22077F1B4](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        if (!swift_dynamicCastObjCProtocolConditional())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_21C5E3CB8();
        sub_21C5E3CE8();
        sub_21C5E3CF4();
        sub_21C5E3CC4();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        v9 = swift_dynamicCastObjCProtocolConditional();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_21C5E3CB8();
        sub_21C5E3CE8();
        sub_21C5E3CF4();
        sub_21C5E3CC4();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_21C5E3D60();
    swift_bridgeObjectRelease();
    sub_21C5E3CDC();
    swift_bridgeObjectRetain();
    v2 = sub_21C5E3D60();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_21C558688(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t j;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = a1;
  v9 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_21C5E3CDC();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x22077F1B4](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        type metadata accessor for MapBridgingMarker();
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_21C5E3CB8();
        sub_21C5E3CE8();
        sub_21C5E3CF4();
        sub_21C5E3CC4();
        if (v4 == v2)
          return v9;
      }
      __break(1u);
    }
    else
    {
      for (j = 0; ; ++j)
      {
        v6 = j + 1;
        if (__OFADD__(j, 1))
          break;
        type metadata accessor for MapBridgingMarker();
        v7 = swift_dynamicCastClass();
        if (!v7)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v7;
        swift_unknownObjectRetain();
        sub_21C5E3CB8();
        sub_21C5E3CE8();
        sub_21C5E3CF4();
        sub_21C5E3CC4();
        if (v6 == v2)
          return v9;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_21C5E3D60();
    swift_bridgeObjectRelease();
    sub_21C5E3CDC();
    swift_bridgeObjectRetain();
    v2 = sub_21C5E3D60();
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_21C558868(unint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;
  uint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  if (!(a1 >> 62))
  {
    result = sub_21C5E3CDC();
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
    return v8;
  }
  swift_bridgeObjectRetain();
  sub_21C5E3D60();
  swift_bridgeObjectRelease();
  sub_21C5E3CDC();
  swift_bridgeObjectRetain();
  v3 = sub_21C5E3D60();
  result = swift_bridgeObjectRelease();
  if (!v3)
    return v8;
LABEL_3:
  if (v3 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      do
      {
        MEMORY[0x22077F1B4](v4++, a1);
        sub_21C5E3CB8();
        sub_21C5E3CE8();
        sub_21C5E3CF4();
        sub_21C5E3CC4();
      }
      while (v3 != v4);
    }
    else
    {
      v5 = (void **)(a1 + 32);
      do
      {
        v6 = *v5++;
        v7 = v6;
        sub_21C5E3CB8();
        sub_21C5E3CE8();
        sub_21C5E3CF4();
        sub_21C5E3CC4();
        --v3;
      }
      while (v3);
    }
    return v8;
  }
  __break(1u);
  return result;
}

void sub_21C5589DC(unint64_t a1)
{
  void *v1;
  void *v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t j;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;

  v2 = v1;
  if (sub_21C5584A4(a1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
    objc_msgSend(v1, sel_removeOverlays_, sub_21C5E39D0());
LABEL_3:
    swift_bridgeObjectRelease();

    return;
  }
  v4 = sub_21C5584A4(a1);
  if (v4)
  {
    v5 = v4;
    v26 = MEMORY[0x24BEE4AF8];
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v6 = sub_21C5E3D60();
      if (!v6)
        goto LABEL_22;
    }
    else
    {
      v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v6)
        goto LABEL_22;
    }
    if (v6 < 1)
      goto LABEL_51;
    if ((v5 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v6; ++i)
      {
        MEMORY[0x22077F1B4](i, v5);
        type metadata accessor for MapBridgingMarker();
        v8 = swift_dynamicCastClass();
        if (v8 && *(_BYTE *)(v8 + OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature) == 1)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_21C5E3CB8();
          sub_21C5E3CE8();
          sub_21C5E3CF4();
          sub_21C5E3CC4();
        }
      }
    }
    else
    {
      v9 = v5 + 32;
      type metadata accessor for MapBridgingMarker();
      v10 = v6;
      do
      {
        v11 = swift_dynamicCastClass();
        if (!v11 || *(_BYTE *)(v11 + OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature) != 1)
        {
          swift_unknownObjectRetain();
          sub_21C5E3CB8();
          sub_21C5E3CE8();
          sub_21C5E3CF4();
          sub_21C5E3CC4();
        }
        v9 += 8;
        --v10;
      }
      while (v10);
    }
LABEL_22:
    swift_bridgeObjectRelease();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
    v12 = (void *)sub_21C5E39D0();
    objc_msgSend(v2, sel_removeAnnotations_, v12);

    v13 = MEMORY[0x24BEE4AF8];
    v27 = MEMORY[0x24BEE4AF8];
    if (v6)
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        for (j = 0; j != v6; ++j)
        {
          MEMORY[0x22077F1B4](j, v5);
          type metadata accessor for MapBridgingMarker();
          v15 = swift_dynamicCastClass();
          if (v15 && (*(_BYTE *)(v15 + OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature) & 1) != 0)
          {
            sub_21C5E3CB8();
            sub_21C5E3CE8();
            sub_21C5E3CF4();
            sub_21C5E3CC4();
          }
          else
          {
            swift_unknownObjectRelease();
          }
        }
      }
      else
      {
        v16 = v5 + 32;
        type metadata accessor for MapBridgingMarker();
        do
        {
          v17 = swift_dynamicCastClass();
          if (v17 && *(_BYTE *)(v17 + OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature) == 1)
          {
            swift_unknownObjectRetain();
            sub_21C5E3CB8();
            sub_21C5E3CE8();
            sub_21C5E3CF4();
            sub_21C5E3CC4();
          }
          v16 += 8;
          --v6;
        }
        while (v6);
      }
    }
    swift_bridgeObjectRelease();
    v5 = sub_21C558688(v27);
    swift_release();
    if (v5)
    {
      v26 = v13;
      if (v5 >> 62)
        goto LABEL_52;
      v18 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v18; v18 = sub_21C5E3D60())
      {
        v19 = 4;
        while (1)
        {
          v20 = (v5 & 0xC000000000000001) != 0
              ? (char *)MEMORY[0x22077F1B4](v19 - 4, v5)
              : (char *)*(id *)(v5 + 8 * v19);
          v21 = v20;
          v22 = v19 - 3;
          if (__OFADD__(v19 - 4, 1))
            break;
          v23 = *(void **)&v20[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem];
          v24 = v23;

          if (v23)
          {
            MEMORY[0x22077EEE4]();
            if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_21C5E3A00();
            sub_21C5E3A3C();
            sub_21C5E39E8();
          }
          ++v19;
          if (v22 == v18)
            goto LABEL_53;
        }
        __break(1u);
LABEL_51:
        __break(1u);
        __break(1u);
LABEL_52:
        swift_bridgeObjectRetain();
      }
LABEL_53:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_21C531A4C(0, &qword_255288C08);
      objc_msgSend(v2, sel_removeMapItems_, sub_21C5E39D0());
      goto LABEL_3;
    }
  }
}

uint64_t sub_21C558F28(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_21C558F54(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_21C558F90(uint64_t result)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  int64_t v8;

  v1 = 0;
  v2 = result + 64;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(result + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (!v5)
    {
      v7 = v1 + 1;
      if (__OFADD__(v1, 1))
      {
        __break(1u);
        goto LABEL_23;
      }
      if (v7 >= v6)
        goto LABEL_21;
      v5 = *(_QWORD *)(v2 + 8 * v7);
      ++v1;
      if (!v5)
      {
        v1 = v7 + 1;
        if (v7 + 1 >= v6)
          goto LABEL_21;
        v5 = *(_QWORD *)(v2 + 8 * v1);
        if (!v5)
        {
          v1 = v7 + 2;
          if (v7 + 2 >= v6)
            goto LABEL_21;
          v5 = *(_QWORD *)(v2 + 8 * v1);
          if (!v5)
          {
            v1 = v7 + 3;
            if (v7 + 3 >= v6)
              goto LABEL_21;
            v5 = *(_QWORD *)(v2 + 8 * v1);
            if (!v5)
            {
              v8 = v7 + 4;
              if (v8 >= v6)
              {
LABEL_21:
                swift_release();
                return MEMORY[0x24BEE4AF8];
              }
              v5 = *(_QWORD *)(v2 + 8 * v8);
              v1 = v8;
              if (!v5)
                break;
            }
          }
        }
      }
    }
LABEL_4:
    v5 &= v5 - 1;
  }
  while (1)
  {
    v1 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v1 >= v6)
      goto LABEL_21;
    v5 = *(_QWORD *)(v2 + 8 * v1);
    ++v8;
    if (v5)
      goto LABEL_4;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_21C559098(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;

  v1 = result;
  v2 = 0;
  v14 = MEMORY[0x24BEE4AF8];
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v11 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v7)
      goto LABEL_23;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v2;
    if (!v12)
    {
      v2 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_23;
      v12 = *(_QWORD *)(v3 + 8 * v2);
      if (!v12)
      {
        v2 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_23;
        v12 = *(_QWORD *)(v3 + 8 * v2);
        if (!v12)
        {
          v2 = v11 + 3;
          if (v11 + 3 >= v7)
            goto LABEL_23;
          v12 = *(_QWORD *)(v3 + 8 * v2);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v12 - 1) & v12;
    v9 = __clz(__rbit64(v12)) + (v2 << 6);
LABEL_5:
    v10 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v9);
    sub_21C5E3CB8();
    sub_21C5E3CE8();
    sub_21C5E3CF4();
    result = sub_21C5E3CC4();
  }
  v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_23:
    swift_release();
    return v14;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v2 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v12 = *(_QWORD *)(v3 + 8 * v2);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_21C559238()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_21C559244@<X0>(_QWORD *a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  int v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  char v37;
  id v38;
  uint64_t v39;
  __int16 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  int v64;
  unsigned __int8 v65;

  LODWORD(v59) = a3;
  LODWORD(v61) = a2;
  v6 = type metadata accessor for MarkerAnnotationViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ResolvedMarker();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for MapContentList.Item(0);
  v16 = *(int *)(v60 + 24);
  v62 = a1;
  sub_21C529664((uint64_t)a1 + v16, (uint64_t)v12, type metadata accessor for MapContentList.Item.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v57 = v7;
    v58 = a4;
    v63 = v6;
    sub_21C52AAD4((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedMarker);
    v17 = (void *)sub_21C5E331C();
    v18 = v13;
    if (v17)
    {
      v19 = v17;
      v20 = objc_msgSend(v17, sel_string);

      v21 = sub_21C5E3964();
      v55 = v22;
      v56 = v21;

    }
    else
    {
      v55 = 0;
      v56 = 0;
    }
    v24 = (void *)sub_21C5E3334();
    if (v24)
    {
      v25 = v24;
      v26 = objc_msgSend(v24, sel_string);

      v27 = sub_21C5E3964();
      v53 = v28;
      v54 = v27;

    }
    else
    {
      v53 = 0;
      v54 = 0;
    }
    v29 = v62;
    v30 = (uint64_t)v62 + *(int *)(v60 + 28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288C98);
    sub_21C5616A0(&qword_255288CA0, &qword_255288C98, (uint64_t)&unk_21C5E98D0);
    v60 = v30;
    sub_21C5E34F0();
    if ((v61 & 1) != 0)
      v31 = 1;
    else
      v31 = v59 & (v65 ^ 1);
    v64 = v31;
    v62 = (_QWORD *)*v29;
    swift_bridgeObjectRetain();
    v32 = (void *)sub_21C5E3328();
    if (v32)
    {
      v33 = v32;
      v34 = objc_msgSend(v32, sel_string);

      v61 = sub_21C5E3964();
      v59 = v35;

    }
    else
    {
      v61 = 0;
      v59 = 0;
    }
    v36 = *(void **)&v15[*(int *)(v13 + 36)];
    v37 = v15[*(int *)(v18 + 40)];
    v38 = v36;
    v39 = sub_21C5E3310();
    v40 = *((_WORD *)v15 + 8);
    v41 = *(_QWORD *)v15;
    v42 = *((_QWORD *)v15 + 1);
    v43 = v18;
    v44 = v15[18];
    v45 = &v9[*(int *)(v63 + 68)];
    v46 = sub_21C5E34E4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v45, v60, v46);
    v47 = v61;
    *(_QWORD *)v9 = v62;
    *((_QWORD *)v9 + 1) = v47;
    v48 = v56;
    *((_QWORD *)v9 + 2) = v59;
    *((_QWORD *)v9 + 3) = v48;
    *((_QWORD *)v9 + 4) = v55;
    *((_QWORD *)v9 + 5) = v36;
    v9[48] = v37;
    v49 = v53;
    *((_QWORD *)v9 + 7) = v54;
    *((_QWORD *)v9 + 8) = v49;
    *((_QWORD *)v9 + 9) = v39;
    *((_WORD *)v9 + 40) = v40;
    *((_QWORD *)v9 + 11) = v41;
    *((_QWORD *)v9 + 12) = v42;
    v9[104] = v64;
    v9[105] = v44;
    *((_QWORD *)v9 + 14) = 0;
    if (*(_QWORD *)&v15[*(int *)(v43 + 44)])
    {
      sub_21C531A4C(0, (unint64_t *)&qword_2552888B0);
      swift_retain();
      v50 = sub_21C5E3B80();
      sub_21C52A88C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedMarker);

      *((_QWORD *)v9 + 14) = v50;
    }
    else
    {
      sub_21C52A88C((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedMarker);
    }
    v52 = v57;
    v51 = v58;
    sub_21C529664((uint64_t)v9, v58, type metadata accessor for MarkerAnnotationViewModel);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v51, 0, 1, v63);
    return sub_21C52A88C((uint64_t)v9, type metadata accessor for MarkerAnnotationViewModel);
  }
  else
  {
    sub_21C52A88C((uint64_t)v12, type metadata accessor for MapContentList.Item.Content);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a4, 1, 1, v6);
  }
}

uint64_t sub_21C559680(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  _BOOL4 v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 1;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return 1;
  v7 = *(double *)(a1 + 32);
  v6 = *(double *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = v2 - 1;
  do
  {
    v10 = v6 == *(double *)(a2 + v8 + 40) && v7 == *(double *)(a2 + v8 + 32);
    v12 = v9-- != 0;
    if (!v10 || !v12)
      break;
    v7 = *(double *)(a1 + v8 + 48);
    v6 = *(double *)(a1 + v8 + 56);
    v8 += 16;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_21C55973C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  float64x2_t *v4;
  float64x2_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float64x2_t v9;
  float64x2_t v10;
  float64x2_t v11;
  int32x2_t v12;
  _BOOL4 v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
    return 1;
  v4 = (float64x2_t *)(a1 + 32);
  v5 = (float64x2_t *)(a2 + 32);
  v6 = v3 - 1;
  v7 = v2 - 1;
  do
  {
    v8 = v6;
    v9 = *v4++;
    v10 = v9;
    v11 = *v5++;
    v12 = vmovn_s64(vceqq_f64(v10, v11));
    v14 = v7-- != 0;
    if ((v12.i8[0] & v12.i8[4] & 1) == 0)
      break;
    if (!v14)
      break;
    v6 = v8 - 1;
  }
  while (v8);
  return v12.i8[0] & v12.i8[4] & 1;
}

uint64_t sub_21C5597A8()
{
  return sub_21C5E3250();
}

uint64_t sub_21C5597C8()
{
  return sub_21C5E3214();
}

uint64_t sub_21C5597E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_21C5E3088();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_21C5E3220();
}

uint64_t sub_21C559864(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288D40);
  result = sub_21C5E3D78();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_21C5E3E08();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21C559B18(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36[8];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255288D30);
  v6 = sub_21C5E3D78();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v2;
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_22;
    }
    v19 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v19 >= v11)
      break;
    v20 = (_QWORD *)(v5 + 64);
    v21 = *(_QWORD *)(v35 + 8 * v19);
    ++v14;
    if (!v21)
    {
      v14 = v19 + 1;
      if (v19 + 1 >= v11)
        goto LABEL_34;
      v21 = *(_QWORD *)(v35 + 8 * v14);
      if (!v21)
      {
        v22 = v19 + 2;
        if (v22 >= v11)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            v14 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v21 = *(_QWORD *)(v35 + 8 * v14);
            ++v22;
            if (v21)
              goto LABEL_21;
          }
        }
        v14 = v22;
      }
    }
LABEL_21:
    v10 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v14 << 6);
LABEL_22:
    v23 = 8 * v18;
    v24 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v23);
    v25 = *(_QWORD *)(v5 + 56) + v23;
    if ((a2 & 1) != 0)
      sub_21C531764(v25, (uint64_t)v36);
    else
      sub_21C5317D4(v25, (uint64_t)v36);
    sub_21C5E3E14();
    sub_21C5E3874();
    result = sub_21C5E3E44();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v12 + 8 * v28);
      }
      while (v32 == -1);
      v15 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = 8 * v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v24;
    result = sub_21C531764((uint64_t)v36, *(_QWORD *)(v7 + 56) + v16);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v20 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v20, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v20 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21C559E0C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  int64_t v29;
  _QWORD *v30;
  unint64_t v31;
  int64_t v32;
  void *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t i;
  char v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[48];
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288BF8);
  v53 = a2;
  v6 = sub_21C5E3D78();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v51 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v49 = v2;
  v50 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      if ((v53 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v29 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v29 >= v50)
      break;
    v30 = v51;
    v31 = v51[v29];
    ++v13;
    if (!v31)
    {
      v13 = v29 + 1;
      if (v29 + 1 >= v50)
        goto LABEL_33;
      v31 = v51[v13];
      if (!v31)
      {
        v32 = v29 + 2;
        if (v32 >= v50)
        {
LABEL_33:
          swift_release();
          v3 = v49;
          if ((v53 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v31 = v51[v32];
        if (!v31)
        {
          while (1)
          {
            v13 = v32 + 1;
            if (__OFADD__(v32, 1))
              goto LABEL_42;
            if (v13 >= v50)
              goto LABEL_33;
            v31 = v51[v13];
            ++v32;
            if (v31)
              goto LABEL_22;
          }
        }
        v13 = v32;
      }
    }
LABEL_22:
    v10 = (v31 - 1) & v31;
    v17 = __clz(__rbit64(v31)) + (v13 << 6);
    if ((v53 & 1) != 0)
    {
LABEL_10:
      v18 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v19 = *(_QWORD *)(v5 + 56) + 136 * v17;
      v20 = *(_QWORD *)v19;
      v54 = *(_OWORD *)(v19 + 24);
      v55 = *(_OWORD *)(v19 + 8);
      v21 = *(_BYTE *)(v19 + 40);
      v22 = *(_QWORD *)(v19 + 48);
      v23 = *(_QWORD *)(v19 + 56);
      v24 = *(_QWORD *)(v19 + 64);
      v25 = *(_QWORD *)(v19 + 72);
      v26 = *(_QWORD *)(v19 + 88);
      v56 = *(_QWORD *)(v19 + 80);
      v57 = *(_QWORD *)(v19 + 96);
      v27 = *(_BYTE *)(v19 + 104);
      v28 = *(_BYTE *)(v19 + 120);
      v58 = *(_QWORD *)(v19 + 112);
      v59 = *(_QWORD *)(v19 + 128);
      goto LABEL_24;
    }
LABEL_23:
    v33 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v34 = *(_QWORD *)(v5 + 56) + 136 * v17;
    *(_OWORD *)v60 = *(_OWORD *)v34;
    v35 = *(_OWORD *)(v34 + 64);
    v37 = *(_OWORD *)(v34 + 16);
    v36 = *(_OWORD *)(v34 + 32);
    v61 = *(_OWORD *)(v34 + 48);
    v62 = v35;
    *(_OWORD *)&v60[16] = v37;
    *(_OWORD *)&v60[32] = v36;
    v39 = *(_OWORD *)(v34 + 96);
    v38 = *(_OWORD *)(v34 + 112);
    v40 = *(_OWORD *)(v34 + 80);
    v66 = *(_QWORD *)(v34 + 128);
    v64 = v39;
    v65 = v38;
    v63 = v40;
    v59 = v66;
    v28 = BYTE8(v38);
    v57 = v39;
    v58 = v38;
    v27 = BYTE8(v39);
    v23 = *((_QWORD *)&v61 + 1);
    v25 = *((_QWORD *)&v62 + 1);
    v24 = v62;
    v26 = *((_QWORD *)&v40 + 1);
    v56 = v40;
    v22 = v61;
    v54 = *(_OWORD *)&v60[24];
    v55 = *(_OWORD *)&v60[8];
    v21 = v60[40];
    v20 = *(_QWORD *)v60;
    v18 = v33;
    sub_21C560F2C((uint64_t)v60);
LABEL_24:
    result = sub_21C5E3B8C();
    v41 = -1 << *(_BYTE *)(v7 + 32);
    v42 = result & ~v41;
    v43 = v42 >> 6;
    if (((-1 << v42) & ~*(_QWORD *)(v11 + 8 * (v42 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v42) & ~*(_QWORD *)(v11 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v44 = 0;
      v45 = (unint64_t)(63 - v41) >> 6;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v46 = v43 == v45;
        if (v43 == v45)
          v43 = 0;
        v44 |= v46;
        v47 = *(_QWORD *)(v11 + 8 * v43);
      }
      while (v47 == -1);
      v14 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    v60[0] = v21;
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v18;
    v15 = *(_QWORD *)(v7 + 56) + 136 * v14;
    *(_QWORD *)v15 = v20;
    *(_OWORD *)(v15 + 8) = v55;
    *(_OWORD *)(v15 + 24) = v54;
    *(_BYTE *)(v15 + 40) = v21;
    *(_QWORD *)(v15 + 48) = v22;
    *(_QWORD *)(v15 + 56) = v23;
    *(_QWORD *)(v15 + 64) = v24;
    *(_QWORD *)(v15 + 72) = v25;
    *(_QWORD *)(v15 + 80) = v56;
    *(_QWORD *)(v15 + 88) = v26;
    *(_QWORD *)(v15 + 96) = v57;
    *(_BYTE *)(v15 + 104) = v27;
    *(_QWORD *)(v15 + 112) = v58;
    *(_BYTE *)(v15 + 120) = v28;
    *(_QWORD *)(v15 + 128) = v59;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v49;
  v30 = v51;
  if ((v53 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v48 = 1 << *(_BYTE *)(v5 + 32);
  if (v48 >= 64)
    bzero(v30, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v30 = -1 << v48;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_21C55A248(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t *v45;
  int64_t v46;
  _QWORD *v47;
  uint64_t i;
  char v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288C30);
  v49 = a2;
  v6 = sub_21C5E3D78();
  v50 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v47 = (_QWORD *)(v5 + 64);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v45 = v2;
  v46 = (unint64_t)(v7 + 63) >> 6;
  v10 = v6 + 64;
  result = swift_retain();
  v12 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v9)
    {
      v18 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v51 = v12;
      v19 = v18 | (v12 << 6);
      goto LABEL_31;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v20 >= v46)
      break;
    v21 = v47;
    v22 = v47[v20];
    v23 = v12 + 1;
    if (!v22)
    {
      v23 = v12 + 2;
      if (v12 + 2 >= v46)
        goto LABEL_33;
      v22 = v47[v23];
      if (!v22)
      {
        v24 = v12 + 3;
        if (v12 + 3 >= v46)
        {
LABEL_33:
          swift_release();
          v3 = v45;
          if ((v49 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v22 = v47[v24];
        if (!v22)
        {
          while (1)
          {
            v23 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v23 >= v46)
              goto LABEL_33;
            v22 = v47[v23];
            ++v24;
            if (v22)
              goto LABEL_30;
          }
        }
        v23 = v12 + 3;
      }
    }
LABEL_30:
    v9 = (v22 - 1) & v22;
    v51 = v23;
    v19 = __clz(__rbit64(v22)) + (v23 << 6);
LABEL_31:
    v29 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v19);
    v30 = *(_QWORD *)(v5 + 56) + 120 * v19;
    v31 = *(_QWORD *)v30;
    v32 = *(void **)(v30 + 8);
    v33 = *(_QWORD *)(v30 + 16);
    v54 = *(_OWORD *)(v30 + 24);
    v34 = *(_QWORD *)(v30 + 40);
    v35 = *(_QWORD *)(v30 + 48);
    v36 = *(_QWORD *)(v30 + 56);
    v37 = *(_QWORD *)(v30 + 64);
    v38 = *(_QWORD *)(v30 + 72);
    v39 = *(_BYTE *)(v30 + 88);
    v40 = *(_QWORD *)(v30 + 96);
    v41 = *(_BYTE *)(v30 + 104);
    v52 = *(_QWORD *)(v30 + 112);
    v53 = *(_QWORD *)(v30 + 80);
    if ((v49 & 1) == 0)
    {
      v42 = v29;
      swift_bridgeObjectRetain();
      sub_21C5611D8(v32, v33);
      v43 = *((id *)&v54 + 1);
      swift_bridgeObjectRetain();
      sub_21C52EF74(v53, v39);
      sub_21C52EF74(v40, v41);
    }
    result = sub_21C5E3B8C();
    v13 = -1 << *(_BYTE *)(v50 + 32);
    v14 = result & ~v13;
    v15 = v14 >> 6;
    if (((-1 << v14) & ~*(_QWORD *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v13) >> 6;
      do
      {
        if (++v15 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v15 == v26;
        if (v15 == v26)
          v15 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v10 + 8 * v15);
      }
      while (v28 == -1);
      v16 = __clz(__rbit64(~v28)) + (v15 << 6);
    }
    *(_QWORD *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(_QWORD *)(*(_QWORD *)(v50 + 48) + 8 * v16) = v29;
    v17 = *(_QWORD *)(v50 + 56) + 120 * v16;
    *(_QWORD *)v17 = v31;
    *(_QWORD *)(v17 + 8) = v32;
    *(_QWORD *)(v17 + 16) = v33;
    *(_OWORD *)(v17 + 24) = v54;
    *(_QWORD *)(v17 + 40) = v34;
    *(_QWORD *)(v17 + 48) = v35;
    *(_QWORD *)(v17 + 56) = v36;
    *(_QWORD *)(v17 + 64) = v37;
    *(_QWORD *)(v17 + 72) = v38;
    *(_QWORD *)(v17 + 80) = v53;
    *(_BYTE *)(v17 + 88) = v39;
    *(_QWORD *)(v17 + 96) = v40;
    *(_BYTE *)(v17 + 104) = v41;
    v12 = v51;
    *(_QWORD *)(v17 + 112) = v52;
    ++*(_QWORD *)(v50 + 16);
  }
  swift_release();
  v3 = v45;
  v21 = v47;
  if ((v49 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v44 = 1 << *(_BYTE *)(v5 + 32);
  if (v44 >= 64)
    bzero(v21, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v21 = -1 << v44;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v50;
  return result;
}

uint64_t sub_21C55A61C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_21C5E3D78();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v33 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v32 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v21 >= v32)
          goto LABEL_33;
        v22 = v33[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v32)
            goto LABEL_33;
          v22 = v33[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v32)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_40;
              }
              v31 = 1 << *(_BYTE *)(v6 + 32);
              if (v31 >= 64)
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v31;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v22 = v33[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v9 >= v32)
                  goto LABEL_33;
                v22 = v33[v9];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v9 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_21C5E3E14();
      sub_21C5E3E20();
      result = sub_21C5E3E44();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v18) = v30;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_21C55A8F0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  __int16 v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t i;
  char v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288C58);
  v48 = a2;
  v6 = sub_21C5E3D78();
  v49 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v44 = v2;
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v46 = (_QWORD *)(v5 + 64);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v5 + 64);
    v45 = (unint64_t)(v7 + 63) >> 6;
    v10 = v6 + 64;
    result = swift_retain();
    v12 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v9)
      {
        v18 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v50 = v12;
        v19 = v18 | (v12 << 6);
      }
      else
      {
        v20 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v20 >= v45)
          goto LABEL_33;
        v21 = v46[v20];
        v22 = v12 + 1;
        if (!v21)
        {
          v22 = v12 + 2;
          if (v12 + 2 >= v45)
            goto LABEL_33;
          v21 = v46[v22];
          if (!v21)
          {
            v23 = v12 + 3;
            if (v12 + 3 >= v45)
            {
LABEL_33:
              swift_release();
              v3 = v44;
              if ((v48 & 1) != 0)
              {
                v43 = 1 << *(_BYTE *)(v5 + 32);
                if (v43 >= 64)
                  bzero(v46, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v46 = -1 << v43;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v46[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_40;
                if (v22 >= v45)
                  goto LABEL_33;
                v21 = v46[v22];
                ++v23;
                if (v21)
                  goto LABEL_30;
              }
            }
            v22 = v12 + 3;
          }
        }
LABEL_30:
        v9 = (v21 - 1) & v21;
        v50 = v22;
        v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      v28 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v29 = *(_QWORD *)(v5 + 56) + 96 * v19;
      v30 = *(_QWORD *)v29;
      v31 = *(void **)(v29 + 8);
      v32 = *(_WORD *)(v29 + 16);
      v33 = *(void **)(v29 + 24);
      v34 = *(_QWORD *)(v29 + 32);
      v35 = *(_QWORD *)(v29 + 40);
      v36 = *(_QWORD *)(v29 + 48);
      v37 = *(_QWORD *)(v29 + 56);
      v38 = *(_QWORD *)(v29 + 64);
      v39 = *(_QWORD *)(v29 + 72);
      v40 = *(_BYTE *)(v29 + 80);
      v51 = *(_QWORD *)(v29 + 88);
      if ((v48 & 1) == 0)
      {
        v41 = v28;
        swift_bridgeObjectRetain();
        sub_21C561470(v31, v32);
        v42 = v33;
        swift_bridgeObjectRetain();
        sub_21C52EF74(v39, v40);
      }
      result = sub_21C5E3B8C();
      v13 = -1 << *(_BYTE *)(v49 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v10 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v26 = v15 == v25;
          if (v15 == v25)
            v15 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v15);
        }
        while (v27 == -1);
        v16 = __clz(__rbit64(~v27)) + (v15 << 6);
      }
      *(_QWORD *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v49 + 48) + 8 * v16) = v28;
      v17 = *(_QWORD *)(v49 + 56) + 96 * v16;
      *(_QWORD *)v17 = v30;
      *(_QWORD *)(v17 + 8) = v31;
      *(_WORD *)(v17 + 16) = v32;
      *(_QWORD *)(v17 + 24) = v33;
      *(_QWORD *)(v17 + 32) = v34;
      *(_QWORD *)(v17 + 40) = v35;
      *(_QWORD *)(v17 + 48) = v36;
      *(_QWORD *)(v17 + 56) = v37;
      *(_QWORD *)(v17 + 64) = v38;
      *(_QWORD *)(v17 + 72) = v39;
      *(_BYTE *)(v17 + 80) = v40;
      v12 = v50;
      *(_QWORD *)(v17 + 88) = v51;
      ++*(_QWORD *)(v49 + 16);
    }
  }
  result = swift_release();
  *v3 = v49;
  return result;
}

uint64_t sub_21C55AC7C(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;
  int v46;

  v7 = v4;
  v9 = a3(0);
  v45 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v41 - v10;
  v12 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v46 = a2;
  v13 = sub_21C5E3D78();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_41;
  v42 = v4;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v44 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v43 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v43)
      break;
    v26 = v44;
    v27 = v44[v25];
    ++v21;
    if (!v27)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v43)
        goto LABEL_34;
      v27 = v44[v21];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v43)
        {
LABEL_34:
          swift_release();
          v7 = v42;
          if ((v46 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v44[v28];
        if (!v27)
        {
          while (1)
          {
            v21 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v21 >= v43)
              goto LABEL_34;
            v27 = v44[v21];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v21 = v28;
      }
    }
LABEL_21:
    v18 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    v29 = *(void **)(*(_QWORD *)(v12 + 48) + 8 * v24);
    v30 = *(_QWORD *)(v45 + 72);
    v31 = *(_QWORD *)(v12 + 56) + v30 * v24;
    if ((v46 & 1) != 0)
    {
      sub_21C52AAD4(v31, (uint64_t)v11, a3);
    }
    else
    {
      sub_21C529664(v31, (uint64_t)v11, a3);
      v32 = v29;
    }
    result = sub_21C5E3B8C();
    v33 = -1 << *(_BYTE *)(v14 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v19 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v19 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v19 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v22) = v29;
    result = sub_21C52AAD4((uint64_t)v11, *(_QWORD *)(v14 + 56) + v30 * v22, a3);
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release();
  v7 = v42;
  v26 = v44;
  if ((v46 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v12 + 32);
  if (v40 >= 64)
    bzero(v26, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v40;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v7 = v14;
  return result;
}

uint64_t sub_21C55AFC8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  char v41;
  void *v42;
  _OWORD v43[2];
  uint64_t v44;
  _OWORD v45[2];
  uint64_t v46;
  char v47;
  _BYTE v48[48];

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v41 = a2;
  v7 = sub_21C5E3D78();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_47;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v40 = (_QWORD *)(v6 + 64);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v38 = v3;
  v39 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_22;
    }
    v19 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      return result;
    }
    if (v19 >= v39)
      break;
    v20 = v40;
    v21 = v40[v19];
    ++v14;
    if (!v21)
    {
      v14 = v19 + 1;
      if (v19 + 1 >= v39)
        goto LABEL_40;
      v21 = v40[v14];
      if (!v21)
      {
        v22 = v19 + 2;
        if (v22 >= v39)
        {
LABEL_40:
          swift_release();
          v4 = v38;
          if ((v41 & 1) == 0)
            goto LABEL_47;
          goto LABEL_43;
        }
        v21 = v40[v22];
        if (!v21)
        {
          while (1)
          {
            v14 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_49;
            if (v14 >= v39)
              goto LABEL_40;
            v21 = v40[v14];
            ++v22;
            if (v21)
              goto LABEL_21;
          }
        }
        v14 = v22;
      }
    }
LABEL_21:
    v11 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v14 << 6);
LABEL_22:
    v23 = 8 * v18;
    v24 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v23);
    v25 = *(void **)(*(_QWORD *)(v6 + 56) + v23);
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v26 = v25;
    }
    sub_21C5E3E14();
    sub_21C5E3E20();
    v27 = *(_QWORD *)(v24 + 16);
    if (v27)
    {
      v42 = v25;
      v28 = v6;
      v29 = v24 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_21C561080(v29, (uint64_t)v48);
        sub_21C561080((uint64_t)v48, (uint64_t)v45);
        if ((v47 & 1) != 0)
        {
          v43[0] = v45[0];
          v43[1] = v45[1];
          v44 = v46;
          sub_21C5E3E20();
          sub_21C5E3C34();
          sub_21C5610BC((uint64_t)v43);
        }
        else
        {
          sub_21C5E3E20();
          sub_21C5E3E20();
        }
        sub_21C52B9B0((uint64_t)v48);
        v29 += 48;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      v6 = v28;
      v25 = v42;
    }
    result = sub_21C5E3E44();
    v30 = -1 << *(_BYTE *)(v8 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v12 + 8 * (v31 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v12 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_48;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v12 + 8 * v32);
      }
      while (v36 == -1);
      v15 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = 8 * v15;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v16) = v24;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v16) = v25;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v38;
  v20 = v40;
  if ((v41 & 1) == 0)
    goto LABEL_47;
LABEL_43:
  v37 = 1 << *(_BYTE *)(v6 + 32);
  if (v37 >= 64)
    bzero(v20, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v20 = -1 << v37;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_47:
  result = swift_release();
  *v4 = v8;
  return result;
}

void sub_21C55B37C(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_21C5E3BF8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_21C5E3B8C();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (char *)(v18 + 136 * v3);
            v20 = (char *)(v18 + 136 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 136))
            {
              memmove(v19, v20, 0x88uLL);
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_21C55B538(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_21C5E3BF8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_21C5E3B8C();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (char *)(v18 + 120 * v3);
            v20 = (char *)(v18 + 120 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 120))
            {
              memmove(v19, v20, 0x78uLL);
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_21C55B6F4(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_21C5E3BF8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_21C5E3B8C();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (char *)(v18 + 96 * v3);
            v20 = (char *)(v18 + 96 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 96))
            {
              memmove(v19, v20, 0x60uLL);
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_21C55B8B0(unint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v4 = a1;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (a1 + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    v10 = sub_21C5E3BF8();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v11 = (v10 + 1) & v9;
      do
      {
        v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v7);
        v13 = sub_21C5E3B8C();

        v14 = v13 & v9;
        if (v4 >= (uint64_t)v11)
        {
          if (v14 < v11 || v4 < (uint64_t)v14)
            goto LABEL_6;
        }
        else if (v14 < v11 && v4 < (uint64_t)v14)
        {
          goto LABEL_6;
        }
        v17 = *(_QWORD *)(a2 + 48);
        v18 = (_QWORD *)(v17 + 8 * v4);
        v19 = (_QWORD *)(v17 + 8 * v7);
        if (v4 != v7 || v18 >= v19 + 1)
          *v18 = *v19;
        v20 = *(_QWORD *)(a2 + 56);
        v21 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v22 = v21 * v4;
        v23 = v20 + v21 * v4;
        v24 = v21 * v7;
        v25 = v20 + v21 * v7 + v21;
        if (v22 < v24 || v23 >= v25)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v22 == v24)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
      }
      while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    v27 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v28 = *v27;
    v29 = (-1 << v4) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v5 + 8 * (a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_21C55BA94(unint64_t result, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;
  char v30;
  _BYTE v31[48];

  v2 = result;
  v3 = a2 + 64;
  v4 = -1 << *(_BYTE *)(a2 + 32);
  v5 = (result + 1) & ~v4;
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    v25 = a2;
    v6 = ~v4;
    result = sub_21C5E3BF8();
    if ((*(_QWORD *)(v3 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v7 = (result + 1) & v6;
      a2 = v25;
      while (1)
      {
        v8 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v5);
        sub_21C5E3E14();
        sub_21C5E3E20();
        v9 = *(_QWORD *)(v8 + 16);
        if (v9)
        {
          v10 = v8 + 32;
          swift_bridgeObjectRetain();
          do
          {
            sub_21C561080(v10, (uint64_t)v31);
            sub_21C561080((uint64_t)v31, (uint64_t)v28);
            if ((v30 & 1) != 0)
            {
              v26[0] = v28[0];
              v26[1] = v28[1];
              v27 = v29;
              sub_21C5E3E20();
              sub_21C5E3C34();
              sub_21C5610BC((uint64_t)v26);
            }
            else
            {
              sub_21C5E3E20();
              sub_21C5E3E20();
            }
            sub_21C52B9B0((uint64_t)v31);
            v10 += 48;
            --v9;
          }
          while (v9);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        v11 = sub_21C5E3E44();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v6;
        if (v2 >= (uint64_t)v7)
        {
          a2 = v25;
          if (v12 < v7)
            goto LABEL_5;
        }
        else
        {
          a2 = v25;
          if (v12 >= v7)
            goto LABEL_18;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_18:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_QWORD *)(v13 + 8 * v2);
          v15 = (_QWORD *)(v13 + 8 * v5);
          if (v2 != v5 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_QWORD *)(v16 + 8 * v2);
          v18 = (_QWORD *)(v16 + 8 * v5);
          if (v2 != v5 || (v2 = v5, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v2 = v5;
          }
        }
LABEL_5:
        v5 = (v5 + 1) & v6;
        if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
          goto LABEL_26;
      }
    }
    a2 = v25;
LABEL_26:
    v19 = (uint64_t *)(v3 + 8 * ((unint64_t)v2 >> 6));
    v21 = *v19;
    v20 = (-1 << v2) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v3 + 8 * (result >> 6));
    v20 = *v19;
    v21 = (-1 << result) - 1;
  }
  *v19 = v20 & v21;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_21C55BD14(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_21C5E3BF8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_21C5E3E14();
        sub_21C5E3874();
        result = sub_21C5E3E44();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v9 < v8)
          goto LABEL_11;
LABEL_12:
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_QWORD *)(v10 + 8 * v3);
        v12 = (_QWORD *)(v10 + 8 * v6);
        if (v3 != v6 || v11 >= v12 + 1)
          *v11 = *v12;
        v13 = *(_QWORD *)(a2 + 56);
        result = v13 + 8 * v3;
        if (v3 < (uint64_t)v6 || result >= v13 + 8 * v6 + 8)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v14 = v3 == v6;
          v3 = v6;
          if (v14)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_19;
      }
      if (v9 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v9)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_19:
    v15 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v16 = *v15;
    v17 = (-1 << v3) - 1;
  }
  else
  {
    v15 = (uint64_t *)(v4 + 8 * (result >> 6));
    v17 = *v15;
    v16 = (-1 << result) - 1;
  }
  *v15 = v17 & v16;
  v18 = *(_QWORD *)(a2 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v20;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_21C55BEEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288D40);
  v2 = *v0;
  v3 = sub_21C5E3D6C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21C55C08C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  char v21[8];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255288D30);
  v2 = *v0;
  v3 = sub_21C5E3D6C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    sub_21C5317D4(*(_QWORD *)(v2 + 56) + 8 * v15, (uint64_t)v21);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_21C531764((uint64_t)v21, *(_QWORD *)(v4 + 56) + v16);
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21C55C248()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  id v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288BF8);
  v2 = *v0;
  v3 = sub_21C5E3D6C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v34 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v34 >= v13)
      goto LABEL_26;
    v35 = *(_QWORD *)(v6 + 8 * v34);
    ++v9;
    if (!v35)
    {
      v9 = v34 + 1;
      if (v34 + 1 >= v13)
        goto LABEL_26;
      v35 = *(_QWORD *)(v6 + 8 * v9);
      if (!v35)
        break;
    }
LABEL_25:
    v12 = (v35 - 1) & v35;
    v15 = __clz(__rbit64(v35)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 136 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v21 = *(_OWORD *)(v19 + 16);
    v20 = *(_OWORD *)(v19 + 32);
    v22 = *(_OWORD *)(v19 + 64);
    v40 = *(_OWORD *)(v19 + 48);
    v41 = v22;
    v24 = *(_OWORD *)(v19 + 96);
    v23 = *(_OWORD *)(v19 + 112);
    v25 = *(_OWORD *)(v19 + 80);
    v45 = *(_QWORD *)(v19 + 128);
    v43 = v24;
    v44 = v23;
    v42 = v25;
    v37 = *(_OWORD *)v19;
    v38 = v21;
    v39 = v20;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v26 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v26 = v37;
    v27 = v38;
    v28 = v39;
    v29 = v41;
    *(_OWORD *)(v26 + 48) = v40;
    *(_OWORD *)(v26 + 64) = v29;
    *(_OWORD *)(v26 + 16) = v27;
    *(_OWORD *)(v26 + 32) = v28;
    v30 = v42;
    v31 = v43;
    v32 = v44;
    *(_QWORD *)(v26 + 128) = v45;
    *(_OWORD *)(v26 + 96) = v31;
    *(_OWORD *)(v26 + 112) = v32;
    *(_OWORD *)(v26 + 80) = v30;
    v33 = v17;
    result = (void *)sub_21C560F2C((uint64_t)&v37);
  }
  v36 = v34 + 2;
  if (v36 >= v13)
    goto LABEL_26;
  v35 = *(_QWORD *)(v6 + 8 * v36);
  if (v35)
  {
    v9 = v36;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v35 = *(_QWORD *)(v6 + 8 * v9);
    ++v36;
    if (v35)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21C55C460()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  BOOL v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255288C30);
  v38 = v0;
  v1 = *v0;
  v2 = sub_21C5E3D6C();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    v37 = v3;
    result = (void *)swift_release();
    *v38 = v37;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  v42 = v3;
  if (v6)
  {
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    v3 = v42;
  }
  v40 = v1 + 64;
  v41 = v1;
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v39 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v7 << 6);
      v13 = v41;
      v3 = v42;
      goto LABEL_12;
    }
    v34 = v7 + 1;
    v13 = v41;
    v3 = v42;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v34 >= v39)
      goto LABEL_26;
    v35 = *(_QWORD *)(v40 + 8 * v34);
    ++v7;
    if (!v35)
    {
      v7 = v34 + 1;
      if (v34 + 1 >= v39)
        goto LABEL_26;
      v35 = *(_QWORD *)(v40 + 8 * v7);
      if (!v35)
        break;
    }
LABEL_25:
    v10 = (v35 - 1) & v35;
    v12 = __clz(__rbit64(v35)) + (v7 << 6);
LABEL_12:
    v14 = 8 * v12;
    v15 = *(void **)(*(_QWORD *)(v13 + 48) + 8 * v12);
    v16 = 120 * v12;
    v17 = *(_QWORD *)(v13 + 56) + v16;
    v18 = *(_QWORD *)v17;
    v19 = *(void **)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v22 = *(_QWORD *)(v17 + 48);
    v21 = *(_QWORD *)(v17 + 56);
    v23 = *(_QWORD *)(v17 + 64);
    v24 = *(_QWORD *)(v17 + 72);
    v25 = *(_QWORD *)(v17 + 80);
    v26 = *(_BYTE *)(v17 + 88);
    v27 = *(_QWORD *)(v17 + 96);
    v28 = *(_BYTE *)(v17 + 104);
    v29 = *(_QWORD *)(v17 + 112);
    v30 = *(_QWORD *)(v17 + 40);
    v43 = *(_OWORD *)(v17 + 24);
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + v14) = v15;
    v31 = *(_QWORD *)(v3 + 56) + v16;
    *(_QWORD *)v31 = v18;
    *(_QWORD *)(v31 + 8) = v19;
    *(_QWORD *)(v31 + 16) = v20;
    *(_OWORD *)(v31 + 24) = v43;
    *(_QWORD *)(v31 + 40) = v30;
    *(_QWORD *)(v31 + 48) = v22;
    *(_QWORD *)(v31 + 56) = v21;
    *(_QWORD *)(v31 + 64) = v23;
    *(_QWORD *)(v31 + 72) = v24;
    *(_QWORD *)(v31 + 80) = v25;
    *(_BYTE *)(v31 + 88) = v26;
    *(_QWORD *)(v31 + 96) = v27;
    *(_BYTE *)(v31 + 104) = v28;
    *(_QWORD *)(v31 + 112) = v29;
    v32 = v15;
    swift_bridgeObjectRetain();
    sub_21C5611D8(v19, v20);
    v33 = *((id *)&v43 + 1);
    swift_bridgeObjectRetain();
    sub_21C52EF74(v25, v26);
    result = (void *)sub_21C52EF74(v27, v28);
  }
  v36 = v34 + 2;
  if (v36 >= v39)
    goto LABEL_26;
  v35 = *(_QWORD *)(v40 + 8 * v36);
  if (v35)
  {
    v7 = v36;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v7 >= v39)
      goto LABEL_26;
    v35 = *(_QWORD *)(v40 + 8 * v7);
    ++v36;
    if (v35)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21C55C6EC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_21C5E3D6C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_21C55C884()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  BOOL v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  id v30;
  id v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;

  __swift_instantiateConcreteTypeFromMangledName(&qword_255288C58);
  v36 = v0;
  v1 = *v0;
  v2 = sub_21C5E3D6C();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    v35 = v3;
    result = (void *)swift_release();
    *v36 = v35;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  v39 = v3;
  if (v6)
  {
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
    v3 = v39;
  }
  v38 = v1 + 64;
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v37 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v7 << 6);
      v3 = v39;
      goto LABEL_12;
    }
    v32 = v7 + 1;
    v3 = v39;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v37)
      goto LABEL_26;
    v33 = *(_QWORD *)(v38 + 8 * v32);
    ++v7;
    if (!v33)
    {
      v7 = v32 + 1;
      if (v32 + 1 >= v37)
        goto LABEL_26;
      v33 = *(_QWORD *)(v38 + 8 * v7);
      if (!v33)
        break;
    }
LABEL_25:
    v10 = (v33 - 1) & v33;
    v12 = __clz(__rbit64(v33)) + (v7 << 6);
LABEL_12:
    v13 = 8 * v12;
    v14 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v12);
    v15 = 96 * v12;
    v16 = *(_QWORD *)(v1 + 56) + v15;
    v17 = *(_QWORD *)v16;
    v18 = *(void **)(v16 + 8);
    v19 = *(void **)(v16 + 24);
    v21 = *(_QWORD *)(v16 + 40);
    v20 = *(_QWORD *)(v16 + 48);
    v22 = *(_QWORD *)(v16 + 56);
    v23 = *(_QWORD *)(v16 + 64);
    v24 = *(_QWORD *)(v16 + 72);
    v25 = *(_BYTE *)(v16 + 80);
    v26 = *(_QWORD *)(v16 + 88);
    v27 = *(_QWORD *)(v16 + 32);
    v28 = *(_WORD *)(v16 + 16);
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + v13) = v14;
    v29 = *(_QWORD *)(v3 + 56) + v15;
    *(_QWORD *)v29 = v17;
    *(_QWORD *)(v29 + 8) = v18;
    *(_WORD *)(v29 + 16) = v28;
    *(_QWORD *)(v29 + 24) = v19;
    *(_QWORD *)(v29 + 32) = v27;
    *(_QWORD *)(v29 + 40) = v21;
    *(_QWORD *)(v29 + 48) = v20;
    *(_QWORD *)(v29 + 56) = v22;
    *(_QWORD *)(v29 + 64) = v23;
    *(_QWORD *)(v29 + 72) = v24;
    *(_BYTE *)(v29 + 80) = v25;
    *(_QWORD *)(v29 + 88) = v26;
    v30 = v14;
    swift_bridgeObjectRetain();
    sub_21C561470(v18, v28);
    v31 = v19;
    swift_bridgeObjectRetain();
    result = (void *)sub_21C52EF74(v24, v25);
  }
  v34 = v32 + 2;
  if (v34 >= v37)
    goto LABEL_26;
  v33 = *(_QWORD *)(v38 + 8 * v34);
  if (v33)
  {
    v7 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v7 >= v37)
      goto LABEL_26;
    v33 = *(_QWORD *)(v38 + 8 * v7);
    ++v34;
    if (v33)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_21C55CAE0(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id result;
  unint64_t v13;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v2;
  v6 = a1(0);
  v31 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_21C5E3D6C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (id)swift_release();
LABEL_28:
    *v5 = v11;
    return result;
  }
  v29 = v5;
  result = (id)(v10 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13)
    result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  v30 = v9 + 64;
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v16 = 1 << *(_BYTE *)(v9 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v9 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v15 << 6);
      goto LABEL_12;
    }
    v25 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v15;
    if (!v26)
    {
      v15 = v25 + 1;
      if (v25 + 1 >= v19)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v15);
      if (!v26)
        break;
    }
LABEL_25:
    v18 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_12:
    v22 = 8 * v21;
    v23 = *(void **)(*(_QWORD *)(v9 + 48) + 8 * v21);
    v24 = *(_QWORD *)(v31 + 72) * v21;
    sub_21C529664(*(_QWORD *)(v9 + 56) + v24, (uint64_t)v8, a1);
    *(_QWORD *)(*(_QWORD *)(v11 + 48) + v22) = v23;
    sub_21C52AAD4((uint64_t)v8, *(_QWORD *)(v11 + 56) + v24, a1);
    result = v23;
  }
  v27 = v25 + 2;
  if (v27 >= v19)
  {
LABEL_26:
    result = (id)swift_release();
    v5 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v15 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v15 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v15 >= v19)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v15);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_21C55CD08(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_21C5E3D6C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    swift_bridgeObjectRetain();
    result = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_21C55CEA4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_21C530E7C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_21C55BEEC();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_21C559864(result, a3 & 1);
  result = sub_21C530E7C(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

id sub_21C55CFDC(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  id result;
  unint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = v3;
  v7 = *v3;
  v9 = sub_21C530F5C((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_21C55C248();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      return (id)sub_21C5610F0(a1, v15[7] + 136 * v9);
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    *(_QWORD *)(v15[6] + 8 * v9) = a2;
    v19 = v15[7] + 136 * v9;
    *(_OWORD *)v19 = *(_OWORD *)a1;
    v20 = *(_OWORD *)(a1 + 16);
    v21 = *(_OWORD *)(a1 + 32);
    v22 = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v19 + 48) = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v19 + 64) = v22;
    *(_OWORD *)(v19 + 16) = v20;
    *(_OWORD *)(v19 + 32) = v21;
    v23 = *(_OWORD *)(a1 + 80);
    v24 = *(_OWORD *)(a1 + 96);
    v25 = *(_OWORD *)(a1 + 112);
    *(_QWORD *)(v19 + 128) = *(_QWORD *)(a1 + 128);
    *(_OWORD *)(v19 + 96) = v24;
    *(_OWORD *)(v19 + 112) = v25;
    *(_OWORD *)(v19 + 80) = v23;
    v26 = v15[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v15[2] = v28;
      return a2;
    }
    goto LABEL_14;
  }
  sub_21C559E0C(v12, a3 & 1);
  v17 = sub_21C530F5C((uint64_t)a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      return (id)sub_21C5610F0(a1, v15[7] + 136 * v9);
    goto LABEL_11;
  }
LABEL_15:
  sub_21C531A4C(0, &qword_255288BE0);
  result = (id)sub_21C5E3DF0();
  __break(1u);
  return result;
}

id sub_21C55D168(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  id result;
  unint64_t v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = v3;
  v7 = *v3;
  v9 = sub_21C531010((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_21C55C460();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      return (id)sub_21C561434(a1, v15[7] + 120 * v9);
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    *(_QWORD *)(v15[6] + 8 * v9) = a2;
    v19 = v15[7] + 120 * v9;
    v20 = *(_OWORD *)a1;
    v21 = *(_OWORD *)(a1 + 16);
    v22 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v19 + 48) = v22;
    *(_OWORD *)v19 = v20;
    *(_OWORD *)(v19 + 16) = v21;
    v23 = *(_OWORD *)(a1 + 64);
    v24 = *(_OWORD *)(a1 + 80);
    v25 = *(_OWORD *)(a1 + 96);
    *(_QWORD *)(v19 + 112) = *(_QWORD *)(a1 + 112);
    *(_OWORD *)(v19 + 80) = v24;
    *(_OWORD *)(v19 + 96) = v25;
    *(_OWORD *)(v19 + 64) = v23;
    v26 = v15[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v15[2] = v28;
      return a2;
    }
    goto LABEL_14;
  }
  sub_21C55A248(v12, a3 & 1);
  v17 = sub_21C531010((uint64_t)a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      return (id)sub_21C561434(a1, v15[7] + 120 * v9);
    goto LABEL_11;
  }
LABEL_15:
  sub_21C531A4C(0, (unint64_t *)&qword_255288C20);
  result = (id)sub_21C5E3DF0();
  __break(1u);
  return result;
}

id sub_21C55D2EC(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  id result;
  unint64_t v17;
  char v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v4 = v3;
  v7 = *v3;
  v9 = sub_21C53105C((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_21C55C884();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      return (id)sub_21C561658((uint64_t)a1, v15[7] + 96 * v9);
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    *(_QWORD *)(v15[6] + 8 * v9) = a2;
    v19 = (_OWORD *)(v15[7] + 96 * v9);
    v20 = a1[1];
    *v19 = *a1;
    v19[1] = v20;
    v21 = a1[2];
    v22 = a1[3];
    v23 = a1[5];
    v19[4] = a1[4];
    v19[5] = v23;
    v19[2] = v21;
    v19[3] = v22;
    v24 = v15[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v15[2] = v26;
      return a2;
    }
    goto LABEL_14;
  }
  sub_21C55A8F0(v12, a3 & 1);
  v17 = sub_21C53105C((uint64_t)a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      return (id)sub_21C561658((uint64_t)a1, v15[7] + 96 * v9);
    goto LABEL_11;
  }
LABEL_15:
  sub_21C531A4C(0, &qword_255288C40);
  result = (id)sub_21C5E3DF0();
  __break(1u);
  return result;
}

id sub_21C55D460(uint64_t a1, void *a2, char a3, uint64_t (*a4)(void *), uint64_t (*a5)(_QWORD), uint64_t *a6, void (*a7)(_QWORD))
{
  _QWORD *v7;
  _QWORD **v12;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id result;
  uint64_t v27;
  char v28;

  v12 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = a4(a2);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a3 & 1) != 0)
    {
LABEL_7:
      v23 = *v12;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7];
        v25 = a5(0);
        return (id)sub_21C56171C(a1, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a5);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a3 & 1) == 0)
    {
      sub_21C55CAE0(a5, a6);
      goto LABEL_7;
    }
    sub_21C55AC7C(v20, a3 & 1, a5, a6);
    v27 = a4(a2);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v12;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_21C55D6D4(v17, (uint64_t)a2, a1, v23, a5);
      return a2;
    }
  }
  a7(0);
  result = (id)sub_21C5E3DF0();
  __break(1u);
  return result;
}

uint64_t sub_21C55D5C8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_21C530EAC(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_21C561C1C(a1, v16[7] + 8 * v10);
      return sub_21C55D768(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_21C55C08C();
      goto LABEL_7;
    }
    sub_21C559B18(v13, a3 & 1);
    v18 = sub_21C530EAC(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_21C561C1C(a1, v16[7] + 8 * v10);
      return sub_21C55D768(v10, a2, a1, v16);
    }
  }
  result = sub_21C5E3DF0();
  __break(1u);
  return result;
}

uint64_t sub_21C55D6D4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v9 = a4[7];
  v10 = a5(0);
  result = sub_21C52AAD4(a3, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a5);
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

uint64_t sub_21C55D768(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_21C531764(a3, a4[7] + 8 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_21C55D7D0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  sub_21C527A50();
  result = sub_21C5E2DAC();
  *a1 = result;
  return result;
}

uint64_t sub_21C55D854@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for StaticMapBridgingView(0);
  sub_21C527A50();
  result = sub_21C5E2DAC();
  *a1 = result;
  return result;
}

uint64_t sub_21C55D8DC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21C55D95C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (uint64_t)a2 + v6 + 7;
    v13 = (v11 & 0xFFFFFFFFFFFFF8) + 15;
    v12 = *(_QWORD *)(v11 & 0xFFFFFFFFFFFFF8);
    sub_21C55DA30(v12);
    *v10 = v12;
    v14 = *(void **)(v13 & 0xFFFFFFFFFFFFF8);
    *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8) = v14;
    v15 = v14;
  }
  return v4;
}

unint64_t sub_21C55DA30(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

void sub_21C55DA60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = a1 + *(_QWORD *)(v3 + 64) + 7;
  v5 = (v4 & 0xFFFFFFFFFFFFFFF8) + 15;
  sub_21C55DAAC(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8));

}

unint64_t sub_21C55DAAC(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_21C55DADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFF8);
  v8 = v6 + a2;
  v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  v9 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  sub_21C55DA30(v9);
  *v7 = v9;
  v11 = *(void **)(v10 & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = v11;
  v12 = v11;
  return a1;
}

uint64_t sub_21C55DB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = v6 + a2;
  v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  v9 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  sub_21C55DA30(v9);
  v11 = *(_QWORD *)v7;
  *(_QWORD *)v7 = v9;
  v7 += 15;
  sub_21C55DAAC(v11);
  v12 = *(void **)(v10 & 0xFFFFFFFFFFFFF8);
  v13 = *(void **)(v7 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8) = v12;
  v14 = v12;

  return a1;
}

uint64_t sub_21C55DBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_21C55DC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  void *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = *(_QWORD *)v7;
  *(_QWORD *)v7 = *v8;
  v7 += 15;
  sub_21C55DAAC(v9);
  v10 = *(void **)(v7 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_21C55DCC4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFE)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFE)
    {
      v12 = *(_QWORD *)((((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      if ((v12 + 1) >= 2)
        return v12;
      else
        return 0;
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_21C55DD48 + 4 * byte_21C5E6F7A[v10]))();
  }
}

void sub_21C55DDDC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_21C55DED8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x21C55DF64);
}

void sub_21C55DEE0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x21C55DEE8);
  JUMPOUT(0x21C55DF64);
}

void sub_21C55DF38()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x21C55DF64);
}

void sub_21C55DF40()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x21C55DF64);
}

uint64_t sub_21C55DF48(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFE)
  {
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x21C55DF54);
    *(_QWORD *)((((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) = a2;
LABEL_6:
    JUMPOUT(0x21C55DF64);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t type metadata accessor for StaticMapBridgingViewCoordinator(uint64_t a1)
{
  return sub_21C5254A0(a1, qword_255288A98);
}

uint64_t sub_21C55DF90()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21C55DFD0()
{
  return type metadata accessor for StaticMapBridgingViewCoordinator(0);
}

__n128 __swift_memcpy40_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for MapCamera(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MapCamera(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

uint64_t *sub_21C55E040(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v42;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a2[4];
    a1[3] = a2[3];
    a1[4] = v8;
    v9 = a2[6];
    a1[5] = a2[5];
    a1[6] = v9;
    v10 = a2[8];
    a1[7] = a2[7];
    a1[8] = v10;
    v11 = a2[10];
    a1[9] = a2[9];
    a1[10] = v11;
    v12 = a2[12];
    a1[11] = a2[11];
    a1[12] = v12;
    v13 = a2[15];
    v14 = a2[16];
    v15 = a2[14];
    a1[13] = a2[13];
    a1[14] = v15;
    a1[15] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21C55DA30(v14);
    v16 = (void *)a2[17];
    a1[16] = v14;
    a1[17] = (uint64_t)v16;
    v17 = a3[14];
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288150);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_21C5E32E0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
    }
    else
    {
      *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v22 = a3[15];
    v23 = (uint64_t *)((char *)a1 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288B30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_21C5E3088();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v26 = a3[16];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *(_QWORD *)v28;
    v30 = *((_QWORD *)v28 + 1);
    v31 = *((_QWORD *)v28 + 2);
    v32 = *((_QWORD *)v28 + 3);
    v33 = *((_QWORD *)v28 + 4);
    v34 = *((_QWORD *)v28 + 5);
    v35 = *((_QWORD *)v28 + 6);
    v36 = *((_QWORD *)v28 + 7);
    v38 = *((_QWORD *)v28 + 8);
    v39 = *((_QWORD *)v28 + 9);
    v40 = v28[80];
    v42 = v28[81];
    sub_21C531870(*(_QWORD *)v28, v30, v31, v32, v33, v34, v35, v36, v38, v39, v40, v42);
    *(_QWORD *)v27 = v29;
    *((_QWORD *)v27 + 1) = v30;
    *((_QWORD *)v27 + 2) = v31;
    *((_QWORD *)v27 + 3) = v32;
    *((_QWORD *)v27 + 4) = v33;
    *((_QWORD *)v27 + 5) = v34;
    *((_QWORD *)v27 + 6) = v35;
    *((_QWORD *)v27 + 7) = v36;
    *((_QWORD *)v27 + 8) = v38;
    *((_QWORD *)v27 + 9) = v39;
    v27[80] = v40;
    v27[81] = v42;
  }
  return a1;
}

uint64_t sub_21C55E2C4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21C55DAAC(*(_QWORD *)(a1 + 128));

  v4 = a1 + a2[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288150);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_21C5E32E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + a2[15];
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288B30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_21C5E3088();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v8 = a1 + a2[16];
  return sub_21C53198C(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_QWORD *)(v8 + 72), *(_BYTE *)(v8 + 80), *(_BYTE *)(v8 + 81));
}

_QWORD *sub_21C55E418(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v40;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  v11 = a2[13];
  a1[12] = a2[12];
  a1[13] = v11;
  v12 = a2[15];
  a1[14] = a2[14];
  a1[15] = v12;
  v13 = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21C55DA30(v13);
  v14 = (void *)a2[17];
  a1[16] = v13;
  a1[17] = v14;
  v15 = a3[14];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288150);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_21C5E32E0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
  }
  else
  {
    *v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v20 = a3[15];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288B30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_21C5E3088();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v24 = a3[16];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = *((_QWORD *)v26 + 1);
  v29 = *((_QWORD *)v26 + 2);
  v30 = *((_QWORD *)v26 + 3);
  v31 = *((_QWORD *)v26 + 4);
  v32 = *((_QWORD *)v26 + 5);
  v33 = *((_QWORD *)v26 + 6);
  v34 = *((_QWORD *)v26 + 7);
  v36 = *((_QWORD *)v26 + 8);
  v37 = *((_QWORD *)v26 + 9);
  v38 = v26[80];
  v40 = v26[81];
  sub_21C531870(*(_QWORD *)v26, v28, v29, v30, v31, v32, v33, v34, v36, v37, v38, v40);
  *(_QWORD *)v25 = v27;
  *((_QWORD *)v25 + 1) = v28;
  *((_QWORD *)v25 + 2) = v29;
  *((_QWORD *)v25 + 3) = v30;
  *((_QWORD *)v25 + 4) = v31;
  *((_QWORD *)v25 + 5) = v32;
  *((_QWORD *)v25 + 6) = v33;
  *((_QWORD *)v25 + 7) = v34;
  *((_QWORD *)v25 + 8) = v36;
  *((_QWORD *)v25 + 9) = v37;
  v25[80] = v38;
  v25[81] = v40;
  return a1;
}

_QWORD *sub_21C55E674(_QWORD *a1, _QWORD *a2, int *a3)
{
  unint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  v6 = a2[16];
  sub_21C55DA30(v6);
  v7 = a1[16];
  a1[16] = v6;
  sub_21C55DAAC(v7);
  v8 = (void *)a1[17];
  v9 = (void *)a2[17];
  a1[17] = v9;
  v10 = v9;

  if (a1 != a2)
  {
    v11 = a3[14];
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (_QWORD *)((char *)a2 + v11);
    sub_21C524980((uint64_t)a1 + v11, &qword_255288150);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288150);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_21C5E32E0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[15];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    sub_21C524980((uint64_t)a1 + v15, &qword_255288B30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288B30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_21C5E3088();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v19 = a3[16];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *(_QWORD *)v21;
  v23 = *((_QWORD *)v21 + 1);
  v24 = *((_QWORD *)v21 + 2);
  v25 = *((_QWORD *)v21 + 3);
  v26 = *((_QWORD *)v21 + 4);
  v27 = *((_QWORD *)v21 + 5);
  v28 = *((_QWORD *)v21 + 6);
  v29 = *((_QWORD *)v21 + 7);
  v43 = *((_QWORD *)v21 + 8);
  v44 = *((_QWORD *)v21 + 9);
  v45 = v21[80];
  v46 = v21[81];
  sub_21C531870(*(_QWORD *)v21, v23, v24, v25, v26, v27, v28, v29, v43, v44, v45, v46);
  v30 = *(_QWORD *)v20;
  v31 = *((_QWORD *)v20 + 1);
  v32 = *((_QWORD *)v20 + 2);
  v33 = *((_QWORD *)v20 + 3);
  v34 = *((_QWORD *)v20 + 4);
  v35 = *((_QWORD *)v20 + 5);
  v36 = *((_QWORD *)v20 + 6);
  v37 = *((_QWORD *)v20 + 7);
  v38 = *((_QWORD *)v20 + 8);
  v39 = *((_QWORD *)v20 + 9);
  v40 = v20[80];
  v41 = v20[81];
  *(_QWORD *)v20 = v22;
  *((_QWORD *)v20 + 1) = v23;
  *((_QWORD *)v20 + 2) = v24;
  *((_QWORD *)v20 + 3) = v25;
  *((_QWORD *)v20 + 4) = v26;
  *((_QWORD *)v20 + 5) = v27;
  *((_QWORD *)v20 + 6) = v28;
  *((_QWORD *)v20 + 7) = v29;
  *((_QWORD *)v20 + 8) = v43;
  *((_QWORD *)v20 + 9) = v44;
  v20[80] = v45;
  v20[81] = v46;
  sub_21C53198C(v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41);
  return a1;
}

uint64_t sub_21C55E9B8(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 96);
  v10 = *(_OWORD *)(a2 + 112);
  v11 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v11;
  v12 = a3[14];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288150);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_21C5E32E0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  v17 = a3[15];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288B30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_21C5E3088();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  v22 = a3[16];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_OWORD *)(v24 + 48);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  *(_OWORD *)(v23 + 48) = v25;
  *(_OWORD *)(v23 + 64) = *(_OWORD *)(v24 + 64);
  *(_WORD *)(v23 + 80) = *(_WORD *)(v24 + 80);
  v26 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v26;
  return a1;
}

uint64_t sub_21C55EB34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  __int128 v42;
  __int128 v43;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  sub_21C55DAAC(v13);
  v14 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);

  if (a1 != a2)
  {
    v15 = a3[14];
    v16 = (void *)(a1 + v15);
    v17 = (const void *)(a2 + v15);
    sub_21C524980(a1 + v15, &qword_255288150);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288150);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_21C5E32E0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    v20 = a3[15];
    v21 = (void *)(a1 + v20);
    v22 = (const void *)(a2 + v20);
    sub_21C524980(a1 + v20, &qword_255288B30);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288B30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_21C5E3088();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  v25 = a3[16];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_BYTE *)(v27 + 80);
  v29 = *(_BYTE *)(v27 + 81);
  v30 = *(_QWORD *)v26;
  v31 = *(_QWORD *)(v26 + 8);
  v32 = *(_QWORD *)(v26 + 16);
  v33 = *(_QWORD *)(v26 + 24);
  v34 = *(_QWORD *)(v26 + 32);
  v35 = *(_QWORD *)(v26 + 40);
  v36 = *(_QWORD *)(v26 + 48);
  v37 = *(_QWORD *)(v26 + 56);
  v38 = *(_QWORD *)(v26 + 64);
  v39 = *(_QWORD *)(v26 + 72);
  v40 = *(_BYTE *)(v26 + 80);
  v41 = *(_BYTE *)(v26 + 81);
  v42 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v42;
  v43 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v43;
  *(_OWORD *)(v26 + 64) = *(_OWORD *)(v27 + 64);
  *(_BYTE *)(v26 + 80) = v28;
  *(_BYTE *)(v26 + 81) = v29;
  sub_21C53198C(v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41);
  return a1;
}

uint64_t sub_21C55ED8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C55ED98(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288B38);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 56);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255288B40);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 60);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_21C55EE40()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21C55EE4C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288B38);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 56);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255288B40);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 60);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_21C55EEF0()
{
  unint64_t v0;
  unint64_t v1;

  sub_21C52E784(319, &qword_255288B60, (void (*)(uint64_t))MEMORY[0x24BDEE8C8]);
  if (v0 <= 0x3F)
  {
    sub_21C52E784(319, (unint64_t *)&unk_255288B68, (void (*)(uint64_t))MEMORY[0x24BDED130]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_21C55EFC8()
{
  return sub_21C521E50(qword_2552889A0, type metadata accessor for StaticMapBridgingView, (uint64_t)&unk_21C5E71C0);
}

void sub_21C55EFF4()
{
  JUMPOUT(0x22077F9A0);
}

uint64_t sub_21C55F004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE v19[16];
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v9 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v16 = &v19[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))(v9 + 16))(v12);
  sub_21C5E2DDC();
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, a5);
  v21 = a5;
  v22 = a6;
  sub_21C52951C((uint64_t)v16, (uint64_t)sub_21C561CD0, (uint64_t)v20, a4, MEMORY[0x24BEE4078], MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE40A8], v17);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 8))(v16, a4);
}

void (*sub_21C55F14C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_21C55F224(v6, a2, a3);
  return sub_21C55F1A0;
}

void (*sub_21C55F1A4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_21C55F298(v6, a2, a3);
  return sub_21C55F1A0;
}

void sub_21C55F1F8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_21C55F224(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x22077F1B4](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain();
LABEL_5:
    *v3 = v4;
    return sub_21C55F290;
  }
  __break(1u);
  return result;
}

uint64_t sub_21C55F290()
{
  return swift_unknownObjectRelease();
}

uint64_t (*sub_21C55F298(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x22077F1B4](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain();
LABEL_5:
    *v3 = v4;
    return sub_21C56215C;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_21C55F304(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  id v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  __int128 v31[2];
  _QWORD v32[5];

  v32[3] = sub_21C531A4C(0, &qword_255288BE8);
  v32[4] = &off_24E057A88;
  v32[0] = a1;
  sub_21C560FD4((uint64_t)v32, (uint64_t)v31);
  sub_21C560FD4((uint64_t)v31, (uint64_t)v28);
  v9 = swift_allocObject();
  sub_21C56101C(v31, v9 + 16);
  *(_QWORD *)(v9 + 56) = a2;
  v10 = *(_OWORD *)(a5 + 112);
  *(_OWORD *)(v9 + 160) = *(_OWORD *)(a5 + 96);
  *(_OWORD *)(v9 + 176) = v10;
  *(_QWORD *)(v9 + 192) = *(_QWORD *)(a5 + 128);
  v11 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v9 + 112) = v11;
  v12 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(v9 + 144) = v12;
  v13 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)a5;
  *(_OWORD *)(v9 + 80) = v13;
  if (a3)
  {
    v14 = a1;
    sub_21C560F2C(a5);
    v15 = a2;
    swift_retain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = sub_21C561034;
    v16[3] = v9;
    v16[4] = a3;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_21C561034;
    *(_QWORD *)(v17 + 24) = v9;
    swift_retain();
    v18 = sub_21C56106C;
  }
  else
  {
    v19 = v29;
    v20 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
    v22 = a1;
    sub_21C560F2C(a5);
    v23 = v21(a2, v19, v20);
    if (v23)
    {
      v24 = (void *)v23;
      objc_opt_self();
      v25 = (void *)swift_dynamicCastObjCClass();
      if (v25)
      {
        v26 = v25;
        sub_21C5695D4(v25);
        objc_msgSend(v26, sel_setNeedsDisplay);
      }
      swift_release();

    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    v18 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  return v18;
}

uint64_t (*sub_21C55F51C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  id v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  __int128 v31[2];
  _QWORD v32[5];

  v32[3] = sub_21C531A4C(0, (unint64_t *)&unk_255289520);
  v32[4] = &off_24E057E28;
  v32[0] = a1;
  sub_21C560FD4((uint64_t)v32, (uint64_t)v31);
  sub_21C560FD4((uint64_t)v31, (uint64_t)v28);
  v9 = swift_allocObject();
  sub_21C56101C(v31, v9 + 16);
  *(_QWORD *)(v9 + 56) = a2;
  v10 = *(_OWORD *)(a5 + 112);
  *(_OWORD *)(v9 + 160) = *(_OWORD *)(a5 + 96);
  *(_OWORD *)(v9 + 176) = v10;
  *(_QWORD *)(v9 + 192) = *(_QWORD *)(a5 + 128);
  v11 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v9 + 112) = v11;
  v12 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(v9 + 144) = v12;
  v13 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)a5;
  *(_OWORD *)(v9 + 80) = v13;
  if (a3)
  {
    v14 = a1;
    sub_21C560F2C(a5);
    v15 = a2;
    swift_retain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = sub_21C561FA0;
    v16[3] = v9;
    v16[4] = a3;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_21C561FA0;
    *(_QWORD *)(v17 + 24) = v9;
    swift_retain();
    v18 = sub_21C562154;
  }
  else
  {
    v19 = v29;
    v20 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
    v22 = a1;
    sub_21C560F2C(a5);
    v23 = v21(a2, v19, v20);
    if (v23)
    {
      v24 = (void *)v23;
      objc_opt_self();
      v25 = (void *)swift_dynamicCastObjCClass();
      if (v25)
      {
        v26 = v25;
        sub_21C5695D4(v25);
        objc_msgSend(v26, sel_setNeedsDisplay);
      }
      swift_release();

    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    v18 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  return v18;
}

uint64_t (*sub_21C55F734(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  id v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(id, uint64_t, uint64_t);
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  __int128 v39[2];
  _QWORD v40[5];

  v40[3] = sub_21C531A4C(0, &qword_255288BE8);
  v40[4] = &off_24E057A88;
  v40[0] = a1;
  sub_21C560FD4((uint64_t)v40, (uint64_t)v39);
  sub_21C560FD4((uint64_t)v39, (uint64_t)v36);
  v9 = swift_allocObject();
  sub_21C56101C(v39, v9 + 16);
  *(_QWORD *)(v9 + 56) = a2;
  v10 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(v9 + 144) = v10;
  *(_OWORD *)(v9 + 160) = *(_OWORD *)(a5 + 96);
  *(_QWORD *)(v9 + 176) = *(_QWORD *)(a5 + 112);
  v11 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)a5;
  *(_OWORD *)(v9 + 80) = v11;
  v12 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v9 + 112) = v12;
  if (a3)
  {
    v13 = a1;
    v14 = a2;
    sub_21C561244(a5);
    swift_retain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = sub_21C56140C;
    v15[3] = v9;
    v15[4] = a3;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_21C56140C;
    *(_QWORD *)(v16 + 24) = v9;
    swift_retain();
    v17 = sub_21C561420;
  }
  else
  {
    v18 = v37;
    v19 = v38;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    v20 = *(uint64_t (**)(id, uint64_t, uint64_t))(v19 + 48);
    v21 = a1;
    v22 = a2;
    sub_21C561244(a5);
    v23 = v20(v22, v18, v19);
    if (v23)
    {
      v24 = (void *)v23;
      objc_opt_self();
      v25 = (void *)swift_dynamicCastObjCClass();
      if (v25)
      {
        v26 = v25;
        v32 = *(_OWORD *)(a5 + 64);
        v33 = *(_OWORD *)(a5 + 80);
        v34 = *(_OWORD *)(a5 + 96);
        v35 = *(_QWORD *)(a5 + 112);
        v28 = *(_OWORD *)a5;
        v29 = *(_OWORD *)(a5 + 16);
        v30 = *(_OWORD *)(a5 + 32);
        v31 = *(_OWORD *)(a5 + 48);
        sub_21C569318(v25);
        objc_msgSend(v26, sel_setNeedsDisplay, v28, v29, v30, v31, v32, v33, v34, v35);
      }
      swift_release();

    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    v17 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  return v17;
}

uint64_t (*sub_21C55F984(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  id v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(id, uint64_t, uint64_t);
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  __int128 v39[2];
  _QWORD v40[5];

  v40[3] = sub_21C531A4C(0, (unint64_t *)&unk_255289520);
  v40[4] = &off_24E057E28;
  v40[0] = a1;
  sub_21C560FD4((uint64_t)v40, (uint64_t)v39);
  sub_21C560FD4((uint64_t)v39, (uint64_t)v36);
  v9 = swift_allocObject();
  sub_21C56101C(v39, v9 + 16);
  *(_QWORD *)(v9 + 56) = a2;
  v10 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v9 + 128) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(v9 + 144) = v10;
  *(_OWORD *)(v9 + 160) = *(_OWORD *)(a5 + 96);
  *(_QWORD *)(v9 + 176) = *(_QWORD *)(a5 + 112);
  v11 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)a5;
  *(_OWORD *)(v9 + 80) = v11;
  v12 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v9 + 112) = v12;
  if (a3)
  {
    v13 = a1;
    v14 = a2;
    sub_21C561244(a5);
    swift_retain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = sub_21C561FA4;
    v15[3] = v9;
    v15[4] = a3;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_21C561FA4;
    *(_QWORD *)(v16 + 24) = v9;
    swift_retain();
    v17 = sub_21C562158;
  }
  else
  {
    v18 = v37;
    v19 = v38;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    v20 = *(uint64_t (**)(id, uint64_t, uint64_t))(v19 + 48);
    v21 = a1;
    v22 = a2;
    sub_21C561244(a5);
    v23 = v20(v22, v18, v19);
    if (v23)
    {
      v24 = (void *)v23;
      objc_opt_self();
      v25 = (void *)swift_dynamicCastObjCClass();
      if (v25)
      {
        v26 = v25;
        v32 = *(_OWORD *)(a5 + 64);
        v33 = *(_OWORD *)(a5 + 80);
        v34 = *(_OWORD *)(a5 + 96);
        v35 = *(_QWORD *)(a5 + 112);
        v28 = *(_OWORD *)a5;
        v29 = *(_OWORD *)(a5 + 16);
        v30 = *(_OWORD *)(a5 + 32);
        v31 = *(_OWORD *)(a5 + 48);
        sub_21C569318(v25);
        objc_msgSend(v26, sel_setNeedsDisplay, v28, v29, v30, v31, v32, v33, v34, v35);
      }
      swift_release();

    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
    v17 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  return v17;
}

uint64_t (*sub_21C55FBD4(void *a1, void *a2, uint64_t a3, uint64_t a4, __int128 *a5))()
{
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  id v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(id, uint64_t, uint64_t);
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  __int128 v37[2];
  _QWORD v38[5];

  v38[3] = sub_21C531A4C(0, &qword_255288BE8);
  v38[4] = &off_24E057A88;
  v38[0] = a1;
  sub_21C560FD4((uint64_t)v38, (uint64_t)v37);
  sub_21C560FD4((uint64_t)v37, (uint64_t)v34);
  v9 = swift_allocObject();
  sub_21C56101C(v37, v9 + 16);
  *(_QWORD *)(v9 + 56) = a2;
  v10 = a5[3];
  *(_OWORD *)(v9 + 96) = a5[2];
  *(_OWORD *)(v9 + 112) = v10;
  v11 = a5[5];
  *(_OWORD *)(v9 + 128) = a5[4];
  *(_OWORD *)(v9 + 144) = v11;
  v12 = a5[1];
  *(_OWORD *)(v9 + 64) = *a5;
  *(_OWORD *)(v9 + 80) = v12;
  if (a3)
  {
    v13 = a1;
    v14 = a2;
    sub_21C561498((uint64_t)a5);
    swift_retain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = sub_21C561644;
    v15[3] = v9;
    v15[4] = a3;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_21C561644;
    *(_QWORD *)(v16 + 24) = v9;
    swift_retain();
    v17 = sub_21C561420;
  }
  else
  {
    v18 = v35;
    v19 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    v20 = *(uint64_t (**)(id, uint64_t, uint64_t))(v19 + 48);
    v21 = a1;
    v22 = a2;
    sub_21C561498((uint64_t)a5);
    v23 = v20(v22, v18, v19);
    if (v23)
    {
      v24 = (void *)v23;
      objc_opt_self();
      v25 = (void *)swift_dynamicCastObjCClass();
      if (v25)
      {
        v26 = v25;
        v30 = a5[2];
        v31 = a5[3];
        v32 = a5[4];
        v33 = a5[5];
        v28 = *a5;
        v29 = a5[1];
        sub_21C568EB8(v25);
        objc_msgSend(v26, sel_setNeedsDisplay, v28, v29, v30, v31, v32, v33);
      }
      swift_release();

    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    v17 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  return v17;
}

uint64_t (*sub_21C55FE04(void *a1, void *a2, uint64_t a3, uint64_t a4, __int128 *a5))()
{
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  id v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t (*v17)();
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(id, uint64_t, uint64_t);
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  __int128 v37[2];
  _QWORD v38[5];

  v38[3] = sub_21C531A4C(0, (unint64_t *)&unk_255289520);
  v38[4] = &off_24E057E28;
  v38[0] = a1;
  sub_21C560FD4((uint64_t)v38, (uint64_t)v37);
  sub_21C560FD4((uint64_t)v37, (uint64_t)v34);
  v9 = swift_allocObject();
  sub_21C56101C(v37, v9 + 16);
  *(_QWORD *)(v9 + 56) = a2;
  v10 = a5[3];
  *(_OWORD *)(v9 + 96) = a5[2];
  *(_OWORD *)(v9 + 112) = v10;
  v11 = a5[5];
  *(_OWORD *)(v9 + 128) = a5[4];
  *(_OWORD *)(v9 + 144) = v11;
  v12 = a5[1];
  *(_OWORD *)(v9 + 64) = *a5;
  *(_OWORD *)(v9 + 80) = v12;
  if (a3)
  {
    v13 = a1;
    v14 = a2;
    sub_21C561498((uint64_t)a5);
    swift_retain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = sub_21C561FA8;
    v15[3] = v9;
    v15[4] = a3;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_21C561FA8;
    *(_QWORD *)(v16 + 24) = v9;
    swift_retain();
    v17 = sub_21C562158;
  }
  else
  {
    v18 = v35;
    v19 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    v20 = *(uint64_t (**)(id, uint64_t, uint64_t))(v19 + 48);
    v21 = a1;
    v22 = a2;
    sub_21C561498((uint64_t)a5);
    v23 = v20(v22, v18, v19);
    if (v23)
    {
      v24 = (void *)v23;
      objc_opt_self();
      v25 = (void *)swift_dynamicCastObjCClass();
      if (v25)
      {
        v26 = v25;
        v30 = a5[2];
        v31 = a5[3];
        v32 = a5[4];
        v33 = a5[5];
        v28 = *a5;
        v29 = a5[1];
        sub_21C568EB8(v25);
        objc_msgSend(v26, sel_setNeedsDisplay, v28, v29, v30, v31, v32, v33);
      }
      swift_release();

    }
    else
    {
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    v17 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  return v17;
}

uint64_t (*sub_21C560034(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  char *v29;
  void *v30;
  double v31;
  double v32;
  double *v33;
  double v34;
  double v35;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  __int128 v41[2];
  _QWORD v42[5];

  v9 = type metadata accessor for UserAnnotationViewModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v13 = (double *)((char *)&v38[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v38[-1] - v14;
  v42[3] = sub_21C531A4C(0, &qword_255288BE8);
  v42[4] = &off_24E057A88;
  v42[0] = a1;
  sub_21C560FD4((uint64_t)v42, (uint64_t)v41);
  sub_21C529664(a5, (uint64_t)v15, type metadata accessor for UserAnnotationViewModel);
  sub_21C560FD4((uint64_t)v41, (uint64_t)v38);
  sub_21C529664((uint64_t)v15, (uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
  v16 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v17 = swift_allocObject();
  sub_21C56101C(v41, v17 + 16);
  *(_QWORD *)(v17 + 56) = a2;
  sub_21C52AAD4((uint64_t)v15, v17 + v16, type metadata accessor for UserAnnotationViewModel);
  if (a3)
  {
    v18 = a1;
    v19 = a2;
    swift_retain();
    sub_21C52A88C((uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = sub_21C561698;
    v20[3] = v17;
    v20[4] = a3;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = sub_21C561698;
    *(_QWORD *)(v21 + 24) = v17;
    swift_retain();
    v22 = sub_21C561420;
  }
  else
  {
    v23 = v39;
    v24 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 24);
    v26 = a1;
    v27 = v25(a2, v23, v24);
    if (v27)
    {
      v28 = (void *)v27;
      type metadata accessor for SwiftUIAnnotationView();
      v29 = (char *)swift_dynamicCastClass();
      if (v29)
      {
        v30 = v29;
        v31 = v13[3];
        v32 = v13[4];
        v33 = (double *)&v29[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_contentAnchorPoint];
        *v33 = v31;
        v33[1] = v32;
        objc_msgSend(v29, sel_frame);
        objc_msgSend(v30, sel_setCenterOffset_, v34 * 0.5 - v31 * v34, v35 * 0.5 - v32 * v35);
      }
      swift_release();

    }
    else
    {
      swift_release();
    }
    sub_21C52A88C((uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    v22 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  return v22;
}

uint64_t (*sub_21C56030C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  char *v29;
  void *v30;
  double v31;
  double v32;
  double *v33;
  double v34;
  double v35;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  __int128 v41[2];
  _QWORD v42[5];

  v9 = type metadata accessor for UserAnnotationViewModel(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v13 = (double *)((char *)&v38[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v38[-1] - v14;
  v42[3] = sub_21C531A4C(0, (unint64_t *)&unk_255289520);
  v42[4] = &off_24E057E28;
  v42[0] = a1;
  sub_21C560FD4((uint64_t)v42, (uint64_t)v41);
  sub_21C529664(a5, (uint64_t)v15, type metadata accessor for UserAnnotationViewModel);
  sub_21C560FD4((uint64_t)v41, (uint64_t)v38);
  sub_21C529664((uint64_t)v15, (uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
  v16 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v17 = swift_allocObject();
  sub_21C56101C(v41, v17 + 16);
  *(_QWORD *)(v17 + 56) = a2;
  sub_21C52AAD4((uint64_t)v15, v17 + v16, type metadata accessor for UserAnnotationViewModel);
  if (a3)
  {
    v18 = a1;
    v19 = a2;
    swift_retain();
    sub_21C52A88C((uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = sub_21C561698;
    v20[3] = v17;
    v20[4] = a3;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = sub_21C561698;
    *(_QWORD *)(v21 + 24) = v17;
    swift_retain();
    v22 = sub_21C562158;
  }
  else
  {
    v23 = v39;
    v24 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 24);
    v26 = a1;
    v27 = v25(a2, v23, v24);
    if (v27)
    {
      v28 = (void *)v27;
      type metadata accessor for SwiftUIAnnotationView();
      v29 = (char *)swift_dynamicCastClass();
      if (v29)
      {
        v30 = v29;
        v31 = v13[3];
        v32 = v13[4];
        v33 = (double *)&v29[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_contentAnchorPoint];
        *v33 = v31;
        v33[1] = v32;
        objc_msgSend(v29, sel_frame);
        objc_msgSend(v30, sel_setCenterOffset_, v34 * 0.5 - v31 * v34, v35 * 0.5 - v32 * v35);
      }
      swift_release();

    }
    else
    {
      swift_release();
    }
    sub_21C52A88C((uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
    v22 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  return v22;
}

unint64_t sub_21C5605E4(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v2 = a1[2];
  if (!v2)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = (_QWORD *)sub_21C5E3D84();
  v6 = a1[4];
  v5 = a1[5];
  result = sub_21C530F04(v6);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  v9 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v4[6] + v10) = v6;
    *(_QWORD *)(v4[7] + v10) = v5;
    v11 = v4[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v4[2] = v13;
    if (!--v2)
      goto LABEL_8;
    v14 = v9 + 2;
    v6 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_21C530F04(v6);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_21C5606DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t *v26;
  char *v27;
  uint64_t v28;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (_QWORD *)((char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v15)
  {
    v24[1] = v5;
    v28 = MEMORY[0x24BEE4AF8];
    v27 = (char *)v24 - v14;
    sub_21C5E3CDC();
    v17 = *(unsigned __int8 *)(v10 + 80);
    v26 = a4;
    v18 = (void **)(a1 + ((v17 + 32) & ~v17));
    v25 = *(_QWORD *)(v10 + 72);
    do
    {
      v19 = *(int *)(v9 + 48);
      v20 = (uint64_t)&v27[v19];
      v21 = *v18;
      sub_21C529664((uint64_t)v18 + v19, (uint64_t)&v27[v19], a5);
      v22 = (uint64_t)v13 + *(int *)(v9 + 48);
      *v13 = v21;
      sub_21C52AAD4(v20, v22, a5);
      v23 = v21;
      swift_getAtKeyPath();
      sub_21C524980((uint64_t)v13, v26);
      sub_21C5E3CB8();
      sub_21C5E3CE8();
      sub_21C5E3CF4();
      sub_21C5E3CC4();
      v18 = (void **)((char *)v18 + v25);
      --v15;
    }
    while (v15);
    return v28;
  }
  return result;
}

uint64_t sub_21C560868()
{
  return sub_21C5E3250();
}

uint64_t sub_21C560888()
{
  return sub_21C5E3214();
}

uint64_t sub_21C5608B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E40, a2);
}

uint64_t sub_21C5608C0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E40);
}

uint64_t sub_21C5608DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E48, a2);
}

uint64_t sub_21C5608E8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E48);
}

uint64_t sub_21C560904@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E50, a2);
}

uint64_t sub_21C560910(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E50);
}

uint64_t sub_21C56092C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E58, a2);
}

uint64_t sub_21C560938(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E58);
}

uint64_t sub_21C560954@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E60, a2);
}

uint64_t sub_21C560960(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E60);
}

uint64_t sub_21C56097C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E70, a2);
}

uint64_t sub_21C560988(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E70);
}

uint64_t sub_21C5609A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E78, a2);
}

uint64_t sub_21C5609B0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E78);
}

uint64_t sub_21C5609CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E80, a2);
}

uint64_t keypath_get_10Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1 + *a2;
  v5 = *(_QWORD *)(v3 + 8);
  v4 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  *(_DWORD *)a3 = *(_DWORD *)v3;
  *(_QWORD *)(a3 + 8) = v5;
  *(_QWORD *)(a3 + 16) = v4;
  *(_QWORD *)(a3 + 24) = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21C560A1C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E80);
}

unint64_t sub_21C560A38(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_21C55DAAC(result);
  return result;
}

uint64_t sub_21C560A4C(unint64_t a1, void *a2)
{
  uint64_t result;
  double *v4;
  uint64_t v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  id v24;
  _BYTE v25[48];
  __int128 v26;
  _BYTE v27[25];
  __int128 v28;
  _BYTE v29[25];
  uint64_t v30;
  unint64_t v31;

  sub_21C541B08(a1, a2, (uint64_t)v25);
  result = sub_21C52DB08((uint64_t)v25, (uint64_t)&v26, (uint64_t *)&unk_255288BB0);
  if (v27[24] != 2)
  {
    v28 = v26;
    *(_OWORD *)v29 = *(_OWORD *)v27;
    *(_OWORD *)&v29[9] = *(_OWORD *)&v27[9];
    sub_21C560D1C(&v28, &v30);
    sub_21C560D1C(&v30, &v31);
    v4 = (double *)v31;
    switch(v31 >> 61)
    {
      case 0uLL:
        v31 &= 0x1FFFFFFFFFFFFFFFuLL;
        objc_msgSend(a2, sel_setRegion_, sub_21C5AC0D8(v4[2], v4[3], v4[4], v4[5]));
        break;
      case 1uLL:
        v31 &= 0x1FFFFFFFFFFFFFFFuLL;
        objc_msgSend(a2, sel_setVisibleMapRect_edgePadding_, v4[2], v4[3], v4[4], v4[5], *((double *)&v28 + 1), *(_OWORD *)v29, *(double *)&v29[16]);
        break;
      case 2uLL:
        v31 &= 0x1FFFFFFFFFFFFFFFuLL;
        v5 = *((unsigned __int8 *)v4 + 24);
        v6 = *((id *)v4 + 2);
        sub_21C560D6C((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C560DA4);
        objc_msgSend(a2, sel_frame);
        v8 = v7;
        v10 = v9;
        v11 = (void *)objc_opt_self();
        v12 = objc_msgSend(v11, sel_cameraLookingAtMapItem_forViewSize_allowPitch_, v6, v5, v8, v10);
        objc_msgSend(v12, sel_centerCoordinate);
        v14 = v13;
        v16 = v15;
        objc_msgSend(v12, sel_centerCoordinateDistance);
        v18 = v17;
        objc_msgSend(v12, sel_heading);
        v20 = v19;
        objc_msgSend(v12, sel_pitch);
        v22 = v21;

        v23 = objc_msgSend(v11, sel_cameraLookingAtCenterCoordinate_fromDistance_pitch_heading_, v14, v16, v18, v22, v20);
        objc_msgSend(a2, sel_setCamera_, v23);
        sub_21C560D6C((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C560D58);

        break;
      case 3uLL:
        v31 &= 0x1FFFFFFFFFFFFFFFuLL;
        v24 = objc_msgSend((id)objc_opt_self(), sel_cameraLookingAtCenterCoordinate_fromDistance_pitch_heading_, v4[2], v4[3], v4[4], v4[6], v4[5]);
        objc_msgSend(a2, sel_setCamera_, v24);

        break;
      default:
        return sub_21C560D6C((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C560D58);
    }
    return sub_21C560D6C((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C560D58);
  }
  return result;
}

_QWORD *sub_21C560D1C(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

unint64_t sub_21C560D58(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 != 2)
    return sub_21C55DAAC(result);
  return result;
}

uint64_t sub_21C560D6C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

unint64_t sub_21C560DA4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 != 2)
    return sub_21C55DA30(result);
  return result;
}

uint64_t sub_21C560DB8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  id v7;
  id v8;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_BYTE *)(a1 + 112);
  v5 = *(_QWORD *)(a1 + 120);
  v6 = *(_BYTE *)(a1 + 128);
  v7 = *(id *)(a1 + 56);
  swift_bridgeObjectRetain();
  v8 = v2;
  swift_bridgeObjectRetain();
  sub_21C52EF74(v3, v4);
  sub_21C52EF74(v5, v6);
  return a1;
}

uint64_t sub_21C560E3C()
{
  return swift_deallocObject();
}

uint64_t sub_21C560E4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_21C560E74(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v2 = *(void **)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_BYTE *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_BYTE *)(a1 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_21C531AC8(v3, v4);
  sub_21C531AC8(v5, v6);
  return a1;
}

uint64_t sub_21C560EF0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_21C560F2C(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_BYTE *)(a1 + 104);
  v4 = *(_QWORD *)(a1 + 112);
  v5 = *(_BYTE *)(a1 + 120);
  v6 = *(id *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_21C52EF74(v2, v3);
  sub_21C52EF74(v4, v5);
  return a1;
}

uint64_t sub_21C560FAC()
{
  uint64_t v0;

  return sub_21C56997C(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

void sub_21C560FCC(uint64_t a1)
{
  uint64_t v1;

  sub_21C5699F4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_21C560FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_21C56101C(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_21C561034(uint64_t a1)
{
  uint64_t v1;

  sub_21C569520(a1, (_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 56));
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_21C56106C()
{
  uint64_t v0;

  return sub_21C5697BC(*(uint64_t (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_21C561078()
{
  uint64_t v0;

  return sub_21C5697E4(*(uint64_t (**)(_QWORD))(v0 + 16));
}

uint64_t sub_21C561080(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MapContentList.ID.Component(a2, a1);
  return a2;
}

uint64_t sub_21C5610BC(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_21C5610F0(uint64_t a1, uint64_t a2)
{
  assignWithTake for CircleOverlayViewModel(a2, a1);
  return a2;
}

uint64_t sub_21C56112C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;
  char v7;
  id v8;
  id v9;
  uint64_t v11;

  v2 = *(void **)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(void **)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_BYTE *)(a1 + 96);
  v11 = *(_QWORD *)(a1 + 104);
  v7 = *(_BYTE *)(a1 + 112);
  v8 = *(id *)a1;
  swift_bridgeObjectRetain();
  sub_21C5611D8(v2, v3);
  v9 = v4;
  swift_bridgeObjectRetain();
  sub_21C52EF74(v5, v6);
  sub_21C52EF74(v11, v7);
  return a1;
}

id sub_21C5611D8(void *a1, uint64_t a2)
{
  if (a2 < 0)
    return a1;
  swift_bridgeObjectRetain();
  return (id)swift_bridgeObjectRetain();
}

uint64_t sub_21C561208()
{
  return swift_deallocObject();
}

void sub_21C561218(void *a1, uint64_t a2)
{
  if (a2 < 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_21C561244(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  id v9;

  v2 = *(void **)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(void **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_BYTE *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  swift_bridgeObjectRetain();
  sub_21C5611D8(v2, v3);
  v9 = v4;
  swift_bridgeObjectRetain();
  sub_21C52EF74(v5, v6);
  sub_21C52EF74(v7, v8);
  return a1;
}

uint64_t sub_21C5612DC(uint64_t a1)
{
  sub_21C5611D8(*(void **)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_21C561308(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;

  v2 = *(void **)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(void **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_BYTE *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  swift_bridgeObjectRelease();
  sub_21C561218(v2, v3);
  swift_bridgeObjectRelease();

  sub_21C531AC8(v5, v6);
  sub_21C531AC8(v7, v8);
  return a1;
}

__n128 *sub_21C5613A0(__n128 *a1, __n128 *a2)
{
  __swift_memcpy24_8(a2, a1);
  return a2;
}

uint64_t sub_21C5613DC(uint64_t a1)
{
  sub_21C561218(*(void **)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

void sub_21C56140C(uint64_t a1)
{
  uint64_t v1;

  sub_21C56923C(a1, (_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 56));
}

uint64_t sub_21C561420()
{
  _QWORD *v0;

  return sub_21C56F03C(v0[2], v0[3], v0[4]);
}

uint64_t sub_21C56142C()
{
  uint64_t v0;

  return sub_21C56F038(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_21C561434(uint64_t a1, uint64_t a2)
{
  assignWithTake for PolygonOverlayViewModel(a2, a1);
  return a2;
}

id sub_21C561470(void *a1, __int16 a2)
{
  if (a2 < 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t sub_21C56147C()
{
  return swift_deallocObject();
}

void sub_21C56148C(void *a1, __int16 a2)
{
  if (a2 < 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_21C561498(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  __int16 v6;
  id v7;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_BYTE *)(a1 + 80);
  v6 = *(_WORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_21C561470(v2, v6);
  v7 = v3;
  swift_bridgeObjectRetain();
  sub_21C52EF74(v4, v5);
  return a1;
}

uint64_t sub_21C561514(uint64_t *a1, uint64_t a2)
{
  __swift_memcpy10_8(a2, a1);
  return a2;
}

uint64_t sub_21C561550(uint64_t a1)
{
  sub_21C561470(*(void **)a1, *(_WORD *)(a1 + 8));
  return a1;
}

uint64_t sub_21C56157C(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  char v5;
  __int16 v6;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_BYTE *)(a1 + 80);
  v6 = *(_WORD *)(a1 + 16);
  swift_bridgeObjectRelease();
  sub_21C56148C(v2, v6);
  swift_bridgeObjectRelease();

  sub_21C531AC8(v4, v5);
  return a1;
}

uint64_t sub_21C5615F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C56161C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_21C561644(uint64_t a1)
{
  uint64_t v1;

  sub_21C568DEC(a1, (_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 56));
}

uint64_t sub_21C561658(uint64_t a1, uint64_t a2)
{
  assignWithTake for PolylineOverlayViewModel(a2, a1);
  return a2;
}

uint64_t sub_21C5616A0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x22077F9A0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

id sub_21C5616E0(id result, char a2)
{
  if (!a2)
    return result;
  return result;
}

void sub_21C5616F0(id a1, char a2)
{
  if (!a2)

}

uint64_t sub_21C561704(uint64_t a1)
{
  return sub_21C561B88(a1, type metadata accessor for MarkerAnnotationViewModel, (uint64_t (*)(uint64_t, _QWORD, unint64_t, unint64_t))sub_21C568760);
}

uint64_t sub_21C56171C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_21C561764(uint64_t a1)
{
  return sub_21C561B88(a1, type metadata accessor for CustomAnnotationViewModel, (uint64_t (*)(uint64_t, _QWORD, unint64_t, unint64_t))sub_21C5684D4);
}

uint64_t sub_21C56177C()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_58Tm()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_21C531AC8(*(_QWORD *)(v0 + 160), *(_BYTE *)(v0 + 168));
  sub_21C531AC8(*(_QWORD *)(v0 + 176), *(_BYTE *)(v0 + 184));
  return swift_deallocObject();
}

uint64_t sub_21C5617F0()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_92Tm()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  swift_bridgeObjectRelease();
  sub_21C561218(*(void **)(v0 + 72), *(_QWORD *)(v0 + 80));

  swift_bridgeObjectRelease();
  sub_21C531AC8(*(_QWORD *)(v0 + 144), *(_BYTE *)(v0 + 152));
  sub_21C531AC8(*(_QWORD *)(v0 + 160), *(_BYTE *)(v0 + 168));
  return swift_deallocObject();
}

uint64_t sub_21C561870()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_126Tm()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  swift_bridgeObjectRelease();
  sub_21C56148C(*(void **)(v0 + 72), *(_WORD *)(v0 + 80));

  swift_bridgeObjectRelease();
  sub_21C531AC8(*(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 144));
  return swift_deallocObject();
}

uint64_t objectdestroy_158Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for UserAnnotationViewModel(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  v3 = v0 + ((v2 + 64) & ~v2);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 8))
    swift_release();
  v4 = v3 + *(int *)(v1 + 36);
  v5 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

void sub_21C561994(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UserAnnotationViewModel(0) - 8) + 80);
  sub_21C568A08(a1, (_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 56), v1 + ((v3 + 64) & ~v3));
}

uint64_t objectdestroy_181Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id *v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for MarkerAnnotationViewModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  v5 = (id *)(v0 + v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v6 = (char *)v5 + *(int *)(v1 + 68);
  v7 = sub_21C5E34E4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  __swift_destroy_boxed_opaque_existential_0(v0 + v4);
  return swift_deallocObject();
}

uint64_t objectdestroy_212Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for CustomAnnotationViewModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  v6 = v5 + *(int *)(v1 + 64);
  v7 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  __swift_destroy_boxed_opaque_existential_0(v0 + v4);
  return swift_deallocObject();
}

uint64_t sub_21C561B88(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, _QWORD, unint64_t, unint64_t))
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(a2(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return a3(a1, *(_QWORD *)(v3 + 16), v3 + v6, v3 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t objectdestroy_61Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C561C1C(uint64_t a1, uint64_t a2)
{
  assignWithTake for MapViewReference(a2, a1);
  return a2;
}

uint64_t sub_21C561C58()
{
  return swift_deallocObject();
}

uint64_t (*sub_21C561C68())(uint64_t a1, uint64_t a2)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  v3 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 24) = v3;
  *(_QWORD *)(v2 + 40) = v3;
  return sub_21C561CC4;
}

uint64_t sub_21C561CB4()
{
  return swift_deallocObject();
}

uint64_t sub_21C561CC4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_21C55F004(a1, a2, v2[5], v2[2], v2[3], v2[4]);
}

uint64_t sub_21C561CD0()
{
  swift_getAssociatedTypeWitness();
  return AGGraphSetOutputValue();
}

uint64_t sub_21C561D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_21C53F250(a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_21C561D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_21C53F2D4(a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_21C561D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_21C53F364(a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_21C561D34()
{
  return swift_deallocObject();
}

uint64_t sub_21C561D44@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288B78);
  return sub_21C589A6C(a1, a2);
}

uint64_t sub_21C561DA8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21C589A6C(a1, a2);
}

unint64_t destroy for MapCameraPosition.Storage(unint64_t *a1)
{
  return sub_21C55DAAC(*a1);
}

uint64_t initializeWithCopy for StaticMapBridgingViewCoordinator.ResolvedCameraPosition(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = *(_QWORD *)a2;
  sub_21C55DA30(*(_QWORD *)a2);
  *(_QWORD *)a1 = v4;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for StaticMapBridgingViewCoordinator.ResolvedCameraPosition(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a2;
  sub_21C55DA30(*(_QWORD *)a2);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v4;
  sub_21C55DAAC(v5);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for StaticMapBridgingViewCoordinator.ResolvedCameraPosition(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_21C55DAAC(v4);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticMapBridgingViewCoordinator.ResolvedCameraPosition(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticMapBridgingViewCoordinator.ResolvedCameraPosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticMapBridgingViewCoordinator.ResolvedCameraPosition()
{
  return &type metadata for StaticMapBridgingViewCoordinator.ResolvedCameraPosition;
}

ValueMetadata *type metadata accessor for VersionSeed()
{
  return &type metadata for VersionSeed;
}

uint64_t sub_21C562174()
{
  _DWORD *v0;

  if (*v0 == -1)
    return 0x64696C61766E69;
  if (*v0)
    return sub_21C5E3DB4();
  return 0x7974706D65;
}

uint64_t Map.init<A, B>(mapRect:interactionModes:showsUserLocation:userTrackingMode:annotationItems:annotationContent:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, int a3@<W2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  __int128 v39;
  char v40;
  uint64_t v41;
  _QWORD v42[2];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v35 = a6;
  v36 = a7;
  v38 = a3;
  v37 = a9;
  v34 = a12;
  v32 = a5;
  v33 = a10;
  v17 = *a1;
  v16 = a1[1];
  v31 = *((_OWORD *)a1 + 1);
  v18 = a1[4];
  v19 = a1[5];
  v20 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v31 - v21;
  v23 = *a2;
  v24 = *((_BYTE *)a4 + 16);
  v42[0] = v17;
  v42[1] = v16 | 0x4000000000000000;
  v43 = v31;
  v44 = v18;
  v45 = v19;
  v46 = 0;
  v41 = v23;
  v39 = *a4;
  v40 = v24;
  v25 = *(_QWORD *)(a8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v22, v32, a8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, a8);
  v26 = (_QWORD *)swift_allocObject();
  v27 = v33;
  v26[2] = a8;
  v26[3] = v27;
  v28 = v34;
  v26[4] = a11;
  v26[5] = v28;
  v29 = v35;
  v26[6] = a13;
  v26[7] = v29;
  v26[8] = v36;
  return sub_21C5BEA5C((uint64_t)v42, &v41, v38, (uint64_t)&v39, (uint64_t)v22, (uint64_t)sub_21C562384, (uint64_t)v26, a8, v37, a11, a13);
}

uint64_t sub_21C562360()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t Map.init<A, B>(coordinateRegion:interactionModes:showsUserLocation:userTrackingMode:annotationItems:annotationContent:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, int a3@<W2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  __int128 v39;
  char v40;
  uint64_t v41;
  _QWORD v42[2];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v35 = a6;
  v36 = a7;
  v38 = a3;
  v37 = a9;
  v34 = a12;
  v32 = a5;
  v33 = a10;
  v17 = *a1;
  v16 = a1[1];
  v31 = *((_OWORD *)a1 + 1);
  v18 = a1[4];
  v19 = a1[5];
  v20 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v31 - v21;
  v23 = *a2;
  v24 = *((_BYTE *)a4 + 16);
  v42[0] = v17;
  v42[1] = v16 | 0x8000000000000000;
  v43 = v31;
  v44 = v18;
  v45 = v19;
  v46 = 0;
  v41 = v23;
  v39 = *a4;
  v40 = v24;
  v25 = *(_QWORD *)(a8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v22, v32, a8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, a8);
  v26 = (_QWORD *)swift_allocObject();
  v27 = v33;
  v26[2] = a8;
  v26[3] = v27;
  v28 = v34;
  v26[4] = a11;
  v26[5] = v28;
  v29 = v35;
  v26[6] = a13;
  v26[7] = v29;
  v26[8] = v36;
  return sub_21C5BEA5C((uint64_t)v42, &v41, v38, (uint64_t)&v39, (uint64_t)v22, (uint64_t)sub_21C562384, (uint64_t)v26, a8, v37, a11, a13);
}

uint64_t sub_21C5624FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t);
  uint64_t v15;

  v9 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v10);
  (*(void (**)(uint64_t, uint64_t))(a7 + 8))(a5, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a5);
}

uint64_t sub_21C562594(uint64_t a1)
{
  uint64_t *v1;

  return sub_21C5624FC(a1, v1[7], v1[8], v1[2], v1[3], v1[4], v1[5]);
}

__n128 Map.init<>(mapRect:interactionModes:showsUserLocation:userTrackingMode:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  __int128 v8;
  __n128 result;

  v5 = *a2;
  v6 = a4[1].n128_u8[0];
  v7 = *(_QWORD *)(a1 + 8) | 0x4000000000000000;
  *(_QWORD *)a5 = *(_QWORD *)a1;
  *(_QWORD *)(a5 + 8) = v7;
  v8 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a5 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a5 + 32) = v8;
  *(_QWORD *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = v5;
  *(_BYTE *)(a5 + 64) = a3;
  result = *a4;
  *(__n128 *)(a5 + 72) = *a4;
  *(_BYTE *)(a5 + 88) = v6;
  return result;
}

__n128 Map.init<>(coordinateRegion:interactionModes:showsUserLocation:userTrackingMode:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  __int128 v8;
  __n128 result;

  v5 = *a2;
  v6 = a4[1].n128_u8[0];
  v7 = *(_QWORD *)(a1 + 8) | 0x8000000000000000;
  *(_QWORD *)a5 = *(_QWORD *)a1;
  *(_QWORD *)(a5 + 8) = v7;
  v8 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a5 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a5 + 32) = v8;
  *(_QWORD *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = v5;
  *(_BYTE *)(a5 + 64) = a3;
  result = *a4;
  *(__n128 *)(a5 + 72) = *a4;
  *(_BYTE *)(a5 + 88) = v6;
  return result;
}

uint64_t Map.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

double Map.init<>(bounds:interactionModes:scope:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>)
{
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  double result;
  __int128 v14;
  _BYTE v15[72];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[25];

  v9 = *a2;
  sub_21C56277C(a1, (uint64_t)v15);
  sub_21C5E3778();
  v18 = 0uLL;
  *(_QWORD *)&v19 = 0;
  *((_QWORD *)&v19 + 1) = 1;
  v20 = 0u;
  v21 = 0u;
  LOBYTE(v22) = 0;
  sub_21C55DAAC(v16);
  swift_release();
  *(_QWORD *)&v24[16] = 0;
  *(_QWORD *)v24 = 0;
  v23 = 0uLL;
  v24[8] = 0;
  v24[24] = 1;
  *(_QWORD *)&v17 = 0;
  v16 = 0xA000000000000000;
  BYTE8(v17) = 0;
  sub_21C5627C4((uint64_t)v15, (uint64_t)&v18);
  *((_QWORD *)&v22 + 1) = v9;
  sub_21C564918(v23, *((uint64_t *)&v23 + 1), *(uint64_t *)v24, v24[8], (uint64_t (*)(uint64_t, uint64_t))sub_21C5616F0);
  v23 = 0uLL;
  v24[8] = 0;
  *(_QWORD *)v24 = 0;
  *(_QWORD *)&v24[16] = a3;
  v24[24] = a4 & 1;
  sub_21C56280C(a1);
  v10 = v23;
  a5[6] = v22;
  a5[7] = v10;
  a5[8] = *(_OWORD *)v24;
  *(_OWORD *)((char *)a5 + 137) = *(_OWORD *)&v24[9];
  v11 = v19;
  a5[2] = v18;
  a5[3] = v11;
  v12 = v21;
  a5[4] = v20;
  a5[5] = v12;
  result = *(double *)&v16;
  v14 = v17;
  *a5 = v16;
  a5[1] = v14;
  return result;
}

uint64_t sub_21C56277C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2552890F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C5627C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2552890F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C56280C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2552890F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void Map.init<A>(bounds:interactionModes:scope:content:)(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for MapContentView();
}

void sub_21C5628E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&a9 - v13;
  v15 = *v9;
  *(_QWORD *)(v12 - 88) = 0xA000000000000000;
  v16 = sub_21C56277C(v10, v12 - 160);
  *(_QWORD *)(v12 - 168) = v15;
  *(_QWORD *)(v12 - 200) = 0;
  *(_QWORD *)(v12 - 192) = 0;
  *(_BYTE *)(v12 - 176) = 0;
  *(_QWORD *)(v12 - 184) = 0;
  v11(v16);
  sub_21C570E28((uint64_t)v14);
}

uint64_t sub_21C56297C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_21C56280C(v0);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v4 - 208), v1, v3);
}

double Map.init<>(initialPosition:bounds:interactionModes:scope:)@<D0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, _OWORD *a6@<X8>)
{
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  double result;
  __int128 v16;
  _BYTE v17[72];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[25];

  v10 = *a1;
  v11 = *a3;
  sub_21C56277C(a2, (uint64_t)v17);
  sub_21C5E3778();
  v20 = 0uLL;
  *(_QWORD *)&v21 = 0;
  *((_QWORD *)&v21 + 1) = 1;
  v22 = 0u;
  v23 = 0u;
  LOBYTE(v24) = 0;
  sub_21C55DAAC(v18);
  swift_release();
  *(_QWORD *)&v26[16] = 0;
  *(_QWORD *)v26 = 0;
  v25 = 0uLL;
  v26[8] = 0;
  v26[24] = 1;
  *(_QWORD *)&v19 = 0;
  v18 = v10;
  BYTE8(v19) = 0;
  sub_21C5627C4((uint64_t)v17, (uint64_t)&v20);
  *((_QWORD *)&v24 + 1) = v11;
  sub_21C564918(v25, *((uint64_t *)&v25 + 1), *(uint64_t *)v26, v26[8], (uint64_t (*)(uint64_t, uint64_t))sub_21C5616F0);
  v25 = 0uLL;
  v26[8] = 0;
  *(_QWORD *)v26 = 0;
  *(_QWORD *)&v26[16] = a4;
  v26[24] = a5 & 1;
  sub_21C56280C(a2);
  v12 = v25;
  a6[6] = v24;
  a6[7] = v12;
  a6[8] = *(_OWORD *)v26;
  *(_OWORD *)((char *)a6 + 137) = *(_OWORD *)&v26[9];
  v13 = v21;
  a6[2] = v20;
  a6[3] = v13;
  v14 = v23;
  a6[4] = v22;
  a6[5] = v14;
  result = *(double *)&v18;
  v16 = v19;
  *a6 = v18;
  a6[1] = v16;
  return result;
}

void Map.init<A>(initialPosition:bounds:interactionModes:scope:content:)(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for MapContentView();
}

void sub_21C562B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&a9 - v13;
  v15 = *v9;
  v16 = *v11;
  *(_QWORD *)(v12 - 96) = v15;
  v17 = sub_21C56277C(v10, v12 - 168);
  *(_QWORD *)(v12 - 176) = v16;
  *(_QWORD *)(v12 - 208) = 0;
  *(_QWORD *)(v12 - 200) = 0;
  *(_BYTE *)(v12 - 184) = 0;
  *(_QWORD *)(v12 - 192) = 0;
  (*(void (**)(uint64_t))(v12 - 240))(v17);
  sub_21C570E28((uint64_t)v14);
}

uint64_t sub_21C562C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_21C56280C(v0);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v4 - 216), v1, v3);
}

uint64_t Map.init<>(position:bounds:interactionModes:scope:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, _OWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[25];
  _BYTE v26[80];

  v16 = *a1;
  v10 = *((_QWORD *)a1 + 2);
  v11 = *a3;
  sub_21C56277C(a2, (uint64_t)v26);
  sub_21C5E3778();
  v19 = 0uLL;
  *(_QWORD *)&v20 = 0;
  *((_QWORD *)&v20 + 1) = 1;
  v21 = 0u;
  v22 = 0u;
  LOBYTE(v23) = 0;
  sub_21C55DAAC(v17);
  swift_release();
  *(_QWORD *)&v25[16] = 0;
  *(_QWORD *)v25 = 0;
  v24 = 0uLL;
  v25[8] = 0;
  v25[24] = 1;
  *(_QWORD *)&v18 = v10;
  BYTE8(v18) = 1;
  sub_21C5627C4((uint64_t)v26, (uint64_t)&v19);
  *((_QWORD *)&v23 + 1) = v11;
  sub_21C564918(v24, *((uint64_t *)&v24 + 1), *(uint64_t *)v25, v25[8], (uint64_t (*)(uint64_t, uint64_t))sub_21C5616F0);
  v24 = 0uLL;
  v25[8] = 0;
  *(_QWORD *)v25 = 0;
  *(_QWORD *)&v25[16] = a4;
  v25[24] = a5 & 1;
  v12 = v20;
  a6[2] = v19;
  a6[3] = v12;
  v13 = v22;
  a6[4] = v21;
  a6[5] = v13;
  *a6 = v16;
  a6[1] = v18;
  v14 = v24;
  a6[6] = v23;
  a6[7] = v14;
  a6[8] = *(_OWORD *)v25;
  *(_OWORD *)((char *)a6 + 137) = *(_OWORD *)&v25[9];
  return sub_21C56280C(a2);
}

void Map.init<A>(position:bounds:interactionModes:scope:content:)(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for MapContentView();
}

void sub_21C562E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __int128 *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&a9 - v13;
  v15 = *v9;
  v16 = *((_QWORD *)v9 + 2);
  v17 = *v11;
  *(_OWORD *)(v12 - 112) = v15;
  *(_QWORD *)(v12 - 96) = v16;
  v18 = sub_21C56277C(v10, v12 - 184);
  *(_QWORD *)(v12 - 192) = v17;
  *(_QWORD *)(v12 - 224) = 0;
  *(_QWORD *)(v12 - 216) = 0;
  *(_BYTE *)(v12 - 200) = 0;
  *(_QWORD *)(v12 - 208) = 0;
  (*(void (**)(uint64_t))(v12 - 256))(v18);
  sub_21C570FE8((uint64_t)v14);
}

uint64_t sub_21C562F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_21C56280C(v0);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v4 - 232), v1, v3);
}

void Map.init<A>(bounds:interactionModes:selection:scope:)()
{
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C562FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v11 - 240) = a1;
  *(_QWORD *)(v11 - 264) = sub_21C5E37F0();
  v12 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v11 - 256) = (char *)&a9 - v13;
  *(_QWORD *)(v11 - 168) = v9;
  *(_QWORD *)(v11 - 160) = &type metadata for EmptyMapContent;
  *(_QWORD *)(v11 - 312) = v9;
  *(_QWORD *)(v11 - 152) = v10;
  *(_QWORD *)(v11 - 144) = &protocol witness table for EmptyMapContent;
  type metadata accessor for MapContentView();
}

void sub_21C563044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *(_QWORD *)(v12 - 216) = a1;
  *(_QWORD *)(v12 - 232) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v12 - 248) = (char *)&a9 - v13;
  sub_21C5E3BB0();
  v14 = sub_21C5E37F0();
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v12 - 328) = v14;
  v16 = v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&a9 - v18;
  *(_QWORD *)(v12 - 272) = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v12 - 304) = (char *)&a9 - v20;
  *(_QWORD *)(v12 - 280) = *v10;
  v21 = *(void (**)(char *, uint64_t))(v16 + 16);
  *(_QWORD *)(v12 - 320) = v21;
  v21(v19, v9);
  sub_21C5E3A9C();
  v22 = sub_21C5E3A90();
  v23 = *(unsigned __int8 *)(v16 + 80);
  *(_QWORD *)(v12 - 288) = v16;
  v24 = (v23 + 48) & ~v23;
  v25 = (char *)swift_allocObject();
  v26 = MEMORY[0x24BEE6930];
  *((_QWORD *)v25 + 2) = v22;
  *((_QWORD *)v25 + 3) = v26;
  v27 = *(_QWORD *)(v12 - 312);
  v28 = *(_QWORD *)(v12 - 296);
  *((_QWORD *)v25 + 4) = v27;
  *((_QWORD *)v25 + 5) = v28;
  v29 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v30 = *(_QWORD *)(v12 - 328);
  v29(&v25[v24], v19, v30);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 - 320))(v19, *(_QWORD *)(v12 - 184), v30);
  v31 = sub_21C5E3A90();
  v32 = (char *)swift_allocObject();
  *((_QWORD *)v32 + 2) = v31;
  *((_QWORD *)v32 + 3) = MEMORY[0x24BEE6930];
  *((_QWORD *)v32 + 4) = v27;
  *((_QWORD *)v32 + 5) = v28;
  v29(&v32[v24], v19, v30);
  v33 = *(_QWORD *)(v12 - 304);
  sub_21C5E37E4();
  *(_QWORD *)(v12 - 96) = 0xA000000000000000;
  sub_21C56277C(*(_QWORD *)(v12 - 224), v12 - 168);
  *(_QWORD *)(v12 - 176) = *(_QWORD *)(v12 - 280);
  v34 = *(_QWORD *)(v12 - 272);
  v35 = *(_QWORD *)(v12 - 256);
  v36 = *(_QWORD *)(v12 - 264);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v35, v33, v36);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v35, 0, 1, v36);
  sub_21C570E28(*(_QWORD *)(v12 - 248));
}

uint64_t sub_21C5632E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v6 - 288) + 8))(*(_QWORD *)(v6 - 184), v5);
  sub_21C56280C(v0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v1);
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v6 - 232) + 32))(*(_QWORD *)(v6 - 192), v2, *(_QWORD *)(v6 - 216));
}

void sub_21C56334C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - v3;
  v5 = sub_21C5E37F0();
  MEMORY[0x22077ECE0](v5);
  sub_21C5C869C((uint64_t)v4, a1);
}

void sub_21C5633F8(uint64_t a1@<X8>)
{
  sub_21C5E3BB0();
  sub_21C5E37F0();
  sub_21C56334C(a1);
}

void sub_21C56345C()
{
  uint64_t v0;

  v0 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C5634E0(_QWORD *a1)
{
  uint64_t v1;

  sub_21C5C8728(a1, v1);
  sub_21C5E37F0();
  return sub_21C5E37CC();
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 32);
  sub_21C5E3BB0();
  v2 = sub_21C5E37F0();
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v4 = v0 + ((v3 + 48) & ~v3) + *(int *)(v2 + 32);
  v5 = *(_QWORD *)(v1 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v1))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v1);
  return swift_deallocObject();
}

void sub_21C5635E4()
{
  sub_21C5E3BB0();
  sub_21C5E37F0();
  sub_21C56345C();
}

void Map.init<A, B>(bounds:interactionModes:selection:scope:content:)(uint64_t a1@<X0>, uint64_t a2@<X3>, char a3@<W4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[20];
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _UNKNOWN **v21;

  v12[18] = a5;
  v12[19] = a4;
  v14 = a2;
  v15 = a6;
  v12[16] = a1;
  v16 = a9;
  v13 = a3 & 1;
  v12[5] = a7;
  MEMORY[0x24BDAC7A8](a1);
  v12[17] = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v10;
  v19 = MEMORY[0x24BEE4078];
  v20 = v11;
  v21 = &protocol witness table for Never;
  v17 = v11;
  type metadata accessor for MapSelectionManagerBox();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[20];
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v13[18] = a5;
  v13[19] = a4;
  v15 = a2;
  v16 = a6;
  v13[16] = a1;
  v17 = a9;
  v14 = a3 & 1;
  v13[5] = a7;
  MEMORY[0x24BDAC7A8](a1);
  v13[17] = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 8);
  v19 = v12;
  v20 = v12;
  v21 = v11;
  v22 = v10;
  v18 = v10;
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C5636FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 288) = a1;
  *(_QWORD *)(v13 - 304) = sub_21C5E37F0();
  v14 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 296) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 168) = v10;
  *(_QWORD *)(v13 - 160) = v9;
  *(_QWORD *)(v13 - 152) = v11;
  *(_QWORD *)(v13 - 144) = v12;
  type metadata accessor for MapContentView();
}

void sub_21C56376C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  *(_QWORD *)(v13 - 264) = a1;
  *(_QWORD *)(v13 - 272) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 280) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 184) = v10;
  sub_21C5E3BB0();
  v15 = sub_21C5E37F0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&a9 - v19;
  *(_QWORD *)(v13 - 312) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 352) = (char *)&a9 - v21;
  *(_QWORD *)(v13 - 328) = *v9;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  *(_QWORD *)(v13 - 360) = v22;
  *(_QWORD *)(v13 - 336) = v11;
  v22(v20, v11, v15);
  sub_21C5E3A9C();
  v23 = sub_21C5E3A90();
  v24 = *(unsigned __int8 *)(v16 + 80);
  *(_QWORD *)(v13 - 320) = v16;
  v25 = (v24 + 64) & ~v24;
  *(_QWORD *)(v13 - 368) = v25 + v17;
  *(_QWORD *)(v13 - 376) = v24 | 7;
  v26 = (char *)swift_allocObject();
  v27 = MEMORY[0x24BEE6930];
  *((_QWORD *)v26 + 2) = v23;
  *((_QWORD *)v26 + 3) = v27;
  v28 = *(_QWORD *)(v13 - 344);
  *((_QWORD *)v26 + 4) = v10;
  *((_QWORD *)v26 + 5) = v28;
  v29 = *(_QWORD *)(v13 - 200);
  v30 = *(_QWORD *)(v13 - 192);
  *((_QWORD *)v26 + 6) = v30;
  *((_QWORD *)v26 + 7) = v29;
  v31 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  *(_QWORD *)(v13 - 384) = v31;
  v31(&v26[v25], v20, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 - 360))(v20, v11, v15);
  v32 = sub_21C5E3A90();
  v33 = (char *)swift_allocObject();
  *((_QWORD *)v33 + 2) = v32;
  v34 = *(_QWORD *)(v13 - 184);
  *((_QWORD *)v33 + 3) = MEMORY[0x24BEE6930];
  *((_QWORD *)v33 + 4) = v34;
  *((_QWORD *)v33 + 5) = v28;
  v35 = *(_QWORD *)(v13 - 200);
  *((_QWORD *)v33 + 6) = v30;
  *((_QWORD *)v33 + 7) = v35;
  (*(void (**)(char *, char *, uint64_t))(v13 - 384))(&v33[v25], v20, v15);
  v36 = *(_QWORD *)(v13 - 352);
  sub_21C5E37E4();
  *(_QWORD *)(v13 - 96) = 0xA000000000000000;
  sub_21C56277C(*(_QWORD *)(v13 - 256), v13 - 168);
  *(_QWORD *)(v13 - 176) = *(_QWORD *)(v13 - 328);
  v37 = *(_QWORD *)(v13 - 312);
  v38 = *(_QWORD *)(v13 - 296);
  v39 = *(_QWORD *)(v13 - 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v38, v36, v39);
  v40 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v39);
  (*(void (**)(uint64_t))(v13 - 232))(v40);
  sub_21C570E28(*(_QWORD *)(v13 - 280));
}

uint64_t sub_21C563A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v6 - 320) + 8))(*(_QWORD *)(v6 - 336), v5);
  sub_21C56280C(v2);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v3);
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v6 - 272) + 32))(*(_QWORD *)(v6 - 208), v0, *(_QWORD *)(v6 - 264));
}

uint64_t sub_21C563AD0()
{
  return sub_21C563F90((uint64_t (*)(_QWORD, _QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_21C564564);
}

uint64_t sub_21C563AE0(uint64_t a1)
{
  return sub_21C56401C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_21C564610);
}

void Map.init<A, B>(initialPosition:bounds:interactionModes:selection:scope:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, char a4@<W5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[23];
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _UNKNOWN **v22;

  v14[21] = a6;
  v14[22] = a5;
  v16 = a3;
  v17 = a7;
  v14[19] = a2;
  v18 = a11;
  v15 = a4 & 1;
  v14[9] = a9;
  MEMORY[0x24BDAC7A8](a1);
  v14[20] = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v12;
  v20 = MEMORY[0x24BEE4078];
  v21 = v13;
  v22 = &protocol witness table for Never;
  v14[7] = v13;
  type metadata accessor for MapSelectionManagerBox();
}

{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[23];
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v15[21] = a6;
  v15[22] = a5;
  v17 = a3;
  v18 = a7;
  v15[19] = a2;
  v19 = a11;
  v16 = a4 & 1;
  v15[9] = a9;
  MEMORY[0x24BDAC7A8](a1);
  v15[20] = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v12 + 8);
  v20 = v14;
  v21 = v14;
  v22 = v13;
  v23 = v12;
  v15[7] = v12;
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C563BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 280) = a1;
  *(_QWORD *)(v13 - 296) = sub_21C5E37F0();
  v14 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 288) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 168) = v10;
  *(_QWORD *)(v13 - 160) = v9;
  *(_QWORD *)(v13 - 152) = v11;
  *(_QWORD *)(v13 - 144) = v12;
  type metadata accessor for MapContentView();
}

void sub_21C563C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_QWORD *)(v14 - 256) = a1;
  *(_QWORD *)(v14 - 264) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v14 - 272) = (char *)&a9 - v15;
  *(_QWORD *)(v14 - 184) = v10;
  sub_21C5E3BB0();
  v16 = sub_21C5E37F0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&a9 - v20;
  *(_QWORD *)(v14 - 304) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v14 - 360) = (char *)&a9 - v22;
  *(_QWORD *)(v14 - 336) = *v9;
  *(_QWORD *)(v14 - 320) = *v13;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  *(_QWORD *)(v14 - 376) = v23;
  *(_QWORD *)(v14 - 352) = v11;
  v23(v21, v11, v16);
  sub_21C5E3A9C();
  v24 = sub_21C5E3A90();
  v25 = *(unsigned __int8 *)(v17 + 80);
  *(_QWORD *)(v14 - 312) = v17;
  v26 = (v25 + 64) & ~v25;
  *(_QWORD *)(v14 - 384) = v26 + v18;
  *(_QWORD *)(v14 - 392) = v25 | 7;
  v27 = (char *)swift_allocObject();
  v28 = MEMORY[0x24BEE6930];
  *((_QWORD *)v27 + 2) = v24;
  *((_QWORD *)v27 + 3) = v28;
  v29 = *(_QWORD *)(v14 - 328);
  *((_QWORD *)v27 + 4) = v10;
  *((_QWORD *)v27 + 5) = v29;
  v30 = *(_QWORD *)(v14 - 344);
  v31 = *(_QWORD *)(v14 - 192);
  *((_QWORD *)v27 + 6) = v30;
  *((_QWORD *)v27 + 7) = v31;
  v32 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  *(_QWORD *)(v14 - 400) = v32;
  v32(&v27[v26], v21, v16);
  *(_QWORD *)(v14 - 368) = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 - 376))(v21, v11, v16);
  v33 = sub_21C5E3A90();
  v34 = (char *)swift_allocObject();
  *((_QWORD *)v34 + 2) = v33;
  v36 = *(_QWORD *)(v14 - 192);
  v35 = *(_QWORD *)(v14 - 184);
  *((_QWORD *)v34 + 3) = MEMORY[0x24BEE6930];
  *((_QWORD *)v34 + 4) = v35;
  *((_QWORD *)v34 + 5) = v29;
  *((_QWORD *)v34 + 6) = v30;
  *((_QWORD *)v34 + 7) = v36;
  (*(void (**)(char *, char *, uint64_t))(v14 - 400))(&v34[v26], v21, v16);
  v37 = *(_QWORD *)(v14 - 360);
  sub_21C5E37E4();
  *(_QWORD *)(v14 - 96) = *(_QWORD *)(v14 - 336);
  sub_21C56277C(*(_QWORD *)(v14 - 248), v14 - 168);
  *(_QWORD *)(v14 - 176) = *(_QWORD *)(v14 - 320);
  v38 = *(_QWORD *)(v14 - 304);
  v39 = *(_QWORD *)(v14 - 288);
  v40 = *(_QWORD *)(v14 - 296);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v39, v37, v40);
  v41 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v39, 0, 1, v40);
  (*(void (**)(uint64_t))(v14 - 224))(v41);
  sub_21C570E28(*(_QWORD *)(v14 - 272));
}

uint64_t sub_21C563F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 312) + 8))(*(_QWORD *)(v5 - 352), *(_QWORD *)(v5 - 368));
  sub_21C56280C(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v5 - 264) + 32))(*(_QWORD *)(v5 - 200), v0, *(_QWORD *)(v5 - 256));
}

uint64_t sub_21C563F90(uint64_t (*a1)(_QWORD, _QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *((_QWORD *)v1 + 4);
  v4 = *((_QWORD *)v1 + 5);
  v5 = *((_QWORD *)v1 + 6);
  v6 = *((_QWORD *)v1 + 7);
  sub_21C5E3BB0();
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_21C5E37F0() - 8) + 80);
  return a1(*((_QWORD *)v1 + 2), *((_QWORD *)v1 + 3), &v1[(v7 + 64) & ~v7], v3, v4, v5, v6);
}

uint64_t sub_21C56401C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *((_QWORD *)v2 + 4);
  v6 = *((_QWORD *)v2 + 5);
  v7 = *((_QWORD *)v2 + 6);
  v8 = *((_QWORD *)v2 + 7);
  sub_21C5E3BB0();
  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_21C5E37F0() - 8) + 80);
  return a2(a1, *((_QWORD *)v2 + 2), *((_QWORD *)v2 + 3), &v2[(v9 + 64) & ~v9], v5, v6, v7, v8);
}

void Map.init<A, B>(position:bounds:interactionModes:selection:scope:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, char a4@<W5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[24];
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN **v23;

  v14[22] = a6;
  v14[23] = a5;
  v16 = a3;
  v14[20] = a2;
  v17 = a7;
  v18 = a11;
  v15 = a4 & 1;
  v14[10] = a9;
  MEMORY[0x24BDAC7A8](a1);
  v14[21] = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v12;
  v21 = MEMORY[0x24BEE4078];
  v22 = v13;
  v23 = &protocol witness table for Never;
  v19 = v13;
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C564164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 304) = a1;
  *(_QWORD *)(v13 - 320) = sub_21C5E37F0();
  v14 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 312) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 184) = v10;
  *(_QWORD *)(v13 - 176) = v9;
  *(_QWORD *)(v13 - 168) = v11;
  *(_QWORD *)(v13 - 160) = v12;
  type metadata accessor for MapContentView();
}

void sub_21C5641D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_QWORD *)(v14 - 280) = a1;
  *(_QWORD *)(v14 - 288) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v14 - 296) = (char *)&a9 - v15;
  *(_QWORD *)(v14 - 200) = v10;
  sub_21C5E3BB0();
  v16 = sub_21C5E37F0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&a9 - v20;
  *(_QWORD *)(v14 - 328) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v14 - 392) = (char *)&a9 - v22;
  *(_OWORD *)(v14 - 368) = *(_OWORD *)v9;
  *(_QWORD *)(v14 - 376) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v14 - 344) = *v13;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  *(_QWORD *)(v14 - 400) = v23;
  *(_QWORD *)(v14 - 384) = v11;
  v23(v21, v11, v16);
  sub_21C5E3A9C();
  v24 = sub_21C5E3A90();
  v25 = *(unsigned __int8 *)(v17 + 80);
  *(_QWORD *)(v14 - 336) = v17;
  v26 = (v25 + 64) & ~v25;
  *(_QWORD *)(v14 - 408) = v26 + v18;
  *(_QWORD *)(v14 - 416) = v25 | 7;
  v27 = (char *)swift_allocObject();
  v28 = MEMORY[0x24BEE6930];
  *((_QWORD *)v27 + 2) = v24;
  *((_QWORD *)v27 + 3) = v28;
  v29 = *(_QWORD *)(v14 - 352);
  *((_QWORD *)v27 + 4) = v10;
  *((_QWORD *)v27 + 5) = v29;
  v30 = *(_QWORD *)(v14 - 216);
  v31 = *(_QWORD *)(v14 - 208);
  *((_QWORD *)v27 + 6) = v31;
  *((_QWORD *)v27 + 7) = v30;
  v32 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  *(_QWORD *)(v14 - 424) = v32;
  v32(&v27[v26], v21, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 - 400))(v21, v11, v16);
  v33 = sub_21C5E3A90();
  v34 = (char *)swift_allocObject();
  *((_QWORD *)v34 + 2) = v33;
  v35 = *(_QWORD *)(v14 - 200);
  *((_QWORD *)v34 + 3) = MEMORY[0x24BEE6930];
  *((_QWORD *)v34 + 4) = v35;
  *((_QWORD *)v34 + 5) = v29;
  v36 = *(_QWORD *)(v14 - 216);
  *((_QWORD *)v34 + 6) = v31;
  *((_QWORD *)v34 + 7) = v36;
  (*(void (**)(char *, char *, uint64_t))(v14 - 424))(&v34[v26], v21, v16);
  v37 = *(_QWORD *)(v14 - 392);
  sub_21C5E37E4();
  *(_OWORD *)(v14 - 112) = *(_OWORD *)(v14 - 368);
  *(_QWORD *)(v14 - 96) = *(_QWORD *)(v14 - 376);
  sub_21C56277C(*(_QWORD *)(v14 - 272), v14 - 184);
  *(_QWORD *)(v14 - 192) = *(_QWORD *)(v14 - 344);
  v38 = *(_QWORD *)(v14 - 328);
  v39 = *(_QWORD *)(v14 - 312);
  v40 = *(_QWORD *)(v14 - 320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v39, v37, v40);
  v41 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v39, 0, 1, v40);
  (*(void (**)(uint64_t))(v14 - 248))(v41);
  sub_21C570FE8(*(_QWORD *)(v14 - 296));
}

uint64_t sub_21C5644EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v6 - 336) + 8))(*(_QWORD *)(v6 - 384), v5);
  sub_21C56280C(v2);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v3);
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v6 - 288) + 32))(*(_QWORD *)(v6 - 224), v0, *(_QWORD *)(v6 - 280));
}

void sub_21C564564(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - v3;
  v5 = sub_21C5E37F0();
  MEMORY[0x22077ECE0](v5);
  sub_21C5C869C((uint64_t)v4, a1);
}

void sub_21C564610()
{
  uint64_t v0;

  v0 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C564694(_QWORD *a1)
{
  uint64_t v1;

  sub_21C5C8728(a1, v1);
  sub_21C5E37F0();
  return sub_21C5E37CC();
}

double Map.init<>(bounds:interactionModes:selection:scope:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, _OWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  double result;
  __int128 v23;
  __int128 v24;
  _BYTE v27[72];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[25];

  v8 = *a2;
  v9 = *a3;
  v10 = a3[1];
  v11 = (void *)a3[2];
  sub_21C5E3A9C();
  v12 = v11;
  swift_retain();
  swift_retain();
  v13 = sub_21C5E3A90();
  v14 = (_QWORD *)swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  v14[2] = v13;
  v14[3] = v15;
  v14[4] = v9;
  v14[5] = v10;
  v14[6] = v11;
  v16 = sub_21C5E3A90();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v16;
  v17[3] = v15;
  v17[4] = v9;
  v17[5] = v10;
  v17[6] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288DA0);
  sub_21C5E37E4();
  v24 = v28;
  v18 = v29;
  LOBYTE(v13) = BYTE8(v29);
  sub_21C56277C(a1, (uint64_t)v27);
  sub_21C5E3778();
  v30 = 0uLL;
  *(_QWORD *)&v31 = 0;
  *((_QWORD *)&v31 + 1) = 1;
  v32 = 0u;
  v33 = 0u;
  LOBYTE(v34) = 0;
  sub_21C55DAAC(v28);
  swift_release();
  *(_QWORD *)&v36[16] = 0;
  *(_QWORD *)v36 = 0;
  v35 = 0uLL;
  v36[8] = 0;
  v36[24] = 1;
  *(_QWORD *)&v29 = 0;
  v28 = 0xA000000000000000;
  BYTE8(v29) = 0;
  sub_21C5627C4((uint64_t)v27, (uint64_t)&v30);
  *((_QWORD *)&v34 + 1) = v8;
  sub_21C564918(v35, *((uint64_t *)&v35 + 1), *(uint64_t *)v36, v36[8], (uint64_t (*)(uint64_t, uint64_t))sub_21C564974);
  v35 = v24;
  *(_QWORD *)v36 = v18;
  v36[8] = v13;
  *(_QWORD *)&v36[16] = a4;
  v36[24] = a5 & 1;
  sub_21C56280C(a1);
  v19 = v35;
  a6[6] = v34;
  a6[7] = v19;
  a6[8] = *(_OWORD *)v36;
  *(_OWORD *)((char *)a6 + 137) = *(_OWORD *)&v36[9];
  v20 = v31;
  a6[2] = v30;
  a6[3] = v20;
  v21 = v33;
  a6[4] = v32;
  a6[5] = v21;
  result = *(double *)&v28;
  v23 = v29;
  *a6 = v28;
  a6[1] = v23;
  return result;
}

uint64_t sub_21C564918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t result;

  if (a2)
  {
    swift_release();
    swift_release();
    return a5(a3, a4);
  }
  return result;
}

void sub_21C564974(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

void Map.init<A>(bounds:interactionModes:selection:scope:content:)(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  sub_21C564C3C();
  type metadata accessor for MapContentView();
}

void sub_21C564A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;

  *(_QWORD *)(v11 - 240) = a1;
  *(_QWORD *)(v11 - 264) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&a9 - v12;
  *(_QWORD *)(v11 - 296) = *v10;
  v14 = *v9;
  v15 = v9[1];
  v16 = (void *)v9[2];
  sub_21C5E3A9C();
  v17 = v16;
  swift_retain();
  swift_retain();
  v18 = sub_21C5E3A90();
  v19 = (_QWORD *)swift_allocObject();
  v20 = MEMORY[0x24BEE6930];
  v19[2] = v18;
  v19[3] = v20;
  v19[4] = v14;
  v19[5] = v15;
  v19[6] = v16;
  v21 = sub_21C5E3A90();
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v21;
  v22[3] = v20;
  v22[4] = v14;
  v22[5] = v15;
  v22[6] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288DA0);
  sub_21C5E37E4();
  v24 = *(_QWORD *)(v11 - 168);
  v23 = *(_QWORD *)(v11 - 160);
  v25 = *(void **)(v11 - 152);
  LOBYTE(v15) = *(_BYTE *)(v11 - 144);
  *(_QWORD *)(v11 - 96) = 0xA000000000000000;
  sub_21C56277C(*(_QWORD *)(v11 - 288), v11 - 168);
  *(_QWORD *)(v11 - 176) = *(_QWORD *)(v11 - 296);
  *(_QWORD *)(v11 - 208) = v24;
  *(_QWORD *)(v11 - 200) = v23;
  *(_QWORD *)(v11 - 192) = v25;
  *(_BYTE *)(v11 - 184) = v15;
  swift_retain();
  swift_retain();
  v26 = sub_21C564CA8(v25, v15);
  (*(void (**)(id))(v11 - 248))(v26);
  sub_21C570E28((uint64_t)v13);
}

uint64_t sub_21C564BD8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;
  uint64_t v4;

  swift_release();
  swift_release();
  sub_21C564974(v2, v3);
  sub_21C56280C(v1);
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v4 - 264) + 32))(*(_QWORD *)(v4 - 216), v0, *(_QWORD *)(v4 - 240));
}

unint64_t sub_21C564C3C()
{
  unint64_t result;

  result = qword_255288DA8[0];
  if (!qword_255288DA8[0])
  {
    result = MEMORY[0x22077F9A0](&protocol conformance descriptor for MapFeature, &type metadata for MapFeature);
    atomic_store(result, qword_255288DA8);
  }
  return result;
}

uint64_t sub_21C564C88(uint64_t a1)
{
  return sub_21C565788(a1);
}

id sub_21C564CA8(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

double Map.init<>(initialPosition:bounds:interactionModes:selection:scope:)@<D0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, _OWORD *a7@<X8>)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  double result;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _BYTE v29[72];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[25];

  v9 = *a1;
  v26 = *a3;
  v10 = *a4;
  v11 = a4[1];
  v12 = (void *)a4[2];
  sub_21C5E3A9C();
  v13 = v12;
  swift_retain();
  swift_retain();
  v14 = sub_21C5E3A90();
  v15 = (_QWORD *)swift_allocObject();
  v16 = MEMORY[0x24BEE6930];
  v15[2] = v14;
  v15[3] = v16;
  v15[4] = v10;
  v15[5] = v11;
  v15[6] = v12;
  v17 = sub_21C5E3A90();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v16;
  v18[4] = v10;
  v18[5] = v11;
  v18[6] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288DA0);
  sub_21C5E37E4();
  v25 = v30;
  v19 = v31;
  LOBYTE(v14) = BYTE8(v31);
  sub_21C56277C(a2, (uint64_t)v29);
  sub_21C5E3778();
  v32 = 0uLL;
  *(_QWORD *)&v33 = 0;
  *((_QWORD *)&v33 + 1) = 1;
  v34 = 0u;
  v35 = 0u;
  LOBYTE(v36) = 0;
  sub_21C55DAAC(v30);
  swift_release();
  *(_QWORD *)&v38[16] = 0;
  *(_QWORD *)v38 = 0;
  v37 = 0uLL;
  v38[8] = 0;
  v38[24] = 1;
  *(_QWORD *)&v31 = 0;
  v30 = v9;
  BYTE8(v31) = 0;
  sub_21C5627C4((uint64_t)v29, (uint64_t)&v32);
  *((_QWORD *)&v36 + 1) = v26;
  sub_21C564918(v37, *((uint64_t *)&v37 + 1), *(uint64_t *)v38, v38[8], (uint64_t (*)(uint64_t, uint64_t))sub_21C564974);
  v37 = v25;
  *(_QWORD *)v38 = v19;
  v38[8] = v14;
  *(_QWORD *)&v38[16] = a5;
  v38[24] = a6 & 1;
  sub_21C56280C(a2);
  v20 = v37;
  a7[6] = v36;
  a7[7] = v20;
  a7[8] = *(_OWORD *)v38;
  *(_OWORD *)((char *)a7 + 137) = *(_OWORD *)&v38[9];
  v21 = v33;
  a7[2] = v32;
  a7[3] = v21;
  v22 = v35;
  a7[4] = v34;
  a7[5] = v22;
  result = *(double *)&v30;
  v24 = v31;
  *a7 = v30;
  a7[1] = v24;
  return result;
}

void Map.init<A>(initialPosition:bounds:interactionModes:selection:scope:content:)(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  sub_21C564C3C();
  type metadata accessor for MapContentView();
}

void sub_21C564FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;

  *(_QWORD *)(v12 - 240) = a1;
  *(_QWORD *)(v12 - 264) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&a9 - v13;
  *(_QWORD *)(v12 - 304) = *v11;
  *(_QWORD *)(v12 - 296) = *v10;
  v15 = *v9;
  v16 = v9[1];
  v17 = (void *)v9[2];
  sub_21C5E3A9C();
  v18 = v17;
  swift_retain();
  swift_retain();
  v19 = sub_21C5E3A90();
  v20 = (_QWORD *)swift_allocObject();
  v21 = MEMORY[0x24BEE6930];
  v20[2] = v19;
  v20[3] = v21;
  v20[4] = v15;
  v20[5] = v16;
  v20[6] = v17;
  v22 = sub_21C5E3A90();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v22;
  v23[3] = v21;
  v23[4] = v15;
  v23[5] = v16;
  v23[6] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288DA0);
  sub_21C5E37E4();
  v24 = *(_QWORD *)(v12 - 168);
  v25 = *(_QWORD *)(v12 - 160);
  v26 = *(void **)(v12 - 152);
  LOBYTE(v16) = *(_BYTE *)(v12 - 144);
  *(_QWORD *)(v12 - 96) = *(_QWORD *)(v12 - 304);
  sub_21C56277C(*(_QWORD *)(v12 - 288), v12 - 168);
  *(_QWORD *)(v12 - 176) = *(_QWORD *)(v12 - 296);
  *(_QWORD *)(v12 - 208) = v24;
  *(_QWORD *)(v12 - 200) = v25;
  *(_QWORD *)(v12 - 192) = v26;
  *(_BYTE *)(v12 - 184) = v16;
  swift_retain();
  swift_retain();
  v27 = sub_21C564CA8(v26, v16);
  (*(void (**)(id))(v12 - 248))(v27);
  sub_21C570E28((uint64_t)v14);
}

uint64_t sub_21C565160()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_release();
  sub_21C564974(v1, v2);
  sub_21C56280C(v0);
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v4 - 264) + 32))(*(_QWORD *)(v4 - 216), v3, *(_QWORD *)(v4 - 240));
}

uint64_t Map.init<>(position:bounds:interactionModes:selection:scope:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, _OWORD *a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v24;
  uint64_t v25;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[25];
  _BYTE v37[80];

  v24 = *a1;
  v9 = *((_QWORD *)a1 + 2);
  v25 = *a3;
  v10 = *a4;
  v11 = a4[1];
  v12 = (void *)a4[2];
  sub_21C5E3A9C();
  v13 = v12;
  swift_retain();
  swift_retain();
  v14 = sub_21C5E3A90();
  v15 = (_QWORD *)swift_allocObject();
  v16 = MEMORY[0x24BEE6930];
  v15[2] = v14;
  v15[3] = v16;
  v15[4] = v10;
  v15[5] = v11;
  v15[6] = v12;
  v17 = sub_21C5E3A90();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v16;
  v18[4] = v10;
  v18[5] = v11;
  v18[6] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288DA0);
  sub_21C5E37E4();
  v19 = (void *)v29;
  LOBYTE(v10) = BYTE8(v29);
  sub_21C56277C(a2, (uint64_t)v37);
  swift_retain();
  swift_retain();
  sub_21C564CA8((id)v29, BYTE8(v29));
  sub_21C5E3778();
  v30 = 0uLL;
  *(_QWORD *)&v31 = 0;
  *((_QWORD *)&v31 + 1) = 1;
  v32 = 0u;
  v33 = 0u;
  LOBYTE(v34) = 0;
  sub_21C55DAAC(v28);
  swift_release();
  *(_QWORD *)&v36[16] = 0;
  *(_QWORD *)v36 = 0;
  v35 = 0uLL;
  v36[8] = 0;
  v36[24] = 1;
  *(_QWORD *)&v29 = v9;
  BYTE8(v29) = 1;
  sub_21C5627C4((uint64_t)v37, (uint64_t)&v30);
  *((_QWORD *)&v34 + 1) = v25;
  sub_21C564918(v35, *((uint64_t *)&v35 + 1), *(uint64_t *)v36, v36[8], (uint64_t (*)(uint64_t, uint64_t))sub_21C564974);
  v35 = v28;
  *(_QWORD *)v36 = v19;
  v36[8] = v10;
  *(_QWORD *)&v36[16] = a5;
  v36[24] = a6 & 1;
  v20 = v31;
  a7[2] = v30;
  a7[3] = v20;
  v21 = v33;
  a7[4] = v32;
  a7[5] = v21;
  *a7 = v24;
  a7[1] = v29;
  v22 = v35;
  a7[6] = v34;
  a7[7] = v22;
  a7[8] = *(_OWORD *)v36;
  *(_OWORD *)((char *)a7 + 137) = *(_OWORD *)&v36[9];
  swift_release();
  swift_release();
  sub_21C564974(v19, v10);
  return sub_21C56280C(a2);
}

void Map.init<A>(position:bounds:interactionModes:selection:scope:content:)(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  sub_21C564C3C();
  type metadata accessor for MapContentView();
}

void sub_21C5654EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;

  *(_QWORD *)(v12 - 256) = a1;
  *(_QWORD *)(v12 - 280) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&a9 - v13;
  *(_OWORD *)(v12 - 336) = *(_OWORD *)v11;
  *(_QWORD *)(v12 - 344) = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(v12 - 312) = *v10;
  v15 = *v9;
  v16 = v9[1];
  v17 = (void *)v9[2];
  sub_21C5E3A9C();
  v18 = v17;
  swift_retain();
  swift_retain();
  v19 = sub_21C5E3A90();
  v20 = (_QWORD *)swift_allocObject();
  v21 = MEMORY[0x24BEE6930];
  v20[2] = v19;
  v20[3] = v21;
  v20[4] = v15;
  v20[5] = v16;
  v20[6] = v17;
  v22 = sub_21C5E3A90();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v22;
  v23[3] = v21;
  v23[4] = v15;
  v23[5] = v16;
  v23[6] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288DA0);
  sub_21C5E37E4();
  v24 = *(_QWORD *)(v12 - 184);
  v25 = *(_QWORD *)(v12 - 176);
  v26 = *(void **)(v12 - 168);
  LOBYTE(v16) = *(_BYTE *)(v12 - 160);
  *(_OWORD *)(v12 - 112) = *(_OWORD *)(v12 - 336);
  *(_QWORD *)(v12 - 96) = *(_QWORD *)(v12 - 344);
  sub_21C56277C(*(_QWORD *)(v12 - 304), v12 - 184);
  *(_QWORD *)(v12 - 192) = *(_QWORD *)(v12 - 312);
  *(_QWORD *)(v12 - 224) = v24;
  *(_QWORD *)(v12 - 216) = v25;
  *(_QWORD *)(v12 - 208) = v26;
  *(_BYTE *)(v12 - 200) = v16;
  swift_retain();
  swift_retain();
  v27 = sub_21C564CA8(v26, v16);
  (*(void (**)(id))(v12 - 264))(v27);
  sub_21C570FE8((uint64_t)v14);
}

uint64_t sub_21C5656C8()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_release();
  sub_21C564974(v1, v2);
  sub_21C56280C(v0);
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v4 - 280) + 32))(*(_QWORD *)(v4 - 232), v3, *(_QWORD *)(v4 - 256));
}

_QWORD *sub_21C565730@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255288E30);
  result = MEMORY[0x22077ECE0](&v4, v2);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_21C565788(uint64_t a1)
{
  id v1;

  if (!*(_BYTE *)(a1 + 8))
    v1 = *(id *)a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255288E30);
  return sub_21C5E37CC();
}

uint64_t objectdestroy_29Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_21C5658D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 288) = a1;
  *(_QWORD *)(v13 - 304) = sub_21C5E37F0();
  v14 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 296) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 168) = v10;
  *(_QWORD *)(v13 - 160) = v9;
  *(_QWORD *)(v13 - 152) = v11;
  *(_QWORD *)(v13 - 144) = v12;
  type metadata accessor for MapSelectableContentView();
}

void sub_21C565940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  *(_QWORD *)(v13 - 264) = a1;
  *(_QWORD *)(v13 - 272) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 280) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 184) = v10;
  sub_21C5E3BB0();
  v15 = sub_21C5E37F0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&a9 - v19;
  *(_QWORD *)(v13 - 312) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 352) = (char *)&a9 - v21;
  *(_QWORD *)(v13 - 328) = *v9;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  *(_QWORD *)(v13 - 360) = v22;
  *(_QWORD *)(v13 - 336) = v11;
  v22(v20, v11, v15);
  sub_21C5E3A9C();
  v23 = sub_21C5E3A90();
  v24 = *(unsigned __int8 *)(v16 + 80);
  *(_QWORD *)(v13 - 320) = v16;
  v25 = (v24 + 64) & ~v24;
  *(_QWORD *)(v13 - 368) = v25 + v17;
  *(_QWORD *)(v13 - 376) = v24 | 7;
  v26 = (char *)swift_allocObject();
  v27 = MEMORY[0x24BEE6930];
  *((_QWORD *)v26 + 2) = v23;
  *((_QWORD *)v26 + 3) = v27;
  v28 = *(_QWORD *)(v13 - 344);
  *((_QWORD *)v26 + 4) = v10;
  *((_QWORD *)v26 + 5) = v28;
  v29 = *(_QWORD *)(v13 - 200);
  v30 = *(_QWORD *)(v13 - 192);
  *((_QWORD *)v26 + 6) = v30;
  *((_QWORD *)v26 + 7) = v29;
  v31 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  *(_QWORD *)(v13 - 384) = v31;
  v31(&v26[v25], v20, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 - 360))(v20, v11, v15);
  v32 = sub_21C5E3A90();
  v33 = (char *)swift_allocObject();
  *((_QWORD *)v33 + 2) = v32;
  v34 = *(_QWORD *)(v13 - 184);
  *((_QWORD *)v33 + 3) = MEMORY[0x24BEE6930];
  *((_QWORD *)v33 + 4) = v34;
  *((_QWORD *)v33 + 5) = v28;
  v35 = *(_QWORD *)(v13 - 200);
  *((_QWORD *)v33 + 6) = v30;
  *((_QWORD *)v33 + 7) = v35;
  (*(void (**)(char *, char *, uint64_t))(v13 - 384))(&v33[v25], v20, v15);
  v36 = *(_QWORD *)(v13 - 352);
  sub_21C5E37E4();
  *(_QWORD *)(v13 - 96) = 0xA000000000000000;
  sub_21C56277C(*(_QWORD *)(v13 - 256), v13 - 168);
  *(_QWORD *)(v13 - 176) = *(_QWORD *)(v13 - 328);
  v37 = *(_QWORD *)(v13 - 312);
  v38 = *(_QWORD *)(v13 - 296);
  v39 = *(_QWORD *)(v13 - 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v38, v36, v39);
  v40 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v39);
  (*(void (**)(uint64_t))(v13 - 232))(v40);
  sub_21C5711CC(*(_QWORD *)(v13 - 280));
}

uint64_t sub_21C565C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v6 - 320) + 8))(*(_QWORD *)(v6 - 336), v5);
  sub_21C56280C(v2);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v3);
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v6 - 272) + 32))(*(_QWORD *)(v6 - 208), v0, *(_QWORD *)(v6 - 264));
}

uint64_t sub_21C565CA4()
{
  return sub_21C563F90((uint64_t (*)(_QWORD, _QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_21C56661C);
}

uint64_t sub_21C565CB4(uint64_t a1)
{
  return sub_21C56401C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_21C5666C0);
}

void sub_21C565D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 280) = a1;
  *(_QWORD *)(v13 - 296) = sub_21C5E37F0();
  v14 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 288) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 168) = v10;
  *(_QWORD *)(v13 - 160) = v9;
  *(_QWORD *)(v13 - 152) = v11;
  *(_QWORD *)(v13 - 144) = v12;
  type metadata accessor for MapSelectableContentView();
}

void sub_21C565DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_QWORD *)(v14 - 256) = a1;
  *(_QWORD *)(v14 - 264) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v14 - 272) = (char *)&a9 - v15;
  *(_QWORD *)(v14 - 184) = v10;
  sub_21C5E3BB0();
  v16 = sub_21C5E37F0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&a9 - v20;
  *(_QWORD *)(v14 - 304) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v14 - 360) = (char *)&a9 - v22;
  *(_QWORD *)(v14 - 336) = *v9;
  *(_QWORD *)(v14 - 320) = *v13;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  *(_QWORD *)(v14 - 376) = v23;
  *(_QWORD *)(v14 - 352) = v11;
  v23(v21, v11, v16);
  sub_21C5E3A9C();
  v24 = sub_21C5E3A90();
  v25 = *(unsigned __int8 *)(v17 + 80);
  *(_QWORD *)(v14 - 312) = v17;
  v26 = (v25 + 64) & ~v25;
  *(_QWORD *)(v14 - 384) = v26 + v18;
  *(_QWORD *)(v14 - 392) = v25 | 7;
  v27 = (char *)swift_allocObject();
  v28 = MEMORY[0x24BEE6930];
  *((_QWORD *)v27 + 2) = v24;
  *((_QWORD *)v27 + 3) = v28;
  v29 = *(_QWORD *)(v14 - 328);
  *((_QWORD *)v27 + 4) = v10;
  *((_QWORD *)v27 + 5) = v29;
  v30 = *(_QWORD *)(v14 - 344);
  v31 = *(_QWORD *)(v14 - 192);
  *((_QWORD *)v27 + 6) = v30;
  *((_QWORD *)v27 + 7) = v31;
  v32 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  *(_QWORD *)(v14 - 400) = v32;
  v32(&v27[v26], v21, v16);
  *(_QWORD *)(v14 - 368) = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 - 376))(v21, v11, v16);
  v33 = sub_21C5E3A90();
  v34 = (char *)swift_allocObject();
  *((_QWORD *)v34 + 2) = v33;
  v36 = *(_QWORD *)(v14 - 192);
  v35 = *(_QWORD *)(v14 - 184);
  *((_QWORD *)v34 + 3) = MEMORY[0x24BEE6930];
  *((_QWORD *)v34 + 4) = v35;
  *((_QWORD *)v34 + 5) = v29;
  *((_QWORD *)v34 + 6) = v30;
  *((_QWORD *)v34 + 7) = v36;
  (*(void (**)(char *, char *, uint64_t))(v14 - 400))(&v34[v26], v21, v16);
  v37 = *(_QWORD *)(v14 - 360);
  sub_21C5E37E4();
  *(_QWORD *)(v14 - 96) = *(_QWORD *)(v14 - 336);
  sub_21C56277C(*(_QWORD *)(v14 - 248), v14 - 168);
  *(_QWORD *)(v14 - 176) = *(_QWORD *)(v14 - 320);
  v38 = *(_QWORD *)(v14 - 304);
  v39 = *(_QWORD *)(v14 - 288);
  v40 = *(_QWORD *)(v14 - 296);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v39, v37, v40);
  v41 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v39, 0, 1, v40);
  (*(void (**)(uint64_t))(v14 - 224))(v41);
  sub_21C5711CC(*(_QWORD *)(v14 - 272));
}

uint64_t sub_21C5660DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 312) + 8))(*(_QWORD *)(v5 - 352), *(_QWORD *)(v5 - 368));
  sub_21C56280C(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v5 - 264) + 32))(*(_QWORD *)(v5 - 200), v0, *(_QWORD *)(v5 - 256));
}

void Map.init<A, B>(position:bounds:interactionModes:selection:scope:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[25];
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v17[23] = a8;
  v17[24] = a7;
  v19 = a5;
  v22 = a4;
  v17[15] = a3;
  v17[21] = a2;
  v20 = a9;
  v17[8] = a13;
  v18 = a6 & 1;
  MEMORY[0x24BDAC7A8](a1);
  v17[22] = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v14 + 8);
  v23 = v16;
  v24 = v16;
  v25 = v15;
  v26 = v14;
  v21 = v14;
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C566214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 296) = a1;
  *(_QWORD *)(v13 - 320) = sub_21C5E37F0();
  v14 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 304) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 184) = v10;
  *(_QWORD *)(v13 - 176) = v9;
  *(_QWORD *)(v13 - 424) = v9;
  *(_QWORD *)(v13 - 168) = v11;
  *(_QWORD *)(v13 - 160) = v12;
  type metadata accessor for MapSelectableContentView();
}

void sub_21C56628C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  *(_QWORD *)(v14 - 272) = a1;
  *(_QWORD *)(v14 - 280) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v14 - 288) = (char *)&a9 - v15;
  sub_21C5E3BB0();
  v16 = sub_21C5E37F0();
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v14 - 400) = v16;
  v18 = *(_QWORD *)(v17 + 64);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&a9 - v20;
  *(_QWORD *)(v14 - 328) = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v14 - 376) = (char *)&a9 - v22;
  *(_OWORD *)(v14 - 352) = *(_OWORD *)v11;
  *(_QWORD *)(v14 - 360) = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(v14 - 312) = **(_QWORD **)(v14 - 312);
  v23 = *(void (**)(char *, uint64_t))(v17 + 16);
  *(_QWORD *)(v14 - 392) = v23;
  v23(v21, v10);
  sub_21C5E3A9C();
  v24 = sub_21C5E3A90();
  v25 = *(unsigned __int8 *)(v17 + 80);
  *(_QWORD *)(v14 - 336) = v17;
  v26 = (v25 + 64) & ~v25;
  *(_QWORD *)(v14 - 408) = v26 + v18;
  *(_QWORD *)(v14 - 416) = v25 | 7;
  v27 = (char *)swift_allocObject();
  v28 = MEMORY[0x24BEE6930];
  *((_QWORD *)v27 + 2) = v24;
  *((_QWORD *)v27 + 3) = v28;
  *((_QWORD *)v27 + 4) = v12;
  *((_QWORD *)v27 + 5) = v9;
  v29 = v12;
  *(_QWORD *)(v14 - 384) = v12;
  v30 = *(_QWORD *)(v14 - 208);
  v31 = *(_QWORD *)(v14 - 368);
  *((_QWORD *)v27 + 6) = v30;
  *((_QWORD *)v27 + 7) = v31;
  v32 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v33 = *(_QWORD *)(v14 - 400);
  v32(&v27[v26], v21, v33);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 - 392))(v21, *(_QWORD *)(v14 - 200), v33);
  v34 = sub_21C5E3A90();
  v35 = (char *)swift_allocObject();
  *((_QWORD *)v35 + 2) = v34;
  *((_QWORD *)v35 + 3) = MEMORY[0x24BEE6930];
  *((_QWORD *)v35 + 4) = v29;
  *((_QWORD *)v35 + 5) = *(_QWORD *)(v14 - 424);
  *((_QWORD *)v35 + 6) = v30;
  *((_QWORD *)v35 + 7) = v31;
  v32(&v35[v26], v21, v33);
  v36 = *(_QWORD *)(v14 - 376);
  sub_21C5E37E4();
  *(_OWORD *)(v14 - 112) = *(_OWORD *)(v14 - 352);
  *(_QWORD *)(v14 - 96) = *(_QWORD *)(v14 - 360);
  sub_21C56277C(*(_QWORD *)(v14 - 264), v14 - 184);
  *(_QWORD *)(v14 - 192) = *(_QWORD *)(v14 - 312);
  v37 = *(_QWORD *)(v14 - 328);
  v38 = *(_QWORD *)(v14 - 304);
  v39 = *(_QWORD *)(v14 - 320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v38, v36, v39);
  v40 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v39);
  (*(void (**)(uint64_t))(v14 - 240))(v40);
  sub_21C571380(*(_QWORD *)(v14 - 288));
}

uint64_t sub_21C5665A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v6 - 336) + 8))(*(_QWORD *)(v6 - 200), v5);
  sub_21C56280C(v0);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v3);
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v6 - 280) + 32))(*(_QWORD *)(v6 - 216), v1, *(_QWORD *)(v6 - 272));
}

void sub_21C56661C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - v3;
  v5 = sub_21C5E37F0();
  MEMORY[0x22077ECE0](v5);
  sub_21C5C8D00((uint64_t)v4, a1);
}

void sub_21C5666C0()
{
  uint64_t v0;

  v0 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C566738(uint64_t a1)
{
  uint64_t v1;

  sub_21C5C8D90(a1, v1);
  sub_21C5E37F0();
  return sub_21C5E37CC();
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 32);
  sub_21C5E3BB0();
  v2 = sub_21C5E37F0();
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  v4 = v0 + ((v3 + 64) & ~v3) + *(int *)(v2 + 32);
  v5 = *(_QWORD *)(v1 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v1))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v1);
  return swift_deallocObject();
}

uint64_t sub_21C56683C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_21C566870()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_21C5668DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_21C56694C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_21C56695C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_21C56698C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_21C5669BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_21C5669EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_21C566A1C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_21C566ACC + 4 * byte_21C5E749D[(v7 - 1)]))();
}

void sub_21C566B1C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for Map(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Map);
}

uint64_t sub_21C566CD8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t Group<A>.init(content:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a3 - 8);
  v5 = (void (*)(void))MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5();
  sub_21C5E373C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, a3);
}

uint64_t static Group<A>._makeMapContent(content:inputs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  v7 = sub_21C5E2EC0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - v9;
  v12[0] = a3;
  v12[1] = a4;
  swift_getKeyPath();
  sub_21C5E3748();
  sub_21C5E2EC0();
  sub_21C5E2ECC();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 32))(v10, a2, a3, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_21C566E74()
{
  sub_21C5E3748();
  return sub_21C5E3730();
}

uint64_t sub_21C566EAC()
{
  return 16;
}

__n128 sub_21C566EB8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t static Group<A>._mapContentCount(inputs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_21C566EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Group<A>._makeMapContent(content:inputs:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t sub_21C566EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Group<A>._mapContentCount(inputs:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8));
}

uint64_t sub_21C566F18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x22077F9A0](&protocol conformance descriptor for <A> Group<A>, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_21C566F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_21C56737C(a1, a2, a3, a4, a5, a6, a7, &qword_255288D00, type metadata accessor for CustomAnnotationViewModel);
}

void sub_21C566F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[6];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v16[2] = a4;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CC0);
  MEMORY[0x24BDAC7A8](v12);
  v17 = type metadata accessor for MarkerAnnotationViewModel(0);
  v16[4] = *(_QWORD *)(v17 - 8);
  v13 = MEMORY[0x24BDAC7A8](v17);
  v16[5] = (char *)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16[3] = (char *)v16 - v15;
  v19 = a6;
  v20 = a7;
  v22 = a6;
  v23 = a7;
  v21 = a8;
  v24 = a8;
  v25 = a9;
  v18 = a9;
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C567338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_21C56737C(a1, a2, a3, a4, a5, a6, a7, &qword_255288C70, type metadata accessor for UserAnnotationViewModel);
}

void sub_21C56737C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t (*a9)(_QWORD))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[6];
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v17[1] = a2;
  v17[3] = a8;
  v13 = __swift_instantiateConcreteTypeFromMangledName(a8);
  MEMORY[0x24BDAC7A8](v13);
  v19 = a9;
  v18 = a9(0);
  v17[4] = *(_QWORD *)(v18 - 8);
  v14 = MEMORY[0x24BDAC7A8](v18);
  v17[5] = (char *)v17 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17[2] = (char *)v17 - v16;
  v20 = a4;
  v21 = a5;
  v24 = a4;
  v25 = a5;
  v22 = a6;
  v23 = a7;
  v26 = a6;
  v27 = a7;
  type metadata accessor for MapSelectionManagerBox();
}

_QWORD *sub_21C567700(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char v48;

  v2 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MapContentList.Item(0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (_QWORD *)((char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v10 = a1;
  v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v12 = *(_QWORD *)(v6 + 72);
  v38[1] = v10;
  swift_bridgeObjectRetain();
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v43 = v8;
  v40 = v5;
  v41 = v2;
  v39 = v12;
  do
  {
    sub_21C529664(v11, (uint64_t)v8, type metadata accessor for MapContentList.Item);
    sub_21C529664((uint64_t)v8 + *(int *)(v5 + 24), (uint64_t)v4, type metadata accessor for MapContentList.Item.Content);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v47 = v13;
      v14 = *(void **)v4;
      v15 = *((_WORD *)v4 + 4);
      v16 = *((_QWORD *)v4 + 2);
      v17 = *((_QWORD *)v4 + 3);
      v18 = *((_QWORD *)v4 + 4);
      v19 = *((_QWORD *)v4 + 5);
      v20 = *((_QWORD *)v4 + 6);
      v21 = *((_QWORD *)v4 + 7);
      v22 = *((_QWORD *)v4 + 8);
      v23 = v4[72];
      v24 = *((_QWORD *)v4 + 10);
      v25 = *v8;
      v48 = v4[72];
      v45 = v25;
      v46 = v24;
      if (v16)
      {
        v42 = v23;
        sub_21C531A4C(0, (unint64_t *)&qword_2552888B0);
        swift_bridgeObjectRetain();
        sub_21C561470(v14, v15);
        swift_bridgeObjectRetain();
        v26 = v42;
        sub_21C52EF74(v22, v42);
        swift_retain();
        v27 = sub_21C5E3B80();
        v8 = v43;
        v44 = v27;
        sub_21C56148C(v14, v15);
        swift_bridgeObjectRelease();
        swift_release();
        sub_21C531AC8(v22, v26);
        LOBYTE(v23) = v48;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_21C561470(v14, v15);
        swift_bridgeObjectRetain();
        sub_21C52EF74(v22, v23);
        sub_21C56148C(v14, v15);
        swift_bridgeObjectRelease();
        sub_21C531AC8(v22, v23);
        v44 = 0;
      }
      sub_21C52A88C((uint64_t)v8, type metadata accessor for MapContentList.Item);
      v28 = v47;
      v29 = v15;
      v30 = v22;
      v31 = v20;
      v32 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_21C5B88C0(0, v28[2] + 1, 1, v28);
      v34 = v28[2];
      v33 = v28[3];
      v35 = v28;
      if (v34 >= v33 >> 1)
        v35 = sub_21C5B88C0((_QWORD *)(v33 > 1), v34 + 1, 1, v28);
      v35[2] = v34 + 1;
      v13 = v35;
      v36 = &v35[12 * v34];
      v36[4] = v45;
      v36[5] = v32;
      *((_WORD *)v36 + 24) = v29;
      v8 = v43;
      v36[7] = v44;
      v36[8] = v17;
      v36[9] = v18;
      v36[10] = v19;
      v36[11] = v31;
      v36[12] = v21;
      v36[13] = v30;
      *((_BYTE *)v36 + 112) = v23;
      v36[15] = v46;
      v5 = v40;
      v12 = v39;
    }
    else
    {
      sub_21C52A88C((uint64_t)v4, type metadata accessor for MapContentList.Item.Content);
      sub_21C52A88C((uint64_t)v8, type metadata accessor for MapContentList.Item);
    }
    v11 += v12;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  return v13;
}

_QWORD *sub_21C567AA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  char v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  char v70;
  unsigned __int8 v71;

  v2 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MapContentList.Item(0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v10 = a1;
  v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v12 = *(_QWORD *)(v6 + 72);
  v53 = v10;
  swift_bridgeObjectRetain();
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v59 = v8;
  v55 = v5;
  v56 = v2;
  v54 = v12;
  do
  {
    sub_21C529664(v11, (uint64_t)v8, type metadata accessor for MapContentList.Item);
    sub_21C529664((uint64_t)v8 + *(int *)(v5 + 24), (uint64_t)v4, type metadata accessor for MapContentList.Item.Content);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      v64 = v13;
      v14 = *(void **)v4;
      v15 = *((_QWORD *)v4 + 1);
      v17 = *((_QWORD *)v4 + 2);
      v16 = *((_QWORD *)v4 + 3);
      v18 = *((_QWORD *)v4 + 4);
      v19 = *((_QWORD *)v4 + 5);
      v20 = *((_QWORD *)v4 + 6);
      v21 = *((_QWORD *)v4 + 7);
      v22 = *((_QWORD *)v4 + 8);
      v67 = *((_QWORD *)v4 + 9);
      v68 = v17;
      v23 = *((_QWORD *)v4 + 11);
      v24 = v4[96];
      v25 = *((_QWORD *)v4 + 13);
      v26 = *v8;
      v69 = v4[80];
      v71 = v69;
      v66 = v24;
      v70 = v24;
      v60 = v15;
      v62 = v26;
      v63 = v25;
      v65 = v21;
      if (v16)
      {
        v58 = v23;
        v27 = v14;
        v61 = sub_21C531A4C(0, (unint64_t *)&qword_2552888B0);
        swift_bridgeObjectRetain();
        sub_21C5611D8(v14, v15);
        swift_bridgeObjectRetain();
        v28 = v67;
        v29 = v69;
        sub_21C52EF74(v67, v69);
        sub_21C52EF74(v23, v66);
        swift_retain();
        v30 = sub_21C5E3B80();
        v31 = v27;
        v32 = v65;
        v8 = v59;
        v61 = v30;
        sub_21C561218(v31, v15);
        swift_bridgeObjectRelease();
        swift_release();
        sub_21C531AC8(v28, v29);
        v33 = v58;
        sub_21C531AC8(v58, v66);
        v69 = v71;
        v34 = v70;
      }
      else
      {
        swift_bridgeObjectRetain();
        v57 = v14;
        sub_21C5611D8(v14, v15);
        swift_bridgeObjectRetain();
        v35 = v67;
        v36 = v69;
        sub_21C52EF74(v67, v69);
        v37 = v66;
        sub_21C52EF74(v23, v66);
        sub_21C561218(v57, v15);
        v32 = v65;
        swift_bridgeObjectRelease();
        sub_21C531AC8(v35, v36);
        sub_21C531AC8(v23, v37);
        v61 = 0;
        v33 = v23;
        v34 = v37;
        v31 = v57;
      }
      sub_21C52A88C((uint64_t)v8, type metadata accessor for MapContentList.Item);
      v38 = v64;
      v39 = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v40 = v68;
        v41 = v31;
      }
      else
      {
        v40 = v68;
        v41 = v31;
        v38 = sub_21C5B89E4(0, v38[2] + 1, 1, v38);
      }
      v42 = v67;
      v43 = v60;
      v44 = v69;
      v46 = v38[2];
      v45 = v38[3];
      v47 = v38;
      if (v46 >= v45 >> 1)
      {
        v58 = v33;
        v49 = v34;
        v50 = v60;
        v51 = sub_21C5B89E4((_QWORD *)(v45 > 1), v46 + 1, 1, v38);
        v44 = v69;
        v43 = v50;
        v34 = v49;
        v47 = v51;
        v42 = v67;
        v33 = v58;
      }
      v47[2] = v46 + 1;
      v13 = v47;
      v48 = &v47[15 * v46];
      v48[4] = v62;
      v48[5] = v41;
      v48[6] = v43;
      v48[7] = v40;
      v48[8] = v61;
      v48[9] = v18;
      v48[10] = v19;
      v48[11] = v20;
      v48[12] = v39;
      v48[13] = v22;
      v48[14] = v42;
      *((_BYTE *)v48 + 120) = v44;
      v48[16] = v33;
      *((_BYTE *)v48 + 136) = v34;
      v48[18] = v63;
      v5 = v55;
      v12 = v54;
      v8 = v59;
    }
    else
    {
      sub_21C52A88C((uint64_t)v4, type metadata accessor for MapContentList.Item.Content);
      sub_21C52A88C((uint64_t)v8, type metadata accessor for MapContentList.Item);
    }
    v11 += v12;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  return v13;
}

_QWORD *sub_21C567F14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  _QWORD *v61;
  uint64_t v62;
  _OWORD v63[3];
  _BYTE v64[32];
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;

  v2 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (__int128 *)((char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for MapContentList.Item(0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (_QWORD *)((char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v57 = v2;
  v10 = a1;
  v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v12 = *(_QWORD *)(v6 + 72);
  v46[1] = v10;
  swift_bridgeObjectRetain();
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v47 = v5;
  v48 = v12;
  v49 = v8;
  do
  {
    sub_21C529664(v11, (uint64_t)v8, type metadata accessor for MapContentList.Item);
    sub_21C529664((uint64_t)v8 + *(int *)(v5 + 24), (uint64_t)v4, type metadata accessor for MapContentList.Item.Content);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      v52 = v9;
      v56 = v13;
      v14 = v4[1];
      v69 = *v4;
      v70 = v14;
      v15 = v4[3];
      v71 = v4[2];
      v72 = v15;
      v16 = v4[5];
      v73 = v4[4];
      v74 = v16;
      v17 = v4[7];
      v75 = v4[6];
      v76 = v17;
      v18 = *v8;
      v53 = v70;
      v54 = v69;
      LODWORD(v13) = v71;
      v19 = v72;
      v20 = v73;
      v61 = (_QWORD *)*((_QWORD *)&v74 + 1);
      v21 = v74;
      v62 = *((_QWORD *)&v73 + 1);
      v58 = *((_QWORD *)&v75 + 1);
      v59 = v17;
      v60 = v75;
      v55 = *((_QWORD *)&v17 + 1);
      if (*((_QWORD *)&v71 + 1))
      {
        v50 = sub_21C531A4C(0, (unint64_t *)&qword_2552888B0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v51 = (int)v13;
        v13 = v61;
        v22 = v60;
        sub_21C52EF74((uint64_t)v61, v60);
        v23 = v58;
        v24 = v59;
        sub_21C52EF74(v58, v59);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = (uint64_t)v13;
        LOBYTE(v13) = v51;
        sub_21C52EF74(v25, v22);
        sub_21C52EF74(v23, v24);
        swift_retain();
        v26 = (void *)sub_21C5E3B80();
        sub_21C56E0B8((uint64_t)&v69);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v27 = (uint64_t)v61;
        v28 = v60;
        sub_21C52EF74((uint64_t)v61, v60);
        v29 = v58;
        v30 = v59;
        sub_21C52EF74(v58, v59);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_21C52EF74(v27, v28);
        sub_21C52EF74(v29, v30);
        sub_21C56E0B8((uint64_t)&v69);
        v26 = 0;
      }
      *(_QWORD *)&v63[0] = v18;
      *(_OWORD *)((char *)v63 + 8) = v54;
      *(_OWORD *)((char *)&v63[1] + 8) = v53;
      BYTE8(v63[2]) = (_BYTE)v13;
      *(_QWORD *)v64 = v26;
      *(_OWORD *)&v64[8] = v19;
      *(_QWORD *)&v64[24] = v20;
      v31 = (uint64_t)v61;
      *(_QWORD *)&v65 = v62;
      *((_QWORD *)&v65 + 1) = v21;
      *(_QWORD *)&v66 = v61;
      v33 = v59;
      v32 = v60;
      BYTE8(v66) = v60;
      v34 = v58;
      *(_QWORD *)&v67 = v58;
      BYTE8(v67) = v59;
      v68 = v55;
      v35 = v26;
      sub_21C560F2C((uint64_t)v63);
      sub_21C531AC8(v34, v33);
      sub_21C531AC8(v31, v32);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_21C560E74((uint64_t)v63);
      v8 = v49;
      sub_21C52A88C((uint64_t)v49, type metadata accessor for MapContentList.Item);
      v13 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_21C5B8B08(0, v13[2] + 1, 1, v13);
      v5 = v47;
      v9 = v52;
      v37 = v13[2];
      v36 = v13[3];
      if (v37 >= v36 >> 1)
        v13 = sub_21C5B8B08((_QWORD *)(v36 > 1), v37 + 1, 1, v13);
      v13[2] = v37 + 1;
      v38 = &v13[17 * v37];
      *((_OWORD *)v38 + 2) = v63[0];
      v39 = v63[1];
      v40 = v63[2];
      v41 = *(_OWORD *)&v64[16];
      *((_OWORD *)v38 + 5) = *(_OWORD *)v64;
      *((_OWORD *)v38 + 6) = v41;
      *((_OWORD *)v38 + 3) = v39;
      *((_OWORD *)v38 + 4) = v40;
      v42 = v65;
      v43 = v66;
      v44 = v67;
      v38[20] = v68;
      *((_OWORD *)v38 + 8) = v43;
      *((_OWORD *)v38 + 9) = v44;
      *((_OWORD *)v38 + 7) = v42;
      v12 = v48;
    }
    else
    {
      sub_21C52A88C((uint64_t)v4, type metadata accessor for MapContentList.Item.Content);
      sub_21C52A88C((uint64_t)v8, type metadata accessor for MapContentList.Item);
    }
    v11 += v12;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_21C5683A8()
{
  return sub_21C568408(&qword_255288E40);
}

uint64_t sub_21C5683B4()
{
  return sub_21C568408(&qword_255288E48);
}

uint64_t sub_21C5683C0()
{
  return sub_21C568408(&qword_255288E50);
}

uint64_t sub_21C5683CC()
{
  return sub_21C568408(&qword_255288E58);
}

uint64_t sub_21C5683D8()
{
  return sub_21C568408(&qword_255288E60);
}

uint64_t sub_21C5683E4()
{
  return sub_21C568408(&qword_255288E70);
}

uint64_t sub_21C5683F0()
{
  return sub_21C568408(&qword_255288E78);
}

uint64_t sub_21C5683FC()
{
  return sub_21C568408(&qword_255288E80);
}

uint64_t sub_21C568408(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned int *)(v1 + *a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_21C56845C()
{
  uint64_t v0;

  v0 = sub_21C5E2E18();
  __swift_allocate_value_buffer(v0, qword_255293A40);
  __swift_project_value_buffer(v0, (uint64_t)qword_255293A40);
  return sub_21C5E2E0C();
}

void sub_21C5684D4(uint64_t a1, id a2, uint64_t a3, _QWORD *a4)
{
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;

  objc_msgSend(a2, sel_setCoordinate_, *(double *)(a3 + 56), *(double *)(a3 + 64));
  if (*(_QWORD *)(a3 + 16))
    v8 = (void *)sub_21C5E3940();
  else
    v8 = 0;
  objc_msgSend(a2, sel_setTitle_, v8);

  if (*(_QWORD *)(a3 + 32))
    v9 = (void *)sub_21C5E3940();
  else
    v9 = 0;
  objc_msgSend(a2, sel_setSubtitle_, v9);

  v10 = a4[3];
  v11 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v10);
  v12 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v11 + 24))(a2, v10, v11);
  if (v12)
  {
    v14 = (id)v12;
    type metadata accessor for SwiftUIAnnotationView();
    v13 = (char *)swift_dynamicCastClass();
    if (v13)
      sub_21C568604(v13, a1);

  }
}

id sub_21C568604(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  double v7;
  double v8;
  double *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double *v14;
  double v15;
  double v16;
  uint64_t v17;

  v3 = v2;
  v6 = swift_retain();
  sub_21C5DF6CC(v6);
  swift_release();
  v7 = *(double *)(v3 + 80);
  v8 = *(double *)(v3 + 88);
  v9 = (double *)&a1[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_contentAnchorPoint];
  *v9 = v7;
  v9[1] = v8;
  objc_msgSend(a1, sel_frame);
  objc_msgSend(a1, sel_setCenterOffset_, v10 * 0.5 - v7 * v10, v11 * 0.5 - v8 * v11);
  if ((*(_BYTE *)(v3 + 120) & 1) == 0)
  {
    v13 = *(double *)(v3 + 104);
    v12 = *(double *)(v3 + 112);
    v14 = (double *)&a1[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_accessoryAnchorPoint];
    *v14 = v13;
    v14[1] = v12;
    objc_msgSend(a1, sel_frame);
    objc_msgSend(a1, sel_setAccessoryOffset_, -(v15 * 0.5 - v13 * v15), -(v16 * 0.5 - v12 * v16));
  }
  if (a2)
  {
    v17 = 1;
    objc_msgSend(a1, sel_setTitleVisibility_, 1);
  }
  else
  {
    objc_msgSend(a1, sel_setTitleVisibility_, qword_21C5E7C00[*(char *)(v3 + 48)]);
    v17 = qword_21C5E7C00[*(char *)(v3 + 49)];
  }
  return objc_msgSend(a1, sel_setSubtitleVisibility_, v17);
}

void sub_21C568760(uint64_t a1, id a2, uint64_t a3, _QWORD *a4)
{
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  objc_msgSend(a2, sel_setCoordinate_, *(double *)(a3 + 88), *(double *)(a3 + 96));
  if (*(_QWORD *)(a3 + 16))
    v8 = (void *)sub_21C5E3940();
  else
    v8 = 0;
  objc_msgSend(a2, sel_setTitle_, v8);

  if (*(_QWORD *)(a3 + 32))
    v9 = (void *)sub_21C5E3940();
  else
    v9 = 0;
  objc_msgSend(a2, sel_setSubtitle_, v9);

  v10 = a4[3];
  v11 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v10);
  v12 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v11 + 24))(a2, v10, v11);
  if (v12)
  {
    v14 = (id)v12;
    objc_opt_self();
    v13 = (void *)swift_dynamicCastObjCClass();
    if (v13)
      sub_21C568894(v13, a1);

  }
}

id sub_21C568894(void *a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  double v10;

  objc_msgSend(a1, sel_setMarkerTintColor_, *(_QWORD *)(v2 + 112));
  v5 = *(void **)(v2 + 40);
  if (v5)
    v6 = objc_msgSend(*(id *)(v2 + 40), sel__muid);
  else
    v6 = 0;
  objc_msgSend(a1, sel__setFeatureId_, v6);
  if (*(_QWORD *)(v2 + 64))
    v7 = (void *)sub_21C5E3940();
  else
    v7 = 0;
  objc_msgSend(a1, sel_setGlyphText_, v7);

  objc_msgSend(a1, sel_setGlyphImage_, *(_QWORD *)(v2 + 72));
  v8 = objc_msgSend(v5, sel__styleAttributes);
  objc_msgSend(a1, sel__setStyleAttributes_, v8);

  if (a2)
  {
    v9 = 1;
    objc_msgSend(a1, sel_setTitleVisibility_, 1);
  }
  else
  {
    objc_msgSend(a1, sel_setTitleVisibility_, qword_21C5E7C00[*(char *)(v2 + 80)]);
    v9 = qword_21C5E7C00[*(char *)(v2 + 81)];
  }
  objc_msgSend(a1, sel_setSubtitleVisibility_, v9);
  LODWORD(v10) = 1148846080;
  objc_msgSend(a1, sel_setDisplayPriority_, v10);
  return objc_msgSend(a1, sel_setEnabled_, *(unsigned __int8 *)(v2 + 104));
}

void sub_21C568A08(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  double v11;
  double v12;
  double *v13;
  double v14;
  double v15;
  id v16;

  v6 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a3, v6, v7);
  if (v8)
  {
    v16 = (id)v8;
    type metadata accessor for SwiftUIAnnotationView();
    v9 = (char *)swift_dynamicCastClass();
    if (v9)
    {
      v10 = v9;
      v11 = *(double *)(a4 + 24);
      v12 = *(double *)(a4 + 32);
      v13 = (double *)&v9[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_contentAnchorPoint];
      *v13 = v11;
      v13[1] = v12;
      objc_msgSend(v9, sel_frame);
      objc_msgSend(v10, sel_setCenterOffset_, v14 * 0.5 - v11 * v14, v15 * 0.5 - v12 * v15);
    }

  }
}

id sub_21C568AFC(char *a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  double v6;
  double v7;
  double *v8;
  double v9;
  double v10;
  id result;
  uint64_t (*v12)(_QWORD *);
  uint64_t v13;
  _QWORD v14[2];

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  v6 = *(double *)(v2 + 24);
  v7 = *(double *)(v2 + 32);
  v8 = (double *)&a1[OBJC_IVAR____TtC15_MapKit_SwiftUI21SwiftUIAnnotationView_contentAnchorPoint];
  *v8 = v6;
  v8[1] = v7;
  objc_msgSend(a1, sel_frame);
  result = objc_msgSend(a1, sel_setCenterOffset_, v9 * 0.5 - v6 * v9, v10 * 0.5 - v7 * v10);
  v12 = *(uint64_t (**)(_QWORD *))(v2 + 8);
  if (v12)
  {
    if (v4 != (void *)1)
    {
      v14[0] = v4;
      v14[1] = v5;
      sub_21C531AAC((uint64_t)v12);
      sub_21C56E124(v4, v5);
      v13 = v12(v14);
      sub_21C5DF6CC(v13);
      swift_release();
      sub_21C56ECEC(v4, v5);
      return (id)sub_21C531A9C((uint64_t)v12);
    }
  }
  return result;
}

char *sub_21C568C18(void *a1, void *a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  _QWORD v17[2];

  if (*(_QWORD *)(v2 + 8))
  {
    if (a2)
    {
      v4 = a2;
      v5 = (void *)sub_21C5E3940();
      v6 = objc_msgSend(v4, sel_dequeueReusableAnnotationViewWithIdentifier_forAnnotation_, v5, a1);

      type metadata accessor for SwiftUIAnnotationView();
      v7 = (char *)swift_dynamicCastClassUnconditional();
      v8 = objc_msgSend(v4, sel_userLocation);
      if (v8)
      {

        v9 = objc_msgSend(v4, sel_userLocation);
        v10 = (uint64_t)objc_msgSend(v9, sel_location);
        v11 = (id)v10;
        v12 = objc_msgSend(v9, sel_heading);

LABEL_8:
        v17[0] = v10;
        v17[1] = v12;
        sub_21C568AFC(v7, (uint64_t)v17);
        sub_21C56ECEC((void *)v10, v12);
        return v7;
      }
    }
    else
    {
      type metadata accessor for SwiftUIAnnotationView();
      v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v14 = a1;
      v15 = (void *)sub_21C5E3940();
      v7 = (char *)objc_msgSend(v13, sel_initWithAnnotation_reuseIdentifier_, v14, v15);

    }
    v12 = 0;
    v10 = 1;
    goto LABEL_8;
  }
  return 0;
}

uint64_t sub_21C568DE0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

void sub_21C568DEC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v4 = a2[3];
  v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a3, v4, v5);
  if (v6)
  {
    v9 = (id)v6;
    objc_opt_self();
    v7 = (void *)swift_dynamicCastObjCClass();
    if (v7)
    {
      v8 = v7;
      sub_21C568EB8(v7);
      objc_msgSend(v8, sel_setNeedsDisplay);
    }

  }
}

void sub_21C568EB8(void *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v23;

  v2 = *(double *)(v1 + 32);
  v3 = *(unsigned int *)(v1 + 40);
  v4 = *(unsigned int *)(v1 + 44);
  v5 = *(double *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v7 = *(double *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  v9 = *(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRetain();
  objc_msgSend(a1, sel_setLineWidth_, v2);
  objc_msgSend(a1, sel_setLineCap_, v3);
  objc_msgSend(a1, sel_setLineJoin_, v4);
  objc_msgSend(a1, sel_setMiterLimit_, v5);
  if (*(_QWORD *)(v6 + 16))
  {
    v10 = swift_bridgeObjectRetain();
    sub_21C569A70(v10);
    swift_bridgeObjectRelease();
    sub_21C531A4C(0, &qword_255289080);
    v11 = (void *)sub_21C5E39D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(a1, sel_setLineDashPattern_, v11);

  objc_msgSend(a1, sel_setLineDashPhase_, v7);
  swift_bridgeObjectRelease();
  if (!v9)
  {
    sub_21C531A4C(0, (unint64_t *)&qword_2552888B0);
    goto LABEL_17;
  }
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    sub_21C531A4C(0, (unint64_t *)&qword_2552888B0);
    if (!*(_QWORD *)(v8 + 16))
    {
      sub_21C5E3724();
      goto LABEL_18;
    }
LABEL_17:
    swift_retain();
LABEL_18:
    v21 = sub_21C5E3B80();
    objc_msgSend(a1, sel_setStrokeColor_, v21);
    v19 = (void *)v21;
    goto LABEL_23;
  }
  v23 = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(v8 + 16);
  if (v12)
  {
    sub_21C531A4C(0, (unint64_t *)&qword_2552888B0);
    sub_21C52EF74(v8, 1);
    v13 = a1;
    v14 = (uint64_t *)(v8 + 40);
    v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v16 = *v14;
      swift_retain_n();
      sub_21C5E3B80();
      MEMORY[0x22077EEE4]();
      if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_21C5E3A00();
      sub_21C5E3A3C();
      sub_21C5E39E8();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_21C5B8474(0, v15[2] + 1, 1, v15);
      v18 = v15[2];
      v17 = v15[3];
      if (v18 >= v17 >> 1)
        v15 = sub_21C5B8474((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
      v15[2] = v18 + 1;
      v15[v18 + 4] = v16;
      swift_release();
      v14 += 2;
      --v12;
    }
    while (v12);
    sub_21C531AC8(v8, 1);
  }
  else
  {
    v20 = a1;
  }
  sub_21C5E3B5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = a1;
LABEL_23:

}

void sub_21C56923C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v4 = a2[3];
  v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a3, v4, v5);
  if (v6)
  {
    v9 = (id)v6;
    objc_opt_self();
    v7 = (void *)swift_dynamicCastObjCClass();
    if (v7)
    {
      v8 = v7;
      sub_21C569318(v7);
      objc_msgSend(v8, sel_setNeedsDisplay);
    }

  }
}

void sub_21C569318(void *a1)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;

  v3 = *(double *)(v1 + 40);
  v4 = *(unsigned int *)(v1 + 48);
  v5 = *(unsigned int *)(v1 + 52);
  v6 = *(double *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = *(double *)(v1 + 72);
  v9 = *(_QWORD *)(v1 + 80);
  v10 = *(_BYTE *)(v1 + 88);
  v11 = *(_QWORD *)(v1 + 96);
  v12 = *(_BYTE *)(v1 + 104);
  swift_bridgeObjectRetain();
  objc_msgSend(a1, sel_setLineWidth_, v3);
  objc_msgSend(a1, sel_setLineCap_, v4);
  objc_msgSend(a1, sel_setLineJoin_, v5);
  objc_msgSend(a1, sel_setMiterLimit_, v6);
  if (*(_QWORD *)(v7 + 16))
  {
    v13 = swift_bridgeObjectRetain();
    sub_21C569A70(v13);
    swift_bridgeObjectRelease();
    sub_21C531A4C(0, &qword_255289080);
    v14 = (void *)sub_21C5E39D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(a1, sel_setLineDashPattern_, v14);

  objc_msgSend(a1, sel_setLineDashPhase_, v8);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0 && !*(_QWORD *)(v9 + 16))
    sub_21C5E3724();
  else
    swift_retain();
  sub_21C531A4C(0, (unint64_t *)&qword_2552888B0);
  v15 = (void *)sub_21C5E3B80();
  objc_msgSend(a1, sel_setStrokeColor_, v15);

  if ((v12 & 1) != 0 && !*(_QWORD *)(v11 + 16))
    sub_21C5E3724();
  else
    swift_retain();
  v16 = (id)sub_21C5E3B80();
  objc_msgSend(a1, sel_setFillColor_, v16);

}

void sub_21C569520(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v4 = a2[3];
  v5 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a3, v4, v5);
  if (v6)
  {
    v9 = (id)v6;
    objc_opt_self();
    v7 = (void *)swift_dynamicCastObjCClass();
    if (v7)
    {
      v8 = v7;
      sub_21C5695D4(v7);
      objc_msgSend(v8, sel_setNeedsDisplay);
    }

  }
}

void sub_21C5695D4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  double v13;

  v2 = v1;
  v4 = *(_OWORD *)(v1 + 72);
  v11 = *(_OWORD *)(v1 + 56);
  v12 = v4;
  v13 = *(double *)(v1 + 88);
  v5 = *((_QWORD *)&v4 + 1);
  v6 = *(double *)&v11;
  sub_21C56C80C((uint64_t)&v11);
  objc_msgSend(a1, sel_setLineWidth_, v6);
  objc_msgSend(a1, sel_setLineCap_, DWORD2(v11));
  objc_msgSend(a1, sel_setLineJoin_, HIDWORD(v11));
  objc_msgSend(a1, sel_setMiterLimit_, *(double *)&v12);
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = swift_bridgeObjectRetain();
    sub_21C569A70(v7);
    sub_21C56C834((uint64_t)&v11);
    sub_21C531A4C(0, &qword_255289080);
    v8 = (void *)sub_21C5E39D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(a1, sel_setLineDashPattern_, v8);

  objc_msgSend(a1, sel_setLineDashPhase_, v13);
  sub_21C56C834((uint64_t)&v11);
  if ((*(_BYTE *)(v2 + 104) & 1) != 0 && !*(_QWORD *)(*(_QWORD *)(v2 + 96) + 16))
    sub_21C5E3724();
  else
    swift_retain();
  sub_21C531A4C(0, (unint64_t *)&qword_2552888B0);
  v9 = (void *)sub_21C5E3B80();
  objc_msgSend(a1, sel_setStrokeColor_, v9);

  if ((*(_BYTE *)(v2 + 120) & 1) != 0 && !*(_QWORD *)(*(_QWORD *)(v2 + 112) + 16))
    sub_21C5E3724();
  else
    swift_retain();
  v10 = (void *)sub_21C5E3B80();
  objc_msgSend(a1, sel_setFillColor_, v10);

}

uint64_t sub_21C5697BC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_21C5697E4(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

id sub_21C56980C(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_viewForAnnotation_, a1);
}

id sub_21C569834(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_rendererForOverlay_, a1);
}

uint64_t sub_21C56985C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_21C5698C0()
{
  swift_getTupleTypeMetadata2();
  sub_21C5E3A18();
  sub_21C5E38D4();
  swift_getTupleTypeMetadata2();
  sub_21C5E3A18();
  sub_21C56C3F0();
  sub_21C5E38D4();
  return 0xFFFFFFFFLL;
}

uint64_t sub_21C56997C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = swift_bridgeObjectRetain() + 40;
    do
    {
      v3 = *(void (**)(uint64_t))(v2 - 8);
      v4 = swift_retain();
      v3(v4);
      swift_release();
      v2 += 16;
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_21C5699F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = a2 + 40;
    do
    {
      v5 = *(void (**)(uint64_t))(v4 - 8);
      v6 = swift_retain();
      v5(v6);
      swift_release();
      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_21C569A70(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v5 = MEMORY[0x24BEE4AF8];
    sub_21C5E3CDC();
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      sub_21C5E2D94();
      sub_21C5E3CB8();
      sub_21C5E3CE8();
      sub_21C5E3CF4();
      sub_21C5E3CC4();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

id sub_21C569B14()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  objc_super v32;

  v1 = *MEMORY[0x24BEE4EA0] & *v0;
  v2 = (char *)v0 + qword_255288E40;
  v3 = *(_QWORD *)(v1 + 0x50);
  type metadata accessor for CustomAnnotationViewModel(0);
  type metadata accessor for MapBridgingCustomAnnotation();
  v4 = *(_QWORD *)(v1 + 88);
  v5 = MEMORY[0x24BEE5BD8];
  sub_21C521E50(&qword_2552890A8, (uint64_t (*)(uint64_t))type metadata accessor for MapBridgingCustomAnnotation, MEMORY[0x24BEE5BD8]);
  v6 = v0;
  sub_21C5698C0();
  *(_DWORD *)v2 = -1;
  *((_QWORD *)v2 + 1) = 0;
  *((_QWORD *)v2 + 2) = v7;
  *((_QWORD *)v2 + 3) = v8;
  v9 = (char *)v6 + qword_255288E48;
  type metadata accessor for MarkerAnnotationViewModel(0);
  type metadata accessor for MapBridgingMarker();
  sub_21C521E50(&qword_2552890B0, (uint64_t (*)(uint64_t))type metadata accessor for MapBridgingMarker, v5);
  sub_21C5698C0();
  *(_DWORD *)v9 = -1;
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = v10;
  *((_QWORD *)v9 + 3) = v11;
  v12 = (char *)v6 + qword_255288E50;
  sub_21C5698C0();
  *(_DWORD *)v12 = -1;
  *((_QWORD *)v12 + 1) = 0;
  *((_QWORD *)v12 + 2) = v13;
  *((_QWORD *)v12 + 3) = v14;
  v15 = (char *)v6 + qword_255288E58;
  type metadata accessor for UserAnnotationViewModel(0);
  type metadata accessor for MapBridgingUserAnnotation();
  sub_21C521E50((unint64_t *)&unk_2552890B8, (uint64_t (*)(uint64_t))type metadata accessor for MapBridgingUserAnnotation, v5);
  sub_21C5698C0();
  *(_DWORD *)v15 = -1;
  *((_QWORD *)v15 + 1) = 0;
  *((_QWORD *)v15 + 2) = v16;
  *((_QWORD *)v15 + 3) = v17;
  v18 = (char *)v6 + qword_255288E60;
  sub_21C5698C0();
  *(_DWORD *)v18 = -1;
  *((_QWORD *)v18 + 1) = 0;
  *((_QWORD *)v18 + 2) = v19;
  *((_QWORD *)v18 + 3) = v20;
  *(_QWORD *)((char *)v6 + qword_255288E68) = 0;
  v21 = (char *)v6 + qword_255288E70;
  sub_21C531A4C(0, &qword_255288C40);
  sub_21C56EF40((unint64_t *)&unk_2552890C8, &qword_255288C40);
  sub_21C5698C0();
  *(_DWORD *)v21 = -1;
  *((_QWORD *)v21 + 1) = 0;
  *((_QWORD *)v21 + 2) = v22;
  *((_QWORD *)v21 + 3) = v23;
  v24 = (char *)v6 + qword_255288E78;
  sub_21C531A4C(0, (unint64_t *)&qword_255288C20);
  sub_21C56EF40((unint64_t *)&unk_2552890D8, (unint64_t *)&qword_255288C20);
  sub_21C5698C0();
  *(_DWORD *)v24 = -1;
  *((_QWORD *)v24 + 1) = 0;
  *((_QWORD *)v24 + 2) = v25;
  *((_QWORD *)v24 + 3) = v26;
  v27 = (char *)v6 + qword_255288E80;
  sub_21C531A4C(0, &qword_255288BE0);
  sub_21C56EF40(&qword_2552890E8, &qword_255288BE0);
  sub_21C5698C0();
  *(_DWORD *)v27 = -1;
  *((_QWORD *)v27 + 1) = 0;
  *((_QWORD *)v27 + 2) = v28;
  *((_QWORD *)v27 + 3) = v29;
  *(_QWORD *)((char *)v6 + qword_255288E88) = 0;

  v32.receiver = v6;
  v32.super_class = (Class)type metadata accessor for MapContentCoordinator(0, v3, v4, v30);
  return objc_msgSendSuper2(&v32, sel_init);
}

id sub_21C569E54()
{
  return sub_21C569B14();
}

id sub_21C569E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for MapContentCoordinator(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_21C569EC0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for MapContentCoordinator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MapContentCoordinator);
}

uint64_t destroy for CircleOverlayViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_21C531AC8(*(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  return sub_21C531AC8(*(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120));
}

uint64_t initializeWithCopy for CircleOverlayViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(void **)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v8 = *(_BYTE *)(a2 + 104);
  swift_bridgeObjectRetain();
  v9 = v5;
  swift_bridgeObjectRetain();
  sub_21C52EF74(v7, v8);
  *(_QWORD *)(a1 + 96) = v7;
  *(_BYTE *)(a1 + 104) = v8;
  v10 = *(_QWORD *)(a2 + 112);
  LOBYTE(v7) = *(_BYTE *)(a2 + 120);
  sub_21C52EF74(v10, v7);
  *(_QWORD *)(a1 + 112) = v10;
  *(_BYTE *)(a1 + 120) = v7;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  return a1;
}

uint64_t assignWithCopy for CircleOverlayViewModel(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 8);
  v5 = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 8) = v4;
  v6 = *(void **)(a1 + 48);
  v7 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = v7;

  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v9 = *(_QWORD *)(a2 + 96);
  v10 = *(_BYTE *)(a2 + 104);
  sub_21C52EF74(v9, v10);
  v11 = *(_QWORD *)(a1 + 96);
  v12 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = v9;
  *(_BYTE *)(a1 + 104) = v10;
  sub_21C531AC8(v11, v12);
  v13 = *(_QWORD *)(a2 + 112);
  v14 = *(_BYTE *)(a2 + 120);
  sub_21C52EF74(v13, v14);
  v15 = *(_QWORD *)(a1 + 112);
  v16 = *(_BYTE *)(a1 + 120);
  *(_QWORD *)(a1 + 112) = v13;
  *(_BYTE *)(a1 + 120) = v14;
  sub_21C531AC8(v15, v16);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for CircleOverlayViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v6 = *(_BYTE *)(a2 + 104);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = v6;
  sub_21C531AC8(v7, v8);
  v9 = *(_BYTE *)(a2 + 120);
  v10 = *(_QWORD *)(a1 + 112);
  v11 = *(_BYTE *)(a1 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = v9;
  sub_21C531AC8(v10, v11);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for CircleOverlayViewModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CircleOverlayViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CircleOverlayViewModel()
{
  return &type metadata for CircleOverlayViewModel;
}

uint64_t destroy for PolygonOverlayViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_21C561218(*(void **)(a1 + 8), *(_QWORD *)(a1 + 16));

  swift_bridgeObjectRelease();
  sub_21C531AC8(*(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  return sub_21C531AC8(*(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
}

uint64_t initializeWithCopy for PolygonOverlayViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_21C5611D8(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v7 = *(void **)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  LOBYTE(v6) = *(_BYTE *)(a2 + 88);
  v11 = v7;
  swift_bridgeObjectRetain();
  sub_21C52EF74(v10, v6);
  *(_QWORD *)(a1 + 80) = v10;
  *(_BYTE *)(a1 + 88) = v6;
  v12 = *(_QWORD *)(a2 + 96);
  LOBYTE(v10) = *(_BYTE *)(a2 + 104);
  sub_21C52EF74(v12, v10);
  *(_QWORD *)(a1 + 96) = v12;
  *(_BYTE *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t assignWithCopy for PolygonOverlayViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  sub_21C5611D8(v4, v5);
  v7 = *(void **)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  sub_21C561218(v7, v8);
  v9 = *(void **)(a1 + 32);
  v10 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  v11 = v10;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a2 + 80);
  LOBYTE(v5) = *(_BYTE *)(a2 + 88);
  sub_21C52EF74(v12, v5);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_BYTE *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v12;
  *(_BYTE *)(a1 + 88) = v5;
  sub_21C531AC8(v13, v14);
  v15 = *(_QWORD *)(a2 + 96);
  LOBYTE(v5) = *(_BYTE *)(a2 + 104);
  sub_21C52EF74(v15, v5);
  v16 = *(_QWORD *)(a1 + 96);
  v17 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = v15;
  *(_BYTE *)(a1 + 104) = v5;
  sub_21C531AC8(v16, v17);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for PolygonOverlayViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(void **)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  sub_21C561218(v5, v6);
  v7 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v9 = *(_BYTE *)(a2 + 88);
  v10 = *(_QWORD *)(a1 + 80);
  v11 = *(_BYTE *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = v9;
  sub_21C531AC8(v10, v11);
  v12 = *(_BYTE *)(a2 + 104);
  v13 = *(_QWORD *)(a1 + 96);
  v14 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = v12;
  sub_21C531AC8(v13, v14);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for PolygonOverlayViewModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PolygonOverlayViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PolygonOverlayViewModel()
{
  return &type metadata for PolygonOverlayViewModel;
}

uint64_t destroy for PolylineOverlayViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_21C56148C(*(void **)(a1 + 8), *(_WORD *)(a1 + 16));

  swift_bridgeObjectRelease();
  return sub_21C531AC8(*(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
}

uint64_t initializeWithCopy for PolylineOverlayViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int16 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;

  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_21C561470(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = v5;
  v6 = *(void **)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v10 = *(_BYTE *)(a2 + 80);
  v11 = v6;
  swift_bridgeObjectRetain();
  sub_21C52EF74(v9, v10);
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for PolylineOverlayViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int16 v5;
  void *v6;
  __int16 v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 8);
  v5 = *(_WORD *)(a2 + 16);
  sub_21C561470(v4, v5);
  v6 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v7 = *(_WORD *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v5;
  sub_21C56148C(v6, v7);
  v8 = *(void **)(a1 + 24);
  v9 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  v10 = v9;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  LOBYTE(v5) = *(_BYTE *)(a2 + 80);
  sub_21C52EF74(v11, v5);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v5;
  sub_21C531AC8(v12, v13);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for PolylineOverlayViewModel(uint64_t a1, uint64_t a2)
{
  __int16 v4;
  void *v5;
  __int16 v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_WORD *)(a2 + 16);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_WORD *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v4;
  sub_21C56148C(v5, v6);
  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v9 = *(_BYTE *)(a2 + 80);
  v10 = *(_QWORD *)(a1 + 72);
  v11 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = v9;
  sub_21C531AC8(v10, v11);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for PolylineOverlayViewModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PolylineOverlayViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PolylineOverlayViewModel()
{
  return &type metadata for PolylineOverlayViewModel;
}

uint64_t sub_21C56AACC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v9 = a2 + 1;
    v8 = a2[1];
    swift_bridgeObjectRetain();
    if (v8)
    {
      v10 = a2[2];
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v10;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 8) = *v9;
    }
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
    v11 = *(int *)(a3 + 36);
    v12 = a1 + v11;
    v13 = (uint64_t)a2 + v11;
    v14 = sub_21C5E34E4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_21C56AB98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 8))
    swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_21C5E34E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_21C56ABF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *v7;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

uint64_t sub_21C56AC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v6;
      *(_QWORD *)(a1 + 16) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_21C56AD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

uint64_t sub_21C56AE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v6;
      *(_QWORD *)(a1 + 16) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  swift_release();
LABEL_8:
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_21C56AEF4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C56AF00(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21C5E34E4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v8);
  }
}

uint64_t sub_21C56AF7C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21C56AF88(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21C5E34E4();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for UserAnnotationViewModel(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255288F18);
}

uint64_t sub_21C56B010()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C5E34E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C56B0B0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  id v15;
  id v16;
  id v17;
  uint64_t v19;
  uint64_t v20;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v6;
    v7 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v7;
    v8 = (void *)a2[5];
    *(_QWORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v9 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v9;
    v10 = (void *)a2[9];
    *(_QWORD *)(a1 + 72) = v10;
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    *(_BYTE *)(a1 + 81) = *((_BYTE *)a2 + 81);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
    *(_WORD *)(a1 + 104) = *((_WORD *)a2 + 52);
    v11 = (void *)a2[14];
    v12 = *(int *)(a3 + 68);
    v19 = (uint64_t)a2 + v12;
    v20 = a1 + v12;
    *(_QWORD *)(a1 + 112) = v11;
    v13 = sub_21C5E34E4();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v8;
    swift_bridgeObjectRetain();
    v16 = v10;
    v17 = v11;
    v14(v20, v19, v13);
  }
  return v5;
}

uint64_t sub_21C56B1DC(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v4 = (char *)a1 + *(int *)(a2 + 68);
  v5 = sub_21C5E34E4();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_21C56B254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  id v14;
  id v15;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v8;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  v9 = *(void **)(a2 + 112);
  v10 = *(int *)(a3 + 68);
  v17 = a2 + v10;
  v18 = a1 + v10;
  *(_QWORD *)(a1 + 112) = v9;
  v11 = sub_21C5E34E4();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v6;
  swift_bridgeObjectRetain();
  v14 = v8;
  v15 = v9;
  v12(v18, v17, v11);
  return a1;
}

uint64_t sub_21C56B348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 40);
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = v7;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(void **)(a1 + 72);
  v10 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v10;
  v11 = v10;

  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  v12 = *(void **)(a1 + 112);
  v13 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v13;
  v14 = v13;

  v15 = *(int *)(a3 + 68);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t sub_21C56B490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  v4 = *(int *)(a3 + 68);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v7 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t sub_21C56B53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  v11 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);

  v12 = *(int *)(a3 + 68);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_21C56B630()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C56B63C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21C5E34E4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 68)], a2, v8);
  }
}

uint64_t sub_21C56B6B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21C56B6C4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21C5E34E4();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 68)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MarkerAnnotationViewModel(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255288F28);
}

uint64_t sub_21C56B74C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C5E34E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C56B80C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v6;
    v7 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v7;
    v8 = (void *)a2[5];
    *(_QWORD *)(a1 + 40) = v8;
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
    v9 = *(int *)(a3 + 64);
    v10 = (uint64_t)a2 + v9;
    v11 = a1 + v9;
    *(_WORD *)(a1 + 120) = *((_WORD *)a2 + 60);
    v12 = sub_21C5E34E4();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v8;
    swift_retain();
    v13(v11, v10, v12);
  }
  return v5;
}

uint64_t sub_21C56B920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  v4 = a1 + *(int *)(a2 + 64);
  v5 = sub_21C5E34E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_21C56B988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v7 = *(int *)(a3 + 64);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  v10 = sub_21C5E34E4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = v6;
  swift_retain();
  v11(v9, v8, v10);
  return a1;
}

uint64_t sub_21C56BA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 40);
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = v7;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v9 = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v9;
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  v10 = *(int *)(a3 + 64);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_21C56BB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v4 = *(int *)(a3 + 64);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  v7 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t sub_21C56BC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  v9 = *(int *)(a3 + 64);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_21C5E34E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_21C56BD24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C56BD30(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_21C5E34E4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 64)], a2, v8);
  }
}

uint64_t sub_21C56BDAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_21C56BDB8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_21C5E34E4();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 64)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CustomAnnotationViewModel(uint64_t a1)
{
  return sub_21C5254A0(a1, qword_255288F38);
}

uint64_t sub_21C56BE40()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C5E34E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for MapStyle.Standard()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_21C56BF38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21C56BF74(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21C56BFE0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21C56C02C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_21C56C074(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MapContentCoordinator.MapContentStorage()
{
  JUMPOUT(0x22077F91CLL);
}

uint64_t sub_21C56C0C0(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t result;

  v2 = a2 >> 62;
  if (!(a2 >> 62) || (_DWORD)v2 == 2 || (_DWORD)v2 == 1)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t destroy for RegionBinding(uint64_t a1)
{
  return sub_21C56C124(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t sub_21C56C124(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t result;

  v2 = a2 >> 62;
  if (!(a2 >> 62) || (_DWORD)v2 == 2 || (_DWORD)v2 == 1)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t *initializeWithCopy for RegionBinding(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  sub_21C56C0C0(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return a1;
}

uint64_t *assignWithCopy for RegionBinding(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  sub_21C56C0C0(*a2, v4);
  v10 = *a1;
  v11 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  sub_21C56C124(v10, v11);
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RegionBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  sub_21C56C124(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for RegionBinding(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)(a1 + 8) >> 57) >> 5) | (4
                                                          * ((*(_QWORD *)(a1 + 8) >> 57) & 0x18 | *(_QWORD *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RegionBinding(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_QWORD *)(result + 48) = 0;
    }
  }
  return result;
}

uint64_t sub_21C56C3AC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 62;
}

uint64_t sub_21C56C3B8(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_21C56C3C8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for RegionBinding()
{
  return &type metadata for RegionBinding;
}

unint64_t sub_21C56C3F0()
{
  unint64_t result;

  result = qword_255288FD0;
  if (!qword_255288FD0)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EA3BC, &type metadata for MapContentList.ID);
    atomic_store(result, (unint64_t *)&qword_255288FD0);
  }
  return result;
}

unint64_t sub_21C56C434(uint64_t a1)
{
  unint64_t result;

  result = sub_21C56C458();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C56C458()
{
  unint64_t result;

  result = qword_255288FE0;
  if (!qword_255288FE0)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E7940, &type metadata for CircleOverlayViewModel);
    atomic_store(result, (unint64_t *)&qword_255288FE0);
  }
  return result;
}

unint64_t sub_21C56C49C(uint64_t a1)
{
  unint64_t result;

  result = sub_21C56C4C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C56C4C0()
{
  unint64_t result;

  result = qword_255288FE8;
  if (!qword_255288FE8)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E7978, &type metadata for CircleOverlayViewModel);
    atomic_store(result, (unint64_t *)&qword_255288FE8);
  }
  return result;
}

unint64_t sub_21C56C504(uint64_t a1)
{
  unint64_t result;

  result = sub_21C56C528();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C56C528()
{
  unint64_t result;

  result = qword_255288FF8;
  if (!qword_255288FF8)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E79B0, &type metadata for PolygonOverlayViewModel);
    atomic_store(result, (unint64_t *)&qword_255288FF8);
  }
  return result;
}

unint64_t sub_21C56C56C(uint64_t a1)
{
  unint64_t result;

  result = sub_21C56C590();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C56C590()
{
  unint64_t result;

  result = qword_255289000;
  if (!qword_255289000)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E79E8, &type metadata for PolygonOverlayViewModel);
    atomic_store(result, (unint64_t *)&qword_255289000);
  }
  return result;
}

unint64_t sub_21C56C5D4(uint64_t a1)
{
  unint64_t result;

  result = sub_21C56C5F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C56C5F8()
{
  unint64_t result;

  result = qword_255289010;
  if (!qword_255289010)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E7A20, &type metadata for PolylineOverlayViewModel);
    atomic_store(result, (unint64_t *)&qword_255289010);
  }
  return result;
}

unint64_t sub_21C56C63C(uint64_t a1)
{
  unint64_t result;

  result = sub_21C56C660();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_21C56C660()
{
  unint64_t result;

  result = qword_255289018;
  if (!qword_255289018)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E7A58, &type metadata for PolylineOverlayViewModel);
    atomic_store(result, (unint64_t *)&qword_255289018);
  }
  return result;
}

uint64_t sub_21C56C6A4(uint64_t a1)
{
  uint64_t result;

  result = sub_21C521E50((unint64_t *)&unk_255289028, type metadata accessor for UserAnnotationViewModel, (uint64_t)&unk_21C5E7A90);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C56C6E0(uint64_t a1)
{
  uint64_t result;

  result = sub_21C521E50((unint64_t *)&unk_255289038, type metadata accessor for UserAnnotationViewModel, (uint64_t)&unk_21C5E7AC8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C56C71C(uint64_t a1)
{
  uint64_t result;

  result = sub_21C521E50((unint64_t *)&unk_255289048, type metadata accessor for MarkerAnnotationViewModel, (uint64_t)&unk_21C5E7B00);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C56C758(uint64_t a1)
{
  uint64_t result;

  result = sub_21C521E50((unint64_t *)&unk_255289058, type metadata accessor for MarkerAnnotationViewModel, (uint64_t)&unk_21C5E7B38);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C56C794(uint64_t a1)
{
  uint64_t result;

  result = sub_21C521E50((unint64_t *)&unk_255289068, type metadata accessor for CustomAnnotationViewModel, (uint64_t)&unk_21C5E7B70);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C56C7D0(uint64_t a1)
{
  uint64_t result;

  result = sub_21C521E50(&qword_255289078, type metadata accessor for CustomAnnotationViewModel, (uint64_t)&unk_21C5E7BA8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_21C56C80C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_21C56C834(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_21C56C85C@<X0>(uint64_t *a1@<X0>, _BOOL4 a2@<W1>, uint64_t a3@<X2>, int *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  id v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int *v70;
  _BOOL4 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v70 = a4;
  v71 = a2;
  v74 = a3;
  v75 = a5;
  v6 = sub_21C5E3BB0();
  v7 = *(_QWORD *)(v6 - 8);
  v72 = v6;
  v73 = v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v61 - v11;
  v13 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for ResolvedAnnotation();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)((char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = type metadata accessor for MapContentList.Item(0);
  v20 = a1;
  sub_21C529664((uint64_t)a1 + *(int *)(v19 + 24), (uint64_t)v15, type metadata accessor for MapContentList.Item.Content);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_21C52A88C((uint64_t)v15, type metadata accessor for MapContentList.Item.Content);
    v21 = type metadata accessor for CustomAnnotationViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v75, 1, 1, v21);
  }
  else
  {
    v23 = v75;
    sub_21C52AAD4((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedAnnotation);
    v24 = (char *)v20 + *(int *)(v19 + 28);
    v68 = v12;
    v69 = v24;
    sub_21C5AE7C0(v74, (uint64_t)v70, v25, (uint64_t)v12);
    v26 = *v20;
    v70 = v16;
    v67 = v26;
    swift_bridgeObjectRetain();
    v27 = (void *)sub_21C5E3328();
    if (v27)
    {
      v28 = v27;
      v29 = objc_msgSend(v27, sel_string);

      v30 = sub_21C5E3964();
      v63 = v31;
      v64 = v30;

    }
    else
    {
      v63 = 0;
      v64 = 0;
    }
    v32 = v10;
    v33 = v23;
    v34 = (void *)sub_21C5E331C();
    v35 = v73;
    if (v34)
    {
      v36 = v34;
      v37 = objc_msgSend(v34, sel_string);

      v38 = sub_21C5E3964();
      v62 = v39;

    }
    else
    {
      v38 = 0;
      v62 = 0;
    }
    v40 = *(void **)((char *)v18 + v70[12]);
    v41 = v70[10];
    v65 = *((unsigned __int8 *)v18 + v70[9]);
    v42 = *((unsigned __int8 *)v18 + v41);
    v43 = *v18;
    v44 = v18[1];
    v45 = *(_QWORD *)((char *)v18 + v70[7]);
    v46 = v18[2];
    v47 = v18[3];
    v48 = v72;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v68, v72);
    v75 = v38;
    v66 = v42;
    v71 = v71 && (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v74 - 8) + 48))(v32, 1) != 1;
    v49 = *(void (**)(char *, uint64_t))(v35 + 8);
    v50 = v40;
    swift_retain();
    v49(v32, v48);
    v51 = v40;
    v52 = (char *)v18 + v70[11];
    v54 = *(_QWORD *)v52;
    v53 = *((_QWORD *)v52 + 1);
    LODWORD(v74) = v52[16];
    v55 = *((_BYTE *)v18 + v70[13]);
    sub_21C52A88C((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedAnnotation);
    v56 = type metadata accessor for CustomAnnotationViewModel(0);
    v57 = v33 + *(int *)(v56 + 64);
    v58 = sub_21C5E34E4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v57, v69, v58);
    v59 = v64;
    *(_QWORD *)v33 = v67;
    *(_QWORD *)(v33 + 8) = v59;
    v60 = v75;
    *(_QWORD *)(v33 + 16) = v63;
    *(_QWORD *)(v33 + 24) = v60;
    *(_QWORD *)(v33 + 32) = v62;
    *(_QWORD *)(v33 + 40) = v51;
    *(_BYTE *)(v33 + 48) = v65;
    *(_BYTE *)(v33 + 49) = v66;
    *(_QWORD *)(v33 + 56) = v43;
    *(_QWORD *)(v33 + 64) = v44;
    *(_QWORD *)(v33 + 72) = v45;
    *(_QWORD *)(v33 + 80) = v46;
    *(_QWORD *)(v33 + 88) = v47;
    *(_BYTE *)(v33 + 96) = v71;
    *(_QWORD *)(v33 + 104) = v54;
    *(_QWORD *)(v33 + 112) = v53;
    *(_BYTE *)(v33 + 120) = v74;
    *(_BYTE *)(v33 + 121) = v55;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v33, 0, 1, v56);
  }
}

uint64_t sub_21C56CC4C@<X0>(uint64_t *a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  char *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  void *v51;
  char v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  __int16 v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v85 = a6;
  v78 = a5;
  LODWORD(v76) = a3;
  LODWORD(v79) = a2;
  v86 = type metadata accessor for MarkerAnnotationViewModel(0);
  v84 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v80 = a4;
  v81 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_21C5E3BB0();
  v82 = *(_QWORD *)(v9 - 8);
  v83 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v69 - v13;
  v15 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for ResolvedMarker();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for MapContentList.Item(0);
  v22 = a1;
  sub_21C529664((uint64_t)a1 + *(int *)(v21 + 24), (uint64_t)v17, type metadata accessor for MapContentList.Item.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = v81;
    v70 = v12;
    v71 = v21;
    v77 = v14;
    sub_21C52AAD4((uint64_t)v17, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedMarker);
    v24 = (void *)sub_21C5E331C();
    v75 = v20;
    if (v24)
    {
      v25 = v24;
      v26 = objc_msgSend(v24, sel_string);

      v27 = sub_21C5E3964();
      v73 = v28;
      v74 = v27;

    }
    else
    {
      v73 = 0;
      v74 = 0;
    }
    v30 = v22;
    v31 = v80;
    v32 = v79;
    v33 = (uint64_t)v23;
    v34 = (void *)sub_21C5E3334();
    if (v34)
    {
      v36 = v34;
      v37 = objc_msgSend(v34, sel_string);

      v79 = sub_21C5E3964();
      v72 = v38;

    }
    else
    {
      v79 = 0;
      v72 = 0;
    }
    v39 = (uint64_t)v77;
    v81 = (char *)v30 + *(int *)(v71 + 28);
    sub_21C5AE7C0(v31, v78, v35, (uint64_t)v77);
    if ((v32 & 1) != 0)
    {
      LODWORD(v78) = 1;
    }
    else
    {
      v40 = v82;
      v41 = v70;
      v42 = v39;
      v43 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v70, v42, v83);
      v44 = (v76 & 1) != 0
         && (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v41, 1, v31) != 1;
      LODWORD(v78) = v44;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v43);
    }
    v45 = (uint64_t)v75;
    v46 = *v30;
    swift_bridgeObjectRetain();
    v47 = (void *)sub_21C5E3328();
    v80 = v46;
    if (v47)
    {
      v48 = v47;
      v49 = objc_msgSend(v47, sel_string);

      v76 = sub_21C5E3964();
      v71 = v50;

    }
    else
    {
      v76 = 0;
      v71 = 0;
    }
    v51 = *(void **)(v45 + v18[9]);
    v52 = *(_BYTE *)(v45 + v18[10]);
    v53 = v51;
    v54 = sub_21C5E3310();
    v55 = v45;
    v56 = *(_WORD *)(v45 + 16);
    v57 = *(_QWORD *)v55;
    v58 = *(_QWORD *)(v55 + 8);
    v59 = *(_BYTE *)(v55 + 18);
    v60 = v33 + *(int *)(v86 + 68);
    v61 = sub_21C5E34E4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v60, v81, v61);
    v62 = v76;
    *(_QWORD *)v33 = v80;
    *(_QWORD *)(v33 + 8) = v62;
    v63 = v74;
    *(_QWORD *)(v33 + 16) = v71;
    *(_QWORD *)(v33 + 24) = v63;
    *(_QWORD *)(v33 + 32) = v73;
    *(_QWORD *)(v33 + 40) = v51;
    *(_BYTE *)(v33 + 48) = v52;
    v64 = v72;
    *(_QWORD *)(v33 + 56) = v79;
    *(_QWORD *)(v33 + 64) = v64;
    *(_QWORD *)(v33 + 72) = v54;
    *(_WORD *)(v33 + 80) = v56;
    *(_QWORD *)(v33 + 88) = v57;
    *(_QWORD *)(v33 + 96) = v58;
    *(_BYTE *)(v33 + 104) = v78;
    *(_BYTE *)(v33 + 105) = v59;
    *(_QWORD *)(v33 + 112) = 0;
    if (*(_QWORD *)(v55 + v18[11]))
    {
      sub_21C531A4C(0, (unint64_t *)&qword_2552888B0);
      swift_retain();
      v65 = sub_21C5E3B80();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v77, v83);
      sub_21C52A88C(v55, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedMarker);

      *(_QWORD *)(v33 + 112) = v65;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v82 + 8))(v77, v83);
      sub_21C52A88C(v55, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedMarker);
    }
    v66 = v85;
    v67 = v86;
    v68 = v84;
    sub_21C529664(v33, v85, type metadata accessor for MarkerAnnotationViewModel);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v66, 0, 1, v67);
    return sub_21C52A88C(v33, type metadata accessor for MarkerAnnotationViewModel);
  }
  else
  {
    sub_21C52A88C((uint64_t)v17, type metadata accessor for MapContentList.Item.Content);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v85, 1, 1, v86);
  }
}

uint64_t sub_21C56D15C@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;

  v39 = a4;
  v42 = a2;
  v8 = sub_21C5E3BB0();
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v39 - v12;
  v14 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ResolvedUserAnnotation();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MapContentList.Item(0);
  sub_21C529664((uint64_t)a1 + *(int *)(v20 + 24), (uint64_t)v16, type metadata accessor for MapContentList.Item.Content);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_21C52AAD4((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedUserAnnotation);
    v21 = (uint64_t)v39;
    v39 = (char *)a1 + *(int *)(v20 + 28);
    sub_21C5AE7C0(a3, v21, v22, (uint64_t)v13);
    v23 = *a1;
    v25 = *((_QWORD *)v19 + 2);
    v24 = *((_QWORD *)v19 + 3);
    v26 = *(_QWORD *)v19;
    v27 = *((_QWORD *)v19 + 1);
    v28 = v40;
    v29 = v13;
    v30 = v41;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v11, v29, v41);
    v31 = (v42 & 1) != 0
       && (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 48))(v11, 1, a3) != 1;
    swift_bridgeObjectRetain();
    sub_21C531AAC(v25);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v30);
    v34 = v19[40];
    sub_21C52A88C((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedUserAnnotation);
    v35 = type metadata accessor for UserAnnotationViewModel(0);
    v36 = v25;
    v37 = a5 + *(int *)(v35 + 36);
    v38 = sub_21C5E34E4();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v37, v39, v38);
    *(_QWORD *)a5 = v23;
    *(_QWORD *)(a5 + 8) = v36;
    *(_QWORD *)(a5 + 16) = v24;
    *(_QWORD *)(a5 + 24) = v26;
    *(_QWORD *)(a5 + 32) = v27;
    *(_BYTE *)(a5 + 40) = v31;
    *(_BYTE *)(a5 + 41) = v34;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a5, 0, 1, v35);
  }
  else
  {
    sub_21C52A88C((uint64_t)v16, type metadata accessor for MapContentList.Item.Content);
    v32 = type metadata accessor for UserAnnotationViewModel(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a5, 1, 1, v32);
  }
}

_QWORD *sub_21C56D41C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  __int128 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v3 = *(_QWORD *)(v1 + 8) >> 62;
  if ((_DWORD)v3)
  {
    if ((_DWORD)v3 == 1)
    {
      swift_retain();
      swift_retain();
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289098);
      MEMORY[0x22077ECE0](&v13, v4);
      swift_release();
      result = (_QWORD *)swift_release();
      v6 = v14;
      *(_OWORD *)a1 = v13;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = 0;
      v7 = 1;
    }
    else
    {
      swift_retain();
      swift_retain();
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289090);
      MEMORY[0x22077ECE0](&v13, v11);
      swift_release();
      result = (_QWORD *)swift_release();
      v12 = v14;
      *(_OWORD *)a1 = v13;
      *(_OWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 32) = 0;
      v7 = 2;
    }
    *(_BYTE *)(a1 + 40) = v7;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289088);
    result = MEMORY[0x22077ECE0](&v13, v8);
    v9 = v15;
    v10 = v14;
    *(_OWORD *)a1 = v13;
    *(_OWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 32) = v9;
    *(_BYTE *)(a1 + 40) = 0;
  }
  return result;
}

void sub_21C56D55C(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;

  v3 = *v1;
  v4 = v1[1];
  if (v4 >> 62)
  {
    if (v4 >> 62 == 1)
    {
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255289098);
      MEMORY[0x22077ECE0](&v79);
      v6 = v79;
      v5 = v80;
      v8 = v81;
      v7 = v82;
      objc_msgSend(a1, sel_visibleMapRect);
      if (v6 != v12 || v5 != v9 || v8 != v10 || v7 != v11)
      {
        if (qword_2552878E0 != -1)
          swift_once();
        v16 = sub_21C5E2E18();
        __swift_project_value_buffer(v16, (uint64_t)qword_255293A40);
        v17 = sub_21C5E2E00();
        v18 = sub_21C5E3B2C();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc();
          *(double *)&v20 = COERCE_DOUBLE(swift_slowAlloc());
          *(_DWORD *)v19 = 136380675;
          v79 = *(double *)&v20;
          type metadata accessor for MKMapRect(0);
          v21 = sub_21C5E3970();
          sub_21C53083C(v21, v22, (uint64_t *)&v79);
          sub_21C5E3BC8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_21C51F000, v17, v18, "mapview -> model %{private}s", v19, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x22077FA6C](v20, -1, -1);
          MEMORY[0x22077FA6C](v19, -1, -1);
        }

        objc_msgSend(a1, sel_visibleMapRect);
LABEL_40:
        v79 = *(double *)&v23;
        v80 = v24;
        v81 = v25;
        v82 = v26;
        sub_21C5E37CC();
LABEL_41:
        swift_release();
        swift_release();
        return;
      }
      if (qword_2552878E0 != -1)
        swift_once();
      v74 = sub_21C5E2E18();
      __swift_project_value_buffer(v74, (uint64_t)qword_255293A40);
      v42 = sub_21C5E2E00();
      v57 = sub_21C5E3B2C();
      if (os_log_type_enabled(v42, v57))
      {
        v58 = (uint8_t *)swift_slowAlloc();
        *(double *)&v59 = COERCE_DOUBLE(swift_slowAlloc());
        *(_DWORD *)v58 = 136380675;
        v79 = *(double *)&v59;
        type metadata accessor for MKMapRect(0);
        goto LABEL_51;
      }
    }
    else
    {
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_255289090);
      MEMORY[0x22077ECE0](&v79);
      v49 = v79;
      v48 = v80;
      v51 = v81;
      v50 = v82;
      objc_msgSend(a1, sel_region);
      if (vabdd_f64(v49, v55) >= 0.00000000999999994
        || vabdd_f64(v48, v52) >= 0.00000000999999994
        || vabdd_f64(v51, v53) >= 0.00000000999999994
        || vabdd_f64(v50, v54) >= 0.00000000999999994)
      {
        if (qword_2552878E0 != -1)
          swift_once();
        v60 = sub_21C5E2E18();
        __swift_project_value_buffer(v60, (uint64_t)qword_255293A40);
        v61 = sub_21C5E2E00();
        v62 = sub_21C5E3B2C();
        if (os_log_type_enabled(v61, v62))
        {
          v63 = (uint8_t *)swift_slowAlloc();
          *(double *)&v64 = COERCE_DOUBLE(swift_slowAlloc());
          *(_DWORD *)v63 = 136380675;
          v79 = *(double *)&v64;
          type metadata accessor for MKCoordinateRegion(0);
          v65 = sub_21C5E3970();
          sub_21C53083C(v65, v66, (uint64_t *)&v79);
          sub_21C5E3BC8();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_21C51F000, v61, v62, "mapview -> model %{private}s", v63, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x22077FA6C](v64, -1, -1);
          MEMORY[0x22077FA6C](v63, -1, -1);
        }

        objc_msgSend(a1, sel_region);
        goto LABEL_40;
      }
      if (qword_2552878E0 != -1)
        swift_once();
      v56 = sub_21C5E2E18();
      __swift_project_value_buffer(v56, (uint64_t)qword_255293A40);
      v42 = sub_21C5E2E00();
      v57 = sub_21C5E3B2C();
      if (os_log_type_enabled(v42, v57))
      {
        v58 = (uint8_t *)swift_slowAlloc();
        *(double *)&v59 = COERCE_DOUBLE(swift_slowAlloc());
        *(_DWORD *)v58 = 136380675;
        v79 = *(double *)&v59;
        type metadata accessor for MKCoordinateRegion(0);
LABEL_51:
        v75 = sub_21C5E3970();
        sub_21C53083C(v75, v76, (uint64_t *)&v79);
        sub_21C5E3BC8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_21C51F000, v42, v57, "mapview == model %{private}s", v58, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22077FA6C](v59, -1, -1);
        MEMORY[0x22077FA6C](v58, -1, -1);
        swift_release();
        swift_release();
LABEL_53:

        return;
      }
    }

    goto LABEL_41;
  }
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255289088);
  MEMORY[0x22077ECE0](&v79);
  v27 = v79;
  v28 = v80;
  v29 = v82;
  v77 = v81;
  v78 = v83;
  v30 = objc_msgSend(a1, sel_camera);
  objc_msgSend(v30, sel_centerCoordinate);
  v32 = v31;
  v34 = v33;
  objc_msgSend(v30, sel_centerCoordinateDistance);
  v36 = v35;
  objc_msgSend(v30, sel_heading);
  v38 = v37;
  objc_msgSend(v30, sel_pitch);
  v40 = v39;

  if (v27 == v32 && v28 == v34 && v29 == v38 && v78 == v40 && v77 == v36)
  {
    if (qword_2552878E0 != -1)
      swift_once();
    v41 = sub_21C5E2E18();
    __swift_project_value_buffer(v41, (uint64_t)qword_255293A40);
    v42 = sub_21C5E2E00();
    v43 = sub_21C5E3B2C();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(double *)&v45 = COERCE_DOUBLE(swift_slowAlloc());
      v79 = *(double *)&v45;
      *(_DWORD *)v44 = 136380675;
      v46 = sub_21C5E3970();
      sub_21C53083C(v46, v47, (uint64_t *)&v79);
      sub_21C5E3BC8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_21C51F000, v42, v43, "mapview == model %{private}s", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22077FA6C](v45, -1, -1);
      MEMORY[0x22077FA6C](v44, -1, -1);

      sub_21C56C124(v3, v4);
      return;
    }
    sub_21C56C124(v3, v4);
    goto LABEL_53;
  }
  if (qword_2552878E0 != -1)
    swift_once();
  v67 = sub_21C5E2E18();
  __swift_project_value_buffer(v67, (uint64_t)qword_255293A40);
  v68 = sub_21C5E2E00();
  v69 = sub_21C5E3B2C();
  if (os_log_type_enabled(v68, v69))
  {
    v70 = (uint8_t *)swift_slowAlloc();
    *(double *)&v71 = COERCE_DOUBLE(swift_slowAlloc());
    v79 = *(double *)&v71;
    *(_DWORD *)v70 = 136380675;
    v72 = sub_21C5E3970();
    sub_21C53083C(v72, v73, (uint64_t *)&v79);
    sub_21C5E3BC8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_21C51F000, v68, v69, "mapview -> model %{private}s", v70, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22077FA6C](v71, -1, -1);
    MEMORY[0x22077FA6C](v70, -1, -1);
  }

  v79 = v32;
  v80 = v34;
  v81 = v36;
  v82 = v38;
  v83 = v40;
  sub_21C5E37CC();
  sub_21C56C124(v3, v4);
}

uint64_t sub_21C56E0B8(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_BYTE *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_BYTE *)(a1 + 112);
  swift_bridgeObjectRelease();
  swift_release();
  sub_21C531AC8(v2, v3);
  sub_21C531AC8(v4, v5);
  return a1;
}

id sub_21C56E124(id result, void *a2)
{
  id v2;
  id v3;

  if (result != (id)1)
  {
    v3 = result;
    v2 = a2;
    return v3;
  }
  return result;
}

uint64_t sub_21C56E154(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_21C56ECD8(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_21C56E1BC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_21C56E1BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  double *v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  double *__dst;

  v3 = a1[1];
  result = sub_21C5E3DA8();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v89 = *a1;
      v90 = -1;
      v91 = 1;
      v92 = *a1;
      do
      {
        v93 = *(double *)(v89 + 32 * v91);
        v94 = v90;
        v95 = v92;
        do
        {
          if (v93 >= *(double *)v95)
            break;
          if (!v89)
            goto LABEL_141;
          v96 = *(_QWORD *)(v95 + 56);
          v97 = *(_OWORD *)(v95 + 40);
          v98 = *(_OWORD *)(v95 + 16);
          *(_OWORD *)(v95 + 32) = *(_OWORD *)v95;
          *(_OWORD *)(v95 + 48) = v98;
          *(double *)v95 = v93;
          *(_OWORD *)(v95 + 8) = v97;
          *(_QWORD *)(v95 + 24) = v96;
          v95 -= 32;
        }
        while (!__CFADD__(v94++, 1));
        ++v91;
        v92 += 32;
        --v90;
      }
      while (v91 != v3);
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v109 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v100 = v12;
      v111 = v9;
      if (v13 >= 2)
      {
        v101 = *v109;
        do
        {
          v102 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v101)
            goto LABEL_145;
          v103 = v100;
          v104 = *(_QWORD *)&v100[16 * v102 + 32];
          v105 = *(_QWORD *)&v100[16 * v13 + 24];
          sub_21C56E8AC((double *)(v101 + 32 * v104), (double *)(v101 + 32 * *(_QWORD *)&v100[16 * v13 + 16]), v101 + 32 * v105, __dst);
          if (v1)
            break;
          if (v105 < v104)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v103 = sub_21C56ECC4((uint64_t)v103);
          if (v102 >= *((_QWORD *)v103 + 2))
            goto LABEL_134;
          v106 = &v103[16 * v102 + 32];
          *(_QWORD *)v106 = v104;
          *((_QWORD *)v106 + 1) = v105;
          v107 = *((_QWORD *)v103 + 2);
          if (v13 > v107)
            goto LABEL_135;
          memmove(&v103[16 * v13 + 16], &v103[16 * v13 + 32], 16 * (v107 - v13));
          v100 = v103;
          *((_QWORD *)v103 + 2) = v107 - 1;
          v13 = v107 - 1;
        }
        while (v107 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v111 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v111 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    type metadata accessor for MKMapRect(0);
    v8 = sub_21C5E3A24();
    *(_QWORD *)(v8 + 16) = v7;
    v111 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v110 = *a1 + 64;
  v108 = *a1 + 24;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v112 = v6;
  v113 = v3;
  v114 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 32 * v10);
      v16 = 32 * v14;
      v17 = *(double *)(v11 + 32 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (double *)(v110 + 32 * v14);
        v19 = v15;
        while (1)
        {
          v20 = v19;
          v19 = *v18;
          if (v15 < v17 == *v18 >= v20)
            break;
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v21 = 32 * v10;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = (_OWORD *)(v11 + v16);
              v25 = v11 + v21;
              v26 = *(_OWORD *)(v11 + v16);
              v27 = *(_OWORD *)(v11 + v16 + 16);
              v28 = *(_OWORD *)(v11 + v21 - 16);
              *v24 = *(_OWORD *)(v11 + v21 - 32);
              v24[1] = v28;
              *(_OWORD *)(v25 - 32) = v26;
              *(_OWORD *)(v25 - 16) = v27;
            }
            ++v23;
            v21 -= 32;
            v16 += 32;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v29 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v29 >= v3)
      v29 = v3;
    if (v29 < v14)
      break;
    if (v10 != v29)
    {
      v30 = v108 + 32 * v10;
      do
      {
        v31 = *(double *)(v11 + 32 * v10);
        v32 = v14;
        v33 = v30;
        do
        {
          v34 = (__int128 *)(v33 - 56);
          if (v31 >= *(double *)(v33 - 56))
            break;
          if (!v11)
            goto LABEL_142;
          v36 = *v34;
          v35 = *(_OWORD *)(v33 - 40);
          *(_QWORD *)(v33 - 32) = *(_QWORD *)v33;
          v33 -= 32;
          v37 = *(_OWORD *)(v33 + 16);
          v34[2] = v36;
          v34[3] = v35;
          *(double *)(v33 - 24) = v31;
          *(_OWORD *)(v33 - 16) = v37;
          ++v32;
        }
        while (v10 != v32);
        ++v10;
        v30 += 32;
      }
      while (v10 != v29);
      v10 = v29;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_21C56EB24(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v39 = *((_QWORD *)v12 + 2);
    v38 = *((_QWORD *)v12 + 3);
    v13 = v39 + 1;
    v11 = v114;
    if (v39 >= v38 >> 1)
    {
      v88 = sub_21C56EB24((char *)(v38 > 1), v39 + 1, 1, v12);
      v11 = v114;
      v12 = v88;
    }
    *((_QWORD *)v12 + 2) = v13;
    v40 = v12 + 32;
    v41 = &v12[16 * v39 + 32];
    *(_QWORD *)v41 = v14;
    *((_QWORD *)v41 + 1) = v10;
    if (v39)
    {
      while (1)
      {
        v42 = v13 - 1;
        if (v13 >= 4)
        {
          v47 = &v40[16 * v13];
          v48 = *((_QWORD *)v47 - 8);
          v49 = *((_QWORD *)v47 - 7);
          v53 = __OFSUB__(v49, v48);
          v50 = v49 - v48;
          if (v53)
            goto LABEL_120;
          v52 = *((_QWORD *)v47 - 6);
          v51 = *((_QWORD *)v47 - 5);
          v53 = __OFSUB__(v51, v52);
          v45 = v51 - v52;
          v46 = v53;
          if (v53)
            goto LABEL_121;
          v54 = v13 - 2;
          v55 = &v40[16 * v13 - 32];
          v57 = *(_QWORD *)v55;
          v56 = *((_QWORD *)v55 + 1);
          v53 = __OFSUB__(v56, v57);
          v58 = v56 - v57;
          if (v53)
            goto LABEL_123;
          v53 = __OFADD__(v45, v58);
          v59 = v45 + v58;
          if (v53)
            goto LABEL_126;
          if (v59 >= v50)
          {
            v77 = &v40[16 * v42];
            v79 = *(_QWORD *)v77;
            v78 = *((_QWORD *)v77 + 1);
            v53 = __OFSUB__(v78, v79);
            v80 = v78 - v79;
            if (v53)
              goto LABEL_130;
            v70 = v45 < v80;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v71 = *((_QWORD *)v12 + 4);
            v72 = *((_QWORD *)v12 + 5);
            v53 = __OFSUB__(v72, v71);
            v64 = v72 - v71;
            v65 = v53;
            goto LABEL_77;
          }
          v44 = *((_QWORD *)v12 + 4);
          v43 = *((_QWORD *)v12 + 5);
          v53 = __OFSUB__(v43, v44);
          v45 = v43 - v44;
          v46 = v53;
        }
        if ((v46 & 1) != 0)
          goto LABEL_122;
        v54 = v13 - 2;
        v60 = &v40[16 * v13 - 32];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        v63 = __OFSUB__(v61, v62);
        v64 = v61 - v62;
        v65 = v63;
        if (v63)
          goto LABEL_125;
        v66 = &v40[16 * v42];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v53 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v53)
          goto LABEL_128;
        if (__OFADD__(v64, v69))
          goto LABEL_129;
        if (v64 + v69 >= v45)
        {
          v70 = v45 < v69;
LABEL_83:
          if (v70)
            v42 = v54;
          goto LABEL_85;
        }
LABEL_77:
        if ((v65 & 1) != 0)
          goto LABEL_124;
        v73 = &v40[16 * v42];
        v75 = *(_QWORD *)v73;
        v74 = *((_QWORD *)v73 + 1);
        v53 = __OFSUB__(v74, v75);
        v76 = v74 - v75;
        if (v53)
          goto LABEL_127;
        if (v76 < v64)
          goto LABEL_15;
LABEL_85:
        v81 = v42 - 1;
        if (v42 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v82 = v12;
        v83 = &v40[16 * v81];
        v84 = *(_QWORD *)v83;
        v85 = &v40[16 * v42];
        v86 = *((_QWORD *)v85 + 1);
        sub_21C56E8AC((double *)(v11 + 32 * *(_QWORD *)v83), (double *)(v11 + 32 * *(_QWORD *)v85), v11 + 32 * v86, __dst);
        if (v1)
          goto LABEL_93;
        if (v86 < v84)
          goto LABEL_117;
        if (v42 > *((_QWORD *)v82 + 2))
          goto LABEL_118;
        *(_QWORD *)v83 = v84;
        *(_QWORD *)&v40[16 * v81 + 8] = v86;
        v87 = *((_QWORD *)v82 + 2);
        if (v42 >= v87)
          goto LABEL_119;
        v12 = v82;
        v13 = v87 - 1;
        memmove(&v40[16 * v42], v85 + 16, 16 * (v87 - 1 - v42));
        *((_QWORD *)v82 + 2) = v87 - 1;
        v11 = v114;
        if (v87 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v112;
    v3 = v113;
    if (v10 >= v113)
    {
      v9 = v111;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_21C5E3D3C();
  __break(1u);
  return result;
}

uint64_t sub_21C56E8AC(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  __int128 v16;
  __int128 v17;
  double *v18;
  double *v19;
  double *v20;
  double *v21;
  double v22;
  __int128 v23;
  __int128 v24;
  uint64_t result;
  double *v26;
  double *v27;
  double *v28;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v28 = __src;
  v27 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[4 * v13] <= __dst)
        memmove(__dst, a2, 32 * v13);
      v18 = &v4[4 * v13];
      v26 = v18;
      v28 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        v19 = (double *)(a3 - 32);
        v20 = v6;
        while (1)
        {
          v21 = v19 + 4;
          v22 = *(v20 - 4);
          v20 -= 4;
          if (*(v18 - 4) >= v22)
          {
            v26 = v18 - 4;
            if (v21 < v18 || v19 >= v18 || v21 != v18)
            {
              v24 = *((_OWORD *)v18 - 1);
              *(_OWORD *)v19 = *((_OWORD *)v18 - 2);
              *((_OWORD *)v19 + 1) = v24;
            }
            v20 = v6;
            v18 -= 4;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v21 != v6 || v19 >= v6)
            {
              v23 = *((_OWORD *)v20 + 1);
              *(_OWORD *)v19 = *(_OWORD *)v20;
              *((_OWORD *)v19 + 1) = v23;
            }
            v28 = v20;
            if (v20 <= v7)
              goto LABEL_42;
          }
          v19 -= 4;
          v6 = v20;
          if (v18 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[4 * v10] <= __dst)
      memmove(__dst, __src, 32 * v10);
    v14 = &v4[4 * v10];
    v26 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
          {
            v17 = *((_OWORD *)v4 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v17;
          }
          v4 += 4;
          v27 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 4;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
          {
            v16 = *((_OWORD *)v6 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v6;
            *((_OWORD *)v7 + 1) = v16;
          }
        }
        v7 += 4;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v28 = v7;
    }
LABEL_42:
    sub_21C56EC1C((void **)&v28, (const void **)&v27, &v26);
    return 1;
  }
  result = sub_21C5E3D90();
  __break(1u);
  return result;
}

char *sub_21C56EB24(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552890A0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_21C56EC1C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_21C5E3D90();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

char *sub_21C56ECC4(uint64_t a1)
{
  return sub_21C56EB24(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_21C56ECD8(uint64_t a1)
{
  return sub_21C599BA0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_21C56ECEC(void *a1, void *a2)
{
  if (a1 != (void *)1)
  {

  }
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_21C56ED74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t result;
  double v11;
  double v12;
  double *v13;
  int v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  int v22;
  double v23;
  double v24;
  double v25;
  char v27;
  uint64_t v28;

  if (!*(_QWORD *)(a1 + 16))
  {
    result = swift_bridgeObjectRelease();
LABEL_33:
    v27 = 1;
    v5 = 0.0;
    v7 = 0.0;
    v11 = 0.0;
    v12 = 0.0;
    goto LABEL_34;
  }
  v28 = a1;
  swift_bridgeObjectRetain();
  sub_21C56E154(&v28);
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v28 + 16);
  if (!v3)
  {
    result = swift_release();
    goto LABEL_33;
  }
  v5 = *(double *)(v28 + 32);
  v4 = *(double *)(v28 + 40);
  v6 = fmax(v5 + *(double *)(v28 + 48), -INFINITY);
  v7 = fmin(v4, INFINITY);
  v8 = fmax(v4 + *(double *)(v28 + 56), -INFINITY);
  v9 = v3 - 1;
  if (v9)
  {
    v13 = (double *)(v28 + 88);
    v14 = 1;
    v15 = 0.0;
    v16 = 0.0;
    do
    {
      v17 = *(v13 - 3);
      v18 = *(v13 - 2);
      v19 = *v13;
      v20 = v17 - v6;
      v21 = -INFINITY;
      if ((v14 & 1) == 0)
        v21 = v16;
      if (v21 < v20)
        v22 = 0;
      else
        v22 = v14;
      if (v21 < v20)
      {
        v23 = *(v13 - 3);
      }
      else
      {
        v20 = v16;
        v23 = v15;
      }
      if (v6 < v17)
      {
        v14 = v22;
        v16 = v20;
        v15 = v23;
      }
      v24 = v17 + *(v13 - 1);
      if (v6 <= v24)
        v6 = v24;
      if (v18 < v7)
        v7 = *(v13 - 2);
      if (v8 <= v18 + v19)
        v8 = v18 + v19;
      v13 += 4;
      --v9;
    }
    while (v9);
    result = swift_release();
    v11 = v6 - v5;
    v12 = v8 - v7;
    if ((v14 & 1) == 0)
    {
      v25 = *(double *)(MEMORY[0x24BDDAFF0] + 16);
      if (v25 - v11 < v16)
      {
        v11 = v25 - v16;
        v5 = v15;
      }
    }
  }
  else
  {
    result = swift_release();
    v11 = v6 - v5;
    v12 = v8 - v7;
  }
  if (v5 == *MEMORY[0x24BDDAFE0] && v7 == *(double *)(MEMORY[0x24BDDAFE0] + 8))
    goto LABEL_33;
  v27 = 0;
LABEL_34:
  *(double *)a2 = v5;
  *(double *)(a2 + 8) = v7;
  *(double *)(a2 + 16) = v11;
  *(double *)(a2 + 24) = v12;
  *(_BYTE *)(a2 + 32) = v27;
  return result;
}

uint64_t sub_21C56EF40(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_21C531A4C(255, a2);
    result = MEMORY[0x22077F9A0](MEMORY[0x24BEE5BD8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Region(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Region(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_21C56F018(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_21C56F020(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Region()
{
  return &type metadata for Region;
}

uint64_t sub_21C56F04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_21C56F068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  MKMapPoint v20;
  unint64_t v21;
  unint64_t v22;
  MKMapPoint *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t i;
  id v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t j;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  double v46;
  double v47;
  double v48;
  BOOL v49;
  double v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  unint64_t v60;
  unint64_t v61;
  double *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[5];
  CLLocationCoordinate2D v66;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + qword_255288E40 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_21C5B9FA4(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
    v6 = sub_21C5E3D54();
    swift_release();
  }
  else
  {
    sub_21C5E3DD8();
    v6 = v5;
  }
  swift_release();
  v7 = *(_QWORD *)(v2 + qword_255288E48 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_21C5B9FA4(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
    v9 = sub_21C5E3D54();
    swift_release();
  }
  else
  {
    sub_21C5E3DD8();
    v9 = v8;
  }
  swift_release();
  v65[0] = v6;
  sub_21C5B71C0(v9);
  v10 = v6;
  v11 = *(_QWORD *)(v2 + qword_255288E50 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_21C5B9FA4(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (v12 < 0 || (v12 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
    v13 = sub_21C5E3D54();
    swift_release();
  }
  else
  {
    sub_21C5E3DD8();
    v13 = v12;
  }
  swift_release();
  v65[0] = v10;
  result = sub_21C5B71C0(v13);
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_21C5E3D60();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v16 = MEMORY[0x24BEE4AF8];
  v63 = a1;
  v64 = v2;
  if (v15)
  {
    if (v15 < 1)
    {
      __break(1u);
      goto LABEL_104;
    }
    v17 = 0;
    v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        v19 = (void *)MEMORY[0x22077F1B4](v17, v10);
      }
      else
      {
        v19 = *(void **)(v10 + 8 * v17 + 32);
        swift_unknownObjectRetain();
      }
      objc_msgSend(v19, sel_coordinate);
      v20 = MKMapPointForCoordinate(v66);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v18 = sub_21C5B8C28(0, v18[2] + 1, 1, v18);
      v22 = v18[2];
      v21 = v18[3];
      if (v22 >= v21 >> 1)
        v18 = sub_21C5B8C28((_QWORD *)(v21 > 1), v22 + 1, 1, v18);
      ++v17;
      v18[2] = v22 + 1;
      v23 = (MKMapPoint *)&v18[4 * v22];
      v23[2] = v20;
      v23[3].x = 0.0;
      v23[3].y = 0.0;
      swift_unknownObjectRelease();
    }
    while (v15 != v17);
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v24 = v64;
  v25 = *(_QWORD *)(v64 + qword_255288E70 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_21C5B9FA4(v25);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v65[0] = v16;
  if ((v26 & 0x8000000000000000) == 0 && (v26 & 0x4000000000000000) == 0)
  {
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
      goto LABEL_28;
LABEL_43:
    swift_release();
    v31 = MEMORY[0x24BEE4AF8];
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  v27 = sub_21C5E3D60();
  result = swift_release();
  if (!v27)
    goto LABEL_43;
LABEL_28:
  if (v27 < 1)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  for (i = 0; i != v27; ++i)
  {
    if ((v26 & 0xC000000000000001) != 0)
      v29 = (id)MEMORY[0x22077F1B4](i, v26);
    else
      v29 = *(id *)(v26 + 8 * i + 32);
    v30 = v29;
    if ((uint64_t)objc_msgSend(v29, sel_pointCount) < 1)
    {

    }
    else
    {
      sub_21C5E3CB8();
      sub_21C5E3CE8();
      sub_21C5E3CF4();
      sub_21C5E3CC4();
    }
  }
  swift_release();
  v24 = v64;
  v31 = v65[0];
  v16 = MEMORY[0x24BEE4AF8];
LABEL_44:
  v32 = *(_QWORD *)(v24 + qword_255288E78 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = sub_21C5B9FA4(v32);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v65[0] = v16;
  if ((v33 & 0x8000000000000000) == 0 && (v33 & 0x4000000000000000) == 0)
  {
    v34 = *(_QWORD *)(v33 + 16);
    if (v34)
      goto LABEL_47;
LABEL_58:
    swift_release();
    v38 = MEMORY[0x24BEE4AF8];
    goto LABEL_59;
  }
  swift_bridgeObjectRetain();
  v34 = sub_21C5E3D60();
  result = swift_release();
  if (!v34)
    goto LABEL_58;
LABEL_47:
  if (v34 < 1)
  {
LABEL_105:
    __break(1u);
    return result;
  }
  for (j = 0; j != v34; ++j)
  {
    if ((v33 & 0xC000000000000001) != 0)
      v36 = (id)MEMORY[0x22077F1B4](j, v33);
    else
      v36 = *(id *)(v33 + 8 * j + 32);
    v37 = v36;
    if ((uint64_t)objc_msgSend(v36, sel_pointCount) < 1)
    {

    }
    else
    {
      sub_21C5E3CB8();
      sub_21C5E3CE8();
      sub_21C5E3CF4();
      sub_21C5E3CC4();
    }
  }
  swift_release();
  v38 = v65[0];
LABEL_59:
  swift_bridgeObjectRetain();
  if ((v31 & 0x8000000000000000) != 0 || (v31 & 0x4000000000000000) != 0)
    goto LABEL_98;
  sub_21C5E3DD8();
  v39 = v31;
LABEL_62:
  swift_release();
  swift_bridgeObjectRetain();
  if (v38 < 0 || (v38 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
    v40 = sub_21C5E3D54();
    swift_release();
  }
  else
  {
    sub_21C5E3DD8();
    v40 = v38;
  }
  swift_release();
  v65[0] = v39;
  sub_21C5B719C(v40);
  v41 = *(_QWORD *)(v64 + qword_255288E80 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v42 = sub_21C5B9FA4(v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (v42 < 0 || (v42 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
    v43 = sub_21C5E3D54();
    swift_release();
  }
  else
  {
    sub_21C5E3DD8();
    v43 = v42;
  }
  swift_release();
  v65[0] = v39;
  sub_21C5B719C(v43);
  if (v39 >> 62)
  {
    swift_bridgeObjectRetain();
    v44 = sub_21C5E3D60();
    swift_bridgeObjectRelease();
    if (v44)
      goto LABEL_70;
  }
  else
  {
    v44 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v44)
    {
LABEL_70:
      v45 = 0;
      v64 = v39 & 0xFFFFFFFFFFFFFF8;
      v46 = *MEMORY[0x24BDDAFF0];
      v47 = *(double *)(MEMORY[0x24BDDAFF0] + 16);
      v48 = *MEMORY[0x24BDDAFF0] + v47;
      do
      {
        if ((v39 & 0xC000000000000001) != 0)
        {
          v38 = MEMORY[0x22077F1B4](v45, v39);
          v49 = __OFADD__(v45++, 1);
          if (v49)
            goto LABEL_96;
        }
        else
        {
          if (v45 >= *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_97;
          v38 = *(_QWORD *)(v39 + 32 + 8 * v45);
          swift_unknownObjectRetain();
          v49 = __OFADD__(v45++, 1);
          if (v49)
          {
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __swift_instantiateConcreteTypeFromMangledName(&qword_25528A550);
            v39 = sub_21C5E3D54();
            swift_release();
            goto LABEL_62;
          }
        }
        objc_msgSend((id)v38, sel_boundingMapRect);
        v52 = v51;
        v54 = v53;
        v55 = v50;
        v57 = v56;
        v58 = v51 + v50;
        if (v52 < -v47 || v47 < v58)
        {
          if (v47 < v50)
          {
            do
              v55 = v55 - v47;
            while (v47 < v55);
            v58 = v52 + v55;
          }
          while (v48 < v58)
          {
            v52 = v52 - v47;
            v58 = v55 + v52;
          }
          while (v58 < v46)
          {
            v52 = v47 + v52;
            v58 = v55 + v52;
          }
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_21C5B8C28(0, v18[2] + 1, 1, v18);
        v61 = v18[2];
        v60 = v18[3];
        if (v61 >= v60 >> 1)
          v18 = sub_21C5B8C28((_QWORD *)(v60 > 1), v61 + 1, 1, v18);
        v18[2] = v61 + 1;
        v62 = (double *)&v18[4 * v61];
        v62[4] = v52;
        *((_QWORD *)v62 + 5) = v54;
        v62[6] = v55;
        *((_QWORD *)v62 + 7) = v57;
        swift_unknownObjectRelease();
      }
      while (v45 != v44);
    }
  }
  swift_bridgeObjectRelease();
  sub_21C56ED74((uint64_t)v18, (uint64_t)v65);
  return sub_21C52DB08((uint64_t)v65, v63, (uint64_t *)&unk_255289580);
}

uint64_t sub_21C56F940(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  void *v5;
  id v6;

  result = sub_21C589A78(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = (void *)sub_21C589C84(result, v3, 0, a1);
  v6 = v5;
  return (uint64_t)v5;
}

uint64_t sub_21C56F9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  result = sub_21C589B28(a1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v7 = type metadata accessor for UserAnnotationViewModel(0);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 1;
  }
  else
  {
    sub_21C589BB0(result, v5, a1, a2);
    v7 = type metadata accessor for UserAnnotationViewModel(0);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 0;
  }
  return v8(v9, v10, 1, v7);
}

void sub_21C56FA4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t KeyPath;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[16];

  v6 = sub_21C553960(a1, a2, a3, a4, a5);
  v14 = sub_21C531A4C(0, (unint64_t *)&unk_255289520);
  v15 = type metadata accessor for CustomAnnotationViewModel(0);
  v16 = sub_21C597070(&qword_255288CF0, 255, type metadata accessor for CustomAnnotationViewModel, (uint64_t)&unk_21C5E7BC4);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v8 = sub_21C5606DC(v6, KeyPath, (uint64_t)v18, &qword_255288CF8, type metadata accessor for CustomAnnotationViewModel);
  swift_bridgeObjectRelease();
  swift_release_n();
  v17 = MEMORY[0x24BEE4AF8];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_21C5E3D60();
    swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x24BEE4AF8];
    goto LABEL_12;
  }
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    goto LABEL_11;
LABEL_3:
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  v10 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0)
      MEMORY[0x22077F1B4](v10, v8);
    else
      v11 = *(id *)(v8 + 8 * v10 + 32);
    ++v10;
    sub_21C5E3CB8();
    sub_21C5E3CE8();
    sub_21C5E3CF4();
    sub_21C5E3CC4();
  }
  while (v9 != v10);
  swift_bridgeObjectRelease();
  v12 = v17;
LABEL_12:
  swift_bridgeObjectRetain();
  if (v12 < 0 || (v12 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
    sub_21C5E3D54();
    swift_release();
  }
  else
  {
    sub_21C5E3DD8();
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
  v13 = (void *)sub_21C5E39D0();
  objc_msgSend(a1, sel_addAnnotations_, v13, v14, v15, &off_24E057E28, v16);
  swift_bridgeObjectRelease();

}

void sub_21C56FCA4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t KeyPath;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[16];

  v6 = sub_21C551AD8(a1, a2, a3, a4, a5);
  v14 = sub_21C531A4C(0, (unint64_t *)&unk_255289520);
  v15 = type metadata accessor for MarkerAnnotationViewModel(0);
  v16 = sub_21C597070((unint64_t *)&unk_255288CB0, 255, type metadata accessor for MarkerAnnotationViewModel, (uint64_t)&unk_21C5E7B54);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v8 = sub_21C5606DC(v6, KeyPath, (uint64_t)v18, &qword_25528A520, type metadata accessor for MarkerAnnotationViewModel);
  swift_bridgeObjectRelease();
  swift_release_n();
  v17 = MEMORY[0x24BEE4AF8];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_21C5E3D60();
    swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x24BEE4AF8];
    goto LABEL_12;
  }
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    goto LABEL_11;
LABEL_3:
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  v10 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0)
      MEMORY[0x22077F1B4](v10, v8);
    else
      v11 = *(id *)(v8 + 8 * v10 + 32);
    ++v10;
    sub_21C5E3CB8();
    sub_21C5E3CE8();
    sub_21C5E3CF4();
    sub_21C5E3CC4();
  }
  while (v9 != v10);
  swift_bridgeObjectRelease();
  v12 = v17;
LABEL_12:
  swift_bridgeObjectRetain();
  if (v12 < 0 || (v12 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
    sub_21C5E3D54();
    swift_release();
  }
  else
  {
    sub_21C5E3DD8();
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
  v13 = (void *)sub_21C5E39D0();
  objc_msgSend(a1, sel_addAnnotations_, v13, v14, v15, &off_24E057E28, v16);
  swift_bridgeObjectRelease();

}

void sub_21C56FEFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t KeyPath;
  unint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[16];

  v6 = sub_21C5500C8(a1, a2, a3, a4, a5);
  v12 = sub_21C531A4C(0, (unint64_t *)&unk_255289520);
  v13 = type metadata accessor for UserAnnotationViewModel(0);
  v14 = sub_21C597070(&qword_255288C60, 255, type metadata accessor for UserAnnotationViewModel, (uint64_t)&unk_21C5E7AE4);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v8 = sub_21C5606DC(v6, KeyPath, (uint64_t)v15, &qword_255288C68, type metadata accessor for UserAnnotationViewModel);
  swift_bridgeObjectRelease();
  swift_release_n();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_21C5E3D60();
    swift_bridgeObjectRelease();
    if (!v9)
      goto LABEL_9;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v9)
      goto LABEL_9;
  }
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0)
    {
      MEMORY[0x22077F1B4](i, v8);
      swift_unknownObjectRelease();
    }
  }
LABEL_9:
  swift_bridgeObjectRelease();
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
    sub_21C5E3D54();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
  v11 = (void *)sub_21C5E39D0();
  objc_msgSend(a1, sel_addAnnotations_, v11, v12, v13, &off_24E057E28, v14);
  swift_bridgeObjectRelease();

}

void sub_21C5700D4(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  char *v16;
  id v17;
  uint64_t v18;
  id v19;
  _QWORD v20[2];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C70);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UserAnnotationViewModel(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v19 = a3;
    if (objc_msgSend(v19, sel_showsUserLocation) && (v14 = *(void **)(v3 + qword_255288E68)) != 0)
    {
      sub_21C56F9AC(*(_QWORD *)(v3 + qword_255288E58 + 16), (uint64_t)v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {

        sub_21C524980((uint64_t)v9, &qword_255288C70);
      }
      else
      {
        sub_21C52AAD4((uint64_t)v9, (uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
        v20[0] = a1;
        v20[1] = a2;
        v15 = a2;
        v16 = v14;
        v17 = a1;
        sub_21C568AFC(v16, (uint64_t)v20);

        sub_21C52A88C((uint64_t)v13, type metadata accessor for UserAnnotationViewModel);
      }
    }
    else
    {

    }
  }
}

id sub_21C570294(uint64_t a1, id a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  unint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  uint64_t (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  id v77;
  id v78;
  void *v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  void *v94;
  id v95;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C70);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v99 = (uint64_t)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v100 = (uint64_t)&v97 - v9;
  v103 = type metadata accessor for UserAnnotationViewModel(0);
  v110 = *(_QWORD *)(v103 - 8);
  v10 = MEMORY[0x24BDAC7A8](v103);
  v97 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v98 = (char *)&v97 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D00);
  MEMORY[0x24BDAC7A8](v13);
  v109 = (uint64_t)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CustomAnnotationViewModel(0);
  v107 = *(_QWORD *)(v15 - 8);
  v108 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v102 = (uint64_t)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CC0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v97 - v21;
  v23 = type metadata accessor for MarkerAnnotationViewModel(0);
  v24 = *(_QWORD **)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v101 = (uint64_t)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v97 - v27;
  type metadata accessor for MapBridgingMarker();
  v29 = swift_dynamicCastClass();
  if (v29)
  {
    v30 = v29;
    v105 = a2;
    v31 = *(_QWORD *)(v2 + qword_255288E50 + 16);
    v32 = *(_QWORD *)(v31 + 16);
    v106 = a1;
    v104 = v3;
    if (v32)
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33 = sub_21C5310EC(v30);
      if ((v34 & 1) != 0)
      {
        sub_21C529664(*(_QWORD *)(v31 + 56) + v24[9] * v33, (uint64_t)v22, type metadata accessor for MarkerAnnotationViewModel);
        v35 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v24[7];
        v35(v22, 0, 1, v23);
      }
      else
      {
        v35 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v24[7];
        v35(v22, 1, 1, v23);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v24[7];
      v35(v22, 1, 1, v23);
      swift_unknownObjectRetain();
    }
    v36 = (unsigned int (*)(char *, uint64_t, uint64_t))v24[6];
    if (v36(v22, 1, v23) != 1)
    {
      sub_21C52AAD4((uint64_t)v22, (uint64_t)v28, type metadata accessor for MarkerAnnotationViewModel);
      if (v105)
      {
        v42 = v105;
        v43 = (void *)sub_21C5E3940();
        v44 = objc_msgSend(v42, sel_dequeueReusableAnnotationViewWithIdentifier_forAnnotation_, v43, v30);

        objc_opt_self();
        v45 = (id)swift_dynamicCastObjCClassUnconditional();
      }
      else
      {
        sub_21C531A4C(0, &qword_255289DA0);
        v46 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        swift_unknownObjectRetain();
        v47 = (void *)sub_21C5E3940();
        v45 = objc_msgSend(v46, sel_initWithAnnotation_reuseIdentifier_, v30, v47);

        swift_unknownObjectRelease();
      }
      sub_21C568894(v45, 0);
      swift_unknownObjectRelease();
      v48 = type metadata accessor for MarkerAnnotationViewModel;
      v49 = (uint64_t)v28;
      goto LABEL_43;
    }
    swift_unknownObjectRelease();
    sub_21C524980((uint64_t)v22, &qword_255288CC0);
    v37 = *(_QWORD *)(v104 + qword_255288E48 + 16);
    if (*(_QWORD *)(v37 + 16))
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38 = sub_21C5310EC(v30);
      if ((v39 & 1) != 0)
      {
        sub_21C529664(*(_QWORD *)(v37 + 56) + v24[9] * v38, (uint64_t)v20, type metadata accessor for MarkerAnnotationViewModel);
        v40 = v20;
        v41 = 0;
      }
      else
      {
        v40 = v20;
        v41 = 1;
      }
      v35(v40, v41, 1, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v35(v20, 1, 1, v23);
      swift_unknownObjectRetain();
    }
    v3 = v104;
    if (v36(v20, 1, v23) != 1)
    {
      v61 = v101;
      sub_21C52AAD4((uint64_t)v20, v101, type metadata accessor for MarkerAnnotationViewModel);
      if (v105)
      {
        v62 = v105;
        v63 = (void *)sub_21C5E3940();
        v64 = objc_msgSend(v62, sel_dequeueReusableAnnotationViewWithIdentifier_forAnnotation_, v63, v30);

        objc_opt_self();
        v45 = (id)swift_dynamicCastObjCClassUnconditional();
      }
      else
      {
        sub_21C531A4C(0, &qword_255289DA0);
        v78 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
        swift_unknownObjectRetain();
        v79 = (void *)sub_21C5E3940();
        v45 = objc_msgSend(v78, sel_initWithAnnotation_reuseIdentifier_, v30, v79);

        swift_unknownObjectRelease();
      }
      sub_21C568894(v45, 0);
      swift_unknownObjectRelease();
      v48 = type metadata accessor for MarkerAnnotationViewModel;
      v49 = v61;
      goto LABEL_43;
    }
    swift_unknownObjectRelease();
    sub_21C524980((uint64_t)v20, &qword_255288CC0);
    a2 = v105;
  }
  type metadata accessor for MapBridgingCustomAnnotation();
  v50 = swift_dynamicCastClass();
  v51 = v110;
  if (v50)
  {
    v52 = v50;
    v53 = *(_QWORD *)(v3 + qword_255288E40 + 16);
    if (*(_QWORD *)(v53 + 16))
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54 = sub_21C531130(v52);
      v56 = v107;
      if ((v55 & 1) != 0)
      {
        v57 = v109;
        sub_21C529664(*(_QWORD *)(v53 + 56) + *(_QWORD *)(v107 + 72) * v54, v109, type metadata accessor for CustomAnnotationViewModel);
        v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56);
        v59 = v57;
        v60 = 0;
      }
      else
      {
        v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56);
        v57 = v109;
        v59 = v109;
        v60 = 1;
      }
      v65 = v108;
      v58(v59, v60, 1, v108);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v56 = v107;
      v65 = v108;
      v57 = v109;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v107 + 56))(v109, 1, 1, v108);
      swift_unknownObjectRetain();
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v57, 1, v65) == 1)
    {
      swift_unknownObjectRelease();
      sub_21C524980(v57, &qword_255288D00);
      goto LABEL_32;
    }
    v73 = v57;
    v74 = v102;
    sub_21C52AAD4(v73, v102, type metadata accessor for CustomAnnotationViewModel);
    if (a2)
    {
      v75 = a2;
      v76 = (void *)sub_21C5E3940();
      v77 = objc_msgSend(v75, sel_dequeueReusableAnnotationViewWithIdentifier_forAnnotation_, v76, v52);

      type metadata accessor for SwiftUIAnnotationView();
      v45 = (id)swift_dynamicCastClassUnconditional();
    }
    else
    {
      type metadata accessor for SwiftUIAnnotationView();
      v80 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      swift_unknownObjectRetain();
      v81 = (void *)sub_21C5E3940();
      v45 = objc_msgSend(v80, sel_initWithAnnotation_reuseIdentifier_, v52, v81);

      swift_unknownObjectRelease();
    }
    sub_21C568604((char *)v45, 0);
    swift_unknownObjectRelease();
    v48 = type metadata accessor for CustomAnnotationViewModel;
    v49 = v74;
LABEL_43:
    sub_21C52A88C(v49, v48);
    return v45;
  }
LABEL_32:
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v66 = *(_QWORD *)(v3 + qword_255288E60 + 16);
    v67 = sub_21C56F940(v66);
    if (v67)
    {
      v68 = (void *)v67;
      if (*(_QWORD *)(v66 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v69 = sub_21C5310A8((uint64_t)v68);
        if ((v70 & 1) != 0)
        {
          v71 = v100;
          sub_21C529664(*(_QWORD *)(v66 + 56) + *(_QWORD *)(v51 + 72) * v69, v100, type metadata accessor for UserAnnotationViewModel);
          v72 = 0;
        }
        else
        {
          v72 = 1;
          v71 = v100;
        }
        v82 = v103;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v71, v72, 1, v103);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v71, 1, v82) != 1)
        {
          v89 = v71;
          v90 = (uint64_t)v98;
          goto LABEL_59;
        }
      }
      else
      {
        v71 = v100;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v100, 1, 1, v103);
      }

      sub_21C524980(v71, &qword_255288C70);
    }
    v83 = *(_QWORD *)(v3 + qword_255288E58 + 16);
    v84 = sub_21C56F940(v83);
    if (v84)
    {
      v68 = (void *)v84;
      if (!*(_QWORD *)(v83 + 16))
      {
        v87 = v99;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v99, 1, 1, v103);
LABEL_57:

        sub_21C524980(v87, &qword_255288C70);
        return 0;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v85 = sub_21C5310A8((uint64_t)v68);
      if ((v86 & 1) != 0)
      {
        v87 = v99;
        sub_21C529664(*(_QWORD *)(v83 + 56) + *(_QWORD *)(v51 + 72) * v85, v99, type metadata accessor for UserAnnotationViewModel);
        v88 = 0;
      }
      else
      {
        v88 = 1;
        v87 = v99;
      }
      v91 = v103;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v87, v88, 1, v103);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v87, 1, v91) == 1)
        goto LABEL_57;
      v89 = v87;
      v90 = (uint64_t)v97;
LABEL_59:
      sub_21C52AAD4(v89, v90, type metadata accessor for UserAnnotationViewModel);
      v92 = sub_21C568C18(v68, a2);
      v93 = qword_255288E68;
      v94 = *(void **)(v3 + qword_255288E68);
      *(_QWORD *)(v3 + qword_255288E68) = v92;

      sub_21C52A88C(v90, type metadata accessor for UserAnnotationViewModel);
      v45 = *(id *)(v3 + v93);
      v95 = v45;
      return v45;
    }
  }
  return 0;
}

void sub_21C570E28(uint64_t a1@<X8>)
{
  sub_21C5E3778();
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 56) = 1;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_BYTE *)(a1 + 96) = 0;
  type metadata accessor for MapContentView();
}

void sub_21C570EC8()
{
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C570EF8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v8 = sub_21C5E37F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_21C58B668(v0, v1, 0, 0);
  v9 = v3 + *(int *)(v5 + 64);
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)v3 = v4;
  *(_BYTE *)(v3 + 24) = 0;
  sub_21C58B624(v13, v6, qword_2552890F0);
  *(_QWORD *)(v3 + 104) = v12;
  v10 = sub_21C5E3BB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v7, v14, v10);
  *(_QWORD *)v9 = v15;
  *(_BYTE *)(v9 + 8) = v16 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v3 + *(int *)(v5 + 68), v17, v2);
}

void sub_21C570FE8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_21C5E3778();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 1;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_BYTE *)(a1 + 96) = 0;
  type metadata accessor for MapContentView();
}

void sub_21C57109C()
{
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C5710CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v8 = sub_21C5E37F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v1, 1, 1, v8);
  v9 = v3 + *(int *)(v5 + 64);
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  if (v4)
  {
    sub_21C58B668(v7, v0, 0, 0);
    *(_QWORD *)v3 = v13;
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v12;
    *(_BYTE *)(v3 + 24) = 1;
  }
  sub_21C58B624(v15, v6, qword_2552890F0);
  *(_QWORD *)(v3 + 104) = v14;
  v10 = sub_21C5E3BB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v1, v16, v10);
  *(_QWORD *)v9 = v17;
  *(_BYTE *)(v9 + 8) = v18 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v3 + *(int *)(v5 + 68), v19, v2);
}

void sub_21C5711CC(uint64_t a1@<X8>)
{
  sub_21C5E3778();
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 56) = 1;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_BYTE *)(a1 + 96) = 0;
  type metadata accessor for MapSelectableContentView();
}

void sub_21C57126C()
{
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C571290()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v8 = sub_21C5E37F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_21C58B668(v0, v2, 0, 0);
  v9 = v3 + *(int *)(v5 + 64);
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  *(_QWORD *)(v3 + 8) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)v3 = v4;
  *(_BYTE *)(v3 + 24) = 0;
  sub_21C58B624(v13, v6, qword_2552890F0);
  *(_QWORD *)(v3 + 104) = v12;
  v10 = sub_21C5E3BB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v7, v14, v10);
  *(_QWORD *)v9 = v15;
  *(_BYTE *)(v9 + 8) = v16 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(v5 + 68), v17, v1);
}

void sub_21C571380(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_21C5E3778();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 1;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_BYTE *)(a1 + 96) = 0;
  type metadata accessor for MapSelectableContentView();
}

void sub_21C571434()
{
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C571458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v8 = sub_21C5E37F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v1, 1, 1, v8);
  v9 = v3 + *(int *)(v5 + 64);
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  if (v4)
  {
    sub_21C58B668(v7, v0, 0, 0);
    *(_QWORD *)v3 = v13;
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v12;
    *(_BYTE *)(v3 + 24) = 1;
  }
  sub_21C58B624(v15, v6, qword_2552890F0);
  *(_QWORD *)(v3 + 104) = v14;
  v10 = sub_21C5E3BB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v1, v16, v10);
  *(_QWORD *)v9 = v17;
  *(_BYTE *)(v9 + 8) = v18 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v3 + *(int *)(v5 + 68), v19, v2);
}

void MapSelectableContentView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[10];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[8] = a2;
  v2 = *(_QWORD *)(a1 + 24);
  v7[7] = *(_QWORD *)(v2 - 8);
  v7[1] = v2;
  v3 = MEMORY[0x24BDAC7A8](a1);
  v7[6] = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v3 + 32);
  v6 = *(_QWORD *)(v5 + 8);
  v8 = *(_QWORD *)(v3 + 16);
  v9 = v8;
  v10 = v6;
  v11 = v5;
  v7[4] = v5;
  v7[5] = v6;
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C5715F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_21C5E37F0();
  v6 = sub_21C5E3BB0();
  *(_QWORD *)(v5 - 272) = v6;
  MEMORY[0x24BDAC7A8](v6);
  v7 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v5 - 264) = v7;
  *(_QWORD *)(v5 - 208) = v2;
  *(_QWORD *)(v5 - 200) = v2;
  *(_QWORD *)(v5 - 192) = v1;
  *(_QWORD *)(v5 - 184) = v0;
  *(_QWORD *)(v5 - 176) = v4;
  *(_QWORD *)(v5 - 168) = v7;
  type metadata accessor for _MapContentView();
}

void sub_21C57165C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v14 = MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  sub_21C571928();
  v17 = *(_QWORD *)(v13 - 96);
  *(_OWORD *)(v13 - 136) = *(_OWORD *)(v13 - 112);
  *(_QWORD *)(v13 - 120) = v17;
  sub_21C531B18(v10 + 32, v13 - 208, qword_2552890F0);
  *(_QWORD *)(v13 - 216) = *(_QWORD *)(v10 + 104);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v9 + 16))(v12, v10 + *(int *)(v11 + 60), *(_QWORD *)(v13 - 272));
  (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v13 - 232) + 16))(*(_QWORD *)(v13 - 240), v10 + *(int *)(v11 + 68), *(_QWORD *)(v13 - 280));
  sub_21C5717F4(v13 - 136, v13 - 208, (uint64_t *)(v13 - 216), (uint64_t)v16);
}

uint64_t sub_21C571774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  void (*v6)(uint64_t, uint64_t);

  MEMORY[0x22077F9A0](&unk_21C5E8260, v1);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16);
  v5(v2, v3, v1);
  v6 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
  v6(v3, v1);
  v5(*(_QWORD *)(v4 - 224), v2, v1);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(v2, v1);
}

void type metadata accessor for _MapContentView()
{
  JUMPOUT(0x22077F91CLL);
}

void sub_21C5717F4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *a3;
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_QWORD *)(a4 + 16) = v5;
  sub_21C52DB08(a2, a4 + 24, qword_2552890F0);
  *(_QWORD *)(a4 + 96) = v6;
  type metadata accessor for _MapContentView();
}

void sub_21C571880()
{
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C5718A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;

  sub_21C5E37F0();
  v6 = sub_21C5E3BB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, v3, v6);
  v7 = v2 + *(int *)(v4 + 80);
  *(_QWORD *)v7 = v1;
  *(_BYTE *)(v7 + 8) = v9 & 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v2 + *(int *)(v4 + 84), v10, v0);
}

uint64_t sub_21C571928()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
    return sub_21C5E37D8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_255289590);
    return sub_21C5E379C();
  }
}

void MapContentView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[8];
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _UNKNOWN **v9;

  v5[6] = a2;
  v5[5] = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  v2 = MEMORY[0x24BDAC7A8](a1);
  v5[4] = (char *)v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = MEMORY[0x24BEE4078];
  v5[3] = v6;
  v8 = v4;
  v9 = &protocol witness table for Never;
  v5[2] = v4;
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C571A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_21C5E37F0();
  v7 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v6 - 264) = v8;
  *(_QWORD *)(v6 - 208) = v1;
  *(_QWORD *)(v6 - 200) = v3;
  *(_QWORD *)(v6 - 192) = v0;
  *(_QWORD *)(v6 - 184) = v4;
  *(_QWORD *)(v6 - 176) = v5;
  *(_QWORD *)(v6 - 168) = v8;
  type metadata accessor for _MapContentView();
}

void sub_21C571AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  v16 = MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  sub_21C571928();
  v19 = *(_QWORD *)(v15 - 96);
  *(_OWORD *)(v15 - 136) = *(_OWORD *)(v15 - 112);
  *(_QWORD *)(v15 - 120) = v19;
  sub_21C531B18(v10 + 32, v15 - 208, qword_2552890F0);
  *(_QWORD *)(v15 - 216) = *(_QWORD *)(v10 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v14, v10 + *(int *)(v13 + 60), v9);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 232) + 16))(*(_QWORD *)(v15 - 240), v10 + *(int *)(v13 + 68), v11);
  sub_21C5717F4(v15 - 136, v15 - 208, (uint64_t *)(v15 - 216), (uint64_t)v18);
}

uint64_t sub_21C571BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  void (*v6)(uint64_t, uint64_t);

  MEMORY[0x22077F9A0](&unk_21C5E8260, v1);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16);
  v5(v2, v3, v1);
  v6 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
  v6(v3, v1);
  v5(*(_QWORD *)(v4 - 224), v2, v1);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(v2, v1);
}

uint64_t sub_21C571C34()
{
  return sub_21C571C4C();
}

uint64_t sub_21C571C40()
{
  return sub_21C571C4C();
}

uint64_t sub_21C571C4C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_21C571C80()
{
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C571CD8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  sub_21C5E37F0();
  result = sub_21C5E3BB0();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_21C571D64(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _OWORD *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  void **v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  size_t __n;
  uint64_t v65;
  int v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v4 = (unint64_t)a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7 & 0xF8 | 7;
  v9 = ((v7 & 0xF8) + 23) & ~v8;
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  v11 = 8;
  if (v10 > 8)
    v11 = v10;
  v12 = v9 | 1;
  v72 = v11;
  v13 = (v9 | 1) + v11;
  v14 = *(_QWORD *)(v5 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = ((v15 + 9 + ((v13 + (((v7 & 0xF8) + 119) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v15)
      + *(_QWORD *)(v14 + 64);
  v17 = (*(_DWORD *)(v14 + 80) | v7) & 0x100000;
  if ((v15 | v8) == 7 && v17 == 0 && v16 <= 0x18)
  {
    v21 = *(unsigned __int8 *)(a2 + 24);
    if (v21 >= 2)
      v21 = *(_DWORD *)a2 + 2;
    __n = v10;
    v65 = *(_QWORD *)(a3 + 16);
    v66 = *(_DWORD *)(v6 + 84);
    v68 = v12;
    v69 = v15 + 9;
    v70 = *(_QWORD *)(v5 - 8);
    v71 = *(_QWORD *)(a3 + 24);
    v67 = *(_QWORD *)(v6 + 64);
    if (v21 == 1)
    {
      v22 = *(_QWORD *)(a2 + 8);
      *a1 = *(_QWORD *)a2;
      a1[1] = v22;
      v23 = *(_QWORD *)(a2 + 16);
      swift_retain();
      swift_retain();
      sub_21C55DA30(v23);
      *(_QWORD *)(v4 + 16) = v23;
      v24 = 1;
    }
    else
    {
      v25 = *(_QWORD *)a2;
      sub_21C55DA30(*(_QWORD *)a2);
      v26 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)v4 = v25;
      *(_QWORD *)(v4 + 8) = v26;
      swift_retain();
      v24 = 0;
    }
    v27 = ~v8;
    *(_BYTE *)(v4 + 24) = v24;
    v28 = v4 & 0xFFFFFFFFFFFFFFF8;
    v29 = (_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 32);
    v30 = a2 & 0xFFFFFFFFFFFFFFF8;
    v31 = (a2 & 0xFFFFFFFFFFFFFFF8) + 32;
    v32 = *(_QWORD *)(v30 + 56);
    LODWORD(v33) = -1;
    if (v32 < 0xFFFFFFFF)
      v33 = *(_QWORD *)(v30 + 56);
    if ((int)v33 - 1 < 0)
    {
      if (v32)
      {
        *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 56) = v32;
        *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v31 + 32);
        (**(void (***)(unint64_t, unint64_t))(v32 - 8))((v4 & 0xFFFFFFFFFFFFFFF8) + 32, v31);
      }
      else
      {
        v37 = *(_OWORD *)v31;
        v38 = *(_OWORD *)(v31 + 16);
        *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v31 + 32);
        *v29 = v37;
        *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 48) = v38;
      }
      v39 = *(_QWORD *)(v31 + 40);
      *(_BYTE *)((v4 & 0xFFFFFFFFFFFFFFF8) + 80) = *(_BYTE *)(v31 + 48);
      *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 72) = v39;
      v40 = *(_QWORD *)(v31 + 56);
      *(_BYTE *)((v4 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v31 + 64);
      *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 88) = v40;
    }
    else
    {
      *v29 = *(_OWORD *)v31;
      v34 = *(_OWORD *)(v31 + 16);
      v35 = *(_OWORD *)(v31 + 32);
      v36 = *(_OWORD *)(v31 + 48);
      *(_BYTE *)((v4 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v31 + 64);
      *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 64) = v35;
      *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 80) = v36;
      *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 48) = v34;
    }
    v41 = ~v15;
    *(_QWORD *)(v28 + 104) = *(_QWORD *)(v30 + 104);
    v42 = (v28 + v8 + 112) & v27;
    v43 = (v30 + v8 + 112) & v27;
    v44 = (_QWORD *)((v43 + 15) & 0xFFFFFFFFFFFFFFF8);
    if (*v44 < 0xFFFFFFFFuLL)
    {
      memcpy((void *)((v28 + v8 + 112) & v27), (const void *)((v30 + v8 + 112) & v27), v13);
      v51 = v70;
      v50 = v71;
      v52 = v68;
      v53 = v69;
      v54 = v72;
LABEL_53:
      v59 = v52 + v54;
      v60 = ((v42 | 7) + v59) & 0xFFFFFFFFFFFFFFF8;
      v61 = ((v43 | 7) + v59) & 0xFFFFFFFFFFFFFFF8;
      v62 = *(_QWORD *)v61;
      *(_BYTE *)(v60 + 8) = *(_BYTE *)(v61 + 8);
      *(_QWORD *)v60 = v62;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v51 + 16))((v53 + v60) & v41, (v53 + v61) & v41, v50);
      return v4;
    }
    *(_QWORD *)v42 = *(_QWORD *)v43;
    v45 = (_QWORD *)((v42 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v45 = *v44;
    v46 = (_QWORD *)(((unint64_t)v45 + v8 + 8) & v27);
    v47 = (void **)(((unint64_t)v44 + v8 + 8) & v27);
    v48 = *((unsigned __int8 *)v47 + v72);
    swift_retain();
    swift_retain();
    if (v48 >= 3)
    {
      if (v72 <= 3)
        v49 = v72;
      else
        v49 = 4;
      __asm { BR              X11 }
    }
    if (v48 == 2)
    {
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v6 + 48))(v47, 1, v65))
      {
        memcpy(v46, v47, __n);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v6 + 16))(v46, v47, v65);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v46, 0, 1, v65);
      }
      v55 = 2;
    }
    else
    {
      if (v48 != 1)
      {
        v56 = *v47;
        *v46 = *v47;
        *((_BYTE *)v46 + v72) = 0;
        v57 = v56;
LABEL_47:
        v51 = v70;
        v50 = v71;
        v52 = v68;
        v53 = v69;
        v54 = 8;
        if (v67 > 8)
          v54 = v67;
        v58 = 8;
        if (v67 + 1 > 8)
          v58 = v67 + 1;
        if (!v66)
          v54 = v58;
        goto LABEL_53;
      }
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v6 + 48))(v47, 1, v65))
      {
        memcpy(v46, v47, __n);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v6 + 16))(v46, v47, v65);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v46, 0, 1, v65);
      }
      v55 = 1;
    }
    *((_BYTE *)v46 + v72) = v55;
    goto LABEL_47;
  }
  v20 = *(_QWORD *)a2;
  *(_QWORD *)v4 = *(_QWORD *)a2;
  v4 = v20 + (((v15 | v8) + 16) & ~(v15 | v8));
  swift_retain();
  return v4;
}

uint64_t sub_21C572200(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  id *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t v21;

  v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 >= 2)
    v4 = *(_DWORD *)a1 + 2;
  if (v4 == 1)
  {
    swift_release();
    swift_release();
    sub_21C55DAAC(*(_QWORD *)(a1 + 16));
  }
  else
  {
    sub_21C55DAAC(*(_QWORD *)a1);
    swift_release();
  }
  v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  if ((int)v7 - 1 < 0 && v6)
    __swift_destroy_boxed_opaque_existential_0(v5 + 32);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v12 = ~v11;
  v13 = (v5 + v11 + 112) & ~v11;
  v14 = *(_QWORD *)(v9 + 64);
  v15 = (_QWORD *)((v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v15 <= 0xFFFFFFFEuLL)
  {
    if (v10)
      v21 = *(_QWORD *)(v9 + 64);
    else
      v21 = v14 + 1;
    if (v21 <= 8)
      v18 = 8;
    else
      v18 = v21;
  }
  else
  {
    swift_release();
    swift_release();
    v16 = (id *)(((unint64_t)v15 + v11 + 8) & v12);
    if (v10)
      v17 = v14;
    else
      v17 = v14 + 1;
    if (v17 <= 8)
      v18 = 8;
    else
      v18 = v17;
    v19 = *((unsigned __int8 *)v16 + v18);
    if (v19 >= 3)
    {
      if (v18 <= 3)
        v20 = v18;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    if (v19 == 2 || v19 == 1)
    {
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v9 + 48))(v16, 1, v8))
        (*(void (**)(id *, uint64_t))(v9 + 8))(v16, v8);
    }
    else
    {

    }
  }
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((((v18 + ((v11 + 16) & v12) + v13 + 8) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_21C572420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _OWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  size_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  _QWORD *v37;
  uint64_t v38;
  void **v39;
  size_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  id v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *__dst;
  uint64_t v57;
  uint64_t v58;

  v6 = *(unsigned __int8 *)(a2 + 24);
  if (v6 >= 2)
    v6 = *(_DWORD *)a2 + 2;
  if (v6 == 1)
  {
    v7 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *(_QWORD *)(a2 + 16);
    swift_retain();
    swift_retain();
    sub_21C55DA30(v8);
    *(_QWORD *)(a1 + 16) = v8;
    v9 = 1;
  }
  else
  {
    v10 = *(_QWORD *)a2;
    sub_21C55DA30(*(_QWORD *)a2);
    v11 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v11;
    swift_retain();
    v9 = 0;
  }
  *(_BYTE *)(a1 + 24) = v9;
  v12 = a1 & 0xFFFFFFFFFFFFFFF8;
  v13 = (_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  v14 = a2 & 0xFFFFFFFFFFFFFFF8;
  v15 = (a2 & 0xFFFFFFFFFFFFFFF8) + 32;
  v16 = *(_QWORD *)(v14 + 56);
  LODWORD(v17) = -1;
  if (v16 < 0xFFFFFFFF)
    v17 = *(_QWORD *)(v14 + 56);
  if ((int)v17 - 1 < 0)
  {
    if (v16)
    {
      *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56) = v16;
      *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v15 + 32);
      (**(void (***)(unint64_t, unint64_t))(v16 - 8))((a1 & 0xFFFFFFFFFFFFFFF8) + 32, v15);
    }
    else
    {
      v21 = *(_OWORD *)v15;
      v22 = *(_OWORD *)(v15 + 16);
      *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v15 + 32);
      *v13 = v21;
      *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v22;
    }
    v23 = *(_QWORD *)(v15 + 40);
    *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 80) = *(_BYTE *)(v15 + 48);
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72) = v23;
    v24 = *(_QWORD *)(v15 + 56);
    *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v15 + 64);
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 88) = v24;
  }
  else
  {
    *v13 = *(_OWORD *)v15;
    v18 = *(_OWORD *)(v15 + 16);
    v19 = *(_OWORD *)(v15 + 32);
    v20 = *(_OWORD *)(v15 + 48);
    *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v15 + 64);
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = v19;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 80) = v20;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v18;
  }
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v14 + 104);
  v25 = *(_QWORD *)(a3 + 16);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_DWORD *)(v26 + 84);
  v28 = *(_DWORD *)(v26 + 80) & 0xF8;
  v29 = v28 | 7;
  v30 = (v12 + (v28 | 7) + 112) & ~(v28 | 7);
  v31 = (v14 + (v28 | 7) + 112) & ~(v28 | 7);
  v32 = *(_QWORD *)(v26 + 64);
  v33 = (v28 + 23) & ~(v28 | 7);
  v34 = (_QWORD *)((v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v34 >= 0xFFFFFFFFuLL)
  {
    v57 = v33;
    v58 = a3;
    v35 = ~v29;
    v36 = v27 == 0;
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v37 = (_QWORD *)((v30 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v37 = *v34;
    v38 = v29 + 8;
    __dst = (_QWORD *)(((unint64_t)v37 + v38) & v35);
    v39 = (void **)(((unint64_t)v34 + v38) & v35);
    if (v36)
      v40 = v32 + 1;
    else
      v40 = v32;
    if (v40 <= 8)
      v41 = 8;
    else
      v41 = v40;
    v42 = *((unsigned __int8 *)v39 + v41);
    swift_retain();
    swift_retain();
    if (v42 >= 3)
    {
      if (v41 <= 3)
        v43 = v41;
      else
        v43 = 4;
      __asm { BR              X11 }
    }
    if (v42 == 2)
    {
      v45 = __dst;
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48))(v39, 1, v25))
      {
        memcpy(__dst, v39, v40);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v26 + 16))(__dst, v39, v25);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
      }
      v48 = 2;
    }
    else
    {
      if (v42 != 1)
      {
        v46 = *v39;
        *__dst = *v39;
        *((_BYTE *)__dst + v41) = 0;
        v47 = v46;
LABEL_44:
        v33 = v57;
        a3 = v58;
        goto LABEL_45;
      }
      v45 = __dst;
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48))(v39, 1, v25))
      {
        memcpy(__dst, v39, v40);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v26 + 16))(__dst, v39, v25);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
      }
      v48 = 1;
    }
    *((_BYTE *)v45 + v41) = v48;
    goto LABEL_44;
  }
  if (v27)
    v40 = *(_QWORD *)(v26 + 64);
  else
    v40 = v32 + 1;
  v44 = 8;
  if (v40 > 8)
    v44 = v40;
  memcpy((void *)v30, (const void *)v31, v44 + v33 + 1);
LABEL_45:
  v49 = 8;
  if (v40 > 8)
    v49 = v40;
  v50 = (v33 | 1) + v49;
  v51 = ((v30 | 7) + v50) & 0xFFFFFFFFFFFFFFF8;
  v52 = ((v31 | 7) + v50) & 0xFFFFFFFFFFFFFFF8;
  v53 = *(_QWORD *)v52;
  *(_BYTE *)(v51 + 8) = *(_BYTE *)(v52 + 8);
  *(_QWORD *)v51 = v53;
  v54 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v54 + 16))((*(unsigned __int8 *)(v54 + 80) + 9 + v51) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80), (*(unsigned __int8 *)(v54 + 80) + 9 + v52) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
  return a1;
}

uint64_t sub_21C572828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  int v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  size_t v36;
  _QWORD *v37;
  unint64_t *v38;
  unint64_t v39;
  id *v40;
  void **v41;
  size_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  _QWORD *v46;
  void **v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  id *v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  size_t v58;
  void *v59;
  unint64_t v60;
  const void *v61;
  uint64_t v62;
  void *v63;
  unsigned int v64;
  uint64_t v65;
  id v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;

  if (a1 != a2)
  {
    v6 = *(unsigned __int8 *)(a1 + 24);
    if (v6 >= 2)
      v6 = *(_DWORD *)a1 + 2;
    if (v6 == 1)
    {
      swift_release();
      swift_release();
      sub_21C55DAAC(*(_QWORD *)(a1 + 16));
    }
    else
    {
      sub_21C55DAAC(*(_QWORD *)a1);
      swift_release();
    }
    v7 = *(unsigned __int8 *)(a2 + 24);
    if (v7 >= 2)
      v7 = *(_DWORD *)a2 + 2;
    if (v7 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v8 = *(_QWORD *)(a2 + 16);
      swift_retain();
      swift_retain();
      sub_21C55DA30(v8);
      *(_QWORD *)(a1 + 16) = v8;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      v9 = *(_QWORD *)a2;
      sub_21C55DA30(*(_QWORD *)a2);
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 24) = 0;
      swift_retain();
    }
  }
  v10 = a1 & 0xFFFFFFFFFFFFFFF8;
  v11 = (_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  v12 = a2 & 0xFFFFFFFFFFFFFFF8;
  v13 = (a2 & 0xFFFFFFFFFFFFFFF8) + 32;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  LODWORD(v15) = -1;
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  else
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  v17 = v16 - 1;
  v18 = *(_QWORD *)(v12 + 56);
  if (v18 < 0xFFFFFFFF)
    v15 = *(_QWORD *)(v12 + 56);
  v19 = v15 - 1;
  if ((v17 & 0x80000000) == 0)
  {
    if (v19 < 0)
      goto LABEL_19;
LABEL_24:
    *v11 = *(_OWORD *)v13;
    v20 = *(_OWORD *)(v13 + 16);
    v21 = *(_OWORD *)(v13 + 32);
    v22 = *(_OWORD *)(v13 + 48);
    *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v13 + 64);
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = v21;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 80) = v22;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v20;
    goto LABEL_31;
  }
  if ((v19 & 0x80000000) == 0)
  {
    if (v14)
      __swift_destroy_boxed_opaque_existential_0((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
    goto LABEL_24;
  }
  if (v14)
  {
    v23 = (uint64_t *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
    if (v18)
    {
      __swift_assign_boxed_opaque_existential_1(v23, (uint64_t *)v13);
      goto LABEL_30;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
LABEL_29:
    v24 = *(_OWORD *)v13;
    v25 = *(_OWORD *)(v13 + 16);
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v13 + 32);
    *v11 = v24;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v25;
    goto LABEL_30;
  }
LABEL_19:
  if (!v18)
    goto LABEL_29;
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56) = v18;
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v13 + 32);
  (**(void (***)(unint64_t, unint64_t))(v18 - 8))((a1 & 0xFFFFFFFFFFFFFFF8) + 32, v13);
LABEL_30:
  v26 = *(_QWORD *)(v13 + 40);
  *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 80) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72) = v26;
  v27 = *(_QWORD *)(v13 + 56);
  *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v13 + 64);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 88) = v27;
LABEL_31:
  *(_QWORD *)(v10 + 104) = *(_QWORD *)(v12 + 104);
  v78 = a3;
  v28 = *(_QWORD *)(a3 + 16);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_DWORD *)(v29 + 84);
  v31 = *(_DWORD *)(v29 + 80) & 0xF8;
  v32 = v31 | 7;
  v33 = ~(v31 | 7);
  v34 = (_QWORD *)((v10 + (v31 | 7) + 112) & v33);
  v35 = (_QWORD *)((v12 + (v31 | 7) + 112) & v33);
  v36 = *(_QWORD *)(v29 + 64);
  v77 = (v31 + 23) & v33;
  v37 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  v38 = (unint64_t *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
  v39 = *v38;
  if (*v37 < 0xFFFFFFFFuLL)
  {
    if (v39 >= 0xFFFFFFFF)
    {
      v75 = v34;
      v76 = v35;
      *v34 = *v35;
      *v37 = *v38;
      v46 = (_QWORD *)(((unint64_t)v37 + v32 + 8) & v33);
      v47 = (void **)(((unint64_t)v38 + v32 + 8) & v33);
      if (v30)
        v42 = v36;
      else
        v42 = v36 + 1;
      if (v42 <= 8)
        v48 = 8;
      else
        v48 = v42;
      v49 = *((unsigned __int8 *)v47 + v48);
      swift_retain();
      swift_retain();
      if (v49 >= 3)
      {
        if (v48 <= 3)
          v50 = v48;
        else
          v50 = 4;
        __asm { BR              X11 }
      }
      if (v49 == 2)
      {
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(v47, 1, v28))
        {
          memcpy(v46, v47, v42);
        }
        else
        {
          (*(void (**)(_QWORD *, void **, uint64_t))(v29 + 16))(v46, v47, v28);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v46, 0, 1, v28);
        }
        v62 = v78;
        *((_BYTE *)v46 + v48) = 2;
        goto LABEL_116;
      }
      if (v49 == 1)
      {
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(v47, 1, v28))
        {
          memcpy(v46, v47, v42);
        }
        else
        {
          (*(void (**)(_QWORD *, void **, uint64_t))(v29 + 16))(v46, v47, v28);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v46, 0, 1, v28);
        }
        v62 = v78;
        *((_BYTE *)v46 + v48) = 1;
        goto LABEL_116;
      }
      v63 = *v47;
      *v46 = *v47;
      *((_BYTE *)v46 + v48) = 0;
LABEL_110:
      v66 = v63;
      v62 = v78;
      goto LABEL_116;
    }
    if (v30)
      v42 = *(_QWORD *)(v29 + 64);
    else
      v42 = v36 + 1;
    v56 = 8;
    if (v42 > 8)
      v56 = v42;
    v57 = v77;
    v58 = v56 + v77 + 1;
    v59 = v34;
    v60 = (unint64_t)v35;
    v61 = v35;
    v51 = (unint64_t)v34;
LABEL_92:
    memcpy(v59, v61, v58);
    v62 = v78;
    goto LABEL_117;
  }
  v76 = v35;
  if (v39 < 0xFFFFFFFF)
  {
    v51 = (unint64_t)v34;
    swift_release();
    swift_release();
    v52 = (id *)(((unint64_t)v37 + v32 + 8) & v33);
    if (v30)
      v42 = v36;
    else
      v42 = v36 + 1;
    if (v42 <= 8)
      v53 = 8;
    else
      v53 = v42;
    v54 = *((unsigned __int8 *)v52 + v53);
    if (v54 >= 3)
    {
      if (v53 <= 3)
        v55 = v53;
      else
        v55 = 4;
      __asm { BR              X12 }
    }
    if (v54 == 2 || v54 == 1)
    {
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v29 + 48))(v52, 1, v28))
        (*(void (**)(id *, uint64_t))(v29 + 8))(v52, v28);
    }
    else
    {

    }
    v60 = (unint64_t)v76;
    v57 = v77;
    v58 = v53 + v77 + 1;
    v59 = (void *)v51;
    v61 = v76;
    goto LABEL_92;
  }
  v75 = v34;
  *v34 = *v35;
  swift_retain();
  swift_release();
  *v37 = *v38;
  swift_retain();
  swift_release();
  v40 = (id *)(((unint64_t)v37 + v32 + 8) & v33);
  v41 = (void **)(((unint64_t)v38 + v32 + 8) & v33);
  if (v30)
    v42 = v36;
  else
    v42 = v36 + 1;
  if (v40 != v41)
  {
    if (v42 <= 8)
      v43 = 8;
    else
      v43 = v42;
    v44 = *((unsigned __int8 *)v40 + v43);
    if (v44 >= 3)
    {
      if (v43 <= 3)
        v45 = v43;
      else
        v45 = 4;
      __asm { BR              X12 }
    }
    if (v44 == 2 || v44 == 1)
    {
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v29 + 48))(v40, 1, v28))
        (*(void (**)(id *, uint64_t))(v29 + 8))(v40, v28);
    }
    else
    {

    }
    v64 = *((unsigned __int8 *)v41 + v43);
    if (v64 >= 3)
    {
      if (v43 <= 3)
        v65 = v43;
      else
        v65 = 4;
      __asm { BR              X12 }
    }
    if (v64 == 2)
    {
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(v41, 1, v28))
      {
        memcpy(v40, v41, v42);
      }
      else
      {
        (*(void (**)(id *, void **, uint64_t))(v29 + 16))(v40, v41, v28);
        (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v40, 0, 1, v28);
      }
      v62 = v78;
      v67 = 2;
      goto LABEL_115;
    }
    if (v64 == 1)
    {
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(v41, 1, v28))
      {
        memcpy(v40, v41, v42);
      }
      else
      {
        (*(void (**)(id *, void **, uint64_t))(v29 + 16))(v40, v41, v28);
        (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v40, 0, 1, v28);
      }
      v62 = v78;
      v67 = 1;
LABEL_115:
      *((_BYTE *)v40 + v43) = v67;
      goto LABEL_116;
    }
    v63 = *v41;
    *v40 = *v41;
    *((_BYTE *)v40 + v43) = 0;
    goto LABEL_110;
  }
  v62 = v78;
LABEL_116:
  v60 = (unint64_t)v76;
  v57 = v77;
  v51 = (unint64_t)v75;
LABEL_117:
  v68 = 8;
  if (v42 > 8)
    v68 = v42;
  v69 = (v57 | 1) + v68;
  v70 = ((v51 | 7) + v69) & 0xFFFFFFFFFFFFFFF8;
  v71 = ((v60 | 7) + v69) & 0xFFFFFFFFFFFFFFF8;
  v72 = *(_QWORD *)v71;
  *(_BYTE *)(v70 + 8) = *(_BYTE *)(v71 + 8);
  *(_QWORD *)v70 = v72;
  v73 = *(_QWORD *)(*(_QWORD *)(v62 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v73 + 24))((*(unsigned __int8 *)(v73 + 80) + 9 + v70) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80), (*(unsigned __int8 *)(v73 + 80) + 9 + v71) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t sub_21C5731E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5;
  char v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  size_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *__dst;
  void *__dsta;

  v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 >= 2)
    v5 = *(_DWORD *)a2 + 2;
  if (v5 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v6 = 1;
  }
  else
  {
    v6 = 0;
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_BYTE *)(a1 + 24) = v6;
  v7 = a1 & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  v8 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 48);
  v9 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 64);
  v10 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 80);
  *(_BYTE *)(v7 + 96) = *(_BYTE *)((a2 & 0xFFFFFFFFFFFFFFF8) + 96);
  *(_OWORD *)(v7 + 64) = v9;
  *(_OWORD *)(v7 + 80) = v10;
  *(_OWORD *)(v7 + 48) = v8;
  *(_QWORD *)(v7 + 104) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 104);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = *(_DWORD *)(v12 + 80) & 0xF8;
  v15 = v14 | 7;
  v16 = ((a1 & 0xFFFFFFFFFFFFFFF8) + (v14 | 7) + 112) & ~(v14 | 7);
  v17 = ((a2 & 0xFFFFFFFFFFFFFFF8) + (v14 | 7) + 112) & ~(v14 | 7);
  v18 = *(_QWORD *)(v12 + 64);
  v19 = (v14 + 23) & ~(v14 | 7);
  v20 = (_QWORD *)((v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (v13)
      v28 = *(_QWORD *)(v12 + 64);
    else
      v28 = v18 + 1;
    v32 = 8;
    if (v28 > 8)
      v32 = v28;
    memcpy((void *)v16, (const void *)v17, v32 + v19 + 1);
  }
  else
  {
    v21 = ~v15;
    v22 = v13 == 0;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v23 = (_QWORD *)((v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v23 = *v20;
    v24 = v15 + 8;
    v25 = (unint64_t)v23 + v24;
    v26 = (_QWORD *)(v25 & v21);
    v27 = (_QWORD *)(((unint64_t)v20 + v24) & v21);
    if (v22)
      v28 = v18 + 1;
    else
      v28 = v18;
    if (v28 <= 8)
      v29 = 8;
    else
      v29 = v28;
    v30 = *((unsigned __int8 *)v27 + v29);
    if (v30 >= 3)
    {
      if (v29 <= 3)
        v31 = v29;
      else
        v31 = 4;
      __asm { BR              X12 }
    }
    if (v30 == 2)
    {
      __dsta = (void *)(v25 & v21);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v27, 1, v11))
      {
        memcpy(__dsta, v27, v28);
      }
      else
      {
        (*(void (**)(void *, _QWORD *, uint64_t))(v12 + 32))(__dsta, v27, v11);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dsta, 0, 1, v11);
      }
      *((_BYTE *)__dsta + v29) = 2;
    }
    else if (v30 == 1)
    {
      __dst = (void *)(v25 & v21);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v27, 1, v11))
      {
        memcpy(__dst, v27, v28);
      }
      else
      {
        (*(void (**)(void *, _QWORD *, uint64_t))(v12 + 32))(__dst, v27, v11);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
      }
      *((_BYTE *)__dst + v29) = 1;
    }
    else
    {
      *v26 = *v27;
      *((_BYTE *)v26 + v29) = 0;
    }
  }
  v33 = 8;
  if (v28 > 8)
    v33 = v28;
  v34 = (v19 | 1) + v33;
  v35 = ((v16 | 7) + v34) & 0xFFFFFFFFFFFFFFF8;
  v36 = ((v17 | 7) + v34) & 0xFFFFFFFFFFFFFFF8;
  v37 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
  *(_QWORD *)v35 = v37;
  v38 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v38 + 32))((*(unsigned __int8 *)(v38 + 80) + 9 + v35) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80), (*(unsigned __int8 *)(v38 + 80) + 9 + v36) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
  return a1;
}

uint64_t sub_21C573548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  unsigned int v7;
  char v8;
  unint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  size_t v27;
  _QWORD *v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  id *v32;
  id *v33;
  size_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  id *v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  size_t v51;
  void *v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  if (a1 != a2)
  {
    v6 = *(unsigned __int8 *)(a1 + 24);
    if (v6 >= 2)
      v6 = *(_DWORD *)a1 + 2;
    if (v6 == 1)
    {
      swift_release();
      swift_release();
      sub_21C55DAAC(*(_QWORD *)(a1 + 16));
    }
    else
    {
      sub_21C55DAAC(*(_QWORD *)a1);
      swift_release();
    }
    v7 = *(unsigned __int8 *)(a2 + 24);
    if (v7 >= 2)
      v7 = *(_DWORD *)a2 + 2;
    if (v7 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v8 = 1;
    }
    else
    {
      v8 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(_BYTE *)(a1 + 24) = v8;
  }
  v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  v10 = (_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  v11 = a2 & 0xFFFFFFFFFFFFFFF8;
  v12 = (_OWORD *)(v11 + 32);
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  LODWORD(v14) = -1;
  if (v13 < 0xFFFFFFFF)
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  if ((int)v14 - 1 >= 0)
    goto LABEL_16;
  v44 = *(_QWORD *)(v11 + 56);
  if (v44 >= 0xFFFFFFFF)
    LODWORD(v44) = -1;
  if ((int)v44 - 1 >= 0)
  {
    if (v13)
      __swift_destroy_boxed_opaque_existential_0((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
LABEL_16:
    *v10 = *v12;
    v15 = *(_OWORD *)(v11 + 48);
    v16 = *(_OWORD *)(v11 + 64);
    v17 = *(_OWORD *)(v11 + 80);
    *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v11 + 96);
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = v16;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 80) = v17;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v15;
    goto LABEL_17;
  }
  if (v13)
    __swift_destroy_boxed_opaque_existential_0((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  v54 = *v12;
  v55 = *(_OWORD *)(v11 + 48);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v11 + 64);
  *v10 = v54;
  *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v55;
  v56 = *(_QWORD *)(v11 + 72);
  *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 80) = *(_BYTE *)(v11 + 80);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72) = v56;
  v57 = *(_QWORD *)(v11 + 88);
  *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v11 + 96);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 88) = v57;
LABEL_17:
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v11 + 104);
  v18 = *(_QWORD *)(a3 + 16);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_DWORD *)(v19 + 84);
  v21 = *(_DWORD *)(v19 + 80) & 0xF8;
  v22 = v21 | 7;
  v23 = v11 + (v21 | 7);
  v24 = ~(v21 | 7);
  v25 = (v9 + (v21 | 7) + 112) & v24;
  v26 = (_QWORD *)((v23 + 112) & v24);
  v27 = *(_QWORD *)(v19 + 64);
  v72 = (v21 + 23) & v24;
  v73 = a3;
  v28 = (_QWORD *)((v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  v29 = (unint64_t *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  v30 = *v29;
  if (*v28 < 0xFFFFFFFFuLL)
  {
    if (v30 < 0xFFFFFFFF)
    {
      if (v20)
        v34 = *(_QWORD *)(v19 + 64);
      else
        v34 = v27 + 1;
      v49 = 8;
      if (v34 > 8)
        v49 = v34;
      v50 = v72;
      v51 = v49 + v72 + 1;
      v52 = (void *)v25;
      v53 = (uint64_t)v26;
      goto LABEL_86;
    }
    *(_QWORD *)v25 = *v26;
    *v28 = *v29;
    v38 = v22 + 8;
    v39 = (_QWORD *)(((unint64_t)v28 + v22 + 8) & v24);
    v40 = (_QWORD *)(((unint64_t)v29 + v38) & v24);
    if (v20)
      v34 = v27;
    else
      v34 = v27 + 1;
    if (v34 <= 8)
      v41 = 8;
    else
      v41 = v34;
    v42 = *((unsigned __int8 *)v40 + v41);
    if (v42 >= 3)
    {
      if (v41 <= 3)
        v43 = v41;
      else
        v43 = 4;
      __asm { BR              X12 }
    }
    v53 = (uint64_t)v26;
    if (v42 != 2)
    {
      if (v42 == 1)
      {
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v40, 1, v18))
        {
          memcpy(v39, v40, v34);
          v58 = 1;
LABEL_78:
          *((_BYTE *)v39 + v41) = v58;
          goto LABEL_79;
        }
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 32))(v39, v40, v18);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v39, 0, 1, v18);
        *((_BYTE *)v39 + v41) = 1;
      }
      else
      {
        *v39 = *v40;
        *((_BYTE *)v39 + v41) = 0;
      }
LABEL_79:
      v50 = v72;
      v59 = v73;
      goto LABEL_110;
    }
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v40, 1, v18))
    {
      memcpy(v39, v40, v34);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 32))(v39, v40, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v39, 0, 1, v18);
    }
    v58 = 2;
    goto LABEL_78;
  }
  v71 = (v23 + 112) & v24;
  if (v30 < 0xFFFFFFFF)
  {
    swift_release();
    swift_release();
    v45 = (id *)(((unint64_t)v28 + v22 + 8) & v24);
    if (v20)
      v34 = v27;
    else
      v34 = v27 + 1;
    if (v34 <= 8)
      v46 = 8;
    else
      v46 = v34;
    v47 = *((unsigned __int8 *)v45 + v46);
    if (v47 >= 3)
    {
      if (v46 <= 3)
        v48 = v46;
      else
        v48 = 4;
      __asm { BR              X12 }
    }
    if (v47 == 2 || v47 == 1)
    {
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v19 + 48))(v45, 1, v18))
        (*(void (**)(id *, uint64_t))(v19 + 8))(v45, v18);
    }
    else
    {

    }
    v53 = v71;
    v60 = v46 + v72;
    v50 = v72;
    v51 = v60 + 1;
    v52 = (void *)v25;
    v26 = (_QWORD *)v71;
LABEL_86:
    memcpy(v52, v26, v51);
    v59 = v73;
    goto LABEL_110;
  }
  *(_QWORD *)v25 = *v26;
  swift_release();
  *v28 = *v29;
  swift_release();
  v31 = v22 + 8;
  v32 = (id *)(((unint64_t)v28 + v22 + 8) & v24);
  v33 = (id *)(((unint64_t)v29 + v31) & v24);
  if (v20)
    v34 = v27;
  else
    v34 = v27 + 1;
  if (v32 == v33)
    goto LABEL_109;
  if (v34 <= 8)
    v35 = 8;
  else
    v35 = v34;
  v36 = *((unsigned __int8 *)v32 + v35);
  if (v36 >= 3)
  {
    if (v35 <= 3)
      v37 = v35;
    else
      v37 = 4;
    __asm { BR              X12 }
  }
  if (v36 == 2 || v36 == 1)
  {
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v19 + 48))(v32, 1, v18))
      (*(void (**)(id *, uint64_t))(v19 + 8))(v32, v18);
  }
  else
  {

  }
  v61 = *((unsigned __int8 *)v33 + v35);
  if (v61 >= 3)
  {
    if (v35 <= 3)
      v62 = v35;
    else
      v62 = 4;
    __asm { BR              X12 }
  }
  if (v61 == 2)
  {
    if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v19 + 48))(v33, 1, v18))
    {
      memcpy(v32, v33, v34);
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v19 + 32))(v32, v33, v18);
      (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v32, 0, 1, v18);
    }
    v63 = 2;
    goto LABEL_108;
  }
  if (v61 == 1)
  {
    if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v19 + 48))(v33, 1, v18))
    {
      memcpy(v32, v33, v34);
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v19 + 32))(v32, v33, v18);
      (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v32, 0, 1, v18);
    }
    v63 = 1;
LABEL_108:
    *((_BYTE *)v32 + v35) = v63;
    goto LABEL_109;
  }
  *v32 = *v33;
  *((_BYTE *)v32 + v35) = 0;
LABEL_109:
  v50 = v72;
  v59 = v73;
  v53 = v71;
LABEL_110:
  v64 = 8;
  if (v34 > 8)
    v64 = v34;
  v65 = (v50 | 1) + v64;
  v66 = ((v25 | 7) + v65) & 0xFFFFFFFFFFFFFFF8;
  v67 = ((v53 | 7) + v65) & 0xFFFFFFFFFFFFFFF8;
  v68 = *(_QWORD *)v67;
  *(_BYTE *)(v66 + 8) = *(_BYTE *)(v67 + 8);
  *(_QWORD *)v66 = v68;
  v69 = *(_QWORD *)(*(_QWORD *)(v59 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v69 + 40))((*(unsigned __int8 *)(v69 + 80) + 9 + v66) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80), (*(unsigned __int8 *)(v69 + 80) + 9 + v67) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
  return a1;
}

void type metadata accessor for MapSelectableContentView()
{
  JUMPOUT(0x22077F91CLL);
}

void sub_21C573D1C()
{
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C573D80()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  sub_21C5E37F0();
  result = sub_21C5E3BB0();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_21C573E0C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _OWORD *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  _BYTE *v46;
  _BYTE *v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  size_t __n;
  uint64_t v64;
  int v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v4 = (unint64_t)a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7 & 0xF8 | 7;
  v9 = ((v7 & 0xF8) + 23) & ~v8;
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  v11 = 8;
  if (v10 > 8)
    v11 = v10;
  v12 = v9 | 1;
  v71 = v11;
  v13 = (v9 | 1) + v11;
  v14 = *(_QWORD *)(v5 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = ((v15 + 9 + ((v13 + (((v7 & 0xF8) + 119) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v15)
      + *(_QWORD *)(v14 + 64);
  v17 = (*(_DWORD *)(v14 + 80) | v7) & 0x100000;
  if ((v15 | v8) != 7 || v17 != 0 || v16 > 0x18)
  {
    v20 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = v20 + (((v15 | v8) + 16) & ~(v15 | v8));
    swift_retain();
  }
  else
  {
    v21 = *(unsigned __int8 *)(a2 + 24);
    if (v21 >= 2)
      v21 = *(_DWORD *)a2 + 2;
    __n = v10;
    v64 = *(_QWORD *)(a3 + 16);
    v69 = *(_QWORD *)(v5 - 8);
    v70 = *(_QWORD *)(a3 + 24);
    v67 = v12;
    v68 = v15 + 9;
    v65 = *(_DWORD *)(v6 + 84);
    v66 = *(_QWORD *)(v6 + 64);
    if (v21 == 1)
    {
      v22 = *(_QWORD *)(a2 + 8);
      *a1 = *(_QWORD *)a2;
      a1[1] = v22;
      v23 = *(_QWORD *)(a2 + 16);
      swift_retain();
      swift_retain();
      sub_21C55DA30(v23);
      *(_QWORD *)(v4 + 16) = v23;
      v24 = 1;
    }
    else
    {
      v25 = *(_QWORD *)a2;
      sub_21C55DA30(*(_QWORD *)a2);
      v26 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)v4 = v25;
      *(_QWORD *)(v4 + 8) = v26;
      swift_retain();
      v24 = 0;
    }
    v27 = ~v8;
    *(_BYTE *)(v4 + 24) = v24;
    v28 = v4 & 0xFFFFFFFFFFFFFFF8;
    v29 = (_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 32);
    v30 = a2 & 0xFFFFFFFFFFFFFFF8;
    v31 = (a2 & 0xFFFFFFFFFFFFFFF8) + 32;
    v32 = *(_QWORD *)(v30 + 56);
    LODWORD(v33) = -1;
    if (v32 < 0xFFFFFFFF)
      v33 = *(_QWORD *)(v30 + 56);
    if ((int)v33 - 1 < 0)
    {
      if (v32)
      {
        *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 56) = v32;
        *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v31 + 32);
        (**(void (***)(unint64_t, unint64_t))(v32 - 8))((v4 & 0xFFFFFFFFFFFFFFF8) + 32, v31);
      }
      else
      {
        v37 = *(_OWORD *)v31;
        v38 = *(_OWORD *)(v31 + 16);
        *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v31 + 32);
        *v29 = v37;
        *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 48) = v38;
      }
      v39 = *(_QWORD *)(v31 + 40);
      *(_BYTE *)((v4 & 0xFFFFFFFFFFFFFFF8) + 80) = *(_BYTE *)(v31 + 48);
      *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 72) = v39;
      v40 = *(_QWORD *)(v31 + 56);
      *(_BYTE *)((v4 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v31 + 64);
      *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 88) = v40;
    }
    else
    {
      *v29 = *(_OWORD *)v31;
      v34 = *(_OWORD *)(v31 + 16);
      v35 = *(_OWORD *)(v31 + 32);
      v36 = *(_OWORD *)(v31 + 48);
      *(_BYTE *)((v4 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v31 + 64);
      *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 64) = v35;
      *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 80) = v36;
      *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFF8) + 48) = v34;
    }
    v41 = ~v15;
    *(_QWORD *)(v28 + 104) = *(_QWORD *)(v30 + 104);
    v42 = (v28 + v8 + 112) & v27;
    v43 = (v30 + v8 + 112) & v27;
    v44 = (_QWORD *)((v43 + 15) & 0xFFFFFFFFFFFFFFF8);
    if (*v44 < 0xFFFFFFFFuLL)
    {
      memcpy((void *)((v28 + v8 + 112) & v27), (const void *)((v30 + v8 + 112) & v27), v13);
      v50 = v69;
      v51 = v70;
      v52 = v67;
      v53 = v68;
      v54 = v71;
    }
    else
    {
      *(_QWORD *)v42 = *(_QWORD *)v43;
      v45 = (_QWORD *)((v42 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v45 = *v44;
      v46 = (_BYTE *)(((unint64_t)v45 + v8 + 8) & v27);
      v47 = (_BYTE *)(((unint64_t)v44 + v8 + 8) & v27);
      v48 = v47[v71];
      swift_retain();
      swift_retain();
      if (v48 >= 3)
      {
        if (v71 <= 3)
          v49 = v71;
        else
          v49 = 4;
        __asm { BR              X11 }
      }
      if (v48 == 2)
      {
        *v46 = *v47;
        v46[v71] = 2;
        v51 = v70;
      }
      else if (v48 == 1)
      {
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v47, 1, v64))
        {
          memcpy(v46, v47, __n);
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v46, v47, v64);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v46, 0, 1, v64);
        }
        v51 = v70;
        v46[v71] = 1;
      }
      else
      {
        v51 = v70;
        v55 = *(void **)v47;
        *(_QWORD *)v46 = *(_QWORD *)v47;
        v46[v71] = 0;
        v56 = v55;
      }
      v53 = v68;
      v50 = v69;
      v52 = v67;
      v54 = 8;
      if (v66 > 8)
        v54 = v66;
      v57 = 8;
      if (v66 + 1 > 8)
        v57 = v66 + 1;
      if (!v65)
        v54 = v57;
    }
    v58 = v52 + v54;
    v59 = ((v42 | 7) + v58) & 0xFFFFFFFFFFFFFFF8;
    v60 = ((v43 | 7) + v58) & 0xFFFFFFFFFFFFFFF8;
    v61 = *(_QWORD *)v60;
    *(_BYTE *)(v59 + 8) = *(_BYTE *)(v60 + 8);
    *(_QWORD *)v59 = v61;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 16))((v53 + v59) & v41, (v53 + v60) & v41, v51);
  }
  return v4;
}

uint64_t sub_21C574264(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  id *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t v21;

  v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 >= 2)
    v4 = *(_DWORD *)a1 + 2;
  if (v4 == 1)
  {
    swift_release();
    swift_release();
    sub_21C55DAAC(*(_QWORD *)(a1 + 16));
  }
  else
  {
    sub_21C55DAAC(*(_QWORD *)a1);
    swift_release();
  }
  v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  if ((int)v7 - 1 < 0 && v6)
    __swift_destroy_boxed_opaque_existential_0(v5 + 32);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v12 = ~v11;
  v13 = (v5 + v11 + 112) & ~v11;
  v14 = *(_QWORD *)(v9 + 64);
  v15 = (_QWORD *)((v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v15 <= 0xFFFFFFFEuLL)
  {
    if (v10)
      v21 = *(_QWORD *)(v9 + 64);
    else
      v21 = v14 + 1;
    if (v21 <= 8)
      v18 = 8;
    else
      v18 = v21;
  }
  else
  {
    swift_release();
    swift_release();
    v16 = (id *)(((unint64_t)v15 + v11 + 8) & v12);
    if (v10)
      v17 = v14;
    else
      v17 = v14 + 1;
    if (v17 <= 8)
      v18 = 8;
    else
      v18 = v17;
    v19 = *((unsigned __int8 *)v16 + v18);
    if (v19 >= 3)
    {
      if (v18 <= 3)
        v20 = v18;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    if (v19 != 2)
    {
      if (v19 == 1)
      {
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v9 + 48))(v16, 1, v8))
          (*(void (**)(id *, uint64_t))(v9 + 8))(v16, v8);
      }
      else
      {

      }
    }
  }
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((((v18 + ((v11 + 16) & v12) + v13 + 8) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_21C574484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _OWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  size_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  char v44;
  void *v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *__dst;
  uint64_t v54;
  uint64_t v55;

  v6 = *(unsigned __int8 *)(a2 + 24);
  if (v6 >= 2)
    v6 = *(_DWORD *)a2 + 2;
  if (v6 == 1)
  {
    v7 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *(_QWORD *)(a2 + 16);
    swift_retain();
    swift_retain();
    sub_21C55DA30(v8);
    *(_QWORD *)(a1 + 16) = v8;
    v9 = 1;
  }
  else
  {
    v10 = *(_QWORD *)a2;
    sub_21C55DA30(*(_QWORD *)a2);
    v11 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v11;
    swift_retain();
    v9 = 0;
  }
  *(_BYTE *)(a1 + 24) = v9;
  v12 = a1 & 0xFFFFFFFFFFFFFFF8;
  v13 = (_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  v14 = a2 & 0xFFFFFFFFFFFFFFF8;
  v15 = (a2 & 0xFFFFFFFFFFFFFFF8) + 32;
  v16 = *(_QWORD *)(v14 + 56);
  LODWORD(v17) = -1;
  if (v16 < 0xFFFFFFFF)
    v17 = *(_QWORD *)(v14 + 56);
  if ((int)v17 - 1 < 0)
  {
    if (v16)
    {
      *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56) = v16;
      *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v15 + 32);
      (**(void (***)(unint64_t, unint64_t))(v16 - 8))((a1 & 0xFFFFFFFFFFFFFFF8) + 32, v15);
    }
    else
    {
      v21 = *(_OWORD *)v15;
      v22 = *(_OWORD *)(v15 + 16);
      *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v15 + 32);
      *v13 = v21;
      *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v22;
    }
    v23 = *(_QWORD *)(v15 + 40);
    *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 80) = *(_BYTE *)(v15 + 48);
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72) = v23;
    v24 = *(_QWORD *)(v15 + 56);
    *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v15 + 64);
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 88) = v24;
  }
  else
  {
    *v13 = *(_OWORD *)v15;
    v18 = *(_OWORD *)(v15 + 16);
    v19 = *(_OWORD *)(v15 + 32);
    v20 = *(_OWORD *)(v15 + 48);
    *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v15 + 64);
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = v19;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 80) = v20;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v18;
  }
  *(_QWORD *)(v12 + 104) = *(_QWORD *)(v14 + 104);
  v25 = *(_QWORD *)(a3 + 16);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_DWORD *)(v26 + 84);
  v28 = *(_DWORD *)(v26 + 80) & 0xF8;
  v29 = v28 | 7;
  v30 = (v12 + (v28 | 7) + 112) & ~(v28 | 7);
  v31 = (v14 + (v28 | 7) + 112) & ~(v28 | 7);
  v32 = *(_QWORD *)(v26 + 64);
  v33 = (v28 + 23) & ~(v28 | 7);
  v34 = (_QWORD *)((v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v34 < 0xFFFFFFFFuLL)
  {
    if (!v27)
      ++v32;
    if (v32 <= 8)
      v41 = 8;
    else
      v41 = v32;
    memcpy((void *)v30, (const void *)v31, v41 + v33 + 1);
  }
  else
  {
    v54 = v33;
    v55 = a3;
    v35 = ~v29;
    v36 = v27 == 0;
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v37 = (_QWORD *)((v30 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v37 = *v34;
    v38 = v29 + 8;
    __dst = (_BYTE *)(((unint64_t)v37 + v38) & v35);
    v39 = (char *)(((unint64_t)v34 + v38) & v35);
    if (v36)
      v40 = v32 + 1;
    else
      v40 = v32;
    if (v40 <= 8)
      v41 = 8;
    else
      v41 = v40;
    v42 = v39[v41];
    swift_retain();
    swift_retain();
    if (v42 >= 3)
    {
      if (v41 <= 3)
        v43 = v41;
      else
        v43 = 4;
      __asm { BR              X11 }
    }
    if (v42 == 2)
    {
      v44 = *v39;
      v33 = v54;
      *__dst = v44;
      __dst[v41] = 2;
      a3 = v55;
    }
    else if (v42 == 1)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v39, 1, v25))
      {
        memcpy(__dst, v39, v40);
      }
      else
      {
        (*(void (**)(_BYTE *, char *, uint64_t))(v26 + 16))(__dst, v39, v25);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
      }
      v33 = v54;
      a3 = v55;
      __dst[v41] = 1;
    }
    else
    {
      a3 = v55;
      v45 = *(void **)v39;
      *(_QWORD *)__dst = *(_QWORD *)v39;
      __dst[v41] = 0;
      v46 = v45;
      v33 = v54;
    }
  }
  v47 = v41 + v33 + 1;
  v48 = ((v30 | 7) + v47) & 0xFFFFFFFFFFFFFFF8;
  v49 = ((v31 | 7) + v47) & 0xFFFFFFFFFFFFFFF8;
  v50 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
  *(_QWORD *)v48 = v50;
  v51 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v51 + 16))((*(unsigned __int8 *)(v51 + 80) + 9 + v48) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80), (*(unsigned __int8 *)(v51 + 80) + 9 + v49) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
  return a1;
}

uint64_t sub_21C57483C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  int v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  _QWORD *v37;
  unint64_t *v38;
  unint64_t v39;
  id *v40;
  void **v41;
  size_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  id *v48;
  unint64_t v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  void *__src;
  uint64_t v68;
  uint64_t v69;

  if (a1 != a2)
  {
    v6 = *(unsigned __int8 *)(a1 + 24);
    if (v6 >= 2)
      v6 = *(_DWORD *)a1 + 2;
    if (v6 == 1)
    {
      swift_release();
      swift_release();
      sub_21C55DAAC(*(_QWORD *)(a1 + 16));
    }
    else
    {
      sub_21C55DAAC(*(_QWORD *)a1);
      swift_release();
    }
    v7 = *(unsigned __int8 *)(a2 + 24);
    if (v7 >= 2)
      v7 = *(_DWORD *)a2 + 2;
    if (v7 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v8 = *(_QWORD *)(a2 + 16);
      swift_retain();
      swift_retain();
      sub_21C55DA30(v8);
      *(_QWORD *)(a1 + 16) = v8;
      *(_BYTE *)(a1 + 24) = 1;
    }
    else
    {
      v9 = *(_QWORD *)a2;
      sub_21C55DA30(*(_QWORD *)a2);
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 24) = 0;
      swift_retain();
    }
  }
  v10 = a1 & 0xFFFFFFFFFFFFFFF8;
  v11 = (_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  v12 = a2 & 0xFFFFFFFFFFFFFFF8;
  v13 = (a2 & 0xFFFFFFFFFFFFFFF8) + 32;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  LODWORD(v15) = -1;
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  else
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  v17 = v16 - 1;
  v18 = *(_QWORD *)(v12 + 56);
  if (v18 < 0xFFFFFFFF)
    v15 = *(_QWORD *)(v12 + 56);
  v19 = v15 - 1;
  if ((v17 & 0x80000000) == 0)
  {
    if (v19 < 0)
      goto LABEL_19;
LABEL_24:
    *v11 = *(_OWORD *)v13;
    v20 = *(_OWORD *)(v13 + 16);
    v21 = *(_OWORD *)(v13 + 32);
    v22 = *(_OWORD *)(v13 + 48);
    *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v13 + 64);
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = v21;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 80) = v22;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v20;
    goto LABEL_31;
  }
  if ((v19 & 0x80000000) == 0)
  {
    if (v14)
      __swift_destroy_boxed_opaque_existential_0((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
    goto LABEL_24;
  }
  if (v14)
  {
    v23 = (uint64_t *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
    if (v18)
    {
      __swift_assign_boxed_opaque_existential_1(v23, (uint64_t *)v13);
      goto LABEL_30;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
LABEL_29:
    v24 = *(_OWORD *)v13;
    v25 = *(_OWORD *)(v13 + 16);
    *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v13 + 32);
    *v11 = v24;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v25;
    goto LABEL_30;
  }
LABEL_19:
  if (!v18)
    goto LABEL_29;
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56) = v18;
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v13 + 32);
  (**(void (***)(unint64_t, unint64_t))(v18 - 8))((a1 & 0xFFFFFFFFFFFFFFF8) + 32, v13);
LABEL_30:
  v26 = *(_QWORD *)(v13 + 40);
  *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 80) = *(_BYTE *)(v13 + 48);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72) = v26;
  v27 = *(_QWORD *)(v13 + 56);
  *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v13 + 64);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 88) = v27;
LABEL_31:
  *(_QWORD *)(v10 + 104) = *(_QWORD *)(v12 + 104);
  v69 = a3;
  v28 = *(_QWORD *)(a3 + 16);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_DWORD *)(v29 + 84);
  v31 = *(_DWORD *)(v29 + 80) & 0xF8;
  v32 = v31 | 7;
  v33 = ~(v31 | 7);
  v34 = (v10 + (v31 | 7) + 112) & v33;
  v35 = (v12 + (v31 | 7) + 112) & v33;
  v36 = *(_QWORD *)(v29 + 64);
  v68 = (v31 + 23) & v33;
  v37 = (_QWORD *)((v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  v38 = (unint64_t *)((v35 + 15) & 0xFFFFFFFFFFFFFFF8);
  v39 = *v38;
  if (*v37 < 0xFFFFFFFFuLL)
  {
    if (v39 >= 0xFFFFFFFF)
    {
      v66 = v28;
      __src = (void *)v35;
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *v37 = *v38;
      v40 = (id *)(((unint64_t)v37 + v32 + 8) & v33);
      v41 = (void **)(((unint64_t)v38 + v32 + 8) & v33);
      if (v30)
        v42 = v36;
      else
        v42 = v36 + 1;
      if (v42 <= 8)
        v43 = 8;
      else
        v43 = v42;
      v46 = *((unsigned __int8 *)v41 + v43);
      swift_retain();
      swift_retain();
      if (v46 >= 3)
      {
        if (v43 <= 3)
          v47 = v43;
        else
          v47 = 4;
        __asm { BR              X11 }
      }
      if (v46 != 2)
      {
        if (v46 != 1)
        {
LABEL_100:
          v58 = *v41;
          *v40 = *v41;
          *((_BYTE *)v40 + v43) = 0;
          v59 = v58;
LABEL_103:
          v53 = v68;
          v54 = v69;
          v35 = (uint64_t)__src;
          goto LABEL_104;
        }
        goto LABEL_79;
      }
LABEL_101:
      *(_BYTE *)v40 = *(_BYTE *)v41;
      v55 = 2;
LABEL_102:
      *((_BYTE *)v40 + v43) = v55;
      goto LABEL_103;
    }
    if (v30)
      v52 = *(_QWORD *)(v29 + 64);
    else
      v52 = v36 + 1;
    if (v52 <= 8)
      v43 = 8;
    else
      v43 = v52;
    v53 = v68;
    memcpy((void *)v34, (const void *)v35, v43 + v68 + 1);
    v54 = v69;
  }
  else
  {
    v66 = v28;
    __src = (void *)v35;
    if (v39 >= 0xFFFFFFFF)
    {
      *(_QWORD *)v34 = *(_QWORD *)v35;
      swift_retain();
      swift_release();
      *v37 = *v38;
      swift_retain();
      swift_release();
      v40 = (id *)(((unint64_t)v37 + v32 + 8) & v33);
      v41 = (void **)(((unint64_t)v38 + v32 + 8) & v33);
      if (v30)
        v42 = v36;
      else
        v42 = v36 + 1;
      if (v42 <= 8)
        v43 = 8;
      else
        v43 = v42;
      if (v40 == v41)
        goto LABEL_103;
      v44 = *((unsigned __int8 *)v40 + v43);
      if (v44 >= 3)
      {
        if (v43 <= 3)
          v45 = v43;
        else
          v45 = 4;
        __asm { BR              X12 }
      }
      if (v44 != 2)
      {
        if (v44 == 1)
        {
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v29 + 48))(v40, 1, v66))
            (*(void (**)(id *, uint64_t))(v29 + 8))(v40, v66);
        }
        else
        {

        }
      }
      v56 = *((unsigned __int8 *)v41 + v43);
      if (v56 >= 3)
      {
        if (v43 <= 3)
          v57 = v43;
        else
          v57 = 4;
        __asm { BR              X12 }
      }
      if (v56 != 2)
      {
        if (v56 != 1)
          goto LABEL_100;
LABEL_79:
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(v41, 1, v66))
        {
          memcpy(v40, v41, v42);
        }
        else
        {
          (*(void (**)(id *, void **, uint64_t))(v29 + 16))(v40, v41, v66);
          (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v40, 0, 1, v66);
        }
        v55 = 1;
        goto LABEL_102;
      }
      goto LABEL_101;
    }
    swift_release();
    swift_release();
    v48 = (id *)(((unint64_t)v37 + v32 + 8) & v33);
    if (v30)
      v49 = v36;
    else
      v49 = v36 + 1;
    if (v49 <= 8)
      v43 = 8;
    else
      v43 = v49;
    v50 = *((unsigned __int8 *)v48 + v43);
    if (v50 >= 3)
    {
      if (v43 <= 3)
        v51 = v43;
      else
        v51 = 4;
      __asm { BR              X12 }
    }
    v53 = v68;
    v54 = v69;
    if (v50 != 2)
    {
      if (v50 == 1)
      {
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v29 + 48))(v48, 1, v66))
          (*(void (**)(id *, uint64_t))(v29 + 8))(v48, v66);
      }
      else
      {

      }
    }
    v35 = (uint64_t)__src;
    memcpy((void *)v34, __src, v43 + v68 + 1);
  }
LABEL_104:
  v60 = v43 + v53 + 1;
  v61 = ((v34 | 7) + v60) & 0xFFFFFFFFFFFFFFF8;
  v62 = ((v35 | 7) + v60) & 0xFFFFFFFFFFFFFFF8;
  v63 = *(_QWORD *)v62;
  *(_BYTE *)(v61 + 8) = *(_BYTE *)(v62 + 8);
  *(_QWORD *)v61 = v63;
  v64 = *(_QWORD *)(*(_QWORD *)(v54 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v64 + 24))((*(unsigned __int8 *)(v64 + 80) + 9 + v61) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80), (*(unsigned __int8 *)(v64 + 80) + 9 + v62) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
  return a1;
}

uint64_t sub_21C574F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v5;
  char v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  size_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = a3;
  v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 >= 2)
    v5 = *(_DWORD *)a2 + 2;
  if (v5 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v6 = 1;
  }
  else
  {
    v6 = 0;
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_BYTE *)(a1 + 24) = v6;
  v7 = a1 & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v7 + 32) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  v8 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 48);
  v9 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 64);
  v10 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 80);
  *(_BYTE *)(v7 + 96) = *(_BYTE *)((a2 & 0xFFFFFFFFFFFFFFF8) + 96);
  *(_OWORD *)(v7 + 64) = v9;
  *(_OWORD *)(v7 + 80) = v10;
  *(_OWORD *)(v7 + 48) = v8;
  *(_QWORD *)(v7 + 104) = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 104);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = *(_DWORD *)(v12 + 80) & 0xF8;
  v15 = v14 | 7;
  v16 = ((a1 & 0xFFFFFFFFFFFFFFF8) + (v14 | 7) + 112) & ~(v14 | 7);
  v17 = ((a2 & 0xFFFFFFFFFFFFFFF8) + (v14 | 7) + 112) & ~(v14 | 7);
  v18 = *(_QWORD *)(v12 + 64);
  v19 = (v14 + 23) & ~(v14 | 7);
  v20 = (_QWORD *)((v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (!v13)
      ++v18;
    if (v18 <= 8)
      v29 = 8;
    else
      v29 = v18;
    memcpy((void *)v16, (const void *)v17, v29 + v19 + 1);
  }
  else
  {
    v21 = ~v15;
    v22 = v13 == 0;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v23 = (_QWORD *)((v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v23 = *v20;
    v24 = v15 + 8;
    v25 = (unint64_t)v23 + v24;
    v26 = (_BYTE *)(v25 & v21);
    v27 = (_BYTE *)(((unint64_t)v20 + v24) & v21);
    if (v22)
      v28 = v18 + 1;
    else
      v28 = v18;
    if (v28 <= 8)
      v29 = 8;
    else
      v29 = v28;
    v30 = v27[v29];
    if (v30 >= 3)
    {
      if (v29 <= 3)
        v31 = v29;
      else
        v31 = 4;
      __asm { BR              X12 }
    }
    if (v30 == 2)
    {
      *v26 = *v27;
      v26[v29] = 2;
    }
    else if (v30 == 1)
    {
      v32 = (void *)(v25 & v21);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v27, 1, v11))
      {
        memcpy(v32, v27, v28);
      }
      else
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v12 + 32))(v32, v27, v11);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v32, 0, 1, v11);
      }
      *((_BYTE *)v32 + v29) = 1;
      v3 = a3;
    }
    else
    {
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v26[v29] = 0;
    }
  }
  v33 = v29 + v19 + 1;
  v34 = ((v16 | 7) + v33) & 0xFFFFFFFFFFFFFFF8;
  v35 = ((v17 | 7) + v33) & 0xFFFFFFFFFFFFFFF8;
  v36 = *(_QWORD *)v35;
  *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
  *(_QWORD *)v34 = v36;
  v37 = *(_QWORD *)(*(_QWORD *)(v3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v37 + 32))((*(unsigned __int8 *)(v37 + 80) + 9 + v34) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80), (*(unsigned __int8 *)(v37 + 80) + 9 + v35) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
  return a1;
}

uint64_t sub_21C575238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  unsigned int v7;
  char v8;
  unint64_t v9;
  _OWORD *v10;
  unint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  _QWORD *v27;
  unint64_t *v28;
  unint64_t v29;
  id *v30;
  id *v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  id *v38;
  unint64_t v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  if (a1 != a2)
  {
    v6 = *(unsigned __int8 *)(a1 + 24);
    if (v6 >= 2)
      v6 = *(_DWORD *)a1 + 2;
    if (v6 == 1)
    {
      swift_release();
      swift_release();
      sub_21C55DAAC(*(_QWORD *)(a1 + 16));
    }
    else
    {
      sub_21C55DAAC(*(_QWORD *)a1);
      swift_release();
    }
    v7 = *(unsigned __int8 *)(a2 + 24);
    if (v7 >= 2)
      v7 = *(_DWORD *)a2 + 2;
    if (v7 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v8 = 1;
    }
    else
    {
      v8 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(_BYTE *)(a1 + 24) = v8;
  }
  v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  v10 = (_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  v11 = a2 & 0xFFFFFFFFFFFFFFF8;
  v12 = (_OWORD *)(v11 + 32);
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  LODWORD(v14) = -1;
  if (v13 < 0xFFFFFFFF)
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 56);
  if ((int)v14 - 1 >= 0)
    goto LABEL_16;
  v37 = *(_QWORD *)(v11 + 56);
  if (v37 >= 0xFFFFFFFF)
    LODWORD(v37) = -1;
  if ((int)v37 - 1 >= 0)
  {
    if (v13)
      __swift_destroy_boxed_opaque_existential_0((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
LABEL_16:
    *v10 = *v12;
    v15 = *(_OWORD *)(v11 + 48);
    v16 = *(_OWORD *)(v11 + 64);
    v17 = *(_OWORD *)(v11 + 80);
    *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v11 + 96);
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = v16;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 80) = v17;
    *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v15;
    goto LABEL_17;
  }
  if (v13)
    __swift_destroy_boxed_opaque_existential_0((a1 & 0xFFFFFFFFFFFFFFF8) + 32);
  v44 = *v12;
  v45 = *(_OWORD *)(v11 + 48);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 64) = *(_QWORD *)(v11 + 64);
  *v10 = v44;
  *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 48) = v45;
  v46 = *(_QWORD *)(v11 + 72);
  *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 80) = *(_BYTE *)(v11 + 80);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 72) = v46;
  v47 = *(_QWORD *)(v11 + 88);
  *(_BYTE *)((a1 & 0xFFFFFFFFFFFFFFF8) + 96) = *(_BYTE *)(v11 + 96);
  *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 88) = v47;
LABEL_17:
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v11 + 104);
  v18 = *(_QWORD *)(a3 + 16);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_DWORD *)(v19 + 84);
  v21 = *(_DWORD *)(v19 + 80) & 0xF8;
  v22 = v21 | 7;
  v23 = ~(v21 | 7);
  v24 = (v9 + (v21 | 7) + 112) & v23;
  v25 = (v11 + (v21 | 7) + 112) & v23;
  v26 = *(_QWORD *)(v19 + 64);
  v59 = (v21 + 23) & v23;
  v60 = a3;
  v27 = (_QWORD *)((v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  v28 = (unint64_t *)((v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  v29 = *v28;
  if (*v27 < 0xFFFFFFFFuLL)
  {
    if (v29 < 0xFFFFFFFF)
    {
      if (v20)
        v42 = *(_QWORD *)(v19 + 64);
      else
        v42 = v26 + 1;
      if (v42 <= 8)
        v32 = 8;
      else
        v32 = v42;
      v43 = v59;
      memcpy((void *)v24, (const void *)v25, v32 + v59 + 1);
      goto LABEL_96;
    }
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *v27 = *v28;
    v30 = (id *)(((unint64_t)v27 + v22 + 8) & v23);
    v31 = (id *)(((unint64_t)v28 + v22 + 8) & v23);
    if (!v20)
      ++v26;
    if (v26 <= 8)
      v32 = 8;
    else
      v32 = v26;
    v35 = *((unsigned __int8 *)v31 + v32);
    if (v35 >= 3)
    {
      if (v32 <= 3)
        v36 = v32;
      else
        v36 = 4;
      __asm { BR              X12 }
    }
    if (v35 != 2)
    {
      if (v35 == 1)
      {
        v49 = v18;
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v19 + 48))(v31, 1, v18))
        {
LABEL_91:
          (*(void (**)(id *, id *, uint64_t))(v19 + 32))(v30, v31, v49);
          (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v30, 0, 1, v49);
          goto LABEL_92;
        }
LABEL_72:
        memcpy(v30, v31, v26);
LABEL_92:
        v43 = v59;
        *((_BYTE *)v30 + v32) = 1;
LABEL_96:
        v48 = v60;
        goto LABEL_97;
      }
LABEL_95:
      v43 = v59;
      *v30 = *v31;
      *((_BYTE *)v30 + v32) = 0;
      goto LABEL_96;
    }
    goto LABEL_93;
  }
  v58 = v18;
  if (v29 >= 0xFFFFFFFF)
  {
    *(_QWORD *)v24 = *(_QWORD *)v25;
    swift_release();
    *v27 = *v28;
    swift_release();
    v30 = (id *)(((unint64_t)v27 + v22 + 8) & v23);
    v31 = (id *)(((unint64_t)v28 + v22 + 8) & v23);
    if (!v20)
      ++v26;
    if (v26 <= 8)
      v32 = 8;
    else
      v32 = v26;
    if (v30 == v31)
      goto LABEL_94;
    v33 = *((unsigned __int8 *)v30 + v32);
    if (v33 >= 3)
    {
      if (v32 <= 3)
        v34 = v32;
      else
        v34 = 4;
      __asm { BR              X12 }
    }
    if (v33 != 2)
    {
      if (v33 == 1)
      {
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v19 + 48))(v30, 1, v58))
          (*(void (**)(id *, uint64_t))(v19 + 8))(v30, v58);
      }
      else
      {

      }
    }
    v50 = *((unsigned __int8 *)v31 + v32);
    if (v50 >= 3)
    {
      if (v32 <= 3)
        v51 = v32;
      else
        v51 = 4;
      __asm { BR              X12 }
    }
    if (v50 != 2)
    {
      if (v50 == 1)
      {
        v49 = v58;
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v19 + 48))(v31, 1, v58))
          goto LABEL_91;
        goto LABEL_72;
      }
      goto LABEL_95;
    }
LABEL_93:
    *(_BYTE *)v30 = *(_BYTE *)v31;
    *((_BYTE *)v30 + v32) = 2;
LABEL_94:
    v43 = v59;
    v48 = v60;
    goto LABEL_97;
  }
  swift_release();
  swift_release();
  v38 = (id *)(((unint64_t)v27 + v22 + 8) & v23);
  if (v20)
    v39 = v26;
  else
    v39 = v26 + 1;
  if (v39 <= 8)
    v32 = 8;
  else
    v32 = v39;
  v40 = *((unsigned __int8 *)v38 + v32);
  if (v40 >= 3)
  {
    if (v32 <= 3)
      v41 = v32;
    else
      v41 = 4;
    __asm { BR              X12 }
  }
  v48 = v60;
  if (v40 != 2)
  {
    if (v40 == 1)
    {
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v19 + 48))(v38, 1, v58))
        (*(void (**)(id *, uint64_t))(v19 + 8))(v38, v58);
    }
    else
    {

    }
  }
  v43 = v59;
  memcpy((void *)v24, (const void *)v25, v32 + v59 + 1);
LABEL_97:
  v52 = v32 + v43 + 1;
  v53 = ((v24 | 7) + v52) & 0xFFFFFFFFFFFFFFF8;
  v54 = ((v25 | 7) + v52) & 0xFFFFFFFFFFFFFFF8;
  v55 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = *(_BYTE *)(v54 + 8);
  *(_QWORD *)v53 = v55;
  v56 = *(_QWORD *)(*(_QWORD *)(v48 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v56 + 40))((*(unsigned __int8 *)(v56 + 80) + 9 + v53) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80), (*(unsigned __int8 *)(v56 + 80) + 9 + v54) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
  return a1;
}

uint64_t sub_21C5758DC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  char v16;
  int v17;
  unsigned int v19;
  int v20;
  unint64_t v21;
  unint64_t v22;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (*(_DWORD *)(v4 + 84))
    v8 = *(_QWORD *)(v4 + 64);
  else
    v8 = *(_QWORD *)(v4 + 64) + 1;
  if (v8 <= 8)
    v8 = 8;
  if (!a2)
    return 0;
  v9 = *(_DWORD *)(v4 + 80) & 0xF8;
  v10 = v9 | 7;
  v11 = v8 + ((v9 + 23) & ~(v9 | 7)) + 1;
  v12 = *(unsigned __int8 *)(v5 + 80);
  v13 = v12 + 9;
  v14 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_27;
  v15 = ((v13 + ((v11 + ((v9 + 119) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v12) + *(_QWORD *)(v5 + 64);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v19 = ((v14 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v19 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v19 < 2)
    {
LABEL_27:
      v21 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v10 + 112) & ~v10;
      if (v6 > 0x7FFFFFFE)
        return (*(uint64_t (**)(unint64_t))(v5 + 48))((v13 + (((v21 | 7) + v11) & 0xFFFFFFFFFFFFFFF8)) & ~v12);
      v22 = *(_QWORD *)((v21 + 15) & 0xFFFFFFFFFFFFF8);
      if (v22 >= 0xFFFFFFFF)
        LODWORD(v22) = -1;
      if ((v22 + 1) >= 2)
        return v22;
      else
        return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_27;
LABEL_20:
  v20 = (v17 - 1) << v16;
  if (v15 > 3)
    v20 = 0;
  if (!(_DWORD)v15)
    return v7 + v20 + 1;
  if (v15 > 3)
    LODWORD(v15) = 4;
  return ((uint64_t (*)(void))((char *)&loc_21C575A04 + 4 * byte_21C5E7CA2[(v15 - 1)]))();
}

void sub_21C575AA8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFEu)
    v8 = 2147483646;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_DWORD *)(v5 + 84) == 0;
  v10 = *(_DWORD *)(v5 + 80) & 0xF8;
  v11 = (v10 + 119) & ~(v10 | 7);
  v12 = (v10 + 23) & ~(v10 | 7);
  if (v9)
    ++v6;
  if (v6 <= 8)
    v6 = 8;
  v13 = ((*(unsigned __int8 *)(v7 + 80) + 9 + ((v6 + v12 + 1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
      + *(_QWORD *)(v7 + 64);
  if (a3 > v8)
  {
    if (v13 <= 3)
    {
      v16 = ((a3 - v8 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
      if (HIWORD(v16))
      {
        v14 = 4u;
      }
      else if (v16 >= 0x100)
      {
        v14 = 2;
      }
      else
      {
        v14 = v16 > 1;
      }
    }
    else
    {
      v14 = 1u;
    }
  }
  else
  {
    v14 = 0;
  }
  if (v8 < a2)
  {
    v15 = ~v8 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v17 = v15 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *a1 = v17;
          *((_BYTE *)a1 + 2) = BYTE2(v17);
        }
        else if ((_DWORD)v13 == 2)
        {
          *a1 = v17;
        }
        else
        {
          *(_BYTE *)a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_21C575D70()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x21C575D5CLL);
}

void sub_21C575D80()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x21C575D5CLL);
}

void sub_21C575D88()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x21C575D5CLL);
}

void type metadata accessor for MapContentView()
{
  JUMPOUT(0x22077F91CLL);
}

void sub_21C575DA0()
{
  type metadata accessor for MapBridgingView();
}

void sub_21C575E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v17 = MEMORY[0x22077F9A0](&unk_21C5E81D8, a1);
  *(_QWORD *)(v15 - 144) = a1;
  *(_QWORD *)(v15 - 136) = v17;
  v18 = MEMORY[0x24BDF2AF8];
  v19 = MEMORY[0x22077F964](255, v15 - 144, MEMORY[0x24BDF2AF8], 0);
  *(_QWORD *)(v15 - 144) = a1;
  *(_QWORD *)(v15 - 136) = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v15 - 144) = v19;
  *(_QWORD *)(v15 - 136) = OpaqueTypeConformance2;
  v21 = MEMORY[0x22077F964](255, v15 - 144, v18, 0);
  *(_QWORD *)(v15 - 144) = v19;
  *(_QWORD *)(v15 - 136) = OpaqueTypeConformance2;
  v22 = swift_getOpaqueTypeConformance2();
  type metadata accessor for MapPreferenceWrapper(255, v21, v22, v23);
  v24 = sub_21C5E2EC0();
  *(_QWORD *)(v15 - 296) = v24;
  *(_QWORD *)(v15 - 312) = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v15 - 328) = (char *)&a9 - v25;
  *(_QWORD *)(v15 - 144) = v14;
  *(_QWORD *)(v15 - 136) = v9;
  *(_QWORD *)(v15 - 128) = v11;
  *(_QWORD *)(v15 - 120) = v13;
  *(_QWORD *)(v15 - 112) = v12;
  *(_QWORD *)(v15 - 104) = v10;
  type metadata accessor for _MapContentView.Child();
}

void sub_21C575F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v15 - 336) = *(_QWORD *)(a1 - 8);
  v16 = MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v15 - 344) = (char *)&a9 - v17;
  *(_QWORD *)(v15 - 144) = v14;
  *(_QWORD *)(v15 - 136) = v9;
  *(_QWORD *)(v15 - 128) = v11;
  *(_QWORD *)(v15 - 120) = v13;
  *(_QWORD *)(v15 - 112) = v12;
  *(_QWORD *)(v15 - 104) = v10;
  type metadata accessor for _MapContentView();
}

uint64_t sub_21C575F94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;

  *(_QWORD *)(v10 - 208) = v5;
  *(_QWORD *)(v10 - 200) = v9;
  *(_QWORD *)(v10 - 192) = v1;
  *(_QWORD *)(v10 - 184) = v8;
  *(_QWORD *)(v10 - 176) = v7;
  *(_QWORD *)(v10 - 168) = v2;
  *(_QWORD *)(v10 - 160) = *(_QWORD *)(v10 - 320);
  MEMORY[0x22077F9A0](&unk_21C5E8260, a1);
  sub_21C5E361C();
  v11 = *(_QWORD *)(v10 - 344);
  swift_dynamicCast();
  v12 = *(_QWORD *)(v10 - 336);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v3, v11, v6);
  *(_QWORD *)(v10 - 256) = v4;
  *(_QWORD *)(v10 - 248) = v6;
  *(_QWORD *)(v10 - 240) = MEMORY[0x22077F9A0](&unk_21C5E8560, v6);
  v13 = sub_21C5E2DB8();
  sub_21C52951C(v3, (uint64_t)sub_21C52A840, v10 - 272, v6, MEMORY[0x24BEE4078], v13, MEMORY[0x24BEE40A8], v14);
  v15 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v15(v3, v6);
  v16 = *(_QWORD *)(v10 - 328);
  sub_21C52BAE0(*(_DWORD *)(v10 - 144), v16);
  MEMORY[0x22077F9A0](&unk_21C5E8510, v4);
  sub_21C5E3628();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v10 - 312) + 8))(v16, *(_QWORD *)(v10 - 296));
  return ((uint64_t (*)(uint64_t, uint64_t))v15)(v11, v6);
}

void sub_21C576140(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[100];

  v18[35] = a7;
  v18[36] = a8;
  v18[34] = a6;
  v18[31] = a4;
  v18[32] = a5;
  v18[26] = a3;
  v18[19] = a1;
  v18[20] = a2;
  v18[2] = a9;
  v18[33] = a10;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289498);
  v18[5] = *(_QWORD *)(v14 - 8);
  v18[6] = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v18[3] = v16;
  v18[4] = (char *)v18 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18[22] = (char *)v18 - v17;
  v18[93] = a4;
  v18[94] = a5;
  v18[95] = a7;
  v18[96] = a8;
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C57620C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_21C5E37F0();
  v9[38] = sub_21C5E3BB0();
  v11 = sub_21C5E2EC0();
  *v9 = *(_QWORD *)(v11 - 8);
  v9[1] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v9[37] = (char *)&a9 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894A0);
  v9[9] = *(_QWORD *)(v13 - 8);
  v9[10] = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v9[7] = v15;
  v9[8] = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v9[39] = (char *)&a9 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894A8);
  v9[29] = v17;
  v9[13] = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v9[11] = v19;
  v9[12] = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v9[40] = (char *)&a9 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552894B0);
  v9[30] = v21;
  v22 = *(_QWORD *)(v21 - 8);
  v9[27] = *(_QWORD *)(v22 + 64);
  v9[28] = v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v9[25] = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v9[43] = (char *)&a9 - v25;
  v26 = sub_21C5E2EC0();
  v9[23] = *(_QWORD *)(v26 - 8);
  v9[24] = v26;
  MEMORY[0x24BDAC7A8](v26);
  v9[21] = (char *)&a9 - v27;
  v28 = type metadata accessor for _MapContentOutputs(0);
  MEMORY[0x24BDAC7A8](v28);
  v9[42] = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_21C5E346C();
  v9[17] = *(_QWORD *)(v30 - 8);
  v9[18] = v30;
  MEMORY[0x24BDAC7A8](v30);
  v9[16] = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_21C5E2ED8();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v9[15] = (char *)&a9 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&a9 - v36;
  v38 = sub_21C5E32C8();
  v39 = *(_QWORD *)(v38 - 8);
  v9[14] = v39;
  MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&a9 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = (int *)type metadata accessor for _MapContentInputs(0);
  v43 = MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)&a9 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v9[41] = (char *)&a9 - v46;
  v47 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  v47(v41, (char *)v9[19], v38);
  v48 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  v48(v37, (char *)v9[20], v32);
  *(_DWORD *)&v45[v42[7]] = *MEMORY[0x24BE096C0];
  v47(v45, v41, v38);
  v48(&v45[v42[5]], v37, v32);
  v48((char *)v9[15], v37, v32);
  v49 = v9[16];
  sub_21C5E3454();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v37, v32);
  (*(void (**)(char *, uint64_t))(v9[14] + 8))(v41, v38);
  (*(void (**)(char *, uint64_t, _QWORD))(v9[17] + 32))(&v45[v42[6]], v49, v9[18]);
  v9[19] = v45;
  sub_21C52AAD4((uint64_t)v45, v9[41], type metadata accessor for _MapContentInputs);
  sub_21C524ACC();
  sub_21C5E3448();
  sub_21C524A88();
  sub_21C5E3448();
  sub_21C524A44();
  sub_21C5E3448();
  sub_21C524A00();
  sub_21C5E3448();
  sub_21C5249BC();
  sub_21C5E3448();
  sub_21C52493C();
  sub_21C5E3448();
  v51 = v9[31];
  v50 = v9[32];
  *(_QWORD *)(v10 - 192) = v51;
  *(_QWORD *)(v10 - 184) = v50;
  v52 = v9[34];
  v53 = v9[35];
  *(_QWORD *)(v10 - 176) = v52;
  *(_QWORD *)(v10 - 168) = v53;
  v54 = v9[36];
  v55 = v9[33];
  *(_QWORD *)(v10 - 160) = v54;
  *(_QWORD *)(v10 - 152) = v55;
  *(_QWORD *)(v10 - 136) = v51;
  *(_QWORD *)(v10 - 128) = v50;
  *(_QWORD *)(v10 - 120) = v52;
  *(_QWORD *)(v10 - 112) = v53;
  *(_QWORD *)(v10 - 104) = v54;
  *(_QWORD *)(v10 - 96) = v55;
  type metadata accessor for _MapContentView();
}

void sub_21C5766D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  void (*v22)(_DWORD *, uint64_t);
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  void (*v28)(int *, uint64_t);
  _DWORD *v29;
  uint64_t v30;
  _DWORD *v31;
  uint64_t v32;
  _DWORD *v33;
  void (*v34)(_DWORD *, uint64_t);
  unsigned int *v35;
  uint64_t v36;
  _DWORD *v37;
  uint64_t v38;
  void (*v39)(_DWORD *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  *(_QWORD *)(v0 + 160) = sub_21C5E2EC0();
  v8 = *(_QWORD *)(v0 + 168);
  sub_21C59C8F8((void (*)(uint64_t))sub_21C589A10, v4, v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 32))(v8, *(_QWORD *)(v0 + 328), v4, v3);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(v8, *(_QWORD *)(v0 + 192));
  *(_QWORD *)(v0 + 624) = v6;
  *(_QWORD *)(v0 + 632) = v2;
  *(_QWORD *)(v0 + 640) = v4;
  *(_QWORD *)(v0 + 648) = v5;
  *(_QWORD *)(v0 + 656) = v1;
  *(_QWORD *)(v0 + 664) = v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
  sub_21C59C8F8((void (*)(uint64_t))sub_21C589A1C, v9, *(_QWORD *)(v0 + 344));
  *(_QWORD *)(v0 + 560) = v6;
  *(_QWORD *)(v0 + 568) = v2;
  *(_QWORD *)(v0 + 576) = v4;
  *(_QWORD *)(v0 + 584) = v5;
  *(_QWORD *)(v0 + 592) = v1;
  *(_QWORD *)(v0 + 600) = v3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2552890F0);
  sub_21C59C8F8((void (*)(uint64_t))sub_21C589A28, v10, *(_QWORD *)(v0 + 320));
  *(_QWORD *)(v0 + 496) = v6;
  *(_QWORD *)(v0 + 504) = v2;
  *(_QWORD *)(v0 + 512) = v4;
  *(_QWORD *)(v0 + 520) = v5;
  *(_QWORD *)(v0 + 528) = v1;
  *(_QWORD *)(v0 + 536) = v3;
  sub_21C59C8F8((void (*)(uint64_t))sub_21C589A34, (uint64_t)&type metadata for MapInteractionModes, *(_QWORD *)(v0 + 312));
  *(_QWORD *)(v0 + 432) = v6;
  *(_QWORD *)(v0 + 440) = v2;
  *(_QWORD *)(v0 + 448) = v4;
  *(_QWORD *)(v0 + 456) = v5;
  *(_QWORD *)(v0 + 464) = v1;
  *(_QWORD *)(v0 + 472) = v3;
  sub_21C59C8F8((void (*)(uint64_t))sub_21C589A40, *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 296));
  *(_QWORD *)(v0 + 368) = v6;
  *(_QWORD *)(v0 + 376) = v2;
  v11 = *(_DWORD **)(v0 + 200);
  *(_QWORD *)(v0 + 384) = v4;
  *(_QWORD *)(v0 + 392) = v5;
  *(_QWORD *)(v0 + 400) = v1;
  *(_QWORD *)(v0 + 408) = v3;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894E0);
  v13 = *(_QWORD *)(v0 + 176);
  v14 = *(_QWORD *)(v0 + 240);
  sub_21C59C8F8((void (*)(uint64_t))sub_21C589A4C, v12, v13);
  v15 = sub_21C523030();
  v16 = sub_21C523044();
  v17 = sub_21C523214();
  v18 = sub_21C523228();
  v19 = sub_21C52323C();
  v20 = sub_21C5231EC();
  v21 = *(_QWORD *)(v0 + 224);
  *(_DWORD *)(v0 + 208) = v20;
  (*(void (**)(_DWORD *, _QWORD, uint64_t))(v21 + 16))(v11, *(_QWORD *)(v0 + 344), v14);
  if (*(_QWORD *)(v0 + 216) != 4)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(_DWORD *)(v0 + 216) = v19;
  *(_DWORD *)(v0 + 192) = *v11;
  v22 = *(void (**)(_DWORD *, uint64_t))(v21 + 8);
  *(_QWORD *)(v0 + 224) = v22;
  v22(v11, v14);
  v24 = *(int **)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 104);
  v25 = *(_QWORD *)(v0 + 232);
  (*(void (**)(int *, _QWORD, uint64_t))(v23 + 16))(v24, *(_QWORD *)(v0 + 320), v25);
  if (*(_QWORD *)(v0 + 88) != 4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v26 = v25;
  *(_DWORD *)(v0 + 168) = v18;
  *(_DWORD *)(v0 + 184) = v17;
  *(_DWORD *)(v0 + 200) = v16;
  v27 = *v24;
  v28 = *(void (**)(int *, uint64_t))(v23 + 8);
  v28(v24, v26);
  v29 = *(_DWORD **)(v0 + 64);
  v30 = *(_QWORD *)(v0 + 72);
  v31 = *(_DWORD **)(v0 + 312);
  v32 = *(_QWORD *)(v0 + 80);
  (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v30 + 16))(v29, v31, v32);
  if (*(_QWORD *)(v0 + 56) != 4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *(_DWORD *)(v0 + 144) = v27;
  *(_DWORD *)(v0 + 160) = v15;
  *(_DWORD *)(v0 + 136) = *v29;
  v33 = v29;
  v34 = *(void (**)(_DWORD *, uint64_t))(v30 + 8);
  v34(v33, v32);
  v35 = *(unsigned int **)(v0 + 296);
  *(_DWORD *)(v0 + 304) = sub_21C52BB38(v35);
  v37 = *(_DWORD **)(v0 + 32);
  v36 = *(_QWORD *)(v0 + 40);
  v38 = *(_QWORD *)(v0 + 48);
  (*(void (**)(_DWORD *, uint64_t, uint64_t))(v36 + 16))(v37, v13, v38);
  if (*(_QWORD *)(v0 + 24) == 4)
  {
    *(_DWORD *)(v0 + 128) = *v37;
    v39 = *(void (**)(_DWORD *, uint64_t))(v36 + 8);
    v39(v37, v38);
    v39((_DWORD *)v13, v38);
    (*(void (**)(unsigned int *, _QWORD))(*(_QWORD *)v0 + 8))(v35, *(_QWORD *)(v0 + 8));
    v34(v31, v32);
    v28(*(int **)(v0 + 320), *(_QWORD *)(v0 + 232));
    (*(void (**)(_QWORD, _QWORD))(v0 + 224))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 240));
    sub_21C52A88C(*(_QWORD *)(v0 + 336), type metadata accessor for _MapContentOutputs);
    sub_21C52AAD4(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 152), type metadata accessor for _MapContentInputs);
    v40 = *(_QWORD *)(v0 + 256);
    *(_QWORD *)(v7 - 136) = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v7 - 128) = v40;
    v41 = *(_QWORD *)(v0 + 280);
    *(_QWORD *)(v7 - 120) = *(_QWORD *)(v0 + 272);
    *(_QWORD *)(v7 - 112) = v41;
    v42 = *(_QWORD *)(v0 + 264);
    *(_QWORD *)(v7 - 104) = *(_QWORD *)(v0 + 288);
    *(_QWORD *)(v7 - 96) = v42;
    type metadata accessor for _MapContentView.Child();
  }
LABEL_9:
  __break(1u);
}

void sub_21C576B00()
{
  type metadata accessor for _MapContentView();
}

uint64_t sub_21C576B34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v3 = v2 + *(int *)(a1 + 84);
  v7[2] = a1;
  v8 = v1;
  v4 = sub_21C5E2DD0();
  sub_21C52951C(v3, (uint64_t)sub_21C5976C4, (uint64_t)v7, v1, MEMORY[0x24BEE4078], v4, MEMORY[0x24BEE40A8], v5);
  return v9;
}

void sub_21C576B9C()
{
  type metadata accessor for _MapContentView();
}

uint64_t sub_21C576BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[16];

  v6[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
  v3 = sub_21C5E2DD0();
  sub_21C52951C(v1, (uint64_t)sub_21C5976C4, (uint64_t)v6, v2, MEMORY[0x24BEE4078], v3, MEMORY[0x24BEE40A8], v4);
  return v6[4];
}

void sub_21C576C40()
{
  type metadata accessor for _MapContentView();
}

uint64_t sub_21C576C70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[16];

  v6[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2552890F0);
  v3 = sub_21C5E2DD0();
  sub_21C52951C(v1, (uint64_t)sub_21C5976C4, (uint64_t)v6, v2, MEMORY[0x24BEE4078], v3, MEMORY[0x24BEE40A8], v4);
  return v6[4];
}

void sub_21C576CE4()
{
  type metadata accessor for _MapContentView();
}

uint64_t sub_21C576D14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[16];

  v5[2] = a1;
  v2 = sub_21C5E2DD0();
  sub_21C52951C(v1, (uint64_t)sub_21C589A6C, (uint64_t)v5, (uint64_t)&type metadata for MapInteractionModes, MEMORY[0x24BEE4078], v2, MEMORY[0x24BEE40A8], v3);
  return v5[4];
}

void sub_21C576D7C()
{
  type metadata accessor for _MapContentView();
}

void sub_21C576DC0()
{
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C576DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_21C5E37F0();
  v5 = sub_21C5E3BB0();
  v1 = sub_21C5E2DD0();
  sub_21C52951C(v0, (uint64_t)sub_21C5976C4, (uint64_t)&v4, v5, MEMORY[0x24BEE4078], v1, MEMORY[0x24BEE40A8], v2);
  return v6;
}

void sub_21C576E64()
{
  type metadata accessor for _MapContentView();
}

uint64_t sub_21C576E94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[16];

  v2 = v1 + *(int *)(a1 + 80);
  v7[2] = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894E0);
  v4 = sub_21C5E2DD0();
  sub_21C52951C(v2, (uint64_t)sub_21C589A6C, (uint64_t)v7, v3, MEMORY[0x24BEE4078], v4, MEMORY[0x24BEE40A8], v5);
  return v7[4];
}

unint64_t sub_21C576F10@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *Value;
  uint64_t v3;
  unint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
  Value = (_QWORD *)AGGraphGetValue();
  v3 = Value[1];
  v4 = Value[2];
  *a1 = *Value;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain();
  swift_retain();
  return sub_21C55DA30(v4);
}

uint64_t sub_21C576F78@<X0>(uint64_t a1@<X8>)
{
  uint64_t Value;

  __swift_instantiateConcreteTypeFromMangledName(qword_2552890F0);
  Value = AGGraphGetValue();
  return sub_21C531B18(Value, a1, qword_2552890F0);
}

void sub_21C576FCC()
{
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C577000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Value;

  sub_21C5E37F0();
  v1 = sub_21C5E3BB0();
  Value = AGGraphGetValue();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v0, Value, v1);
}

void sub_21C577058(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for MapBridgingView();
}

uint64_t sub_21C5770D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t Value;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  void (*v31)(_BYTE *, _BYTE *, uint64_t);
  void (*v32)(_BYTE *, uint64_t);
  _BYTE v34[96];

  v7 = MEMORY[0x22077F9A0](&unk_21C5E81D8, a1);
  *(_QWORD *)(v5 - 112) = a1;
  *(_QWORD *)(v5 - 104) = v7;
  v8 = MEMORY[0x24BDF2AF8];
  v9 = MEMORY[0x22077F964](255, v5 - 112, MEMORY[0x24BDF2AF8], 0);
  *(_QWORD *)(v5 - 112) = a1;
  *(_QWORD *)(v5 - 104) = v7;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v5 - 112) = v9;
  *(_QWORD *)(v5 - 104) = OpaqueTypeConformance2;
  v11 = MEMORY[0x22077F964](255, v5 - 112, v8, 0);
  *(_QWORD *)(v5 - 192) = v11;
  *(_QWORD *)(v5 - 112) = v9;
  *(_QWORD *)(v5 - 104) = OpaqueTypeConformance2;
  v12 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v5 - 200) = v12;
  v14 = type metadata accessor for MapPreferenceWrapper(0, v11, v12, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = &v34[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v20 = &v34[-v19];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552894E0);
  Value = AGGraphGetValue();
  *(_QWORD *)(v5 - 208) = *(_QWORD *)Value;
  v22 = *(_BYTE *)(Value + 8);
  sub_21C576F10((_QWORD *)(v5 - 112));
  v23 = *(_QWORD *)(v5 - 96);
  *(_OWORD *)(v5 - 136) = *(_OWORD *)(v5 - 112);
  *(_QWORD *)(v5 - 120) = v23;
  v24 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v1, v2);
  v25 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26 = (char *)swift_allocObject();
  v27 = *(_QWORD *)(v5 - 184);
  *((_QWORD *)v26 + 2) = *(_QWORD *)(v5 - 176);
  *((_QWORD *)v26 + 3) = v27;
  v28 = *(_QWORD *)(v5 - 160);
  *((_QWORD *)v26 + 4) = *(_QWORD *)(v2 + 32);
  *((_QWORD *)v26 + 5) = v28;
  v29 = *(_QWORD *)(v2 + 56);
  *((_QWORD *)v26 + 6) = *(_QWORD *)(v5 - 152);
  *((_QWORD *)v26 + 7) = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v26[v25], v24, v2);
  v30 = sub_21C578138(*(_QWORD *)(v5 - 208), v22, v5 - 136, (uint64_t)sub_21C596E20, (uint64_t)v26, *(_QWORD *)(v5 - 192), *(_QWORD *)(v5 - 200), (uint64_t)v18);
  MEMORY[0x22077F9A0](&unk_21C5E8510, v14, v30);
  v31 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 16);
  v31(v20, v18, v14);
  v32 = *(void (**)(_BYTE *, uint64_t))(v15 + 8);
  v32(v18, v14);
  v31(*(_BYTE **)(v5 - 144), v20, v14);
  return ((uint64_t (*)(_BYTE *, uint64_t))v32)(v20, v14);
}

void sub_21C577310(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[47];

  v23[31] = a5;
  v23[15] = a2;
  v23[29] = a1;
  v23[26] = a8;
  v23[30] = a9;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552897C8);
  MEMORY[0x24BDAC7A8](v13);
  v23[28] = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255288B40);
  MEMORY[0x24BDAC7A8](v15);
  v23[27] = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288B38);
  MEMORY[0x24BDAC7A8](v17);
  v23[34] = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(qword_255289410);
  MEMORY[0x24BDAC7A8](v19);
  v23[33] = (char *)v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for _MapContentInputs(0);
  MEMORY[0x24BDAC7A8](v21);
  v23[32] = (char *)v23 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[38] = a3;
  v23[39] = a4;
  v23[40] = a6;
  v23[41] = a7;
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C5774D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_21C5E37F0();
  v5 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v4 - 304) = v0;
  *(_QWORD *)(v4 - 296) = v3;
  *(_QWORD *)(v4 - 288) = v1;
  *(_QWORD *)(v4 - 280) = v2;
  type metadata accessor for MapBridgingView();
}

void sub_21C577548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v13 - 432) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 448) = (char *)&a9 - v15;
  v16 = MEMORY[0x22077F9A0](&unk_21C5E81D8, a1);
  *(_QWORD *)(v13 - 304) = a1;
  *(_QWORD *)(v13 - 296) = v16;
  v17 = MEMORY[0x24BDF2AF8];
  v18 = MEMORY[0x22077F964](0, v13 - 304, MEMORY[0x24BDF2AF8], 0);
  *(_QWORD *)(v13 - 424) = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 440) = (char *)&a9 - v19;
  *(_QWORD *)(v13 - 416) = a1;
  *(_QWORD *)(v13 - 304) = a1;
  *(_QWORD *)(v13 - 464) = v16;
  *(_QWORD *)(v13 - 296) = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v13 - 408) = v18;
  *(_QWORD *)(v13 - 304) = v18;
  *(_QWORD *)(v13 - 480) = OpaqueTypeConformance2;
  *(_QWORD *)(v13 - 296) = OpaqueTypeConformance2;
  v21 = MEMORY[0x22077F964](0, v13 - 304, v17, 0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v13 - 472) = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v13 - 456) = (char *)&a9 - v24;
  *(_QWORD *)(v13 - 304) = v9;
  *(_QWORD *)(v13 - 296) = v12;
  *(_QWORD *)(v13 - 288) = *(_QWORD *)(v13 - 360);
  *(_QWORD *)(v13 - 280) = v10;
  *(_QWORD *)(v13 - 272) = v11;
  *(_QWORD *)(v13 - 264) = *(_QWORD *)(v13 - 368);
  type metadata accessor for _MapContentView.Child();
}

void sub_21C57771C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = sub_21C53F400();
  if (v1)
  {
    *(_QWORD *)(v0 - 368) = v2;
    *(_QWORD *)(v0 - 360) = v1;
  }
  else
  {
    *(_QWORD *)(v0 - 360) = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
    *(_QWORD *)(v0 - 368) = v3;
  }
  v4 = sub_21C53F460();
  if (v4)
  {
    *(_QWORD *)(v0 - 504) = v5;
    *(_QWORD *)(v0 - 496) = v4;
    if (sub_21C53F4C0())
      goto LABEL_7;
  }
  else
  {
    *(_QWORD *)(v0 - 496) = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
    *(_QWORD *)(v0 - 504) = v13;
    if (sub_21C53F4C0())
    {
LABEL_7:
      *(_QWORD *)(v0 - 512) = v6;
      v7 = sub_21C53F520();
      if (v7)
      {
        *(_QWORD *)(v0 - 528) = v8;
        *(_QWORD *)(v0 - 520) = v7;
        v9 = sub_21C53F580();
        if (v9)
          goto LABEL_9;
      }
      else
      {
        *(_QWORD *)(v0 - 520) = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
        *(_QWORD *)(v0 - 528) = v14;
        v9 = sub_21C53F580();
        if (v9)
        {
LABEL_9:
          *(_QWORD *)(v0 - 544) = v10;
          *(_QWORD *)(v0 - 536) = v9;
          v11 = sub_21C53F5E0();
          if (v11)
          {
LABEL_10:
            *(_QWORD *)(v0 - 560) = v12;
            *(_QWORD *)(v0 - 552) = v11;
            goto LABEL_16;
          }
LABEL_15:
          *(_QWORD *)(v0 - 552) = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
          *(_QWORD *)(v0 - 560) = v16;
LABEL_16:
          sub_21C576F10((_QWORD *)(v0 - 112));
          v17 = *(_QWORD *)(v0 - 96);
          *(_OWORD *)(v0 - 136) = *(_OWORD *)(v0 - 112);
          *(_QWORD *)(v0 - 120) = v17;
          sub_21C576F78(v0 - 208);
          *(_QWORD *)(v0 - 216) = *(_QWORD *)AGGraphGetValue();
          sub_21C576FCC();
        }
      }
      *(_QWORD *)(v0 - 536) = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
      *(_QWORD *)(v0 - 544) = v15;
      v11 = sub_21C53F5E0();
      if (v11)
        goto LABEL_10;
      goto LABEL_15;
    }
  }
  sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
  goto LABEL_7;
}

void sub_21C5778B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  __int128 v9;

  if (AGGraphGetCurrentAttribute() != *MEMORY[0x24BE096C0])
  {
    *(_QWORD *)(v6 - 576) = (id)AGGraphGetAttributeSubgraph();
    sub_21C529664(v0 + *(int *)(v1 + 108), *(_QWORD *)(v6 - 352), type metadata accessor for _MapContentInputs);
    sub_21C531B18(*(_QWORD *)(v6 - 488), *(_QWORD *)(v6 - 344), qword_255289410);
    **(_QWORD **)(v6 - 336) = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288150);
    swift_storeEnumTagMultiPayload();
    KeyPath = swift_getKeyPath();
    *(_QWORD *)(v6 - 584) = v3;
    **(_QWORD **)(v6 - 392) = KeyPath;
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288B30);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)(v6 - 592) = swift_getKeyPath();
    *(_QWORD *)(v6 - 304) = swift_getKeyPath();
    *(_OWORD *)(v6 - 296) = 0u;
    *(_OWORD *)(v6 - 280) = 0u;
    *(_OWORD *)(v6 - 264) = 0u;
    *(_OWORD *)(v6 - 248) = 0u;
    *(_OWORD *)(v6 - 238) = 0u;
    v8 = swift_getKeyPath();
    *(_QWORD *)(v6 - 488) = v4;
    **(_QWORD **)(v6 - 384) = v8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289DC0);
    swift_storeEnumTagMultiPayload();
    swift_getKeyPath();
    swift_getKeyPath();
    *(_QWORD *)(v6 - 600) = v2;
    *(_QWORD *)(v6 - 568) = v5;
    swift_getKeyPath();
    *(_QWORD *)(v6 - 320) = swift_getKeyPath();
    *(_BYTE *)(v6 - 312) = 0;
    swift_getKeyPath();
    *((_QWORD *)&v9 + 1) = *(_QWORD *)(v6 - 544);
    *(_QWORD *)&v9 = *(_QWORD *)(v6 - 536);
    sub_21C577D64(*(_QWORD *)(v6 - 360), *(_QWORD *)(v6 - 368), *(_QWORD *)(v6 - 496), *(_QWORD *)(v6 - 504), *(_QWORD *)(v6 - 584), *(_QWORD *)(v6 - 512), *(_QWORD *)(v6 - 520), *(_QWORD *)(v6 - 528), *(_QWORD *)(v6 - 448), v9, *(_QWORD *)(v6 - 552), *(_QWORD *)(v6 - 560), (__int128 *)(v6 - 136), v6 - 208, (uint64_t *)(v6 - 216));
  }
  __break(1u);
}

void sub_21C577D64(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12, __int128 *a13, uint64_t a14, uint64_t *a15)
{
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  v16 = *a13;
  v17 = *((_QWORD *)a13 + 2);
  v18 = *a15;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 80) = a11;
  *(_QWORD *)(a9 + 88) = a12;
  *(_QWORD *)(a9 + 112) = v17;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 96) = v16;
  sub_21C52DB08(a14, a9 + 120, qword_2552890F0);
  *(_QWORD *)(a9 + 192) = v18;
  type metadata accessor for MapBridgingView();
}

void sub_21C577ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = v1;
  *(_QWORD *)(v4 - 96) = v0;
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C577EF0()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  char v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  sub_21C5E37F0();
  v7 = sub_21C5E3BB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v4, v7);
  *(_QWORD *)(v0 + v2[22]) = v1;
  sub_21C52AAD4(v3, v0 + v2[23], type metadata accessor for _MapContentInputs);
  sub_21C52DB08(v21, v0 + v2[24], qword_255289410);
  *(_QWORD *)(v0 + v2[25]) = v22;
  v8 = (uint64_t *)(v0 + v2[26]);
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289DB0);
  swift_storeEnumTagMultiPayload();
  v9 = (uint64_t *)(v0 + v2[27]);
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
  swift_storeEnumTagMultiPayload();
  sub_21C52DB08(v32, v0 + v2[28], &qword_255288B38);
  sub_21C52DB08(v34, v0 + v2[29], (uint64_t *)&unk_255288B40);
  v10 = v0 + v2[30];
  *(_QWORD *)v10 = v36;
  *(_BYTE *)(v10 + 8) = v37 & 1;
  v11 = v0 + v2[31];
  *(_OWORD *)v11 = v23;
  *(_OWORD *)(v11 + 16) = v25;
  *(_OWORD *)(v11 + 32) = v28;
  *(_OWORD *)(v11 + 48) = v30;
  *(_QWORD *)(v11 + 64) = v24;
  *(_QWORD *)(v11 + 72) = v27;
  *(_BYTE *)(v11 + 80) = v26;
  *(_BYTE *)(v11 + 81) = v29;
  sub_21C52DB08(v31, v0 + v2[32], &qword_2552897C8);
  v12 = v0 + v2[33];
  *(_QWORD *)v12 = *(_QWORD *)(v6 - 184);
  *(_BYTE *)(v12 + 8) = *(_DWORD *)(v6 - 172) & 1;
  v13 = v0 + v2[34];
  v14 = *(_QWORD *)(v6 - 160);
  *(_QWORD *)v13 = *(_QWORD *)(v6 - 168);
  *(_QWORD *)(v13 + 8) = v14;
  *(_BYTE *)(v13 + 16) = *(_DWORD *)(v6 - 148) & 1;
  v15 = v0 + v2[35];
  v16 = *(_QWORD *)(v6 - 136);
  *(_QWORD *)v15 = *(_QWORD *)(v6 - 144);
  *(_QWORD *)(v15 + 8) = v16;
  *(_BYTE *)(v15 + 16) = *(_DWORD *)(v6 - 128) & 1;
  v17 = v0 + v2[36];
  *(_QWORD *)v17 = v33;
  *(_BYTE *)(v17 + 8) = v35;
  v18 = v0 + v2[37];
  *(_QWORD *)v18 = v38;
  *(_BYTE *)(v18 + 8) = *(_DWORD *)(v6 - 124) & 1;
  v19 = v0 + v2[38];
  result = swift_getKeyPath();
  *(_QWORD *)v19 = result;
  *(_BYTE *)(v19 + 8) = 0;
  return result;
}

double sub_21C578138@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  _QWORD *v27;
  uint64_t v28;
  double v29[3];
  uint64_t v30;
  uint64_t v31;

  v30 = a4;
  v31 = a5;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)v29 = *(_OWORD *)a3;
  v17 = *(_QWORD *)(a3 + 16);
  type metadata accessor for MapPreferenceWrapperHolder();
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v19 = swift_unknownObjectWeakAssign();
  sub_21C531764(v19, v18 + 16);
  sub_21C597070(&qword_255289530, v20, (uint64_t (*)(uint64_t))type metadata accessor for MapPreferenceWrapperHolder, (uint64_t)&unk_21C5E8228);
  *(_QWORD *)a8 = sub_21C5E3004();
  *(_QWORD *)(a8 + 8) = v21;
  *(_QWORD *)(a8 + 16) = swift_getKeyPath();
  *(_BYTE *)(a8 + 24) = 0;
  *(_QWORD *)(a8 + 32) = 0;
  *(_BYTE *)(a8 + 40) = 1;
  *(_QWORD *)(a8 + 48) = swift_getKeyPath();
  v23 = type metadata accessor for MapPreferenceWrapper(0, a6, a7, v22);
  *(_QWORD *)(a8 + 56) = 0;
  *(_QWORD *)(a8 + 64) = 0;
  *(_BYTE *)(a8 + 72) = 0;
  v24 = type metadata accessor for KeyframeAnimationState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v16, 1, 1, v24);
  sub_21C5786A0((uint64_t)v16);
  *(_QWORD *)(a8 + 32) = a1;
  *(_BYTE *)(a8 + 40) = a2 & 1;
  v25 = a8 + *(int *)(v23 + 52);
  result = v29[0];
  *(_OWORD *)v25 = *(_OWORD *)v29;
  *(_QWORD *)(v25 + 16) = v17;
  v27 = (_QWORD *)(a8 + *(int *)(v23 + 56));
  v28 = v31;
  *v27 = v30;
  v27[1] = v28;
  return result;
}

void sub_21C5782F8()
{
  type metadata accessor for MapBridgingView();
}

uint64_t sub_21C57832C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v3 = MEMORY[0x22077F9A0](&unk_21C5E81D8, a1);
  v12 = a1;
  v13 = v3;
  v4 = MEMORY[0x24BDF2AF8];
  v5 = MEMORY[0x22077F964](255, &v12, MEMORY[0x24BDF2AF8], 0);
  v12 = a1;
  v13 = v3;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v12 = v5;
  v13 = OpaqueTypeConformance2;
  v7 = MEMORY[0x22077F964](255, &v12, v4, 0);
  v12 = v5;
  v13 = OpaqueTypeConformance2;
  v8 = swift_getOpaqueTypeConformance2();
  v10 = type metadata accessor for MapPreferenceWrapper(0, v7, v8, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v1, 1, 1, v10);
}

void sub_21C5783F8()
{
  type metadata accessor for _MapContentView();
}

uint64_t sub_21C578430(uint64_t a1)
{
  MEMORY[0x22077F9A0](&unk_21C5E8260, a1);
  return sub_21C5E3160();
}

uint64_t sub_21C578470(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  return sub_21C578488(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C575DA0);
}

uint64_t sub_21C57847C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  return sub_21C578488(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C5783F8);
}

uint64_t sub_21C578488(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], a3[7]);
}

void sub_21C5784A0()
{
  sub_21C5E3D48();
  __break(1u);
}

uint64_t sub_21C5784E8()
{
  uint64_t v0;

  type metadata accessor for MapPreferenceWrapperHolder();
  sub_21C597070(&qword_255289530, v0, (uint64_t (*)(uint64_t))type metadata accessor for MapPreferenceWrapperHolder, (uint64_t)&unk_21C5E8228);
  sub_21C5E2E24();
  sub_21C5E2E30();
  return swift_release();
}

uint64_t sub_21C578540()
{
  uint64_t v0;

  sub_21C5317A0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MapPreferenceWrapperHolder()
{
  return objc_opt_self();
}

uint64_t sub_21C578584@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for MapPreferenceWrapperHolder();
  result = sub_21C5E2E24();
  *a1 = result;
  return result;
}

double sub_21C5785BC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  double v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  sub_21C531A90(v1, v2);
  v3 = sub_21C52FA70(v1, v2);
  sub_21C531A84(v1, v2);
  return v3;
}

uint64_t sub_21C578610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_BYTE *)(v0 + 72);
  sub_21C58C04C(v1, v2, v3, v4);
  v5 = sub_21C52FC30(v1, v2, v3, v4);
  sub_21C531BE4(v1, v2, v3, v4);
  return v5;
}

uint64_t sub_21C5786A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
  MEMORY[0x24BDAC7A8](v2);
  sub_21C531B18(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_255289560);
  sub_21C5E3778();
  return sub_21C524980(a1, (uint64_t *)&unk_255289560);
}

uint64_t sub_21C578740(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
  MEMORY[0x24BDAC7A8](v2);
  sub_21C531B18(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_255289560);
  __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
  sub_21C5E3790();
  return sub_21C524980(a1, (uint64_t *)&unk_255289560);
}

void (*sub_21C5787EC(void **a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v2;
  size_t v5;
  uint64_t v6;
  void *v7;

  v5 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560) - 8) + 64);
  *a1 = malloc(v5);
  a1[1] = malloc(v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
  a1[2] = (void *)v6;
  v7 = malloc(*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  a1[3] = v7;
  sub_21C531B18(v2 + *(int *)(a2 + 48), (uint64_t)v7, qword_255289698);
  sub_21C5E3784();
  return sub_21C5788B0;
}

void sub_21C5788B0(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;

  v2 = *(void **)(a1 + 24);
  v3 = *(void **)a1;
  v4 = *(void **)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    sub_21C531B18(*(_QWORD *)(a1 + 8), (uint64_t)v3, (uint64_t *)&unk_255289560);
    sub_21C5E3790();
    sub_21C524980((uint64_t)v2, qword_255289698);
    v5 = (uint64_t)v4;
    v6 = (uint64_t *)&unk_255289560;
  }
  else
  {
    sub_21C5E3790();
    v6 = qword_255289698;
    v5 = (uint64_t)v2;
  }
  sub_21C524980(v5, v6);
  free(v2);
  free(v4);
  free(v3);
}

uint64_t sub_21C578954()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
  return sub_21C5E37CC();
}

uint64_t sub_21C5789B0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD v35[2];
  _QWORD v36[2];
  _QWORD v37[2];

  v29 = a2;
  sub_21C5E34CC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552897F0);
  v3 = sub_21C5E30A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552897F8);
  v4 = sub_21C5E30A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289800);
  v5 = sub_21C5E30A0();
  v6 = MEMORY[0x24BDF0B90];
  v37[0] = *(_QWORD *)(a1 + 24);
  v37[1] = sub_21C5616A0(&qword_255289808, &qword_2552897F0, MEMORY[0x24BDF0B90]);
  v7 = MEMORY[0x24BDED308];
  v36[0] = MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v3, v37);
  v36[1] = sub_21C5616A0(&qword_255289810, &qword_2552897F8, v6);
  v35[0] = MEMORY[0x22077F9A0](v7, v4, v36);
  v35[1] = sub_21C5616A0(&qword_255289818, &qword_255289800, v6);
  MEMORY[0x22077F9A0](v7, v5, v35);
  v8 = sub_21C5E2FEC();
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289820);
  v10 = MEMORY[0x22077F9A0](MEMORY[0x24BDEC6F8], v8);
  v11 = sub_21C596FC8();
  v31 = v8;
  v32 = v9;
  v33 = v10;
  v34 = v11;
  v12 = MEMORY[0x24BDF38E8];
  v13 = MEMORY[0x22077F964](255, &v31, MEMORY[0x24BDF38E8], 0);
  v14 = sub_21C5E2D64();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v31 = v8;
  v32 = v9;
  v33 = v10;
  v34 = v11;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v17 = sub_21C597070(&qword_255289838, 255, v15, MEMORY[0x24BDCE958]);
  v31 = v13;
  v32 = v14;
  v33 = OpaqueTypeConformance2;
  v34 = v17;
  MEMORY[0x22077F964](255, &v31, v12, 0);
  sub_21C597070(&qword_255289840, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0768], MEMORY[0x24BDF0760]);
  v18 = sub_21C5E2F14();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v28 - v23;
  sub_21C578CE0(a1, (uint64_t)v22);
  v31 = v13;
  v32 = v14;
  v33 = OpaqueTypeConformance2;
  v34 = v17;
  v30 = swift_getOpaqueTypeConformance2();
  MEMORY[0x22077F9A0](MEMORY[0x24BDEBD40], v18, &v30);
  v25 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v25(v24, v22, v18);
  v26 = *(void (**)(char *, uint64_t))(v19 + 8);
  v26(v22, v18);
  v25(v29, v24, v18);
  return ((uint64_t (*)(char *, uint64_t))v26)(v24, v18);
}

uint64_t sub_21C578CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD v44[2];
  _QWORD v45[2];
  _QWORD v46[2];

  v39[1] = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39[0] = sub_21C5E34CC();
  MEMORY[0x24BDAC7A8](v39[0]);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
  sub_21C5E3784();
  v11 = type metadata accessor for KeyframeAnimationState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v8, 1, v11);
  sub_21C524980((uint64_t)v8, (uint64_t *)&unk_255289560);
  sub_21C5E34C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v13 = swift_allocObject();
  v14 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v13 + 24) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13 + v12, (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552897F0);
  v15 = sub_21C5E30A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552897F8);
  v16 = sub_21C5E30A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289800);
  v17 = sub_21C5E30A0();
  v18 = MEMORY[0x24BDF0B90];
  v19 = sub_21C5616A0(&qword_255289808, &qword_2552897F0, MEMORY[0x24BDF0B90]);
  v46[0] = v14;
  v46[1] = v19;
  v20 = MEMORY[0x24BDED308];
  v21 = MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v15, v46);
  v22 = sub_21C5616A0(&qword_255289810, &qword_2552897F8, v18);
  v45[0] = v21;
  v45[1] = v22;
  v23 = MEMORY[0x22077F9A0](v20, v16, v45);
  v24 = sub_21C5616A0(&qword_255289818, &qword_255289800, v18);
  v44[0] = v23;
  v44[1] = v24;
  MEMORY[0x22077F9A0](v20, v17, v44);
  v25 = sub_21C5E2FEC();
  v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289820);
  v27 = MEMORY[0x22077F9A0](MEMORY[0x24BDEC6F8], v25);
  v28 = sub_21C596FC8();
  v40 = v25;
  v41 = v26;
  v42 = v27;
  v43 = v28;
  v29 = MEMORY[0x24BDF38E8];
  v30 = MEMORY[0x22077F964](255, &v40, MEMORY[0x24BDF38E8], 0);
  v31 = sub_21C5E2D64();
  v32 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v40 = v25;
  v41 = v26;
  v42 = v27;
  v43 = v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v34 = sub_21C597070(&qword_255289838, 255, v32, MEMORY[0x24BDCE958]);
  v40 = v30;
  v41 = v31;
  v42 = OpaqueTypeConformance2;
  v43 = v34;
  v35 = MEMORY[0x22077F964](0, &v40, v29, 0);
  v36 = sub_21C597070(&qword_255289840, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDF0768], MEMORY[0x24BDF0760]);
  v40 = v30;
  v41 = v31;
  v42 = OpaqueTypeConformance2;
  v43 = v34;
  v37 = swift_getOpaqueTypeConformance2();
  return sub_21C57A798((uint64_t)v10, (uint64_t)sub_21C5970B4, v13, v39[0], v35, v36, v37);
}

uint64_t sub_21C5790B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(uint64_t, char *);
  uint64_t v7;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_255289410);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(uint64_t, char *))(v1 + *(int *)(a1 + 56));
  v7 = *(_QWORD *)(v1 + 8);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
  sub_21C5E379C();
  v6(v7, v5);
  swift_release();
  return sub_21C524980((uint64_t)v5, qword_255289410);
}

uint64_t sub_21C57918C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v4 + 16))((char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v7 + 24) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552897F0);
  v9 = sub_21C5E30A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552897F8);
  v10 = sub_21C5E30A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289800);
  v11 = sub_21C5E30A0();
  v12 = MEMORY[0x24BDF0B90];
  v13 = sub_21C5616A0(&qword_255289808, &qword_2552897F0, MEMORY[0x24BDF0B90]);
  v23[0] = v8;
  v23[1] = v13;
  v14 = MEMORY[0x24BDED308];
  v15 = MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v9, v23);
  v16 = sub_21C5616A0(&qword_255289810, &qword_2552897F8, v12);
  v22[0] = v15;
  v22[1] = v16;
  v17 = MEMORY[0x22077F9A0](v14, v10, v22);
  v18 = sub_21C5616A0(&qword_255289818, &qword_255289800, v12);
  v21[0] = v17;
  v21[1] = v18;
  MEMORY[0x22077F9A0](v14, v11, v21);
  result = sub_21C5E2FE0();
  *a2 = result;
  a2[1] = v20;
  return result;
}

uint64_t sub_21C57936C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t inited;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _QWORD v77[2];
  _QWORD v78[2];
  unint64_t v79;
  char v80;
  _QWORD v81[3];

  v63 = a2;
  v76 = a5;
  v65 = type metadata accessor for MapSizingInformation();
  v66 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_21C5E2F80();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289850);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552897F0);
  v61 = a3;
  v20 = sub_21C5E30A0();
  v68 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v62 = (char *)&v60 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552897F8);
  v67 = v20;
  v22 = sub_21C5E30A0();
  v72 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v69 = (char *)&v60 - v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289800);
  v74 = v22;
  v75 = sub_21C5E30A0();
  v73 = *(_QWORD *)(v75 - 8);
  v24 = MEMORY[0x24BDAC7A8](v75);
  v70 = (char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v71 = (char *)&v60 - v26;
  v27 = a3;
  v28 = a4;
  v30 = type metadata accessor for MapPreferenceWrapper(0, v27, a4, v29);
  v31 = v63;
  sub_21C5790B8(v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255289858);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v32 = v31;
  v33 = sub_21C5785BC();
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v34(v9, 1, 1, v10);
  sub_21C524980((uint64_t)v9, &qword_255289860);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v13, v10);
  v34(v9, 0, 1, v10);
  v35 = v65;
  *(double *)&v9[*(int *)(v65 + 20)] = v33;
  v36 = (uint64_t)v9;
  v37 = v62;
  sub_21C52AAD4(v36, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for MapSizingInformation);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v17, 0, 1, v35);
  sub_21C5616A0(&qword_255289868, &qword_255289858, (uint64_t)&unk_21C5E9100);
  v38 = v61;
  sub_21C5E3658();
  sub_21C524980((uint64_t)v17, &qword_255289850);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v19, v38);
  v39 = *(_QWORD *)(v32 + 32);
  LOBYTE(v38) = *(_BYTE *)(v32 + 40);
  sub_21C5317D4(*(_QWORD *)(v32 + 8) + 16, (uint64_t)&v79);
  if ((v38 & 1) != 0)
  {
    v40 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289890);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_21C5E5570;
    *(_QWORD *)(inited + 32) = v39;
    sub_21C5317D4((uint64_t)&v79, inited + 40);
    v40 = inited;
  }
  v42 = sub_21C53E68C(v40);
  sub_21C5317A0((uint64_t)&v79);
  v79 = v42;
  v43 = MEMORY[0x24BDF0B90];
  v44 = sub_21C5616A0(&qword_255289808, &qword_2552897F0, MEMORY[0x24BDF0B90]);
  v81[0] = v28;
  v81[1] = v44;
  v45 = MEMORY[0x24BDED308];
  v46 = v67;
  v47 = MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v67, v81);
  sub_21C5973DC();
  v48 = v69;
  sub_21C5E3658();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v37, v46);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255289878);
  sub_21C5317D4(*(_QWORD *)(v32 + 8) + 16, (uint64_t)&v79);
  v80 = 0;
  v49 = sub_21C5616A0(&qword_255289810, &qword_2552897F8, v43);
  v78[0] = v47;
  v78[1] = v49;
  v50 = v74;
  v51 = MEMORY[0x22077F9A0](v45, v74, v78);
  sub_21C5616A0((unint64_t *)&unk_255289880, &qword_255289878, (uint64_t)&unk_21C5E9100);
  v52 = v70;
  sub_21C5E3658();
  sub_21C524980((uint64_t)&v79, &qword_255288140);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v48, v50);
  v53 = sub_21C5616A0(&qword_255289818, &qword_255289800, v43);
  v77[0] = v51;
  v77[1] = v53;
  v54 = v75;
  MEMORY[0x22077F9A0](v45, v75, v77);
  v55 = v73;
  v56 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  v57 = v71;
  v56(v71, v52, v54);
  v58 = *(void (**)(char *, uint64_t))(v55 + 8);
  v58(v52, v54);
  v56(v76, v57, v54);
  return ((uint64_t (*)(char *, uint64_t))v58)(v57, v54);
}

uint64_t sub_21C5799A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t OpaqueTypeConformance2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  unint64_t v89;
  _QWORD v90[2];
  _QWORD v91[2];
  _QWORD v92[2];

  v84 = a2;
  v77 = a1;
  v83 = a5;
  v7 = sub_21C5E2D64();
  v81 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v80 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MapPreferenceWrapper(0, a3, a4, v9);
  v75 = *(_QWORD *)(v10 - 8);
  v74 = *(_QWORD *)(v75 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v76 = (char *)&v60 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552897F0);
  v78 = a3;
  v12 = sub_21C5E30A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552897F8);
  v13 = sub_21C5E30A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289800);
  v14 = sub_21C5E30A0();
  v15 = MEMORY[0x24BDF0B90];
  v16 = sub_21C5616A0(&qword_255289808, &qword_2552897F0, MEMORY[0x24BDF0B90]);
  v79 = a4;
  v92[0] = a4;
  v92[1] = v16;
  v17 = MEMORY[0x24BDED308];
  v18 = MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v12, v92);
  v19 = sub_21C5616A0(&qword_255289810, &qword_2552897F8, v15);
  v91[0] = v18;
  v91[1] = v19;
  v20 = MEMORY[0x22077F9A0](v17, v13, v91);
  v21 = sub_21C5616A0(&qword_255289818, &qword_255289800, v15);
  v90[0] = v20;
  v90[1] = v21;
  MEMORY[0x22077F9A0](v17, v14, v90);
  v22 = sub_21C5E2FEC();
  v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289820);
  v24 = MEMORY[0x22077F9A0](MEMORY[0x24BDEC6F8], v22);
  v25 = sub_21C596FC8();
  *(_QWORD *)&v87 = v22;
  *((_QWORD *)&v87 + 1) = v23;
  v88 = v24;
  v89 = v25;
  v26 = MEMORY[0x24BDF38E8];
  v27 = MEMORY[0x22077F964](0, &v87, MEMORY[0x24BDF38E8], 0);
  v72 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v71 = (char *)&v60 - v28;
  *(_QWORD *)&v87 = v22;
  *((_QWORD *)&v87 + 1) = v23;
  v67 = v23;
  v64 = v24;
  v88 = v24;
  v89 = v25;
  v62 = v25;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v30 = sub_21C597070(&qword_255289838, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v73 = v27;
  *(_QWORD *)&v87 = v27;
  *((_QWORD *)&v87 + 1) = v7;
  v82 = v7;
  v68 = OpaqueTypeConformance2;
  v88 = OpaqueTypeConformance2;
  v89 = v30;
  v63 = v30;
  v70 = MEMORY[0x22077F964](0, &v87, v26, 0);
  v69 = *(_QWORD *)(v70 - 8);
  v31 = MEMORY[0x24BDAC7A8](v70);
  v65 = (char *)&v60 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v66 = (char *)&v60 - v33;
  v34 = v10;
  v35 = v10;
  v36 = v84;
  sub_21C57918C(v35, (uint64_t *)&v87);
  v86 = v87;
  v37 = v36;
  v38 = sub_21C578610();
  if (v38)
  {
    v39 = swift_retain();
    sub_21C531BF0(v39);
  }
  v85 = v38;
  v40 = v75;
  v61 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
  v41 = v76;
  v42 = v37;
  v43 = v34;
  v61(v76, v42, v34);
  v44 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v74 += v44;
  v45 = swift_allocObject();
  v47 = v78;
  v46 = v79;
  *(_QWORD *)(v45 + 16) = v78;
  *(_QWORD *)(v45 + 24) = v46;
  v75 = *(_QWORD *)(v40 + 32);
  ((void (*)(unint64_t, char *, uint64_t))v75)(v45 + v44, v41, v43);
  swift_checkMetadataState();
  v48 = v71;
  sub_21C5E370C();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255289848);
  v49 = v80;
  sub_21C5E2EF0();
  v61(v41, v84, v43);
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = v47;
  *(_QWORD *)(v50 + 24) = v46;
  ((void (*)(unint64_t, char *, uint64_t))v75)(v50 + v44, v41, v43);
  v51 = v65;
  v52 = v73;
  v53 = v82;
  sub_21C5E370C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v49, v53);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v48, v52);
  v54 = v69;
  v55 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v56 = v66;
  v57 = v70;
  v55(v66, v51, v70);
  v58 = *(void (**)(char *, uint64_t))(v54 + 8);
  v58(v51, v57);
  v55(v83, v56, v57);
  return ((uint64_t (*)(char *, uint64_t))v58)(v56, v57);
}

uint64_t sub_21C579FAC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  BOOL v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD *);
  void (*v22)(_QWORD *);
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *);
  uint64_t v38;
  _QWORD v39[5];

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  v11 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)a1)
    v15 = *a2 == 0;
  else
    v15 = 1;
  if (!v15)
  {
    v16 = *(uint64_t (**)(uint64_t))(**(_QWORD **)a1 + 80);
    swift_retain();
    v17 = swift_retain();
    v18 = v16(v17);
    if ((v18 & 1) != 0 || (v20 = type metadata accessor for MapPreferenceWrapper(0, a4, a5, v19), !sub_21C578610()))
    {
      swift_release();
      return swift_release();
    }
    else
    {
      v22 = v21;
      v38 = v20;
      sub_21C5317D4(*(_QWORD *)(a3 + 8) + 16, (uint64_t)v39);
      v23 = (void *)MEMORY[0x22077FAFC](v39);
      sub_21C5317A0((uint64_t)v39);
      if (v23)
      {
        v24 = objc_msgSend(v23, sel_camera);
        v37 = v22;
        v25 = v24;
        objc_msgSend(v24, sel_centerCoordinate);
        v27 = v26;
        v29 = v28;
        objc_msgSend(v25, sel_centerCoordinateDistance);
        v31 = v30;
        objc_msgSend(v25, sel_heading);
        v33 = v32;
        objc_msgSend(v25, sel_pitch);
        v35 = v34;

        v39[0] = v27;
        v39[1] = v29;
        v39[2] = v31;
        v39[3] = v33;
        v39[4] = v35;
        v37(v39);
        sub_21C57A21C((uint64_t)v14, v38);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_21C57A21C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v29 = a2;
  *(_QWORD *)&v27 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
  MEMORY[0x24BDAC7A8](v2);
  *(_QWORD *)&v28 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_21C5E2D64();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for KeyframeAnimationState();
  v26 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v25 - v16;
  v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v11, (char *)v27, v8);
  v18(v15, v11, v8);
  sub_21C5E2D58();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v19 = &v15[*(int *)(v12 + 20)];
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v19, v7, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(&v15[*(int *)(v12 + 24)], v19, v4);
  sub_21C52AAD4((uint64_t)v15, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for KeyframeAnimationState);
  v20 = v28;
  sub_21C529664((uint64_t)v17, v28, (uint64_t (*)(_QWORD))type metadata accessor for KeyframeAnimationState);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v12);
  sub_21C578740(v20);
  sub_21C5E30D0();
  v27 = v31;
  v28 = v30;
  v21 = v32;
  v22 = swift_allocObject();
  v23 = v27;
  *(_OWORD *)(v22 + 16) = v28;
  *(_OWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 48) = v21;
  *(_QWORD *)&v30 = v22 | 0x6000000000000000;
  sub_21C578954();
  return sub_21C52A88C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for KeyframeAnimationState);
}

uint64_t sub_21C57A4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, char);
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  id v32;
  char *v33;
  void *v34[5];

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v33 = (char *)&v34[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34[-1] - v12;
  v14 = type metadata accessor for KeyframeAnimationState();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v34[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MapPreferenceWrapper(0, a4, a5, v18);
  v20 = sub_21C5787EC(v34, v19);
  v22 = v21;
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (!v23(v21, 1, v14))
  {
    v24 = v22 + *(int *)(v14 + 24);
    v25 = sub_21C5E2D64();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v24, a2, v25);
  }
  v20((uint64_t)v34, 0);
  __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
  sub_21C5E3784();
  if (v23((uint64_t)v13, 1, v14) == 1)
    return sub_21C524980((uint64_t)v13, (uint64_t *)&unk_255289560);
  sub_21C52AAD4((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for KeyframeAnimationState);
  sub_21C5317D4(*(_QWORD *)(a3 + 8) + 16, (uint64_t)v34);
  v27 = (void *)MEMORY[0x22077FAFC](v34);
  sub_21C5317A0((uint64_t)v34);
  if (v27)
  {
    sub_21C5E2D4C();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
    sub_21C5E30DC();
    if (v30 < v29)
    {
      v31 = (uint64_t)v33;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v33, 1, 1, v14);
      sub_21C578740(v31);
    }
    sub_21C5E2D4C();
    sub_21C5E30C4();
    v32 = objc_msgSend((id)objc_opt_self(), sel_cameraLookingAtCenterCoordinate_fromDistance_pitch_heading_, *(double *)v34, *(double *)&v34[1], *(double *)&v34[2], *(double *)&v34[4], *(double *)&v34[3]);
    objc_msgSend(v27, sel_setCamera_animated_, v32, 0);

  }
  return sub_21C52A88C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for KeyframeAnimationState);
}

uint64_t sub_21C57A798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v14 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v16);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = a2;
  v17[7] = a3;
  sub_21C5E2F08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(a1, a4);
}

uint64_t sub_21C57A890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  int v5;

  v2 = v1 + *(int *)(a1 + 120);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_21C531A90(*(_QWORD *)v2, v4);
  v5 = sub_21C52FE24(v3, v4);
  sub_21C531A84(v3, v4);
  return v5 & 0xFFFFFF01;
}

uint64_t sub_21C57A8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[5];
  __int16 v9;

  v4 = v2 + *(int *)(a1 + 124);
  v5 = *(_OWORD *)(v4 + 48);
  v8[2] = *(_OWORD *)(v4 + 32);
  v8[3] = v5;
  v8[4] = *(_OWORD *)(v4 + 64);
  v9 = *(_WORD *)(v4 + 80);
  v6 = *(_OWORD *)(v4 + 16);
  v8[0] = *(_OWORD *)v4;
  v8[1] = v6;
  sub_21C531930((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_21C531870);
  sub_21C52F844(a2);
  return sub_21C531930((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_21C53198C);
}

uint64_t sub_21C57A964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = v1 + *(int *)(a1 + 132);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_21C531A90(*(_QWORD *)v2, v4);
  v5 = sub_21C52D7BC(v3, v4);
  sub_21C531A84(v3, v4);
  return v5;
}

uint64_t (*sub_21C57A9C0(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1 + *(int *)(a1 + 136);
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_BYTE *)(v2 + 16);
  sub_21C58A5E8(*(_QWORD *)v2, v4, v5, (uint64_t (*)(void))sub_21C531C4C);
  v6 = sub_21C53022C(v3, v4, v5);
  v8 = v7;
  sub_21C531ABC(v3, v4, v5, (uint64_t (*)(void))sub_21C531C48);
  if (!v6)
    return 0;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v8;
  return sub_21C5976B0;
}

uint64_t sub_21C57AA74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = v1 + *(int *)(a1 + 140);
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_BYTE *)(v2 + 16);
  sub_21C58A5E8(*(_QWORD *)v2, v4, v5, (uint64_t (*)(void))sub_21C531AAC);
  v6 = sub_21C530258(v3, v4, v5);
  sub_21C531ABC(v3, v4, v5, (uint64_t (*)(void))sub_21C531A9C);
  return v6;
}

uint64_t sub_21C57AB00@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = v2 + *(int *)(a1 + 144);
  v5 = *(_QWORD *)v4;
  v6 = *(_BYTE *)(v4 + 8);
  sub_21C531A90(*(_QWORD *)v4, v6);
  sub_21C530478(v5, v6, a2);
  return sub_21C531A84(v5, v6);
}

uint64_t sub_21C57AB58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = v1 + *(int *)(a1 + 148);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_21C52EF74(*(_QWORD *)v2, v4);
  v5 = sub_21C530648(v3, v4);
  sub_21C531AC8(v3, v4);
  return v5;
}

uint64_t sub_21C57ABB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22077F9A0](&unk_21C5E8148, a3);
  return sub_21C5E33C4();
}

uint64_t sub_21C57AC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22077F9A0](&unk_21C5E8148, a3);
  return sub_21C5E3370();
}

void sub_21C57AC6C(uint64_t a1)
{
  MEMORY[0x22077F9A0](&unk_21C5E8148, a1);
  sub_21C5E33B8();
  __break(1u);
}

id sub_21C57AC9C(uint64_t a1)
{
  uint64_t v1;
  id v3;
  uint64_t ObjCClassFromMetadata;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  _BYTE v11[8];

  type metadata accessor for _SwiftUIMKMapView();
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  type metadata accessor for SwiftUIAnnotationView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = (void *)sub_21C5E3940();
  objc_msgSend(v3, sel_registerClass_forAnnotationViewWithReuseIdentifier_, ObjCClassFromMetadata, v5);

  sub_21C531A4C(0, &qword_255289DA0);
  v6 = swift_getObjCClassFromMetadata();
  v7 = (void *)sub_21C5E3940();
  objc_msgSend(v3, sel_registerClass_forAnnotationViewWithReuseIdentifier_, v6, v7);

  v8 = (void *)sub_21C5E3940();
  objc_msgSend(v3, sel_registerClass_forAnnotationViewWithReuseIdentifier_, ObjCClassFromMetadata, v8);

  sub_21C5317D4(*(_QWORD *)(v1 + *(int *)(a1 + 100)) + 16, (uint64_t)v11);
  v9 = (id)MEMORY[0x22077FAFC](v11);
  sub_21C5317A0((uint64_t)v11);
  if (!v9 || (v9, v9 != v3))
  {
    swift_unknownObjectWeakAssign();
    swift_retain();
    sub_21C5E2EE4();
    swift_release();
  }
  return v3;
}

void sub_21C57AE44(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD v11[2];

  v5 = sub_21C5E328C();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x22077F9A0](&unk_21C5E8148, a3);
  sub_21C5E3544();
  sub_21C5E3538();
  v8 = sub_21C5E2EA8();
  swift_release();
  v9 = 0;
  if ((v8 & 1) == 0)
  {
    sub_21C5E3538();
    v9 = sub_21C5E2EB4();
    swift_release();
  }
  sub_21C5E3520();
  v10 = (_QWORD *)v11[1];
  sub_21C5E352C();
  sub_21C57AF80(a1, v10, (uint64_t)v7, v9, a3);
}

uint64_t sub_21C57AF44()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
}

void sub_21C57AF80(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  char *v46;
  uint64_t KeyPath;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  _QWORD *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _BOOL4 v64;
  _BOOL4 v65;
  uint64_t v66;
  uint64_t v67[3];

  v6 = v5;
  v66 = a4;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894E8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v67[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894F0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v67[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_setDelegate_, a2);
  v17 = (_QWORD *)MEMORY[0x24BEE4EA0];
  swift_unknownObjectWeakAssign();
  sub_21C529664((uint64_t)v6 + *(int *)(a5 + 92), (uint64_t)v16, type metadata accessor for _MapContentInputs);
  v18 = type metadata accessor for _MapContentInputs(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 0, 1, v18);
  sub_21C57DABC((uint64_t)v16);
  *(_QWORD *)((char *)a2 + *(_QWORD *)((*v17 & *a2) + 0x248)) = sub_21C57AB58(a5);
  swift_bridgeObjectRelease();
  sub_21C531B18((uint64_t)v6 + *(int *)(a5 + 96), (uint64_t)v13, qword_255289410);
  v19 = __swift_instantiateConcreteTypeFromMangledName(qword_255289410);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 0, 1, v19);
  sub_21C57DE88((uint64_t)v13);
  sub_21C5317D4(*(uint64_t *)((char *)v6 + *(int *)(a5 + 100)) + 16, (uint64_t)v67);
  v20 = (void *)MEMORY[0x22077FAFC](v67);
  sub_21C5317A0((uint64_t)v67);
  if (!v20 || (v20, v20 != a1))
  {
    swift_unknownObjectWeakAssign();
    swift_retain();
    sub_21C5E2EE4();
    swift_release();
  }
  v21 = *(_DWORD *)((char *)a2 + qword_255288E40);
  v22 = *(_QWORD *)((char *)a2 + qword_255288E40 + 8);
  v23 = *v6;
  v24 = v6[1];
  v25 = sub_21C5B6EE4(*v6);
  v28 = v21 != -1 && v25 != -1 && v21 == v25 && v22 == v24;
  v29 = v28;
  if (!v28)
    sub_21C566F58((uint64_t)v6 + *(int *)(a5 + 84), v23, v24, *(_QWORD *)(a5 + 16), *(_QWORD *)(a5 + 24), *(_QWORD *)(a5 + 32), *(_QWORD *)(a5 + 40));
  v30 = *(_DWORD *)((char *)a2 + qword_255288E48);
  v31 = *(_QWORD *)((char *)a2 + qword_255288E48 + 8);
  v32 = v6[2];
  v33 = v6[3];
  v34 = sub_21C5B6EE4(v32);
  if (v30 != -1 && v34 != -1 && v30 == v34 && v31 == v33)
  {
    v35 = v29 ^ 1;
    v36 = *(_DWORD *)((char *)a2 + qword_255288E58);
    v37 = *(_QWORD *)((char *)a2 + qword_255288E58 + 8);
    v38 = v6[10];
    v39 = v6[11];
    v40 = sub_21C5B6EE4(v38);
    if (v36 == -1 || v40 == -1 || v36 != v40 || v37 != v39)
      sub_21C567338((uint64_t)v6 + *(int *)(a5 + 84), v38, v39, *(_QWORD *)(a5 + 16), *(_QWORD *)(a5 + 24), *(_QWORD *)(a5 + 32), *(_QWORD *)(a5 + 40));
    v41 = *(_DWORD *)((char *)a2 + qword_255288E70);
    v42 = *(_QWORD *)((char *)a2 + qword_255288E70 + 8);
    v43 = v6[4];
    v44 = v6[5];
    v45 = sub_21C5B6EE4(v43);
    if (v41 == -1 || v45 == -1 || v41 != v45 || v42 != v44)
    {
      v46 = (char *)sub_21C567700(v43);
      KeyPath = swift_getKeyPath();
      sub_21C5575D4(a1, v46, a3, v66, KeyPath);
      swift_release();
      swift_bridgeObjectRelease();
      v35 = 1;
    }
    v48 = *(_DWORD *)((char *)a2 + qword_255288E78);
    v49 = *(_QWORD *)((char *)a2 + qword_255288E78 + 8);
    v50 = v6[6];
    v51 = v6[7];
    v52 = sub_21C5B6EE4(v50);
    if (v48 == -1 || v52 == -1 || v48 != v52 || v49 != v51)
    {
      v53 = sub_21C567AA4(v50);
      v54 = swift_getKeyPath();
      sub_21C557AC0(a1, (uint64_t)v53, a3, v66, v54);
      swift_release();
      swift_bridgeObjectRelease();
      v35 = 1;
    }
    v55 = *(_DWORD *)((char *)a2 + qword_255288E80);
    v56 = *(_QWORD *)((char *)a2 + qword_255288E80 + 8);
    v57 = v6[8];
    v58 = v6[9];
    v59 = sub_21C5B6EE4(v57);
    if (v55 == -1 || v59 == -1 || v55 != v59 || v56 != v58)
    {
      v60 = sub_21C567F14(v57);
      v61 = swift_getKeyPath();
      sub_21C557FC0(a1, (uint64_t)v60, a3, v66, v61);
      swift_release();
      swift_bridgeObjectRelease();
      v35 = 1;
    }
    v62 = v6[13];
    v63 = v6[14];
    v67[0] = v6[12];
    v67[1] = v62;
    v67[2] = v63;
    v64 = *(_QWORD *)(v6[10] + 16) != 0;
    v65 = v66 != 0;
    swift_retain();
    swift_retain();
    sub_21C55DA30(v63);
    sub_21C57E7C4(a1, v67, v35, v64, v65);
    swift_release();
    swift_release();
    sub_21C55DAAC(v63);
    sub_21C57EF68();
  }
  sub_21C566F9C((uint64_t)v6 + *(int *)(a5 + 84), a3, 0, v32, v33, *(_QWORD *)(a5 + 16), *(_QWORD *)(a5 + 24), *(_QWORD *)(a5 + 32), *(_QWORD *)(a5 + 40));
}

void sub_21C57B5E0()
{
  uint64_t v0;
  uint64_t (*v1)();
  uint64_t v2;
  uint64_t (*v3)();
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v1 = sub_21C57A9C0(v0);
  if (v1)
  {
    v3 = v1;
    v4 = v2;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_21C58A570;
  }
  else
  {
    v5 = 0;
    v6 = sub_21C5320D0;
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  sub_21C582720();
}

uint64_t sub_21C57B670()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  int v12;
  char *v13;
  uint64_t v14;
  int v15;
  char *v16;
  uint64_t v17;
  int v18;
  char *v19;
  uint64_t v20;
  int v21;
  char *v22;
  uint64_t v23;
  int v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  char *v28;

  swift_release();
  v6 = sub_21C57AA74(v2);
  sub_21C58A398(v6, v7);
  sub_21C531A9C(v6);
  sub_21C57AB00(v2, (_BYTE *)(v5 - 104));
  *((_BYTE *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x238)) = *(_BYTE *)(v5 - 104);
  sub_21C57BE88(v3, v2);
  sub_21C57C068(v3, v2);
  sub_21C57D4A8(v3, v4);
  v8 = (char *)v1 + *(int *)(v2 + 152);
  v9 = *(_QWORD *)v8;
  v10 = v8[8];
  sub_21C531A90(*(_QWORD *)v8, v10);
  LOBYTE(v6) = sub_21C52D604(v9, v10);
  sub_21C531A84(v9, v10);
  *(_QWORD *)(v5 - 104) = v1[24];
  sub_21C582A2C(v3, v6 & 1, (uint64_t *)(v5 - 104));
  sub_21C57D7CC(v3, v2);
  v11 = v1[9];
  v12 = sub_21C5B6EE4(v1[8]);
  v13 = (char *)v0 + qword_255288E80;
  *(_DWORD *)v13 = v12;
  *((_QWORD *)v13 + 1) = v11;
  v14 = v1[7];
  v15 = sub_21C5B6EE4(v1[6]);
  v16 = (char *)v0 + qword_255288E78;
  *(_DWORD *)v16 = v15;
  *((_QWORD *)v16 + 1) = v14;
  v17 = v1[5];
  v18 = sub_21C5B6EE4(v1[4]);
  v19 = (char *)v0 + qword_255288E70;
  *(_DWORD *)v19 = v18;
  *((_QWORD *)v19 + 1) = v17;
  v20 = v1[11];
  v21 = sub_21C5B6EE4(v1[10]);
  v22 = (char *)v0 + qword_255288E58;
  *(_DWORD *)v22 = v21;
  *((_QWORD *)v22 + 1) = v20;
  v23 = v1[3];
  v24 = sub_21C5B6EE4(v1[2]);
  v25 = (char *)v0 + qword_255288E48;
  *(_DWORD *)v25 = v24;
  *((_QWORD *)v25 + 1) = v23;
  v26 = v1[1];
  result = sub_21C5B6EE4(*v1);
  v28 = (char *)v0 + qword_255288E40;
  *(_DWORD *)v28 = result;
  *((_QWORD *)v28 + 1) = v26;
  return result;
}

uint64_t sub_21C57B854()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_255288B88);
  sub_21C5E35E0();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1410];
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_21C5E5570;
  sub_21C5E35D4();
  sub_21C597070(&qword_255288B90, 255, v0, MEMORY[0x24BDF1420]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288B98);
  sub_21C5616A0(&qword_255288BA0, &qword_255288B98, MEMORY[0x24BEE12C8]);
  return sub_21C5E3BEC();
}

uint64_t sub_21C57B954(uint64_t a1, uint64_t a2)
{
  return sub_21C58A21C(a2);
}

void sub_21C57B960()
{
  sub_21C58A3E8();
}

uint64_t sub_21C57B980(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

id sub_21C57BA28()
{
  return sub_21C57BCCC(type metadata accessor for MapBridgingCustomAnnotation);
}

uint64_t type metadata accessor for MapBridgingCustomAnnotation()
{
  return objc_opt_self();
}

id sub_21C57BA94(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  void *v3;

  if (*(_QWORD *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    v3 = (void *)sub_21C5E3940();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

uint64_t sub_21C57BAF8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  if (a3)
  {
    v6 = sub_21C5E3964();
  }
  else
  {
    v6 = 0;
    v7 = 0;
  }
  v8 = (uint64_t *)(a1 + *a4);
  *v8 = v6;
  v8[1] = v7;
  return swift_bridgeObjectRelease();
}

id sub_21C57BBA8()
{
  return sub_21C57BCCC(type metadata accessor for MapBridgingMarker);
}

void sub_21C57BBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t type metadata accessor for MapBridgingMarker()
{
  return objc_opt_self();
}

id sub_21C57BCC0()
{
  return sub_21C57BCCC(type metadata accessor for MapBridgingUserAnnotation);
}

id sub_21C57BCCC(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for MapBridgingUserAnnotation()
{
  return objc_opt_self();
}

void sub_21C57BD1C()
{
  unint64_t v0;

  sub_21C596C90(319, &qword_255289400, type metadata accessor for _MapContentInputs, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C57BE58(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t v3;

  a2(&v3);
  return v3;
}

void sub_21C57BE88(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v11;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  sub_21C57A8EC(a2, (uint64_t)v12);
  v3 = v12[0];
  v2 = v12[1];
  v4 = v13;
  v5 = v16;
  v6 = v17;
  if (v13 != 1)
  {
    v11 = sub_21C5C82B0();
    sub_21C5319E4(v3, v2, v4);
    v8 = v5;
    v9 = v6;
LABEL_7:
    sub_21C531A18(v8, v9);
    v7 = a1;
    goto LABEL_8;
  }
  if ((v15 & 1) == 0)
  {
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB098]), sel_initWithElevationStyle_, v14);
    sub_21C5319E4(v3, v2, 1);
    v8 = v5;
    v9 = v6;
    goto LABEL_7;
  }
  v7 = a1;
  if (v17 == 1)
  {
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB1B0]), sel_init);
    sub_21C5319E4(v3, v2, 1);
    sub_21C531A18(v5, 1);
  }
  else
  {
    v11 = sub_21C5C8424();
    sub_21C5319E4(v3, v2, 1);
    sub_21C531A18(v5, v6);
  }
LABEL_8:
  objc_msgSend(v7, sel_setPreferredConfiguration_, v11, a1);

}

id sub_21C57C068(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int *v93;
  _BYTE *v94;
  char v95;
  uint64_t v96;
  void (*v97)(_QWORD, _QWORD, _QWORD);
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  char *v102;
  char v103;
  void (*v104)(char *, uint64_t);
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  void (*v107)(char *, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  unsigned int (*v123)(uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _WORD *v127;
  uint64_t v128;
  char v129;
  char v130;
  void (*v131)(char *, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _WORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  unsigned int (*v142)(uint64_t, uint64_t, uint64_t);
  uint64_t v143;
  _BYTE *v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  int *v148;
  _BYTE *v149;
  uint64_t v150;
  _BYTE *v151;
  char *v152;
  char v153;
  uint64_t v154;
  void (*v155)(uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _BYTE *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _BYTE *v171;
  _QWORD *v172;
  uint64_t v173;
  void (*v174)(char *, uint64_t);
  uint64_t v175;
  _BYTE *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  _WORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _BYTE *v187;
  uint64_t v188;
  uint64_t v189;
  _BYTE *v190;
  uint64_t v191;
  _BYTE *v192;
  _WORD *v193;
  uint64_t v194;
  _BYTE *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  void (*v206)(uint64_t, uint64_t);
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  int *v211;
  id v212;

  v212 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289500);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v191 = (uint64_t)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v189 = (uint64_t)&v166 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v185 = (uint64_t)&v166 - v9;
  v203 = type metadata accessor for MapUserLocationButtonConfig(0);
  v184 = *(_QWORD *)(v203 - 8);
  v10 = MEMORY[0x24BDAC7A8](v203);
  v192 = (char *)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v190 = (char *)&v166 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v187 = (char *)&v166 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289508);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v181 = (uint64_t)&v166 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v178 = (uint64_t)&v166 - v18;
  v199 = type metadata accessor for MapCompassConfig(0);
  v177 = *(_QWORD *)(v199 - 8);
  v19 = MEMORY[0x24BDAC7A8](v199);
  v182 = (_WORD *)((char *)&v166 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = MEMORY[0x24BDAC7A8](v19);
  v193 = (_WORD *)((char *)&v166 - v22);
  v180 = *(_QWORD *)(a2 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v208 = (char *)&v166 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v205 = (char *)&v166 - v25;
  v202 = sub_21C5E31A8();
  v174 = *(void (**)(char *, uint64_t))(v202 - 8);
  v26 = MEMORY[0x24BDAC7A8](v202);
  v188 = (uint64_t)&v166 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v200 = (char *)&v166 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v173 = (uint64_t)&v166 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289510);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v175 = (uint64_t)&v166 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v172 = (uint64_t *)((char *)&v166 - v35);
  MEMORY[0x24BDAC7A8](v34);
  v168 = (uint64_t)&v166 - v36;
  v197 = type metadata accessor for MapPitchToggleConfig(0);
  v194 = *(_QWORD *)(v197 - 8);
  v37 = MEMORY[0x24BDAC7A8](v197);
  v176 = (char *)&v166 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v195 = (char *)&v166 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v171 = (char *)&v166 - v41;
  v42 = sub_21C5E2E78();
  v209 = *(_QWORD *)(v42 - 8);
  v210 = v42;
  MEMORY[0x24BDAC7A8](v42);
  v201 = (char *)&v166 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289518);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v207 = (uint64_t)&v166 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45);
  v48 = (char *)&v166 - v47;
  v49 = type metadata accessor for MapScaleViewConfig(0);
  v50 = *(_QWORD *)(v49 - 8);
  v51 = MEMORY[0x24BDAC7A8](v49);
  v53 = (char *)&v166 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v51);
  v55 = (char *)&v166 - v54;
  v56 = type metadata accessor for MapControlsConfig();
  v57 = MEMORY[0x24BDAC7A8](v56);
  v186 = (uint64_t)&v166 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = MEMORY[0x24BDAC7A8](v57);
  v183 = (uint64_t)&v166 - v60;
  v61 = MEMORY[0x24BDAC7A8](v59);
  v179 = (char *)&v166 - v62;
  v63 = MEMORY[0x24BDAC7A8](v61);
  v198 = (uint64_t)&v166 - v64;
  v65 = MEMORY[0x24BDAC7A8](v63);
  v196 = (uint64_t)&v166 - v66;
  v67 = MEMORY[0x24BDAC7A8](v65);
  v170 = (uint64_t)&v166 - v68;
  v69 = MEMORY[0x24BDAC7A8](v67);
  v169 = (uint64_t)&v166 - v70;
  v71 = MEMORY[0x24BDAC7A8](v69);
  v167 = (uint64_t)&v166 - v72;
  v73 = MEMORY[0x24BDAC7A8](v71);
  v75 = (char *)&v166 - v74;
  MEMORY[0x24BDAC7A8](v73);
  v77 = (char *)&v166 - v76;
  v204 = a2;
  sub_21C52FFFC((uint64_t)&v166 - v76);
  v211 = (int *)v56;
  sub_21C531B18((uint64_t)&v77[*(int *)(v56 + 20)], (uint64_t)v48, &qword_255289518);
  v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
  if (v78(v48, 1, v49) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v209 + 104))(&v55[*(int *)(v49 + 28)], *MEMORY[0x24BDEB498], v210);
    v55[2] = 0;
    *(_WORD *)v55 = 512;
    sub_21C524980((uint64_t)v48, &qword_255289518);
  }
  else
  {
    sub_21C52AAD4((uint64_t)v48, (uint64_t)v55, type metadata accessor for MapScaleViewConfig);
  }
  sub_21C52A88C((uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
  v79 = sub_21C57A964(v204);
  if (*v55 == 1)
    __asm { BR              X9 }
  sub_21C52A88C((uint64_t)v55, type metadata accessor for MapScaleViewConfig);
  objc_msgSend(v212, sel__setScaleVisibility_, 1);
  sub_21C52FFFC((uint64_t)v75);
  v80 = v207;
  sub_21C531B18((uint64_t)&v75[v211[5]], v207, &qword_255289518);
  if (v78((char *)v80, 1, v49) == 1)
  {
    v82 = v209;
    v81 = v210;
    (*(void (**)(char *, _QWORD, uint64_t))(v209 + 104))(&v53[*(int *)(v49 + 28)], *MEMORY[0x24BDEB498], v210);
    v53[2] = 0;
    *(_WORD *)v53 = 512;
    sub_21C524980(v80, &qword_255289518);
  }
  else
  {
    sub_21C52AAD4(v80, (uint64_t)v53, type metadata accessor for MapScaleViewConfig);
    v82 = v209;
    v81 = v210;
  }
  v83 = (uint64_t)v201;
  sub_21C52A88C((uint64_t)v75, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
  v84 = v204;
  v207 = v2 + *(int *)(v204 + 108);
  sub_21C52D1D4(v83);
  v85 = sub_21C59A5D0(v83);
  v206 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
  v206(v83, v81);
  v86 = (uint64_t)v53;
  v87 = v2;
  v88 = v84;
  sub_21C52A88C(v86, type metadata accessor for MapScaleViewConfig);
  v89 = v212;
  objc_msgSend(v212, sel__setScaleControlSize_, v85);
  v90 = v167;
  sub_21C52FFFC(v167);
  v91 = v168;
  sub_21C531B18(v90, v168, &qword_255289510);
  v92 = v82;
  v93 = (int *)v197;
  v194 = *(_QWORD *)(v194 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v194)(v91, 1, v197) == 1)
  {
    v94 = v171;
    sub_21C5E319C();
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v92 + 104))(&v94[v93[7]], *MEMORY[0x24BDEB498], v81);
    v94[1] = 2;
    *(_QWORD *)&v94[v93[8]] = 0;
    *v94 = 0;
    sub_21C524980(v91, &qword_255289510);
  }
  else
  {
    v94 = v171;
    sub_21C52AAD4(v91, (uint64_t)v171, type metadata accessor for MapPitchToggleConfig);
  }
  sub_21C52A88C(v90, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
  v95 = sub_21C57A964(v88);
  if (*v94 == 1)
    __asm { BR              X9 }
  sub_21C52A88C((uint64_t)v94, type metadata accessor for MapPitchToggleConfig);
  objc_msgSend(v89, sel_setPitchButtonVisibility_, 1);
  v96 = v169;
  sub_21C52FFFC(v169);
  v97 = (void (*)(_QWORD, _QWORD, _QWORD))v172;
  sub_21C531B18(v96, (uint64_t)v172, &qword_255289510);
  if (((unsigned int (*)(_QWORD, uint64_t, int *))v194)(v97, 1, v93) == 1)
  {
    v98 = v195;
    sub_21C5E319C();
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v209 + 104))(&v98[v93[7]], *MEMORY[0x24BDEB498], v81);
    v98[1] = 2;
    *(_QWORD *)&v98[v93[8]] = 0;
    *v98 = 0;
    sub_21C524980((uint64_t)v97, &qword_255289510);
  }
  else
  {
    v98 = v195;
    sub_21C52AAD4((uint64_t)v97, (uint64_t)v195, type metadata accessor for MapPitchToggleConfig);
  }
  sub_21C52A88C(v96, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
  v99 = v173;
  v171 = (_BYTE *)(v87 + *(int *)(v88 + 104));
  sub_21C52D1A8(v173);
  v100 = (uint64_t)v98;
  v101 = &v98[v93[6]];
  v102 = v200;
  sub_21C5E319C();
  v103 = sub_21C5E3178();
  v104 = v174;
  v195 = (_BYTE *)v87;
  v105 = (void (*)(char *, uint64_t))*((_QWORD *)v174 + 1);
  v106 = v202;
  v105(v102, v202);
  v107 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v104 + 2);
  if ((v103 & 1) != 0)
    v108 = v99;
  else
    v108 = (uint64_t)v101;
  v172 = (_QWORD *)*((_QWORD *)v104 + 2);
  v107(v102, v108, v106);
  v109 = sub_21C5DE8D0(v102, 1u);
  v110 = v106;
  v111 = v197;
  v174 = v105;
  v105((char *)v99, v110);
  v112 = (uint64_t)v195;
  sub_21C52A88C(v100, type metadata accessor for MapPitchToggleConfig);
  v113 = v212;
  objc_msgSend(v212, sel__setPitchButtonBackgroundStyle_, v109);
  v114 = v170;
  sub_21C52FFFC(v170);
  v115 = v175;
  sub_21C531B18(v114, v175, &qword_255289510);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v194)(v115, 1, v111) == 1)
  {
    v116 = v176;
    sub_21C5E319C();
    v117 = v210;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v209 + 104))(&v116[*(int *)(v111 + 28)], *MEMORY[0x24BDEB498], v210);
    v116[1] = 2;
    *(_QWORD *)&v116[*(int *)(v111 + 32)] = 0;
    *v116 = 0;
    sub_21C524980(v115, &qword_255289510);
    v118 = v180;
  }
  else
  {
    v116 = v176;
    sub_21C52AAD4(v115, (uint64_t)v176, type metadata accessor for MapPitchToggleConfig);
    v118 = v180;
    v117 = v210;
  }
  sub_21C52A88C(v114, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
  sub_21C52D1D4(v83);
  v119 = sub_21C52BB74(v83);
  v206(v83, v117);
  sub_21C52A88C((uint64_t)v116, type metadata accessor for MapPitchToggleConfig);
  objc_msgSend(v113, sel__setPitchButtonControlSize_, v119);
  v120 = *(void (**)(char *, uint64_t, uint64_t))(v118 + 16);
  v120(v205, v112, v88);
  v121 = v196;
  sub_21C52FFFC(v196);
  v122 = v178;
  sub_21C531B18(v121 + v211[7], v178, &qword_255289508);
  v123 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v177 + 48);
  v124 = v199;
  if (v123(v122, 1, v199) == 1)
  {
    v125 = *(int *)(v124 + 24);
    v126 = v122;
    v127 = v193;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v209 + 104))((uint64_t)v193 + v125, *MEMORY[0x24BDEB498], v117);
    *v127 = 512;
    sub_21C524980(v126, &qword_255289508);
  }
  else
  {
    v128 = v122;
    v127 = v193;
    sub_21C52AAD4(v128, (uint64_t)v193, type metadata accessor for MapCompassConfig);
  }
  sub_21C52A88C(v196, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
  sub_21C57A964(v88);
  if (*(_BYTE *)v127 == 1)
  {
    v129 = sub_21C5E2E54();
    v127 = v193;
    v130 = v129 ^ 1;
  }
  else
  {
    v130 = 0;
  }
  sub_21C52A88C((uint64_t)v127, type metadata accessor for MapCompassConfig);
  v131 = *(void (**)(char *, uint64_t))(v118 + 8);
  v131(v205, v88);
  objc_msgSend(v113, sel_setShowsCompass_, v130 & 1);
  v132 = v198;
  sub_21C52FFFC(v198);
  v133 = v181;
  sub_21C531B18(v132 + v211[7], v181, &qword_255289508);
  v134 = v199;
  if (v123(v133, 1, v199) == 1)
  {
    v135 = v182;
    v136 = v210;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v209 + 104))((uint64_t)v182 + *(int *)(v134 + 24), *MEMORY[0x24BDEB498], v210);
    *v135 = 512;
    sub_21C524980(v133, &qword_255289508);
    v137 = (uint64_t)v179;
  }
  else
  {
    v135 = v182;
    sub_21C52AAD4(v133, (uint64_t)v182, type metadata accessor for MapCompassConfig);
    v137 = (uint64_t)v179;
    v136 = v210;
  }
  sub_21C52A88C(v198, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
  sub_21C52D1D4(v83);
  v138 = (uint64_t)v135;
  v139 = sub_21C5AC594(v83);
  v206(v83, v136);
  sub_21C52A88C(v138, type metadata accessor for MapCompassConfig);
  v140 = v212;
  objc_msgSend(v212, sel_setCompassViewSize_, v139);
  v120(v208, v112, v88);
  sub_21C52FFFC(v137);
  v141 = v185;
  sub_21C531B18(v137 + v211[6], v185, &qword_255289500);
  v142 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v184 + 48);
  v143 = v203;
  if (v142(v141, 1, v203) == 1)
  {
    v144 = v187;
    sub_21C5E319C();
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v209 + 104))(&v144[*(int *)(v143 + 28)], *MEMORY[0x24BDEB498], v136);
    v144[1] = 2;
    *(_QWORD *)&v144[*(int *)(v143 + 32)] = 0;
    *v144 = 0;
    sub_21C524980(v141, &qword_255289500);
  }
  else
  {
    v144 = v187;
    sub_21C52AAD4(v141, (uint64_t)v187, type metadata accessor for MapUserLocationButtonConfig);
  }
  sub_21C52A88C(v137, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
  sub_21C57A964(v88);
  if (*v144 == 1)
    v145 = sub_21C5E2E54() ^ 1;
  else
    v145 = 0;
  sub_21C52A88C((uint64_t)v144, type metadata accessor for MapUserLocationButtonConfig);
  v131(v208, v88);
  objc_msgSend(v140, sel_setShowsUserTrackingButton_, v145 & 1);
  v146 = v183;
  sub_21C52FFFC(v183);
  v147 = v189;
  sub_21C531B18(v146 + v211[6], v189, &qword_255289500);
  v148 = (int *)v203;
  if (v142(v147, 1, v203) == 1)
  {
    v149 = v190;
    sub_21C5E319C();
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v209 + 104))(&v149[v148[7]], *MEMORY[0x24BDEB498], v210);
    v149[1] = 2;
    *(_QWORD *)&v149[v148[8]] = 0;
    *v149 = 0;
    sub_21C524980(v147, &qword_255289500);
  }
  else
  {
    v149 = v190;
    sub_21C52AAD4(v147, (uint64_t)v190, type metadata accessor for MapUserLocationButtonConfig);
  }
  sub_21C52A88C(v146, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
  v150 = v188;
  sub_21C52D1A8(v188);
  v151 = &v149[v148[6]];
  v152 = v200;
  sub_21C5E319C();
  v153 = sub_21C5E3178();
  v154 = v202;
  v155 = (void (*)(uint64_t, uint64_t))v174;
  v174(v152, v202);
  if ((v153 & 1) != 0)
    v156 = v150;
  else
    v156 = (uint64_t)v151;
  ((void (*)(char *, uint64_t, uint64_t))v172)(v152, v156, v154);
  v157 = sub_21C5DE8D0(v152, 1u);
  v155(v150, v154);
  sub_21C52A88C((uint64_t)v149, type metadata accessor for MapUserLocationButtonConfig);
  objc_msgSend(v212, sel__setUserTrackingButtonBackgroundStyle_, v157);
  v158 = v186;
  sub_21C52FFFC(v186);
  v159 = v191;
  sub_21C531B18(v158 + v211[6], v191, &qword_255289500);
  if (v142(v159, 1, (uint64_t)v148) == 1)
  {
    v160 = v192;
    sub_21C5E319C();
    v161 = v210;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v209 + 104))(&v160[v148[7]], *MEMORY[0x24BDEB498], v210);
    v160[1] = 2;
    *(_QWORD *)&v160[v148[8]] = 0;
    *v160 = 0;
    sub_21C524980(v159, &qword_255289500);
  }
  else
  {
    v160 = v192;
    sub_21C52AAD4(v159, (uint64_t)v192, type metadata accessor for MapUserLocationButtonConfig);
    v161 = v210;
  }
  v162 = (uint64_t)v201;
  sub_21C52A88C(v158, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
  sub_21C52D1D4(v162);
  v163 = sub_21C5D2B84(v162);
  v206(v162, v161);
  sub_21C52A88C((uint64_t)v160, type metadata accessor for MapUserLocationButtonConfig);
  v164 = v212;
  objc_msgSend(v212, sel__setUserTrackingControlSize_, v163);
  sub_21C57A890(v88);
  LOBYTE(v163) = sub_21C5E2E54();
  sub_21C57A890(v88);
  objc_msgSend(v164, sel__setShowsAppleLogo_force_, (v163 & 1) == 0, (sub_21C5E2E54() & 1) == 0);
  return objc_msgSend(v164, sel_setShowsAttribution_, sub_21C57A890(v88) & 1);
}

void sub_21C57D480()
{
  JUMPOUT(0x21C57C7B4);
}

void sub_21C57D494()
{
  JUMPOUT(0x21C57CA28);
}

void sub_21C57D4A8(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char **v8;
  id v9;
  double v10;
  char v11;
  double v12;
  char v13;
  double v14;
  char v15;
  void *v16;
  id v17;
  double v18;
  char v19;
  _BYTE v20[24];
  uint64_t v21;
  double v22;
  char v23;
  double v24;
  char v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  _BYTE v33[40];

  v5 = v2 + 120;
  sub_21C531B18(v2 + 120, (uint64_t)v20, qword_2552890F0);
  if (v21 == 1)
  {
    sub_21C524980((uint64_t)v20, qword_2552890F0);
    v26 = 0u;
    v27 = 0u;
    v28 = 0;
  }
  else
  {
    sub_21C531B18((uint64_t)v20, (uint64_t)&v26, &qword_2552894F8);
    sub_21C58A578((uint64_t)v20);
    if (*((_QWORD *)&v27 + 1))
    {
      sub_21C56101C(&v26, (uint64_t)v29);
      v6 = v30;
      v7 = v31;
      __swift_project_boxed_opaque_existential_1(v29, v30);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 32))(v32, v6, v7);
      sub_21C58A5AC((uint64_t)v32, (uint64_t)v33);
      sub_21C58A5AC((uint64_t)v33, (uint64_t)&v26);
      if ((v28 & 1) != 0)
        v8 = &selRef_initWithCoordinateRegion_;
      else
        v8 = &selRef_initWithMapRect_;
      v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB0D8]), *v8, v26, v27);
      objc_msgSend(a1, sel_setCameraBoundary_animated_, v9, a2 & 1);

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
      goto LABEL_9;
    }
  }
  sub_21C524980((uint64_t)&v26, &qword_2552894F8);
  objc_msgSend(a1, sel_setCameraBoundary_, 0);
LABEL_9:
  sub_21C531B18(v5, (uint64_t)v20, qword_2552890F0);
  if (v21 == 1)
    goto LABEL_12;
  v10 = v22;
  v11 = v23;
  sub_21C58A578((uint64_t)v20);
  if ((v11 & 1) != 0)
    goto LABEL_13;
  sub_21C531B18(v5, (uint64_t)v20, qword_2552890F0);
  if (v21 == 1)
  {
LABEL_12:
    sub_21C524980((uint64_t)v20, qword_2552890F0);
  }
  else
  {
    v18 = v24;
    v19 = v25;
    sub_21C58A578((uint64_t)v20);
    if ((v19 & 1) == 0)
    {
      v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB0E0]), sel_initWithMinCenterCoordinateDistance_maxCenterCoordinateDistance_, v10, v18);
      goto LABEL_22;
    }
  }
LABEL_13:
  sub_21C531B18(v5, (uint64_t)v20, qword_2552890F0);
  if (v21 == 1)
  {
    sub_21C524980((uint64_t)v20, qword_2552890F0);
  }
  else
  {
    v12 = v22;
    v13 = v23;
    sub_21C58A578((uint64_t)v20);
    if ((v13 & 1) == 0)
    {
      v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB0E0]), sel_initWithMinCenterCoordinateDistance_, v12);
      goto LABEL_22;
    }
  }
  sub_21C531B18(v5, (uint64_t)v20, qword_2552890F0);
  if (v21 != 1)
  {
    v14 = v24;
    v15 = v25;
    sub_21C58A578((uint64_t)v20);
    if ((v15 & 1) != 0)
      goto LABEL_19;
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB0E0]), sel_initWithMaxCenterCoordinateDistance_, v14);
LABEL_22:
    v16 = v17;
    goto LABEL_23;
  }
  sub_21C524980((uint64_t)v20, qword_2552890F0);
LABEL_19:
  v16 = 0;
LABEL_23:
  objc_msgSend(a1, sel_setCameraZoomRange_, v16);

}

id sub_21C57D7CC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char v26;
  void (*v27)(char *, uint64_t);
  double v28;
  char v29;
  double v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v32 = a2;
  v35 = a1;
  v2 = sub_21C5E3088();
  v34 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v32 - v6;
  v33 = sub_21C5E3418();
  v8 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_21C5E32E0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C52F7E4((uint64_t)v14);
  sub_21C5E340C();
  sub_21C5E35F8();
  sub_21C5E32D4();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v33);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_21C52F810((uint64_t)v7);
  v23 = *MEMORY[0x24BDED100];
  v24 = v34;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 104);
  v25(v5, v23, v2);
  v26 = sub_21C5E307C();
  v27 = *(void (**)(char *, uint64_t))(v24 + 8);
  v27(v5, v2);
  v27(v7, v2);
  if ((v26 & 1) != 0)
    v28 = v18;
  else
    v28 = v22;
  sub_21C52F810((uint64_t)v7);
  v25(v5, v23, v2);
  v29 = sub_21C5E307C();
  v27(v5, v2);
  v27(v7, v2);
  if ((v29 & 1) != 0)
    v30 = v22;
  else
    v30 = v18;
  return objc_msgSend(v35, sel_setLayoutMargins_, v16, v28, v20, v30, v32);
}

void sub_21C57DA34()
{
  JUMPOUT(0x22077FAFCLL);
}

uint64_t sub_21C57DA54@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x200);
  swift_beginAccess();
  return sub_21C531B18(v3, a1, &qword_2552894F0);
}

uint64_t sub_21C57DABC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x200);
  swift_beginAccess();
  sub_21C58B624(a1, v3, &qword_2552894F0);
  return swift_endAccess();
}

unint64_t sub_21C57DB2C@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x208));
  v3 = *v2;
  v4 = v2[1];
  v5 = v2[2];
  *a1 = *v2;
  a1[1] = v4;
  a1[2] = v5;
  return sub_21C58A874(v3, v4, v5);
}

unint64_t sub_21C57DB5C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x208));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  *(_OWORD *)v3 = *(_OWORD *)a1;
  v3[2] = v2;
  return sub_21C58A8AC(v5, v4, v6);
}

uint64_t sub_21C57DB98()
{
  _QWORD *v0;

  return *((unsigned __int8 *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x210));
}

uint64_t sub_21C57DBB8(uint64_t result)
{
  _QWORD *v1;

  *((_BYTE *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x210)) = result;
  return result;
}

void sub_21C57DBD8()
{
  swift_beginAccess();
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C57DC40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_21C5E37F0();
  v2 = sub_21C5E3BB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
}

void sub_21C57DC84()
{
  swift_beginAccess();
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C57DCEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_21C5E37F0();
  v2 = sub_21C5E3BB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 40))(v1, v0, v2);
  return swift_endAccess();
}

uint64_t sub_21C57DD38()
{
  _QWORD *v0;

  return *((unsigned __int8 *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x220));
}

uint64_t sub_21C57DD58(uint64_t result)
{
  _QWORD *v1;

  *((_BYTE *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x220)) = result;
  return result;
}

uint64_t sub_21C57DD78(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x228));
  v4 = *v3;
  *v3 = a1;
  v3[1] = a2;
  return sub_21C531A9C(v4);
}

uint64_t sub_21C57DDA8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x230));
  v4 = *v3;
  *v3 = a1;
  v3[1] = a2;
  return sub_21C531A9C(v4);
}

void sub_21C57DDD8(_BYTE *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *((_BYTE *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x238));
}

_BYTE *sub_21C57DDFC(_BYTE *result)
{
  _QWORD *v1;

  *((_BYTE *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x238)) = *result;
  return result;
}

uint64_t sub_21C57DE20@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x240);
  swift_beginAccess();
  return sub_21C531B18(v3, a1, &qword_2552894E8);
}

uint64_t sub_21C57DE88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = (uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x240);
  swift_beginAccess();
  sub_21C58B624(a1, v3, &qword_2552894E8);
  return swift_endAccess();
}

uint64_t sub_21C57DEF8(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x248)) = a1;
  return swift_bridgeObjectRelease();
}

unint64_t sub_21C57DF20@<X0>(unint64_t result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  char v21;

  v4 = result;
  if ((result >> 61) >= 4)
  {
    if (result >> 61 == 4)
    {
      v12 = *v3;
      v13 = *MEMORY[0x24BEE4EA0];
      v14 = *(_QWORD *)(result + 24);
      sub_21C55DA30(v14);
      if ((objc_msgSend(a2, sel_hasUserLocation) & 1) != 0)
      {
        result = sub_21C55DAAC(v14);
LABEL_14:
        v4 = 0;
        v6 = 0;
        v7 = 0;
        v8 = 0;
        v9 = 0;
        v10 = 2;
        goto LABEL_15;
      }
      if (v14 != 0xA000000000000000)
      {
        sub_21C55DA30(v14);
        sub_21C57DF20(&v18, v14, a2);
        sub_21C55DAAC(v14);
        sub_21C55DAAC(v14);
        v17 = *(_OWORD *)((v13 & v12) + 0x1E8);
        v19 = *(_OWORD *)((v13 & v12) + 0x1D8);
        v20 = v17;
        type metadata accessor for MapBridgingViewCoordinator.ResolvedCameraPosition();
      }
      sub_21C55DA30(0xA000000000000000);
      sub_21C56F068((uint64_t)&v18);
      result = sub_21C52DB08((uint64_t)&v18, (uint64_t)&v19, (uint64_t *)&unk_255289580);
      if ((v21 & 1) != 0)
        goto LABEL_14;
      result = swift_allocObject();
      v15 = v19;
      v16 = v20;
      v4 = result | 0x2000000000000000;
      v10 = 1;
    }
    else
    {
      if (result != 0xA000000000000000)
        goto LABEL_14;
      sub_21C56F068((uint64_t)&v18);
      result = sub_21C52DB08((uint64_t)&v18, (uint64_t)&v19, (uint64_t *)&unk_255289580);
      if ((v21 & 1) != 0)
        goto LABEL_14;
      result = swift_allocObject();
      v10 = 0;
      v15 = v19;
      v16 = v20;
      v4 = result | 0x2000000000000000;
    }
    *(_OWORD *)(result + 16) = v15;
    *(_OWORD *)(result + 32) = v16;
    v8 = 0x403C000000000000;
    v6 = 0x404C000000000000;
    v7 = 0x404C000000000000;
    v9 = 0x404C000000000000;
    goto LABEL_15;
  }
  v6 = *MEMORY[0x24BEBE158];
  v7 = *(_QWORD *)(MEMORY[0x24BEBE158] + 8);
  v8 = *(_QWORD *)(MEMORY[0x24BEBE158] + 16);
  v9 = *(_QWORD *)(MEMORY[0x24BEBE158] + 24);
  result = sub_21C55DA30(result);
  v10 = 0;
LABEL_15:
  *(_QWORD *)a3 = v4;
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  *(_QWORD *)(a3 + 24) = v8;
  *(_QWORD *)(a3 + 32) = v9;
  *(_BYTE *)(a3 + 40) = v10;
  return result;
}

void sub_21C57E150(unint64_t a1, void *a2)
{
  _BYTE v2[160];

  sub_21C57DF20(a1, a2, (uint64_t)v2);
  type metadata accessor for MapBridgingViewCoordinator.ResolvedCameraPosition();
}

uint64_t sub_21C57E1B0()
{
  void *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  void *v14;
  _QWORD v15[6];
  _BYTE v16[48];
  __int128 v17;
  _BYTE v18[25];
  __int128 v19;
  _BYTE v20[25];

  v6 = sub_21C5E3BB0();
  result = (*(uint64_t (**)(__int128 *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(&v17, v16, v6);
  if (v18[24] != 2)
  {
    v19 = v17;
    *(_OWORD *)v20 = *(_OWORD *)v18;
    *(_OWORD *)&v20[9] = *(_OWORD *)&v18[9];
    v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v2;
    *(_QWORD *)(v9 + 24) = v3;
    *(_QWORD *)(v9 + 32) = v4;
    *(_QWORD *)(v9 + 40) = v5;
    *(_QWORD *)(v9 + 48) = v8;
    v10 = *(_OWORD *)v20;
    *(_OWORD *)(v9 + 56) = v19;
    *(_OWORD *)(v9 + 72) = v10;
    *(_OWORD *)(v9 + 81) = *(_OWORD *)&v20[9];
    *(_BYTE *)(v9 + 97) = v1 & 1;
    v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v2;
    *(_QWORD *)(v12 + 24) = v3;
    *(_QWORD *)(v12 + 32) = v4;
    *(_QWORD *)(v12 + 40) = v5;
    v13 = *(_OWORD *)v20;
    *(_OWORD *)(v12 + 48) = v19;
    *(_OWORD *)(v12 + 64) = v13;
    *(_OWORD *)(v12 + 73) = *(_OWORD *)&v20[9];
    *(_QWORD *)(v12 + 96) = v11;
    *(_QWORD *)(v12 + 104) = sub_21C58AC14;
    *(_QWORD *)(v12 + 112) = v9;
    v15[4] = sub_21C58AC60;
    v15[5] = v12;
    v15[0] = MEMORY[0x24BDAC760];
    v15[1] = 1107296256;
    v15[2] = sub_21C558F28;
    v15[3] = &block_descriptor_110;
    v14 = _Block_copy(v15);
    sub_21C560D6C((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C560DA4);
    sub_21C560D6C((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C560DA4);
    swift_retain();
    swift_release();
    objc_msgSend(v0, sel__updateFramingUsingSetRegionBlock_, v14);
    _Block_release(v14);
    swift_release();
    return sub_21C560D6C((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C560D58);
  }
  return result;
}

void sub_21C57E384(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  double *v8;
  uint64_t v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x22077FAFC](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_21C560D1C((_QWORD *)a2, &v29);
    sub_21C560D1C(&v29, &v30);
    v8 = (double *)v30;
    switch(v30 >> 61)
    {
      case 0uLL:
        v30 &= 0x1FFFFFFFFFFFFFFFuLL;
        objc_msgSend(v7, sel_setRegion_animated_, a3 & 1, sub_21C5AC0D8(v8[2], v8[3], v8[4], v8[5]));
        break;
      case 1uLL:
        v30 &= 0x1FFFFFFFFFFFFFFFuLL;
        objc_msgSend(v7, sel_setVisibleMapRect_edgePadding_animated_, a3 & 1, v8[2], v8[3], v8[4], v8[5], *(double *)(a2 + 8), *(double *)(a2 + 16), *(double *)(a2 + 24), *(double *)(a2 + 32));
        break;
      case 2uLL:
        v30 &= 0x1FFFFFFFFFFFFFFFuLL;
        v9 = *((unsigned __int8 *)v8 + 24);
        v10 = *((id *)v8 + 2);
        objc_msgSend(v7, sel_frame);
        v12 = v11;
        v14 = v13;
        v15 = (void *)objc_opt_self();
        v16 = objc_msgSend(v15, sel_cameraLookingAtMapItem_forViewSize_allowPitch_, v10, v9, v12, v14);
        objc_msgSend(v16, sel_centerCoordinate);
        v18 = v17;
        v20 = v19;
        objc_msgSend(v16, sel_centerCoordinateDistance);
        v22 = v21;
        objc_msgSend(v16, sel_heading);
        v24 = v23;
        objc_msgSend(v16, sel_pitch);
        v26 = v25;

        v27 = objc_msgSend(v15, sel_cameraLookingAtCenterCoordinate_fromDistance_pitch_heading_, v18, v20, v22, v26, v24);
        objc_msgSend(v7, sel_setCamera_animated_, v27, a3 & 1);

        break;
      case 3uLL:
        v30 &= 0x1FFFFFFFFFFFFFFFuLL;
        v28 = objc_msgSend((id)objc_opt_self(), sel_cameraLookingAtCenterCoordinate_fromDistance_pitch_heading_, v8[2], v8[3], v8[4], v8[6], v8[5]);
        objc_msgSend(v7, sel_setCamera_animated_, v28, a3 & 1);

        break;
      default:
        break;
    }

  }
}

void sub_21C57E62C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD aBlock[6];

  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v6 = a2 + 16;
    swift_beginAccess();
    v7 = MEMORY[0x22077FAFC](v6);
    if (v7)
    {
      v8 = (void *)v7;
      aBlock[4] = a3;
      aBlock[5] = a4;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_21C558F28;
      aBlock[3] = &block_descriptor_113;
      v9 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v8, sel__performActionAsIfGoingToDefaultLocation_, v9);
      _Block_release(v9);

    }
  }
  else
  {
    a3();
  }
}

unint64_t sub_21C57E704(void *a1)
{
  _QWORD *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  uint64_t v8;
  unint64_t v9;

  v3 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x208));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  result = sub_21C58A874(*v3, v5, v6);
  if (v5)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
    MEMORY[0x22077ECE0](&v9, v8);
    sub_21C58A8AC(v4, v5, v6);
    sub_21C57E150(v9, a1);
  }
  return result;
}

uint64_t sub_21C57E7C4(void *a1, uint64_t *a2, int a3, int a4, int a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  unint64_t v42;
  double v43;
  int8x16_t v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  char v53;
  unint64_t v54;
  char v55;
  char v56;
  char v57;
  int v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  uint64_t v69;
  _BYTE v70[12];
  int v71;
  _BYTE *v72;
  int v73;
  float64x2_t v74;
  float64x2_t v75;
  _BYTE *v76;
  int v77;
  void *v78;
  _QWORD *v79;
  unint64_t v80;
  uint64_t v81;
  int8x16_t v82;
  double v83;
  float64x2_t v84;
  unint64_t v85[2];

  v77 = a5;
  v73 = a4;
  v71 = a3;
  v78 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v70[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v75.f64[0] = type metadata accessor for KeyframeAnimationState();
  v74.f64[0] = *(float64_t *)(*(_QWORD *)&v75.f64[0] - 8);
  MEMORY[0x24BDAC7A8](*(_QWORD *)&v75.f64[0]);
  v72 = &v70[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894E8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v70[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(qword_255289410);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v76 = &v70[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = *a2;
  v81 = a2[1];
  v18 = a2[2];
  v19 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v5) + 0x208);
  v79 = v5;
  v20 = (_QWORD *)((char *)v5 + v19);
  v22 = *v20;
  v21 = v20[1];
  v23 = v20[2];
  sub_21C58A874(*v20, v21, v23);
  if (v21)
  {
    v82.i64[0] = v22;
    v82.i64[1] = v21;
    v83 = *(double *)&v23;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
    MEMORY[0x22077ECE0](v85, v24);
    sub_21C58A8AC(v22, v21, v23);
    v25 = v85[0];
  }
  else
  {
    v25 = 0xF000000000000007;
  }
  v80 = v25;
  v26 = v79;
  swift_retain();
  v27 = v81;
  swift_retain();
  sub_21C55DA30(v18);
  v28 = (_QWORD *)((char *)v26 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v26) + 0x208));
  v29 = *v28;
  v30 = v28[1];
  v31 = v28[2];
  *v28 = v17;
  v28[1] = v27;
  v28[2] = v18;
  sub_21C58A8AC(v29, v30, v31);
  sub_21C57DE20((uint64_t)v13);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v32 = &qword_2552894E8;
    v33 = (uint64_t)v13;
LABEL_8:
    sub_21C524980(v33, v32);
    v36 = v78;
    v37 = v17;
    v38 = v80;
    v39 = v81;
    goto LABEL_16;
  }
  v34 = (uint64_t)v13;
  v35 = v76;
  sub_21C52DB08(v34, (uint64_t)v76, qword_255289410);
  MEMORY[0x22077ECE0](v14);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, _QWORD))(*(_QWORD *)&v74.f64[0] + 48))(v9, 1, *(_QWORD *)&v75.f64[0]) == 1)
  {
    sub_21C524980((uint64_t)v35, qword_255289410);
    v32 = (uint64_t *)&unk_255289560;
    v33 = (uint64_t)v9;
    goto LABEL_8;
  }
  v40 = v72;
  sub_21C52AAD4((uint64_t)v9, (uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for KeyframeAnimationState);
  v37 = v17;
  v82.i64[0] = v17;
  v39 = v81;
  v82.i64[1] = v81;
  v83 = *(double *)&v18;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
  MEMORY[0x22077ECE0](v85, v41);
  v42 = v85[0] & 0xE000000000000000;
  if ((v85[0] & 0xE000000000000000) == 0x6000000000000000)
  {
    v43 = *(double *)(v85[0] + 32);
    v44 = vextq_s8(*(int8x16_t *)(v85[0] + 16), *(int8x16_t *)(v85[0] + 16), 8uLL);
    v74 = *(float64x2_t *)(v85[0] + 40);
    v75 = (float64x2_t)v44;
  }
  else
  {
    v74 = 0u;
    v75 = 0u;
    v43 = 0.0;
  }
  v36 = v78;
  sub_21C55DAAC(v85[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  sub_21C5E30D0();
  if (v42 == 0x6000000000000000
    && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v75, (float64x2_t)vextq_s8(v82, v82, 8uLL)), (int32x4_t)vceqq_f64(v74, v84))), 0xFuLL))) & 1) != 0)
  {
    v38 = v80;
    if (v43 == v83)
    {
      sub_21C560A38(v80);
      sub_21C52A88C((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for KeyframeAnimationState);
      return sub_21C524980((uint64_t)v35, qword_255289410);
    }
  }
  else
  {
    v38 = v80;
  }
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = v26;
  *(_QWORD *)(v45 + 24) = v36;
  v46 = v26;
  v47 = v36;
  sub_21C5E2EE4();
  swift_release();
  sub_21C52A88C((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for KeyframeAnimationState);
  sub_21C524980((uint64_t)v35, qword_255289410);
LABEL_16:
  v82.i64[0] = v37;
  v82.i64[1] = v39;
  v83 = *(double *)&v18;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
  MEMORY[0x22077ECE0](v85);
  v49 = v85[0];
  v50 = v38 & 0xF000000000000007;
  if (*((_BYTE *)v26 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v26) + 0x210)) == 1 && v50 != 0xF000000000000007)
  {
    sub_21C55DA30(v38);
    sub_21C5C6DE4(v38);
    v52 = v51;
    sub_21C560A38(v38);
    if ((v52 & 1) != 0)
    {
      sub_21C5C6DE4(v49);
      if ((v53 & 1) == 0)
        objc_msgSend(v36, sel__clearGesturesAndAnimations);
    }
  }
  v82.i64[0] = v37;
  v82.i64[1] = v39;
  v83 = *(double *)&v18;
  MEMORY[0x22077ECE0](v85, v48);
  v54 = v85[0];
  sub_21C55DAAC(v85[0]);
  v55 = v77;
  if (v54 >> 61 != 4)
  {
    objc_msgSend(v36, sel_setUserTrackingMode_animated_, 0, v77 & 1);
    objc_msgSend(v36, sel_setShowsUserLocation_, v73 & 1);
  }
  if ((v49 >> 61) < 4)
  {
    if (v50 == 0xF000000000000007
      || (sub_21C58ABA4(v38),
          sub_21C55DA30(v49),
          sub_21C5C6DE4(v38),
          v57 = v56,
          sub_21C55DAAC(v49),
          sub_21C560A38(v38),
          (v57 & 1) == 0))
    {
      sub_21C57E150(v49, v36);
    }
    sub_21C560A38(v38);
    return sub_21C55DAAC(v49);
  }
  if (v49 >> 61 == 4)
  {
    v59 = *(unsigned __int8 *)(v49 + 16);
    v60 = *(_QWORD *)(v49 + 24);
    sub_21C55DA30(v60);
    if ((objc_msgSend(v36, sel_hasUserLocation) & 1) == 0)
    {
      v61 = 0xF000000000000007;
      if (v50 != 0xF000000000000007 && (v80 & 0xE000000000000000) == 0x8000000000000000)
      {
        v61 = *(_QWORD *)(v80 + 24);
        sub_21C55DA30(v61);
      }
      v62 = v61 & 0xF000000000000007;
      if (v60 == 0xA000000000000000)
      {
        sub_21C55DA30(0xA000000000000000);
        sub_21C55DA30(0xA000000000000000);
        if (v62 == 0xF000000000000007
          || (sub_21C58ABA4(v61), sub_21C5C6DE4(v61), v68 = v67, sub_21C560A38(v61), (v68 & 1) == 0)
          || (v71 & 1) != 0)
        {
          sub_21C57E150(v49, v36);
        }
        sub_21C560A38(v61);
      }
      else
      {
        sub_21C55DA30(v60);
        if (v62 == 0xF000000000000007
          || (sub_21C58ABA4(v61), sub_21C5C6DE4(v61), v66 = v65, sub_21C560A38(v61), (v66 & 1) == 0))
        {
          sub_21C57E150(v49, v36);
        }
        sub_21C560A38(v61);
        sub_21C55DAAC(v60);
      }
    }
    if (v59)
      v69 = 2;
    else
      v69 = 1;
    objc_msgSend(v36, sel_setUserTrackingMode_animated_, v69, v55 & 1);
    sub_21C560A38(v80);
    sub_21C55DAAC(v60);
    return sub_21C55DAAC(v49);
  }
  if (v49 == 0xA000000000000000)
  {
    if (v50 == 0xF000000000000007
      || (sub_21C55DA30(v38), sub_21C5C6DE4(v38), v64 = v63, sub_21C560A38(v38), (v64 & 1) == 0)
      || (v71 & 1) != 0)
    {
      sub_21C57E150(0xA000000000000000, v36);
    }
  }
  return sub_21C560A38(v38);
}

void sub_21C57EF68()
{
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C57EFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;

  *(_QWORD *)(v11 - 160) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&a9 - v13;
  v15 = sub_21C5E37F0();
  v16 = sub_21C5E3BB0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&a9 - v22;
  v24 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&a9 - v25;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  *(_QWORD *)(v11 - 120) = v9;
  v28 = v9;
  v30 = v29;
  *(_QWORD *)(v11 - 136) = v27;
  v27(v23, v28, v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, v15) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v30);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v20, 1, 1, v15);
    sub_21C57F2EC(*(_QWORD *)(v11 - 128), (uint64_t)v20, *(_DWORD *)(v11 - 140) & 1);
  }
  *(_QWORD *)(v11 - 152) = v10;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v23, v15);
  MEMORY[0x22077ECE0](v15);
  v31 = sub_21C5C8F8C(a1);
  v32 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 160) + 8);
  *(_QWORD *)(v11 - 168) = v32;
  v32(v14, a1);
  if ((v31 & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v20, v26, v15);
    v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    v34 = v20;
    v35 = 0;
  }
  else
  {
    v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    v34 = v20;
    v35 = 1;
  }
  *(_QWORD *)(v11 - 160) = v33;
  v33(v34, v35, 1, v15);
  *(_DWORD *)(v11 - 140) &= 1u;
  sub_21C581E34();
}

void sub_21C57F204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v4, v2);
  MEMORY[0x22077ECE0](v5);
  v10 = sub_21C5C8E64(v8);
  (*(void (**)(uint64_t, uint64_t))(v9 - 168))(v1, v8);
  if ((v10 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v7, v5);
    v11 = v4;
    v12 = 0;
  }
  else
  {
    v11 = v4;
    v12 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 - 160))(v11, v12, 1, v5);
  sub_21C57F2EC(v6, v4, *(_DWORD *)(v9 - 140));
}

void sub_21C57F294()
{
  void (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0(v3, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v4);
  JUMPOUT(0x21C57F2B0);
}

void sub_21C57F2EC(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v18 = a3;
  v24 = a2;
  v22 = a1;
  v4 = (_QWORD *)(*MEMORY[0x24BEE4EA0] & *v3);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C70);
  MEMORY[0x24BDAC7A8](v5);
  v17[3] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D00);
  MEMORY[0x24BDAC7A8](v7);
  v17[1] = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CC0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v17[2] = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v4[59];
  v23 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v21 = (char *)v17 - v13;
  v14 = v4[60];
  v15 = v4[61];
  v16 = v4[62];
  v25 = v12;
  v26 = v14;
  v17[4] = v14;
  v20 = v15;
  v27 = v15;
  v28 = v16;
  v19 = v16;
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C580264@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  unint64_t v22;
  int64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v29 = a4;
  v28 = a3(0);
  v32 = *(_QWORD *)(v28 - 8);
  v8 = MEMORY[0x24BDAC7A8](v28);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v28 - v11;
  v13 = *(_QWORD *)(a2 + 64);
  v30 = a2 + 64;
  v14 = 1 << *(_BYTE *)(a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v31 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  if (!v16)
    goto LABEL_5;
LABEL_4:
  v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    sub_21C529664(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v32 + 72) * i, (uint64_t)v12, a3);
    sub_21C52AAD4((uint64_t)v12, (uint64_t)v10, a3);
    v24 = a1(v10);
    if (v4)
    {
      sub_21C52A88C((uint64_t)v10, a3);
      return swift_release();
    }
    if ((v24 & 1) != 0)
    {
      swift_release();
      v25 = v29;
      sub_21C52AAD4((uint64_t)v10, v29, a3);
      v26 = 0;
      v27 = v28;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v25, v26, 1, v27);
    }
    result = sub_21C52A88C((uint64_t)v10, a3);
    if (v16)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v18++, 1))
      break;
    if (v18 >= v31)
      goto LABEL_28;
    v22 = *(_QWORD *)(v30 + 8 * v18);
    if (!v22)
    {
      v23 = v18 + 1;
      if (v18 + 1 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 2;
      if (v18 + 2 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
        goto LABEL_16;
      v23 = v18 + 3;
      if (v18 + 3 >= v31)
        goto LABEL_28;
      v22 = *(_QWORD *)(v30 + 8 * v23);
      if (v22)
      {
LABEL_16:
        v18 = v23;
        goto LABEL_17;
      }
      v23 = v18 + 4;
      if (v18 + 4 < v31)
      {
        v22 = *(_QWORD *)(v30 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v18 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_31;
            if (v18 >= v31)
              goto LABEL_28;
            v22 = *(_QWORD *)(v30 + 8 * v18);
            ++v23;
            if (v22)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      v27 = v28;
      v25 = v29;
      swift_release();
      v26 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v25, v26, 1, v27);
    }
LABEL_17:
    v16 = (v22 - 1) & v22;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_21C580510(char **a1, char *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  void (*v80)(char *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unsigned int v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t, uint64_t);
  uint64_t v106;
  char *v107;
  unsigned int (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  unsigned int (*v120)(char *, uint64_t, uint64_t);
  char *v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  void (*v128)(char *, uint64_t);
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, uint64_t);
  uint64_t v137;
  char *v138;
  void (*v139)(char *, uint64_t);
  void (*v140)(char *, uint64_t);
  void (*v141)(char *, uint64_t, uint64_t);
  char *v142;
  char *v143;
  void (*v144)(char *, uint64_t);
  void (*v145)(char *, uint64_t);
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;

  v174 = (char *)a2;
  v168 = a3;
  v4 = *MEMORY[0x24BEE4EA0] & *a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C70);
  MEMORY[0x24BDAC7A8](v5);
  v156 = (uint64_t)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for UserAnnotationViewModel(0);
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v8 = (char *)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D00);
  MEMORY[0x24BDAC7A8](v9);
  v162 = (uint64_t)&v147 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CustomAnnotationViewModel(0);
  v160 = *(_QWORD *)(v11 - 8);
  v161 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v166 = (uint64_t)&v147 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = v4;
  v170 = *(_QWORD *)(*(_QWORD *)(v4 + 472) - 8);
  MEMORY[0x24BDAC7A8](v12);
  v151 = (char *)&v147 - v14;
  v173 = v15;
  v16 = sub_21C5E3BB0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v158 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v18 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v159 = (char *)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v152 = (char *)&v147 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v163 = (char *)&v147 - v23;
  v175 = *(_QWORD *)(v16 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v148 = (char *)&v147 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v153 = (char *)&v147 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v172 = (char *)&v147 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v149 = (char *)&v147 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v157 = (char *)&v147 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v165 = (char *)&v147 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v150 = (char *)&v147 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v147 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v164 = (char *)&v147 - v41;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CC0);
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)&v147 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for MarkerAnnotationViewModel(0);
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v171 = (char *)&v147 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = *a1;
  type metadata accessor for MapBridgingMarker();
  v49 = swift_dynamicCastClass();
  v169 = TupleTypeMetadata2;
  if (v49)
  {
    v50 = *(_QWORD *)&v174[qword_255288E48 + 16];
    if (*(_QWORD *)(v50 + 16))
    {
      v51 = v49;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v52 = sub_21C5310EC(v51);
      if ((v53 & 1) != 0)
      {
        sub_21C529664(*(_QWORD *)(v50 + 56) + *(_QWORD *)(v46 + 72) * v52, (uint64_t)v44, type metadata accessor for MarkerAnnotationViewModel);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v44, 0, 1, v45);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v44, 1, 1, v45);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      TupleTypeMetadata2 = v169;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v44, 1, 1, v45);
      swift_unknownObjectRetain();
    }
    v54 = (uint64_t)v171;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45) != 1)
    {
      v172 = v48;
      sub_21C52AAD4((uint64_t)v44, v54, type metadata accessor for MarkerAnnotationViewModel);
      v68 = (uint64_t)v164;
      v69 = TupleTypeMetadata2;
      v70 = v40;
      v71 = v173;
      v167 = *(_QWORD *)(v167 + 488);
      sub_21C5AE7C0(v173, v167, v72, (uint64_t)v164);
      v73 = v170;
      (*(void (**)(char *, uint64_t, uint64_t))(v170 + 16))(v70, v168, v71);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v71);
      v74 = v163;
      v75 = (uint64_t)&v163[*(int *)(v69 + 48)];
      v76 = v175;
      v77 = *(void (**)(char *, uint64_t, uint64_t))(v175 + 16);
      v77(v163, v68, v16);
      v174 = (char *)v75;
      v78 = v16;
      v77((char *)v75, (uint64_t)v70, v16);
      v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
      if (v79(v74, 1, v71) == 1)
      {
        swift_unknownObjectRelease();
        v80 = *(void (**)(char *, uint64_t))(v76 + 8);
        v80(v70, v78);
        v80(v164, v78);
        sub_21C52A88C((uint64_t)v171, type metadata accessor for MarkerAnnotationViewModel);
        if (v79(v174, 1, v71) == 1)
        {
          v81 = v163;
          v82 = v78;
LABEL_36:
          v80(v81, v82);
          v96 = 1;
          return v96 & 1;
        }
      }
      else
      {
        v88 = v150;
        v77(v150, (uint64_t)v74, v78);
        v89 = (uint64_t)v174;
        v90 = v79(v174, 1, v71);
        v91 = v71;
        if (v90 != 1)
        {
          v124 = v170;
          v125 = v78;
          v126 = v74;
          v127 = v151;
          (*(void (**)(char *, uint64_t, uint64_t))(v170 + 32))(v151, v89, v91);
          v96 = sub_21C5E3934();
          swift_unknownObjectRelease();
          v128 = *(void (**)(char *, uint64_t))(v124 + 8);
          v128(v127, v91);
          v129 = *(void (**)(char *, uint64_t))(v175 + 8);
          v129(v70, v125);
          v129(v164, v125);
          sub_21C52A88C((uint64_t)v171, type metadata accessor for MarkerAnnotationViewModel);
          v128(v88, v91);
          v129(v126, v125);
          return v96 & 1;
        }
        swift_unknownObjectRelease();
        v92 = *(void (**)(char *, uint64_t))(v175 + 8);
        v92(v70, v78);
        v92(v164, v78);
        sub_21C52A88C((uint64_t)v171, type metadata accessor for MarkerAnnotationViewModel);
        (*(void (**)(char *, uint64_t))(v170 + 8))(v88, v71);
      }
      (*(void (**)(char *, uint64_t))(v158 + 8))(v163, v169);
      goto LABEL_44;
    }
    swift_unknownObjectRelease();
    sub_21C524980((uint64_t)v44, &qword_255288CC0);
  }
  type metadata accessor for MapBridgingCustomAnnotation();
  v55 = swift_dynamicCastClass();
  v57 = (uint64_t)v172;
  v56 = v173;
  v58 = v175;
  if (v55)
  {
    v59 = *(_QWORD *)&v174[qword_255288E40 + 16];
    if (*(_QWORD *)(v59 + 16))
    {
      v60 = v55;
      v171 = v8;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v61 = sub_21C531130(v60);
      v63 = v160;
      if ((v62 & 1) != 0)
      {
        v64 = v162;
        sub_21C529664(*(_QWORD *)(v59 + 56) + *(_QWORD *)(v160 + 72) * v61, v162, type metadata accessor for CustomAnnotationViewModel);
        v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
        v66 = v64;
        v67 = 0;
      }
      else
      {
        v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v160 + 56);
        v64 = v162;
        v66 = v162;
        v67 = 1;
      }
      v87 = v161;
      v65(v66, v67, 1, v161);
      swift_bridgeObjectRelease();
      v85 = v64;
      swift_bridgeObjectRelease();
      v86 = v63;
      v8 = v171;
    }
    else
    {
      v84 = v160;
      v83 = v161;
      v85 = v162;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v160 + 56))(v162, 1, 1, v161);
      swift_unknownObjectRetain();
      v86 = v84;
      v87 = v83;
    }
    v93 = (uint64_t)v165;
    v94 = v166;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v85, 1, v87) != 1)
    {
      sub_21C52AAD4(v85, v94, type metadata accessor for CustomAnnotationViewModel);
      v174 = *(char **)(v167 + 488);
      sub_21C5AE7C0(v56, (uint64_t)v174, v97, v93);
      v98 = v93;
      v99 = v170;
      v100 = v56;
      v101 = v157;
      (*(void (**)(char *, uint64_t, uint64_t))(v170 + 16))(v157, v168, v100);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v101, 0, 1, v100);
      v102 = v152;
      v103 = &v152[*(int *)(TupleTypeMetadata2 + 48)];
      v104 = v175;
      v105 = *(void (**)(char *, uint64_t, uint64_t))(v175 + 16);
      v106 = v98;
      v107 = v103;
      v105(v152, v106, v16);
      v105(v107, (uint64_t)v101, v16);
      v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48);
      if (v108(v102, 1, v100) == 1)
      {
        swift_unknownObjectRelease();
        v80 = *(void (**)(char *, uint64_t))(v104 + 8);
        v80(v101, v16);
        v80(v165, v16);
        sub_21C52A88C(v166, type metadata accessor for CustomAnnotationViewModel);
        if (v108(v107, 1, v100) == 1)
        {
          v81 = v102;
LABEL_35:
          v82 = v16;
          goto LABEL_36;
        }
      }
      else
      {
        v121 = v149;
        v105(v149, (uint64_t)v102, v16);
        v122 = v100;
        if (v108(v107, 1, v100) != 1)
        {
          v137 = v170;
          v138 = v151;
          (*(void (**)(char *, char *, uint64_t))(v170 + 32))(v151, v107, v100);
          v96 = sub_21C5E3934();
          swift_unknownObjectRelease();
          v139 = *(void (**)(char *, uint64_t))(v137 + 8);
          v139(v138, v122);
          v140 = *(void (**)(char *, uint64_t))(v175 + 8);
          v140(v157, v16);
          v140(v165, v16);
          sub_21C52A88C(v166, type metadata accessor for CustomAnnotationViewModel);
          v139(v121, v122);
          v140(v102, v16);
          return v96 & 1;
        }
        swift_unknownObjectRelease();
        v123 = *(void (**)(char *, uint64_t))(v175 + 8);
        v123(v157, v16);
        v123(v165, v16);
        sub_21C52A88C(v166, type metadata accessor for CustomAnnotationViewModel);
        (*(void (**)(char *, uint64_t))(v170 + 8))(v121, v122);
      }
      (*(void (**)(char *, uint64_t))(v158 + 8))(v102, v169);
LABEL_44:
      v96 = 0;
      return v96 & 1;
    }
    swift_unknownObjectRelease();
    sub_21C524980(v85, &qword_255288D00);
    v57 = (uint64_t)v172;
    v58 = v175;
  }
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    v96 = 0;
    return v96 & 1;
  }
  v95 = v156;
  sub_21C56F9AC(*(_QWORD *)&v174[qword_255288E58 + 16], v156);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))(v95, 1, v155) != 1)
  {
    sub_21C52AAD4(v95, (uint64_t)v8, type metadata accessor for UserAnnotationViewModel);
    v171 = v8;
    v167 = *(_QWORD *)(v167 + 488);
    sub_21C5AE7C0(v56, v167, v109, v57);
    v110 = v170;
    v111 = v153;
    (*(void (**)(char *, uint64_t, uint64_t))(v170 + 16))(v153, v168, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v111, 0, 1, v56);
    v112 = *(int *)(TupleTypeMetadata2 + 48);
    v113 = v159;
    v114 = v56;
    v115 = (uint64_t)&v159[v112];
    v116 = v58;
    v117 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
    v117(v159, v57, v16);
    v174 = (char *)v115;
    v118 = v115;
    v119 = v114;
    v117((char *)v118, (uint64_t)v111, v16);
    v120 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48);
    if (v120(v113, 1, v119) == 1)
    {
      v80 = *(void (**)(char *, uint64_t))(v116 + 8);
      v80(v111, v16);
      v80((char *)v57, v16);
      sub_21C52A88C((uint64_t)v171, type metadata accessor for UserAnnotationViewModel);
      if (v120(v174, 1, v119) == 1)
      {
        v81 = v159;
        goto LABEL_35;
      }
    }
    else
    {
      v130 = v116;
      v131 = v148;
      v117(v148, (uint64_t)v159, v16);
      v132 = v131;
      v133 = v172;
      v134 = (uint64_t)v174;
      v135 = v110;
      if (v120(v174, 1, v119) != 1)
      {
        v141 = *(void (**)(char *, uint64_t, uint64_t))(v110 + 32);
        v142 = v151;
        v141(v151, v134, v119);
        v96 = sub_21C5E3934();
        v143 = v132;
        v144 = *(void (**)(char *, uint64_t))(v135 + 8);
        v144(v142, v119);
        v145 = *(void (**)(char *, uint64_t))(v130 + 8);
        v145(v153, v16);
        v145(v133, v16);
        sub_21C52A88C((uint64_t)v171, type metadata accessor for UserAnnotationViewModel);
        v144(v143, v119);
        v145(v159, v16);
        return v96 & 1;
      }
      v136 = *(void (**)(char *, uint64_t))(v130 + 8);
      v136(v153, v16);
      v136(v133, v16);
      sub_21C52A88C((uint64_t)v171, type metadata accessor for UserAnnotationViewModel);
      (*(void (**)(char *, uint64_t))(v110 + 8))(v132, v119);
    }
    (*(void (**)(char *, uint64_t))(v158 + 8))(v159, v169);
    goto LABEL_44;
  }
  sub_21C524980(v95, &qword_255288C70);
  v96 = 0;
  return v96 & 1;
}

uint64_t sub_21C581310(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v15;

  if (a3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    v5 = sub_21C5E3D60();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      v6 = 4;
      do
      {
        v7 = v6 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          v8 = MEMORY[0x22077F1B4](v6 - 4, a3);
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
            goto LABEL_16;
        }
        else
        {
          v8 = *(_QWORD *)(a3 + 8 * v6);
          swift_unknownObjectRetain();
          v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        v15 = v8;
        v10 = a1(&v15);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return v12 & 1;
        }
        v11 = v10;
        swift_unknownObjectRelease();
        if ((v11 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v12 = 1;
          return v12 & 1;
        }
        ++v6;
      }
      while (v9 != v5);
    }
  }
  swift_bridgeObjectRelease();
  v12 = 0;
  return v12 & 1;
}

uint64_t sub_21C581454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, uint64_t);
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  void (*v31)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v36 = a2;
  v38 = a5;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v33 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21C5E3BB0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v35 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v12 = (char *)&v33 - v11;
  v13 = *(_QWORD *)(v8 - 8);
  v14 = MEMORY[0x24BDAC7A8](v10);
  v37 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v33 - v19;
  type metadata accessor for MarkerAnnotationViewModel(0);
  sub_21C5AE7C0(a3, v38, v21, (uint64_t)v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v18, v36, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, a3);
  v36 = TupleTypeMetadata2;
  v22 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v23(v12, v20, v8);
  v23(v22, v18, v8);
  v34 = v6;
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v24(v12, 1, a3) != 1)
  {
    v23(v37, v12, v8);
    if (v24(v22, 1, a3) != 1)
    {
      v29 = v33;
      v28 = v34;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v33, v22, a3);
      v26 = sub_21C5E3934();
      v30 = *(void (**)(char *, uint64_t))(v28 + 8);
      v30(v29, a3);
      v31 = *(void (**)(char *, uint64_t))(v13 + 8);
      v31(v18, v8);
      v31(v20, v8);
      v30(v37, a3);
      v31(v12, v8);
      return v26 & 1;
    }
    v27 = *(void (**)(char *, uint64_t))(v13 + 8);
    v27(v18, v8);
    v27(v20, v8);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v37, a3);
    goto LABEL_6;
  }
  v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v18, v8);
  v25(v20, v8);
  if (v24(v22, 1, a3) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
    v26 = 0;
    return v26 & 1;
  }
  v25(v12, v8);
  v26 = 1;
  return v26 & 1;
}

uint64_t sub_21C581770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, uint64_t);
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  void (*v31)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v36 = a2;
  v38 = a5;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v33 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21C5E3BB0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v35 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v12 = (char *)&v33 - v11;
  v13 = *(_QWORD *)(v8 - 8);
  v14 = MEMORY[0x24BDAC7A8](v10);
  v37 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v33 - v19;
  type metadata accessor for CustomAnnotationViewModel(0);
  sub_21C5AE7C0(a3, v38, v21, (uint64_t)v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v18, v36, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, a3);
  v36 = TupleTypeMetadata2;
  v22 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v23(v12, v20, v8);
  v23(v22, v18, v8);
  v34 = v6;
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v24(v12, 1, a3) != 1)
  {
    v23(v37, v12, v8);
    if (v24(v22, 1, a3) != 1)
    {
      v29 = v33;
      v28 = v34;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v33, v22, a3);
      v26 = sub_21C5E3934();
      v30 = *(void (**)(char *, uint64_t))(v28 + 8);
      v30(v29, a3);
      v31 = *(void (**)(char *, uint64_t))(v13 + 8);
      v31(v18, v8);
      v31(v20, v8);
      v30(v37, a3);
      v31(v12, v8);
      return v26 & 1;
    }
    v27 = *(void (**)(char *, uint64_t))(v13 + 8);
    v27(v18, v8);
    v27(v20, v8);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v37, a3);
    goto LABEL_6;
  }
  v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v18, v8);
  v25(v20, v8);
  if (v24(v22, 1, a3) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
    v26 = 0;
    return v26 & 1;
  }
  v25(v12, v8);
  v26 = 1;
  return v26 & 1;
}

uint64_t sub_21C581A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, uint64_t);
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  void (*v31)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v36 = a2;
  v38 = a5;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v33 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_21C5E3BB0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v35 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v12 = (char *)&v33 - v11;
  v13 = *(_QWORD *)(v8 - 8);
  v14 = MEMORY[0x24BDAC7A8](v10);
  v37 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v33 - v19;
  type metadata accessor for UserAnnotationViewModel(0);
  sub_21C5AE7C0(a3, v38, v21, (uint64_t)v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v18, v36, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, a3);
  v36 = TupleTypeMetadata2;
  v22 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v23(v12, v20, v8);
  v23(v22, v18, v8);
  v34 = v6;
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v24(v12, 1, a3) != 1)
  {
    v23(v37, v12, v8);
    if (v24(v22, 1, a3) != 1)
    {
      v29 = v33;
      v28 = v34;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v33, v22, a3);
      v26 = sub_21C5E3934();
      v30 = *(void (**)(char *, uint64_t))(v28 + 8);
      v30(v29, a3);
      v31 = *(void (**)(char *, uint64_t))(v13 + 8);
      v31(v18, v8);
      v31(v20, v8);
      v30(v37, a3);
      v31(v12, v8);
      return v26 & 1;
    }
    v27 = *(void (**)(char *, uint64_t))(v13 + 8);
    v27(v18, v8);
    v27(v20, v8);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v37, a3);
    goto LABEL_6;
  }
  v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v18, v8);
  v25(v20, v8);
  if (v24(v22, 1, a3) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
    v26 = 0;
    return v26 & 1;
  }
  v25(v12, v8);
  v26 = 1;
  return v26 & 1;
}

void sub_21C581DA8(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x22077FAFC](v3);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_userLocation);
    objc_msgSend(v5, sel_selectAnnotation_animated_, v6, a2 & 1);

  }
}

void sub_21C581E34()
{
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C582720()
{
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C582784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  *(_QWORD *)(v12 - 136) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v12 - 144) = (char *)&a9 - v13;
  *(_QWORD *)(v12 - 128) = v14;
  v15 = sub_21C5E37F0();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v16);
  v17 = (uint64_t *)(v9 + *(_QWORD *)(v10 + 552));
  v18 = *v17;
  *(_QWORD *)(v12 - 152) = v11;
  *v17 = v11;
  v17[1] = *(_QWORD *)(v12 - 120);
  swift_retain();
  sub_21C531A9C(v18);
  sub_21C57DBD8();
}

void sub_21C582860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v0, 1, v3))
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v5);
  }
  else
  {
    v7 = *(uint64_t (**)(uint64_t))(v6 - 152);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v4, v0, v3);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v5);
    v8 = *(_QWORD *)(v6 - 144);
    MEMORY[0x22077ECE0](v3);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v3);
    v9 = *(_QWORD *)(v6 - 128);
    sub_21C5C8A98(v9, (_QWORD *)(v6 - 112));
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 136) + 8))(v8, v9);
    v10 = *(id *)(v6 - 112);
    if (v10)
    {
      *(_QWORD *)(v6 - 112) = v10;
      if ((v7(v6 - 112) & 1) != 0)
      {
        v11 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v12 = swift_allocObject();
        *(_QWORD *)(v12 + 16) = v11;
        *(_QWORD *)(v12 + 24) = v10;
        *(_BYTE *)(v12 + 32) = *(_DWORD *)(v6 - 156) & 1;
        swift_retain();
        v10 = v10;
        sub_21C5E2EE4();
        swift_release();
        swift_release();
      }

    }
  }
}

void sub_21C5829BC(uint64_t a1, uint64_t a2, char a3, SEL *a4)
{
  uint64_t v7;
  void *v8;
  void *v9;

  v7 = a1 + 16;
  swift_beginAccess();
  v8 = (void *)MEMORY[0x22077FAFC](v7);
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, *a4, a2, a3 & 1);

  }
}

id sub_21C582A2C(void *a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *a3;
  if ((a2 & 1) == 0)
    v5 = 0;
  v6 = qword_255288E88;
  *(_QWORD *)(v3 + qword_255288E88) = v5;
  objc_msgSend(a1, sel_setScrollEnabled_, v5 & 1);
  objc_msgSend(a1, sel_setZoomEnabled_, (*(_QWORD *)(v3 + v6) >> 1) & 1);
  objc_msgSend(a1, sel_setPitchEnabled_, (*(_QWORD *)(v3 + v6) >> 3) & 1);
  return objc_msgSend(a1, sel_setRotateEnabled_, (*(_QWORD *)(v3 + v6) >> 2) & 1);
}

uint64_t sub_21C582AC0(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_OWORD *);
  _OWORD v21[6];
  uint64_t v22;
  _OWORD v23[6];
  uint64_t v24;
  _OWORD v25[6];
  uint64_t v26;
  char v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_255289410);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894E8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C57DE20((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    v13 = &qword_2552894E8;
    v14 = (uint64_t)v12;
  }
  else
  {
    sub_21C531B18((uint64_t)v12, (uint64_t)v9, qword_255289410);
    sub_21C524980((uint64_t)v12, &qword_2552894E8);
    v15 = type metadata accessor for KeyframeAnimationState();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v5, 1, 1, v15);
    sub_21C5E37CC();
    v14 = (uint64_t)v9;
    v13 = qword_255289410;
  }
  result = sub_21C524980(v14, v13);
  v17 = *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x248));
  v26 = 0;
  memset(v25, 0, sizeof(v25));
  v27 = 1;
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain();
    v19 = v17 + 48;
    do
    {
      if ((*(_BYTE *)(v19 - 16) & 1) == 0)
      {
        v20 = *(void (**)(_OWORD *))(v19 - 8);
        swift_retain();
        sub_21C53E46C(a1, (uint64_t *)v25, v23);
        v21[0] = v23[0];
        v21[1] = v23[1];
        v21[2] = v23[2];
        v21[3] = v23[3];
        v21[4] = v23[4];
        v21[5] = v23[5];
        v22 = v24;
        v20(v21);
        swift_release();
      }
      v19 += 24;
      --v18;
    }
    while (v18);
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_21C582D0C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  uint64_t v21;
  char *v22;

  v21 = a3;
  v8 = *MEMORY[0x24BEE4EA0] & *v4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894F0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for _MapContentInputs(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x22077FAFC]((char *)v4 + *(_QWORD *)(v8 + 504));
  if (v16)
  {
    v17 = (void *)v16;
    sub_21C57DA54((uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      sub_21C52AAD4((uint64_t)v11, (uint64_t)v15, type metadata accessor for _MapContentInputs);
      AGGraphClearUpdate();
      v19 = (id)AGSubgraphGetCurrent();
      AGSubgraphSetCurrent();
      sub_21C582EC0(a1, (uint64_t)v15, a2, v21, &v22, a4);
      AGSubgraphSetCurrent();

      AGGraphSetUpdate();
      v18 = v22;
      sub_21C52A88C((uint64_t)v15, type metadata accessor for _MapContentInputs);
      return v18;
    }

    sub_21C524980((uint64_t)v11, &qword_2552894F0);
  }
  return 0;
}

uint64_t sub_21C582EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X5>, char **a5@<X8>, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  _QWORD *v48;
  uint64_t v49;
  int *v50;
  char *v51;
  void *v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  objc_class *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  void *v102;
  id v103;
  id v104;
  void *v105;
  id v106;
  char *v107;
  uint64_t v108;
  void *v109;
  void *v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  int *v114;
  uint64_t v115;
  void *v116;
  char v117;
  __int16 v118;
  double v119;
  double v120;
  char v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  id v129;
  void *v130;
  void *v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  void *v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  void *v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  id v146;
  id v147;
  id v148;
  void *v149;
  id v150;
  void *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  int *v156;
  id v157;
  char *v158;
  uint64_t v159;
  _QWORD *v160;
  char **v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  objc_super v172;
  int v173;
  char v174[16];
  uint64_t v175;
  int v176;
  char v177[16];
  uint64_t v178;
  uint64_t v179;

  v157 = a3;
  v167 = a2;
  v162 = a1;
  v161 = a5;
  v166 = a6;
  v179 = *MEMORY[0x24BDAC8D0];
  v152 = type metadata accessor for MarkerAnnotationViewModel(0);
  MEMORY[0x24BDAC7A8](v152);
  v153 = (char *)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = (int *)type metadata accessor for ResolvedMarker();
  MEMORY[0x24BDAC7A8](v156);
  v159 = (uint64_t)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for CustomAnnotationViewModel(0);
  MEMORY[0x24BDAC7A8](v154);
  v158 = (char *)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MapContentList.Item.Content(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v152 - v15;
  v155 = type metadata accessor for ResolvedAnnotation();
  MEMORY[0x24BDAC7A8](v155);
  v160 = (uint64_t *)((char *)&v152 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v171 = type metadata accessor for MapContentList.Item(0);
  v168 = *(_QWORD *)(v171 - 8);
  v18 = MEMORY[0x24BDAC7A8](v171);
  v169 = (char *)&v152 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (uint64_t *)((char *)&v152 - v20);
  v165 = sub_21C5E2EC0();
  v164 = *(_QWORD *)(v165 - 8);
  MEMORY[0x24BDAC7A8](v165);
  v163 = (uint64_t)&v152 - v22;
  v23 = type metadata accessor for _MapContentOutputs(0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v170 = (uint64_t)&v152 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v152 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v29(v28, a1, a4);
  v178 = a4;
  v30 = sub_21C5E2DB8();
  sub_21C52951C((uint64_t)v28, (uint64_t)sub_21C524BBC, (uint64_t)v177, a4, MEMORY[0x24BEE4078], v30, MEMORY[0x24BEE40A8], v31);
  v32 = *(void (**)(char *, uint64_t))(v26 + 8);
  v32(v28, a4);
  LODWORD(v26) = v173;
  v29(v28, v162, a4);
  v175 = a4;
  v176 = v26;
  sub_21C52951C((uint64_t)v28, (uint64_t)sub_21C58A9D8, (uint64_t)v174, a4, MEMORY[0x24BEE4078], MEMORY[0x24BEE1328], MEMORY[0x24BEE40A8], v33);
  v32(v28, a4);
  v34 = v163;
  sub_21C52BAE0(v26, v163);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v166 + 32))(v34, v167, a4);
  (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v34, v165);
  v35 = sub_21C523030();
  v36 = *MEMORY[0x24BE096C0];
  if (v35 == *MEMORY[0x24BE096C0])
  {
    v37 = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
  }
  else
  {
    v37 = *(_QWORD *)AGGraphGetValue();
    swift_bridgeObjectRetain();
  }
  if (sub_21C523044() == v36)
  {
    v38 = sub_21C5BA7C0(MEMORY[0x24BEE4AF8]);
    v39 = *(_QWORD *)(v37 + 16);
    if (v39)
      goto LABEL_6;
LABEL_11:
    swift_bridgeObjectRelease();
    v43 = *(_QWORD *)(v38 + 16);
    v44 = (uint64_t *)v169;
    if (v43)
    {
      v45 = v38 + ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80));
      v46 = *(_QWORD *)(v168 + 72);
      while (1)
      {
        sub_21C529664(v45, (uint64_t)v44, type metadata accessor for MapContentList.Item);
        sub_21C529664((uint64_t)v44 + *(int *)(v171 + 24), (uint64_t)v14, type metadata accessor for MapContentList.Item.Content);
        if (swift_getEnumCaseMultiPayload() == 1)
          break;
        sub_21C52A88C((uint64_t)v44, type metadata accessor for MapContentList.Item);
        sub_21C52A88C((uint64_t)v14, type metadata accessor for MapContentList.Item.Content);
        v45 += v46;
        if (!--v43)
          goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      v56 = v159;
      sub_21C52AAD4((uint64_t)v14, v159, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedMarker);
      v57 = v56 + v156[8];
      v167 = *v44;
      swift_bridgeObjectRetain();
      v168 = v57;
      v58 = (void *)sub_21C5E3328();
      if (v58)
      {
        v59 = v58;
        v60 = objc_msgSend(v58, sel_string);

        v166 = sub_21C5E3964();
        v165 = v61;

      }
      else
      {
        v166 = 0;
        v165 = 0;
      }
      v109 = (void *)sub_21C5E331C();
      if (v109)
      {
        v110 = v109;
        v111 = objc_msgSend(v109, sel_string);

        v164 = sub_21C5E3964();
        v113 = v112;

      }
      else
      {
        v164 = 0;
        v113 = 0;
      }
      v114 = v156;
      v115 = v159;
      v116 = *(void **)(v159 + v156[9]);
      v117 = *(_BYTE *)(v159 + v156[10]);
      v118 = *(_WORD *)(v159 + 16);
      v119 = *(double *)v159;
      v120 = *(double *)(v159 + 8);
      v121 = *(_BYTE *)(v159 + 18);
      v122 = &v169[*(int *)(v171 + 28)];
      v123 = (uint64_t)v153;
      v124 = &v153[*(int *)(v152 + 68)];
      v125 = sub_21C5E34E4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(v124, v122, v125);
      v126 = v166;
      *(_QWORD *)v123 = v167;
      *(_QWORD *)(v123 + 8) = v126;
      v127 = v164;
      *(_QWORD *)(v123 + 16) = v165;
      *(_QWORD *)(v123 + 24) = v127;
      *(_QWORD *)(v123 + 32) = v113;
      *(_QWORD *)(v123 + 40) = v116;
      *(_BYTE *)(v123 + 48) = v117;
      *(_WORD *)(v123 + 80) = v118;
      *(double *)(v123 + 88) = v119;
      *(double *)(v123 + 96) = v120;
      *(_BYTE *)(v123 + 104) = 1;
      *(_BYTE *)(v123 + 105) = v121;
      *(_QWORD *)(v123 + 112) = 0;
      if (*(_QWORD *)(v115 + v114[11]))
      {
        sub_21C531A4C(0, (unint64_t *)&qword_2552888B0);
        v128 = v116;
        swift_retain();
        *(_QWORD *)(v123 + 112) = sub_21C5E3B80();
      }
      else
      {
        v129 = v116;
      }
      v130 = (void *)sub_21C5E3328();
      v131 = v130;
      v132 = (uint64_t)v169;
      if (v130)
      {
        v133 = objc_msgSend(v130, sel_string);

        v131 = (void *)sub_21C5E3964();
        v135 = v134;

      }
      else
      {
        v135 = 0;
      }
      *(_QWORD *)(v123 + 56) = v131;
      *(_QWORD *)(v123 + 64) = v135;
      *(_QWORD *)(v123 + 72) = sub_21C5E3310();
      v136 = (void *)sub_21C5E3328();
      v137 = v136;
      if (v136)
      {
        v138 = objc_msgSend(v136, sel_string);

        v137 = (void *)sub_21C5E3964();
        v140 = v139;

      }
      else
      {
        v140 = 0;
      }
      v141 = (void *)sub_21C5E331C();
      v142 = v141;
      if (v141)
      {
        v143 = objc_msgSend(v141, sel_string);

        v142 = (void *)sub_21C5E3964();
        v145 = v144;

      }
      else
      {
        v145 = 0;
      }
      objc_allocWithZone((Class)type metadata accessor for MapBridgingMarker());
      v146 = v116;
      v147 = sub_21C58A660((uint64_t)v137, v140, (uint64_t)v142, v145, v116, v117, v119, v120);

      v148 = v157;
      v149 = (void *)sub_21C5E3940();
      v150 = objc_msgSend(v148, sel_dequeueReusableAnnotationViewWithIdentifier_forAnnotation_, v149, v147);

      objc_opt_self();
      v151 = (void *)swift_dynamicCastObjCClassUnconditional();
      sub_21C568894(v151, 0);

      sub_21C52A88C(v159, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedMarker);
      sub_21C52A88C(v132, type metadata accessor for MapContentList.Item);
      sub_21C52A88C(v170, type metadata accessor for _MapContentOutputs);
      *v161 = (char *)v151;
      return sub_21C52A88C(v123, type metadata accessor for MarkerAnnotationViewModel);
    }
    else
    {
LABEL_15:
      swift_bridgeObjectRelease();
      result = sub_21C52A88C(v170, type metadata accessor for _MapContentOutputs);
      *v161 = 0;
    }
    return result;
  }
  v38 = *(_QWORD *)AGGraphGetValue();
  swift_bridgeObjectRetain();
  v39 = *(_QWORD *)(v37 + 16);
  if (!v39)
    goto LABEL_11;
LABEL_6:
  v40 = (*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80);
  v167 = v37;
  v41 = v37 + v40;
  v42 = *(_QWORD *)(v168 + 72);
  while (1)
  {
    sub_21C529664(v41, (uint64_t)v21, type metadata accessor for MapContentList.Item);
    sub_21C529664((uint64_t)v21 + *(int *)(v171 + 24), (uint64_t)v16, type metadata accessor for MapContentList.Item.Content);
    if (!swift_getEnumCaseMultiPayload())
      break;
    sub_21C52A88C((uint64_t)v21, type metadata accessor for MapContentList.Item);
    sub_21C52A88C((uint64_t)v16, type metadata accessor for MapContentList.Item.Content);
    v41 += v42;
    if (!--v39)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v48 = v160;
  sub_21C52AAD4((uint64_t)v16, (uint64_t)v160, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedAnnotation);
  v49 = *v21;
  v50 = (int *)v155;
  v51 = (char *)v48 + *(int *)(v155 + 24);
  swift_bridgeObjectRetain();
  v52 = (void *)sub_21C5E3328();
  if (v52)
  {
    v53 = v52;
    v54 = objc_msgSend(v52, sel_string);

    v166 = sub_21C5E3964();
    v165 = v55;

  }
  else
  {
    v166 = 0;
    v165 = 0;
  }
  v62 = v154;
  v63 = (void *)sub_21C5E331C();
  v168 = v49;
  v169 = v51;
  if (v63)
  {
    v64 = v63;
    v65 = objc_msgSend(v63, sel_string);

    v164 = sub_21C5E3964();
    v163 = v66;

  }
  else
  {
    v164 = 0;
    v163 = 0;
  }
  v67 = *((_BYTE *)v160 + v50[9]);
  LODWORD(v167) = *((unsigned __int8 *)v160 + v50[10]);
  v68 = *v160;
  v69 = v160[1];
  v70 = *(_QWORD *)((char *)v160 + v50[7]);
  v71 = v160[2];
  v72 = v160[3];
  v73 = (char *)v160 + v50[11];
  v74 = *(_QWORD *)v73;
  v75 = *((_QWORD *)v73 + 1);
  v76 = v73[16];
  v77 = (char *)v21 + *(int *)(v171 + 28);
  v78 = *(int *)(v62 + 64);
  v79 = v158;
  v80 = &v158[v78];
  v81 = *((_BYTE *)v160 + v50[13]);
  v82 = sub_21C5E34E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v77, v82);
  v83 = v166;
  *(_QWORD *)v79 = v168;
  *((_QWORD *)v79 + 1) = v83;
  v84 = v164;
  *((_QWORD *)v79 + 2) = v165;
  *((_QWORD *)v79 + 3) = v84;
  *((_QWORD *)v79 + 4) = v163;
  *((_QWORD *)v79 + 5) = 0;
  v79[48] = v67;
  v79[49] = v167;
  *((_QWORD *)v79 + 7) = v68;
  *((_QWORD *)v79 + 8) = v69;
  *((_QWORD *)v79 + 9) = v70;
  *((_QWORD *)v79 + 10) = v71;
  *((_QWORD *)v79 + 11) = v72;
  v79[96] = 1;
  *((_QWORD *)v79 + 13) = v74;
  *((_QWORD *)v79 + 14) = v75;
  v79[120] = v76;
  v79[121] = v81;
  swift_retain();
  v85 = (void *)sub_21C5E3328();
  v86 = v85;
  if (v85)
  {
    v87 = objc_msgSend(v85, sel_string);

    v86 = (void *)sub_21C5E3964();
    v89 = v88;

  }
  else
  {
    v89 = 0;
  }
  v90 = (void *)sub_21C5E331C();
  v91 = v90;
  if (v90)
  {
    v92 = objc_msgSend(v90, sel_string);

    v91 = (void *)sub_21C5E3964();
    v94 = v93;

  }
  else
  {
    v94 = 0;
  }
  v95 = (objc_class *)type metadata accessor for MapBridgingCustomAnnotation();
  v96 = (char *)objc_allocWithZone(v95);
  v97 = &v96[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_title];
  *(_QWORD *)v97 = 0;
  *((_QWORD *)v97 + 1) = 0;
  v98 = &v96[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_subtitle];
  *(_QWORD *)v98 = 0;
  *((_QWORD *)v98 + 1) = 0;
  v99 = OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_mapItem;
  *(_QWORD *)&v96[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_mapItem] = 0;
  *(_QWORD *)v97 = v86;
  *((_QWORD *)v97 + 1) = v89;
  v100 = v96;
  swift_bridgeObjectRelease();
  *(_QWORD *)v98 = v91;
  *((_QWORD *)v98 + 1) = v94;
  swift_bridgeObjectRelease();
  v101 = &v100[OBJC_IVAR____TtC15_MapKit_SwiftUI27MapBridgingCustomAnnotation_coordinate];
  *(_QWORD *)v101 = v68;
  *((_QWORD *)v101 + 1) = v69;
  v102 = *(void **)&v96[v99];
  *(_QWORD *)&v96[v99] = 0;

  v172.receiver = v100;
  v172.super_class = v95;
  v103 = objc_msgSendSuper2(&v172, sel_init);
  v104 = v157;
  v105 = (void *)sub_21C5E3940();
  v106 = objc_msgSend(v104, sel_dequeueReusableAnnotationViewWithIdentifier_forAnnotation_, v105, v103);

  type metadata accessor for SwiftUIAnnotationView();
  v107 = (char *)swift_dynamicCastClassUnconditional();
  v108 = (uint64_t)v158;
  sub_21C568604(v107, 0);

  sub_21C52A88C(v108, type metadata accessor for CustomAnnotationViewModel);
  sub_21C52A88C((uint64_t)v160, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedAnnotation);
  sub_21C52A88C((uint64_t)v21, type metadata accessor for MapContentList.Item);
  result = sub_21C52A88C(v170, type metadata accessor for _MapContentOutputs);
  *v161 = v107;
  return result;
}

id sub_21C583D04(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_255289410);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894E8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_BYTE *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x210)) = 1;
  if ((objc_msgSend(a1, sel_isScrollEnabled) & 1) != 0
    || (objc_msgSend(a1, sel_isZoomEnabled) & 1) != 0
    || (objc_msgSend(a1, sel_isPitchEnabled) & 1) != 0
    || (result = objc_msgSend(a1, sel_isRotateEnabled), (_DWORD)result))
  {
    sub_21C57DE20((uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
    {
      sub_21C524980((uint64_t)v9, &qword_2552894E8);
      v14 = type metadata accessor for KeyframeAnimationState();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
    }
    else
    {
      sub_21C531B18((uint64_t)v9, (uint64_t)v6, qword_255289410);
      sub_21C524980((uint64_t)v9, &qword_2552894E8);
      MEMORY[0x22077ECE0](v3);
      sub_21C524980((uint64_t)v6, qword_255289410);
      v15 = type metadata accessor for KeyframeAnimationState();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15) != 1)
      {
        sub_21C524980((uint64_t)v12, (uint64_t *)&unk_255289560);
        v16 = swift_allocObject();
        *(_QWORD *)(v16 + 16) = v1;
        *(_QWORD *)(v16 + 24) = a1;
        v17 = v1;
        v18 = a1;
        sub_21C5E2EE4();
        return (id)swift_release();
      }
    }
    return (id)sub_21C524980((uint64_t)v12, (uint64_t *)&unk_255289560);
  }
  return result;
}

uint64_t sub_21C583F84(_QWORD *a1, void *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (_QWORD *)((char *)a1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0x208));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  sub_21C58A874(*v3, v5, v6);
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
    sub_21C5E37CC();
    sub_21C58A8AC(v4, v5, v6);
  }
  return sub_21C582AC0(a2);
}

void sub_21C584040(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_21C583D04(v4);

}

void sub_21C584094()
{
  sub_21C58AC88();
}

void sub_21C5840B8(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_21C5840B4(v4);

}

uint64_t sub_21C58410C(id a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_255289410);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = 0;
  v15 = (_BYTE *)(v14 + 16);
  v16 = *MEMORY[0x24BEE4EA0] & *v2;
  if (*((_BYTE *)v2 + *(_QWORD *)(v16 + 0x210)) == 1)
  {
    v38 = v7;
    v39 = v5;
    v40 = v4;
    v17 = (_QWORD *)((char *)v2 + *(_QWORD *)(v16 + 520));
    v19 = *v17;
    v18 = v17[1];
    v20 = v17[2];
    sub_21C58A874(*v17, v18, v20);
    if (v18)
    {
      v36 = v14;
      v37 = a1;
      v41 = v19;
      v42 = v18;
      v43 = v20;
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
      MEMORY[0x22077ECE0](&v44);
      v22 = v44;
      sub_21C5C6DE4(v44);
      v24 = v23;
      sub_21C55DAAC(v22);
      if ((v24 & 1) != 0)
      {
        sub_21C58A8AC(v19, v18, v20);
        a1 = v37;
      }
      else
      {
        v41 = v19;
        v42 = v18;
        v43 = v20;
        MEMORY[0x22077ECE0](&v44, v21);
        v25 = v44;
        sub_21C55DAAC(v44);
        a1 = v37;
        if (v25 >> 61 != 4 || (objc_msgSend(v37, sel_hasUserLocation) & 1) == 0)
        {
          objc_msgSend(a1, sel_setUserTrackingMode_, 0);
          v26 = (_QWORD *)swift_allocObject();
          v26[2] = v19;
          v26[3] = v18;
          v26[4] = v20;
          swift_retain();
          swift_retain();
          sub_21C55DA30(v20);
          sub_21C5E2EE4();
          swift_release();
        }
        sub_21C58A8AC(v19, v18, v20);
      }
      v14 = v36;
    }
    sub_21C57DE20((uint64_t)v10);
    v27 = v40;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v10, 1, v40))
    {
      sub_21C524980((uint64_t)v10, &qword_2552894E8);
      v28 = type metadata accessor for KeyframeAnimationState();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v13, 1, 1, v28);
    }
    else
    {
      v29 = (uint64_t)v38;
      sub_21C531B18((uint64_t)v10, (uint64_t)v38, qword_255289410);
      sub_21C524980((uint64_t)v10, &qword_2552894E8);
      MEMORY[0x22077ECE0](v27);
      sub_21C524980(v29, qword_255289410);
      v30 = type metadata accessor for KeyframeAnimationState();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v13, 1, v30) != 1)
      {
        sub_21C524980((uint64_t)v13, (uint64_t *)&unk_255289560);
        v32 = (_QWORD *)swift_allocObject();
        v32[2] = v2;
        v32[3] = a1;
        v32[4] = v14;
        v33 = v2;
        v34 = a1;
        swift_retain();
        sub_21C5E2EE4();
        swift_release();
        goto LABEL_14;
      }
    }
    sub_21C524980((uint64_t)v13, (uint64_t *)&unk_255289560);
  }
LABEL_14:
  sub_21C5844E8(v15, v2, a1);
  return swift_release();
}

uint64_t sub_21C5844E8(_BYTE *a1, _QWORD *a2, void *a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  id v9;

  result = swift_beginAccess();
  if ((*a1 & 1) == 0)
  {
    v7 = *(_QWORD *)((char *)a2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a2) + 0x248));
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v7;
    *(_QWORD *)(v8 + 24) = a3;
    swift_bridgeObjectRetain();
    v9 = a3;
    sub_21C5E2EE4();
    return swift_release();
  }
  return result;
}

void sub_21C584590(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_21C58410C(v4);

}

uint64_t sub_21C5845E4(uint64_t result, char a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  void (*v7)(_OWORD *);
  _OWORD v8[6];
  uint64_t v9;
  _OWORD v10[6];
  uint64_t v11;
  _OWORD v12[6];
  uint64_t v13;
  char v14;

  v13 = 0;
  memset(v12, 0, sizeof(v12));
  v14 = 1;
  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = swift_bridgeObjectRetain() + 48;
    do
    {
      if (((a2 & 1) == 0) != *(_BYTE *)(v6 - 16))
      {
        v7 = *(void (**)(_OWORD *))(v6 - 8);
        swift_retain();
        sub_21C53E46C(a3, (uint64_t *)v12, v10);
        v8[0] = v10[0];
        v8[1] = v10[1];
        v8[2] = v10[2];
        v8[3] = v10[3];
        v8[4] = v10[4];
        v8[5] = v10[5];
        v9 = v11;
        v7(v8);
        swift_release();
      }
      v6 += 24;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_21C5846E8(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_21C58ACA8(v4);

}

uint64_t sub_21C58473C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;

  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = a4;
  sub_21C55DA30(a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
  return sub_21C5E37CC();
}

unint64_t sub_21C5847B0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];

  v7[1] = a1;
  v7[2] = a2;
  v7[3] = a3;
  swift_retain();
  swift_retain();
  sub_21C55DA30(a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
  MEMORY[0x22077ECE0](v7);
  v4 = v7[0];
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = v4;
  sub_21C5E37CC();
  swift_release();
  swift_release();
  return sub_21C55DAAC(a3);
}

uint64_t sub_21C58487C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;

  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = 1;
  *(_QWORD *)(v5 + 24) = a4;
  sub_21C55DA30(a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
  return sub_21C5E37CC();
}

unint64_t sub_21C5848F4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];

  v7[1] = a1;
  v7[2] = a2;
  v7[3] = a3;
  swift_retain();
  swift_retain();
  sub_21C55DA30(a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
  MEMORY[0x22077ECE0](v7);
  v4 = v7[0];
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = 1;
  *(_QWORD *)(v5 + 24) = v4;
  sub_21C5E37CC();
  swift_release();
  swift_release();
  return sub_21C55DAAC(a3);
}

void sub_21C5849C4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;

  v6 = a3;
  v7 = a1;
  sub_21C58AE9C(a4);

}

void sub_21C584A1C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_21C58B14C(v4);

}

unint64_t sub_21C584A70(void *a1)
{
  _QWORD *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  _QWORD *v8;
  _QWORD *v9;
  id v10;

  v3 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x208));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  result = sub_21C58A874(*v3, v5, v6);
  if (v5)
  {
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = v4;
    v8[3] = v5;
    v8[4] = v6;
    v8[5] = v1;
    v8[6] = a1;
    sub_21C58A874(v4, v5, v6);
    v9 = v1;
    v10 = a1;
    sub_21C5E2EE4();
    swift_release();
    return sub_21C58A8AC(v4, v5, v6);
  }
  return result;
}

uint64_t sub_21C584B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
  sub_21C5E37CC();
  return sub_21C582AC0(a5);
}

void sub_21C584BB4(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_21C584A70(v4);

}

void sub_21C584C08(void *a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  swift_unknownObjectRetain();
  a1;
  sub_21C58B280();
}

void sub_21C584C4C()
{
  void *v0;
  void *v1;

  swift_unknownObjectRelease();
}

void sub_21C584C70()
{
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C584CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v9 - 168) = (char *)&a9 - v10;
  v11 = sub_21C5E3BB0();
  *(_QWORD *)(v9 - 144) = v11;
  *(_QWORD *)(v9 - 176) = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_21C5E37F0();
  v12 = sub_21C5E3BB0();
  v13 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  sub_21C57DBD8();
}

uint64_t sub_21C584DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v11;
  id v12;
  unint64_t v13;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 48))(v8, 1, v3) == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v7, v8, v3);
  v11 = objc_msgSend(*(id *)(v9 - 160), sel_annotation);
  v12 = objc_msgSend(*(id *)(v9 - 152), sel_annotations);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288C00);
  v13 = sub_21C5E39DC();

  swift_unknownObjectRetain();
  LOBYTE(v12) = sub_21C58A75C(v13, (uint64_t)v11);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if ((v12 & 1) != 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    MEMORY[0x22077ECE0](v3);
    sub_21C5C9218(v5, v2);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 176) + 8))(v5, *(_QWORD *)(v9 - 144));
    sub_21C5E37CC();
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v7, v3);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v7, v3);
    return swift_unknownObjectRelease();
  }
}

void sub_21C584F38(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;

  v6 = a3;
  v7 = a4;
  a1;
  sub_21C584C70();
}

void sub_21C584F80()
{
  void *v0;
  void *v1;
  void *v2;

}

void sub_21C584FA0()
{
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C584FF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  MEMORY[0x24BDAC7A8](a1);
  sub_21C5E37F0();
  v1 = sub_21C5E3BB0();
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  sub_21C57DBD8();
}

uint64_t sub_21C58509C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v2) == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v8, v7);
  v12 = v1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v9, v8, v2);
  MEMORY[0x22077ECE0](v2);
  v13 = sub_21C5C8F8C(v4);
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v5, v4);
  if ((v13 & 1) != 0)
  {
    objc_opt_self();
    v14 = swift_dynamicCastObjCClass();
    if (v14)
    {
      v15 = v14;
      v16 = *(uint64_t (**)(uint64_t))((char *)v12 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v12) + 0x228));
      if (v16)
      {
        *(_QWORD *)(v10 - 112) = v14;
        swift_unknownObjectRetain_n();
        sub_21C531AAC((uint64_t)v16);
        if ((v16(v10 - 112) & 1) != 0)
        {
          swift_unknownObjectRetain();
          objc_msgSend(*(id *)(v10 - 128), sel_deselectAnnotation_animated_, v15, 0);
          sub_21C531A9C((uint64_t)v16);
LABEL_11:
          swift_unknownObjectRelease_n();
          return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v2);
        }
        sub_21C531A9C((uint64_t)v16);
      }
      else
      {
        swift_unknownObjectRetain_n();
      }
      *(_QWORD *)(v10 - 112) = v15;
      swift_unknownObjectRetain();
      MEMORY[0x22077ECE0](v2);
      sub_21C5C9084(v10 - 112, v4);
      swift_unknownObjectRelease();
      sub_21C5E37CC();
      goto LABEL_11;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v2);
}

void sub_21C585260(void *a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = a3;
  swift_unknownObjectRetain();
  a1;
  sub_21C584FA0();
}

void sub_21C5852A8()
{
  void *v0;
  void *v1;

  swift_unknownObjectRelease();
}

void sub_21C5852CC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[10];
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;

  v34 = a2;
  v20[4] = a1;
  v3 = *MEMORY[0x24BEE4EA0] & *v2;
  v4 = *(_QWORD *)(v3 + 0x1D8);
  v20[8] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v20[3] = (char *)v20 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C70);
  MEMORY[0x24BDAC7A8](v6);
  v22 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for UserAnnotationViewModel(0);
  v20[9] = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D00);
  MEMORY[0x24BDAC7A8](v9);
  v26 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CustomAnnotationViewModel(0);
  v24 = *(_QWORD *)(v11 - 8);
  v25 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v20[5] = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_21C5E3BB0();
  v30 = *(_QWORD *)(v33 - 8);
  v13 = MEMORY[0x24BDAC7A8](v33);
  v20[7] = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v29 = (char *)v20 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CC0);
  MEMORY[0x24BDAC7A8](v16);
  v31 = (char *)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for MarkerAnnotationViewModel(0);
  v35 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v20[6] = (char *)v20 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v3 + 480);
  v28 = v4;
  v36 = v4;
  v37 = v19;
  v27 = *(_OWORD *)(v3 + 488);
  v38 = v27;
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C585554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 - 128) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  sub_21C5E37F0();
  v2 = sub_21C5E3BB0();
  v3 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  sub_21C57DBD8();
}

uint64_t sub_21C585600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v1) == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v4, v3);
  v11 = *(_QWORD *)(v9 - 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v0, v4, v1);
  MEMORY[0x22077ECE0](v1);
  v12 = sub_21C5C8E64(v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 128) + 8))(v2, v8);
  if ((v12 & 1) == 0)
    goto LABEL_34;
  *(_QWORD *)(v9 - 320) = v8;
  v13 = *(void **)(v9 - 144);
  v14 = objc_msgSend(v13, sel_annotation);
  *(_QWORD *)(v9 - 128) = v6;
  if (v14)
  {
    type metadata accessor for MapBridgingMarker();
    v15 = swift_dynamicCastClass();
    if (v15)
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v9 - 128) + qword_255288E48 + 16);
      if (*(_QWORD *)(v16 + 16))
      {
        v17 = v15;
        *(_QWORD *)(v9 - 328) = v1;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = sub_21C5310EC(v17);
        if ((v19 & 1) != 0)
        {
          v20 = *(_QWORD *)(v9 - 168);
          sub_21C529664(*(_QWORD *)(v16 + 56) + *(_QWORD *)(v11 + 72) * v18, v20, type metadata accessor for MarkerAnnotationViewModel);
          v21 = 0;
        }
        else
        {
          v21 = 1;
          v20 = *(_QWORD *)(v9 - 168);
        }
        v22 = *(_QWORD *)(v9 - 160);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v20, v21, 1, v22);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v20, 1, v22);
        v1 = *(_QWORD *)(v9 - 328);
        if (v23 != 1)
        {
          v32 = v20;
          v33 = type metadata accessor for MarkerAnnotationViewModel;
          v34 = *(_QWORD *)(v9 - 288);
          sub_21C52AAD4(v32, v34, type metadata accessor for MarkerAnnotationViewModel);
          v35 = *(_QWORD *)(v9 - 184);
          sub_21C5AE7C0(*(_QWORD *)(v9 - 192), *(_QWORD *)(v9 - 208), v36, v35);
          MEMORY[0x22077ECE0](v1);
          sub_21C5C9218(v35, *(_QWORD *)(v9 - 320));
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 176) + 8))(v35, *(_QWORD *)(v9 - 152));
          sub_21C5E37CC();
          swift_unknownObjectRelease();
          v37 = v34;
          goto LABEL_33;
        }
      }
      else
      {
        v20 = *(_QWORD *)(v9 - 168);
        (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v11 + 56))(v20, 1, 1, *(_QWORD *)(v9 - 160));
      }
      swift_unknownObjectRelease();
      sub_21C524980(v20, &qword_255288CC0);
      v13 = *(void **)(v9 - 144);
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  *(_QWORD *)(v9 - 136) = v2;
  if (!objc_msgSend(v13, sel_annotation))
    goto LABEL_25;
  type metadata accessor for MapBridgingCustomAnnotation();
  v24 = swift_dynamicCastClass();
  if (!v24)
  {
    swift_unknownObjectRelease();
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(*(_QWORD *)(v9 - 128) + qword_255288E40 + 16);
  if (*(_QWORD *)(v25 + 16))
  {
    v26 = v24;
    *(_QWORD *)(v9 - 160) = v5;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = sub_21C531130(v26);
    if ((v28 & 1) != 0)
    {
      v29 = *(_QWORD *)(v9 - 232);
      v30 = *(_QWORD *)(v9 - 216);
      sub_21C529664(*(_QWORD *)(v25 + 56) + *(_QWORD *)(v29 + 72) * v27, v30, type metadata accessor for CustomAnnotationViewModel);
      v31 = 0;
    }
    else
    {
      v31 = 1;
      v30 = *(_QWORD *)(v9 - 216);
      v29 = *(_QWORD *)(v9 - 232);
    }
    v38 = *(_QWORD *)(v9 - 224);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v30, v31, 1, v38);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v30, 1, v38);
    v5 = *(_QWORD *)(v9 - 160);
    if (v39 == 1)
      goto LABEL_24;
    v56 = v30;
    v33 = type metadata accessor for CustomAnnotationViewModel;
    v57 = *(_QWORD *)(v9 - 296);
    sub_21C52AAD4(v56, v57, type metadata accessor for CustomAnnotationViewModel);
    v58 = *(_QWORD *)(v9 - 184);
    sub_21C5AE7C0(*(_QWORD *)(v9 - 192), *(_QWORD *)(v9 - 208), v59, v58);
    MEMORY[0x22077ECE0](v1);
    sub_21C5C9218(v58, *(_QWORD *)(v9 - 320));
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 176) + 8))(v58, *(_QWORD *)(v9 - 152));
    sub_21C5E37CC();
    swift_unknownObjectRelease();
    v37 = v57;
LABEL_33:
    sub_21C52A88C(v37, v33);
    goto LABEL_34;
  }
  v30 = *(_QWORD *)(v9 - 216);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 - 232) + 56))(v30, 1, 1, *(_QWORD *)(v9 - 224));
LABEL_24:
  swift_unknownObjectRelease();
  sub_21C524980(v30, &qword_255288D00);
  v13 = *(void **)(v9 - 144);
LABEL_25:
  if (!objc_msgSend(v13, sel_annotation))
  {
LABEL_34:
    v54 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
LABEL_35:
    v55 = v0;
    return v54(v55, v1);
  }
  v40 = v5;
  objc_opt_self();
  v41 = swift_dynamicCastObjCClass();
  if (!v41)
  {
    swift_unknownObjectRelease();
    goto LABEL_34;
  }
  v42 = v41;
  v43 = *(_QWORD *)(v9 - 248);
  sub_21C56F9AC(*(_QWORD *)(*(_QWORD *)(v9 - 128) + qword_255288E58 + 16), v43);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 - 264) + 48))(v43, 1, *(_QWORD *)(v9 - 256)) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v0, v1);
    swift_unknownObjectRelease();
    return sub_21C524980(v43, &qword_255288C70);
  }
  sub_21C52AAD4(v43, *(_QWORD *)(v9 - 240), type metadata accessor for UserAnnotationViewModel);
  v44 = *(_QWORD *)(v9 - 280);
  v45 = *(_QWORD *)(v9 - 192);
  sub_21C5AE7C0(v45, *(_QWORD *)(v9 - 208), v46, v44);
  v47 = *(_QWORD *)(v9 - 272);
  v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v44, 1, v45);
  v49 = *(_QWORD *)(v9 - 184);
  if (v48 != 1)
  {
    v60 = *(_QWORD *)(v9 - 312);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v60, v44, v45);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v49, v60, v45);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v45);
    MEMORY[0x22077ECE0](v1);
    sub_21C5C9218(v49, *(_QWORD *)(v9 - 320));
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 176) + 8))(v49, *(_QWORD *)(v9 - 152));
    sub_21C5E37CC();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v60, v45);
    sub_21C52A88C(*(_QWORD *)(v9 - 240), type metadata accessor for UserAnnotationViewModel);
    v54 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8);
    goto LABEL_35;
  }
  v50 = v0;
  v51 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 176) + 8);
  v52 = v44;
  v53 = *(_QWORD *)(v9 - 152);
  v51(v52, v53);
  objc_msgSend(*(id *)(v9 - 304), sel_deselectAnnotation_animated_, v42, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v49, 1, 1, v45);
  MEMORY[0x22077ECE0](v1);
  sub_21C5C9218(v49, *(_QWORD *)(v9 - 320));
  v51(v49, v53);
  sub_21C5E37CC();
  swift_unknownObjectRelease();
  sub_21C52A88C(*(_QWORD *)(v9 - 240), type metadata accessor for UserAnnotationViewModel);
  v54 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8);
  v55 = v50;
  return v54(v55, v1);
}

void sub_21C585D68(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;

  v6 = a3;
  v7 = a4;
  a1;
  sub_21C5852CC((uint64_t)v6, (uint64_t)v7);
}

void sub_21C585DB0()
{
  void *v0;
  void *v1;
  void *v2;

}

void sub_21C585DD0(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;

  v3 = a2;
  v4 = objc_msgSend(v3, sel_location);
  v6 = v4;
  v5 = objc_msgSend(v3, sel_heading);

  sub_21C5700D4(v4, v5, a1);
}

void sub_21C585E6C(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  sub_21C585DD0(v6, v7);

}

void sub_21C585ED4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD v8[12];
  __int128 v9;
  __int128 v10;

  v8[10] = a1;
  v2 = *MEMORY[0x24BEE4EA0] & *v1;
  v3 = sub_21C5E388C();
  v8[8] = *(_QWORD *)(v3 - 8);
  v8[9] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v8[7] = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_21C5E38A4();
  v8[5] = *(_QWORD *)(v5 - 8);
  v8[6] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v8[4] = (char *)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_OWORD *)(v2 + 488);
  v9 = *(_OWORD *)(v2 + 472);
  v10 = v7;
  type metadata accessor for MapSelectionManagerBox();
}

void *sub_21C585FAC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v15;

  *(_QWORD *)(v4 - 208) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 216) = (char *)&v15 - v5;
  v6 = sub_21C5E37F0();
  *(_QWORD *)(v4 - 200) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_21C5E3BB0();
  MEMORY[0x24BDAC7A8](v7);
  objc_opt_self();
  v8 = swift_dynamicCastObjCClass();
  if (v8 && (v9 = *(void (**)(uint64_t))((char *)v2 + *(_QWORD *)((*v1 & *v2) + 0x230))) != 0)
  {
    *(_QWORD *)(v4 - 136) = v8;
    sub_21C531AAC((uint64_t)v9);
    swift_unknownObjectRetain();
    v9(v4 - 136);
    v10 = *(_QWORD *)(v4 - 104);
    v11 = *(_QWORD *)(v4 - 96);
    v12 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 - 128), v10);
    v13 = sub_21C582D0C((uint64_t)v12, *(void **)(v4 - 144), v10, v11);
    sub_21C531A9C((uint64_t)v9);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v4 - 128);
  }
  else
  {
    v13 = sub_21C570294(v3, *(id *)(v4 - 144));
    if (!v13)
    {
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
        sub_21C57DBD8();
      return 0;
    }
  }
  return v13;
}

void sub_21C586398(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x22077FAFC](v3);
  if (v4)
  {
    v5 = v4;
    if (objc_msgSend(v4, sel_showsUserLocation))
    {
      v6 = objc_msgSend(v5, sel_userLocation);
      v7 = objc_msgSend(v5, sel_viewForAnnotation_, v6);

      objc_msgSend(v7, sel_setEnabled_, a2 & 1);
      v5 = v7;
    }

  }
}

void sub_21C58645C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_21C586C8C(a1, a2, a3, a4, (void (*)(id, uint64_t))sub_21C585ED4);
}

id sub_21C586468(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;

  v4 = a3;
  swift_unknownObjectRetain();
  v5 = a1;
  v6 = sub_21C58B43C();

  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_21C5864C8()
{
  return 1;
}

uint64_t sub_21C5864D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;

  v55 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288C70);
  MEMORY[0x24BDAC7A8](v1);
  v54 = (uint64_t)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for UserAnnotationViewModel(0);
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v57 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288D00);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CustomAnnotationViewModel(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288CC0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MarkerAnnotationViewModel(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v18 = *((unsigned __int8 *)v59 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v59) + 0x238));
    goto LABEL_28;
  }
  v51 = v15;
  v52 = v14;
  v48 = v17;
  v49 = v7;
  v53 = v13;
  v47 = v10;
  v50 = v6;
  v19 = v58;
  type metadata accessor for MapBridgingMarker();
  v20 = swift_dynamicCastClass();
  if (v20)
  {
    v21 = *(_QWORD *)((char *)v59 + qword_255288E48 + 16);
    if (*(_QWORD *)(v21 + 16))
    {
      v22 = v20;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = sub_21C5310EC(v22);
      v24 = (uint64_t)v53;
      v25 = v51;
      if ((v26 & 1) != 0)
      {
        sub_21C529664(*(_QWORD *)(v21 + 56) + *(_QWORD *)(v51 + 72) * v23, (uint64_t)v53, type metadata accessor for MarkerAnnotationViewModel);
        v27 = 0;
      }
      else
      {
        v27 = 1;
      }
      v28 = (uint64_t)v48;
      v29 = v52;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v24, v27, 1, v52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v24, 1, v29) != 1)
      {
        sub_21C52AAD4(v24, v28, type metadata accessor for MarkerAnnotationViewModel);
        v18 = *(unsigned __int8 *)(v28 + 105);
        v40 = v28;
        v41 = type metadata accessor for MarkerAnnotationViewModel;
LABEL_27:
        sub_21C52A88C(v40, v41);
LABEL_28:
        __asm { BR              X9 }
      }
    }
    else
    {
      v24 = (uint64_t)v53;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v53, 1, 1, v52);
    }
    sub_21C524980(v24, &qword_255288CC0);
  }
  type metadata accessor for MapBridgingCustomAnnotation();
  v30 = swift_dynamicCastClass();
  v32 = v56;
  v31 = (uint64_t)v57;
  if (v30)
  {
    v33 = *(_QWORD *)((char *)v59 + qword_255288E40 + 16);
    if (*(_QWORD *)(v33 + 16))
    {
      v34 = v30;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35 = sub_21C531130(v34);
      v36 = v49;
      if ((v37 & 1) != 0)
      {
        v38 = (uint64_t)v50;
        sub_21C529664(*(_QWORD *)(v33 + 56) + *(_QWORD *)(v8 + 72) * v35, (uint64_t)v50, type metadata accessor for CustomAnnotationViewModel);
        v39 = 0;
      }
      else
      {
        v39 = 1;
        v38 = (uint64_t)v50;
      }
      v42 = (uint64_t)v47;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v38, v39, 1, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v38, 1, v36) != 1)
      {
        v44 = type metadata accessor for CustomAnnotationViewModel;
        sub_21C52AAD4(v38, v42, type metadata accessor for CustomAnnotationViewModel);
        v18 = *(unsigned __int8 *)(v42 + 121);
        v40 = v42;
LABEL_26:
        v41 = v44;
        goto LABEL_27;
      }
    }
    else
    {
      v38 = (uint64_t)v50;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v50, 1, 1, v49);
    }
    sub_21C524980(v38, &qword_255288D00);
  }
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    v43 = v54;
    sub_21C56F9AC(*(_QWORD *)((char *)v59 + qword_255288E58 + 16), v54);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v43, 1, v19) == 1)
    {
      sub_21C524980(v43, &qword_255288C70);
      return 0;
    }
    v44 = type metadata accessor for UserAnnotationViewModel;
    sub_21C52AAD4(v43, v31, type metadata accessor for UserAnnotationViewModel);
    v18 = *(unsigned __int8 *)(v31 + 41);
    v40 = v31;
    goto LABEL_26;
  }
  return 0;
}

void sub_21C586C80(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_21C586C8C(a1, a2, a3, a4, (void (*)(id, uint64_t))sub_21C5864D0);
}

void sub_21C586C8C(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  id v8;
  id v9;

  v8 = a3;
  swift_unknownObjectRetain();
  v9 = a1;
  a5(v8, a4);
  JUMPOUT(0x21C586CCCLL);
}

void sub_21C586CF4()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  swift_unknownObjectWeakInit();
  v2 = (char *)v0 + *(_QWORD *)((*v1 & *v0) + 0x200);
  v3 = type metadata accessor for _MapContentInputs(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = (_QWORD *)((char *)v0 + *(_QWORD *)((*v1 & *v0) + 0x208));
  v4[1] = 0;
  v4[2] = 0;
  *v4 = 0;
  *((_BYTE *)v0 + *(_QWORD *)((*v1 & *v0) + 0x210)) = 0;
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C586DCC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;

  v3 = sub_21C5E37F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v0, 1, 1, v3);
  *((_BYTE *)v1 + *(_QWORD *)((*v2 & *v1) + 0x220)) = 0;
  v4 = (_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0x228));
  *v4 = 0;
  v4[1] = 0;
  v5 = (_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0x230));
  *v5 = 0;
  v5[1] = 0;
  *((_BYTE *)v1 + *(_QWORD *)((*v2 & *v1) + 0x238)) = 6;
  v6 = (char *)v1 + *(_QWORD *)((*v2 & *v1) + 0x240);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255289410);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0x248)) = MEMORY[0x24BEE4AF8];
  type metadata accessor for MapBridgingViewCoordinator();
}

id sub_21C586EBC(objc_class *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  void *v24;
  objc_super v26;

  v26.receiver = v24;
  v26.super_class = a1;
  return -[objc_class init](&v26, sel_init);
}

void sub_21C586EEC()
{
  sub_21C586CF4();
}

void sub_21C586F0C()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;

  v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  swift_unknownObjectWeakDestroy();
  sub_21C524980((uint64_t)v0 + *(_QWORD *)((*v1 & *v0) + 0x200), &qword_2552894F0);
  v2 = (char *)v0 + *(_QWORD *)((*v1 & *v0) + 0x208);
  sub_21C58A8AC(*(_QWORD *)v2, *((_QWORD *)v2 + 1), *((_QWORD *)v2 + 2));
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C586FB4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_21C5E37F0();
  v3 = sub_21C5E3BB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0, v3);
  sub_21C531A9C(*(_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0x228)));
  sub_21C531A9C(*(_QWORD *)((char *)v1 + *(_QWORD *)((*v2 & *v1) + 0x230)));
  sub_21C524980((uint64_t)v1 + *(_QWORD *)((*v2 & *v1) + 0x240), &qword_2552894E8);
  return swift_bridgeObjectRelease();
}

void sub_21C587064()
{
  type metadata accessor for MapBridgingViewCoordinator();
}

id sub_21C5870A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 16) = v1;
  *(_QWORD *)(v2 - 8) = a1;
  return objc_msgSendSuper2((objc_super *)(v2 - 16), sel_dealloc);
}

void sub_21C5870C4(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;

  v2 = (_QWORD *)MEMORY[0x24BEE4EA0];
  swift_unknownObjectWeakDestroy();
  sub_21C524980((uint64_t)a1 + *(_QWORD *)((*v2 & *a1) + 0x200), &qword_2552894F0);
  v3 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x208);
  sub_21C58A8AC(*(_QWORD *)v3, *((_QWORD *)v3 + 1), *((_QWORD *)v3 + 2));
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C587170()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_21C5E37F0();
  v3 = sub_21C5E3BB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  sub_21C531A9C(*(_QWORD *)((char *)v0 + *(_QWORD *)((*v2 & *v0) + 0x228)));
  sub_21C531A9C(*(_QWORD *)((char *)v0 + *(_QWORD *)((*v2 & *v0) + 0x230)));
  sub_21C524980((uint64_t)v0 + *(_QWORD *)((*v2 & *v0) + 0x240), &qword_2552894E8);
  return swift_bridgeObjectRelease();
}

void type metadata accessor for MapBridgingViewCoordinator()
{
  JUMPOUT(0x22077F91CLL);
}

void sub_21C58722C()
{
  type metadata accessor for _MapContentView();
}

uint64_t sub_21C587260(uint64_t a1)
{
  return MEMORY[0x22077F9A0](&unk_21C5E8260, a1);
}

void sub_21C58727C()
{
  type metadata accessor for _MapContentView();
}

uint64_t sub_21C5872BC(uint64_t a1)
{
  return MEMORY[0x22077F9A0](&unk_21C5E8260, a1);
}

void sub_21C5872D8()
{
  type metadata accessor for MapSelectionManagerBox();
}

uint64_t sub_21C587328()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  sub_21C5E37F0();
  result = sub_21C5E3BB0();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_21C5873B4(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  size_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  void **v44;
  unsigned int v45;
  uint64_t v46;
  size_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  char v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v58;
  size_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  size_t __n;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;

  v5 = a3[2];
  v6 = a3[3];
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(_DWORD *)(v8 + 80) | *(_DWORD *)(v7 + 80);
  v10 = v9 & 0xF8 | 7u;
  if (*(_DWORD *)(v7 + 84))
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v7 + 64) + 1;
  if (*(_DWORD *)(v8 + 84))
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  if (v11 <= v12)
    v13 = v12;
  else
    v13 = v11;
  if (v13 <= 8)
    v13 = 8;
  v66 = v13;
  v14 = v13 + ((v10 + 16) & ~v10) + 1;
  v15 = a3[4];
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = ((v17 + 9 + ((v14 + ((v10 + 104) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v17) + *(_QWORD *)(v16 + 64);
  v19 = (*(_DWORD *)(v16 + 80) | v9) & 0x100000;
  v20 = *a2;
  *a1 = *a2;
  if ((v17 | v10) == 7 && v19 == 0 && v18 <= 0x18)
  {
    v59 = v11;
    v60 = v6;
    v61 = v5;
    v62 = v17 + 9;
    __n = v14;
    v64 = v16;
    v65 = v15;
    v23 = ~v10;
    v24 = a2[2];
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    sub_21C55DA30(v24);
    a1[2] = v24;
    v25 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
    v26 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
    v27 = *(_QWORD *)(v26 + 24);
    LODWORD(v28) = -1;
    if (v27 < 0xFFFFFFFF)
      v28 = *(_QWORD *)(v26 + 24);
    if ((int)v28 - 1 < 0)
    {
      if (v27)
      {
        *(_QWORD *)(v25 + 24) = v27;
        *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
        (**(void (***)(unint64_t, unint64_t))(v27 - 8))(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8, ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      }
      else
      {
        v32 = *(_OWORD *)v26;
        v33 = *(_OWORD *)(v26 + 16);
        *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
        *(_OWORD *)v25 = v32;
        *(_OWORD *)(v25 + 16) = v33;
      }
      v34 = *(_QWORD *)(v26 + 40);
      *(_BYTE *)(v25 + 48) = *(_BYTE *)(v26 + 48);
      *(_QWORD *)(v25 + 40) = v34;
      v35 = *(_QWORD *)(v26 + 56);
      *(_BYTE *)(v25 + 64) = *(_BYTE *)(v26 + 64);
      *(_QWORD *)(v25 + 56) = v35;
    }
    else
    {
      *(_OWORD *)v25 = *(_OWORD *)v26;
      v29 = *(_OWORD *)(v26 + 16);
      v30 = *(_OWORD *)(v26 + 32);
      v31 = *(_OWORD *)(v26 + 48);
      *(_BYTE *)(v25 + 64) = *(_BYTE *)(v26 + 64);
      *(_OWORD *)(v25 + 32) = v30;
      *(_OWORD *)(v25 + 48) = v31;
      *(_OWORD *)(v25 + 16) = v29;
    }
    v36 = ~v17;
    v37 = (_QWORD *)(((unint64_t)a1 + 103) & 0xFFFFFFFFFFFFFFF8);
    v38 = (_QWORD *)(((unint64_t)a2 + 103) & 0xFFFFFFFFFFFFFFF8);
    *v37 = *v38;
    v39 = ((unint64_t)v37 + v10 + 8) & v23;
    v40 = ((unint64_t)v38 + v10 + 8) & v23;
    v41 = (_QWORD *)((v40 + 15) & 0xFFFFFFFFFFFFFFF8);
    if (*v41 < 0xFFFFFFFFuLL)
    {
      v47 = __n;
      memcpy((void *)v39, (const void *)v40, __n);
      v49 = v64;
      v48 = v65;
      v50 = v62;
LABEL_49:
      v54 = ((v39 | 7) + v47) & 0xFFFFFFFFFFFFFFF8;
      v55 = ((v40 | 7) + v47) & 0xFFFFFFFFFFFFFFF8;
      v56 = *(_QWORD *)v55;
      *(_BYTE *)(v54 + 8) = *(_BYTE *)(v55 + 8);
      *(_QWORD *)v54 = v56;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v49 + 16))((v50 + v54) & v36, (v50 + v55) & v36, v48);
      return a1;
    }
    v58 = v36;
    *(_QWORD *)v39 = *(_QWORD *)v40;
    v42 = (_QWORD *)((v39 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v42 = *v41;
    v43 = (_QWORD *)(((unint64_t)v42 + v10 + 8) & v23);
    v44 = (void **)(((unint64_t)v41 + v10 + 8) & v23);
    v45 = *((unsigned __int8 *)v44 + v66);
    swift_retain();
    swift_retain();
    if (v45 >= 3)
    {
      if (v66 <= 3)
        v46 = v66;
      else
        v46 = 4;
      __asm { BR              X11 }
    }
    if (v45 == 2)
    {
      v47 = __n;
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v8 + 48))(v44, 1, v60))
      {
        memcpy(v43, v44, v12);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v8 + 16))(v43, v44, v60);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v43, 0, 1, v60);
      }
      v53 = 2;
    }
    else
    {
      if (v45 != 1)
      {
        v51 = *v44;
        *v43 = *v44;
        *((_BYTE *)v43 + v66) = 0;
        v52 = v51;
        v49 = v64;
        v48 = v65;
        v47 = __n;
LABEL_48:
        v50 = v62;
        v36 = v58;
        goto LABEL_49;
      }
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(v44, 1, v61))
      {
        memcpy(v43, v44, v59);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v7 + 16))(v43, v44, v61);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v43, 0, 1, v61);
      }
      v47 = __n;
      v53 = 1;
    }
    *((_BYTE *)v43 + v66) = v53;
    v49 = v64;
    v48 = v65;
    goto LABEL_48;
  }
  a1 = (uint64_t *)(v20 + (((v17 | v10) + 16) & ~(v17 | v10)));
  swift_retain();
  return a1;
}

uint64_t sub_21C587808(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  BOOL v22;
  id *v23;
  unint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  swift_release();
  swift_release();
  sub_21C55DAAC(*(_QWORD *)(a1 + 16));
  v4 = (a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(v4 + 24);
  LODWORD(v6) = -1;
  if (v5 < 0xFFFFFFFF)
    v6 = *(_QWORD *)(v4 + 24);
  if ((int)v6 - 1 < 0 && v5)
    __swift_destroy_boxed_opaque_existential_0(v4);
  v7 = (a1 + 103) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v35 = a2;
  v10 = *(_QWORD *)(v8 - 8);
  v11 = *(_QWORD *)(v9 - 8);
  v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_DWORD *)(v11 + 84);
  v14 = (*(_DWORD *)(v11 + 80) | *(_DWORD *)(v10 + 80)) & 0xF8 | 7u;
  v15 = v14 + 8;
  v16 = ~v14;
  v17 = (v14 + 8 + v7) & ~v14;
  v18 = *(_QWORD *)(v10 + 64);
  v19 = *(_QWORD *)(v11 + 64);
  v20 = (_QWORD *)((v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v20 <= 0xFFFFFFFEuLL)
  {
    if (v12)
      v28 = *(_QWORD *)(v10 + 64);
    else
      v28 = v18 + 1;
    if (v13)
      v29 = *(_QWORD *)(v11 + 64);
    else
      v29 = v19 + 1;
    if (v28 <= v29)
      v28 = v29;
    if (v28 <= 8)
      v25 = 8;
    else
      v25 = v28;
    v30 = v35;
  }
  else
  {
    v32 = v9;
    v33 = v8;
    v34 = ~v14;
    swift_release();
    swift_release();
    if (v12)
      v21 = v18;
    else
      v21 = v18 + 1;
    v22 = v13 == 0;
    v23 = (id *)(((unint64_t)v20 + v15) & v34);
    if (v22)
      v24 = v19 + 1;
    else
      v24 = v19;
    if (v21 <= v24)
      v21 = v24;
    if (v21 <= 8)
      v25 = 8;
    else
      v25 = v21;
    v26 = *((unsigned __int8 *)v23 + v25);
    if (v26 >= 3)
    {
      if (v25 <= 3)
        v27 = v25;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    if (v26 == 2)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(((unint64_t)v20 + v15) & v34, 1, v32))(*(void (**)(id *, uint64_t))(v11 + 8))(v23, v32);
    }
    else if (v26 == 1)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(((unint64_t)v20 + v15) & v34, 1, v33))(*(void (**)(id *, uint64_t))(v10 + 8))(v23, v33);
    }
    else
    {

    }
    v16 = ~v14;
    v30 = v35;
  }
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v30 + 32) - 8) + 8))((((v17 + ((v14 + 16) & v16) + v25 + 8) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v30 + 32) - 8) + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v30 + 32) - 8) + 80));
}

_QWORD *sub_21C587A74(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  size_t v34;
  BOOL v35;
  _QWORD *v36;
  _QWORD *v37;
  void **v38;
  size_t v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  id v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  size_t __n;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[2];
  swift_retain();
  swift_retain();
  sub_21C55DA30(v7);
  a1[2] = v7;
  v8 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  v9 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v9 + 24);
  LODWORD(v11) = -1;
  if (v10 < 0xFFFFFFFF)
    v11 = *(_QWORD *)(v9 + 24);
  if ((int)v11 - 1 < 0)
  {
    if (v10)
    {
      *(_QWORD *)(v8 + 24) = v10;
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      (**(void (***)(unint64_t, unint64_t))(v10 - 8))(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8, ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
    }
    else
    {
      v15 = *(_OWORD *)v9;
      v16 = *(_OWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
      *(_OWORD *)v8 = v15;
      *(_OWORD *)(v8 + 16) = v16;
    }
    v17 = *(_QWORD *)(v9 + 40);
    *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
    *(_QWORD *)(v8 + 40) = v17;
    v18 = *(_QWORD *)(v9 + 56);
    *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
    *(_QWORD *)(v8 + 56) = v18;
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v12 = *(_OWORD *)(v9 + 16);
    v13 = *(_OWORD *)(v9 + 32);
    v14 = *(_OWORD *)(v9 + 48);
    *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
    *(_OWORD *)(v8 + 32) = v13;
    *(_OWORD *)(v8 + 48) = v14;
    *(_OWORD *)(v8 + 16) = v12;
  }
  v19 = (_QWORD *)(((unint64_t)a1 + 103) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)a2 + 103) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v21 = *(_QWORD *)(a3[2] - 8);
  v22 = *(_QWORD *)(a3[3] - 8);
  v23 = *(_DWORD *)(v21 + 84);
  v24 = *(_DWORD *)(v22 + 84);
  v25 = (*(_DWORD *)(v22 + 80) | *(_DWORD *)(v21 + 80)) & 0xF8 | 7u;
  v26 = v25 + 8;
  v27 = ((unint64_t)v19 + v25 + 8) & ~v25;
  v28 = ((unint64_t)v20 + v25 + 8) & ~v25;
  v29 = *(_QWORD *)(v21 + 64);
  v30 = *(_QWORD *)(v22 + 64);
  v31 = (v25 + 16) & ~v25;
  v32 = (_QWORD *)((v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v32 >= 0xFFFFFFFFuLL)
  {
    v55 = a3[3];
    v56 = a3[2];
    v57 = (v25 + 16) & ~v25;
    v58 = a3;
    v33 = ~v25;
    if (v23)
      v34 = *(_QWORD *)(v21 + 64);
    else
      v34 = v29 + 1;
    v35 = v24 == 0;
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v36 = (_QWORD *)((v27 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v36 = *v32;
    v37 = (_QWORD *)(((unint64_t)v36 + v26) & v33);
    v38 = (void **)(((unint64_t)v32 + v26) & v33);
    if (v35)
      v39 = v30 + 1;
    else
      v39 = v30;
    __n = v34;
    if (v34 <= v39)
      v40 = v39;
    else
      v40 = v34;
    if (v40 <= 8)
      v41 = 8;
    else
      v41 = v40;
    v42 = *((unsigned __int8 *)v38 + v41);
    swift_retain();
    swift_retain();
    if (v42 >= 3)
    {
      if (v41 <= 3)
        v43 = v41;
      else
        v43 = 4;
      __asm { BR              X11 }
    }
    if (v42 == 2)
    {
      a3 = v58;
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v22 + 48))(v38, 1, v55))
      {
        memcpy(v37, v38, v39);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v22 + 16))(v37, v38, v55);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v37, 0, 1, v55);
      }
      v47 = 2;
    }
    else
    {
      if (v42 != 1)
      {
        v45 = *v38;
        *v37 = *v38;
        *((_BYTE *)v37 + v41) = 0;
        v46 = v45;
        a3 = v58;
LABEL_50:
        v31 = v57;
        goto LABEL_51;
      }
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v21 + 48))(v38, 1, v56))
      {
        memcpy(v37, v38, __n);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v21 + 16))(v37, v38, v56);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v37, 0, 1, v56);
      }
      a3 = v58;
      v47 = 1;
    }
    *((_BYTE *)v37 + v41) = v47;
    goto LABEL_50;
  }
  if (v23)
    v44 = *(_QWORD *)(v21 + 64);
  else
    v44 = v29 + 1;
  if (!v24)
    ++v30;
  if (v44 > v30)
    v30 = v44;
  if (v30 <= 8)
    v41 = 8;
  else
    v41 = v30;
  memcpy((void *)v27, (const void *)v28, (v31 | 1) + v41);
LABEL_51:
  v48 = (v31 | 1) + v41;
  v49 = ((v27 | 7) + v48) & 0xFFFFFFFFFFFFFFF8;
  v50 = ((v28 | 7) + v48) & 0xFFFFFFFFFFFFFFF8;
  v51 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = *(_BYTE *)(v50 + 8);
  *(_QWORD *)v49 = v51;
  v52 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v52 + 16))((*(unsigned __int8 *)(v52 + 80) + 9 + v49) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80), (*(unsigned __int8 *)(v52 + 80) + 9 + v50) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
  return a1;
}

_QWORD *sub_21C587E68(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  size_t v35;
  size_t v36;
  _QWORD *v37;
  unint64_t *v38;
  unint64_t v39;
  id *v40;
  void **v41;
  size_t v42;
  unint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  size_t v47;
  _QWORD *v48;
  _QWORD *v49;
  void **v50;
  size_t v51;
  size_t v52;
  unint64_t v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  id *v58;
  unint64_t v59;
  unsigned int v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  void *v69;
  id v70;
  char v71;
  unsigned int v72;
  uint64_t v73;
  void *v74;
  id v75;
  char v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *__src;
  _QWORD *__srca;
  _QWORD *v92;
  uint64_t v93;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = a2[2];
  sub_21C55DA30(v6);
  v7 = a1[2];
  a1[2] = v6;
  sub_21C55DAAC(v7);
  v8 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  v9 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v8 + 24);
  LODWORD(v11) = -1;
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  else
    v12 = *(_QWORD *)(v8 + 24);
  v13 = v12 - 1;
  v14 = *(_QWORD *)(v9 + 24);
  if (v14 < 0xFFFFFFFF)
    v11 = *(_QWORD *)(v9 + 24);
  v15 = v11 - 1;
  if ((v13 & 0x80000000) == 0)
  {
    if (v15 < 0)
      goto LABEL_8;
LABEL_13:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v16 = *(_OWORD *)(v9 + 16);
    v17 = *(_OWORD *)(v9 + 32);
    v18 = *(_OWORD *)(v9 + 48);
    *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
    *(_OWORD *)(v8 + 32) = v17;
    *(_OWORD *)(v8 + 48) = v18;
    *(_OWORD *)(v8 + 16) = v16;
    goto LABEL_20;
  }
  if ((v15 & 0x80000000) == 0)
  {
    if (v10)
      __swift_destroy_boxed_opaque_existential_0(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
    goto LABEL_13;
  }
  if (v10)
  {
    v19 = (uint64_t *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
    if (v14)
    {
      __swift_assign_boxed_opaque_existential_1(v19, (uint64_t *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8));
      goto LABEL_19;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
LABEL_18:
    v20 = *(_OWORD *)v9;
    v21 = *(_OWORD *)(v9 + 16);
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    *(_OWORD *)v8 = v20;
    *(_OWORD *)(v8 + 16) = v21;
    goto LABEL_19;
  }
LABEL_8:
  if (!v14)
    goto LABEL_18;
  *(_QWORD *)(v8 + 24) = v14;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  (**(void (***)(unint64_t, unint64_t))(v14 - 8))(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8, ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
LABEL_19:
  v22 = *(_QWORD *)(v9 + 40);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 40) = v22;
  v23 = *(_QWORD *)(v9 + 56);
  *(_BYTE *)(v8 + 64) = *(_BYTE *)(v9 + 64);
  *(_QWORD *)(v8 + 56) = v23;
LABEL_20:
  v24 = (_QWORD *)(((unint64_t)a1 + 103) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)a2 + 103) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  v26 = *(_QWORD *)(a3[2] - 8);
  v27 = *(_QWORD *)(a3[3] - 8);
  v28 = *(_DWORD *)(v26 + 84);
  v29 = *(_DWORD *)(v27 + 84);
  v30 = (*(_DWORD *)(v27 + 80) | *(_DWORD *)(v26 + 80)) & 0xF8 | 7u;
  v31 = v30 + 8;
  v32 = ~v30;
  v33 = (_QWORD *)(((unint64_t)v24 + v30 + 8) & ~v30);
  v34 = (_QWORD *)(((unint64_t)v25 + v30 + 8) & ~v30);
  v88 = v27;
  v89 = v26;
  v35 = *(_QWORD *)(v26 + 64);
  v36 = *(_QWORD *)(v27 + 64);
  v93 = (v30 + 16) & ~v30;
  v37 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  v38 = (unint64_t *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  v39 = *v38;
  if (*v37 >= 0xFFFFFFFFuLL)
  {
    v84 = a3[3];
    v86 = a3[2];
    __src = (_QWORD *)(((unint64_t)v25 + v30 + 8) & ~v30);
    v92 = a3;
    if (v39 >= 0xFFFFFFFF)
    {
      v83 = v33;
      *v33 = *v34;
      swift_retain();
      swift_release();
      *v37 = *v38;
      swift_retain();
      swift_release();
      if (!v28)
        ++v35;
      v40 = (id *)(((unint64_t)v37 + v31) & v32);
      v41 = (void **)(((unint64_t)v38 + v31) & v32);
      if (v29)
        v42 = v36;
      else
        v42 = v36 + 1;
      if (v35 <= v42)
        v43 = v42;
      else
        v43 = v35;
      if (v43 <= 8)
        v44 = 8;
      else
        v44 = v43;
      if (v40 == v41)
        goto LABEL_130;
      v45 = *((unsigned __int8 *)v40 + v44);
      if (v45 >= 3)
      {
        if (v44 <= 3)
          v46 = v44;
        else
          v46 = 4;
        __asm { BR              X12 }
      }
      if (v45 == 2)
      {
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v88 + 48))(v40, 1, v84))
          (*(void (**)(id *, uint64_t))(v88 + 8))(v40, v84);
      }
      else if (v45 == 1)
      {
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v89 + 48))(v40, 1, v86))
          (*(void (**)(id *, uint64_t))(v89 + 8))(v40, v86);
      }
      else
      {

      }
      v72 = *((unsigned __int8 *)v41 + v44);
      if (v72 >= 3)
      {
        if (v44 <= 3)
          v73 = v44;
        else
          v73 = 4;
        __asm { BR              X12 }
      }
      if (v72 == 2)
      {
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v88 + 48))(v41, 1, v84))
        {
          memcpy(v40, v41, v42);
        }
        else
        {
          (*(void (**)(id *, void **, uint64_t))(v88 + 16))(v40, v41, v84);
          (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v40, 0, 1, v84);
        }
        v76 = 2;
      }
      else
      {
        if (v72 != 1)
        {
          v74 = *v41;
          *v40 = *v41;
          *((_BYTE *)v40 + v44) = 0;
          v75 = v74;
LABEL_130:
          v65 = (unint64_t)__src;
          a3 = v92;
          v56 = (unint64_t)v83;
          goto LABEL_131;
        }
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v89 + 48))(v41, 1, v86))
        {
          memcpy(v40, v41, v35);
        }
        else
        {
          (*(void (**)(id *, void **, uint64_t))(v89 + 16))(v40, v41, v86);
          (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v40, 0, 1, v86);
        }
        v76 = 1;
      }
      *((_BYTE *)v40 + v44) = v76;
      goto LABEL_130;
    }
    v56 = (unint64_t)v33;
    swift_release();
    swift_release();
    if (v28)
      v57 = v35;
    else
      v57 = v35 + 1;
    v58 = (id *)(((unint64_t)v37 + v31) & v32);
    if (v29)
      v59 = v36;
    else
      v59 = v36 + 1;
    if (v57 <= v59)
      v57 = v59;
    if (v57 <= 8)
      v44 = 8;
    else
      v44 = v57;
    v60 = *((unsigned __int8 *)v58 + v44);
    if (v60 >= 3)
    {
      if (v44 <= 3)
        v61 = v44;
      else
        v61 = 4;
      __asm { BR              X12 }
    }
    v64 = v93;
    v66 = v89;
    if (v60 == 2)
    {
      v66 = v88;
      v67 = v84;
      v68 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v88 + 48))(((unint64_t)v37 + v31) & v32, 1, v84);
    }
    else
    {
      if (v60 != 1)
      {

LABEL_110:
        v65 = (unint64_t)__src;
        memcpy((void *)v56, __src, (v93 | 1) + v44);
        a3 = v92;
        goto LABEL_132;
      }
      v67 = v86;
      v68 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v89 + 48))(((unint64_t)v37 + v31) & v32, 1, v86);
    }
    if (!v68)
      (*(void (**)(unint64_t, uint64_t))(v66 + 8))(((unint64_t)v37 + v31) & v32, v67);
    goto LABEL_110;
  }
  if (v39 >= 0xFFFFFFFF)
  {
    v85 = a3[3];
    v87 = a3[2];
    __srca = (_QWORD *)(((unint64_t)v25 + v30 + 8) & ~v30);
    if (v28)
      v47 = *(_QWORD *)(v26 + 64);
    else
      v47 = v35 + 1;
    v48 = v33;
    *v33 = *v34;
    *v37 = *v38;
    v49 = (_QWORD *)(((unint64_t)v37 + v31) & v32);
    v50 = (void **)(((unint64_t)v38 + v31) & v32);
    if (v29)
      v51 = v36;
    else
      v51 = v36 + 1;
    v52 = v47;
    if (v47 <= v51)
      v53 = v51;
    else
      v53 = v47;
    if (v53 <= 8)
      v44 = 8;
    else
      v44 = v53;
    v54 = *((unsigned __int8 *)v50 + v44);
    swift_retain();
    swift_retain();
    if (v54 >= 3)
    {
      if (v44 <= 3)
        v55 = v44;
      else
        v55 = 4;
      __asm { BR              X11 }
    }
    if (v54 == 2)
    {
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v88 + 48))(v50, 1, v85))
      {
        memcpy(v49, v50, v51);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v88 + 16))(v49, v50, v85);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v49, 0, 1, v85);
      }
      v71 = 2;
    }
    else
    {
      if (v54 != 1)
      {
        v69 = *v50;
        *v49 = *v50;
        *((_BYTE *)v49 + v44) = 0;
        v70 = v69;
LABEL_106:
        v65 = (unint64_t)__srca;
        v56 = (unint64_t)v48;
LABEL_131:
        v64 = v93;
        goto LABEL_132;
      }
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v89 + 48))(v50, 1, v87))
      {
        memcpy(v49, v50, v52);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v89 + 16))(v49, v50, v87);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v49, 0, 1, v87);
      }
      v71 = 1;
    }
    *((_BYTE *)v49 + v44) = v71;
    goto LABEL_106;
  }
  if (v28)
    v62 = *(_QWORD *)(v26 + 64);
  else
    v62 = v35 + 1;
  if (v29)
    v63 = *(_QWORD *)(v27 + 64);
  else
    v63 = v36 + 1;
  if (v62 <= v63)
    v62 = v63;
  if (v62 <= 8)
    v44 = 8;
  else
    v44 = v62;
  v64 = (v30 + 16) & ~v30;
  v65 = (unint64_t)v34;
  v56 = (unint64_t)v33;
  memcpy(v33, v34, (v93 | 1) + v44);
LABEL_132:
  v77 = (v64 | 1) + v44;
  v78 = ((v56 | 7) + v77) & 0xFFFFFFFFFFFFFFF8;
  v79 = ((v65 | 7) + v77) & 0xFFFFFFFFFFFFFFF8;
  v80 = *(_QWORD *)v79;
  *(_BYTE *)(v78 + 8) = *(_BYTE *)(v79 + 8);
  *(_QWORD *)v78 = v80;
  v81 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v81 + 24))((*(unsigned __int8 *)(v81 + 80) + 9 + v78) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80), (*(unsigned __int8 *)(v81 + 80) + 9 + v79) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
  return a1;
}

uint64_t sub_21C588728(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  size_t v27;
  BOOL v28;
  _QWORD *v29;
  _QWORD *v30;
  size_t v31;
  unint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  size_t v37;
  _QWORD *v38;
  void (*v39)(_QWORD *, _QWORD, uint64_t, uint64_t);
  char v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *__dst;
  uint64_t v48;
  uint64_t v49;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = (a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  v6 = (a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_OWORD *)(v6 + 32);
  v7 = *(_OWORD *)(v6 + 48);
  v9 = *(_OWORD *)(v6 + 16);
  *(_BYTE *)(v5 + 64) = *(_BYTE *)(v6 + 64);
  *(_OWORD *)(v5 + 32) = v8;
  *(_OWORD *)(v5 + 48) = v7;
  *(_OWORD *)(v5 + 16) = v9;
  *(_OWORD *)v5 = *(_OWORD *)v6;
  v10 = (_QWORD *)((a1 + 103) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)((a2 + 103) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = a3[2];
  v13 = a3[3];
  v14 = *(_QWORD *)(v12 - 8);
  v15 = *(_QWORD *)(v13 - 8);
  v16 = *(_DWORD *)(v14 + 84);
  v17 = *(_DWORD *)(v15 + 84);
  v18 = (*(_DWORD *)(v15 + 80) | *(_DWORD *)(v14 + 80)) & 0xF8 | 7u;
  v19 = v18 + 8;
  v20 = ((unint64_t)v10 + v18 + 8) & ~v18;
  v21 = ((unint64_t)v11 + v18 + 8) & ~v18;
  v22 = *(_QWORD *)(v14 + 64);
  v23 = *(_QWORD *)(v15 + 64);
  v24 = (v18 + 16) & ~v18;
  v25 = (_QWORD *)((v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v25 >= 0xFFFFFFFFuLL)
  {
    v48 = (v18 + 16) & ~v18;
    v49 = v20;
    v26 = ~v18;
    if (v16)
      v27 = *(_QWORD *)(v14 + 64);
    else
      v27 = v22 + 1;
    v28 = v17 == 0;
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v29 = (_QWORD *)((v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v29 = *v25;
    __dst = (_QWORD *)(((unint64_t)v29 + v19) & v26);
    v30 = (_QWORD *)(((unint64_t)v25 + v19) & v26);
    if (v28)
      v31 = v23 + 1;
    else
      v31 = v23;
    if (v27 <= v31)
      v32 = v31;
    else
      v32 = v27;
    if (v32 <= 8)
      v33 = 8;
    else
      v33 = v32;
    v34 = *((unsigned __int8 *)v30 + v33);
    if (v34 >= 3)
    {
      if (v33 <= 3)
        v35 = v33;
      else
        v35 = 4;
      __asm { BR              X12 }
    }
    if (v34 == 2)
    {
      v38 = __dst;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v30, 1, v13))
      {
        memcpy(__dst, v30, v31);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v15 + 32))(__dst, v30, v13);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v13);
      }
      v24 = v48;
      v40 = 2;
    }
    else
    {
      if (v34 != 1)
      {
        v24 = v48;
        *__dst = *v30;
        *((_BYTE *)__dst + v33) = 0;
LABEL_42:
        v20 = v49;
        goto LABEL_43;
      }
      v37 = v27;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v30, 1, v12))
      {
        v38 = __dst;
        memcpy(__dst, v30, v37);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v14 + 32))(__dst, v30, v12);
        v39 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56);
        v38 = __dst;
        v39(__dst, 0, 1, v12);
      }
      v24 = v48;
      v40 = 1;
    }
    *((_BYTE *)v38 + v33) = v40;
    goto LABEL_42;
  }
  if (v16)
    v36 = *(_QWORD *)(v14 + 64);
  else
    v36 = v22 + 1;
  if (!v17)
    ++v23;
  if (v36 > v23)
    v23 = v36;
  if (v23 <= 8)
    v33 = 8;
  else
    v33 = v23;
  memcpy((void *)v20, (const void *)v21, (v24 | 1) + v33);
LABEL_43:
  v41 = (v24 | 1) + v33;
  v42 = ((v20 | 7) + v41) & 0xFFFFFFFFFFFFFFF8;
  v43 = ((v21 | 7) + v41) & 0xFFFFFFFFFFFFFFF8;
  v44 = *(_QWORD *)v43;
  *(_BYTE *)(v42 + 8) = *(_BYTE *)(v43 + 8);
  *(_QWORD *)v42 = v44;
  v45 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v45 + 32))((*(unsigned __int8 *)(v45 + 80) + 9 + v42) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80), (*(unsigned __int8 *)(v45 + 80) + 9 + v43) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
  return a1;
}

_QWORD *sub_21C588A88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  size_t v27;
  size_t v28;
  _QWORD *v29;
  unint64_t *v30;
  unint64_t v31;
  size_t v32;
  BOOL v33;
  id *v34;
  id *v35;
  size_t v36;
  unint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  size_t v41;
  _QWORD *v42;
  _QWORD *v43;
  size_t v44;
  unint64_t v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  id *v51;
  unint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  size_t v58;
  void *v59;
  unint64_t v60;
  unint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *__src;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = a1[2];
  a1[2] = a2[2];
  sub_21C55DAAC(v6);
  v7 = ((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8;
  v8 = ((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v7 + 24);
  LODWORD(v10) = -1;
  if (v9 < 0xFFFFFFFF)
    v10 = *(_QWORD *)(v7 + 24);
  if ((int)v10 - 1 >= 0)
    goto LABEL_4;
  v48 = *(_QWORD *)(v8 + 24);
  if (v48 >= 0xFFFFFFFF)
    LODWORD(v48) = -1;
  if ((int)v48 - 1 >= 0)
  {
    if (v9)
      __swift_destroy_boxed_opaque_existential_0(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
LABEL_4:
    *(_OWORD *)v7 = *(_OWORD *)v8;
    v11 = *(_OWORD *)(v8 + 16);
    v12 = *(_OWORD *)(v8 + 32);
    v13 = *(_OWORD *)(v8 + 48);
    *(_BYTE *)(v7 + 64) = *(_BYTE *)(v8 + 64);
    *(_OWORD *)(v7 + 32) = v12;
    *(_OWORD *)(v7 + 48) = v13;
    *(_OWORD *)(v7 + 16) = v11;
    goto LABEL_5;
  }
  if (v9)
    __swift_destroy_boxed_opaque_existential_0(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
  v62 = *(_OWORD *)v8;
  v63 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v62;
  *(_OWORD *)(v7 + 16) = v63;
  v64 = *(_QWORD *)(v8 + 40);
  *(_BYTE *)(v7 + 48) = *(_BYTE *)(v8 + 48);
  *(_QWORD *)(v7 + 40) = v64;
  v65 = *(_QWORD *)(v8 + 56);
  *(_BYTE *)(v7 + 64) = *(_BYTE *)(v8 + 64);
  *(_QWORD *)(v7 + 56) = v65;
LABEL_5:
  v14 = (_QWORD *)(((unint64_t)a1 + 103) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)a2 + 103) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = *(_QWORD *)(a3 + 16);
  v17 = *(_QWORD *)(a3 + 24);
  v84 = a3;
  v18 = *(_QWORD *)(v16 - 8);
  v19 = *(_QWORD *)(v17 - 8);
  v20 = *(_DWORD *)(v18 + 84);
  v21 = *(_DWORD *)(v19 + 84);
  v22 = (*(_DWORD *)(v19 + 80) | *(_DWORD *)(v18 + 80)) & 0xF8 | 7u;
  v23 = v22 + 8;
  v24 = ~v22;
  v25 = (_QWORD *)(((unint64_t)v14 + v22 + 8) & ~v22);
  v26 = (_QWORD *)(((unint64_t)v15 + v22 + 8) & ~v22);
  v27 = *(_QWORD *)(v18 + 64);
  v28 = *(_QWORD *)(v19 + 64);
  v82 = v18;
  v83 = (v22 + 16) & ~v22;
  v29 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  v30 = (unint64_t *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  v31 = *v30;
  if (*v29 >= 0xFFFFFFFFuLL)
  {
    v79 = v17;
    v80 = v16;
    __src = (_QWORD *)(((unint64_t)v15 + v22 + 8) & ~v22);
    if (v31 >= 0xFFFFFFFF)
    {
      v78 = v25;
      *v25 = *v26;
      swift_release();
      *v29 = *v30;
      swift_release();
      if (v20)
        v32 = v27;
      else
        v32 = v27 + 1;
      v33 = v21 == 0;
      v34 = (id *)(((unint64_t)v29 + v23) & v24);
      v35 = (id *)(((unint64_t)v30 + v23) & v24);
      if (v33)
        v36 = v28 + 1;
      else
        v36 = v28;
      if (v32 <= v36)
        v37 = v36;
      else
        v37 = v32;
      if (v37 <= 8)
        v38 = 8;
      else
        v38 = v37;
      if (v34 != v35)
      {
        v39 = *((unsigned __int8 *)v34 + v38);
        if (v39 >= 3)
        {
          if (v38 <= 3)
            v40 = v38;
          else
            v40 = 4;
          __asm { BR              X12 }
        }
        if (v39 == 2)
        {
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v19 + 48))(v34, 1, v79))
            (*(void (**)(id *, uint64_t))(v19 + 8))(v34, v79);
        }
        else if (v39 == 1)
        {
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v82 + 48))(v34, 1, v80))
            (*(void (**)(id *, uint64_t))(v82 + 8))(v34, v80);
        }
        else
        {

        }
        v69 = *((unsigned __int8 *)v35 + v38);
        if (v69 >= 3)
        {
          if (v38 <= 3)
            v70 = v38;
          else
            v70 = 4;
          __asm { BR              X12 }
        }
        if (v69 == 2)
        {
          if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v19 + 48))(v35, 1, v79))
          {
            memcpy(v34, v35, v36);
          }
          else
          {
            (*(void (**)(id *, id *, uint64_t))(v19 + 32))(v34, v35, v79);
            (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v34, 0, 1, v79);
          }
          v57 = v83;
          v67 = v84;
          v71 = 2;
          goto LABEL_125;
        }
        if (v69 == 1)
        {
          if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v82 + 48))(v35, 1, v80))
          {
            memcpy(v34, v35, v32);
          }
          else
          {
            (*(void (**)(id *, id *, uint64_t))(v82 + 32))(v34, v35, v80);
            (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v34, 0, 1, v80);
          }
          v57 = v83;
          v67 = v84;
          v71 = 1;
LABEL_125:
          *((_BYTE *)v34 + v38) = v71;
          goto LABEL_126;
        }
        *v34 = *v35;
        *((_BYTE *)v34 + v38) = 0;
      }
      v57 = v83;
      v67 = v84;
LABEL_126:
      v60 = (unint64_t)__src;
      v61 = (unint64_t)v78;
      goto LABEL_127;
    }
    v49 = v25;
    swift_release();
    swift_release();
    if (v20)
      v50 = v27;
    else
      v50 = v27 + 1;
    v33 = v21 == 0;
    v51 = (id *)(((unint64_t)v29 + v23) & v24);
    if (v33)
      v52 = v28 + 1;
    else
      v52 = v28;
    if (v50 <= v52)
      v50 = v52;
    if (v50 <= 8)
      v38 = 8;
    else
      v38 = v50;
    v53 = *((unsigned __int8 *)v51 + v38);
    if (v53 >= 3)
    {
      if (v38 <= 3)
        v54 = v38;
      else
        v54 = 4;
      __asm { BR              X12 }
    }
    if (v53 == 2)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(((unint64_t)v29 + v23) & v24, 1, v79))(*(void (**)(id *, uint64_t))(v19 + 8))(v51, v79);
    }
    else if (v53 == 1)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v82 + 48))(((unint64_t)v29 + v23) & v24, 1, v80))(*(void (**)(id *, uint64_t))(v82 + 8))(v51, v80);
    }
    else
    {

    }
    v57 = v83;
    v58 = (v83 | 1) + v38;
    v61 = (unint64_t)v49;
    v59 = v49;
    v60 = (unint64_t)__src;
    v26 = __src;
    goto LABEL_99;
  }
  if (v31 < 0xFFFFFFFF)
  {
    if (v20)
      v55 = *(_QWORD *)(v18 + 64);
    else
      v55 = v27 + 1;
    if (v21)
      v56 = *(_QWORD *)(v19 + 64);
    else
      v56 = v28 + 1;
    if (v55 <= v56)
      v55 = v56;
    if (v55 <= 8)
      v38 = 8;
    else
      v38 = v55;
    v57 = (v22 + 16) & ~v22;
    v58 = (v83 | 1) + v38;
    v59 = v25;
    v60 = (unint64_t)v26;
    v61 = (unint64_t)v25;
LABEL_99:
    memcpy(v59, v26, v58);
    v67 = v84;
    goto LABEL_127;
  }
  if (v20)
    v41 = *(_QWORD *)(v18 + 64);
  else
    v41 = v27 + 1;
  v33 = v21 == 0;
  *v25 = *v26;
  *v29 = *v30;
  v42 = (_QWORD *)(((unint64_t)v29 + v23) & v24);
  v43 = (_QWORD *)(((unint64_t)v30 + v23) & v24);
  if (v33)
    v44 = v28 + 1;
  else
    v44 = v28;
  if (v41 <= v44)
    v45 = v44;
  else
    v45 = v41;
  if (v45 <= 8)
    v38 = 8;
  else
    v38 = v45;
  v46 = *((unsigned __int8 *)v43 + v38);
  if (v46 >= 3)
  {
    if (v38 <= 3)
      v47 = v38;
    else
      v47 = 4;
    __asm { BR              X12 }
  }
  v61 = (unint64_t)v25;
  v60 = (unint64_t)v26;
  if (v46 == 2)
  {
    v68 = v17;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v43, 1, v17))
    {
      memcpy(v42, v43, v44);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 32))(v42, v43, v68);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v42, 0, 1, v68);
    }
    v57 = v83;
    v67 = v84;
    *((_BYTE *)v42 + v38) = 2;
  }
  else if (v46 == 1)
  {
    v66 = v16;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v43, 1, v16))
    {
      memcpy(v42, v43, v41);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v82 + 32))(v42, v43, v66);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v42, 0, 1, v66);
    }
    v57 = v83;
    v67 = v84;
    *((_BYTE *)v42 + v38) = 1;
  }
  else
  {
    *v42 = *v43;
    *((_BYTE *)v42 + v38) = 0;
    v57 = (v22 + 16) & ~v22;
    v67 = v84;
  }
LABEL_127:
  v72 = (v57 | 1) + v38;
  v73 = ((v61 | 7) + v72) & 0xFFFFFFFFFFFFFFF8;
  v74 = ((v60 | 7) + v72) & 0xFFFFFFFFFFFFFFF8;
  v75 = *(_QWORD *)v74;
  *(_BYTE *)(v73 + 8) = *(_BYTE *)(v74 + 8);
  *(_QWORD *)v73 = v75;
  v76 = *(_QWORD *)(*(_QWORD *)(v67 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v76 + 40))((*(unsigned __int8 *)(v76 + 80) + 9 + v73) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80), (*(unsigned __int8 *)(v76 + 80) + 9 + v74) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
  return a1;
}

uint64_t sub_21C5892C0(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  char v17;
  int v18;
  unsigned int v20;
  int v21;
  unint64_t v22;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(a3[4] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(a3[3] - 8);
  if (!*(_DWORD *)(v4 + 84))
    ++v5;
  if (*(_DWORD *)(v9 + 84))
    v10 = *(_QWORD *)(v9 + 64);
  else
    v10 = *(_QWORD *)(v9 + 64) + 1;
  if (v5 > v10)
    v10 = v5;
  if (v10 <= 8)
    v10 = 8;
  if (!a2)
    return 0;
  v11 = (*(_DWORD *)(v9 + 80) | *(_DWORD *)(v4 + 80)) & 0xF8 | 7u;
  v12 = v10 + ((v11 + 16) & ~v11) + 1;
  v13 = *(unsigned __int8 *)(v6 + 80);
  v14 = v13 + 9;
  v15 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_31;
  v16 = ((v14 + ((v12 + ((v11 + 104) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v13) + *(_QWORD *)(v6 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v20 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v20))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_31;
      goto LABEL_24;
    }
    if (v20 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_31;
      goto LABEL_24;
    }
    if (v20 < 2)
    {
LABEL_31:
      if ((v7 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v6 + 48))((v14
                                                                      + ((((((a1 + 31) & 0xFFFFFFFFFFFFFFF8) + v11 + 80) & ~v11 | 7)
                                                                        + v12) & 0xFFFFFFFFFFFFFFF8)) & ~v13);
      v22 = *(_QWORD *)(a1 + 8);
      if (v22 >= 0xFFFFFFFF)
        LODWORD(v22) = -1;
      return (v22 + 1);
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_31;
LABEL_24:
  v21 = (v18 - 1) << v17;
  if (v16 > 3)
    v21 = 0;
  if (!(_DWORD)v16)
    return v8 + v21 + 1;
  if (v16 > 3)
    LODWORD(v16) = 4;
  return ((uint64_t (*)(void))((char *)&loc_21C589410 + 4 * byte_21C5E7D05[(v16 - 1)]))();
}

void sub_21C5894A0(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFFu)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v10 = v5 + 80;
  v9 = *(_DWORD *)(v5 + 80);
  v11 = *(_QWORD *)(a4[3] - 8);
  v12 = *(_QWORD *)(v11 + 64);
  if (!*(_DWORD *)(v10 + 4))
    ++v6;
  v13 = *(_DWORD *)(v11 + 84);
  v14 = (*(_DWORD *)(v11 + 80) | v9) & 0xF8 | 7u;
  if (!v13)
    ++v12;
  if (v6 <= v12)
    v6 = v12;
  if (v6 <= 8)
    v6 = 8;
  v15 = v6 + ((v14 + 16) & ~v14) + 1;
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = ((v16 + 9 + ((v15 + ((v14 + 104) & ~v14) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + *(_QWORD *)(v7 + 64);
  if (a3 > v8)
  {
    if (v17 <= 3)
    {
      v20 = ((a3 - v8 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
      if (HIWORD(v20))
      {
        v18 = 4u;
      }
      else if (v20 >= 0x100)
      {
        v18 = 2;
      }
      else
      {
        v18 = v20 > 1;
      }
    }
    else
    {
      v18 = 1u;
    }
  }
  else
  {
    v18 = 0;
  }
  if (v8 < a2)
  {
    v19 = ~v8 + a2;
    if (v17 < 4)
    {
      if ((_DWORD)v17)
      {
        v21 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if ((_DWORD)v17 == 3)
        {
          *a1 = v21;
          *((_BYTE *)a1 + 2) = BYTE2(v21);
        }
        else if ((_DWORD)v17 == 2)
        {
          *a1 = v21;
        }
        else
        {
          *(_BYTE *)a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, ((v16 + 9 + ((v15 + ((v14 + 104) & ~v14) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + *(_QWORD *)(v7 + 64));
      *(_DWORD *)a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_21C589730()
{
  JUMPOUT(0x22077F9A0);
}

uint64_t sub_21C589740()
{
  return MEMORY[0x24BDB9D70];
}

void type metadata accessor for MapBridgingView()
{
  JUMPOUT(0x22077F91CLL);
}

uint64_t type metadata accessor for MapPreferenceWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MapPreferenceWrapper);
}

void type metadata accessor for _MapContentView.Child()
{
  JUMPOUT(0x22077F91CLL);
}

void sub_21C589770(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  sub_21C576140(a1, a2, v3[8], v3[2], v3[3], v3[4], v3[5], v3[6], a3, v3[7]);
}

uint64_t sub_21C5897A0(uint64_t result, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  void (*v5)(_OWORD *);
  _OWORD v6[6];
  uint64_t v7;
  _OWORD v8[6];
  uint64_t v9;
  _OWORD v10[6];
  uint64_t v11;
  char v12;

  v11 = 0;
  memset(v10, 0, sizeof(v10));
  v12 = 1;
  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = swift_bridgeObjectRetain() + 48;
    do
    {
      if (*(_BYTE *)(v4 - 16) == 1)
      {
        v5 = *(void (**)(_OWORD *))(v4 - 8);
        swift_retain();
        sub_21C53E46C(a2, (uint64_t *)v10, v8);
        v6[0] = v8[0];
        v6[1] = v8[1];
        v6[2] = v8[2];
        v6[3] = v8[3];
        v6[4] = v8[4];
        v6[5] = v8[5];
        v7 = v9;
        v5(v6);
        swift_release();
      }
      v4 += 24;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_21C589898@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, char *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  _QWORD v19[2];
  void (*v20)(char *);
  char *v21;

  v19[1] = a3;
  v20 = a2;
  v19[0] = a1;
  v21 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289848);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v10 = *(_QWORD *)(a4 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v19 - v14;
  result = sub_21C5E2EFC();
  if (*(_QWORD *)(*(_QWORD *)(result - 8) + 64) == v8)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 16))((char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v19[0], v6);
    v20((char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(char *, uint64_t))(v7 + 8))((char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    v17 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v17(v15, v13, a4);
    v18 = *(void (**)(char *, uint64_t))(v10 + 8);
    v18(v13, a4);
    v17(v21, v15, a4);
    return ((uint64_t (*)(char *, uint64_t))v18)(v15, a4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_21C589A10(uint64_t a1)
{
  return sub_21C589A58(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C576B00);
}

uint64_t sub_21C589A1C(uint64_t a1)
{
  return sub_21C589A58(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C576B9C);
}

uint64_t sub_21C589A28(uint64_t a1)
{
  return sub_21C589A58(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C576C40);
}

uint64_t sub_21C589A34(uint64_t a1)
{
  return sub_21C589A58(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C576CE4);
}

uint64_t sub_21C589A40(uint64_t a1)
{
  return sub_21C589A58(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C576D7C);
}

uint64_t sub_21C589A4C(uint64_t a1)
{
  return sub_21C589A58(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C576E64);
}

uint64_t sub_21C589A58(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_21C589A6C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result - 1;
  return result;
}

uint64_t sub_21C589A78(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_21C589B28(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_21C589BB0@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if (result < 0 || (v4 = result, 1 << *(_BYTE *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v6 = *(_QWORD *)(a3 + 56);
    v7 = type metadata accessor for UserAnnotationViewModel(0);
    return sub_21C529664(v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v4, a4, type metadata accessor for UserAnnotationViewModel);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_21C589C84(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

id sub_21C589CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  Class *v16;
  id v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  char v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;

  v1 = v0;
  objc_opt_self();
  v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + qword_255288E70 + 16);
    if (*(_QWORD *)(v3 + 16))
    {
      v4 = v2;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v5 = sub_21C53105C(v4);
      if ((v6 & 1) != 0)
      {
        v7 = *(_QWORD *)(v3 + 56) + 96 * v5;
        v8 = *(void **)(v7 + 8);
        v9 = *(void **)(v7 + 24);
        v10 = *(_QWORD *)(v7 + 32);
        v11 = *(_QWORD *)(v7 + 48);
        v50 = *(_QWORD *)(v7 + 56);
        v12 = *(_QWORD *)(v7 + 64);
        v13 = *(_QWORD *)(v7 + 72);
        v48 = *(unsigned __int8 *)(v7 + 80);
        v54 = *(_QWORD *)v7;
        v56 = *(_QWORD *)(v7 + 88);
        v14 = *(_WORD *)(v7 + 16);
        swift_bridgeObjectRetain();
        v15 = *(_QWORD *)(v7 + 40);
        sub_21C561470(v8, v14);
        v58 = v9;
        swift_bridgeObjectRetain();
        sub_21C52EF74(v13, v48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v16 = (Class *)0x24BDDB080;
        if (!v48)
          v16 = (Class *)0x24BDDB190;
        v17 = objc_msgSend(objc_allocWithZone(*v16), sel_initWithPolyline_, v4);
        *(_QWORD *)&v60 = v54;
        *((_QWORD *)&v60 + 1) = v8;
        LOWORD(v61) = v14;
        *((_QWORD *)&v61 + 1) = v9;
        *(_QWORD *)&v62 = v10;
        *((_QWORD *)&v62 + 1) = v15;
        *(_QWORD *)&v63 = v11;
        *((_QWORD *)&v63 + 1) = v50;
        *(_QWORD *)&v64 = v12;
        *((_QWORD *)&v64 + 1) = v13;
        LOBYTE(v65) = v48;
        *((_QWORD *)&v65 + 1) = v56;
        sub_21C568EB8(v17);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_21C56148C(v8, v14);
        swift_bridgeObjectRelease();

        v18 = v13;
        v19 = v48;
        goto LABEL_12;
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  objc_opt_self();
  v20 = swift_dynamicCastObjCClass();
  if (v20)
  {
    v21 = *(_QWORD *)(v1 + qword_255288E78 + 16);
    if (*(_QWORD *)(v21 + 16))
    {
      v22 = v20;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = sub_21C531010(v22);
      if ((v24 & 1) != 0)
      {
        v25 = *(_QWORD *)(v21 + 56) + 120 * v23;
        v26 = *(void **)(v25 + 8);
        v27 = *(_QWORD *)(v25 + 16);
        v47 = *(_QWORD *)(v25 + 24);
        v49 = *(_QWORD *)v25;
        v28 = *(void **)(v25 + 32);
        v29 = *(_QWORD *)(v25 + 40);
        v30 = *(_QWORD *)(v25 + 56);
        v53 = *(_QWORD *)(v25 + 64);
        v31 = *(_QWORD *)(v25 + 72);
        v32 = *(_QWORD *)(v25 + 80);
        v55 = *(_BYTE *)(v25 + 88);
        v57 = *(_QWORD *)(v25 + 96);
        v59 = *(_BYTE *)(v25 + 104);
        v51 = *(_QWORD *)(v25 + 112);
        swift_bridgeObjectRetain();
        v33 = *(_QWORD *)(v25 + 48);
        sub_21C5611D8(v26, v27);
        v52 = v28;
        swift_bridgeObjectRetain();
        sub_21C52EF74(v32, v55);
        sub_21C52EF74(v57, v59);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB180]), sel_initWithPolygon_, v22);
        *(_QWORD *)&v60 = v49;
        *((_QWORD *)&v60 + 1) = v26;
        *(_QWORD *)&v61 = v27;
        *((_QWORD *)&v61 + 1) = v47;
        *(_QWORD *)&v62 = v28;
        *((_QWORD *)&v62 + 1) = v29;
        *(_QWORD *)&v63 = v33;
        *((_QWORD *)&v63 + 1) = v30;
        *(_QWORD *)&v64 = v53;
        *((_QWORD *)&v64 + 1) = v31;
        BYTE8(v65) = v55;
        *(_QWORD *)&v66 = v57;
        BYTE8(v66) = v59;
        *(_QWORD *)&v67 = v51;
        sub_21C569318(v17);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_21C561218(v26, v27);
        swift_bridgeObjectRelease();

        sub_21C531AC8(v32, v55);
        v18 = v57;
        v19 = v59;
LABEL_12:
        sub_21C531AC8(v18, v19);
        return v17;
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  objc_opt_self();
  v34 = swift_dynamicCastObjCClass();
  if (v34)
  {
    v35 = *(_QWORD *)(v1 + qword_255288E80 + 16);
    if (*(_QWORD *)(v35 + 16))
    {
      v36 = v34;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37 = sub_21C530F5C(v36);
      if ((v38 & 1) != 0)
      {
        v39 = *(_QWORD *)(v35 + 56) + 136 * v37;
        v60 = *(_OWORD *)v39;
        v40 = *(_OWORD *)(v39 + 48);
        v41 = *(_OWORD *)(v39 + 64);
        v42 = *(_OWORD *)(v39 + 32);
        v61 = *(_OWORD *)(v39 + 16);
        v62 = v42;
        v63 = v40;
        v64 = v41;
        v43 = *(_OWORD *)(v39 + 80);
        v44 = *(_OWORD *)(v39 + 96);
        v45 = *(_OWORD *)(v39 + 112);
        v68 = *(_QWORD *)(v39 + 128);
        v66 = v44;
        v67 = v45;
        v65 = v43;
        sub_21C560F2C((uint64_t)&v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB038]), sel_initWithCircle_, v36);
        sub_21C5695D4(v17);
        sub_21C560E74((uint64_t)&v60);
        swift_unknownObjectRelease();
        return v17;
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB148]), sel_init);
}

uint64_t sub_21C58A220(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  if (a1 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    v2 = sub_21C5E3D60();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      v3 = 4;
      while (1)
      {
        v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          MEMORY[0x22077F1B4](v3 - 4, a1);
          v5 = v3 - 3;
          if (__OFADD__(v4, 1))
            goto LABEL_15;
        }
        else
        {
          swift_unknownObjectRetain();
          v5 = v3 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
        }
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          sub_21C531A4C(0, (unint64_t *)&qword_255289570);
          swift_unknownObjectRetain();
          v6 = sub_21C5E3B98();
          swift_unknownObjectRelease_n();
          if ((v6 & 1) != 0)
          {
            v7 = 1;
            goto LABEL_18;
          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v3;
        if (v5 == v2)
        {
          v7 = 0;
          goto LABEL_18;
        }
      }
    }
  }
  v7 = 0;
LABEL_18:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_21C58A398(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v5;
  uint64_t v6;

  sub_21C531AAC(a1);
  v5 = (_QWORD *)((char *)v2 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x230));
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_21C531A9C(v6);
}

void sub_21C58A3E8()
{
  type metadata accessor for MapBridgingViewCoordinator();
}

id sub_21C58A408(objc_class *a1)
{
  return objc_msgSend(objc_allocWithZone(a1), sel_init);
}

uint64_t sub_21C58A424()
{
  return sub_21C5784E8();
}

uint64_t sub_21C58A42C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E40, a2);
}

uint64_t sub_21C58A438(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E40);
}

uint64_t sub_21C58A454@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E48, a2);
}

uint64_t sub_21C58A460(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E48);
}

uint64_t sub_21C58A47C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E58, a2);
}

uint64_t sub_21C58A488(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E58);
}

uint64_t sub_21C58A4A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E70, a2);
}

uint64_t sub_21C58A4B0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E70);
}

uint64_t sub_21C58A4CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E78, a2);
}

uint64_t sub_21C58A4D8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E78);
}

uint64_t sub_21C58A4F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &qword_255288E80, a2);
}

uint64_t sub_21C58A500(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_21C541638(a1, a2, a3, a4, &qword_255288E80);
}

uint64_t sub_21C58A51C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C58A540()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_21C58A570@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_21C5C8F60(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_21C58A578(uint64_t a1)
{
  destroy for MapCameraBounds(a1);
  return a1;
}

uint64_t sub_21C58A5AC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_21C58A5E8(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if ((a3 & 1) != 0)
    return a4();
  else
    return swift_retain();
}

uint64_t sub_21C58A5F4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_21C58A618()
{
  swift_release();
  return swift_deallocObject();
}

void sub_21C58A63C()
{
  uint64_t v0;

  sub_21C586398(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

id sub_21C58A660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, double a7, double a8)
{
  _BYTE *v8;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double *v20;
  void *v21;
  id v22;
  objc_super v24;

  v15 = &v8[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_title];
  *v15 = 0;
  v15[1] = 0;
  v16 = &v8[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_subtitle];
  *v16 = 0;
  v16[1] = 0;
  v17 = OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_mapItem] = 0;
  v18 = OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature;
  v8[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_isCustomFeature] = 0;
  *v15 = a1;
  v15[1] = a2;
  v19 = v8;
  swift_bridgeObjectRelease();
  *v16 = a3;
  v16[1] = a4;
  swift_bridgeObjectRelease();
  v20 = (double *)&v19[OBJC_IVAR____TtC15_MapKit_SwiftUI17MapBridgingMarker_coordinate];
  *v20 = a7;
  v20[1] = a8;
  v21 = *(void **)&v8[v17];
  *(_QWORD *)&v8[v17] = a5;
  v22 = a5;

  v8[v18] = a6;
  v24.receiver = v19;
  v24.super_class = (Class)type metadata accessor for MapBridgingMarker();
  return objc_msgSendSuper2(&v24, sel_init);
}

id sub_21C58A75C(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;

  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    v4 = sub_21C5E3D60();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v5 = 4;
      while (1)
      {
        v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v7 = (void *)MEMORY[0x22077F1B4](v5 - 4, a1);
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
            goto LABEL_12;
        }
        else
        {
          v7 = *(void **)(a1 + 8 * v5);
          swift_unknownObjectRetain();
          v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_12:
            __break(1u);
            goto LABEL_13;
          }
        }
        v9 = objc_msgSend(v7, sel_isEqual_, a2);
        swift_unknownObjectRelease();
        if ((v9 & 1) == 0)
        {
          ++v5;
          if (v8 != v4)
            continue;
        }
        goto LABEL_15;
      }
    }
  }
  v9 = 0;
LABEL_15:
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_21C58A874(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t result;

  if (a2)
  {
    swift_retain();
    swift_retain();
    return sub_21C55DA30(a3);
  }
  return result;
}

unint64_t sub_21C58A8AC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t result;

  if (a2)
  {
    swift_release();
    swift_release();
    return sub_21C55DAAC(a3);
  }
  return result;
}

uint64_t sub_21C58A8E8()
{
  return swift_deallocObject();
}

uint64_t sub_21C58A8F8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C58A92C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 32);
  sub_21C582AC0(*(void **)(v0 + 24));
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = 1;
  return result;
}

uint64_t sub_21C58A98C()
{
  return objectdestroy_60Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_21C58A99C()
{
  uint64_t v0;

  return sub_21C5897A0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_21C58A9A4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_21C58A9D0()
{
  uint64_t v0;

  return sub_21C583F84(*(_QWORD **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_21C58A9D8@<X0>(_BYTE *a1@<X8>)
{
  return sub_21C52962C(a1);
}

uint64_t sub_21C58A9F8()
{
  return objectdestroy_60Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_21C58AA08()
{
  uint64_t v0;

  sub_21C5829BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), (SEL *)&selRef_deselectAnnotation_animated_);
}

uint64_t sub_21C58AA34()
{
  return objectdestroy_60Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_21C58AA44()
{
  uint64_t v0;

  sub_21C5829BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), (SEL *)&selRef_selectAnnotation_animated_);
}

uint64_t objectdestroy_71Tm()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_21C58AA98(char **a1)
{
  uint64_t v1;

  return sub_21C580510(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_21C58AAB4(uint64_t a1)
{
  return sub_21C58AB14(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C581454) & 1;
}

uint64_t sub_21C58AAD4(uint64_t a1)
{
  return sub_21C58AB14(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C581770) & 1;
}

uint64_t sub_21C58AAF4(uint64_t a1)
{
  return sub_21C58AB14(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_21C581A8C) & 1;
}

uint64_t sub_21C58AB14(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]) & 1;
}

void sub_21C58AB3C()
{
  uint64_t v0;

  sub_21C581DA8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_21C58AB48()
{
  return objectdestroy_60Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_21C58AB58()
{
  return objectdestroy_60Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_60Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  return swift_deallocObject();
}

unint64_t sub_21C58ABA4(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_21C55DA30(result);
  return result;
}

uint64_t sub_21C58ABB8()
{
  uint64_t v0;

  return sub_21C582AC0(*(void **)(v0 + 24));
}

void type metadata accessor for MapBridgingViewCoordinator.ResolvedCameraPosition()
{
  JUMPOUT(0x22077F91CLL);
}

uint64_t sub_21C58ABE8()
{
  uint64_t v0;

  swift_release();
  sub_21C55DAAC(*(_QWORD *)(v0 + 56));
  return swift_deallocObject();
}

void sub_21C58AC14()
{
  uint64_t v0;

  sub_21C57E384(*(_QWORD *)(v0 + 48), v0 + 56, *(_BYTE *)(v0 + 97));
}

uint64_t sub_21C58AC2C()
{
  uint64_t v0;

  sub_21C55DAAC(*(_QWORD *)(v0 + 48));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_21C58AC60()
{
  uint64_t v0;

  sub_21C57E62C(v0 + 48, *(_QWORD *)(v0 + 96), *(void (**)(void))(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t sub_21C58AC78()
{
  return swift_deallocObject();
}

void sub_21C58AC88()
{
  _QWORD *v0;

  *((_BYTE *)v0 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x210)) = 0;
}

uint64_t sub_21C58ACA8(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_255289410);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_21C57DE20((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_21C524980((uint64_t)v8, &qword_2552894E8);
    v13 = 0;
  }
  else
  {
    sub_21C52DB08((uint64_t)v8, (uint64_t)v12, qword_255289410);
    MEMORY[0x22077ECE0](v9);
    sub_21C524980((uint64_t)v12, qword_255289410);
    v14 = type metadata accessor for KeyframeAnimationState();
    v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v5, 1, v14) != 1;
    sub_21C524980((uint64_t)v5, (uint64_t *)&unk_255289560);
  }
  v15 = *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x248));
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = v13;
  *(_QWORD *)(v16 + 32) = a1;
  swift_bridgeObjectRetain();
  v17 = a1;
  sub_21C5E2EE4();
  return swift_release();
}

unint64_t sub_21C58AE9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;

  v3 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x208));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  result = sub_21C58A874(*v3, v4, v6);
  if (v4)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
    MEMORY[0x22077ECE0](&v13, v8);
    v9 = v13;
    if (a1 == 2)
    {
      if (v13 >> 61 == 4)
      {
        if (*(_BYTE *)(v13 + 16) == 1)
          goto LABEL_12;
        goto LABEL_14;
      }
    }
    else
    {
      if (a1 != 1)
      {
        if (!a1 && v13 >> 61 == 4)
          goto LABEL_13;
LABEL_12:
        sub_21C58A8AC(v5, v4, v6);
        return sub_21C55DAAC(v9);
      }
      if (v13 >> 61 == 4)
      {
        if ((*(_BYTE *)(v13 + 16) & 1) == 0)
          goto LABEL_12;
LABEL_14:
        v11 = *(_QWORD *)((v13 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        v12 = (_QWORD *)swift_allocObject();
        v12[2] = v5;
        v12[3] = v4;
        v12[4] = v6;
        v12[5] = v11;
        sub_21C55DA30(v11);
        sub_21C58A874(v5, v4, v6);
        sub_21C55DA30(v11);
        sub_21C5E2EE4();
        sub_21C58A8AC(v5, v4, v6);
        swift_release();
        sub_21C55DAAC(v11);
        return sub_21C55DAAC(v9);
      }
    }
LABEL_13:
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = v5;
    v10[3] = v4;
    v10[4] = v6;
    swift_retain();
    swift_retain();
    sub_21C55DA30(v6);
    sub_21C5E2EE4();
    sub_21C58A8AC(v5, v4, v6);
    swift_release();
    return sub_21C55DAAC(v9);
  }
  return result;
}

unint64_t sub_21C58B14C(void *a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t result;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v2 = v1;
  v4 = (_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x208));
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[2];
  result = sub_21C58A874(*v4, v6, v7);
  if (v6)
  {
    v14 = v5;
    v15 = v6;
    v16 = v7;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
    MEMORY[0x22077ECE0](&v17, v9);
    v10 = v17;
    sub_21C55DAAC(v17);
    if (v10 >> 61 != 4 || (objc_msgSend(a1, sel_hasUserLocation, v5, v6, v7) & 1) == 0)
    {
      objc_msgSend(a1, sel_setUserTrackingMode_, 0, v14, v15, v16);
      v11 = (_QWORD *)swift_allocObject();
      v11[2] = v5;
      v11[3] = v6;
      v11[4] = v7;
      v11[5] = v2;
      v11[6] = a1;
      sub_21C58A874(v5, v6, v7);
      v12 = v2;
      v13 = a1;
      sub_21C5E2EE4();
      swift_release();
    }
    return sub_21C58A8AC(v5, v6, v7);
  }
  return result;
}

void sub_21C58B280()
{
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C58B2D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  MEMORY[0x24BDAC7A8](a1);
  sub_21C5E37F0();
  v1 = sub_21C5E3BB0();
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  sub_21C57DBD8();
}

uint64_t sub_21C58B37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v1) == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, v4, v1);
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {
    *(_QWORD *)(v7 - 112) = 0;
    MEMORY[0x22077ECE0](v1);
    sub_21C5C9084(v7 - 112, v0);
    sub_21C5E37CC();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v1);
}

id sub_21C58B43C()
{
  return sub_21C589CDC();
}

uint64_t objectdestroy_48Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_21C55DAAC(*(_QWORD *)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_21C58B498()
{
  uint64_t v0;

  return sub_21C584B48(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

unint64_t sub_21C58B4BC()
{
  uint64_t v0;

  return sub_21C5848F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_21C58B4CC()
{
  uint64_t v0;

  return sub_21C58487C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_21C58B4DC()
{
  uint64_t v0;

  return sub_21C5847B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t objectdestroy_125Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_21C55DAAC(*(_QWORD *)(v0 + 32));
  sub_21C55DAAC(*(_QWORD *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_21C58B528()
{
  uint64_t v0;

  return sub_21C58473C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t objectdestroy_57Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_21C55DAAC(*(_QWORD *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_21C58B56C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2552894D8);
  return sub_21C5E37CC();
}

uint64_t sub_21C58B5C4()
{
  uint64_t v0;

  sub_21C55DAAC(*(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_21C58B5E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_21C58B614()
{
  uint64_t v0;

  return sub_21C5845E4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_21C58B624(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_21C58B668(unint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {
    swift_release();
    swift_release();
    return sub_21C55DAAC(a3);
  }
  else
  {
    sub_21C55DAAC(a1);
    return swift_release();
  }
}

uint64_t sub_21C58B6C8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_21C58B6D0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for _MapContentInputs(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_21C58B75C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v19 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    v6 = *(int *)(a3 + 108);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_21C5E32C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    v10 = (int *)type metadata accessor for _MapContentInputs(0);
    v11 = v10[5];
    v12 = v7 + v11;
    v13 = v8 + v11;
    v14 = sub_21C5E2ED8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = v10[6];
    v16 = v7 + v15;
    v17 = v8 + v15;
    v18 = sub_21C5E346C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    *(_DWORD *)(v7 + v10[7]) = *(_DWORD *)(v8 + v10[7]);
  }
  return v3;
}

uint64_t sub_21C58B86C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1 + *(int *)(a2 + 108);
  v3 = sub_21C5E32C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = type metadata accessor for _MapContentInputs(0);
  v5 = v2 + *(int *)(v4 + 20);
  v6 = sub_21C5E2ED8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v2 + *(int *)(v4 + 24);
  v8 = sub_21C5E346C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_21C58B900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 108);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_21C5E32C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  v9 = (int *)type metadata accessor for _MapContentInputs(0);
  v10 = v9[5];
  v11 = v6 + v10;
  v12 = v7 + v10;
  v13 = sub_21C5E2ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = v9[6];
  v15 = v6 + v14;
  v16 = v7 + v14;
  v17 = sub_21C5E346C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  *(_DWORD *)(v6 + v9[7]) = *(_DWORD *)(v7 + v9[7]);
  return a1;
}

_DWORD *sub_21C58B9E4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  v4 = *(int *)(a3 + 108);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_21C5E32C8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  v8 = (int *)type metadata accessor for _MapContentInputs(0);
  v9 = v8[5];
  v10 = &v5[v9];
  v11 = &v6[v9];
  v12 = sub_21C5E2ED8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = v8[6];
  v14 = &v5[v13];
  v15 = &v6[v13];
  v16 = sub_21C5E346C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  *(_DWORD *)&v5[v8[7]] = *(_DWORD *)&v6[v8[7]];
  return a1;
}

uint64_t sub_21C58BB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 108);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_21C5E32C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  v9 = (int *)type metadata accessor for _MapContentInputs(0);
  v10 = v9[5];
  v11 = v6 + v10;
  v12 = v7 + v10;
  v13 = sub_21C5E2ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = v9[6];
  v15 = v6 + v14;
  v16 = v7 + v14;
  v17 = sub_21C5E346C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *(_DWORD *)(v6 + v9[7]) = *(_DWORD *)(v7 + v9[7]);
  return a1;
}

uint64_t sub_21C58BBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 108);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_21C5E32C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  v9 = (int *)type metadata accessor for _MapContentInputs(0);
  v10 = v9[5];
  v11 = v6 + v10;
  v12 = v7 + v10;
  v13 = sub_21C5E2ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = v9[6];
  v15 = v6 + v14;
  v16 = v7 + v14;
  v17 = sub_21C5E346C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  *(_DWORD *)(v6 + v9[7]) = *(_DWORD *)(v7 + v9[7]);
  return a1;
}

uint64_t sub_21C58BCD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C58BCDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 108);
  v5 = type metadata accessor for _MapContentInputs(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_21C58BD1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C58BD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 108);
  v6 = type metadata accessor for _MapContentInputs(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

void sub_21C58BD6C()
{
  unint64_t v0;

  sub_21C596C38(319, qword_255289720, (uint64_t *)&unk_255289560, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_21C58BE2C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    v9 = *((_BYTE *)a2 + 24);
    swift_retain();
    sub_21C531A90(v8, v9);
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v10 = a2[6];
    v11 = a2[7];
    v12 = a2[8];
    v13 = *((_BYTE *)a2 + 72);
    sub_21C58C04C(v10, v11, v12, v13);
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    *(_BYTE *)(a1 + 72) = v13;
    v14 = a3[12];
    v15 = (char *)(a1 + v14);
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for KeyframeAnimationState();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v15, v16, v21);
      v22 = *(int *)(v17 + 20);
      v37 = &v15[v22];
      v23 = &v16[v22];
      v24 = sub_21C5E2D64();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      v25(v37, v23, v24);
      v25(&v15[*(int *)(v17 + 24)], &v16[*(int *)(v17 + 24)], v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v26 = __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
    *(_QWORD *)&v15[*(int *)(v26 + 28)] = *(_QWORD *)&v16[*(int *)(v26 + 28)];
    v27 = a3[13];
    v28 = (_QWORD *)(a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = v29[2];
    swift_retain();
    swift_retain();
    swift_retain();
    sub_21C55DA30(v31);
    v28[2] = v31;
    v32 = a3[14];
    v33 = (_QWORD *)(a1 + v32);
    v34 = (uint64_t *)((char *)a2 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
  }
  swift_retain();
  return a1;
}

uint64_t sub_21C58C04C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_21C531C1C(result);
  else
    return swift_retain();
}

uint64_t sub_21C58C058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  swift_release();
  sub_21C531A84(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  sub_21C531BE4(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
  v4 = a1 + *(int *)(a2 + 48);
  v5 = type metadata accessor for KeyframeAnimationState();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    v7 = v4 + *(int *)(v5 + 20);
    v8 = sub_21C5E2D64();
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v9(v7, v8);
    v9(v4 + *(int *)(v5 + 24), v8);
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
  swift_release();
  v10 = a1 + *(int *)(a2 + 52);
  swift_release();
  swift_release();
  sub_21C55DAAC(*(_QWORD *)(v10 + 16));
  return swift_release();
}

uint64_t sub_21C58C180(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  int *v37;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_21C531A90(v7, v8);
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_BYTE *)(a2 + 72);
  sub_21C58C04C(v9, v10, v11, v12);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = v12;
  v13 = a3[12];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for KeyframeAnimationState();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v14, v15, v19);
    v20 = *(int *)(v16 + 20);
    v21 = &v14[v20];
    v37 = a3;
    v22 = &v15[v20];
    v23 = sub_21C5E2D64();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    v25 = v22;
    a3 = v37;
    v24(v21, v25, v23);
    v24(&v14[*(int *)(v16 + 24)], &v15[*(int *)(v16 + 24)], v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v26 = __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
  *(_QWORD *)&v14[*(int *)(v26 + 28)] = *(_QWORD *)&v15[*(int *)(v26 + 28)];
  v27 = a3[13];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = v29[2];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_21C55DA30(v31);
  v28[2] = v31;
  v32 = a3[14];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  swift_retain();
  return a1;
}

uint64_t sub_21C58C37C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  int *v54;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_21C531A90(v6, v7);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_21C531A84(v8, v9);
  v10 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v10;
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  v14 = *(_BYTE *)(a2 + 72);
  sub_21C58C04C(v11, v12, v13, v14);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v12;
  *(_QWORD *)(a1 + 64) = v13;
  *(_BYTE *)(a1 + 72) = v14;
  sub_21C531BE4(v15, v16, v17, v18);
  v19 = a3[12];
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v22 = type metadata accessor for KeyframeAnimationState();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v20, v21, v46);
      v47 = *(int *)(v22 + 20);
      v48 = &v20[v47];
      v49 = &v21[v47];
      v50 = a3;
      v51 = sub_21C5E2D64();
      v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 24);
      v52(v48, v49, v51);
      v53 = v51;
      a3 = v50;
      v52(&v20[*(int *)(v22 + 24)], &v21[*(int *)(v22 + 24)], v53);
      goto LABEL_7;
    }
    sub_21C52A88C((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for KeyframeAnimationState);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v20, v21, v27);
  v28 = *(int *)(v22 + 20);
  v29 = &v20[v28];
  v30 = &v21[v28];
  v54 = a3;
  v31 = sub_21C5E2D64();
  v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
  v32(v29, v30, v31);
  v33 = v31;
  a3 = v54;
  v32(&v20[*(int *)(v22 + 24)], &v21[*(int *)(v22 + 24)], v33);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_7:
  v35 = __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
  *(_QWORD *)&v20[*(int *)(v35 + 28)] = *(_QWORD *)&v21[*(int *)(v35 + 28)];
  swift_retain();
  swift_release();
  v36 = a3[13];
  v37 = a1 + v36;
  v38 = a2 + v36;
  *(_QWORD *)(a1 + v36) = *(_QWORD *)(a2 + v36);
  swift_retain();
  swift_release();
  *(_QWORD *)(v37 + 8) = *(_QWORD *)(v38 + 8);
  swift_retain();
  swift_release();
  v39 = *(_QWORD *)(v38 + 16);
  sub_21C55DA30(v39);
  v40 = *(_QWORD *)(v37 + 16);
  *(_QWORD *)(v37 + 16) = v39;
  sub_21C55DAAC(v40);
  v41 = a3[14];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_21C58C680(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v23;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v6 = a3[12];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  v9 = type metadata accessor for KeyframeAnimationState();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    v13 = *(int *)(v9 + 20);
    v23 = &v7[v13];
    v14 = &v8[v13];
    v15 = sub_21C5E2D64();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v16(v23, v14, v15);
    v16(&v7[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
  *(_QWORD *)&v7[*(int *)(v17 + 28)] = *(_QWORD *)&v8[*(int *)(v17 + 28)];
  v18 = a3[13];
  v19 = a3[14];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  return a1;
}

uint64_t sub_21C58C820(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v7;
  sub_21C531A84(v8, v9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_BYTE *)(a2 + 72);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(_BYTE *)(a1 + 72);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 72) = v11;
  sub_21C531BE4(v12, v13, v14, v15);
  v16 = a3[12];
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = type metadata accessor for KeyframeAnimationState();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v17, v18, v36);
      v37 = *(int *)(v19 + 20);
      v38 = &v17[v37];
      v39 = &v18[v37];
      v40 = sub_21C5E2D64();
      v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 40);
      v41(v38, v39, v40);
      v41(&v17[*(int *)(v19 + 24)], &v18[*(int *)(v19 + 24)], v40);
      goto LABEL_7;
    }
    sub_21C52A88C((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for KeyframeAnimationState);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_255289560);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v17, v18, v24);
  v25 = *(int *)(v19 + 20);
  v42 = &v17[v25];
  v26 = &v18[v25];
  v27 = sub_21C5E2D64();
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32);
  v28(v42, v26, v27);
  v28(&v17[*(int *)(v19 + 24)], &v18[*(int *)(v19 + 24)], v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_7:
  v30 = __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
  *(_QWORD *)&v17[*(int *)(v30 + 28)] = *(_QWORD *)&v18[*(int *)(v30 + 28)];
  swift_release();
  v31 = a3[13];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  swift_release();
  *(_QWORD *)(v32 + 8) = *(_QWORD *)(v33 + 8);
  swift_release();
  v34 = *(_QWORD *)(v32 + 16);
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
  sub_21C55DAAC(v34);
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  swift_release();
  return a1;
}

uint64_t sub_21C58CABC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C58CAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t sub_21C58CB48()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C58CB54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21C58CBCC()
{
  return swift_allocateGenericValueMetadata();
}

void sub_21C58CBD4()
{
  type metadata accessor for MapSelectionManagerBox();
}

void sub_21C58CC38()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_21C5E37F0();
  sub_21C5E3BB0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for _MapContentInputs(319);
    if (v1 <= 0x3F)
    {
      sub_21C596C38(319, &qword_2552897A8, (uint64_t *)&unk_255289560, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF4870]);
      if (v2 <= 0x3F)
      {
        sub_21C596C90(319, (unint64_t *)&unk_2552897B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEDCA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
        if (v3 <= 0x3F)
        {
          sub_21C596C90(319, (unint64_t *)&qword_255289D70, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB4A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
          if (v4 <= 0x3F)
          {
            sub_21C596C90(319, &qword_255288B60, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE8C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
            if (v5 <= 0x3F)
            {
              sub_21C596C90(319, (unint64_t *)&unk_255288B68, (uint64_t (*)(uint64_t))MEMORY[0x24BDED130], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
              if (v6 <= 0x3F)
              {
                sub_21C596C90(319, &qword_2552897C0, (uint64_t (*)(uint64_t))type metadata accessor for MapControlsConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
                if (v7 <= 0x3F)
                  swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *sub_21C58CE34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  void **v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void **v92;
  _QWORD *v93;
  char v94;
  void **v95;
  void *v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  void **v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t, uint64_t);
  id v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  void *v113;
  unsigned __int8 *v114;
  int v115;
  uint64_t v116;
  unint64_t v117;
  int v118;
  int v119;
  uint64_t v120;
  unint64_t v121;
  void (*v122)(unint64_t, unint64_t, uint64_t);
  _QWORD *v123;
  _QWORD *v124;
  _QWORD *v125;
  _QWORD *v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  _QWORD *v131;
  _QWORD *v132;
  unsigned int v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  _QWORD *v137;
  _QWORD *v138;
  unsigned int v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  _QWORD *v143;
  _QWORD *v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  char *v149;
  char *v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  char v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unsigned int v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  unint64_t v175;
  _BYTE *v176;
  _BYTE *v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  unint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  _QWORD *v184;
  unint64_t v185;
  _BYTE *v186;
  unsigned __int8 *v187;
  unsigned int v188;
  uint64_t v189;
  unint64_t v190;
  size_t v191;
  unint64_t v192;
  _WORD *v193;
  char *v194;
  char *v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  char v199;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t v216;
  size_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  size_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  size_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  size_t v237;
  size_t v238;
  uint64_t v239;
  uint64_t __n;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unsigned int v249;
  unsigned int v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  size_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  uint64_t v276;
  int v277;
  uint64_t v278;
  int v279;
  int v280;
  unint64_t v281;
  int v282;
  unsigned int v283;
  int v284;
  unint64_t v285;
  int v286;
  unint64_t v287;
  size_t v288;
  uint64_t v290;
  uint64_t v291;
  unint64_t v292;
  uint64_t v293;
  uint64_t v294;
  _QWORD *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v302;
  uint64_t v303;
  char v304;
  uint64_t v305;
  char v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;

  v248 = *(_QWORD *)(a3 + 16);
  v3 = *(_QWORD *)(v248 - 8);
  v239 = *(_QWORD *)(a3 + 24);
  v4 = *(_QWORD *)(v239 - 8);
  v286 = *(_DWORD *)(v4 + 80) | *(_DWORD *)(v3 + 80);
  v302 = v286 & 0xF8 | 7u;
  v242 = v3;
  v5 = *(_QWORD *)(v3 + 64);
  v247 = v4;
  v6 = *(_QWORD *)(v4 + 64);
  if (!*(_DWORD *)(v3 + 84))
    ++v5;
  if (!*(_DWORD *)(v4 + 84))
    ++v6;
  v237 = v6;
  v238 = v5;
  if (v5 <= v6)
    v5 = v6;
  if (v5 <= 8)
    v5 = 8;
  v287 = v5;
  v262 = sub_21C5E32C8();
  v7 = *(_QWORD *)(v262 - 8);
  v284 = *(_DWORD *)(v7 + 80);
  v259 = sub_21C5E2ED8();
  v8 = *(_QWORD *)(v259 - 8);
  v282 = *(_DWORD *)(v8 + 80);
  v294 = v282;
  v263 = sub_21C5E346C();
  v9 = *(_QWORD *)(v263 - 8);
  v280 = *(_DWORD *)(v9 + 80);
  v293 = v280;
  v305 = v284 & 0xFC | v282 | v280 | 3u;
  v258 = v7;
  v260 = v9;
  v261 = v8;
  v264 = *(_QWORD *)(v7 + 64);
  v266 = *(_QWORD *)(v8 + 64);
  v268 = *(_QWORD *)(v9 + 64);
  v254 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  v10 = *(_QWORD *)(v254 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v255 = sub_21C5E2D64();
  v12 = *(_QWORD *)(v255 - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v14 = *(_DWORD *)(v12 + 84);
  v279 = v13 | v11;
  v308 = (v13 | v11);
  v15 = v13;
  v251 = *(_QWORD *)(v10 + 64) + v13;
  v252 = v10;
  v253 = v12;
  v16 = *(_QWORD *)(v12 + 64);
  v241 = v16 + v13;
  v17 = ((v241 + (v251 & ~(unint64_t)v13)) & ~(unint64_t)v13) + v16;
  v250 = v14;
  v249 = *(_DWORD *)(v10 + 84);
  v272 = v14 | v249;
  v256 = v17;
  v257 = v15;
  if (!(v14 | v249))
    ++v17;
  v288 = v17;
  v270 = sub_21C5E31A8();
  v18 = *(_QWORD *)(v270 - 8);
  v277 = *(_DWORD *)(v18 + 80);
  v19 = v277;
  v20 = v277 | 7;
  v21 = *(_QWORD *)(v18 + 64);
  if (v21 <= 8)
    v22 = 8;
  else
    v22 = *(_QWORD *)(v18 + 64);
  v297 = v22;
  v291 = sub_21C5E2E78();
  v23 = *(_QWORD *)(v291 - 8);
  v275 = *(_DWORD *)(v23 + 80);
  v24 = v275;
  v25 = *(_QWORD *)(v23 + 64);
  if (v25 <= 8)
    v26 = 8;
  else
    v26 = *(_QWORD *)(v23 + 64);
  v299 = v26;
  v27 = sub_21C5E32E0();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_DWORD *)(v28 + 80);
  v30 = v29 & 0xF8;
  v243 = v28;
  v244 = v27;
  v31 = *(_QWORD *)(v28 + 64);
  if (v31 <= 8)
    v31 = 8;
  v292 = v31;
  v32 = sub_21C5E3088();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(_DWORD *)(v33 + 80);
  v245 = v33;
  v246 = v32;
  if (*(_QWORD *)(v33 + 64) <= 8uLL)
    v35 = 8;
  else
    v35 = *(_QWORD *)(v33 + 64);
  v36 = 8;
  v296 = v277 | 7;
  v269 = v18;
  v37 = *(_DWORD *)(v18 + 84);
  v290 = v23;
  v38 = *(_DWORD *)(v23 + 84);
  v39 = v20 | v275;
  v273 = v38;
  if (v37 > v38)
    v38 = *(_DWORD *)(v18 + 84);
  if (v38 <= 0x7FFFFFFE)
    v38 = 2147483646;
  v274 = v38;
  v271 = v277 + 2;
  v40 = ((v25
        + 7
        + ((v21 + v275 + (v271 & ~(unint64_t)v277)) & ~(unint64_t)v275)) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v41 = ((v275 + 3) & ~(unint64_t)v275) + v25;
  v42 = ((v275 + 2) & ~(unint64_t)v275) + v25;
  if (v42
     + ((v40
       + v275
       + ((v41 + v39 + ((v40 + v275) & ~(unint64_t)v275)) & ~v39)) & ~(unint64_t)v275)
     + 6 > 8)
    v36 = v42
        + ((v40
          + v275
          + ((v41 + v39 + ((v40 + v275) & ~(unint64_t)v275)) & ~v39)) & ~(unint64_t)v275)
        + 6;
  v43 = v305 | v308 | v277 | v302 | v275 | v30 | v34 & 0xF8 | 7;
  v44 = *a2;
  *a1 = *a2;
  if (v43 == 7 && ((v286 | v284 | v282 | v280 | v279 | v277 | v275 | v29 | v34) & 0x100000) == 0)
  {
    v45 = v286 & 0xF8 | 7u;
    __n = v287 + ((v45 + 16) & ~v45) + 1;
    v276 = v264 + v282;
    v278 = v266 + v280;
    v281 = ((v268
           + 3
           + ((v278 + (v276 & ~(unint64_t)v282)) & ~(unint64_t)v280)) & 0xFFFFFFFFFFFFFFFCLL)
         + (v308 | 7)
         + 4;
    v46 = v30 | 7;
    if (((v36
         + ((v39
           + 82
           + ((v35
             + ((v292
               + 1
               + (v34 & 0xF8 | 7)
               + ((v299
                 + v46
                 + 1
                 + ((v297
                   + (v24 | 7)
                   + 1
                   + ((v19
                     + 8
                     + ((v288
                       + ((v308 + 16) & ~v308)
                       + ((v281 + ((v305 + ((__n + ((v45 + 200) & ~v45) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v305)) & ~(v308 | 7))
                       + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v20)) & ~(v24 | 7))) & ~v46)) & ~(v34 & 0xF8 | 7))
             + 24) & 0xFFFFFFFFFFFFFFF8)) & ~v39)
         + 104) & 0xFFFFFFFFFFFFFFF8)
       + 9 <= 0x18)
    {
      v230 = v288 + ((v308 + 16) & ~v308);
      v231 = v19 + 8;
      v228 = v20 | v24;
      v229 = v24 | 7;
      v232 = v297 + (v24 | 7) + 1;
      v233 = v46;
      v234 = v299 + v46 + 1;
      v235 = v292 + 1;
      v236 = v34 & 0xF8 | 7;
      v265 = v39 + 82;
      v223 = v24;
      v224 = v19;
      v218 = ((v24 + 3) & ~v24) + v25;
      v219 = v24 + 3;
      v221 = v41 + v39;
      v283 = v37;
      v225 = ((v25 + 7 + ((v21 + v24 + ((v19 + 2) & ~v19)) & ~v24)) & 0xFFFFFFFFFFFFFFF8) + 8;
      v226 = v25 + 7;
      v267 = v21 + v24;
      v227 = v40 + v24;
      v220 = v24 + 2;
      v222 = ((v24 + 2) & ~v24) + v25;
      v285 = v36;
      a1[1] = a2[1];
      v47 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
      v48 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v47 = *v48;
      v47[1] = v48[1];
      v49 = (_QWORD *)(((unint64_t)v47 + 23) & 0xFFFFFFFFFFFFFFF8);
      v50 = (_QWORD *)(((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v49 = *v50;
      v49[1] = v50[1];
      v51 = (_QWORD *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8);
      v52 = (_QWORD *)(((unint64_t)v50 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v51 = *v52;
      v51[1] = v52[1];
      v53 = (_QWORD *)(((unint64_t)v51 + 23) & 0xFFFFFFFFFFFFFFF8);
      v54 = (_QWORD *)(((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v53 = *v54;
      v53[1] = v54[1];
      v55 = (_QWORD *)(((unint64_t)v53 + 23) & 0xFFFFFFFFFFFFFFF8);
      v56 = (_QWORD *)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v55 = *v56;
      v55[1] = v56[1];
      v57 = (_QWORD *)(((unint64_t)v55 + 23) & 0xFFFFFFFFFFFFFFF8);
      v58 = (_QWORD *)(((unint64_t)v56 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v57 = *v58;
      v57[1] = v58[1];
      v59 = v58[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_21C55DA30(v59);
      v57[2] = v59;
      v60 = ((unint64_t)v57 + 31) & 0xFFFFFFFFFFFFFFF8;
      v61 = ((unint64_t)v58 + 31) & 0xFFFFFFFFFFFFFFF8;
      v62 = *(_QWORD *)(v61 + 24);
      LODWORD(v63) = -1;
      if (v62 < 0xFFFFFFFF)
        v63 = *(_QWORD *)(v61 + 24);
      if ((int)v63 - 1 < 0)
      {
        if (v62)
        {
          *(_QWORD *)(v60 + 24) = v62;
          *(_QWORD *)(v60 + 32) = *(_QWORD *)(v61 + 32);
          (**(void (***)(unint64_t, unint64_t))(v62 - 8))(((unint64_t)v57 + 31) & 0xFFFFFFFFFFFFFFF8, ((unint64_t)v58 + 31) & 0xFFFFFFFFFFFFFFF8);
        }
        else
        {
          v71 = *(_OWORD *)v61;
          v72 = *(_OWORD *)(v61 + 16);
          *(_QWORD *)(v60 + 32) = *(_QWORD *)(v61 + 32);
          *(_OWORD *)v60 = v71;
          *(_OWORD *)(v60 + 16) = v72;
        }
        v67 = v286 & 0xF8 | 7u;
        v69 = ~v302;
        v73 = *(_QWORD *)(v61 + 40);
        *(_BYTE *)(v60 + 48) = *(_BYTE *)(v61 + 48);
        *(_QWORD *)(v60 + 40) = v73;
        v74 = *(_QWORD *)(v61 + 56);
        *(_BYTE *)(v60 + 64) = *(_BYTE *)(v61 + 64);
        *(_QWORD *)(v60 + 56) = v74;
        v68 = v308 | 7;
      }
      else
      {
        *(_OWORD *)v60 = *(_OWORD *)v61;
        v64 = *(_OWORD *)(v61 + 16);
        v65 = *(_OWORD *)(v61 + 32);
        v66 = *(_OWORD *)(v61 + 48);
        *(_BYTE *)(v60 + 64) = *(_BYTE *)(v61 + 64);
        *(_OWORD *)(v60 + 32) = v65;
        *(_OWORD *)(v60 + 48) = v66;
        *(_OWORD *)(v60 + 16) = v64;
        v67 = v286 & 0xF8 | 7u;
        v68 = v308 | 7;
        v69 = ~v302;
      }
      v75 = ~v305;
      v76 = ~v294;
      v77 = ~v293;
      v78 = ~v68;
      v303 = ~v308;
      v79 = (_QWORD *)(((unint64_t)v57 + 103) & 0xFFFFFFFFFFFFFFF8);
      v80 = (_QWORD *)(((unint64_t)v58 + 103) & 0xFFFFFFFFFFFFFFF8);
      *v79 = *v80;
      v81 = ((unint64_t)v79 + v67 + 8) & v69;
      v82 = ((unint64_t)v80 + v67 + 8) & v69;
      v83 = (_QWORD *)((v82 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (*v83 < 0xFFFFFFFFuLL)
      {
        memcpy((void *)v81, (const void *)v82, __n);
        v88 = __n;
        v89 = v258;
        v90 = v259;
        v91 = v257;
        goto LABEL_59;
      }
      *(_QWORD *)v81 = *(_QWORD *)v82;
      v84 = (_QWORD *)((v81 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v84 = *v83;
      v295 = (_QWORD *)(((unint64_t)v84 + v67 + 8) & v69);
      v85 = (void **)(((unint64_t)v83 + v67 + 8) & v69);
      v86 = *((unsigned __int8 *)v85 + v287);
      swift_retain();
      swift_retain();
      if (v86 >= 3)
      {
        if (v287 <= 3)
          v87 = v287;
        else
          v87 = 4;
        __asm { BR              X11 }
      }
      if (v86 == 2)
      {
        v90 = v259;
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v247 + 48))(v85, 1, v239))
        {
          v92 = v85;
          v93 = v295;
          memcpy(v295, v92, v237);
        }
        else
        {
          v93 = v295;
          (*(void (**)(void))(v247 + 16))();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v295, 0, 1, v239);
        }
        v91 = v257;
        v89 = v258;
        v88 = __n;
        v94 = 2;
      }
      else
      {
        if (v86 != 1)
        {
          v90 = v259;
          v96 = *v85;
          *v295 = *v85;
          *((_BYTE *)v295 + v287) = 0;
          v97 = v96;
          v91 = v257;
          v89 = v258;
          v88 = __n;
          goto LABEL_59;
        }
        v90 = v259;
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v242 + 48))(v85, 1, v248))
        {
          v95 = v85;
          v93 = v295;
          memcpy(v295, v95, v238);
        }
        else
        {
          v93 = v295;
          (*(void (**)(void))(v242 + 16))();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v242 + 56))(v295, 0, 1, v248);
        }
        v91 = v257;
        v89 = v258;
        v88 = __n;
        v94 = 1;
      }
      *((_BYTE *)v93 + v287) = v94;
LABEL_59:
      v98 = ~v91;
      v99 = ~v296;
      v100 = (_QWORD *)(((v81 | 7) + v88) & 0xFFFFFFFFFFFFFFF8);
      v101 = (void **)(((v82 | 7) + v88) & 0xFFFFFFFFFFFFFFF8);
      v102 = *v101;
      *v100 = *v101;
      v103 = ((unint64_t)v100 + v305 + 8) & v75;
      v104 = ((unint64_t)v101 + v305 + 8) & v75;
      v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16);
      v106 = v102;
      v105(v103, v104, v262);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v261 + 16))((v276 + v103) & v76, (v276 + v104) & v76, v90);
      v107 = (v278 + ((v276 + v103) & v76)) & v77;
      v108 = (v278 + ((v276 + v104) & v76)) & v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v260 + 16))(v107, v108, v263);
      *(_DWORD *)((v268 + 3 + v107) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((v268 + 3 + v108) & 0xFFFFFFFFFFFFFCLL);
      v109 = (v281 + v103) & v78;
      v110 = (v281 + v104) & v78;
      *(_QWORD *)v109 = *(_QWORD *)v110;
      v111 = (_QWORD *)((v109 + 15) & 0xFFFFFFFFFFFFFFF8);
      v112 = (_QWORD *)((v110 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v111 = *v112;
      v113 = (void *)(((unint64_t)v111 + v308 + 8) & v303);
      v114 = (unsigned __int8 *)(((unint64_t)v112 + v308 + 8) & v303);
      swift_retain();
      swift_retain();
      if (v272)
      {
        if (v249 >= v250)
          v115 = (*(uint64_t (**)(unsigned __int8 *))(v252 + 48))(v114);
        else
          v115 = (*(uint64_t (**)(unint64_t))(v253 + 48))((unint64_t)&v114[v251] & v98);
        v116 = v228;
        v117 = v292;
        if (v115)
        {
LABEL_72:
          memcpy(v113, v114, v288);
          v120 = v229;
          goto LABEL_76;
        }
      }
      else
      {
        v116 = v228;
        v117 = v292;
        if (v114[v256])
        {
          v118 = (v114[v256] - 1) << (8 * v256);
          if (v256 > 3)
            v118 = 0;
          if ((_DWORD)v256)
          {
            if (v256 <= 3)
              v119 = v256;
            else
              v119 = 4;
            __asm { BR              X11 }
          }
          if (v118 != -1)
            goto LABEL_72;
        }
      }
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v252 + 16))(v113, v114, v254);
      v121 = (unint64_t)&v114[v251] & v98;
      v122 = *(void (**)(unint64_t, unint64_t, uint64_t))(v253 + 16);
      v122(((unint64_t)v113 + v251) & v98, v121, v255);
      v122((v241 + (((unint64_t)v113 + v251) & v98)) & v98, (v241 + v121) & v98, v255);
      v120 = v229;
      if (!v272)
        *((_BYTE *)v113 + v256) = 0;
LABEL_76:
      v123 = (_QWORD *)(((v109 | 7) + v230) & 0xFFFFFFFFFFFFFFF8);
      v124 = (_QWORD *)(((v110 | 7) + v230) & 0xFFFFFFFFFFFFFFF8);
      *v123 = *v124;
      v125 = (_QWORD *)(((unint64_t)v123 + v231) & v99);
      v126 = (_QWORD *)(((unint64_t)v124 + v231) & v99);
      v127 = *((unsigned __int8 *)v126 + v297);
      swift_retain();
      if (v127 >= 2)
      {
        if (v297 <= 3)
          v128 = v297;
        else
          v128 = 4;
        __asm { BR              X11 }
      }
      v129 = ~v120;
      if (v127 == 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v269 + 16))(v125, v126, v270);
        v130 = 1;
      }
      else
      {
        *v125 = *v126;
        swift_retain();
        v130 = 0;
      }
      *((_BYTE *)v125 + v297) = v130;
      v131 = (_QWORD *)(((unint64_t)v125 + v232) & v129);
      v132 = (_QWORD *)(((unint64_t)v126 + v232) & v129);
      v133 = *((unsigned __int8 *)v132 + v299);
      if (v133 >= 2)
      {
        if (v299 <= 3)
          v134 = v299;
        else
          v134 = 4;
        __asm { BR              X12 }
      }
      v135 = ~v233;
      if (v133 == 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v290 + 16))(v131, v132, v291);
        v136 = 1;
      }
      else
      {
        *v131 = *v132;
        swift_retain();
        v136 = 0;
      }
      *((_BYTE *)v131 + v299) = v136;
      v137 = (_QWORD *)(((unint64_t)v131 + v234) & v135);
      v138 = (_QWORD *)(((unint64_t)v132 + v234) & v135);
      v139 = *((unsigned __int8 *)v138 + v117);
      if (v139 >= 2)
      {
        if (v117 <= 3)
          v140 = v117;
        else
          v140 = 4;
        __asm { BR              X12 }
      }
      v141 = ~v236;
      if (v139 == 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v243 + 16))(v137, v138, v244);
        v142 = 1;
      }
      else
      {
        *v137 = *v138;
        swift_retain();
        v142 = 0;
      }
      *((_BYTE *)v137 + v117) = v142;
      v143 = (_QWORD *)(((unint64_t)v137 + v235 + v236) & v141);
      v144 = (_QWORD *)(((unint64_t)v138 + v235 + v236) & v141);
      v145 = *((unsigned __int8 *)v144 + v35);
      if (v145 >= 2)
      {
        if (v35 <= 3)
          v146 = v35;
        else
          v146 = 4;
        __asm { BR              X12 }
      }
      v147 = v35 + 1;
      v309 = ~v116;
      if (v145 == 1)
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v245 + 16))(v143, v144, v246);
        v148 = 1;
      }
      else
      {
        *v143 = *v144;
        swift_retain();
        v148 = 0;
      }
      *((_BYTE *)v143 + v35) = v148;
      v149 = (char *)v143 + v147;
      v150 = (char *)v144 + v147;
      v151 = (unint64_t)(v149 + 7) & 0xFFFFFFFFFFFFFFF8;
      v152 = (unint64_t)(v150 + 7) & 0xFFFFFFFFFFFFFFF8;
      v153 = *(_QWORD *)v152;
      v154 = *(_BYTE *)(v152 + 8);
      sub_21C531A90(*(_QWORD *)v152, v154);
      *(_QWORD *)v151 = v153;
      *(_BYTE *)(v151 + 8) = v154;
      v155 = (unint64_t)(v149 + 23) & 0xFFFFFFFFFFFFFFF8;
      v156 = (unint64_t)(v150 + 23) & 0xFFFFFFFFFFFFFFF8;
      v157 = *(_QWORD *)v156;
      v158 = *(_QWORD *)(v156 + 8);
      v159 = *(_QWORD *)(v156 + 16);
      v160 = *(_QWORD *)(v156 + 24);
      v161 = *(_QWORD *)(v156 + 32);
      v162 = *(_QWORD *)(v156 + 40);
      v163 = *(_QWORD *)(v156 + 48);
      v164 = *(_QWORD *)(v156 + 56);
      v298 = *(_QWORD *)(v156 + 64);
      v300 = *(_QWORD *)(v156 + 72);
      v304 = *(_BYTE *)(v156 + 80);
      v306 = *(_BYTE *)(v156 + 81);
      sub_21C531870(*(_QWORD *)v156, v158, v159, v160, v161, v162, v163, v164, v298, v300, v304, v306);
      *(_QWORD *)v155 = v157;
      *(_QWORD *)(v155 + 8) = v158;
      *(_QWORD *)(v155 + 16) = v159;
      *(_QWORD *)(v155 + 24) = v160;
      *(_QWORD *)(v155 + 32) = v161;
      *(_QWORD *)(v155 + 40) = v162;
      *(_QWORD *)(v155 + 48) = v163;
      *(_QWORD *)(v155 + 56) = v164;
      *(_QWORD *)(v155 + 64) = v298;
      *(_QWORD *)(v155 + 72) = v300;
      *(_BYTE *)(v155 + 80) = v304;
      *(_BYTE *)(v155 + 81) = v306;
      v165 = (v265 + v155) & v309;
      v166 = (v265 + v156) & v309;
      v167 = *(unsigned __int8 *)(v166 + v285);
      if (v167 >= 2)
      {
        if (v285 <= 3)
          v168 = v285;
        else
          v168 = 4;
        __asm { BR              X12 }
      }
      v169 = v285 + 1;
      if (v167 != 1)
      {
        *(_QWORD *)v165 = *(_QWORD *)v166;
        *(_BYTE *)(v165 + v285) = 0;
        swift_retain();
LABEL_150:
        v194 = (char *)(v165 + v169);
        v195 = (char *)(v166 + v169);
        v196 = (v165 + v169 + 7) & 0xFFFFFFFFFFFFFFF8;
        v197 = (v166 + v169 + 7) & 0xFFFFFFFFFFFFFFF8;
        v198 = *(_QWORD *)v197;
        v199 = *(_BYTE *)(v197 + 8);
        sub_21C531A90(*(_QWORD *)v197, v199);
        *(_QWORD *)v196 = v198;
        *(_BYTE *)(v196 + 8) = v199;
        v200 = (unint64_t)(v194 + 23) & 0xFFFFFFFFFFFFFFF8;
        v201 = (unint64_t)(v195 + 23) & 0xFFFFFFFFFFFFFFF8;
        v202 = *(_QWORD *)v201;
        v203 = *(_QWORD *)(v201 + 8);
        LOBYTE(v196) = *(_BYTE *)(v201 + 16);
        sub_21C58A5E8(*(_QWORD *)v201, v203, v196, (uint64_t (*)(void))sub_21C531C4C);
        *(_QWORD *)v200 = v202;
        *(_QWORD *)(v200 + 8) = v203;
        *(_BYTE *)(v200 + 16) = v196;
        v204 = (unint64_t)(v194 + 47) & 0xFFFFFFFFFFFFFFF8;
        v205 = (unint64_t)(v195 + 47) & 0xFFFFFFFFFFFFFFF8;
        v206 = *(_QWORD *)v205;
        v207 = *(_QWORD *)(v205 + 8);
        LOBYTE(v196) = *(_BYTE *)(v205 + 16);
        sub_21C58A5E8(*(_QWORD *)v205, v207, v196, (uint64_t (*)(void))sub_21C531AAC);
        *(_QWORD *)v204 = v206;
        *(_QWORD *)(v204 + 8) = v207;
        *(_BYTE *)(v204 + 16) = v196;
        v208 = (unint64_t)(v194 + 71) & 0xFFFFFFFFFFFFFFF8;
        v209 = (unint64_t)(v195 + 71) & 0xFFFFFFFFFFFFFFF8;
        v210 = *(_QWORD *)v209;
        LOBYTE(v207) = *(_BYTE *)(v209 + 8);
        sub_21C531A90(*(_QWORD *)v209, v207);
        *(_QWORD *)v208 = v210;
        *(_BYTE *)(v208 + 8) = v207;
        v211 = (unint64_t)(v194 + 87) & 0xFFFFFFFFFFFFFFF8;
        v212 = (unint64_t)(v195 + 87) & 0xFFFFFFFFFFFFFFF8;
        v213 = *(_QWORD *)v212;
        LOBYTE(v207) = *(_BYTE *)(v212 + 8);
        sub_21C52EF74(*(_QWORD *)v212, v207);
        *(_QWORD *)v211 = v213;
        *(_BYTE *)(v211 + 8) = v207;
        v214 = (unint64_t)(v194 + 103) & 0xFFFFFFFFFFFFFFF8;
        v215 = (unint64_t)(v195 + 103) & 0xFFFFFFFFFFFFFFF8;
        v216 = *(_QWORD *)v215;
        LOBYTE(v207) = *(_BYTE *)(v215 + 8);
        sub_21C531A90(*(_QWORD *)v215, v207);
        *(_QWORD *)v214 = v216;
        *(_BYTE *)(v214 + 8) = v207;
        return a1;
      }
      v170 = ~v223;
      v171 = (v271 + v166) & ~v224;
      v307 = ~v224;
      if (v283 == v274)
      {
        if (!(*(unsigned int (**)(unint64_t))(v269 + 48))((v271 + v166) & ~v224))
          goto LABEL_120;
      }
      else
      {
        v172 = (v267 + v171) & v170;
        if (v273 == v274)
        {
          if (!(*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v290 + 48))((v267 + v171) & v170, v273, v291))
          {
LABEL_120:
            v172 = (v267 + v171) & v170;
            v173 = (_QWORD *)((v226 + v172) & 0xFFFFFFFFFFFFFFF8);
LABEL_124:
            *(_BYTE *)v165 = *(_BYTE *)v166;
            *(_BYTE *)(v165 | 1) = *(_BYTE *)(v166 | 1);
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v269 + 16))((v271 + v165) & v307, v171, v270);
            v175 = (v267 + ((v271 + v165) & v307)) & v170;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v290 + 16))(v175, v172, v291);
            *(_QWORD *)((v226 + v175) & 0xFFFFFFFFFFFFF8) = *v173;
            swift_retain();
            goto LABEL_126;
          }
        }
        else
        {
          v173 = (_QWORD *)((v226 + v172) & 0xFFFFFFFFFFFFFFF8);
          v174 = *v173;
          if (*v173 >= 0xFFFFFFFFuLL)
            LODWORD(v174) = -1;
          if ((v174 + 1) < 2)
            goto LABEL_124;
        }
      }
      memcpy((void *)v165, (const void *)v166, v225);
LABEL_126:
      v176 = (_BYTE *)((v227 + v165) & v170);
      v177 = (_BYTE *)((v227 + v166) & v170);
      if (v273 > 0xFE)
      {
        if (!(*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v290 + 48))((unint64_t)&v177[v219] & v170, v273, v291))goto LABEL_128;
      }
      else if (*v177 < 2u)
      {
LABEL_128:
        *v176 = *v177;
        *(_BYTE *)(((v227 + v165) & v170) + 1) = *(_BYTE *)(((v227 + v166) & v170) + 1);
        *(_BYTE *)(((v227 + v165) & v170) + 2) = *(_BYTE *)(((v227 + v166) & v170) + 2);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v290 + 16))((unint64_t)&v176[v219] & v170, (unint64_t)&v177[v219] & v170, v291);
        goto LABEL_131;
      }
      memcpy(v176, v177, v218);
LABEL_131:
      v178 = (unint64_t)&v176[v221] & v309;
      v179 = (unint64_t)&v177[v221] & v309;
      v180 = (v271 + v179) & v307;
      if (v283 == v274)
      {
        if (!(*(unsigned int (**)(unint64_t))(v269 + 48))((v271 + v179) & v307))
          goto LABEL_136;
      }
      else
      {
        v181 = (v267 + v180) & v170;
        if (v273 == v274)
        {
          if (!(*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v290 + 48))((v267 + v180) & v170, v273, v291))
          {
LABEL_136:
            v181 = (v267 + v180) & v170;
            v182 = (_QWORD *)((v226 + v181) & 0xFFFFFFFFFFFFFFF8);
LABEL_140:
            *(_BYTE *)v178 = *(_BYTE *)v179;
            *(_BYTE *)(v178 | 1) = *(_BYTE *)(v179 | 1);
            v184 = v182;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v269 + 16))((v271 + v178) & v307, v180, v270);
            v185 = (v267 + ((v271 + v178) & v307)) & v170;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v290 + 16))(v185, v181, v291);
            *(_QWORD *)((v226 + v185) & 0xFFFFFFFFFFFFF8) = *v184;
            swift_retain();
            goto LABEL_142;
          }
        }
        else
        {
          v182 = (_QWORD *)((v226 + v181) & 0xFFFFFFFFFFFFFFF8);
          v183 = *v182;
          if (*v182 >= 0xFFFFFFFFuLL)
            LODWORD(v183) = -1;
          if ((v183 + 1) < 2)
            goto LABEL_140;
        }
      }
      memcpy((void *)v178, (const void *)v179, v225);
LABEL_142:
      v186 = (_BYTE *)((v227 + v178) & v170);
      v187 = (unsigned __int8 *)((v227 + v179) & v170);
      if (v273 > 0xFE)
      {
        v190 = (unint64_t)&v187[v220] & v170;
        if (!(*(unsigned int (**)(unint64_t))(v290 + 48))(v190))
        {
          LOBYTE(v188) = *v187;
          v189 = v220;
          goto LABEL_148;
        }
      }
      else
      {
        v188 = *v187;
        if (v188 <= 1)
        {
          v189 = v220;
          v190 = (unint64_t)&v187[v220] & v170;
LABEL_148:
          *v186 = v188;
          v186[1] = v187[1];
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v290 + 16))((unint64_t)&v186[v189] & v170, v190, v291);
          v192 = v285;
          v191 = v222;
          goto LABEL_149;
        }
      }
      v191 = v222;
      memcpy(v186, v187, v222);
      v192 = v285;
LABEL_149:
      v193 = &v186[v191];
      *v193 = *(_WORD *)&v187[v191];
      v193[1] = *(_WORD *)&v187[v191 + 2];
      v193[2] = *(_WORD *)&v187[v191 + 4];
      *(_BYTE *)(v165 + v192) = 1;
      goto LABEL_150;
    }
  }
  v70 = v44 + ((v43 + 16) & ~v43);
  swift_retain();
  return (uint64_t *)v70;
}

uint64_t sub_21C58E544(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  id *v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  int v59;
  unint64_t v60;
  void (*v61)(unint64_t, uint64_t);
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int v99;
  int v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unsigned __int8 *v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unsigned __int8 *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;

  v3 = a1 + 23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = ((((((((((v3 & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFF8)
      + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  sub_21C55DAAC(*(_QWORD *)(v4 + 16));
  v5 = (v4 + 31) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 24);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF)
    v7 = *(_QWORD *)(v5 + 24);
  if ((int)v7 - 1 < 0 && v6)
    __swift_destroy_boxed_opaque_existential_0(v5);
  v8 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v10 = *(_DWORD *)(v8 + 84);
  v11 = *(_DWORD *)(v9 + 84);
  v12 = (*(_DWORD *)(v9 + 80) | *(_DWORD *)(v8 + 80)) & 0xF8 | 7u;
  v13 = v12 + 8;
  v14 = (v12 + 8 + ((v4 + 103) & 0xFFFFFFFFFFFFFFF8)) & ~v12;
  v15 = *(_QWORD *)(v8 + 64);
  v16 = *(_QWORD *)(v9 + 64);
  v17 = (v12 + 16) & ~v12;
  v18 = (_QWORD *)((v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v18 <= 0xFFFFFFFEuLL)
  {
    if (v10)
      v27 = *(_QWORD *)(v8 + 64);
    else
      v27 = v15 + 1;
    if (v11)
      v28 = *(_QWORD *)(v9 + 64);
    else
      v28 = v16 + 1;
    if (v27 <= v28)
      v27 = v28;
    if (v27 <= 8)
      v24 = 8;
    else
      v24 = v27;
  }
  else
  {
    v133 = *(_QWORD *)(a2 + 24);
    v136 = *(_QWORD *)(a2 + 16);
    v139 = (v12 + 16) & ~v12;
    v19 = ~v12;
    swift_release();
    swift_release();
    if (v10)
      v20 = v15;
    else
      v20 = v15 + 1;
    v21 = v11 == 0;
    v22 = (id *)(((unint64_t)v18 + v13) & v19);
    if (v21)
      v23 = v16 + 1;
    else
      v23 = v16;
    if (v20 <= v23)
      v20 = v23;
    if (v20 <= 8)
      v24 = 8;
    else
      v24 = v20;
    v25 = *((unsigned __int8 *)v22 + v24);
    if (v25 >= 3)
    {
      if (v24 <= 3)
        v26 = v24;
      else
        v26 = 4;
      __asm { BR              X12 }
    }
    if (v25 == 2)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(((unint64_t)v18 + v13) & v19, 1, v133))(*(void (**)(id *, uint64_t))(v9 + 8))(v22, v133);
    }
    else if (v25 == 1)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(((unint64_t)v18 + v13) & v19, 1, v136))(*(void (**)(id *, uint64_t))(v8 + 8))(v22, v136);
    }
    else
    {

    }
    v17 = v139;
  }
  v29 = (id *)((v14 + v17 + v24 + 8) & 0xFFFFFFFFFFFFFFF8);

  v30 = sub_21C5E32C8();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_DWORD *)(v31 + 80) & 0xFC;
  v33 = sub_21C5E2ED8();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(unsigned __int8 *)(v34 + 80);
  v36 = sub_21C5E346C();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = ((unint64_t)v29 + (v32 | v35 | v38 | 3) + 8) & ~(unint64_t)(v32 | v35 | v38 | 3);
  (*(void (**)(unint64_t, uint64_t))(v31 + 8))(v39, v30);
  v40 = *(_QWORD *)(v31 + 64) + v35;
  (*(void (**)(unint64_t, uint64_t))(v34 + 8))((v40 + v39) & ~v35, v33);
  v41 = *(_QWORD *)(v34 + 64) + v38;
  (*(void (**)(unint64_t, uint64_t))(v37 + 8))((v41 + ((v40 + v39) & ~v35)) & ~v38, v36);
  v42 = (*(_QWORD *)(v37 + 64) + ((v41 + (v40 & ~v35)) & ~v38) + 3) & 0xFFFFFFFFFFFFFFFCLL;
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  v43 = *(_QWORD *)(v137 - 8);
  LODWORD(v36) = *(unsigned __int8 *)(v43 + 80);
  v44 = sub_21C5E2D64();
  v45 = *(_QWORD *)(v44 - 8);
  v46 = *(_DWORD *)(v45 + 80);
  v47 = *(_DWORD *)(v45 + 80) | v36;
  v48 = (v39 + v42 + (v47 | 7) + 4) & ~(v47 | 7);
  swift_release();
  swift_release();
  v49 = (v47 + ((v48 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v47;
  v50 = *(unsigned int *)(v43 + 84);
  v51 = *(_DWORD *)(v45 + 84);
  v52 = ~v46;
  v53 = *(_QWORD *)(v43 + 64) + v46;
  v54 = *(_QWORD *)(v45 + 64);
  v55 = v54 + v46;
  v56 = ((v54 + v46 + (v53 & ~v46)) & ~v46) + v54;
  v57 = v51 | v50;
  v134 = v52;
  if (v51 | v50)
  {
    if (v50 >= v51)
    {
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v43 + 48))(v49, v50, v137))
        goto LABEL_56;
    }
    else if ((*(unsigned int (**)(unint64_t))(v45 + 48))((v53 + v49) & v52))
    {
      goto LABEL_56;
    }
    goto LABEL_55;
  }
  if (!*(_BYTE *)(v49 + v56))
    goto LABEL_55;
  v58 = (*(unsigned __int8 *)(v49 + v56) - 1) << (8 * v56);
  if (v56 > 3)
    v58 = 0;
  if ((_DWORD)v56)
  {
    if (v56 <= 3)
      v59 = v56;
    else
      v59 = 4;
    __asm { BR              X11 }
  }
  if (v58 == -1)
  {
LABEL_55:
    (*(void (**)(unint64_t, uint64_t))(v43 + 8))(v49, v137);
    v60 = (v53 + v49) & v134;
    v61 = *(void (**)(unint64_t, uint64_t))(v45 + 8);
    v61(v60, v44);
    v61((v55 + v60) & v134, v44);
  }
LABEL_56:
  v62 = ((v47 + 16) & ~v47) + v48;
  if (!v57)
    ++v62;
  v63 = (v62 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v64 = sub_21C5E31A8();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(unsigned __int8 *)(v65 + 80);
  v67 = v66 | 7;
  v68 = (v63 + (v66 | 7) + 8) & ~(v66 | 7);
  v138 = *(_QWORD *)(v65 + 64);
  if (v138 <= 8)
    v69 = 8;
  else
    v69 = *(_QWORD *)(v65 + 64);
  v70 = *(unsigned __int8 *)(v68 + v69);
  if (v70 >= 2)
  {
    if (v69 <= 3)
      v71 = v69;
    else
      v71 = 4;
    __asm { BR              X12 }
  }
  if (v70 == 1)
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v68, v64);
  else
    swift_release();
  v140 = sub_21C5E2E78();
  v72 = *(_QWORD *)(v140 - 8);
  v73 = *(unsigned __int8 *)(v72 + 80);
  v74 = (v69 + v68 + (v73 | 7) + 1) & ~(v73 | 7);
  v75 = *(_QWORD *)(v72 + 64);
  if (v75 <= 8)
    v76 = 8;
  else
    v76 = *(_QWORD *)(v72 + 64);
  v77 = *(unsigned __int8 *)(v74 + v76);
  if (v77 >= 2)
  {
    if (v76 <= 3)
      v78 = v76;
    else
      v78 = 4;
    __asm { BR              X12 }
  }
  if (v77 == 1)
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v74, v140);
  else
    swift_release();
  v79 = sub_21C5E32E0();
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(_DWORD *)(v80 + 80) & 0xF8 | 7;
  v82 = (v76 + v74 + v81 + 1) & ~v81;
  if (*(_QWORD *)(v80 + 64) <= 8uLL)
    v83 = 8;
  else
    v83 = *(_QWORD *)(v80 + 64);
  v84 = *(unsigned __int8 *)(v82 + v83);
  if (v84 >= 2)
  {
    if (v83 <= 3)
      v85 = v83;
    else
      v85 = 4;
    __asm { BR              X13 }
  }
  if (v84 == 1)
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v82, v79);
  else
    swift_release();
  v86 = sub_21C5E3088();
  v87 = *(_QWORD *)(v86 - 8);
  v88 = *(_DWORD *)(v87 + 80) & 0xF8 | 7;
  v89 = (v83 + v82 + v88 + 1) & ~v88;
  if (*(_QWORD *)(v87 + 64) <= 8uLL)
    v90 = 8;
  else
    v90 = *(_QWORD *)(v87 + 64);
  v91 = *(unsigned __int8 *)(v89 + v90);
  if (v91 >= 2)
  {
    if (v90 <= 3)
      v92 = v90;
    else
      v92 = 4;
    __asm { BR              X13 }
  }
  v132 = v64;
  if (v91 == 1)
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v89, v86);
  else
    swift_release();
  v93 = v90 + v89;
  sub_21C531A84(*(_QWORD *)((v93 + 8) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v93 + 8) & 0xFFFFFFFFFFFFFFF8) + 8));
  v94 = (v93 + 24) & 0xFFFFFFFFFFFFFFF8;
  sub_21C53198C(*(_QWORD *)v94, *(_QWORD *)(v94 + 8), *(_QWORD *)(v94 + 16), *(_QWORD *)(v94 + 24), *(_QWORD *)(v94 + 32), *(_QWORD *)(v94 + 40), *(_QWORD *)(v94 + 48), *(_QWORD *)(v94 + 56), *(_QWORD *)(v94 + 64), *(_QWORD *)(v94 + 72), *(_BYTE *)(v94 + 80), *(_BYTE *)(v94 + 81));
  v95 = v67 | v73;
  v96 = ((v67 | v73) + v94 + 82) & ~(v67 | v73);
  v131 = v65;
  v97 = *(unsigned int *)(v65 + 84);
  v135 = v72;
  v98 = *(unsigned int *)(v72 + 84);
  if (v97 <= v98)
    v99 = *(_DWORD *)(v72 + 84);
  else
    v99 = *(_DWORD *)(v65 + 84);
  if (v99 <= 0x7FFFFFFE)
    v100 = 2147483646;
  else
    v100 = v99;
  v101 = v66 + 2;
  v102 = v75 + 7;
  v103 = (v73 + 2) & ~v73;
  v104 = ((v75 + 7 + ((((v66 + 2) & ~v66) + v138 + v73) & ~v73)) & 0xFFFFFFFFFFFFFFF8) + v73 + 8;
  v105 = ((v73 + 3) & ~v73) + v75 + v95;
  if (v75 + v103 + ((v104 + ((v105 + (v104 & ~v73)) & ~v95)) & ~v73) + 6 <= 8)
    v106 = 8;
  else
    v106 = v75 + v103 + ((v104 + ((v105 + (v104 & ~v73)) & ~v95)) & ~v73) + 6;
  v107 = *(unsigned __int8 *)(v96 + v106);
  if (v107 >= 2)
  {
    if (v106 <= 3)
      v108 = v106;
    else
      v108 = 4;
    __asm { BR              X12 }
  }
  if (v107 != 1)
  {
    swift_release();
    goto LABEL_148;
  }
  v109 = ~v66;
  v110 = (v101 + v96) & ~v66;
  v130 = ~v73;
  v124 = v73 + 2;
  v125 = v75 + 7;
  v129 = v100;
  v127 = v109;
  v128 = ((v73 + 3) & ~v73) + v75 + v95;
  v126 = v73 + 3;
  if ((_DWORD)v97 == v100)
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v110, v97, v132))
      goto LABEL_127;
LABEL_122:
    v111 = (v138 + v73 + v110) & v130;
LABEL_126:
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v110, v132);
    (*(void (**)(unint64_t, uint64_t))(v135 + 8))(v111, v140);
    swift_release();
    goto LABEL_127;
  }
  v111 = (v138 + v73 + v110) & ~v73;
  if ((_DWORD)v98 == v100)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v135 + 48))((v138 + v73 + v110) & ~v73, v98, v140))
    {
      goto LABEL_127;
    }
    goto LABEL_122;
  }
  v112 = *(_QWORD *)((v102 + v111) & 0xFFFFFFFFFFFFFFF8);
  if (v112 >= 0xFFFFFFFF)
    LODWORD(v112) = -1;
  if ((v112 + 1) < 2)
    goto LABEL_126;
LABEL_127:
  v113 = (unsigned __int8 *)((v104 + v96) & v130);
  if (v98 <= 0xFE)
  {
    if (*v113 >= 2u)
      goto LABEL_130;
    goto LABEL_129;
  }
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v135 + 48))((unint64_t)&v113[v126] & v130, v98, v140))LABEL_129:(*(void (**)(unint64_t, uint64_t))(v135 + 8))((unint64_t)&v113[v126] & v130, v140);
LABEL_130:
  v114 = (unint64_t)&v113[v128] & ~v95;
  v115 = (v101 + v114) & v127;
  if ((_DWORD)v97 == v129)
  {
    v116 = v132;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v131 + 48))(v115, v97, v132))
      goto LABEL_142;
LABEL_137:
    v117 = (v138 + v73 + v115) & v130;
LABEL_141:
    (*(void (**)(unint64_t, uint64_t))(v131 + 8))(v115, v116);
    (*(void (**)(unint64_t, uint64_t))(v135 + 8))(v117, v140);
    swift_release();
    goto LABEL_142;
  }
  v117 = (v138 + v73 + v115) & v130;
  if ((_DWORD)v98 == v129)
  {
    v116 = v132;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v135 + 48))((v138 + v73 + v115) & v130, v98, v140))
    {
      goto LABEL_142;
    }
    goto LABEL_137;
  }
  v118 = *(_QWORD *)((v125 + v117) & 0xFFFFFFFFFFFFFFF8);
  if (v118 >= 0xFFFFFFFF)
    LODWORD(v118) = -1;
  v116 = v132;
  if ((v118 + 1) < 2)
    goto LABEL_141;
LABEL_142:
  v119 = (unsigned __int8 *)((v104 + v114) & v130);
  if (v98 > 0xFE)
  {
    v121 = (unint64_t)&v119[v124] & v130;
    v120 = v135;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v135 + 48))(v121, v98, v140))
      goto LABEL_146;
  }
  else
  {
    v120 = v135;
    if (*v119 <= 1u)
    {
      v121 = (unint64_t)&v119[v124] & v130;
LABEL_146:
      (*(void (**)(unint64_t, uint64_t))(v120 + 8))(v121, v140);
    }
  }
LABEL_148:
  v122 = v106 + v96;
  sub_21C531A84(*(_QWORD *)((v106 + v96 + 8) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v106 + v96 + 8) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_21C531ABC(*(_QWORD *)((v122 + 24) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v122 + 24) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v122 + 24) & 0xFFFFFFFFFFFFFFF8) + 16), (uint64_t (*)(void))sub_21C531C48);
  sub_21C531ABC(*(_QWORD *)((v122 + 48) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v122 + 48) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v122 + 48) & 0xFFFFFFFFFFFFFFF8) + 16), (uint64_t (*)(void))sub_21C531A9C);
  sub_21C531A84(*(_QWORD *)((v122 + 72) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v122 + 72) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_21C531AC8(*(_QWORD *)((v122 + 88) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v122 + 88) & 0xFFFFFFFFFFFFFFF8) + 8));
  return sub_21C531A84(*(_QWORD *)((v106 + v96 + 104) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v106 + v96 + 104) & 0xFFFFFFFFFFFFFFF8) + 8));
}

_QWORD *sub_21C58F304(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  size_t v46;
  uint64_t v47;
  _QWORD *v48;
  void **v49;
  size_t v50;
  unint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  id v57;
  char v58;
  uint64_t v59;
  _QWORD *v60;
  void **v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t);
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  unsigned __int8 *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  size_t v93;
  int v94;
  int v95;
  unint64_t v96;
  unint64_t v97;
  int v98;
  int v99;
  size_t v100;
  int v101;
  size_t v102;
  _QWORD *v103;
  unint64_t v104;
  unint64_t v105;
  void (*v106)(unint64_t, unint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  size_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  unsigned int v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  unsigned int v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  unsigned int v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  unsigned int v145;
  uint64_t v146;
  char v147;
  char *v148;
  char *v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v152;
  char v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  unsigned int v171;
  int v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  size_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unsigned int v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  _QWORD *v188;
  unint64_t v189;
  uint64_t v190;
  _BYTE *v191;
  _BYTE *v192;
  unint64_t v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  unint64_t v199;
  _BYTE *v200;
  unsigned __int8 *v201;
  unsigned int v202;
  _QWORD *v203;
  uint64_t v204;
  unint64_t v205;
  int v206;
  size_t v207;
  _WORD *v208;
  _BYTE *v209;
  char *v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  char v214;
  unint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  unint64_t v224;
  uint64_t v225;
  unint64_t v226;
  unint64_t v227;
  uint64_t v228;
  unint64_t v229;
  unint64_t v230;
  uint64_t v231;
  unint64_t v233;
  _QWORD *v234;
  size_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  size_t v239;
  int v240;
  size_t v242;
  size_t v243;
  size_t __na;
  unint64_t __n;
  char v246;
  char v247;
  uint64_t v248;
  unint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unint64_t v253;
  uint64_t v254;
  uint64_t v255;
  _BYTE *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  size_t v261;
  _QWORD *v262;
  uint64_t v263;
  uint64_t v264;
  void *v265;
  unint64_t v266;
  _QWORD *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v272;
  uint64_t v273;
  _QWORD *v274;
  uint64_t v275;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v4[1] = v5[1];
  v6 = (_QWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v10[1] = v11[1];
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v12[1] = v13[1];
  v14 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  v16 = v15[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_21C55DA30(v16);
  v14[2] = v16;
  v17 = ((unint64_t)v14 + 31) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)v15 + 31) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)(v18 + 24);
  LODWORD(v20) = -1;
  if (v19 < 0xFFFFFFFF)
    v20 = *(_QWORD *)(v18 + 24);
  if ((int)v20 - 1 < 0)
  {
    if (v19)
    {
      *(_QWORD *)(v17 + 24) = v19;
      *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
      (**(void (***)(unint64_t, unint64_t))(v19 - 8))(((unint64_t)v14 + 31) & 0xFFFFFFFFFFFFFFF8, ((unint64_t)v15 + 31) & 0xFFFFFFFFFFFFFFF8);
    }
    else
    {
      v25 = *(_OWORD *)v18;
      v26 = *(_OWORD *)(v18 + 16);
      *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
      *(_OWORD *)v17 = v25;
      *(_OWORD *)(v17 + 16) = v26;
    }
    v24 = a3;
    v27 = *(_QWORD *)(v18 + 40);
    *(_BYTE *)(v17 + 48) = *(_BYTE *)(v18 + 48);
    *(_QWORD *)(v17 + 40) = v27;
    v28 = *(_QWORD *)(v18 + 56);
    *(_BYTE *)(v17 + 64) = *(_BYTE *)(v18 + 64);
    *(_QWORD *)(v17 + 56) = v28;
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
    v21 = *(_OWORD *)(v18 + 16);
    v22 = *(_OWORD *)(v18 + 32);
    v23 = *(_OWORD *)(v18 + 48);
    *(_BYTE *)(v17 + 64) = *(_BYTE *)(v18 + 64);
    *(_OWORD *)(v17 + 32) = v22;
    *(_OWORD *)(v17 + 48) = v23;
    *(_OWORD *)(v17 + 16) = v21;
    v24 = a3;
  }
  v29 = (_QWORD *)(((unint64_t)v14 + 103) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)(((unint64_t)v15 + 103) & 0xFFFFFFFFFFFFFFF8);
  *v29 = *v30;
  v31 = *(_QWORD *)(v24 + 16);
  v32 = *(_QWORD *)(v24 + 24);
  v33 = *(_QWORD *)(v31 - 8);
  v34 = *(_QWORD *)(v32 - 8);
  v35 = *(_DWORD *)(v33 + 84);
  v36 = *(_DWORD *)(v34 + 84);
  v37 = (*(_DWORD *)(v34 + 80) | *(_DWORD *)(v33 + 80)) & 0xF8 | 7u;
  v38 = v37 + 8;
  v39 = ((unint64_t)v29 + v37 + 8) & ~v37;
  v40 = ((unint64_t)v30 + v37 + 8) & ~v37;
  v41 = *(_QWORD *)(v33 + 64);
  v42 = *(_QWORD *)(v34 + 64);
  v43 = (v37 + 16) & ~v37;
  v44 = (_QWORD *)((v40 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v44 < 0xFFFFFFFFuLL)
  {
    if (v35)
      v55 = *(_QWORD *)(v33 + 64);
    else
      v55 = v41 + 1;
    if (!v36)
      ++v42;
    if (v55 > v42)
      v42 = v55;
    if (v42 <= 8)
      v52 = 8;
    else
      v52 = v42;
    memcpy((void *)v39, (const void *)v40, (v43 | 1) + v52);
  }
  else
  {
    v264 = v31;
    v268 = (v37 + 16) & ~v37;
    v45 = ~v37;
    if (v35)
      v46 = *(_QWORD *)(v33 + 64);
    else
      v46 = v41 + 1;
    v272 = v39;
    *(_QWORD *)v39 = *(_QWORD *)v40;
    v47 = v39 + 15;
    *(_QWORD *)(v47 & 0xFFFFFFFFFFFFFFF8) = *v44;
    v48 = (_QWORD *)((v38 + (v47 & 0xFFFFFFFFFFFFFFF8)) & v45);
    v49 = (void **)(((unint64_t)v44 + v38) & v45);
    if (v36)
      v50 = v42;
    else
      v50 = v42 + 1;
    v261 = v46;
    if (v46 <= v50)
      v51 = v50;
    else
      v51 = v46;
    if (v51 <= 8)
      v52 = 8;
    else
      v52 = v51;
    v53 = *((unsigned __int8 *)v49 + v52);
    swift_retain();
    swift_retain();
    if (v53 >= 3)
    {
      if (v52 <= 3)
        v54 = v52;
      else
        v54 = 4;
      __asm { BR              X11 }
    }
    if (v53 == 2)
    {
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v34 + 48))(v49, 1, v32))
      {
        memcpy(v48, v49, v50);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v34 + 16))(v48, v49, v32);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v48, 0, 1, v32);
      }
      v43 = v268;
      v39 = v272;
      v58 = 2;
    }
    else
    {
      if (v53 != 1)
      {
        v56 = *v49;
        *v48 = *v49;
        *((_BYTE *)v48 + v52) = 0;
        v57 = v56;
        v43 = v268;
        v39 = v272;
        goto LABEL_50;
      }
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v33 + 48))(v49, 1, v264))
      {
        memcpy(v48, v49, v261);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v33 + 16))(v48, v49, v264);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v48, 0, 1, v264);
      }
      v43 = v268;
      v39 = v272;
      v58 = 1;
    }
    *((_BYTE *)v48 + v52) = v58;
  }
LABEL_50:
  v59 = (v43 | 1) + v52;
  v60 = (_QWORD *)(((v39 | 7) + v59) & 0xFFFFFFFFFFFFFFF8);
  v61 = (void **)(((v40 | 7) + v59) & 0xFFFFFFFFFFFFFFF8);
  v62 = *v61;
  *v60 = *v61;
  v63 = sub_21C5E32C8();
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(_DWORD *)(v64 + 80) & 0xFC;
  v269 = sub_21C5E2ED8();
  v66 = *(_QWORD *)(v269 - 8);
  v67 = *(unsigned __int8 *)(v66 + 80);
  v273 = sub_21C5E346C();
  v68 = *(_QWORD *)(v273 - 8);
  v69 = *(unsigned __int8 *)(v68 + 80);
  v70 = v65 | v67 | v69 | 3;
  v71 = ((unint64_t)v60 + v70 + 8) & ~v70;
  v72 = ((unint64_t)v61 + v70 + 8) & ~v70;
  v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
  v74 = v62;
  v73(v71, v72, v63);
  v75 = *(_QWORD *)(v64 + 64) + v67;
  v76 = (v75 + v72) & ~v67;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))((v75 + v71) & ~v67, v76, v269);
  v77 = *(_QWORD *)(v66 + 64) + v69;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))((v77 + ((v75 + v71) & ~v67)) & ~v69, (v77 + v76) & ~v69, v273);
  v78 = *(_QWORD *)(v68 + 64) + 3;
  *(_DWORD *)((v78 + ((v77 + ((v75 + v71) & ~v67)) & ~v69)) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((v78
                                                                                               + ((v77 + v76) & ~v69)) & 0xFFFFFFFFFFFFFCLL);
  v79 = (v78 + ((v77 + (v75 & ~v67)) & ~v69)) & 0xFFFFFFFFFFFFFFFCLL;
  v257 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  v80 = *(_QWORD *)(v257 - 8);
  LODWORD(v73) = *(unsigned __int8 *)(v80 + 80);
  v259 = sub_21C5E2D64();
  v81 = *(_QWORD *)(v259 - 8);
  v82 = *(_DWORD *)(v81 + 80) | v73;
  v83 = *(_DWORD *)(v81 + 80);
  v84 = v79 + (v82 | 7) + 4;
  v274 = (_QWORD *)((v84 + v72) & ~(v82 | 7));
  v262 = (_QWORD *)((v84 + v71) & ~(v82 | 7));
  *v262 = *v274;
  v85 = (_QWORD *)(((unint64_t)v262 + 15) & 0xFFFFFFFFFFFFFFF8);
  v86 = (_QWORD *)(((unint64_t)v274 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v85 = *v86;
  v265 = (void *)(((unint64_t)v85 + v82 + 8) & ~v82);
  v87 = (unsigned __int8 *)(((unint64_t)v86 + v82 + 8) & ~v82);
  v88 = *(unsigned int *)(v80 + 84);
  v89 = *(unsigned int *)(v81 + 84);
  v90 = *(_QWORD *)(v80 + 64);
  v254 = ~v83;
  v91 = v90 + v83;
  v92 = *(_QWORD *)(v81 + 64);
  v251 = v92 + v83;
  v93 = ((v92 + v83 + ((v90 + v83) & ~v83)) & ~v83) + v92;
  v94 = v89 | v88;
  swift_retain();
  swift_retain();
  if (v89 | v88)
  {
    if (v88 >= v89)
      v95 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v80 + 48))(v87, v88, v257);
    else
      v95 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v81 + 48))((unint64_t)&v87[v91] & v254, v89, v259);
    v96 = (unint64_t)v274;
    v97 = (unint64_t)v262;
    if (v95)
    {
LABEL_63:
      if (v94)
        v100 = v93;
      else
        v100 = v93 + 1;
      memcpy(v265, v87, v100);
      goto LABEL_70;
    }
  }
  else
  {
    v96 = (unint64_t)v274;
    v97 = (unint64_t)v262;
    if (v87[v93])
    {
      v98 = (v87[v93] - 1) << (8 * v93);
      if (v93 > 3)
        v98 = 0;
      if ((_DWORD)v93)
      {
        if (v93 <= 3)
          v99 = v93;
        else
          v99 = 4;
        __asm { BR              X11 }
      }
      if (v98 != -1)
        goto LABEL_63;
    }
  }
  (*(void (**)(void *, unsigned __int8 *, uint64_t))(v80 + 16))(v265, v87, v257);
  v101 = v94;
  v102 = v93;
  v103 = (_QWORD *)v97;
  v104 = ((unint64_t)v265 + v91) & v254;
  v105 = (unint64_t)&v87[v91] & v254;
  v106 = *(void (**)(unint64_t, unint64_t, uint64_t))(v81 + 16);
  v106(v104, v105, v259);
  v107 = v251 + v104;
  v97 = (unint64_t)v103;
  v93 = v102;
  v94 = v101;
  v96 = (unint64_t)v274;
  v106(v107 & v254, (v251 + v105) & v254, v259);
  if (!v101)
    *((_BYTE *)v265 + v93) = 0;
LABEL_70:
  v108 = (v82 + 16) & ~v82;
  if (!v94)
    ++v108;
  v109 = v108 + v93;
  v110 = (_QWORD *)(((v97 | 7) + v109) & 0xFFFFFFFFFFFFFFF8);
  v111 = (_QWORD *)(((v96 | 7) + v109) & 0xFFFFFFFFFFFFFFF8);
  *v110 = *v111;
  v258 = sub_21C5E31A8();
  v112 = *(_QWORD *)(v258 - 8);
  v113 = *(unsigned __int8 *)(v112 + 80);
  v252 = v113 | 7;
  v255 = v113;
  v113 += 8;
  v114 = (_QWORD *)(((unint64_t)v110 + v113) & ~v252);
  v115 = (_QWORD *)(((unint64_t)v111 + v113) & ~v252);
  v266 = *(_QWORD *)(v112 + 64);
  if (v266 <= 8)
    v116 = 8;
  else
    v116 = *(_QWORD *)(v112 + 64);
  v117 = *((unsigned __int8 *)v115 + v116);
  swift_retain();
  if (v117 >= 2)
  {
    if (v116 <= 3)
      v118 = v116;
    else
      v118 = 4;
    __asm { BR              X11 }
  }
  if (v117 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v112 + 16))(v114, v115, v258);
    v119 = 1;
  }
  else
  {
    *v114 = *v115;
    swift_retain();
    v119 = 0;
  }
  *((_BYTE *)v114 + v116) = v119;
  v120 = sub_21C5E2E78();
  v121 = *(_QWORD *)(v120 - 8);
  v260 = *(unsigned __int8 *)(v121 + 80);
  v122 = (_QWORD *)(((unint64_t)v114 + v116 + (v260 | 7) + 1) & ~(v260 | 7));
  v123 = (_QWORD *)(((unint64_t)v115 + v116 + (v260 | 7) + 1) & ~(v260 | 7));
  v270 = v120;
  v275 = v121;
  v249 = *(_QWORD *)(v121 + 64);
  if (v249 <= 8)
    v124 = 8;
  else
    v124 = *(_QWORD *)(v121 + 64);
  v125 = *((unsigned __int8 *)v123 + v124);
  if (v125 >= 2)
  {
    if (v124 <= 3)
      v126 = v124;
    else
      v126 = 4;
    __asm { BR              X12 }
  }
  if (v125 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v121 + 16))(v122, v123, v120);
    v127 = 1;
  }
  else
  {
    *v122 = *v123;
    swift_retain();
    v127 = 0;
  }
  *((_BYTE *)v122 + v124) = v127;
  v128 = v124 + 1;
  v129 = sub_21C5E32E0();
  v130 = *(_QWORD *)(v129 - 8);
  v131 = *(_DWORD *)(v130 + 80) & 0xF8 | 7;
  v132 = (_QWORD *)(((unint64_t)v122 + v128 + v131) & ~v131);
  v133 = (_QWORD *)(((unint64_t)v123 + v128 + v131) & ~v131);
  if (*(_QWORD *)(v130 + 64) <= 8uLL)
    v134 = 8;
  else
    v134 = *(_QWORD *)(v130 + 64);
  v135 = *((unsigned __int8 *)v133 + v134);
  if (v135 >= 2)
  {
    if (v134 <= 3)
      v136 = v134;
    else
      v136 = 4;
    __asm { BR              X13 }
  }
  if (v135 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v130 + 16))(v132, v133, v129);
    v137 = 1;
  }
  else
  {
    *v132 = *v133;
    swift_retain();
    v137 = 0;
  }
  *((_BYTE *)v132 + v134) = v137;
  v138 = v134 + 1;
  v139 = sub_21C5E3088();
  v140 = *(_QWORD *)(v139 - 8);
  v141 = *(_DWORD *)(v140 + 80) & 0xF8 | 7;
  v142 = (_QWORD *)(((unint64_t)v132 + v138 + v141) & ~v141);
  v143 = (_QWORD *)(((unint64_t)v133 + v138 + v141) & ~v141);
  if (*(_QWORD *)(v140 + 64) <= 8uLL)
    v144 = 8;
  else
    v144 = *(_QWORD *)(v140 + 64);
  v145 = *((unsigned __int8 *)v143 + v144);
  if (v145 >= 2)
  {
    if (v144 <= 3)
      v146 = v144;
    else
      v146 = 4;
    __asm { BR              X13 }
  }
  v263 = v112;
  if (v145 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v140 + 16))(v142, v143, v139);
    v147 = 1;
  }
  else
  {
    *v142 = *v143;
    swift_retain();
    v147 = 0;
  }
  *((_BYTE *)v142 + v144) = v147;
  v148 = (char *)v142 + v144 + 1;
  v149 = (char *)v143 + v144 + 1;
  v150 = (unint64_t)(v148 + 7) & 0xFFFFFFFFFFFFFFF8;
  v151 = (unint64_t)(v149 + 7) & 0xFFFFFFFFFFFFFFF8;
  v152 = *(_QWORD *)v151;
  v153 = *(_BYTE *)(v151 + 8);
  sub_21C531A90(*(_QWORD *)v151, v153);
  *(_QWORD *)v150 = v152;
  *(_BYTE *)(v150 + 8) = v153;
  v154 = (unint64_t)(v148 + 23) & 0xFFFFFFFFFFFFFFF8;
  v155 = (unint64_t)(v149 + 23) & 0xFFFFFFFFFFFFFFF8;
  v156 = *(_QWORD *)v155;
  v157 = *(_QWORD *)(v155 + 8);
  v158 = *(_QWORD *)(v155 + 16);
  v159 = *(_QWORD *)(v155 + 24);
  v160 = *(_QWORD *)(v155 + 32);
  v161 = *(_QWORD *)(v155 + 40);
  v162 = *(_QWORD *)(v155 + 48);
  v163 = *(_QWORD *)(v155 + 56);
  v242 = *(_QWORD *)(v155 + 64);
  __na = *(_QWORD *)(v155 + 72);
  v246 = *(_BYTE *)(v155 + 80);
  v247 = *(_BYTE *)(v155 + 81);
  sub_21C531870(*(_QWORD *)v155, v157, v158, v159, v160, v161, v162, v163, v242, __na, v246, v247);
  *(_QWORD *)v154 = v156;
  *(_QWORD *)(v154 + 8) = v157;
  *(_QWORD *)(v154 + 16) = v158;
  *(_QWORD *)(v154 + 24) = v159;
  *(_QWORD *)(v154 + 32) = v160;
  *(_QWORD *)(v154 + 40) = v161;
  *(_QWORD *)(v154 + 48) = v162;
  *(_QWORD *)(v154 + 56) = v163;
  *(_QWORD *)(v154 + 64) = v242;
  *(_QWORD *)(v154 + 72) = __na;
  *(_BYTE *)(v154 + 80) = v246;
  *(_BYTE *)(v154 + 81) = v247;
  v164 = v255;
  v165 = v252 | v260;
  v166 = (v252 | v260) + 82;
  v167 = (v166 + v154) & ~(v252 | v260);
  v168 = (_QWORD *)((v166 + v155) & ~(v252 | v260));
  v169 = *(unsigned int *)(v263 + 84);
  v170 = *(unsigned int *)(v275 + 84);
  if (v169 <= v170)
    v171 = *(_DWORD *)(v275 + 84);
  else
    v171 = *(_DWORD *)(v263 + 84);
  if (v171 <= 0x7FFFFFFE)
    v172 = 2147483646;
  else
    v172 = v171;
  v173 = v255 + 2;
  v174 = v249 + 7;
  v175 = ((v249 + 7 + ((((v255 + 2) & ~v255) + v266 + v260) & ~v260)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v176 = ((v260 + 3) & ~v260) + v249;
  v177 = ((v260 + 2) & ~v260) + v249;
  v178 = v175 + v260;
  if (v177 + ((v175 + v260 + ((v176 + v165 + ((v175 + v260) & ~v260)) & ~v165)) & ~v260) + 6 <= 8)
    v179 = 8;
  else
    v179 = v177 + ((v175 + v260 + ((v176 + v165 + ((v175 + v260) & ~v260)) & ~v165)) & ~v260) + 6;
  v180 = *((unsigned __int8 *)v168 + v179);
  if (v180 >= 2)
  {
    if (v179 <= 3)
      v181 = v179;
    else
      v181 = 4;
    __asm { BR              X12 }
  }
  if (v180 == 1)
  {
    v243 = ((v260 + 2) & ~v260) + v249;
    __n = ((v249 + 7 + ((((v255 + 2) & ~v255) + v266 + v260) & ~v260)) & 0xFFFFFFFFFFFFFFF8) + 8;
    v182 = ~v260;
    v250 = ~v255;
    v253 = (unint64_t)v168;
    v183 = ((unint64_t)v168 + v173) & ~v255;
    v256 = (_BYTE *)v167;
    v248 = v164 + 2;
    v237 = v260 + 2;
    v238 = v179;
    v240 = v172;
    v239 = v176 + v165;
    v235 = v176;
    v236 = v260 + 3;
    if ((_DWORD)v169 == v172)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v263 + 48))(((unint64_t)v168 + v173) & ~v164, v169, v258))goto LABEL_136;
    }
    else
    {
      v184 = v266 + v260;
      v185 = (v266 + v260 + v183) & v182;
      if ((_DWORD)v170 == v172)
      {
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v275 + 48))(v185, v170, v270))
        {
LABEL_136:
          v184 = v266 + v260;
          v233 = (v266 + v260 + v183) & v182;
          v234 = (_QWORD *)((v174 + v233) & 0xFFFFFFFFFFFFFFF8);
LABEL_141:
          v188 = v168;
          v187 = v167;
          *(_BYTE *)v167 = *(_BYTE *)v253;
          *(_BYTE *)(v167 | 1) = *(_BYTE *)(v253 | 1);
          v189 = (v248 + v167) & v250;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v263 + 16))((unint64_t)&v256[v248] & v250, v183, v258);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v275 + 16))((v184 + v189) & v182, v233, v270);
          *(_QWORD *)((v174 + ((v184 + v189) & v182)) & 0xFFFFFFFFFFFFF8) = *v234;
          swift_retain();
          goto LABEL_143;
        }
      }
      else
      {
        v186 = *(_QWORD *)((v174 + v185) & 0xFFFFFFFFFFFFFFF8);
        if (v186 >= 0xFFFFFFFF)
          LODWORD(v186) = -1;
        if ((v186 + 1) < 2)
        {
          v233 = (v184 + v183) & v182;
          v234 = (_QWORD *)((v174 + v185) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_141;
        }
      }
    }
    v188 = v168;
    v187 = v167;
    memcpy((void *)v167, (const void *)v253, __n);
LABEL_143:
    v190 = ~v165;
    v191 = (_BYTE *)((v178 + v187) & v182);
    v192 = (_BYTE *)(((unint64_t)v188 + v178) & v182);
    if (v170 > 0xFE)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v275 + 48))((unint64_t)&v192[v236] & v182, v170, v270))goto LABEL_145;
    }
    else if (*v192 < 2u)
    {
LABEL_145:
      *v191 = *v192;
      *(_BYTE *)(((v178 + v187) & v182) + 1) = *(_BYTE *)((((unint64_t)v188 + v178) & v182) + 1);
      *(_BYTE *)(((v178 + v187) & v182) + 2) = *(_BYTE *)((((unint64_t)v188 + v178) & v182) + 2);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v275 + 16))((unint64_t)&v191[v236] & v182, (unint64_t)&v192[v236] & v182, v270);
      goto LABEL_148;
    }
    memcpy((void *)((v178 + v187) & v182), (const void *)(((unint64_t)v188 + v178) & v182), v235);
LABEL_148:
    v193 = (unint64_t)&v191[v239] & v190;
    v194 = (unint64_t)&v192[v239] & v190;
    v195 = (v248 + v194) & v250;
    if ((_DWORD)v169 == v240)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v263 + 48))((v248 + v194) & v250, v169, v258))goto LABEL_153;
    }
    else
    {
      v196 = v266 + v260;
      v197 = (v266 + v260 + v195) & v182;
      if ((_DWORD)v170 == v240)
      {
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v275 + 48))((v196 + v195) & v182, v170, v270))
        {
LABEL_153:
          v196 = v266 + v260;
          v197 = (v266 + v260 + v195) & v182;
          v267 = (_QWORD *)((v174 + v197) & 0xFFFFFFFFFFFFFFF8);
LABEL_158:
          *(_BYTE *)v193 = *(_BYTE *)v194;
          *(_BYTE *)(v193 | 1) = *(_BYTE *)(v194 | 1);
          v199 = (v248 + v193) & v250;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v263 + 16))(v199, v195, v258);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v275 + 16))((v196 + v199) & v182, v197, v270);
          *(_QWORD *)((v174 + ((v196 + v199) & v182)) & 0xFFFFFFFFFFFFF8) = *v267;
          swift_retain();
          goto LABEL_160;
        }
      }
      else
      {
        v198 = *(_QWORD *)((v174 + v197) & 0xFFFFFFFFFFFFFFF8);
        if (v198 >= 0xFFFFFFFF)
          LODWORD(v198) = -1;
        if ((v198 + 1) < 2)
        {
          v267 = (_QWORD *)((v174 + v197) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_158;
        }
      }
    }
    memcpy((void *)v193, (const void *)v194, __n);
LABEL_160:
    v168 = (_QWORD *)v253;
    v167 = (unint64_t)v256;
    v179 = v238;
    v200 = (_BYTE *)((v178 + v193) & v182);
    v201 = (unsigned __int8 *)((v178 + v194) & v182);
    if (v170 > 0xFE)
    {
      v205 = (unint64_t)&v201[v237] & v182;
      v206 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v275 + 48))(v205, v170, v270);
      v203 = a1;
      if (!v206)
      {
        LOBYTE(v202) = *v201;
        v204 = v260 + 2;
        goto LABEL_167;
      }
    }
    else
    {
      v202 = *v201;
      v203 = a1;
      if (v202 <= 1)
      {
        v204 = v260 + 2;
        v205 = (unint64_t)&v201[v237] & v182;
LABEL_167:
        *v200 = v202;
        v200[1] = v201[1];
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v275 + 16))((unint64_t)&v200[v204] & v182, v205, v270);
        v207 = v243;
        goto LABEL_168;
      }
    }
    v207 = v243;
    memcpy(v200, v201, v243);
LABEL_168:
    v208 = &v200[v207];
    *v208 = *(_WORD *)&v201[v207];
    v208[1] = *(_WORD *)&v201[v207 + 2];
    v208[2] = *(_WORD *)&v201[v207 + 4];
    v256[v238] = 1;
    goto LABEL_169;
  }
  *(_QWORD *)v167 = *v168;
  *(_BYTE *)(v167 + v179) = 0;
  swift_retain();
  v203 = a1;
LABEL_169:
  v209 = (_BYTE *)(v167 + v179 + 1);
  v210 = (char *)v168 + v179 + 1;
  v211 = (unint64_t)(v209 + 7) & 0xFFFFFFFFFFFFFFF8;
  v212 = (unint64_t)(v210 + 7) & 0xFFFFFFFFFFFFFFF8;
  v213 = *(_QWORD *)v212;
  v214 = *(_BYTE *)(v212 + 8);
  sub_21C531A90(*(_QWORD *)v212, v214);
  *(_QWORD *)v211 = v213;
  *(_BYTE *)(v211 + 8) = v214;
  v215 = (unint64_t)(v209 + 23) & 0xFFFFFFFFFFFFFFF8;
  v216 = (unint64_t)(v210 + 23) & 0xFFFFFFFFFFFFFFF8;
  v217 = *(_QWORD *)v216;
  v218 = *(_QWORD *)(v216 + 8);
  LOBYTE(v211) = *(_BYTE *)(v216 + 16);
  sub_21C58A5E8(*(_QWORD *)v216, v218, v211, (uint64_t (*)(void))sub_21C531C4C);
  *(_QWORD *)v215 = v217;
  *(_QWORD *)(v215 + 8) = v218;
  *(_BYTE *)(v215 + 16) = v211;
  v219 = (unint64_t)(v209 + 47) & 0xFFFFFFFFFFFFFFF8;
  v220 = (unint64_t)(v210 + 47) & 0xFFFFFFFFFFFFFFF8;
  v221 = *(_QWORD *)v220;
  v222 = *(_QWORD *)(v220 + 8);
  LOBYTE(v211) = *(_BYTE *)(v220 + 16);
  sub_21C58A5E8(*(_QWORD *)v220, v222, v211, (uint64_t (*)(void))sub_21C531AAC);
  *(_QWORD *)v219 = v221;
  *(_QWORD *)(v219 + 8) = v222;
  *(_BYTE *)(v219 + 16) = v211;
  v223 = (unint64_t)(v209 + 71) & 0xFFFFFFFFFFFFFFF8;
  v224 = (unint64_t)(v210 + 71) & 0xFFFFFFFFFFFFFFF8;
  v225 = *(_QWORD *)v224;
  LOBYTE(v222) = *(_BYTE *)(v224 + 8);
  sub_21C531A90(*(_QWORD *)v224, v222);
  *(_QWORD *)v223 = v225;
  *(_BYTE *)(v223 + 8) = v222;
  v226 = (unint64_t)(v209 + 87) & 0xFFFFFFFFFFFFFFF8;
  v227 = (unint64_t)(v210 + 87) & 0xFFFFFFFFFFFFFFF8;
  v228 = *(_QWORD *)v227;
  LOBYTE(v222) = *(_BYTE *)(v227 + 8);
  sub_21C52EF74(*(_QWORD *)v227, v222);
  *(_QWORD *)v226 = v228;
  *(_BYTE *)(v226 + 8) = v222;
  v229 = (unint64_t)(v209 + 103) & 0xFFFFFFFFFFFFFFF8;
  v230 = (unint64_t)(v210 + 103) & 0xFFFFFFFFFFFFFFF8;
  v231 = *(_QWORD *)v230;
  LOBYTE(v222) = *(_BYTE *)(v230 + 8);
  sub_21C531A90(*(_QWORD *)v230, v222);
  *(_QWORD *)v229 = v231;
  *(_BYTE *)(v229 + 8) = v222;
  return v203;
}

_QWORD *sub_21C5906F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  unint64_t v48;
  size_t v49;
  _QWORD *v50;
  unint64_t *v51;
  unint64_t v52;
  size_t v53;
  id *v54;
  void **v55;
  size_t v56;
  unint64_t v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  size_t v61;
  uint64_t v62;
  _QWORD *v63;
  void **v64;
  size_t v65;
  unint64_t v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  id *v71;
  unint64_t v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  size_t v78;
  void *v79;
  _QWORD *v80;
  const void *v81;
  void *v82;
  id v83;
  char v84;
  unsigned int v85;
  uint64_t v86;
  void *v87;
  id v88;
  uint64_t v89;
  void **v90;
  void **v91;
  void *v92;
  void *v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  size_t v126;
  uint64_t v127;
  uint64_t (*v128)(uint64_t, uint64_t, uint64_t);
  size_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  unint64_t v134;
  int v135;
  size_t v136;
  void *v137;
  char v138;
  int v139;
  int v140;
  uint64_t (*v141)(uint64_t, uint64_t, uint64_t);
  int v142;
  int v143;
  int v144;
  uint64_t v145;
  void *v146;
  void (*v147)(uint64_t, uint64_t);
  uint64_t v148;
  void (*v149)(uint64_t, unint64_t, uint64_t);
  unint64_t v150;
  uint64_t v151;
  size_t v152;
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  uint64_t v160;
  unsigned int v161;
  uint64_t v162;
  unsigned int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  _QWORD *v169;
  unint64_t v170;
  uint64_t v171;
  unsigned int v172;
  uint64_t v173;
  unsigned int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  unsigned int v184;
  uint64_t v185;
  unsigned int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  unsigned int v196;
  uint64_t v197;
  unsigned int v198;
  uint64_t v199;
  char *v200;
  char *v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t v204;
  char v205;
  uint64_t v206;
  char v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char v228;
  char v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unsigned int v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  unsigned int v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _QWORD *v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unint64_t v254;
  unsigned __int8 *v255;
  unsigned int v256;
  int v257;
  uint64_t v258;
  unint64_t v259;
  unint64_t v260;
  unint64_t v261;
  unint64_t v262;
  unsigned __int8 *v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  uint64_t v267;
  unint64_t v268;
  unint64_t v269;
  uint64_t v270;
  unint64_t v271;
  unint64_t v272;
  uint64_t v273;
  _BYTE *v274;
  unsigned __int8 *v275;
  uint64_t v276;
  unint64_t v277;
  unint64_t v278;
  unint64_t v279;
  unint64_t v280;
  uint64_t v281;
  unint64_t v282;
  unint64_t v283;
  unint64_t v284;
  _BYTE *v285;
  unsigned __int8 *v286;
  unsigned int v287;
  uint64_t v288;
  unint64_t v289;
  size_t v290;
  _WORD *v291;
  unint64_t v292;
  unint64_t v293;
  unint64_t v294;
  char *v295;
  unint64_t v296;
  unint64_t v297;
  uint64_t v298;
  char v299;
  uint64_t v300;
  char v301;
  unint64_t v302;
  unint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  char v308;
  unint64_t v309;
  unint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  char v315;
  unint64_t v316;
  unint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char v320;
  unint64_t v321;
  unint64_t v322;
  uint64_t v323;
  uint64_t v324;
  char v325;
  unint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  char v330;
  uint64_t v332;
  void (*v333)(uint64_t, unint64_t, uint64_t);
  _QWORD *v334;
  unint64_t v335;
  uint64_t v336;
  size_t v337;
  size_t v338;
  unint64_t __n;
  uint64_t v340;
  uint64_t v341;
  unint64_t v342;
  unint64_t v343;
  uint64_t v344;
  _QWORD *v345;
  unint64_t v346;
  uint64_t v347;
  uint64_t v348;
  unsigned int v349;
  _QWORD *v350;
  void *__srca;
  void *__srcb;
  unint64_t __src;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  char v358;
  uint64_t v359;
  unint64_t v360;
  uint64_t v361;
  char v362;
  unsigned int v363;
  unsigned int v364;
  _QWORD *v365;
  uint64_t v366;
  uint64_t v367;
  _QWORD *v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  unint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  int v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  _BYTE *v387;
  uint64_t v388;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[1] = v7[1];
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[1] = v9[1];
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[1] = v11[1];
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[1] = v13[1];
  v14 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[1] = v15[1];
  v16 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  swift_retain();
  swift_release();
  v16[1] = v17[1];
  swift_retain();
  swift_release();
  v18 = v17[2];
  sub_21C55DA30(v18);
  v19 = v16[2];
  v16[2] = v18;
  sub_21C55DAAC(v19);
  v20 = ((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8;
  v21 = ((unint64_t)v17 + 31) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)(v20 + 24);
  LODWORD(v23) = -1;
  if (v22 >= 0xFFFFFFFF)
    LODWORD(v24) = -1;
  else
    v24 = *(_QWORD *)(v20 + 24);
  v25 = v24 - 1;
  v26 = *(_QWORD *)(v21 + 24);
  if (v26 < 0xFFFFFFFF)
    v23 = *(_QWORD *)(v21 + 24);
  v27 = v23 - 1;
  v345 = a1;
  if ((v25 & 0x80000000) == 0)
  {
    if (v27 < 0)
      goto LABEL_8;
LABEL_13:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v28 = *(_OWORD *)(v21 + 16);
    v29 = *(_OWORD *)(v21 + 32);
    v30 = *(_OWORD *)(v21 + 48);
    *(_BYTE *)(v20 + 64) = *(_BYTE *)(v21 + 64);
    *(_OWORD *)(v20 + 32) = v29;
    *(_OWORD *)(v20 + 48) = v30;
    *(_OWORD *)(v20 + 16) = v28;
    goto LABEL_20;
  }
  if ((v27 & 0x80000000) == 0)
  {
    if (v22)
      __swift_destroy_boxed_opaque_existential_0(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8);
    goto LABEL_13;
  }
  if (v22)
  {
    v31 = (uint64_t *)(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8);
    if (v26)
    {
      __swift_assign_boxed_opaque_existential_1(v31, (uint64_t *)(((unint64_t)v17 + 31) & 0xFFFFFFFFFFFFFFF8));
      goto LABEL_19;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
LABEL_18:
    v32 = *(_OWORD *)v21;
    v33 = *(_OWORD *)(v21 + 16);
    *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
    *(_OWORD *)v20 = v32;
    *(_OWORD *)(v20 + 16) = v33;
    goto LABEL_19;
  }
LABEL_8:
  if (!v26)
    goto LABEL_18;
  *(_QWORD *)(v20 + 24) = v26;
  *(_QWORD *)(v20 + 32) = *(_QWORD *)(v21 + 32);
  (**(void (***)(unint64_t, unint64_t))(v26 - 8))(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8, ((unint64_t)v17 + 31) & 0xFFFFFFFFFFFFFFF8);
LABEL_19:
  v34 = *(_QWORD *)(v21 + 40);
  *(_BYTE *)(v20 + 48) = *(_BYTE *)(v21 + 48);
  *(_QWORD *)(v20 + 40) = v34;
  v35 = *(_QWORD *)(v21 + 56);
  *(_BYTE *)(v20 + 64) = *(_BYTE *)(v21 + 64);
  *(_QWORD *)(v20 + 56) = v35;
LABEL_20:
  v36 = (_QWORD *)(((unint64_t)v16 + 103) & 0xFFFFFFFFFFFFFFF8);
  v37 = (_QWORD *)(((unint64_t)v17 + 103) & 0xFFFFFFFFFFFFFFF8);
  *v36 = *v37;
  v38 = *(_QWORD *)(a3 + 24);
  v381 = *(_QWORD *)(a3 + 16);
  v39 = *(_QWORD *)(v381 - 8);
  v40 = *(_QWORD *)(v38 - 8);
  v41 = *(_DWORD *)(v39 + 84);
  v42 = *(_DWORD *)(v40 + 84);
  v43 = (*(_DWORD *)(v40 + 80) | *(_DWORD *)(v39 + 80)) & 0xF8 | 7u;
  v44 = v43 + 8;
  v45 = ~v43;
  v46 = (_QWORD *)(((unint64_t)v36 + v43 + 8) & ~v43);
  v47 = (_QWORD *)(((unint64_t)v37 + v43 + 8) & ~v43);
  v378 = v39;
  v48 = *(_QWORD *)(v39 + 64);
  v49 = *(_QWORD *)(v40 + 64);
  v385 = (v43 + 16) & ~v43;
  v50 = (_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  v51 = (unint64_t *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  v52 = *v51;
  if (*v50 < 0xFFFFFFFFuLL)
  {
    if (v52 < 0xFFFFFFFF)
    {
      if (v41)
        v75 = *(_QWORD *)(v39 + 64);
      else
        v75 = v48 + 1;
      if (v42)
        v76 = *(_QWORD *)(v40 + 64);
      else
        v76 = v49 + 1;
      if (v75 <= v76)
        v75 = v76;
      if (v75 <= 8)
        v58 = 8;
      else
        v58 = v75;
      v77 = (v43 + 16) & ~v43;
      v78 = (v385 | 1) + v58;
      v79 = v46;
      v80 = v47;
      v81 = v47;
      v69 = (unint64_t)v46;
      goto LABEL_106;
    }
    v375 = v38;
    if (v41)
      v61 = *(_QWORD *)(v39 + 64);
    else
      v61 = v48 + 1;
    v62 = ((unint64_t)v37 + v43 + 8) & ~v43;
    v368 = v46;
    *v46 = *v47;
    *v50 = *v51;
    v63 = (_QWORD *)(((unint64_t)v50 + v44) & v45);
    v64 = (void **)(((unint64_t)v51 + v44) & v45);
    if (v42)
      v65 = v49;
    else
      v65 = v49 + 1;
    if (v61 <= v65)
      v66 = v65;
    else
      v66 = v61;
    if (v66 <= 8)
      v58 = 8;
    else
      v58 = v66;
    v67 = *((unsigned __int8 *)v64 + v58);
    swift_retain();
    swift_retain();
    if (v67 >= 3)
    {
      if (v58 <= 3)
        v68 = v58;
      else
        v68 = 4;
      __asm { BR              X11 }
    }
    if (v67 == 2)
    {
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v40 + 48))(v64, 1, v375))
      {
        memcpy(v63, v64, v65);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v40 + 16))(v63, v64, v375);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v63, 0, 1, v375);
      }
      v84 = 2;
    }
    else
    {
      if (v67 != 1)
      {
        v82 = *v64;
        *v63 = *v64;
        *((_BYTE *)v63 + v58) = 0;
        v83 = v82;
LABEL_125:
        v69 = (unint64_t)v368;
        v77 = v385;
        goto LABEL_126;
      }
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v378 + 48))(v64, 1, v381))
      {
        memcpy(v63, v64, v61);
      }
      else
      {
        (*(void (**)(_QWORD *, void **, uint64_t))(v378 + 16))(v63, v64, v381);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v378 + 56))(v63, 0, 1, v381);
      }
      v84 = 1;
    }
    *((_BYTE *)v63 + v58) = v84;
    goto LABEL_125;
  }
  v371 = ((unint64_t)v37 + v43 + 8) & ~v43;
  v374 = v38;
  if (v52 < 0xFFFFFFFF)
  {
    v69 = (unint64_t)v46;
    swift_release();
    swift_release();
    if (v41)
      v70 = v48;
    else
      v70 = v48 + 1;
    v71 = (id *)(((unint64_t)v50 + v44) & v45);
    if (v42)
      v72 = v49;
    else
      v72 = v49 + 1;
    if (v70 <= v72)
      v70 = v72;
    if (v70 <= 8)
      v58 = 8;
    else
      v58 = v70;
    v73 = *((unsigned __int8 *)v71 + v58);
    if (v73 >= 3)
    {
      if (v58 <= 3)
        v74 = v58;
      else
        v74 = 4;
      __asm { BR              X12 }
    }
    v77 = v385;
    if (v73 == 2)
    {
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v40 + 48))(v71, 1, v374))
        (*(void (**)(id *, uint64_t))(v40 + 8))(v71, v374);
    }
    else if (v73 == 1)
    {
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v378 + 48))(v71, 1, v381))
        (*(void (**)(id *, uint64_t))(v378 + 8))(v71, v381);
    }
    else
    {

    }
    v78 = (v385 | 1) + v58;
    v79 = (void *)v69;
    v80 = (_QWORD *)v371;
    v81 = (const void *)v371;
LABEL_106:
    memcpy(v79, v81, v78);
    v62 = (uint64_t)v80;
    goto LABEL_126;
  }
  v368 = v46;
  *v46 = *v47;
  swift_retain();
  swift_release();
  *v50 = *v51;
  swift_retain();
  swift_release();
  if (v41)
    v53 = v48;
  else
    v53 = v48 + 1;
  v54 = (id *)(((unint64_t)v50 + v44) & v45);
  v55 = (void **)(((unint64_t)v51 + v44) & v45);
  if (v42)
    v56 = v49;
  else
    v56 = v49 + 1;
  if (v53 <= v56)
    v57 = v56;
  else
    v57 = v53;
  if (v57 <= 8)
    v58 = 8;
  else
    v58 = v57;
  if (v54 == v55)
  {
LABEL_124:
    v62 = v371;
    goto LABEL_125;
  }
  v59 = *((unsigned __int8 *)v54 + v58);
  if (v59 >= 3)
  {
    if (v58 <= 3)
      v60 = v58;
    else
      v60 = 4;
    __asm { BR              X12 }
  }
  if (v59 == 2)
  {
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v40 + 48))(v54, 1, v374))
      (*(void (**)(id *, uint64_t))(v40 + 8))(v54, v374);
  }
  else if (v59 == 1)
  {
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v378 + 48))(v54, 1, v381))
      (*(void (**)(id *, uint64_t))(v378 + 8))(v54, v381);
  }
  else
  {

  }
  v85 = *((unsigned __int8 *)v55 + v58);
  if (v85 >= 3)
  {
    if (v58 <= 3)
      v86 = v58;
    else
      v86 = 4;
    __asm { BR              X12 }
  }
  if (v85 != 2)
  {
    if (v85 == 1)
    {
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v378 + 48))(v55, 1, v381))
      {
        memcpy(v54, v55, v53);
      }
      else
      {
        (*(void (**)(id *, void **, uint64_t))(v378 + 16))(v54, v55, v381);
        (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v378 + 56))(v54, 0, 1, v381);
      }
      v69 = (unint64_t)v368;
      v62 = v371;
      v77 = v385;
      *((_BYTE *)v54 + v58) = 1;
      goto LABEL_126;
    }
    v87 = *v55;
    *v54 = *v55;
    *((_BYTE *)v54 + v58) = 0;
    v88 = v87;
    goto LABEL_124;
  }
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v40 + 48))(v55, 1, v374))
  {
    memcpy(v54, v55, v56);
  }
  else
  {
    (*(void (**)(id *, void **, uint64_t))(v40 + 16))(v54, v55, v374);
    (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v54, 0, 1, v374);
  }
  v69 = (unint64_t)v368;
  v62 = v371;
  v77 = v385;
  *((_BYTE *)v54 + v58) = 2;
LABEL_126:
  v89 = (v77 | 1) + v58;
  v90 = (void **)(((v69 | 7) + v89) & 0xFFFFFFFFFFFFFFF8);
  v91 = (void **)(((v62 | 7) + v89) & 0xFFFFFFFFFFFFFFF8);
  v92 = *v91;
  v93 = *v90;
  *v90 = *v91;
  v94 = v92;

  v95 = sub_21C5E32C8();
  v96 = *(_QWORD *)(v95 - 8);
  v97 = *(_DWORD *)(v96 + 80) & 0xFC;
  v98 = sub_21C5E2ED8();
  v99 = *(_QWORD *)(v98 - 8);
  v100 = *(unsigned __int8 *)(v99 + 80);
  v382 = sub_21C5E346C();
  v101 = *(_QWORD *)(v382 - 8);
  v102 = *(unsigned __int8 *)(v101 + 80);
  v103 = v97 | v100 | v102 | 3;
  v104 = ((unint64_t)v90 + v103 + 8) & ~v103;
  v386 = ((unint64_t)v91 + v103 + 8) & ~v103;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 24))(v104, v386, v95);
  v105 = *(_QWORD *)(v96 + 64) + v100;
  v106 = (v105 + v386) & ~v100;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 24))((v105 + v104) & ~v100, v106, v98);
  v107 = *(_QWORD *)(v99 + 64) + v102;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 24))((v107 + ((v105 + v104) & ~v100)) & ~v102, (v107 + v106) & ~v102, v382);
  v108 = *(_QWORD *)(v101 + 64) + 3;
  *(_DWORD *)((v108 + ((v107 + ((v105 + v104) & ~v100)) & ~v102)) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((v108 + ((v107 + v106) & ~v102)) & 0xFFFFFFFFFFFFFCLL);
  v109 = (v108 + ((v107 + (v105 & ~v100)) & ~v102)) & 0xFFFFFFFFFFFFFFFCLL;
  v376 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  v110 = *(_QWORD *)(v376 - 8);
  LODWORD(v95) = *(unsigned __int8 *)(v110 + 80);
  v379 = sub_21C5E2D64();
  v111 = *(_QWORD *)(v379 - 8);
  v112 = *(_DWORD *)(v111 + 80) | v95;
  v113 = *(_DWORD *)(v111 + 80);
  v114 = v109 + (v112 | 7) + 4;
  v115 = (_QWORD *)((v114 + v104) & ~(v112 | 7));
  v116 = (v114 + v386) & ~(v112 | 7);
  v365 = v115;
  *v115 = *(_QWORD *)v116;
  swift_retain();
  swift_release();
  v117 = (_QWORD *)(((unint64_t)v115 + 15) & 0xFFFFFFFFFFFFFFF8);
  v118 = (_QWORD *)((v116 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v117 = *v118;
  swift_retain();
  swift_release();
  v372 = v110;
  v119 = ((unint64_t)v117 + v112 + 8) & ~v112;
  v387 = (_BYTE *)(((unint64_t)v118 + v112 + 8) & ~v112);
  v120 = *(unsigned int *)(v110 + 84);
  v121 = *(unsigned int *)(v111 + 84);
  v122 = ~v113;
  v123 = *(_QWORD *)(v110 + 64) + v113;
  v124 = *(_QWORD *)(v111 + 64);
  v125 = v124 + v113;
  v126 = ((v124 + v113 + (v123 & ~v113)) & ~v113) + v124;
  v383 = v121 | v120;
  v361 = v122;
  v354 = v123;
  v357 = v125;
  if (v121 | v120)
  {
    if (v120 >= v121)
    {
      v141 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
      v142 = v141(v119, v120, v376);
      v135 = v141((uint64_t)v387, v120, v376);
      if (v142)
      {
LABEL_129:
        if (v135)
          goto LABEL_130;
        goto LABEL_355;
      }
    }
    else
    {
      v127 = (v123 + v119) & v122;
      __srca = (void *)v116;
      v128 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
      v129 = v126;
      v130 = v111;
      v131 = v122;
      v132 = v123;
      v133 = v128(v127, v121, v379);
      v134 = (unint64_t)&v387[v132] & v131;
      v111 = v130;
      v126 = v129;
      v119 = ((unint64_t)v117 + v112 + 8) & ~v112;
      v135 = v128(v134, v121, v379);
      v116 = (uint64_t)__srca;
      if (v133)
        goto LABEL_129;
    }
    if (!v135)
    {
LABEL_165:
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v372 + 24))(v119, v387, v376);
      v148 = (v354 + v119) & v361;
      v149 = *(void (**)(uint64_t, unint64_t, uint64_t))(v111 + 24);
      v149(v148, (unint64_t)&v387[v354] & v361, v379);
      v149((v357 + v148) & v361, (v357 + ((unint64_t)&v387[v354] & v361)) & v361, v379);
      goto LABEL_166;
    }
LABEL_160:
    (*(void (**)(uint64_t, uint64_t))(v372 + 8))(v119, v376);
    v145 = (v354 + v119) & v361;
    v146 = (void *)v119;
    v147 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
    v147(v145, v379);
    v147((v357 + v145) & v361, v379);
    if (v383)
      v136 = v126;
    else
      v136 = v126 + 1;
    v137 = v146;
    goto LABEL_164;
  }
  v138 = 8 * v126;
  if (!*(_BYTE *)(v119 + v126))
    goto LABEL_159;
  v139 = (*(unsigned __int8 *)(v119 + v126) - 1) << v138;
  if (v126 > 3)
    v139 = 0;
  if ((_DWORD)v126)
  {
    if (v126 <= 3)
      v140 = v126;
    else
      v140 = 4;
    __asm { BR              X12 }
  }
  if (v139 == -1)
  {
LABEL_159:
    if (!v387[v126])
      goto LABEL_165;
    v143 = (v387[v126] - 1) << v138;
    if (v126 > 3)
      v143 = 0;
    if ((_DWORD)v126)
    {
      if (v126 <= 3)
        v144 = v126;
      else
        v144 = 4;
      __asm { BR              X11 }
    }
    if (v143 == -1)
      goto LABEL_165;
    goto LABEL_160;
  }
  if (v387[v126] && (v387[v126] - 1) << v138 != -1)
  {
LABEL_130:
    if (v383)
      v136 = v126;
    else
      v136 = v126 + 1;
    v137 = (void *)v119;
LABEL_164:
    memcpy(v137, v387, v136);
LABEL_166:
    v150 = (unint64_t)v365;
    goto LABEL_167;
  }
LABEL_355:
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v372 + 16))(v119, v387, v376);
  v332 = (v354 + v119) & v361;
  v333 = *(void (**)(uint64_t, unint64_t, uint64_t))(v111 + 16);
  v333(v332, (unint64_t)&v387[v354] & v361, v379);
  v333((v357 + v332) & v361, (v357 + ((unint64_t)&v387[v354] & v361)) & v361, v379);
  v150 = (unint64_t)v365;
  if (!v383)
    *(_BYTE *)(v119 + v126) = 0;
LABEL_167:
  v151 = (v112 + 16) & ~v112;
  if (!v383)
    ++v151;
  v152 = v151 + v126;
  v153 = (_QWORD *)(((v150 | 7) + v152) & 0xFFFFFFFFFFFFFFF8);
  v154 = (_QWORD *)(((v116 | 7) + v152) & 0xFFFFFFFFFFFFFFF8);
  *v153 = *v154;
  swift_retain();
  swift_release();
  v373 = sub_21C5E31A8();
  v155 = *(_QWORD *)(v373 - 8);
  v156 = *(unsigned __int8 *)(v155 + 80);
  v157 = v156 | 7;
  v348 = v156;
  v156 += 8;
  v158 = (_QWORD *)(((unint64_t)v153 + v156) & ~v157);
  v369 = v157;
  v159 = (_QWORD *)(((unint64_t)v154 + v156) & ~v157);
  v380 = v155;
  v346 = *(_QWORD *)(v155 + 64);
  if (v346 <= 8)
    v160 = 8;
  else
    v160 = *(_QWORD *)(v155 + 64);
  if (v158 != v159)
  {
    v161 = *((unsigned __int8 *)v158 + v160);
    if (v161 >= 2)
    {
      if (v160 <= 3)
        v162 = v160;
      else
        v162 = 4;
      __asm { BR              X12 }
    }
    if (v161 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v155 + 8))(v158, v373);
    else
      swift_release();
    v163 = *((unsigned __int8 *)v159 + v160);
    if (v163 >= 2)
    {
      if (v160 <= 3)
        v164 = v160;
      else
        v164 = 4;
      __asm { BR              X12 }
    }
    if (v163 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v380 + 16))(v158, v159, v373);
      *((_BYTE *)v158 + v160) = 1;
    }
    else
    {
      *v158 = *v159;
      *((_BYTE *)v158 + v160) = 0;
      swift_retain();
    }
  }
  v165 = sub_21C5E2E78();
  v166 = *(_QWORD *)(v165 - 8);
  v366 = *(unsigned __int8 *)(v166 + 80);
  v167 = v160 + (v366 | 7) + 1;
  v168 = (_QWORD *)(((unint64_t)v158 + v167) & ~(v366 | 7));
  v169 = (_QWORD *)(((unint64_t)v159 + v167) & ~(v366 | 7));
  v384 = v165;
  v388 = v166;
  v170 = *(_QWORD *)(v166 + 64);
  if (v170 <= 8)
    v171 = 8;
  else
    v171 = *(_QWORD *)(v166 + 64);
  if (v168 != v169)
  {
    v172 = *((unsigned __int8 *)v168 + v171);
    if (v172 >= 2)
    {
      if (v171 <= 3)
        v173 = v171;
      else
        v173 = 4;
      __asm { BR              X12 }
    }
    if (v172 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v166 + 8))(v168, v165);
    else
      swift_release();
    v174 = *((unsigned __int8 *)v169 + v171);
    if (v174 >= 2)
    {
      if (v171 <= 3)
        v175 = v171;
      else
        v175 = 4;
      __asm { BR              X12 }
    }
    if (v174 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v388 + 16))(v168, v169, v384);
      *((_BYTE *)v168 + v171) = 1;
    }
    else
    {
      *v168 = *v169;
      *((_BYTE *)v168 + v171) = 0;
      swift_retain();
    }
  }
  v176 = sub_21C5E32E0();
  v177 = *(_QWORD *)(v176 - 8);
  v178 = *(_DWORD *)(v177 + 80) & 0xF8 | 7;
  v179 = v171 + v178 + 1;
  v180 = (_QWORD *)(((unint64_t)v168 + v179) & ~v178);
  v181 = (_QWORD *)(((unint64_t)v169 + v179) & ~v178);
  if (*(_QWORD *)(v177 + 64) <= 8uLL)
    v182 = 8;
  else
    v182 = *(_QWORD *)(v177 + 64);
  if (v180 != v181)
  {
    v183 = v176;
    v184 = *((unsigned __int8 *)v180 + v182);
    if (v184 >= 2)
    {
      if (v182 <= 3)
        v185 = v182;
      else
        v185 = 4;
      __asm { BR              X12 }
    }
    if (v184 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v177 + 8))(v180, v176);
    else
      swift_release();
    v186 = *((unsigned __int8 *)v181 + v182);
    if (v186 >= 2)
    {
      if (v182 <= 3)
        v187 = v182;
      else
        v187 = 4;
      __asm { BR              X12 }
    }
    if (v186 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v177 + 16))(v180, v181, v183);
      *((_BYTE *)v180 + v182) = 1;
    }
    else
    {
      *v180 = *v181;
      *((_BYTE *)v180 + v182) = 0;
      swift_retain();
    }
  }
  v377 = v170;
  v188 = sub_21C5E3088();
  v189 = *(_QWORD *)(v188 - 8);
  v190 = *(_DWORD *)(v189 + 80) & 0xF8 | 7;
  v191 = v182 + v190 + 1;
  v192 = (_QWORD *)(((unint64_t)v180 + v191) & ~v190);
  v193 = (_QWORD *)(((unint64_t)v181 + v191) & ~v190);
  if (*(_QWORD *)(v189 + 64) <= 8uLL)
    v194 = 8;
  else
    v194 = *(_QWORD *)(v189 + 64);
  if (v192 != v193)
  {
    v195 = v188;
    v196 = *((unsigned __int8 *)v192 + v194);
    if (v196 >= 2)
    {
      if (v194 <= 3)
        v197 = v194;
      else
        v197 = 4;
      __asm { BR              X12 }
    }
    if (v196 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v189 + 8))(v192, v188);
    else
      swift_release();
    v198 = *((unsigned __int8 *)v193 + v194);
    if (v198 >= 2)
    {
      if (v194 <= 3)
        v199 = v194;
      else
        v199 = 4;
      __asm { BR              X12 }
    }
    if (v198 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v189 + 16))(v192, v193, v195);
      *((_BYTE *)v192 + v194) = 1;
    }
    else
    {
      *v192 = *v193;
      *((_BYTE *)v192 + v194) = 0;
      swift_retain();
    }
  }
  v200 = (char *)v192 + v194 + 1;
  v201 = (char *)v193 + v194 + 1;
  v202 = (unint64_t)(v200 + 7) & 0xFFFFFFFFFFFFFFF8;
  v203 = (unint64_t)(v201 + 7) & 0xFFFFFFFFFFFFFFF8;
  v204 = *(_QWORD *)v203;
  v205 = *(_BYTE *)(v203 + 8);
  sub_21C531A90(*(_QWORD *)v203, v205);
  v206 = *(_QWORD *)v202;
  v207 = *(_BYTE *)(v202 + 8);
  *(_QWORD *)v202 = v204;
  *(_BYTE *)(v202 + 8) = v205;
  sub_21C531A84(v206, v207);
  v208 = (unint64_t)(v201 + 23) & 0xFFFFFFFFFFFFFFF8;
  v209 = *(_QWORD *)v208;
  v210 = *(_QWORD *)(v208 + 8);
  v211 = (unint64_t)(v200 + 23) & 0xFFFFFFFFFFFFFFF8;
  v212 = *(_QWORD *)(v208 + 16);
  v213 = *(_QWORD *)(v208 + 24);
  v214 = *(_QWORD *)(v208 + 32);
  v215 = *(_QWORD *)(v208 + 40);
  v216 = *(_QWORD *)(v208 + 48);
  v217 = *(_QWORD *)(v208 + 56);
  __srcb = *(void **)(v208 + 64);
  v355 = *(_QWORD *)(v208 + 72);
  v358 = *(_BYTE *)(v208 + 80);
  v362 = *(_BYTE *)(v208 + 81);
  sub_21C531870(*(_QWORD *)v208, v210, v212, v213, v214, v215, v216, v217, (uint64_t)__srcb, v355, v358, v362);
  v218 = *(_QWORD *)v211;
  v219 = *(_QWORD *)(v211 + 8);
  v220 = *(_QWORD *)(v211 + 16);
  v221 = *(_QWORD *)(v211 + 24);
  v222 = *(_QWORD *)(v211 + 32);
  v223 = *(_QWORD *)(v211 + 40);
  v224 = *(_QWORD *)(v211 + 48);
  v225 = *(_QWORD *)(v211 + 56);
  v226 = *(_QWORD *)(v211 + 64);
  v227 = *(_QWORD *)(v211 + 72);
  v228 = *(_BYTE *)(v211 + 80);
  v229 = *(_BYTE *)(v211 + 81);
  *(_QWORD *)v211 = v209;
  *(_QWORD *)(v211 + 8) = v210;
  *(_QWORD *)(v211 + 16) = v212;
  *(_QWORD *)(v211 + 24) = v213;
  *(_QWORD *)(v211 + 32) = v214;
  *(_QWORD *)(v211 + 40) = v215;
  *(_QWORD *)(v211 + 48) = v216;
  *(_QWORD *)(v211 + 56) = v217;
  *(_QWORD *)(v211 + 64) = __srcb;
  *(_QWORD *)(v211 + 72) = v355;
  *(_BYTE *)(v211 + 80) = v358;
  *(_BYTE *)(v211 + 81) = v362;
  sub_21C53198C(v218, v219, v220, v221, v222, v223, v224, v225, v226, v227, v228, v229);
  v230 = v366;
  v231 = v369 | v366;
  v232 = ~(v369 | v366);
  v233 = (v231 + 82 + v211) & ~v231;
  v234 = (_QWORD *)((v231 + 82 + v208) & ~v231);
  if ((_QWORD *)v233 == v234)
  {
    v247 = ~v366;
    v248 = (v366 + 2) & ~v366;
    v249 = v345;
    v235 = v377;
    v242 = ((((v346 + v366 + ((v348 + 2) & ~v348)) & ~v366) + v377 + 7) & 0xFFFFFFFFFFFFFFF8) + v366 + 8;
    v250 = v242 & ~v366;
    v251 = (v366 + 3) & ~v366;
    goto LABEL_347;
  }
  v235 = v377;
  v236 = *(unsigned int *)(v380 + 84);
  v237 = *(unsigned int *)(v388 + 84);
  if (v236 <= v237)
    v238 = *(_DWORD *)(v388 + 84);
  else
    v238 = *(_DWORD *)(v380 + 84);
  if (v238 <= 0x7FFFFFFE)
    v238 = 2147483646;
  v363 = v238;
  v239 = v348;
  v370 = v348 + 2;
  v341 = v366 + 3;
  v240 = (v366 + 3) & ~v366;
  v241 = (v366 + 2) & ~v366;
  v338 = v377 + v241;
  __n = ((((v346 + v366 + ((v348 + 2) & ~v348)) & ~v366) + v377 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v242 = __n + v366;
  v243 = (__n + v366) & ~v366;
  v342 = v377 + v240 + v231;
  if (v377 + v241 + ((__n + v366 + ((v342 + v243) & v232)) & ~v366) + 6 <= 8)
    v244 = 8;
  else
    v244 = v377 + v241 + ((__n + v366 + ((v342 + v243) & v232)) & ~v366) + 6;
  v245 = *(unsigned __int8 *)(v233 + v244);
  if (v245 >= 2)
  {
    if (v244 <= 3)
      v246 = v244;
    else
      v246 = 4;
    __asm { BR              X12 }
  }
  v247 = ~v366;
  __src = (unint64_t)v234;
  v367 = v232;
  v349 = *(_DWORD *)(v380 + 84);
  v356 = v346 + v230;
  v359 = ~v239;
  v347 = (v230 + 2) & ~v230;
  v343 = (__n + v230) & ~v230;
  v344 = (v230 + 3) & ~v230;
  v340 = v230 + 2;
  v337 = v377 + v240;
  if (v245 != 1)
  {
    swift_release();
    goto LABEL_302;
  }
  v252 = (v370 + v233) & ~v239;
  if ((_DWORD)v236 == v238)
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v380 + 48))((v370 + v233) & ~v239, v236, v373))
      goto LABEL_276;
LABEL_271:
    v253 = (v356 + v252) & v247;
LABEL_275:
    (*(void (**)(uint64_t, uint64_t))(v380 + 8))(v252, v373);
    (*(void (**)(uint64_t, uint64_t))(v388 + 8))(v253, v384);
    swift_release();
    goto LABEL_276;
  }
  v253 = (v356 + v252) & v247;
  if ((_DWORD)v237 == v238)
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v388 + 48))((v356 + v252) & v247, v237, v384))
      goto LABEL_276;
    goto LABEL_271;
  }
  v254 = *(_QWORD *)((v377 + v253 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v254 >= 0xFFFFFFFF)
    LODWORD(v254) = -1;
  if ((v254 + 1) < 2)
    goto LABEL_275;
LABEL_276:
  v255 = (unsigned __int8 *)((v242 + v233) & v247);
  if (v237 > 0xFE)
  {
    v258 = v349;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v388 + 48))((unint64_t)&v255[v341] & v247, v237, v384))
    {
      goto LABEL_284;
    }
    goto LABEL_283;
  }
  v256 = *v255;
  if (v256 >= 2)
    v257 = (v256 + 2147483646) & 0x7FFFFFFF;
  else
    v257 = -1;
  v258 = v349;
  if (v257 == -1)
LABEL_283:
    (*(void (**)(unint64_t, uint64_t))(v388 + 8))((unint64_t)&v255[v341] & v247, v384);
LABEL_284:
  v259 = (unint64_t)&v255[v342] & v367;
  v260 = (v370 + v259) & v359;
  if ((_DWORD)v258 == v363)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v380 + 48))((v370 + v259) & v359, v258, v373))
    {
      goto LABEL_294;
    }
LABEL_289:
    v261 = (v356 + v260) & v247;
LABEL_293:
    (*(void (**)(unint64_t, uint64_t))(v380 + 8))(v260, v373);
    (*(void (**)(unint64_t, uint64_t))(v388 + 8))(v261, v384);
    swift_release();
    goto LABEL_294;
  }
  v261 = (v356 + v260) & v247;
  if ((_DWORD)v237 == v363)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v388 + 48))((v356 + v260) & v247, v237, v384))
    {
      goto LABEL_294;
    }
    goto LABEL_289;
  }
  v262 = *(_QWORD *)((v377 + v261 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v262 >= 0xFFFFFFFF)
    LODWORD(v262) = -1;
  if ((v262 + 1) < 2)
    goto LABEL_293;
LABEL_294:
  v263 = (unsigned __int8 *)((v242 + v259) & v247);
  if (v237 > 0xFE)
  {
    v235 = v377;
    v234 = (_QWORD *)__src;
    v236 = v349;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v388 + 48))((unint64_t)&v263[v340] & v247, v237, v384))
    {
      goto LABEL_302;
    }
    goto LABEL_301;
  }
  v264 = *v263;
  v235 = v377;
  v234 = (_QWORD *)__src;
  if (v264 >= 2)
    v265 = (v264 + 2147483646) & 0x7FFFFFFF;
  else
    v265 = -1;
  v236 = v349;
  if (v265 == -1)
LABEL_301:
    (*(void (**)(unint64_t, uint64_t))(v388 + 8))((unint64_t)&v263[v340] & v247, v384);
LABEL_302:
  v266 = *((unsigned __int8 *)v234 + v244);
  if (v266 >= 2)
  {
    if (v244 <= 3)
      v267 = v244;
    else
      v267 = 4;
    __asm { BR              X12 }
  }
  if (v266 == 1)
  {
    v268 = ((unint64_t)v234 + v370) & v359;
    v336 = v244;
    if ((_DWORD)v236 == v363)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v380 + 48))(((unint64_t)v234 + v370) & v359, v236, v373))goto LABEL_313;
    }
    else
    {
      v269 = (v356 + v268) & v247;
      if ((_DWORD)v237 == v363)
      {
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v388 + 48))((v356 + v268) & v247, v237, v384))
        {
LABEL_313:
          v270 = v356;
          v269 = (v356 + v268) & v247;
          v335 = v235 + 7;
          v334 = (_QWORD *)((v235 + 7 + v269) & 0xFFFFFFFFFFFFFFF8);
LABEL_318:
          v272 = __src;
          *(_BYTE *)v233 = *(_BYTE *)__src;
          *(_BYTE *)(v233 | 1) = *(_BYTE *)(__src | 1);
          v273 = (v370 + v233) & v359;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v380 + 16))(v273, v268, v373);
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v388 + 16))((v270 + v273) & v247, v269, v384);
          *(_QWORD *)((v335 + ((v270 + v273) & v247)) & 0xFFFFFFFFFFFFF8) = *v334;
          swift_retain();
          goto LABEL_320;
        }
      }
      else
      {
        v271 = *(_QWORD *)((v235 + 7 + v269) & 0xFFFFFFFFFFFFFFF8);
        if (v271 >= 0xFFFFFFFF)
          LODWORD(v271) = -1;
        if ((v271 + 1) < 2)
        {
          v270 = v356;
          v334 = (_QWORD *)((v235 + 7 + v269) & 0xFFFFFFFFFFFFFFF8);
          v335 = v235 + 7;
          goto LABEL_318;
        }
      }
    }
    v272 = __src;
    memcpy((void *)v233, (const void *)__src, __n);
LABEL_320:
    v274 = (_BYTE *)((v242 + v233) & v247);
    v275 = (unsigned __int8 *)((v242 + v272) & v247);
    if (v237 > 0xFE)
    {
      v276 = v359;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v388 + 48))((unint64_t)&v275[v341] & v247, v237, v384))goto LABEL_322;
    }
    else
    {
      v276 = v359;
      if (*v275 < 2u)
      {
LABEL_322:
        *v274 = *v275;
        *(_BYTE *)(((v242 + v233) & v247) + 1) = v275[1];
        *(_BYTE *)(((v242 + v233) & v247) + 2) = v275[2];
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v388 + 16))((unint64_t)&v274[v341] & v247, (unint64_t)&v275[v341] & v247, v384);
        goto LABEL_325;
      }
    }
    memcpy((void *)((v242 + v233) & v247), v275, v337);
LABEL_325:
    v277 = (unint64_t)&v274[v342] & v367;
    v278 = (unint64_t)&v275[v342] & v367;
    v279 = (v370 + v278) & v276;
    if (v349 == v363)
    {
      if (!(*(unsigned int (**)(unint64_t))(v380 + 48))((v370 + v278) & v276))
        goto LABEL_330;
    }
    else
    {
      v280 = (v356 + v279) & v247;
      if ((_DWORD)v237 == v363)
      {
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v388 + 48))((v356 + v279) & v247, v237, v384))
        {
LABEL_330:
          v364 = v237;
          v281 = v356;
          v280 = (v356 + v279) & v247;
          v360 = v377 + 7;
          v350 = (_QWORD *)((v377 + 7 + v280) & 0xFFFFFFFFFFFFFFF8);
LABEL_335:
          *(_BYTE *)v277 = *(_BYTE *)v278;
          *(_BYTE *)(v277 | 1) = *(_BYTE *)(v278 | 1);
          v283 = (v370 + v277) & v276;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v380 + 16))(v283, v279, v373);
          v284 = (v281 + v283) & v247;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v388 + 16))(v284, v280, v384);
          *(_QWORD *)((v360 + v284) & 0xFFFFFFFFFFFFF8) = *v350;
          swift_retain();
          v249 = v345;
          v237 = v364;
          goto LABEL_337;
        }
      }
      else
      {
        v282 = *(_QWORD *)((v377 + 7 + v280) & 0xFFFFFFFFFFFFFFF8);
        if (v282 >= 0xFFFFFFFF)
          LODWORD(v282) = -1;
        if ((v282 + 1) < 2)
        {
          v364 = v237;
          v281 = v356;
          v360 = v377 + 7;
          v350 = (_QWORD *)((v377 + 7 + v280) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_335;
        }
      }
    }
    memcpy((void *)v277, (const void *)v278, __n);
    v249 = v345;
LABEL_337:
    v285 = (_BYTE *)((v242 + v277) & v247);
    v286 = (unsigned __int8 *)((v242 + v278) & v247);
    if (v237 > 0xFE)
    {
      v289 = (unint64_t)&v286[v340] & v247;
      v235 = v377;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v388 + 48))(v289, v237, v384))
      {
        LOBYTE(v287) = *v286;
        v290 = v338;
        v288 = v340;
        goto LABEL_344;
      }
    }
    else
    {
      v287 = *v286;
      v235 = v377;
      if (v287 <= 1)
      {
        v288 = v340;
        v289 = (unint64_t)&v286[v340] & v247;
        v290 = v338;
LABEL_344:
        *v285 = v287;
        v285[1] = v286[1];
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v388 + 16))((unint64_t)&v285[v288] & v247, v289, v384);
        goto LABEL_345;
      }
    }
    v290 = v338;
    memcpy(v285, v286, v338);
LABEL_345:
    v291 = &v285[v290];
    *v291 = *(_WORD *)&v286[v290];
    v291[1] = *(_WORD *)&v286[v290 + 2];
    v291[2] = *(_WORD *)&v286[v290 + 4];
    *(_BYTE *)(v233 + v336) = 1;
    v234 = (_QWORD *)__src;
    goto LABEL_346;
  }
  *(_QWORD *)v233 = *v234;
  *(_BYTE *)(v233 + v244) = 0;
  swift_retain();
  v249 = v345;
LABEL_346:
  v232 = v367;
  v248 = v347;
  v250 = v343;
  v251 = v344;
LABEL_347:
  v292 = v248 + v235 + ((v242 + ((v251 + v235 + v231 + v250) & v232)) & v247) + 6;
  if (v292 <= 8)
    v292 = 8;
  v293 = v292 + 1;
  v294 = v233 + v293;
  v295 = (char *)v234 + v293;
  v296 = (v294 + 7) & 0xFFFFFFFFFFFFFFF8;
  v297 = ((unint64_t)v234 + v293 + 7) & 0xFFFFFFFFFFFFFFF8;
  v298 = *(_QWORD *)v297;
  v299 = *(_BYTE *)(v297 + 8);
  sub_21C531A90(*(_QWORD *)v297, v299);
  v300 = *(_QWORD *)v296;
  v301 = *(_BYTE *)(v296 + 8);
  *(_QWORD *)v296 = v298;
  *(_BYTE *)(v296 + 8) = v299;
  sub_21C531A84(v300, v301);
  v302 = (v294 + 23) & 0xFFFFFFFFFFFFFFF8;
  v303 = (unint64_t)(v295 + 23) & 0xFFFFFFFFFFFFFFF8;
  v304 = *(_QWORD *)v303;
  v305 = *(_QWORD *)(v303 + 8);
  LOBYTE(v296) = *(_BYTE *)(v303 + 16);
  sub_21C58A5E8(*(_QWORD *)v303, v305, v296, (uint64_t (*)(void))sub_21C531C4C);
  v306 = *(_QWORD *)v302;
  v307 = *(_QWORD *)(v302 + 8);
  v308 = *(_BYTE *)(v302 + 16);
  *(_QWORD *)v302 = v304;
  *(_QWORD *)(v302 + 8) = v305;
  *(_BYTE *)(v302 + 16) = v296;
  sub_21C531ABC(v306, v307, v308, (uint64_t (*)(void))sub_21C531C48);
  v309 = (v294 + 47) & 0xFFFFFFFFFFFFFFF8;
  v310 = (unint64_t)(v295 + 47) & 0xFFFFFFFFFFFFFFF8;
  v311 = *(_QWORD *)v310;
  v312 = *(_QWORD *)(v310 + 8);
  LOBYTE(v296) = *(_BYTE *)(v310 + 16);
  sub_21C58A5E8(*(_QWORD *)v310, v312, v296, (uint64_t (*)(void))sub_21C531AAC);
  v313 = *(_QWORD *)v309;
  v314 = *(_QWORD *)(v309 + 8);
  v315 = *(_BYTE *)(v309 + 16);
  *(_QWORD *)v309 = v311;
  *(_QWORD *)(v309 + 8) = v312;
  *(_BYTE *)(v309 + 16) = v296;
  sub_21C531ABC(v313, v314, v315, (uint64_t (*)(void))sub_21C531A9C);
  v316 = (v294 + 71) & 0xFFFFFFFFFFFFFFF8;
  v317 = (unint64_t)(v295 + 71) & 0xFFFFFFFFFFFFFFF8;
  v318 = *(_QWORD *)v317;
  LOBYTE(v312) = *(_BYTE *)(v317 + 8);
  sub_21C531A90(*(_QWORD *)v317, v312);
  v319 = *(_QWORD *)v316;
  v320 = *(_BYTE *)(v316 + 8);
  *(_QWORD *)v316 = v318;
  *(_BYTE *)(v316 + 8) = v312;
  sub_21C531A84(v319, v320);
  v321 = (v294 + 87) & 0xFFFFFFFFFFFFFFF8;
  v322 = (unint64_t)(v295 + 87) & 0xFFFFFFFFFFFFFFF8;
  v323 = *(_QWORD *)v322;
  LOBYTE(v312) = *(_BYTE *)(v322 + 8);
  sub_21C52EF74(*(_QWORD *)v322, v312);
  v324 = *(_QWORD *)v321;
  v325 = *(_BYTE *)(v321 + 8);
  *(_QWORD *)v321 = v323;
  *(_BYTE *)(v321 + 8) = v312;
  sub_21C531AC8(v324, v325);
  v326 = (v294 + 103) & 0xFFFFFFFFFFFFFFF8;
  v327 = (unint64_t)(v295 + 103) & 0xFFFFFFFFFFFFFFF8;
  v328 = *(_QWORD *)v327;
  LOBYTE(v312) = *(_BYTE *)(v327 + 8);
  sub_21C531A90(*(_QWORD *)v327, v312);
  v329 = *(_QWORD *)v326;
  v330 = *(_BYTE *)(v326 + 8);
  *(_QWORD *)v326 = v328;
  *(_BYTE *)(v326 + 8) = v312;
  sub_21C531A84(v329, v330);
  return v249;
}

_OWORD *sub_21C592A38(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v3;
  _OWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  size_t v38;
  BOOL v39;
  _QWORD *v40;
  _QWORD *v41;
  size_t v42;
  unint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  void (*v49)(_QWORD *, _QWORD, uint64_t, uint64_t);
  char v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  void *v80;
  _BYTE *v81;
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  size_t v87;
  int v88;
  int v89;
  int v90;
  size_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  void (*v95)(unint64_t, unint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  size_t v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  unsigned int v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  unint64_t v117;
  uint64_t v118;
  unsigned int v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  unsigned int v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  unsigned int v139;
  uint64_t v140;
  char v141;
  char *v142;
  char *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  unsigned int v159;
  int v160;
  unint64_t v161;
  unint64_t v162;
  size_t v163;
  size_t v164;
  uint64_t v165;
  uint64_t v166;
  unsigned int v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  unint64_t v175;
  _QWORD *v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  _BYTE *v182;
  _BYTE *v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  _OWORD *v193;
  _BYTE *v194;
  unsigned __int8 *v195;
  unsigned int v196;
  uint64_t v197;
  unint64_t v198;
  size_t v199;
  char v200;
  _WORD *v201;
  char *v202;
  char *v203;
  unint64_t v204;
  unint64_t v205;
  uint64_t v206;
  unint64_t v207;
  unint64_t v208;
  __int128 v209;
  unint64_t v210;
  unint64_t v211;
  __int128 v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t v215;
  unint64_t v216;
  unint64_t v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  uint64_t v221;
  unint64_t v223;
  _QWORD *v224;
  size_t v225;
  uint64_t v226;
  uint64_t v227;
  size_t v228;
  int v229;
  size_t v230;
  uint64_t v231;
  size_t __n;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  unint64_t __dst;
  uint64_t v237;
  uint64_t v238;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  _QWORD *v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  unint64_t v249;
  uint64_t v250;

  *a1 = *a2;
  v3 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v4 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v3 = *v4;
  v5 = (_OWORD *)(((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_OWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = (_OWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_OWORD *)v14;
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v14 + 16);
  *(_OWORD *)v13 = v15;
  v16 = (v13 + 31) & 0xFFFFFFFFFFFFFFF8;
  v17 = (v14 + 31) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_OWORD *)(v17 + 32);
  v18 = *(_OWORD *)(v17 + 48);
  v20 = *(_OWORD *)(v17 + 16);
  *(_BYTE *)(v16 + 64) = *(_BYTE *)(v17 + 64);
  *(_OWORD *)(v16 + 32) = v19;
  *(_OWORD *)(v16 + 48) = v18;
  *(_OWORD *)(v16 + 16) = v20;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v21 = (_QWORD *)((v13 + 103) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)((v14 + 103) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = *(_QWORD *)(a3 + 16);
  v24 = *(_QWORD *)(a3 + 24);
  v25 = *(_QWORD *)(v23 - 8);
  v26 = *(_QWORD *)(v24 - 8);
  v27 = *(_DWORD *)(v25 + 84);
  v28 = *(_DWORD *)(v26 + 84);
  v29 = (*(_DWORD *)(v26 + 80) | *(_DWORD *)(v25 + 80)) & 0xF8 | 7u;
  v30 = v29 + 8;
  v31 = ((unint64_t)v21 + v29 + 8) & ~v29;
  v32 = ((unint64_t)v22 + v29 + 8) & ~v29;
  v33 = *(_QWORD *)(v25 + 64);
  v34 = *(_QWORD *)(v26 + 64);
  v35 = (v29 + 16) & ~v29;
  v36 = (_QWORD *)((v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v36 < 0xFFFFFFFFuLL)
  {
    if (v27)
      v47 = *(_QWORD *)(v25 + 64);
    else
      v47 = v33 + 1;
    if (!v28)
      ++v34;
    if (v47 > v34)
      v34 = v47;
    if (v34 <= 8)
      v44 = 8;
    else
      v44 = v34;
    memcpy((void *)v31, (const void *)v32, (v35 | 1) + v44);
  }
  else
  {
    v247 = (v29 + 16) & ~v29;
    v37 = ~v29;
    if (v27)
      v38 = *(_QWORD *)(v25 + 64);
    else
      v38 = v33 + 1;
    v39 = v28 == 0;
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v40 = (_QWORD *)((v31 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v40 = *v36;
    v245 = (_QWORD *)(((unint64_t)v40 + v30) & v37);
    v41 = (_QWORD *)(((unint64_t)v36 + v30) & v37);
    if (v39)
      v42 = v34 + 1;
    else
      v42 = v34;
    if (v38 <= v42)
      v43 = v42;
    else
      v43 = v38;
    if (v43 <= 8)
      v44 = 8;
    else
      v44 = v43;
    v45 = *((unsigned __int8 *)v41 + v44);
    if (v45 >= 3)
    {
      if (v44 <= 3)
        v46 = v44;
      else
        v46 = 4;
      __asm { BR              X12 }
    }
    if (v45 == 2)
    {
      v48 = v245;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48))(v41, 1, v24))
      {
        memcpy(v245, v41, v42);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v26 + 32))(v245, v41, v24);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v245, 0, 1, v24);
      }
      v35 = v247;
      v50 = 2;
    }
    else
    {
      if (v45 != 1)
      {
        v35 = v247;
        *v245 = *v41;
        *((_BYTE *)v245 + v44) = 0;
        goto LABEL_42;
      }
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v41, 1, v23))
      {
        v48 = v245;
        memcpy(v245, v41, v38);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v25 + 32))(v245, v41, v23);
        v49 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56);
        v48 = v245;
        v49(v245, 0, 1, v23);
      }
      v35 = v247;
      v50 = 1;
    }
    *((_BYTE *)v48 + v44) = v50;
  }
LABEL_42:
  v51 = (v35 | 1) + v44;
  v52 = (_QWORD *)(((v31 | 7) + v51) & 0xFFFFFFFFFFFFFFF8);
  v53 = (_QWORD *)(((v32 | 7) + v51) & 0xFFFFFFFFFFFFFFF8);
  *v52 = *v53;
  v54 = sub_21C5E32C8();
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(_DWORD *)(v55 + 80) & 0xFC;
  v57 = sub_21C5E2ED8();
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(unsigned __int8 *)(v58 + 80);
  v248 = sub_21C5E346C();
  v60 = *(_QWORD *)(v248 - 8);
  v61 = *(unsigned __int8 *)(v60 + 80);
  v62 = v56 | v59 | v61 | 3;
  v63 = ((unint64_t)v52 + v62 + 8) & ~v62;
  v64 = ((unint64_t)v53 + v62 + 8) & ~v62;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32))(v63, v64, v54);
  v65 = *(_QWORD *)(v55 + 64) + v59;
  v66 = (v65 + v64) & ~v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))((v65 + v63) & ~v59, v66, v57);
  v67 = *(_QWORD *)(v58 + 64) + v61;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))((v67 + ((v65 + v63) & ~v59)) & ~v61, (v67 + v66) & ~v61, v248);
  v68 = *(_QWORD *)(v60 + 64) + 3;
  *(_DWORD *)((v68 + ((v67 + ((v65 + v63) & ~v59)) & ~v61)) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((v68
                                                                                               + ((v67 + v66) & ~v61)) & 0xFFFFFFFFFFFFFCLL);
  v69 = (v68 + ((v67 + (v65 & ~v59)) & ~v61)) & 0xFFFFFFFFFFFFFFFCLL;
  v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  v70 = *(_QWORD *)(v242 - 8);
  LODWORD(v57) = *(unsigned __int8 *)(v70 + 80);
  v71 = sub_21C5E2D64();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(_DWORD *)(v72 + 80) | v57;
  v74 = *(_DWORD *)(v72 + 80);
  v75 = v69 + (v73 | 7) + 4;
  v76 = (v75 + v63) & ~(v73 | 7);
  v77 = (_QWORD *)((v75 + v64) & ~(v73 | 7));
  *(_QWORD *)v76 = *v77;
  v78 = (_QWORD *)((v76 + 15) & 0xFFFFFFFFFFFFFFF8);
  v79 = (_QWORD *)(((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v78 = *v79;
  v80 = (void *)(((unint64_t)v78 + v73 + 8) & ~v73);
  v81 = (_BYTE *)(((unint64_t)v79 + v73 + 8) & ~v73);
  v82 = *(unsigned int *)(v70 + 84);
  v83 = *(_DWORD *)(v72 + 84);
  v84 = ~v74;
  v85 = *(_QWORD *)(v70 + 64) + v74;
  v86 = *(_QWORD *)(v72 + 64);
  v87 = ((v86 + v74 + (v85 & ~v74)) & ~v74) + v86;
  v88 = v83 | v82;
  v249 = (unint64_t)v77;
  v240 = v71;
  v237 = v86 + v74;
  if (!(v83 | v82))
  {
    if (!v81[v87])
      goto LABEL_60;
    v89 = (v81[v87] - 1) << (8 * v87);
    if (v87 > 3)
      v89 = 0;
    if ((_DWORD)v87)
    {
      if (v87 <= 3)
        v90 = ((v86 + v74 + (v85 & ~(_DWORD)v74)) & ~(_DWORD)v74) + v86;
      else
        v90 = 4;
      __asm { BR              X11 }
    }
    if (v89 == -1)
      goto LABEL_60;
    goto LABEL_55;
  }
  if (v82 >= v83)
  {
    if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v70 + 48))(v81, v82, v242))
      goto LABEL_60;
LABEL_55:
    if (v88)
      v91 = v87;
    else
      v91 = v87 + 1;
    memcpy(v80, v81, v91);
    goto LABEL_62;
  }
  if ((*(unsigned int (**)(unint64_t))(v72 + 48))((unint64_t)&v81[v85] & v84))
    goto LABEL_55;
LABEL_60:
  (*(void (**)(void *, _BYTE *, uint64_t))(v70 + 32))(v80, v81, v242);
  v92 = v76;
  v93 = ((unint64_t)v80 + v85) & v84;
  v94 = (unint64_t)&v81[v85] & v84;
  v95 = *(void (**)(unint64_t, unint64_t, uint64_t))(v72 + 32);
  v95(v93, v94, v240);
  v96 = v237 + v93;
  v76 = v92;
  v95(v96 & v84, (v237 + v94) & v84, v240);
  if (!v88)
    *((_BYTE *)v80 + v87) = 0;
LABEL_62:
  v97 = (v73 + 16) & ~v73;
  if (!v88)
    ++v97;
  v98 = v97 + v87;
  v99 = (_QWORD *)(((v76 | 7) + v98) & 0xFFFFFFFFFFFFFFF8);
  v100 = (_QWORD *)(((v249 | 7) + v98) & 0xFFFFFFFFFFFFFFF8);
  *v99 = *v100;
  v101 = sub_21C5E31A8();
  v102 = *(_QWORD *)(v101 - 8);
  v103 = *(unsigned __int8 *)(v102 + 80);
  v104 = v103 | 7;
  v105 = (_QWORD *)(((unint64_t)v99 + v103 + 8) & ~(v103 | 7));
  v106 = (_QWORD *)(((unint64_t)v100 + v103 + 8) & ~(v103 | 7));
  v241 = v101;
  v243 = *(_QWORD *)(v102 + 64);
  if (v243 <= 8)
    v107 = 8;
  else
    v107 = *(_QWORD *)(v102 + 64);
  v108 = *((unsigned __int8 *)v106 + v107);
  if (v108 >= 2)
  {
    if (v107 <= 3)
      v109 = v107;
    else
      v109 = 4;
    __asm { BR              X12 }
  }
  if (v108 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v102 + 32))(v105, v106, v101);
    v110 = 1;
  }
  else
  {
    v110 = 0;
    *v105 = *v106;
  }
  *((_BYTE *)v105 + v107) = v110;
  v111 = sub_21C5E2E78();
  v112 = *(_QWORD *)(v111 - 8);
  v113 = *(unsigned __int8 *)(v112 + 80);
  v114 = v107 + 1 + (v113 | 7);
  v115 = (_QWORD *)(((unint64_t)v105 + v114) & ~(v113 | 7));
  v116 = (_QWORD *)(((unint64_t)v106 + v114) & ~(v113 | 7));
  v246 = v111;
  v250 = v112;
  v117 = *(_QWORD *)(v112 + 64);
  if (v117 <= 8)
    v118 = 8;
  else
    v118 = *(_QWORD *)(v112 + 64);
  v119 = *((unsigned __int8 *)v116 + v118);
  if (v119 >= 2)
  {
    if (v118 <= 3)
      v120 = v118;
    else
      v120 = 4;
    __asm { BR              X12 }
  }
  if (v119 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v112 + 32))(v115, v116, v111);
    v121 = 1;
  }
  else
  {
    v121 = 0;
    *v115 = *v116;
  }
  *((_BYTE *)v115 + v118) = v121;
  v122 = v118 + 1;
  v123 = sub_21C5E32E0();
  v124 = *(_QWORD *)(v123 - 8);
  v125 = *(_DWORD *)(v124 + 80) & 0xF8 | 7;
  v126 = (_QWORD *)(((unint64_t)v115 + v122 + v125) & ~v125);
  v127 = (_QWORD *)(((unint64_t)v116 + v122 + v125) & ~v125);
  if (*(_QWORD *)(v124 + 64) <= 8uLL)
    v128 = 8;
  else
    v128 = *(_QWORD *)(v124 + 64);
  v129 = *((unsigned __int8 *)v127 + v128);
  if (v129 >= 2)
  {
    if (v128 <= 3)
      v130 = v128;
    else
      v130 = 4;
    __asm { BR              X13 }
  }
  if (v129 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v124 + 32))(v126, v127, v123);
    v131 = 1;
  }
  else
  {
    v131 = 0;
    *v126 = *v127;
  }
  *((_BYTE *)v126 + v128) = v131;
  v132 = v128 + 1;
  v133 = sub_21C5E3088();
  v134 = *(_QWORD *)(v133 - 8);
  v135 = *(_DWORD *)(v134 + 80) & 0xF8 | 7;
  v136 = (_QWORD *)(((unint64_t)v126 + v132 + v135) & ~v135);
  v137 = (_QWORD *)(((unint64_t)v127 + v132 + v135) & ~v135);
  if (*(_QWORD *)(v134 + 64) <= 8uLL)
    v138 = 8;
  else
    v138 = *(_QWORD *)(v134 + 64);
  v139 = *((unsigned __int8 *)v137 + v138);
  if (v139 >= 2)
  {
    if (v138 <= 3)
      v140 = v138;
    else
      v140 = 4;
    __asm { BR              X13 }
  }
  if (v139 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v134 + 32))(v136, v137, v133);
    v141 = 1;
  }
  else
  {
    v141 = 0;
    *v136 = *v137;
  }
  *((_BYTE *)v136 + v138) = v141;
  v142 = (char *)v136 + v138 + 1;
  v143 = (char *)v137 + v138 + 1;
  v144 = (unint64_t)(v142 + 7) & 0xFFFFFFFFFFFFFFF8;
  v145 = (unint64_t)(v143 + 7) & 0xFFFFFFFFFFFFFFF8;
  v146 = *(_QWORD *)v145;
  *(_BYTE *)(v144 + 8) = *(_BYTE *)(v145 + 8);
  *(_QWORD *)v144 = v146;
  v147 = (unint64_t)(v142 + 23) & 0xFFFFFFFFFFFFFFF8;
  v148 = (unint64_t)(v143 + 23) & 0xFFFFFFFFFFFFFFF8;
  v150 = *(_OWORD *)(v148 + 48);
  v149 = *(_OWORD *)(v148 + 64);
  v151 = *(_OWORD *)(v148 + 32);
  *(_WORD *)(v147 + 80) = *(_WORD *)(v148 + 80);
  *(_OWORD *)(v147 + 48) = v150;
  *(_OWORD *)(v147 + 64) = v149;
  *(_OWORD *)(v147 + 32) = v151;
  v152 = *(_OWORD *)(v148 + 16);
  *(_OWORD *)v147 = *(_OWORD *)v148;
  *(_OWORD *)(v147 + 16) = v152;
  v153 = v104 | v113;
  v154 = (v104 | v113) + 82;
  v155 = (_QWORD *)((v154 + v147) & ~(v104 | v113));
  v156 = (_QWORD *)((v154 + v148) & ~(v104 | v113));
  v238 = v102;
  v157 = *(unsigned int *)(v102 + 84);
  v158 = *(unsigned int *)(v250 + 84);
  if (v157 <= v158)
    v159 = *(_DWORD *)(v250 + 84);
  else
    v159 = v157;
  if (v159 <= 0x7FFFFFFE)
    v160 = 2147483646;
  else
    v160 = v159;
  v161 = v117 + 7;
  v162 = ((v117 + 7 + ((((v103 + 2) & ~v103) + v243 + v113) & ~v113)) & 0xFFFFFFFFFFFFFFF8) + 8;
  v163 = ((v113 + 3) & ~v113) + v117;
  v164 = ((v113 + 2) & ~v113) + v117;
  v165 = v162 + v113;
  if (v164 + ((v162 + v113 + ((v163 + v153 + ((v162 + v113) & ~v113)) & ~v153)) & ~v113) + 6 <= 8)
    v166 = 8;
  else
    v166 = v164 + ((v162 + v113 + ((v163 + v153 + ((v162 + v113) & ~v113)) & ~v153)) & ~v113) + 6;
  v167 = *((unsigned __int8 *)v156 + v166);
  if (v167 >= 2)
  {
    if (v166 <= 3)
      v168 = v166;
    else
      v168 = 4;
    __asm { BR              X12 }
  }
  if (v167 == 1)
  {
    v225 = v163;
    v226 = v113 + 3;
    v235 = v161;
    __dst = (unint64_t)v155;
    v230 = v164;
    v231 = v166;
    v169 = ~v113;
    v170 = (unint64_t)v156;
    v233 = v103 + 2;
    v234 = ~v103;
    v171 = ((unint64_t)v156 + v103 + 2) & ~v103;
    v227 = v113 + 2;
    v228 = v163 + v153;
    __n = v162;
    v229 = v160;
    if ((_DWORD)v157 == v160)
    {
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v238 + 48))(v171, v157, v241))
        goto LABEL_128;
    }
    else
    {
      v172 = v243 + v113;
      v173 = (v243 + v113 + v171) & v169;
      if ((_DWORD)v158 == v160)
      {
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v250 + 48))(v173, v158, v246))
        {
LABEL_128:
          v172 = v243 + v113;
          v223 = (v243 + v113 + v171) & v169;
          v224 = (_QWORD *)((v235 + v223) & 0xFFFFFFFFFFFFFFF8);
          v174 = v233;
LABEL_133:
          v176 = (_QWORD *)v170;
          v177 = __dst;
          *(_BYTE *)__dst = *(_BYTE *)v170;
          *(_BYTE *)(__dst | 1) = *(_BYTE *)(v170 | 1);
          v178 = (v174 + __dst) & v234;
          v179 = v171;
          v156 = v176;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v238 + 32))(v178, v179, v241);
          v180 = (v172 + v178) & v169;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v250 + 32))(v180, v223, v246);
          *(_QWORD *)((v235 + v180) & 0xFFFFFFFFFFFFF8) = *v224;
          goto LABEL_135;
        }
      }
      else
      {
        v175 = *(_QWORD *)((v161 + v173) & 0xFFFFFFFFFFFFFFF8);
        if (v175 >= 0xFFFFFFFF)
          LODWORD(v175) = -1;
        if ((v175 + 1) < 2)
        {
          v174 = v233;
          v223 = (v172 + v171) & v169;
          v224 = (_QWORD *)((v161 + v173) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_133;
        }
      }
    }
    v177 = __dst;
    v156 = (_QWORD *)v170;
    memcpy((void *)__dst, (const void *)v170, __n);
LABEL_135:
    v181 = ~v153;
    v182 = (_BYTE *)((v165 + v177) & v169);
    v183 = (_BYTE *)(((unint64_t)v156 + v165) & v169);
    if (v158 > 0xFE)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v250 + 48))((unint64_t)&v183[v226] & v169, v158, v246))goto LABEL_137;
    }
    else if (*v183 < 2u)
    {
LABEL_137:
      *v182 = *v183;
      v182[1] = *(_BYTE *)((((unint64_t)v156 + v165) & v169) + 1);
      v182[2] = *(_BYTE *)((((unint64_t)v156 + v165) & v169) + 2);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v250 + 32))((unint64_t)&v182[v226] & v169, (unint64_t)&v183[v226] & v169, v246);
      goto LABEL_140;
    }
    memcpy(v182, (const void *)(((unint64_t)v156 + v165) & v169), v225);
LABEL_140:
    v184 = (unint64_t)&v182[v228] & v181;
    v185 = (unint64_t)&v183[v228] & v181;
    v186 = (v233 + v185) & v234;
    if ((_DWORD)v157 == v229)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v238 + 48))((v233 + v185) & v234, v157, v241))goto LABEL_145;
    }
    else
    {
      v187 = v243 + v113;
      v188 = (v243 + v113 + v186) & v169;
      if ((_DWORD)v158 == v229)
      {
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v250 + 48))(v188, v158, v246))
        {
LABEL_145:
          v187 = v243 + v113;
          v189 = (v243 + v113 + v186) & v169;
          v244 = (_QWORD *)((v235 + v189) & 0xFFFFFFFFFFFFFFF8);
          v190 = v233;
LABEL_150:
          *(_BYTE *)v184 = *(_BYTE *)v185;
          *(_BYTE *)(v184 | 1) = *(_BYTE *)(v185 | 1);
          v192 = (v190 + v184) & v234;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v238 + 32))(v192, v186, v241);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v250 + 32))((v187 + v192) & v169, v189, v246);
          *(_QWORD *)((v235 + ((v187 + v192) & v169)) & 0xFFFFFFFFFFFFF8) = *v244;
          goto LABEL_152;
        }
      }
      else
      {
        v191 = *(_QWORD *)((v235 + v188) & 0xFFFFFFFFFFFFFFF8);
        if (v191 >= 0xFFFFFFFF)
          LODWORD(v191) = -1;
        if ((v191 + 1) < 2)
        {
          v244 = (_QWORD *)((v235 + v188) & 0xFFFFFFFFFFFFFFF8);
          v190 = v233;
          v189 = (v187 + v186) & v169;
          goto LABEL_150;
        }
      }
    }
    memcpy((void *)v184, (const void *)v185, __n);
LABEL_152:
    v193 = a1;
    v194 = (_BYTE *)((v165 + v184) & v169);
    v195 = (unsigned __int8 *)((v165 + v185) & v169);
    if (v158 > 0xFE)
    {
      v198 = (unint64_t)&v195[v227] & v169;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v250 + 48))(v198, v158, v246))
      {
        LOBYTE(v196) = *v195;
        v197 = v227;
        goto LABEL_159;
      }
    }
    else
    {
      v196 = *v195;
      if (v196 <= 1)
      {
        v197 = v227;
        v198 = (unint64_t)&v195[v227] & v169;
LABEL_159:
        *v194 = v196;
        v194[1] = v195[1];
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v250 + 32))((unint64_t)&v194[v197] & v169, v198, v246);
        v199 = v230;
        v166 = v231;
        goto LABEL_160;
      }
    }
    v199 = v230;
    memcpy(v194, v195, v230);
    v166 = v231;
LABEL_160:
    v201 = &v194[v199];
    *v201 = *(_WORD *)&v195[v199];
    v201[1] = *(_WORD *)&v195[v199 + 2];
    v201[2] = *(_WORD *)&v195[v199 + 4];
    v200 = 1;
    v155 = (_QWORD *)__dst;
    goto LABEL_161;
  }
  v200 = 0;
  *v155 = *v156;
  v193 = a1;
LABEL_161:
  *((_BYTE *)v155 + v166) = v200;
  v202 = (char *)v155 + v166 + 1;
  v203 = (char *)v156 + v166 + 1;
  v204 = (unint64_t)(v202 + 7) & 0xFFFFFFFFFFFFFFF8;
  v205 = (unint64_t)(v203 + 7) & 0xFFFFFFFFFFFFFFF8;
  v206 = *(_QWORD *)v205;
  *(_BYTE *)(v204 + 8) = *(_BYTE *)(v205 + 8);
  *(_QWORD *)v204 = v206;
  v207 = (unint64_t)(v202 + 23) & 0xFFFFFFFFFFFFFFF8;
  v208 = (unint64_t)(v203 + 23) & 0xFFFFFFFFFFFFFFF8;
  v209 = *(_OWORD *)v208;
  *(_BYTE *)(v207 + 16) = *(_BYTE *)(v208 + 16);
  *(_OWORD *)v207 = v209;
  v210 = (unint64_t)(v202 + 47) & 0xFFFFFFFFFFFFFFF8;
  v211 = (unint64_t)(v203 + 47) & 0xFFFFFFFFFFFFFFF8;
  v212 = *(_OWORD *)v211;
  *(_BYTE *)(v210 + 16) = *(_BYTE *)(v211 + 16);
  *(_OWORD *)v210 = v212;
  v213 = (unint64_t)(v202 + 71) & 0xFFFFFFFFFFFFFFF8;
  v214 = (unint64_t)(v203 + 71) & 0xFFFFFFFFFFFFFFF8;
  v215 = *(_QWORD *)v214;
  *(_BYTE *)(v213 + 8) = *(_BYTE *)(v214 + 8);
  *(_QWORD *)v213 = v215;
  v216 = (unint64_t)(v202 + 87) & 0xFFFFFFFFFFFFFFF8;
  v217 = (unint64_t)(v203 + 87) & 0xFFFFFFFFFFFFFFF8;
  v218 = *(_QWORD *)v217;
  *(_BYTE *)(v216 + 8) = *(_BYTE *)(v217 + 8);
  *(_QWORD *)v216 = v218;
  v219 = (unint64_t)(v202 + 103) & 0xFFFFFFFFFFFFFFF8;
  v220 = (unint64_t)(v203 + 103) & 0xFFFFFFFFFFFFFFF8;
  v221 = *(_QWORD *)v220;
  *(_BYTE *)(v219 + 8) = *(_BYTE *)(v220 + 8);
  *(_QWORD *)v219 = v221;
  return v193;
}

_QWORD *sub_21C593BD8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  size_t v39;
  size_t v40;
  _QWORD *v41;
  unint64_t *v42;
  unint64_t v43;
  id *v44;
  id *v45;
  size_t v46;
  unint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  size_t v51;
  _QWORD *v52;
  _QWORD *v53;
  size_t v54;
  unint64_t v55;
  unsigned int v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  id *v61;
  unint64_t v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  unsigned int v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  void **v80;
  void **v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  size_t v114;
  uint64_t (*v115)(uint64_t, uint64_t, uint64_t);
  int v116;
  int v117;
  int v118;
  size_t v119;
  void *v120;
  char v121;
  int v122;
  int v123;
  uint64_t (*v124)(uint64_t, uint64_t, uint64_t);
  int v125;
  int v126;
  int v127;
  uint64_t v128;
  void *v129;
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  void (*v134)(uint64_t, unint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t, unint64_t, uint64_t);
  uint64_t v138;
  size_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  unint64_t v148;
  uint64_t v149;
  unsigned int v150;
  uint64_t v151;
  unsigned int v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  unsigned int v162;
  uint64_t v163;
  unsigned int v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int v175;
  uint64_t v176;
  unsigned int v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  unsigned int v188;
  uint64_t v189;
  unsigned int v190;
  uint64_t v191;
  char v192;
  char *v193;
  char *v194;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  unint64_t v200;
  char v201;
  char v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char v214;
  char v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  _BYTE *v224;
  uint64_t v225;
  unsigned int v226;
  int v227;
  uint64_t v228;
  unint64_t v229;
  uint64_t v230;
  unint64_t v231;
  uint64_t v232;
  unsigned int v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  unint64_t v239;
  unint64_t v240;
  _QWORD *v241;
  uint64_t v242;
  unint64_t v243;
  unint64_t v244;
  unint64_t v245;
  unsigned __int8 *v246;
  unsigned int v247;
  uint64_t v248;
  int v249;
  int v250;
  unsigned int v251;
  unint64_t v252;
  unint64_t v253;
  unint64_t v254;
  unint64_t v255;
  unsigned __int8 *v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  uint64_t v260;
  unint64_t v261;
  unint64_t v262;
  uint64_t v263;
  unint64_t v264;
  _QWORD *v265;
  unint64_t v266;
  unint64_t v267;
  unint64_t v268;
  size_t v269;
  _BYTE *v270;
  unsigned __int8 *v271;
  unint64_t v272;
  unint64_t v273;
  unint64_t v274;
  unint64_t v275;
  uint64_t v276;
  unint64_t v277;
  unint64_t v278;
  _BYTE *v279;
  unsigned __int8 *v280;
  unsigned int v281;
  uint64_t v282;
  unint64_t v283;
  int v284;
  size_t v285;
  _WORD *v286;
  unint64_t v287;
  unint64_t v288;
  _BYTE *v289;
  _BYTE *v290;
  unint64_t v291;
  unint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char v295;
  unint64_t v296;
  unint64_t v297;
  char v298;
  uint64_t v299;
  uint64_t v300;
  char v301;
  unint64_t v302;
  unint64_t v303;
  char v304;
  uint64_t v305;
  uint64_t v306;
  char v307;
  unint64_t v308;
  unint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char v312;
  unint64_t v313;
  unint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t v321;
  char v322;
  uint64_t v324;
  unsigned int v325;
  unsigned int v326;
  size_t v327;
  size_t __n;
  size_t v329;
  unint64_t v330;
  uint64_t v331;
  uint64_t v332;
  unint64_t v333;
  unint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  _QWORD *v343;
  int v344;
  int v345;
  _QWORD *v346;
  unint64_t v347;
  uint64_t v348;
  unsigned int v349;
  unint64_t v350;
  _QWORD *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  unint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  _QWORD *v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  unsigned __int8 *v365;
  uint64_t v366;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  v6 = (_QWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  swift_bridgeObjectRelease();
  v6[1] = v7[1];
  v8 = (_QWORD *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  swift_bridgeObjectRelease();
  v8[1] = v9[1];
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  swift_bridgeObjectRelease();
  v10[1] = v11[1];
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  swift_bridgeObjectRelease();
  v12[1] = v13[1];
  v14 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  swift_bridgeObjectRelease();
  v14[1] = v15[1];
  v16 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  swift_release();
  v16[1] = v17[1];
  swift_release();
  v18 = v16[2];
  v16[2] = v17[2];
  sub_21C55DAAC(v18);
  v19 = ((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v17 + 31) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)(v19 + 24);
  LODWORD(v22) = -1;
  if (v21 < 0xFFFFFFFF)
    v22 = *(_QWORD *)(v19 + 24);
  v343 = a1;
  if ((int)v22 - 1 >= 0)
    goto LABEL_4;
  v58 = *(_QWORD *)(v20 + 24);
  if (v58 >= 0xFFFFFFFF)
    LODWORD(v58) = -1;
  if ((int)v58 - 1 >= 0)
  {
    if (v21)
      __swift_destroy_boxed_opaque_existential_0(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8);
LABEL_4:
    *(_OWORD *)v19 = *(_OWORD *)v20;
    v23 = *(_OWORD *)(v20 + 16);
    v24 = *(_OWORD *)(v20 + 32);
    v25 = *(_OWORD *)(v20 + 48);
    *(_BYTE *)(v19 + 64) = *(_BYTE *)(v20 + 64);
    *(_OWORD *)(v19 + 32) = v24;
    *(_OWORD *)(v19 + 48) = v25;
    *(_OWORD *)(v19 + 16) = v23;
    goto LABEL_5;
  }
  if (v21)
    __swift_destroy_boxed_opaque_existential_0(((unint64_t)v16 + 31) & 0xFFFFFFFFFFFFFFF8);
  v69 = *(_OWORD *)v20;
  v70 = *(_OWORD *)(v20 + 16);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  *(_OWORD *)v19 = v69;
  *(_OWORD *)(v19 + 16) = v70;
  v71 = *(_QWORD *)(v20 + 40);
  *(_BYTE *)(v19 + 48) = *(_BYTE *)(v20 + 48);
  *(_QWORD *)(v19 + 40) = v71;
  v72 = *(_QWORD *)(v20 + 56);
  *(_BYTE *)(v19 + 64) = *(_BYTE *)(v20 + 64);
  *(_QWORD *)(v19 + 56) = v72;
LABEL_5:
  v26 = (_QWORD *)(((unint64_t)v16 + 103) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v17 + 103) & 0xFFFFFFFFFFFFFFF8);
  *v26 = *v27;
  v28 = *(_QWORD *)(a3 + 16);
  v29 = *(_QWORD *)(a3 + 24);
  v30 = *(_QWORD *)(v28 - 8);
  v31 = *(_QWORD *)(v29 - 8);
  v32 = *(_DWORD *)(v30 + 84);
  v33 = *(_DWORD *)(v31 + 84);
  v34 = (*(_DWORD *)(v31 + 80) | *(_DWORD *)(v30 + 80)) & 0xF8 | 7u;
  v35 = v34 + 8;
  v36 = ~v34;
  v37 = (_QWORD *)(((unint64_t)v26 + v34 + 8) & ~v34);
  v38 = (_QWORD *)(((unint64_t)v27 + v34 + 8) & ~v34);
  v39 = *(_QWORD *)(v30 + 64);
  v40 = *(_QWORD *)(v31 + 64);
  v363 = (v34 + 16) & ~v34;
  v41 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  v42 = (unint64_t *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  v43 = *v42;
  if (*v41 < 0xFFFFFFFFuLL)
  {
    if (v43 < 0xFFFFFFFF)
    {
      if (v32)
        v65 = *(_QWORD *)(v30 + 64);
      else
        v65 = v39 + 1;
      if (v33)
        v66 = *(_QWORD *)(v31 + 64);
      else
        v66 = v40 + 1;
      if (v65 <= v66)
        v65 = v66;
      if (v65 <= 8)
        v48 = 8;
      else
        v48 = v65;
      v67 = (v34 + 16) & ~v34;
      v68 = (unint64_t)v38;
      v59 = (unint64_t)v37;
      memcpy(v37, v38, (v363 | 1) + v48);
    }
    else
    {
      if (v32)
        v51 = *(_QWORD *)(v30 + 64);
      else
        v51 = v39 + 1;
      *v37 = *v38;
      *v41 = *v42;
      v52 = (_QWORD *)(((unint64_t)v41 + v35) & v36);
      v53 = (_QWORD *)(((unint64_t)v42 + v35) & v36);
      if (v33)
        v54 = v40;
      else
        v54 = v40 + 1;
      if (v51 <= v54)
        v55 = v54;
      else
        v55 = v51;
      if (v55 <= 8)
        v48 = 8;
      else
        v48 = v55;
      v56 = *((unsigned __int8 *)v53 + v48);
      if (v56 >= 3)
      {
        if (v48 <= 3)
          v57 = v48;
        else
          v57 = 4;
        __asm { BR              X12 }
      }
      v59 = (unint64_t)v37;
      v68 = (unint64_t)v38;
      if (v56 == 2)
      {
        v73 = v29;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v31 + 48))(v53, 1, v29))
        {
          memcpy(v52, v53, v54);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v31 + 32))(v52, v53, v73);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v52, 0, 1, v73);
        }
        v74 = 2;
      }
      else
      {
        if (v56 != 1)
        {
          *v52 = *v53;
          *((_BYTE *)v52 + v48) = 0;
          v67 = (v34 + 16) & ~v34;
          goto LABEL_123;
        }
        v75 = v28;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v30 + 48))(v53, 1, v28))
        {
          memcpy(v52, v53, v51);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v30 + 32))(v52, v53, v75);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v52, 0, 1, v75);
        }
        v74 = 1;
      }
      *((_BYTE *)v52 + v48) = v74;
      v67 = v363;
    }
  }
  else
  {
    v354 = v29;
    v357 = v28;
    v360 = (_QWORD *)(((unint64_t)v27 + v34 + 8) & ~v34);
    if (v43 >= 0xFFFFFFFF)
    {
      v351 = v37;
      *v37 = *v38;
      swift_release();
      *v41 = *v42;
      swift_release();
      if (!v32)
        ++v39;
      v44 = (id *)(((unint64_t)v41 + v35) & v36);
      v45 = (id *)(((unint64_t)v42 + v35) & v36);
      if (v33)
        v46 = v40;
      else
        v46 = v40 + 1;
      if (v39 <= v46)
        v47 = v46;
      else
        v47 = v39;
      if (v47 <= 8)
        v48 = 8;
      else
        v48 = v47;
      if (v44 != v45)
      {
        v49 = *((unsigned __int8 *)v44 + v48);
        if (v49 >= 3)
        {
          if (v48 <= 3)
            v50 = v48;
          else
            v50 = 4;
          __asm { BR              X12 }
        }
        if (v49 == 2)
        {
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v31 + 48))(v44, 1, v354))
            (*(void (**)(id *, uint64_t))(v31 + 8))(v44, v354);
        }
        else if (v49 == 1)
        {
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v30 + 48))(v44, 1, v357))
            (*(void (**)(id *, uint64_t))(v30 + 8))(v44, v357);
        }
        else
        {

        }
        v76 = *((unsigned __int8 *)v45 + v48);
        if (v76 >= 3)
        {
          if (v48 <= 3)
            v77 = v48;
          else
            v77 = 4;
          __asm { BR              X12 }
        }
        if (v76 == 2)
        {
          if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v31 + 48))(v45, 1, v354))
          {
            memcpy(v44, v45, v46);
          }
          else
          {
            (*(void (**)(id *, id *, uint64_t))(v31 + 32))(v44, v45, v354);
            (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v44, 0, 1, v354);
          }
          v68 = (unint64_t)v360;
          v67 = v363;
          v59 = (unint64_t)v351;
          v78 = 2;
          goto LABEL_122;
        }
        if (v76 == 1)
        {
          if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v30 + 48))(v45, 1, v357))
          {
            memcpy(v44, v45, v39);
          }
          else
          {
            (*(void (**)(id *, id *, uint64_t))(v30 + 32))(v44, v45, v357);
            (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v44, 0, 1, v357);
          }
          v68 = (unint64_t)v360;
          v67 = v363;
          v59 = (unint64_t)v351;
          v78 = 1;
LABEL_122:
          *((_BYTE *)v44 + v48) = v78;
          goto LABEL_123;
        }
        *v44 = *v45;
        *((_BYTE *)v44 + v48) = 0;
      }
      v68 = (unint64_t)v360;
      v67 = v363;
      v59 = (unint64_t)v351;
      goto LABEL_123;
    }
    v59 = (unint64_t)v37;
    swift_release();
    swift_release();
    if (v32)
      v60 = v39;
    else
      v60 = v39 + 1;
    v61 = (id *)(((unint64_t)v41 + v35) & v36);
    if (v33)
      v62 = v40;
    else
      v62 = v40 + 1;
    if (v60 <= v62)
      v60 = v62;
    if (v60 <= 8)
      v48 = 8;
    else
      v48 = v60;
    v63 = *((unsigned __int8 *)v61 + v48);
    if (v63 >= 3)
    {
      if (v48 <= 3)
        v64 = v48;
      else
        v64 = 4;
      __asm { BR              X12 }
    }
    v67 = v363;
    if (v63 == 2)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v31 + 48))(((unint64_t)v41 + v35) & v36, 1, v354))(*(void (**)(unint64_t, uint64_t))(v31 + 8))(((unint64_t)v41 + v35) & v36, v354);
    }
    else if (v63 == 1)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v30 + 48))(((unint64_t)v41 + v35) & v36, 1, v357))(*(void (**)(unint64_t, uint64_t))(v30 + 8))(((unint64_t)v41 + v35) & v36, v357);
    }
    else
    {

    }
    memcpy((void *)v59, v360, (v363 | 1) + v48);
    v68 = (unint64_t)v360;
  }
LABEL_123:
  v79 = (v67 | 1) + v48;
  v80 = (void **)(((v59 | 7) + v79) & 0xFFFFFFFFFFFFFFF8);
  v81 = (void **)(((v68 | 7) + v79) & 0xFFFFFFFFFFFFFFF8);
  v82 = *v80;
  *v80 = *v81;

  v83 = sub_21C5E32C8();
  v84 = *(_QWORD *)(v83 - 8);
  v85 = *(_DWORD *)(v84 + 80) & 0xFC;
  v86 = sub_21C5E2ED8();
  v87 = *(_QWORD *)(v86 - 8);
  v88 = *(unsigned __int8 *)(v87 + 80);
  v364 = sub_21C5E346C();
  v89 = *(_QWORD *)(v364 - 8);
  v90 = *(unsigned __int8 *)(v89 + 80);
  v91 = v85 | v88 | v90 | 3;
  v92 = ((unint64_t)v80 + v91 + 8) & ~v91;
  v93 = ((unint64_t)v81 + v91 + 8) & ~v91;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 40))(v92, v93, v83);
  v94 = *(_QWORD *)(v84 + 64) + v88;
  v95 = (v94 + v93) & ~v88;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 40))((v94 + v92) & ~v88, v95, v86);
  v96 = *(_QWORD *)(v87 + 64) + v90;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 40))((v96 + ((v94 + v92) & ~v88)) & ~v90, (v96 + v95) & ~v90, v364);
  v97 = *(_QWORD *)(v89 + 64) + 3;
  *(_DWORD *)((v97 + ((v96 + ((v94 + v92) & ~v88)) & ~v90)) & 0xFFFFFFFFFFFFFCLL) = *(_DWORD *)((v97
                                                                                               + ((v96 + v95) & ~v90)) & 0xFFFFFFFFFFFFFCLL);
  v98 = (v97 + ((v96 + (v94 & ~v88)) & ~v90)) & 0xFFFFFFFFFFFFFFFCLL;
  v358 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  v99 = *(_QWORD *)(v358 - 8);
  LODWORD(v90) = *(unsigned __int8 *)(v99 + 80);
  v361 = sub_21C5E2D64();
  v100 = *(_QWORD *)(v361 - 8);
  v101 = *(_DWORD *)(v100 + 80) | v90;
  v102 = *(_DWORD *)(v100 + 80);
  v103 = v98 + (v101 | 7) + 4;
  v104 = (v103 + v92) & ~(v101 | 7);
  v348 = (v103 + v93) & ~(v101 | 7);
  *(_QWORD *)v104 = *(_QWORD *)v348;
  swift_release();
  v105 = (_QWORD *)((v104 + 15) & 0xFFFFFFFFFFFFFFF8);
  v106 = (_QWORD *)((v348 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v105 = *v106;
  swift_release();
  v107 = ((unint64_t)v105 + v101 + 8) & ~v101;
  v365 = (unsigned __int8 *)(((unint64_t)v106 + v101 + 8) & ~v101);
  v108 = *(unsigned int *)(v99 + 84);
  v109 = *(unsigned int *)(v100 + 84);
  v110 = *(_QWORD *)(v99 + 64);
  v352 = ~v102;
  v355 = v99;
  v111 = v110 + v102;
  v112 = *(_QWORD *)(v100 + 64);
  v113 = v112 + v102;
  v114 = ((v112 + v102 + ((v110 + v102) & ~v102)) & ~v102) + v112;
  v344 = v109 | v108;
  v341 = v113;
  if (!(v109 | v108))
  {
    v121 = 8 * v114;
    if (*(_BYTE *)(v107 + v114))
    {
      v122 = (*(unsigned __int8 *)(v107 + v114) - 1) << v121;
      if (v114 > 3)
        v122 = 0;
      if ((_DWORD)v114)
      {
        if (v114 <= 3)
          v123 = v114;
        else
          v123 = 4;
        __asm { BR              X12 }
      }
      if (v122 != -1)
      {
        if (v365[v114] && (v365[v114] - 1) << v121 != -1)
        {
LABEL_127:
          v118 = v344;
          if (v344)
            v119 = v114;
          else
            v119 = v114 + 1;
          v120 = (void *)v107;
LABEL_158:
          memcpy(v120, v365, v119);
          v131 = ~v101;
          goto LABEL_163;
        }
        goto LABEL_161;
      }
    }
    if (!v365[v114])
      goto LABEL_159;
    v126 = (v365[v114] - 1) << v121;
    if (v114 > 3)
      v126 = 0;
    if ((_DWORD)v114)
    {
      if (v114 <= 3)
        v127 = v114;
      else
        v127 = 4;
      __asm { BR              X11 }
    }
    if (v126 == -1)
    {
LABEL_159:
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v355 + 40))(v107, v365, v358);
      v132 = (v111 + v107) & v352;
      v133 = (unint64_t)&v365[v111] & v352;
      v134 = *(void (**)(uint64_t, unint64_t, uint64_t))(v100 + 40);
      v134(v132, v133, v361);
      v134((v341 + v132) & v352, (v341 + v133) & v352, v361);
      v131 = ~v101;
      v118 = v344;
      goto LABEL_163;
    }
LABEL_154:
    (*(void (**)(uint64_t, uint64_t))(v355 + 8))(v107, v358);
    v128 = (v111 + v107) & v352;
    v129 = (void *)v107;
    v130 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
    v130(v128, v361);
    v130((v341 + v128) & v352, v361);
    v118 = v344;
    if (v344)
      v119 = v114;
    else
      v119 = v114 + 1;
    v120 = v129;
    goto LABEL_158;
  }
  v338 = v104;
  if (v108 < v109)
  {
    v115 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 48);
    v116 = v115((v111 + v107) & v352, v109, v361);
    v117 = v115((unint64_t)&v365[v111] & v352, v109, v361);
    v104 = v338;
    if (v116)
      goto LABEL_126;
LABEL_140:
    if (!v117)
      goto LABEL_159;
    goto LABEL_154;
  }
  v124 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v355 + 48);
  v125 = v124(v107, v108, v358);
  v117 = v124((uint64_t)v365, v108, v358);
  v104 = v338;
  if (!v125)
    goto LABEL_140;
LABEL_126:
  if (v117)
    goto LABEL_127;
LABEL_161:
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v355 + 32))(v107, v365, v358);
  v135 = (v111 + v107) & v352;
  v136 = v107;
  v137 = *(void (**)(uint64_t, unint64_t, uint64_t))(v100 + 32);
  v137(v135, (unint64_t)&v365[v111] & v352, v361);
  v137((v341 + v135) & v352, (v341 + ((unint64_t)&v365[v111] & v352)) & v352, v361);
  v131 = ~v101;
  v118 = v344;
  if (!v344)
    *(_BYTE *)(v136 + v114) = 0;
LABEL_163:
  v138 = (v101 + 16) & v131;
  if (!v118)
    ++v138;
  v139 = v138 + v114;
  v140 = (_QWORD *)(((v104 | 7) + v139) & 0xFFFFFFFFFFFFFFF8);
  v141 = (_QWORD *)(((v348 | 7) + v139) & 0xFFFFFFFFFFFFFFF8);
  *v140 = *v141;
  swift_release();
  v142 = sub_21C5E31A8();
  v143 = *(_QWORD *)(v142 - 8);
  v144 = *(unsigned __int8 *)(v143 + 80);
  v145 = v144 | 7;
  v146 = (_QWORD *)(((unint64_t)v140 + v144 + 8) & ~(v144 | 7));
  v147 = (_QWORD *)(((unint64_t)v141 + v144 + 8) & ~(v144 | 7));
  v359 = v143;
  v148 = *(_QWORD *)(v143 + 64);
  if (v148 <= 8)
    v149 = 8;
  else
    v149 = *(_QWORD *)(v143 + 64);
  if (v146 != v147)
  {
    v150 = *((unsigned __int8 *)v146 + v149);
    if (v150 >= 2)
    {
      if (v149 <= 3)
        v151 = v149;
      else
        v151 = 4;
      __asm { BR              X12 }
    }
    if (v150 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v143 + 8))(v146, v142);
    else
      swift_release();
    v152 = *((unsigned __int8 *)v147 + v149);
    if (v152 >= 2)
    {
      if (v149 <= 3)
        v153 = v149;
      else
        v153 = 4;
      __asm { BR              X12 }
    }
    if (v152 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v359 + 32))(v146, v147, v142);
      v154 = 1;
    }
    else
    {
      v154 = 0;
      *v146 = *v147;
    }
    *((_BYTE *)v146 + v149) = v154;
  }
  v155 = sub_21C5E2E78();
  v156 = *(_QWORD *)(v155 - 8);
  v157 = *(unsigned __int8 *)(v156 + 80);
  v158 = v149 + (v157 | 7) + 1;
  v159 = (_QWORD *)(((unint64_t)v146 + v158) & ~(v157 | 7));
  v160 = (_QWORD *)(((unint64_t)v147 + v158) & ~(v157 | 7));
  v362 = v155;
  v366 = v156;
  v356 = *(_QWORD *)(v156 + 64);
  if (v356 <= 8)
    v161 = 8;
  else
    v161 = *(_QWORD *)(v156 + 64);
  if (v159 != v160)
  {
    v162 = *((unsigned __int8 *)v159 + v161);
    if (v162 >= 2)
    {
      if (v161 <= 3)
        v163 = v161;
      else
        v163 = 4;
      __asm { BR              X12 }
    }
    if (v162 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v156 + 8))(v159, v155);
    else
      swift_release();
    v164 = *((unsigned __int8 *)v160 + v161);
    if (v164 >= 2)
    {
      if (v161 <= 3)
        v165 = v161;
      else
        v165 = 4;
      __asm { BR              X12 }
    }
    if (v164 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v366 + 32))(v159, v160, v362);
      v166 = 1;
    }
    else
    {
      v166 = 0;
      *v159 = *v160;
    }
    *((_BYTE *)v159 + v161) = v166;
  }
  v167 = sub_21C5E32E0();
  v168 = *(_QWORD *)(v167 - 8);
  v169 = *(_DWORD *)(v168 + 80) & 0xF8 | 7;
  v170 = v161 + v169 + 1;
  v171 = (_QWORD *)(((unint64_t)v159 + v170) & ~v169);
  v172 = (_QWORD *)(((unint64_t)v160 + v170) & ~v169);
  if (*(_QWORD *)(v168 + 64) <= 8uLL)
    v173 = 8;
  else
    v173 = *(_QWORD *)(v168 + 64);
  if (v171 != v172)
  {
    v174 = v167;
    v175 = *((unsigned __int8 *)v171 + v173);
    if (v175 >= 2)
    {
      if (v173 <= 3)
        v176 = v173;
      else
        v176 = 4;
      __asm { BR              X12 }
    }
    if (v175 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v168 + 8))(v171, v167);
    else
      swift_release();
    v177 = *((unsigned __int8 *)v172 + v173);
    if (v177 >= 2)
    {
      if (v173 <= 3)
        v178 = v173;
      else
        v178 = 4;
      __asm { BR              X12 }
    }
    if (v177 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v168 + 32))(v171, v172, v174);
      v179 = 1;
    }
    else
    {
      v179 = 0;
      *v171 = *v172;
    }
    *((_BYTE *)v171 + v173) = v179;
  }
  v180 = sub_21C5E3088();
  v181 = *(_QWORD *)(v180 - 8);
  v182 = *(_DWORD *)(v181 + 80) & 0xF8 | 7;
  v183 = v173 + v182 + 1;
  v184 = (_QWORD *)(((unint64_t)v171 + v183) & ~v182);
  v185 = (_QWORD *)(((unint64_t)v172 + v183) & ~v182);
  if (*(_QWORD *)(v181 + 64) <= 8uLL)
    v186 = 8;
  else
    v186 = *(_QWORD *)(v181 + 64);
  if (v184 != v185)
  {
    v187 = v180;
    v188 = *((unsigned __int8 *)v184 + v186);
    if (v188 >= 2)
    {
      if (v186 <= 3)
        v189 = v186;
      else
        v189 = 4;
      __asm { BR              X12 }
    }
    if (v188 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v181 + 8))(v184, v180);
    else
      swift_release();
    v190 = *((unsigned __int8 *)v185 + v186);
    if (v190 >= 2)
    {
      if (v186 <= 3)
        v191 = v186;
      else
        v191 = 4;
      __asm { BR              X12 }
    }
    if (v190 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v181 + 32))(v184, v185, v187);
      v192 = 1;
    }
    else
    {
      v192 = 0;
      *v184 = *v185;
    }
    *((_BYTE *)v184 + v186) = v192;
  }
  v193 = (char *)v184 + v186 + 1;
  v194 = (char *)v185 + v186 + 1;
  v195 = (unint64_t)(v193 + 7) & 0xFFFFFFFFFFFFFFF8;
  v196 = (unint64_t)(v194 + 7) & 0xFFFFFFFFFFFFFFF8;
  v197 = *(_QWORD *)v196;
  LOBYTE(v196) = *(_BYTE *)(v196 + 8);
  v198 = *(_QWORD *)v195;
  v199 = *(_BYTE *)(v195 + 8);
  *(_QWORD *)v195 = v197;
  *(_BYTE *)(v195 + 8) = v196;
  sub_21C531A84(v198, v199);
  v200 = (unint64_t)(v194 + 23) & 0xFFFFFFFFFFFFFFF8;
  v201 = *(_BYTE *)(v200 + 80);
  v202 = *(_BYTE *)(v200 + 81);
  v203 = (unint64_t)(v193 + 23) & 0xFFFFFFFFFFFFFFF8;
  v204 = *(_QWORD *)v203;
  v205 = *(_QWORD *)(v203 + 8);
  v206 = *(_QWORD *)(v203 + 16);
  v207 = *(_QWORD *)(v203 + 24);
  v208 = *(_QWORD *)(v203 + 32);
  v209 = *(_QWORD *)(v203 + 40);
  v210 = *(_QWORD *)(v203 + 48);
  v211 = *(_QWORD *)(v203 + 56);
  v212 = *(_QWORD *)(v203 + 64);
  v213 = *(_QWORD *)(v203 + 72);
  v214 = *(_BYTE *)(v203 + 80);
  v215 = *(_BYTE *)(v203 + 81);
  v216 = *(_OWORD *)(v200 + 16);
  v217 = *(_OWORD *)(v200 + 32);
  v218 = *(_OWORD *)(v200 + 48);
  v219 = *(_OWORD *)(v200 + 64);
  *(_OWORD *)v203 = *(_OWORD *)v200;
  *(_OWORD *)(v203 + 16) = v216;
  *(_OWORD *)(v203 + 32) = v217;
  *(_OWORD *)(v203 + 48) = v218;
  *(_OWORD *)(v203 + 64) = v219;
  *(_BYTE *)(v203 + 80) = v201;
  *(_BYTE *)(v203 + 81) = v202;
  sub_21C53198C(v204, v205, v206, v207, v208, v209, v210, v211, v212, v213, v214, v215);
  v220 = v145 | v157;
  v221 = (v145 | v157) + 82;
  v222 = ~(v145 | v157);
  v223 = (v221 + v203) & v222;
  v224 = (_BYTE *)((v221 + v200) & v222);
  if ((_BYTE *)v223 == v224)
  {
    v235 = ~(v145 | v157);
    v236 = ~v157;
    v237 = (v157 + 2) & ~v157;
    v238 = v356;
    v239 = ((((v148 + v157 + ((v144 + 2) & ~v144)) & ~v157) + v356 + 7) & 0xFFFFFFFFFFFFFFF8) + v157 + 8;
    v240 = v239 & ~v157;
    v230 = (v157 + 3) & ~v157;
    v241 = v343;
    goto LABEL_348;
  }
  v225 = *(unsigned int *)(v366 + 84);
  v349 = *(_DWORD *)(v359 + 84);
  if (v349 <= v225)
    v226 = *(_DWORD *)(v366 + 84);
  else
    v226 = *(_DWORD *)(v359 + 84);
  if (v226 <= 0x7FFFFFFE)
    v227 = 2147483646;
  else
    v227 = v226;
  v353 = v144 + 2;
  v228 = v148 + v157;
  v229 = ((((v148 + v157 + ((v144 + 2) & ~v144)) & ~v157) + v356 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v331 = v157 + 3;
  v230 = (v157 + 3) & ~v157;
  v332 = v157 + 2;
  __n = v229;
  v329 = v356 + ((v157 + 2) & ~v157);
  v231 = v229 + v157;
  v333 = v356 + v230 + v220;
  v334 = (v229 + v157) & ~v157;
  if (v329 + ((v229 + v157 + ((v333 + v334) & v222)) & ~v157) + 6 <= 8)
    v232 = 8;
  else
    v232 = v329 + ((v229 + v157 + ((v333 + v334) & v222)) & ~v157) + 6;
  v233 = *(unsigned __int8 *)(v223 + v232);
  v336 = (v157 + 2) & ~v157;
  if (v233 >= 2)
  {
    if (v232 <= 3)
      v234 = v232;
    else
      v234 = 4;
    __asm { BR              X12 }
  }
  v339 = v142;
  v340 = v228;
  v236 = ~v157;
  v242 = ~v144;
  v347 = (unint64_t)v224;
  v345 = v227;
  v335 = v230;
  v337 = v232;
  v342 = ~v144;
  v327 = v356 + v230;
  if (v233 != 1)
  {
    swift_release();
    goto LABEL_303;
  }
  v243 = (v353 + v223) & v242;
  if (v349 == v227)
  {
    if ((*(unsigned int (**)(unint64_t))(v359 + 48))((v353 + v223) & v242))
      goto LABEL_277;
LABEL_272:
    v244 = (v340 + v243) & v236;
LABEL_276:
    (*(void (**)(unint64_t, uint64_t))(v359 + 8))(v243, v142);
    (*(void (**)(unint64_t, uint64_t))(v366 + 8))(v244, v362);
    swift_release();
    goto LABEL_277;
  }
  v244 = (v228 + v243) & v236;
  if ((_DWORD)v225 == v227)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v366 + 48))((v228 + v243) & v236, v225, v362))
    {
      goto LABEL_277;
    }
    goto LABEL_272;
  }
  v245 = *(_QWORD *)((v356 + v244 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v245 >= 0xFFFFFFFF)
    LODWORD(v245) = -1;
  if ((v245 + 1) < 2)
    goto LABEL_276;
LABEL_277:
  v246 = (unsigned __int8 *)((v231 + v223) & v236);
  if (v225 > 0xFE)
  {
    v250 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v366 + 48))((unint64_t)&v246[v331] & v236, v225, v362);
    v251 = v349;
    v248 = v342;
    if (v250)
      goto LABEL_285;
    goto LABEL_284;
  }
  v247 = *v246;
  v248 = v342;
  if (v247 >= 2)
    v249 = (v247 + 2147483646) & 0x7FFFFFFF;
  else
    v249 = -1;
  v251 = v349;
  if (v249 == -1)
  {
LABEL_284:
    (*(void (**)(unint64_t, uint64_t))(v366 + 8))((unint64_t)&v246[v331] & v236, v362);
    v251 = v349;
  }
LABEL_285:
  v252 = (unint64_t)&v246[v333] & v222;
  v253 = (v353 + v252) & v248;
  if (v251 == v345)
  {
    if ((*(unsigned int (**)(unint64_t))(v359 + 48))((v353 + v252) & v248))
      goto LABEL_295;
LABEL_290:
    v254 = (v340 + v253) & v236;
LABEL_294:
    (*(void (**)(unint64_t, uint64_t))(v359 + 8))(v253, v339);
    (*(void (**)(unint64_t, uint64_t))(v366 + 8))(v254, v362);
    swift_release();
    goto LABEL_295;
  }
  v254 = (v340 + v253) & v236;
  if ((_DWORD)v225 == v345)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v366 + 48))((v340 + v253) & v236, v225, v362))
    {
      goto LABEL_295;
    }
    goto LABEL_290;
  }
  v255 = *(_QWORD *)((v356 + v254 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v255 >= 0xFFFFFFFF)
    LODWORD(v255) = -1;
  if ((v255 + 1) < 2)
    goto LABEL_294;
LABEL_295:
  v256 = (unsigned __int8 *)((v231 + v252) & v236);
  if (v225 > 0xFE)
  {
    v230 = v335;
    v242 = v342;
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v366 + 48))((unint64_t)&v256[v332] & v236, v225, v362))
    {
      goto LABEL_303;
    }
    goto LABEL_302;
  }
  v257 = *v256;
  v230 = v335;
  if (v257 >= 2)
    v258 = (v257 + 2147483646) & 0x7FFFFFFF;
  else
    v258 = -1;
  v242 = v342;
  if (v258 == -1)
LABEL_302:
    (*(void (**)(unint64_t, uint64_t))(v366 + 8))((unint64_t)&v256[v332] & v236, v362);
LABEL_303:
  v224 = (_BYTE *)v347;
  v259 = *(unsigned __int8 *)(v347 + v337);
  if (v259 >= 2)
  {
    if (v337 <= 3)
      v260 = v337;
    else
      v260 = 4;
    __asm { BR              X12 }
  }
  if (v259 == 1)
  {
    v261 = (v353 + v347) & v242;
    v330 = v231;
    if (v349 == v345)
    {
      if (!(*(unsigned int (**)(unint64_t))(v359 + 48))((v353 + v347) & v242))
        goto LABEL_315;
    }
    else
    {
      v262 = (v340 + v261) & v236;
      if ((_DWORD)v225 == v345)
      {
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v366 + 48))((v340 + v261) & v236, v225, v362))
        {
LABEL_315:
          v325 = v225;
          v324 = v222;
          v263 = v340;
          v262 = (v340 + v261) & v236;
          v264 = v356 + 7;
          v265 = (_QWORD *)((v356 + 7 + v262) & 0xFFFFFFFFFFFFFFF8);
LABEL_320:
          *(_BYTE *)v223 = *(_BYTE *)v347;
          *(_BYTE *)(v223 | 1) = *(_BYTE *)(v347 | 1);
          v267 = (v353 + v223) & v342;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v359 + 32))(v267, v261, v339);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v366 + 32))((v263 + v267) & v236, v262, v362);
          v268 = v347;
          *(_QWORD *)((v264 + ((v263 + v267) & v236)) & 0xFFFFFFFFFFFFF8) = *v265;
          v222 = v324;
          v231 = v330;
          v225 = v325;
          v269 = __n;
          goto LABEL_322;
        }
      }
      else
      {
        v264 = v356 + 7;
        v266 = *(_QWORD *)((v356 + 7 + v262) & 0xFFFFFFFFFFFFFFF8);
        if (v266 >= 0xFFFFFFFF)
          LODWORD(v266) = -1;
        if ((v266 + 1) < 2)
        {
          v325 = v225;
          v324 = v222;
          v263 = v340;
          v265 = (_QWORD *)((v264 + v262) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_320;
        }
      }
    }
    v269 = __n;
    memcpy((void *)v223, (const void *)v347, __n);
    v268 = v347;
LABEL_322:
    v270 = (_BYTE *)((v231 + v223) & v236);
    v271 = (unsigned __int8 *)((v231 + v268) & v236);
    if (v225 > 0xFE)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v366 + 48))((unint64_t)&v271[v331] & v236, v225, v362))goto LABEL_324;
    }
    else if (*v271 < 2u)
    {
LABEL_324:
      *v270 = *v271;
      *(_BYTE *)(((v231 + v223) & v236) + 1) = v271[1];
      *(_BYTE *)(((v231 + v223) & v236) + 2) = v271[2];
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v366 + 32))((unint64_t)&v270[v331] & v236, (unint64_t)&v271[v331] & v236, v362);
      goto LABEL_327;
    }
    memcpy((void *)((v231 + v223) & v236), v271, v327);
LABEL_327:
    v272 = (unint64_t)&v270[v333] & v222;
    v235 = v222;
    v273 = (unint64_t)&v271[v333] & v222;
    v274 = (v353 + v273) & v342;
    if (v349 == v345)
    {
      if (!(*(unsigned int (**)(unint64_t))(v359 + 48))((v353 + v273) & v342))
        goto LABEL_332;
    }
    else
    {
      v275 = (v340 + v274) & v236;
      if ((_DWORD)v225 == v345)
      {
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v366 + 48))((v340 + v274) & v236, v225, v362))
        {
LABEL_332:
          v326 = v225;
          v276 = v340;
          v275 = (v340 + v274) & v236;
          v350 = v356 + 7;
          v346 = (_QWORD *)((v356 + 7 + v275) & 0xFFFFFFFFFFFFFFF8);
LABEL_337:
          *(_BYTE *)v272 = *(_BYTE *)v273;
          *(_BYTE *)(v272 | 1) = *(_BYTE *)(v273 | 1);
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v359 + 32))((v353 + v272) & v342, v274, v339);
          v278 = (v276 + ((v353 + v272) & v342)) & v236;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v366 + 32))(v278, v275, v362);
          *(_QWORD *)((v350 + v278) & 0xFFFFFFFFFFFFF8) = *v346;
          v241 = v343;
          v225 = v326;
          goto LABEL_339;
        }
      }
      else
      {
        v277 = *(_QWORD *)((v356 + 7 + v275) & 0xFFFFFFFFFFFFFFF8);
        if (v277 >= 0xFFFFFFFF)
          LODWORD(v277) = -1;
        if ((v277 + 1) < 2)
        {
          v326 = v225;
          v276 = v340;
          v350 = v356 + 7;
          v346 = (_QWORD *)((v356 + 7 + v275) & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_337;
        }
      }
    }
    memcpy((void *)v272, (const void *)v273, v269);
    v241 = v343;
LABEL_339:
    v279 = (_BYTE *)((v330 + v272) & v236);
    v280 = (unsigned __int8 *)((v330 + v273) & v236);
    if (v225 > 0xFE)
    {
      v282 = v332;
      v283 = (unint64_t)&v280[v332] & v236;
      v284 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v366 + 48))(v283, v225, v362);
      v238 = v356;
      if (!v284)
      {
        LOBYTE(v281) = *v280;
        goto LABEL_345;
      }
    }
    else
    {
      v281 = *v280;
      v238 = v356;
      v282 = v332;
      if (v281 <= 1)
      {
        v283 = (unint64_t)&v280[v332] & v236;
LABEL_345:
        *v279 = v281;
        v279[1] = v280[1];
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v366 + 32))((unint64_t)&v279[v282] & v236, v283, v362);
        v285 = v329;
        goto LABEL_346;
      }
    }
    v285 = v329;
    memcpy(v279, v280, v329);
LABEL_346:
    v286 = &v279[v285];
    *v286 = *(_WORD *)&v280[v285];
    v286[1] = *(_WORD *)&v280[v285 + 2];
    v286[2] = *(_WORD *)&v280[v285 + 4];
    v237 = v336;
    *(_BYTE *)(v223 + v337) = 1;
    v224 = (_BYTE *)v347;
    v239 = v330;
    v230 = v335;
    goto LABEL_347;
  }
  v239 = v231;
  v235 = v222;
  *(_QWORD *)v223 = *(_QWORD *)v347;
  *(_BYTE *)(v223 + v337) = 0;
  v241 = v343;
  v238 = v356;
  v237 = v336;
LABEL_347:
  v240 = v334;
LABEL_348:
  v287 = v237 + v238 + ((v239 + ((v230 + v238 + v220 + v240) & v235)) & v236) + 6;
  if (v287 <= 8)
    v287 = 8;
  v288 = v287 + 1;
  v289 = (_BYTE *)(v223 + v288);
  v290 = &v224[v288];
  v291 = (v223 + v288 + 7) & 0xFFFFFFFFFFFFFFF8;
  v292 = (unint64_t)(v290 + 7) & 0xFFFFFFFFFFFFFFF8;
  v293 = *(_QWORD *)v292;
  LOBYTE(v292) = *(_BYTE *)(v292 + 8);
  v294 = *(_QWORD *)v291;
  v295 = *(_BYTE *)(v291 + 8);
  *(_QWORD *)v291 = v293;
  *(_BYTE *)(v291 + 8) = v292;
  sub_21C531A84(v294, v295);
  v296 = (unint64_t)(v289 + 23) & 0xFFFFFFFFFFFFFFF8;
  v297 = (unint64_t)(v290 + 23) & 0xFFFFFFFFFFFFFFF8;
  v298 = *(_BYTE *)(v297 + 16);
  v299 = *(_QWORD *)v296;
  v300 = *(_QWORD *)(v296 + 8);
  v301 = *(_BYTE *)(v296 + 16);
  *(_OWORD *)v296 = *(_OWORD *)v297;
  *(_BYTE *)(v296 + 16) = v298;
  sub_21C531ABC(v299, v300, v301, (uint64_t (*)(void))sub_21C531C48);
  v302 = (unint64_t)(v289 + 47) & 0xFFFFFFFFFFFFFFF8;
  v303 = (unint64_t)(v290 + 47) & 0xFFFFFFFFFFFFFFF8;
  v304 = *(_BYTE *)(v303 + 16);
  v305 = *(_QWORD *)v302;
  v306 = *(_QWORD *)(v302 + 8);
  v307 = *(_BYTE *)(v302 + 16);
  *(_OWORD *)v302 = *(_OWORD *)v303;
  *(_BYTE *)(v302 + 16) = v304;
  sub_21C531ABC(v305, v306, v307, (uint64_t (*)(void))sub_21C531A9C);
  v308 = (unint64_t)(v289 + 71) & 0xFFFFFFFFFFFFFFF8;
  v309 = (unint64_t)(v290 + 71) & 0xFFFFFFFFFFFFFFF8;
  v310 = *(_QWORD *)v309;
  LOBYTE(v309) = *(_BYTE *)(v309 + 8);
  v311 = *(_QWORD *)v308;
  v312 = *(_BYTE *)(v308 + 8);
  *(_QWORD *)v308 = v310;
  *(_BYTE *)(v308 + 8) = v309;
  sub_21C531A84(v311, v312);
  v313 = (unint64_t)(v289 + 87) & 0xFFFFFFFFFFFFFFF8;
  v314 = (unint64_t)(v290 + 87) & 0xFFFFFFFFFFFFFFF8;
  v315 = *(_QWORD *)v314;
  LOBYTE(v314) = *(_BYTE *)(v314 + 8);
  v316 = *(_QWORD *)v313;
  v317 = *(_BYTE *)(v313 + 8);
  *(_QWORD *)v313 = v315;
  *(_BYTE *)(v313 + 8) = v314;
  sub_21C531AC8(v316, v317);
  v318 = (unint64_t)(v289 + 103) & 0xFFFFFFFFFFFFFFF8;
  v319 = (unint64_t)(v290 + 103) & 0xFFFFFFFFFFFFFFF8;
  v320 = *(_QWORD *)v319;
  LOBYTE(v319) = *(_BYTE *)(v319 + 8);
  v321 = *(_QWORD *)v318;
  v322 = *(_BYTE *)(v318 + 8);
  *(_QWORD *)v318 = v320;
  *(_BYTE *)(v318 + 8) = v319;
  sub_21C531A84(v321, v322);
  return v241;
}

uint64_t sub_21C595DBC(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  unint64_t v48;
  unint64_t v49;
  int v50;
  unint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  uint64_t v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v75;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v70 = *(_DWORD *)(v3 + 84);
  v72 = *(_QWORD *)(v3 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v71 = *(_DWORD *)(v4 + 84);
  v75 = *(_QWORD *)(v4 + 64);
  v68 = *(_QWORD *)(sub_21C5E32C8() - 8);
  v5 = *(_DWORD *)(v68 + 84);
  v69 = *(_QWORD *)(sub_21C5E2ED8() - 8);
  v58 = v5;
  v55 = *(_DWORD *)(v69 + 84);
  if (v55 <= v5)
    v6 = v5;
  else
    v6 = *(_DWORD *)(v69 + 84);
  v7 = *(_QWORD *)(sub_21C5E346C() - 8);
  if (*(_DWORD *)(v7 + 84) > v6)
    v6 = *(_DWORD *)(v7 + 84);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
  v8 = *(_QWORD *)(v54 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v53 = sub_21C5E2D64();
  v66 = *(_QWORD *)(v53 - 8);
  v56 = *(_DWORD *)(v66 + 84);
  v57 = v9;
  if (v56 <= v9)
    v10 = v9;
  else
    v10 = *(_DWORD *)(v66 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  v59 = v11;
  v60 = v6;
  if (v6 > v11)
    v11 = v6;
  v65 = v11;
  v12 = *(_QWORD *)(sub_21C5E31A8() - 8);
  v13 = *(_QWORD *)(v12 + 64);
  if (v13 <= 8)
    LODWORD(v14) = 8;
  else
    v14 = *(_QWORD *)(v12 + 64);
  v64 = v14;
  v15 = *(_QWORD *)(sub_21C5E2E78() - 8);
  v16 = *(_QWORD *)(v15 + 64);
  if (v16 <= 8)
    LODWORD(v17) = 8;
  else
    v17 = *(_QWORD *)(v15 + 64);
  v63 = v17;
  v61 = *(_QWORD *)(sub_21C5E32E0() - 8);
  v18 = *(_QWORD *)(v61 + 64);
  if (v18 <= 8)
    LODWORD(v18) = 8;
  v62 = v18;
  v19 = *(_QWORD *)(sub_21C5E3088() - 8);
  if (*(_QWORD *)(v19 + 64) <= 8uLL)
    LODWORD(v20) = 8;
  else
    v20 = *(_QWORD *)(v19 + 64);
  v21 = v72;
  if (!v70)
    v21 = v72 + 1;
  v22 = *(unsigned __int8 *)(v12 + 80);
  v23 = *(unsigned __int8 *)(v15 + 80);
  v24 = v22 | 7 | v23;
  v25 = v75;
  if (!v71)
    v25 = v75 + 1;
  if (v21 <= v25)
    v21 = v25;
  if (v21 <= 8)
    v21 = 8;
  if (v10)
    v26 = 7;
  else
    v26 = 8;
  v27 = ((v16 + ((v13 + v23 + ((v22 + 2) & ~v22)) & ~v23) + 7) & 0xFFFFFFFFFFFFFFF8) + v23 + 8;
  v28 = v16 + ((v23 + 2) & ~v23) + ((v27 + ((v24 + v16 + ((v23 + 3) & ~v23) + (v27 & ~v23)) & ~v24)) & ~v23) + 6;
  if (v28 <= 8)
    v29 = 8;
  else
    v29 = v28;
  if (!a2)
    return 0;
  v30 = (*(_DWORD *)(v4 + 80) | *(_DWORD *)(v3 + 80)) & 0xF8 | 7u;
  v31 = v21 + ((v30 + 16) & ~v30) + 1;
  v32 = *(unsigned __int8 *)(v69 + 80);
  v33 = *(unsigned __int8 *)(v7 + 80);
  v34 = *(_DWORD *)(v68 + 80) & 0xFC | v32 | v33 | 3;
  v35 = v34 + 8;
  v36 = *(_QWORD *)(v68 + 64) + v32;
  v37 = *(_QWORD *)(v69 + 64) + v33;
  v73 = ((*(_QWORD *)(v7 + 64) + ((v37 + (v36 & ~v32)) & ~v33) + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  v38 = *(_DWORD *)(v66 + 80);
  v39 = *(_DWORD *)(v66 + 80) | *(unsigned __int8 *)(v8 + 80);
  v40 = v39 | 7;
  v41 = *(_QWORD *)(v8 + 64) + v38;
  if (v65 < a2)
  {
    v42 = ((v29
          + ((v24
            + ((v20
              + ((v62
                + (*(_DWORD *)(v19 + 80) & 0xF8 | 7)
                + ((v63
                  + (*(_DWORD *)(v61 + 80) & 0xF8 | 7)
                  + ((v64
                    + (v23 | 7)
                    + ((v22
                      + ((v26
                        + *(_QWORD *)(v66 + 64)
                        + ((v39 + 16) & ~(_DWORD)v39)
                        + ((*(_QWORD *)(v66 + 64) + v38 + (v41 & ~(_DWORD)v38)) & ~(_DWORD)v38)
                        + ((v40 + v73 + ((v35 + ((v31 + ((v30 + 200) & ~(_DWORD)v30) + 7) & 0xFFFFFFF8)) & ~(_DWORD)v34)) & ~(_DWORD)v40)) & 0xFFFFFFF8)
                      + 8) & ~(v22 | 7))
                    + 1) & ~(v23 | 7))
                  + 1) & ~(*(_DWORD *)(v61 + 80) & 0xF8 | 7))
                + 1) & ~(*(_DWORD *)(v19 + 80) & 0xF8 | 7))
              + 24) & 0xFFFFFFF8)
            + 82) & ~(_DWORD)v24)
          + 104) & 0xFFFFFFF8)
        + 9;
    if (v42 < 4)
      v43 = ((a2 - v65 + 255) >> (8 * v42)) + 1;
    else
      v43 = 2;
    if (v43 >= 0x10000)
      v44 = 4;
    else
      v44 = 2;
    if (v43 < 0x100)
      v44 = 1;
    if (v43 >= 2)
      v45 = v44;
    else
      v45 = 0;
    __asm { BR              X7 }
  }
  if ((v65 & 0x80000000) == 0)
  {
    v46 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v46) = -1;
    return (v46 + 1);
  }
  v48 = (v35
       + (((((((((((((((((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                   + 23) & 0xFFFFFFFFFFFFFFF8)
                 + 23) & 0xFFFFFFFFFFFFFFF8)
               + 23) & 0xFFFFFFFFFFFFFFF8)
             + 31) & 0xFFFFFFFFFFFFFFF8)
           + v30
           + 80) & ~v30 | 7)
         + v31) & 0xFFFFFFFFFFFFFFF8)) & ~v34;
  if (v60 >= v59)
  {
    if (v58 == v60)
      return (*(uint64_t (**)(unint64_t))(v68 + 48))(v48);
    v51 = (v36 + v48) & ~v32;
    if (v55 == v60)
      return (*(uint64_t (**)(unint64_t))(v69 + 48))(v51);
    else
      return (*(uint64_t (**)(unint64_t))(v7 + 48))((v37 + v51) & ~v33);
  }
  if (!v10)
    return 0;
  v49 = (v39 + ((((v48 + v73 + v40) & ~v40) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v39;
  v50 = v57 >= v56
      ? (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v8 + 48))(v49, v57, v54)
      : (*(unint64_t (**)(unint64_t, _QWORD, uint64_t))(v66 + 48))((v41 + v49) & ~v38, v56, v53);
  v52 = v50 != 0;
  result = (v50 - 1);
  if ((_DWORD)result == 0 || !v52)
    return 0;
  return result;
}

void sub_21C596410(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  size_t v46;
  unsigned int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  int v52;
  int v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v66;

  v58 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v52 = *(_DWORD *)(v58 + 84);
  v57 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v53 = *(_DWORD *)(v57 + 84);
  v54 = *(_QWORD *)(v58 + 64);
  v55 = *(_QWORD *)(v57 + 64);
  v51 = *(_QWORD *)(sub_21C5E32C8() - 8);
  v4 = *(_DWORD *)(v51 + 84);
  v5 = *(_QWORD *)(sub_21C5E2ED8() - 8);
  if (*(_DWORD *)(v5 + 84) <= v4)
    v6 = v4;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(sub_21C5E346C() - 8);
  if (*(_DWORD *)(v7 + 84) > v6)
    v6 = *(_DWORD *)(v7 + 84);
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(sub_21C5E2D64() - 8);
  if (*(_DWORD *)(v10 + 84) <= v9)
    v11 = v9;
  else
    v11 = *(_DWORD *)(v10 + 84);
  if (v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  if (v6 > v13)
    v13 = v6;
  v59 = v13;
  v14 = *(_QWORD *)(sub_21C5E31A8() - 8);
  v15 = *(_QWORD *)(v14 + 64);
  if (v15 <= 8)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v14 + 64);
  v62 = v16;
  v17 = *(_QWORD *)(sub_21C5E2E78() - 8);
  v18 = *(_QWORD *)(v17 + 64);
  if (v18 <= 8)
    v19 = 8;
  else
    v19 = *(_QWORD *)(v17 + 64);
  v61 = v19;
  v56 = *(_QWORD *)(sub_21C5E32E0() - 8);
  v20 = *(_QWORD *)(v56 + 64);
  if (v20 <= 8)
    v20 = 8;
  v60 = v20;
  v66 = 0;
  v21 = *(_QWORD *)(sub_21C5E3088() - 8);
  if (*(_QWORD *)(v21 + 64) <= 8uLL)
    v22 = 8;
  else
    v22 = *(_QWORD *)(v21 + 64);
  v23 = v54;
  if (!v52)
    v23 = v54 + 1;
  v24 = v55;
  if (!v53)
    v24 = v55 + 1;
  if (v23 <= v24)
    v23 = v24;
  if (v23 <= 8)
    v23 = 8;
  v25 = v11 == 0;
  v26 = *(unsigned __int8 *)(v14 + 80);
  v27 = *(unsigned __int8 *)(v17 + 80);
  v28 = v15 + v27 + ((v26 + 2) & ~v26);
  v29 = v26 | 7;
  v31 = *(unsigned __int8 *)(v5 + 80);
  v32 = *(unsigned __int8 *)(v7 + 80);
  v34 = *(_DWORD *)(v10 + 80);
  v36 = *(_QWORD *)(v8 + 64) + v34;
  v37 = *(_QWORD *)(v10 + 64);
  if (v25)
    v38 = ((v37 + v34 + (v36 & ~v34)) & ~v34) + v37 + 1;
  else
    v38 = ((v37 + v34 + (v36 & ~v34)) & ~v34) + v37;
  v39 = *(_DWORD *)(v56 + 80) & 0xF8 | 7;
  v33 = *(_DWORD *)(v51 + 80) & 0xFC | v31 | v32 | 3;
  v30 = (*(_DWORD *)(v57 + 80) | *(_DWORD *)(v58 + 80)) & 0xF8 | 7u;
  v35 = *(_DWORD *)(v10 + 80) | *(unsigned __int8 *)(v8 + 80);
  v40 = (v61
       + v39
       + ((v62
         + (v27 | 7)
         + ((v26
           + ((v38
             + ((v35 + 16) & ~v35)
             + (((v35 | 7)
               + ((*(_QWORD *)(v7 + 64)
                 + ((*(_QWORD *)(v5 + 64) + v32 + ((*(_QWORD *)(v51 + 64) + v31) & ~v31)) & ~v32)
                 + 3) & 0xFFFFFFFFFFFFFFFCLL)
               + 4
               + ((v33 + 8 + ((v23 + ((v30 + 16) & ~v30) + 1 + ((v30 + 200) & ~v30) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & ~(v35 | 7))
             + 7) & 0xFFFFFFFFFFFFFFF8)
           + 8) & ~v29)
         + 1) & ~(v27 | 7))
       + 1) & ~v39;
  v41 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  v42 = v29 | v27;
  v43 = ((v18 + (v28 & ~v27) + 7) & 0xFFFFFFFFFFFFFFF8) + v27 + 8;
  v44 = (v42 + ((v22 + ((v60 + v41 + v40 + 1) & ~v41) + 24) & 0xFFFFFFFFFFFFFFF8) + 82) & ~v42;
  v45 = v18 + ((v27 + 2) & ~v27) + ((v43 + ((v42 + v18 + ((v27 + 3) & ~v27) + (v43 & ~v27)) & ~v42)) & ~v27) + 6;
  if (v45 <= 8)
    v45 = 8;
  v46 = ((v45 + v44 + 104) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v59 < a3)
  {
    if (v46 <= 3)
      v47 = ((a3 - v59 + 255) >> (8 * v46)) + 1;
    else
      v47 = 2;
    if (v47 >= 0x10000)
      v48 = 4;
    else
      v48 = 2;
    if (v47 < 0x100)
      v48 = 1;
    if (v47 >= 2)
      v49 = v48;
    else
      v49 = 0;
    v66 = v49;
  }
  if (v59 < a2)
  {
    if (v46 >= 4)
      v50 = ~v59 + a2;
    else
      v50 = (~(_BYTE)v59 + a2);
    bzero(a1, v46);
    if ((_DWORD)v46 == 1)
      *a1 = v50;
    else
      *(_DWORD *)a1 = v50;
    __asm { BR              X10 }
  }
  __asm { BR              X21 }
}

void sub_21C5968F4()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x21C596A10);
}

void sub_21C5968FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v9;

  *(_DWORD *)(a8 + v9) = 0;
  if (v8)
    JUMPOUT(0x21C596904);
  JUMPOUT(0x21C596A10);
}

void sub_21C596914()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x21C596A10);
}

void sub_21C59691C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x21C596A10);
}

void sub_21C596924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;
  uint64_t v10;

  *(_WORD *)(a8 + v10) = 0;
  if (v9)
  {
    if ((v8 & 0x80000000) == 0)
    {
      if ((v9 & 0x80000000) == 0)
        JUMPOUT(0x21C596A0CLL);
      JUMPOUT(0x21C596A04);
    }
    JUMPOUT(0x21C596930);
  }
  JUMPOUT(0x21C596A10);
}

void sub_21C596B5C()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x21C596A10);
}

void sub_21C596B90()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x21C596A10);
}

void sub_21C596BA0()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x21C596A10);
}

void sub_21C596BA8()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x21C596A10);
}

void sub_21C596C38(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_21C596C90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_21C596CE8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_21C596D1C()
{
  JUMPOUT(0x22077F9A0);
}

void sub_21C596D2C()
{
  type metadata accessor for _MapContentView.Child();
}

uint64_t sub_21C596D60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v3 = v1 + *(int *)(a1 + 108) + ((v2 + 64) & ~v2);
  v4 = sub_21C5E32C8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = type metadata accessor for _MapContentInputs(0);
  v6 = v3 + *(int *)(v5 + 20);
  v7 = sub_21C5E2ED8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v3 + *(int *)(v5 + 24);
  v9 = sub_21C5E346C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject();
}

void sub_21C596E20()
{
  type metadata accessor for _MapContentView.Child();
}

#error "21C596EA8: call analysis failed (funcsize=15)"

uint64_t sub_21C596ECC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_21C5E31FC();
  *a1 = v3;
  return result;
}

uint64_t sub_21C596EF4()
{
  return sub_21C5E3208();
}

uint64_t sub_21C596F54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_21C5E3268();
  *a1 = result & 1;
  return result;
}

uint64_t sub_21C596F80()
{
  return sub_21C5E3274();
}

unint64_t sub_21C596FC8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_255289828;
  if (!qword_255289828)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289820);
    v2 = sub_21C59702C();
    result = MEMORY[0x22077F9A0](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_255289828);
  }
  return result;
}

unint64_t sub_21C59702C()
{
  unint64_t result;

  result = qword_255289830;
  if (!qword_255289830)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E60F0, &type metadata for AnyEquatable);
    atomic_store(result, (unint64_t *)&qword_255289830);
  }
  return result;
}

uint64_t sub_21C597070(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x22077F9A0](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21C5970B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21C597364(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21C5799A0, a3, a4);
}

uint64_t sub_21C5970C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C5970E4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_21C589898(a1, *(void (**)(char *))(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_21C5970F8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MapPreferenceWrapper(0, v7, v8, a4) - 8) + 80);
  return sub_21C579FAC(a1, a2, v4 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t sub_21C597164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MapPreferenceWrapper(0, v7, v8, a4) - 8) + 80);
  return sub_21C57A4AC(a1, a2, v4 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t sub_21C5971CC()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_209Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;

  v5 = type metadata accessor for MapPreferenceWrapper(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = v4
     + ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80));
  swift_release();
  sub_21C531A84(*(_QWORD *)(v6 + 16), *(_BYTE *)(v6 + 24));
  sub_21C531BE4(*(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_BYTE *)(v6 + 72));
  v7 = v6 + *(int *)(v5 + 48);
  v8 = type metadata accessor for KeyframeAnimationState();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552888C8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
    v10 = v7 + *(int *)(v8 + 20);
    v11 = sub_21C5E2D64();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
    v12(v10, v11);
    v12(v7 + *(int *)(v8 + 24), v11);
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_255289698);
  swift_release();
  v13 = v6 + *(int *)(v5 + 52);
  swift_release();
  swift_release();
  sub_21C55DAAC(*(_QWORD *)(v13 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C597358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_21C597364(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_21C57936C, a3, a4);
}

uint64_t sub_21C597364(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MapPreferenceWrapper(0, v6, v7, a4) - 8) + 80);
  return a2(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

unint64_t sub_21C5973DC()
{
  unint64_t result;

  result = qword_255289870;
  if (!qword_255289870)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5EC904, &type metadata for MapScopeRegistryKey);
    atomic_store(result, (unint64_t *)&qword_255289870);
  }
  return result;
}

uint64_t sub_21C597420(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[2];
  _QWORD v26[2];
  _QWORD v27[2];

  v1 = *(_QWORD *)(a1 + 8);
  sub_21C5E34CC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF0768];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552897F0);
  v3 = sub_21C5E30A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552897F8);
  v4 = sub_21C5E30A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289800);
  v5 = sub_21C5E30A0();
  v6 = MEMORY[0x24BDF0B90];
  v27[0] = v1;
  v27[1] = sub_21C5616A0(&qword_255289808, &qword_2552897F0, MEMORY[0x24BDF0B90]);
  v7 = MEMORY[0x24BDED308];
  v26[0] = MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v3, v27);
  v26[1] = sub_21C5616A0(&qword_255289810, &qword_2552897F8, v6);
  v25[0] = MEMORY[0x22077F9A0](v7, v4, v26);
  v25[1] = sub_21C5616A0(&qword_255289818, &qword_255289800, v6);
  MEMORY[0x22077F9A0](v7, v5, v25);
  v8 = sub_21C5E2FEC();
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289820);
  v10 = MEMORY[0x22077F9A0](MEMORY[0x24BDEC6F8], v8);
  v11 = sub_21C596FC8();
  v21 = v8;
  v22 = v9;
  v23 = v10;
  v24 = v11;
  v12 = MEMORY[0x24BDF38E8];
  v13 = MEMORY[0x22077F964](255, &v21, MEMORY[0x24BDF38E8], 0);
  v14 = sub_21C5E2D64();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v21 = v8;
  v22 = v9;
  v23 = v10;
  v24 = v11;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v17 = sub_21C597070(&qword_255289838, 255, v15, MEMORY[0x24BDCE958]);
  v21 = v13;
  v22 = v14;
  v23 = OpaqueTypeConformance2;
  v24 = v17;
  MEMORY[0x22077F964](255, &v21, v12, 0);
  sub_21C597070(&qword_255289840, 255, v2, MEMORY[0x24BDF0760]);
  v18 = sub_21C5E2F14();
  v21 = v13;
  v22 = v14;
  v23 = OpaqueTypeConformance2;
  v24 = v17;
  v20 = swift_getOpaqueTypeConformance2();
  return MEMORY[0x22077F9A0](MEMORY[0x24BDEBD40], v18, &v20);
}

uint64_t sub_21C5976C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_21C589A6C(a1, a2);
}

id sub_21C597788(char *a1, uint64_t a2, SEL *a3)
{
  void *v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;

  v4 = *(void **)&a1[OBJC_IVAR____TtCV15_MapKit_SwiftUI10MapPolygon12CocoaWrapper_wrapped];
  v5 = a1;
  v6 = objc_msgSend(v4, *a3);
  if (v6)
  {
    v7 = v6;
    sub_21C5E3964();

    v8 = (void *)sub_21C5E3940();
    swift_bridgeObjectRelease();
  }
  else
  {

    v8 = 0;
  }
  return v8;
}

void sub_21C597824(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v6;
  char *v7;
  char *v8;
  id v9;

  if (a3)
  {
    sub_21C5E3964();
    v6 = *(void **)&a1[OBJC_IVAR____TtCV15_MapKit_SwiftUI10MapPolygon12CocoaWrapper_wrapped];
    v7 = a1;
    v9 = (id)sub_21C5E3940();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(void **)&a1[OBJC_IVAR____TtCV15_MapKit_SwiftUI10MapPolygon12CocoaWrapper_wrapped];
    v8 = a1;
    v9 = 0;
  }
  objc_msgSend(v6, *a4, v9);

}

id sub_21C597B88()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MapPolygon.CocoaWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL sub_21C597BC8(uint64_t a1, uint64_t a2)
{
  return sub_21C599E80(*(_QWORD **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
}

double MapPolygon.init(coordinates:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)a2 = a1;
  *(_QWORD *)&result = 1;
  *(_OWORD *)(a2 + 8) = xmmword_21C5E8840;
  return result;
}

uint64_t MapPolygon.init(coordinates:interiorPolygons:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;

  v3 = result;
  v4 = a3;
  if (a2)
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (v6)
    {
      v15 = result;
      v17 = MEMORY[0x24BEE4AF8];
      sub_21C59902C(0, v6, 0);
      v7 = v17;
      v8 = (uint64_t *)(a2 + 48);
      do
      {
        v9 = (void *)*(v8 - 2);
        v10 = *(v8 - 1);
        v11 = *v8;
        sub_21C5611D8(v9, v10);
        v13 = *(_QWORD *)(v17 + 16);
        v12 = *(_QWORD *)(v17 + 24);
        if (v13 >= v12 >> 1)
          sub_21C59902C(v12 > 1, v13 + 1, 1);
        v8 += 3;
        *(_QWORD *)(v17 + 16) = v13 + 1;
        v14 = (_QWORD *)(v17 + 24 * v13);
        v14[4] = v9;
        v14[5] = v10;
        v14[6] = v11;
        --v6;
      }
      while (v6);
      result = swift_bridgeObjectRelease();
      v3 = v15;
      v4 = a3;
    }
    else
    {
      result = swift_bridgeObjectRelease();
      v7 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    v7 = 0;
  }
  *v4 = v3;
  v4[1] = 1;
  v4[2] = v7;
  return result;
}

uint64_t MapPolygon.init(points:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  a2[1] = 0;
  a2[2] = 0;
  *a2 = result;
  return result;
}

uint64_t MapPolygon.init(points:interiorPolygons:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;

  v3 = result;
  v4 = a3;
  if (a2)
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (v6)
    {
      v15 = result;
      v17 = MEMORY[0x24BEE4AF8];
      sub_21C59902C(0, v6, 0);
      v7 = v17;
      v8 = (uint64_t *)(a2 + 48);
      do
      {
        v9 = (void *)*(v8 - 2);
        v10 = *(v8 - 1);
        v11 = *v8;
        sub_21C5611D8(v9, v10);
        v13 = *(_QWORD *)(v17 + 16);
        v12 = *(_QWORD *)(v17 + 24);
        if (v13 >= v12 >> 1)
          sub_21C59902C(v12 > 1, v13 + 1, 1);
        v8 += 3;
        *(_QWORD *)(v17 + 16) = v13 + 1;
        v14 = (_QWORD *)(v17 + 24 * v13);
        v14[4] = v9;
        v14[5] = v10;
        v14[6] = v11;
        --v6;
      }
      while (v6);
      result = swift_bridgeObjectRelease();
      v3 = v15;
      v4 = a3;
    }
    else
    {
      result = swift_bridgeObjectRelease();
      v7 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    v7 = 0;
  }
  *v4 = v3;
  v4[1] = 0;
  v4[2] = v7;
  return result;
}

double MapPolygon.init(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  objc_class *v4;
  char *v5;
  double result;
  objc_super v7;

  v4 = (objc_class *)type metadata accessor for MapPolygon.CocoaWrapper();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtCV15_MapKit_SwiftUI10MapPolygon12CocoaWrapper_wrapped] = a1;
  v7.receiver = v5;
  v7.super_class = v4;
  *(_QWORD *)a2 = objc_msgSendSuper2(&v7, sel_init);
  result = -0.0;
  *(_OWORD *)(a2 + 8) = xmmword_21C5E8850;
  return result;
}

uint64_t static MapPolygon._mapContentCount(inputs:)()
{
  return 1;
}

uint64_t static MapPolygon._makeMapContent(content:inputs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[36];
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v20 = a2;
  v31 = *MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552882A8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (int *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552898A8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (int *)((char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19[1] = a3;
  _s15_MapKit_SwiftUI05EmptyA7ContentV05_makeaF07content6inputsAA01_aF7OutputsV0cD011_GraphValueVyACG_AA01_aF6InputsVtFZ_0();
  (*(void (**)(int *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  if (v11 != 4)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  v13 = *v12;
  (*(void (**)(int *, uint64_t))(v10 + 8))(v12, v9);
  v14 = v20;
  sub_21C5E32B0();
  if (v7 != 4)
    goto LABEL_5;
  v15 = *v8;
  (*(void (**)(int *, uint64_t))(v6 + 8))(v8, v5);
  v16 = *(_DWORD *)(v14 + *(int *)(type metadata accessor for _MapContentInputs(0) + 28));
  v21 = v13;
  v22 = v15;
  v23 = v16;
  v24 = 0u;
  v25 = 0u;
  memset(v26, 0, 28);
  v26[28] = -1;
  v27 = 0;
  v28 = -1;
  v29 = 0;
  v30 = 1;
  sub_21C527A50();
  sub_21C599068();
  v17 = sub_21C5E2DAC();
  LODWORD(v19[-2]) = MEMORY[0x24BDAC7A8](v17);
  sub_21C524A00();
  return sub_21C5E3478();
}

uint64_t sub_21C598108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Value;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  void (*v32)(uint64_t, _BYTE *, uint64_t);
  void (*v33)(uint64_t, _BYTE *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  _BYTE *v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  int *v80;
  uint64_t v81;
  _BYTE *v82;
  void *v83;
  void *v84;
  _QWORD *v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  _BYTE v105[12];
  int v106;
  int v107;
  int v108;
  uint64_t v109;
  void (*v110)(uint64_t, _BYTE *, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  int v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  _BYTE *v129;
  void *v130;
  _BYTE *v131;
  _BYTE *v132;
  _BYTE *v133;
  _OWORD v134[2];
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  __int128 v139;
  uint64_t v140;
  _QWORD v141[6];

  v1 = v0;
  v141[5] = *MEMORY[0x24BDAC8D0];
  v111 = type metadata accessor for MapContentList.Item.Content(0);
  MEMORY[0x24BDAC7A8](v111);
  v117 = &v105[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v112 = type metadata accessor for MapContentList.Item(0);
  v113 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112);
  v114 = (uint64_t *)&v105[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_21C5E328C();
  v125 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v132 = &v105[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v5);
  v129 = &v105[-v8];
  MEMORY[0x24BDAC7A8](v7);
  v133 = &v105[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552884D0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = &v105[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v15 = &v105[-v14];
  v16 = sub_21C5E34E4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v128 = &v105[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v131 = &v105[-v20];
  Value = AGGraphGetValue();
  v109 = v22;
  v24 = *(void **)Value;
  v23 = *(_QWORD *)(Value + 8);
  v25 = *(_QWORD *)(Value + 16);
  v123 = (void (*)(uint64_t, uint64_t))v10;
  v26 = *(int *)(v10 + 48);
  v27 = *(_DWORD *)(v1 + 8) == *MEMORY[0x24BE096C0];
  v130 = v24;
  v127 = v17;
  v122 = v25;
  if (v27)
  {
    sub_21C5611D8(v24, v23);
    sub_21C5E34D8();
    v108 = 0;
    v15[v26] = 0;
    v33 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v17 + 32);
  }
  else
  {
    v28 = AGGraphGetValue();
    v121 = v4;
    v30 = v29;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16))(v13, v28, v16);
    v13[v26] = v30 & 1;
    v31 = *((int *)v123 + 12);
    v32 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v17 + 32);
    v32((uint64_t)v15, v13, v16);
    v15[v26] = v13[v31];
    sub_21C5611D8(v24, v23);
    v33 = v32;
    v4 = v121;
    v108 = v15[v26];
  }
  v34 = v23;
  v110 = v33;
  v33((uint64_t)v131, v15, v16);
  v35 = AGGraphGetValue();
  v36 = v125;
  v37 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v125 + 16);
  v38 = (uint64_t)v133;
  v37(v133, v35, v4);
  v39 = sub_21C5E31B4();
  v40 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  v40(v38, v4);
  v41 = *(_QWORD *)(v1 + 16);
  v115 = (v39 | v41) == 0;
  if (v39 && v41)
  {
    swift_retain();
    swift_retain();
    v115 = sub_21C5E3718();
    swift_release();
    swift_release();
  }
  v42 = AGGraphGetValue();
  v37((_BYTE *)v38, v42, v4);
  sub_21C59A014();
  sub_21C5E3298();
  v134[0] = v136;
  v134[1] = v137;
  v43 = (_BYTE *)*((_QWORD *)&v137 + 1);
  v135 = v138;
  v44 = v136;
  v118 = DWORD2(v136);
  v119 = HIDWORD(v136);
  v45 = v137;
  v46 = v138;
  v40(v38, v4);
  v47 = *(_QWORD *)(v1 + 48);
  v121 = v39;
  if (v47)
  {
    v48 = *(_QWORD *)(v1 + 56);
    v49 = *(_QWORD *)(v1 + 40);
    v50 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)&v136 = *(_QWORD *)(v1 + 24);
    *((_QWORD *)&v136 + 1) = v50;
    *(_QWORD *)&v137 = v49;
    *((_QWORD *)&v137 + 1) = v47;
    v138 = v48;
    sub_21C56C80C((uint64_t)v134);
    swift_bridgeObjectRetain();
    v51 = MEMORY[0x22077E3B0](v134, &v136);
    swift_bridgeObjectRelease();
    sub_21C56C834((uint64_t)v134);
    v107 = v51 ^ 1;
    v38 = (uint64_t)v133;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v107 = 1;
  }
  v52 = AGGraphGetValue();
  v37((_BYTE *)v38, v52, v4);
  sub_21C59A058();
  sub_21C5E3298();
  v123 = v40;
  v40(v38, v4);
  v53 = AGGraphGetValue();
  v54 = (uint64_t)v129;
  v37(v129, v53, v4);
  v55 = sub_21C5AF7D0(v141, v54);
  v57 = v56 & 1;
  v58 = *(unsigned __int8 *)(v1 + 72);
  v120 = v55;
  v124 = v16;
  v126 = v34;
  if (v58 == 255)
  {
    v62 = v16;
    v63 = v43;
    v106 = 0;
    goto LABEL_19;
  }
  v59 = *(_QWORD *)(v1 + 64);
  if ((v56 & 1) != 0)
  {
    if ((v58 & 1) != 0)
    {
      v60 = v55;
      sub_21C52EF74(v55, 1);
      sub_21C59A1FC(v59, v58);
      v61 = MEMORY[0x22077ED70](v60, v59);
LABEL_17:
      v106 = v61;
      v63 = v43;
      sub_21C59A1E4(v59, v58);
      sub_21C531AC8(v60, v57);
      v38 = (uint64_t)v133;
      v62 = v124;
      goto LABEL_19;
    }
  }
  else if ((v58 & 1) == 0)
  {
    v60 = v55;
    sub_21C52EF74(v55, 0);
    sub_21C59A1FC(v59, v58);
    v61 = sub_21C5E3718();
    goto LABEL_17;
  }
  v62 = v16;
  v63 = v43;
  v106 = 0;
  v38 = (uint64_t)v133;
LABEL_19:
  v64 = AGGraphGetValue();
  v65 = v132;
  v37(v132, v64, v4);
  sub_21C59A09C();
  sub_21C5E3298();
  v66 = v123;
  v123((uint64_t)v65, v4);
  v129 = v63;
  v67 = v127;
  if (v140)
  {
    sub_21C56101C(&v139, (uint64_t)v141);
  }
  else
  {
    v68 = AGGraphGetValue();
    v37((_BYTE *)v38, v68, v4);
    v69 = sub_21C5E325C();
    v66(v38, v4);
    v141[3] = MEMORY[0x24BDEBF80];
    v141[4] = MEMORY[0x24BDEBF68];
    v141[0] = v69;
    sub_21C59A0E0((uint64_t)&v139);
  }
  v70 = v62;
  v71 = AGGraphGetValue();
  v37((_BYTE *)v38, v71, v4);
  v116 = sub_21C5AF7D0(v141, v38);
  v73 = *(unsigned __int8 *)(v1 + 88);
  LODWORD(v132) = v72 & 1;
  v74 = v126;
  if (v73 != 255)
  {
    v75 = v70;
    v76 = *(_QWORD *)(v1 + 80);
    if ((v72 & 1) != 0)
    {
      if ((v73 & 1) != 0)
      {
        v77 = v116;
        sub_21C52EF74(v116, 1);
        sub_21C59A1FC(v76, v73);
        v78 = MEMORY[0x22077ED70](v77, v76);
LABEL_29:
        v79 = v78;
        sub_21C59A1E4(v76, v73);
        sub_21C531AC8(v77, (char)v132);
LABEL_31:
        v70 = v75;
        v67 = v127;
        v74 = v126;
        goto LABEL_32;
      }
    }
    else if ((v73 & 1) == 0)
    {
      v77 = v116;
      sub_21C52EF74(v116, 0);
      sub_21C59A1FC(v76, v73);
      v78 = sub_21C5E3718();
      goto LABEL_29;
    }
    v79 = 0;
    goto LABEL_31;
  }
  v79 = 0;
LABEL_32:
  v80 = (int *)(v118 | (v119 << 32));
  v81 = AGGraphGetValue();
  v82 = v133;
  v37(v133, v81, v4);
  sub_21C59A120();
  sub_21C5E3298();
  v125 = v141[0];
  v123((uint64_t)v82, v4);
  if ((*(_BYTE *)(v1 + 104) & 1) == 0
    && (v106 & ~(v109 | v107 | v115 ^ 1 | v108) & v79 & 1) != 0
    && v125 == *(_QWORD *)(v1 + 96)
    && AGGraphGetOutputValue())
  {
    *(_QWORD *)(v1 + 96) = v125;
    *(_BYTE *)(v1 + 104) = 0;
    sub_21C59A1E4(*(_QWORD *)(v1 + 80), *(_BYTE *)(v1 + 88));
    *(_QWORD *)(v1 + 80) = v116;
    *(_BYTE *)(v1 + 88) = (_BYTE)v132;
    sub_21C59A1E4(*(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72));
    *(_QWORD *)(v1 + 64) = v120;
    *(_BYTE *)(v1 + 72) = v57;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 24) = v44;
    *(_QWORD *)(v1 + 32) = v80;
    *(_QWORD *)(v1 + 40) = v45;
    *(_QWORD *)(v1 + 48) = v129;
    *(_QWORD *)(v1 + 56) = v46;
    *(_QWORD *)(v1 + 16) = v121;
    v83 = v130;
  }
  else
  {
    v123 = (void (*)(uint64_t, uint64_t))v80;
    LODWORD(v133) = (_DWORD)v132 != 0;
    v115 = *(_DWORD *)(v1 + 12) + 1;
    *(_DWORD *)(v1 + 12) = v115;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v67 + 16))(v128, v131, v70);
    v84 = v130;
    v85 = v117;
    *v117 = v130;
    v85[1] = v74;
    v86 = v121;
    v85[2] = v122;
    v85[3] = v86;
    v85[4] = v44;
    v87 = v119;
    *((_DWORD *)v85 + 10) = v118;
    *((_DWORD *)v85 + 11) = v87;
    v85[6] = v45;
    v85[7] = v129;
    v85[8] = v46;
    v88 = v120;
    v85[9] = v120;
    *((_BYTE *)v85 + 80) = v57 != 0;
    v89 = v116;
    v85[11] = v116;
    *((_BYTE *)v85 + 96) = (_BYTE)v133;
    v85[13] = v125;
    swift_storeEnumTagMultiPayload();
    sub_21C5611D8(v84, v74);
    swift_retain();
    sub_21C56C80C((uint64_t)v134);
    sub_21C52EF74(v88, v57);
    v90 = (char)v132;
    sub_21C52EF74(v89, (char)v132);
    sub_21C5611D8(v84, v74);
    swift_retain();
    swift_bridgeObjectRetain();
    LODWORD(v133) = v57;
    v91 = v89;
    sub_21C52EF74(v88, v57);
    sub_21C52EF74(v89, v90);
    sub_21C52B9E4();
    sub_21C5E34F0();
    v92 = v141[0];
    if (!v141[0])
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_255287F08);
      v92 = swift_allocObject();
      *(_OWORD *)(v92 + 16) = xmmword_21C5E5570;
      *(_QWORD *)(v92 + 32) = 0;
      *(_BYTE *)(v92 + 72) = 0;
    }
    v93 = (uint64_t)v114;
    *v114 = v92;
    v94 = v112;
    v110(v93 + *(int *)(v112 + 28), v128, v124);
    *(_DWORD *)(v93 + 8) = v115;
    sub_21C536C90((uint64_t)v117, v93 + *(int *)(v94 + 24));
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552884D8);
    v95 = (*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
    v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = xmmword_21C5E5570;
    sub_21C59A164(v93, v96 + v95);
    v141[0] = sub_21C5BA7C0(v96);
    v141[1] = v97;
    AGGraphSetOutputValue();
    v98 = v126;
    sub_21C561218(v130, v126);
    swift_bridgeObjectRelease();
    v99 = v121;
    swift_release();
    v100 = v120;
    LOBYTE(v95) = (_BYTE)v133;
    sub_21C531AC8(v120, (char)v133);
    v101 = v89;
    v102 = (char)v132;
    sub_21C531AC8(v101, (char)v132);
    swift_bridgeObjectRelease();
    sub_21C59A1A8(v93);
    *(_QWORD *)(v1 + 96) = v125;
    *(_BYTE *)(v1 + 104) = 0;
    sub_21C59A1E4(*(_QWORD *)(v1 + 80), *(_BYTE *)(v1 + 88));
    *(_QWORD *)(v1 + 80) = v91;
    *(_BYTE *)(v1 + 88) = v102;
    v103 = v99;
    v74 = v98;
    sub_21C59A1E4(*(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72));
    *(_QWORD *)(v1 + 64) = v100;
    *(_BYTE *)(v1 + 72) = v95;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 24) = v44;
    *(_QWORD *)(v1 + 32) = v123;
    *(_QWORD *)(v1 + 40) = v45;
    *(_QWORD *)(v1 + 48) = v129;
    *(_QWORD *)(v1 + 56) = v46;
    *(_QWORD *)(v1 + 16) = v103;
    v83 = v130;
    v70 = v124;
    v67 = v127;
  }
  swift_retain();
  swift_release();
  sub_21C561218(v83, v74);
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v67 + 8))(v131, v70);
}

uint64_t (*sub_21C598F34())()
{
  return sub_21C598F74;
}

uint64_t (*sub_21C598F44())()
{
  return sub_21C598F94;
}

uint64_t (*sub_21C598F54())()
{
  return sub_21C598FB4;
}

uint64_t (*sub_21C598F64())()
{
  return sub_21C598FD4;
}

uint64_t sub_21C598F74()
{
  return sub_21C5C0C24();
}

uint64_t sub_21C598F94()
{
  return sub_21C5CD2C8();
}

uint64_t sub_21C598FB4()
{
  return sub_21C598108();
}

uint64_t sub_21C598FD4()
{
  return sub_21C5D5CA0();
}

uint64_t sub_21C598FF4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_21C599858(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_21C599010(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21C599A38(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_21C59902C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_21C599CFC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t type metadata accessor for MapPolygon.CocoaWrapper()
{
  return objc_opt_self();
}

unint64_t sub_21C599068()
{
  unint64_t result;

  result = qword_2552898B0;
  if (!qword_2552898B0)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E8914, &type metadata for MapPolygon.MakeList);
    atomic_store(result, (unint64_t *)&qword_2552898B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MapPolygon()
{
  return &type metadata for MapPolygon;
}

void destroy for MapPolygon.Storage(uint64_t a1)
{
  sub_21C561218(*(void **)a1, *(_QWORD *)(a1 + 8));
}

_QWORD *_s15_MapKit_SwiftUI10MapPolygonV7StorageOwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_21C5611D8(*(void **)a2, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t _s15_MapKit_SwiftUI10MapPolygonV7StorageOwca_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_21C5611D8(*(void **)a2, v4);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  sub_21C561218(v6, v7);
  return a1;
}

uint64_t _s15_MapKit_SwiftUI10MapPolygonV7StorageOwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  sub_21C561218(v4, v5);
  return a1;
}

uint64_t _s15_MapKit_SwiftUI10MapPolygonV7StorageOwet_0(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t sub_21C59920C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 2 * -a2;
      *(_QWORD *)(result + 16) = 0;
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_21C599254(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 63;
}

uint64_t sub_21C599260(uint64_t result)
{
  *(_QWORD *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_21C599270(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for MapPolygon.Storage()
{
  return &type metadata for MapPolygon.Storage;
}

uint64_t destroy for MapPolygon.MakeList(uint64_t a1)
{
  uint64_t result;
  int v3;
  int v4;

  swift_release();
  result = swift_bridgeObjectRelease();
  v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 != 255)
    result = sub_21C531AC8(*(_QWORD *)(a1 + 64), v3 & 1);
  v4 = *(unsigned __int8 *)(a1 + 88);
  if (v4 != 255)
    return sub_21C531AC8(*(_QWORD *)(a1 + 80), v4 & 1);
  return result;
}

uint64_t initializeWithCopy for MapPolygon.MakeList(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t *v9;
  int v10;
  char v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v6 = a2 + 64;
  v7 = *(unsigned __int8 *)(a2 + 72);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)v6;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(v6 + 8);
  }
  else
  {
    v8 = *(_QWORD *)v6;
    sub_21C52EF74(v8, v7 & 1);
    *(_QWORD *)(a1 + 64) = v8;
    *(_BYTE *)(a1 + 72) = v7 & 1;
  }
  v9 = (uint64_t *)(a2 + 80);
  v10 = *(unsigned __int8 *)(a2 + 88);
  if (v10 == 255)
  {
    *(_QWORD *)(a1 + 80) = *v9;
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  }
  else
  {
    v11 = v10 & 1;
    v12 = *v9;
    sub_21C52EF74(*v9, v10 & 1);
    *(_QWORD *)(a1 + 80) = v12;
    *(_BYTE *)(a1 + 88) = v11;
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for MapPolygon.MakeList(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  int v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  int v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v4 = (uint64_t *)(a1 + 64);
  v5 = (uint64_t *)(a2 + 64);
  v6 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) == 255)
  {
    if (v6 == 255)
    {
      v8 = *v5;
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *v4 = v8;
    }
    else
    {
      v13 = v6 & 1;
      v14 = *v5;
      sub_21C52EF74(v14, v6 & 1);
      *(_QWORD *)(a1 + 64) = v14;
      *(_BYTE *)(a1 + 72) = v13;
    }
  }
  else if (v6 == 255)
  {
    sub_21C5995EC(a1 + 64);
    v7 = *(_BYTE *)(a2 + 72);
    *v4 = *v5;
    *(_BYTE *)(a1 + 72) = v7;
  }
  else
  {
    v9 = v6 & 1;
    v10 = *v5;
    sub_21C52EF74(v10, v6 & 1);
    v11 = *(_QWORD *)(a1 + 64);
    v12 = *(_BYTE *)(a1 + 72);
    *(_QWORD *)(a1 + 64) = v10;
    *(_BYTE *)(a1 + 72) = v9;
    sub_21C531AC8(v11, v12);
  }
  v15 = (uint64_t *)(a1 + 80);
  v16 = (uint64_t *)(a2 + 80);
  v17 = *(unsigned __int8 *)(a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    if (v17 == 255)
    {
      v19 = *v16;
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      *v15 = v19;
    }
    else
    {
      v24 = v17 & 1;
      v25 = *v16;
      sub_21C52EF74(v25, v17 & 1);
      *(_QWORD *)(a1 + 80) = v25;
      *(_BYTE *)(a1 + 88) = v24;
    }
  }
  else if (v17 == 255)
  {
    sub_21C5995EC(a1 + 80);
    v18 = *(_BYTE *)(a2 + 88);
    *v15 = *v16;
    *(_BYTE *)(a1 + 88) = v18;
  }
  else
  {
    v20 = v17 & 1;
    v21 = *v16;
    sub_21C52EF74(v21, v17 & 1);
    v22 = *(_QWORD *)(a1 + 80);
    v23 = *(_BYTE *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = v21;
    *(_BYTE *)(a1 + 88) = v20;
    sub_21C531AC8(v22, v23);
  }
  v26 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v26;
  return a1;
}

uint64_t sub_21C5995EC(uint64_t a1)
{
  destroy for ResolvedShapeStyle(a1);
  return a1;
}

__n128 __swift_memcpy105_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(__int128 *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for MapPolygon.MakeList(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;
  int v10;
  int v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = (_QWORD *)(a2 + 64);
  v6 = *(unsigned __int8 *)(a1 + 72);
  if (v6 == 255)
    goto LABEL_4;
  v7 = *(unsigned __int8 *)(a2 + 72);
  if (v7 == 255)
  {
    sub_21C5995EC(a1 + 64);
LABEL_4:
    *(_QWORD *)(a1 + 64) = *v5;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *v5;
  *(_BYTE *)(a1 + 72) = v7 & 1;
  sub_21C531AC8(v8, v6 & 1);
LABEL_6:
  v9 = (_QWORD *)(a2 + 80);
  v10 = *(unsigned __int8 *)(a1 + 88);
  if (v10 != 255)
  {
    v11 = *(unsigned __int8 *)(a2 + 88);
    if (v11 != 255)
    {
      v12 = *(_QWORD *)(a1 + 80);
      *(_QWORD *)(a1 + 80) = *v9;
      *(_BYTE *)(a1 + 88) = v11 & 1;
      sub_21C531AC8(v12, v10 & 1);
      goto LABEL_11;
    }
    sub_21C5995EC(a1 + 80);
  }
  *(_QWORD *)(a1 + 80) = *v9;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
LABEL_11:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for MapPolygon.MakeList(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 105))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MapPolygon.MakeList(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 105) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MapPolygon.MakeList()
{
  return &type metadata for MapPolygon.MakeList;
}

uint64_t sub_21C599858(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25528A490);
  v10 = *(_QWORD *)(type metadata accessor for _MapContentOutputs(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for _MapContentOutputs(0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_21C5E3D90();
  __break(1u);
  return result;
}

uint64_t sub_21C599A38(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552898B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_21C5E3D90();
  __break(1u);
  return result;
}

uint64_t sub_21C599BA0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552898E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_21C5E3D90();
  __break(1u);
  return result;
}

uint64_t sub_21C599CFC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2552898F0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_21C5E3D90();
  __break(1u);
  return result;
}

BOOL sub_21C599E80(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  char v12;
  char v13;
  _BOOL8 result;
  uint64_t v15;

  if (a2 < 0)
  {
    if (a5 < 0)
    {
      sub_21C531A4C(0, (unint64_t *)&qword_255289570);
      sub_21C5611D8(a1, a2);
      sub_21C5611D8(a4, a5);
      v13 = sub_21C5E3B98();
      sub_21C561218(a4, a5);
      sub_21C561218(a1, a2);
      return v13 & 1;
    }
    return 0;
  }
  if (a5 < 0)
    return 0;
  if ((a2 & 1) != 0)
  {
    if ((a5 & 1) == 0 || a1[2] != a4[2] || (sub_21C55973C((uint64_t)a1, (uint64_t)a4) & 1) == 0)
      return 0;
  }
  else
  {
    if ((a5 & 1) != 0)
      return 0;
    if (a1[2] != a4[2])
      return 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_21C559680((uint64_t)a1, (uint64_t)a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
      return 0;
  }
  result = (a3 | a6) == 0;
  if (a3 && a6)
  {
    swift_bridgeObjectRetain();
    v15 = swift_bridgeObjectRetain();
    v13 = sub_21C5B7B9C(v15, a6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v13 & 1;
  }
  return result;
}

unint64_t sub_21C59A014()
{
  unint64_t result;

  result = qword_2552898C0;
  if (!qword_2552898C0)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5ECB64, &type metadata for MapContentStrokeStyleKey);
    atomic_store(result, (unint64_t *)&qword_2552898C0);
  }
  return result;
}

unint64_t sub_21C59A058()
{
  unint64_t result;

  result = qword_2552898C8;
  if (!qword_2552898C8)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5ECB2C, &type metadata for MapContentStrokeShapeStyleKey);
    atomic_store(result, (unint64_t *)&qword_2552898C8);
  }
  return result;
}

unint64_t sub_21C59A09C()
{
  unint64_t result;

  result = qword_2552898D0;
  if (!qword_2552898D0)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5ECABC, &type metadata for MapContentForegroundShapeStyleKey);
    atomic_store(result, (unint64_t *)&qword_2552898D0);
  }
  return result;
}

uint64_t sub_21C59A0E0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552898D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_21C59A120()
{
  unint64_t result;

  result = qword_2552898E0;
  if (!qword_2552898E0)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5ECAF4, &type metadata for MapContentOverlayLevelKey);
    atomic_store(result, (unint64_t *)&qword_2552898E0);
  }
  return result;
}

uint64_t sub_21C59A164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MapContentList.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_21C59A1A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MapContentList.Item(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_21C59A1E4(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_21C531AC8(result, a2 & 1);
  return result;
}

uint64_t sub_21C59A1FC(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_21C52EF74(result, a2 & 1);
  return result;
}

uint64_t destroy for ResolvedPolygon(uint64_t a1)
{
  sub_21C561218(*(void **)a1, *(_QWORD *)(a1 + 8));
  swift_release();
  swift_bridgeObjectRelease();
  sub_21C531AC8(*(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
  return sub_21C531AC8(*(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96));
}

uint64_t initializeWithCopy for ResolvedPolygon(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  sub_21C5611D8(*(void **)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  LOBYTE(v6) = *(_BYTE *)(a2 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_21C52EF74(v10, v6);
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = v6;
  v11 = *(_QWORD *)(a2 + 88);
  LOBYTE(v10) = *(_BYTE *)(a2 + 96);
  sub_21C52EF74(v11, v10);
  *(_QWORD *)(a1 + 88) = v11;
  *(_BYTE *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for ResolvedPolygon(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  sub_21C5611D8(*(void **)a2, v5);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  sub_21C561218(v7, v8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  LOBYTE(v5) = *(_BYTE *)(a2 + 80);
  sub_21C52EF74(v9, v5);
  v10 = *(_QWORD *)(a1 + 72);
  v11 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = v5;
  sub_21C531AC8(v10, v11);
  v12 = *(_QWORD *)(a2 + 88);
  LOBYTE(v5) = *(_BYTE *)(a2 + 96);
  sub_21C52EF74(v12, v5);
  v13 = *(_QWORD *)(a1 + 88);
  v14 = *(_BYTE *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v12;
  *(_BYTE *)(a1 + 96) = v5;
  sub_21C531AC8(v13, v14);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for ResolvedPolygon(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  sub_21C561218(v5, v6);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_BYTE *)(a2 + 80);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = v8;
  sub_21C531AC8(v9, v10);
  v11 = *(_BYTE *)(a2 + 96);
  v12 = *(_QWORD *)(a1 + 88);
  v13 = *(_BYTE *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = v11;
  sub_21C531AC8(v12, v13);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResolvedPolygon(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for ResolvedPolygon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 2 * -a2;
      *(_QWORD *)(result + 16) = 0;
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResolvedPolygon()
{
  return &type metadata for ResolvedPolygon;
}

uint64_t sub_21C59A5D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  char v15;
  void (*v16)(char *, uint64_t);
  void (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v22;
  uint64_t v25;

  v3 = sub_21C5E2E78();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v25 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - v11;
  v13 = v1 + *(int *)(type metadata accessor for MapScaleViewConfig(0) + 28);
  v14 = *MEMORY[0x24BDEB498];
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v12, *MEMORY[0x24BDEB498], v3);
  v15 = sub_21C5E2E6C();
  v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v16(v12, v3);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  if ((v15 & 1) != 0)
  {
    v17(v10, a1, v3);
    v18 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v10, v3);
    if (v18 == *MEMORY[0x24BDEB480] || v18 == *MEMORY[0x24BDEB490] || v18 == v14)
      return 1;
    if (v18 == *MEMORY[0x24BDEB488])
      return 2;
  }
  else
  {
    v17(v7, v13, v3);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
    if (v22 == *MEMORY[0x24BDEB480] || v22 == *MEMORY[0x24BDEB490] || v22 == v14)
      return 1;
    v10 = v7;
    if (v22 == *MEMORY[0x24BDEB488])
      return 2;
  }
  v16(v10, v3);
  return 1;
}

uint64_t MapScaleView.init(anchorEdge:scope:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v7;
  int *v8;
  uint64_t *v9;
  uint64_t result;
  uint64_t v11;

  v7 = a1 & 1;
  *(_QWORD *)a4 = swift_getKeyPath();
  *(_BYTE *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = swift_getKeyPath();
  *(_BYTE *)(a4 + 24) = 0;
  *(_QWORD *)(a4 + 32) = swift_getKeyPath();
  *(_BYTE *)(a4 + 40) = 0;
  v8 = (int *)type metadata accessor for MapScaleView(0);
  v9 = (uint64_t *)(a4 + v8[7]);
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
  result = swift_storeEnumTagMultiPayload();
  *(_BYTE *)(a4 + v8[9]) = v7;
  v11 = a4 + v8[8];
  *(_QWORD *)v11 = a2;
  *(_BYTE *)(v11 + 8) = a3 & 1;
  return result;
}

uint64_t MapScaleView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  char v54;
  uint64_t KeyPath;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v2 = v1;
  v79 = a1;
  v67 = type metadata accessor for _MapScaleView(0);
  v3 = MEMORY[0x24BDAC7A8](v67);
  v68 = (uint64_t *)((char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v69 = (uint64_t)&v61 - v5;
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552898F8);
  v6 = MEMORY[0x24BDAC7A8](v78);
  v66 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v70 = (uint64_t)&v61 - v8;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289900);
  MEMORY[0x24BDAC7A8](v76);
  v77 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880B8);
  MEMORY[0x24BDAC7A8](v10);
  v64 = (uint64_t)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880C0);
  v12 = MEMORY[0x24BDAC7A8](v75);
  v63 = (uint64_t *)((char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v65 = (uint64_t)&v61 - v14;
  v15 = (int *)type metadata accessor for MapControlsConfig();
  MEMORY[0x24BDAC7A8](v15);
  v73 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_21C5E2E78();
  v71 = *(_QWORD *)(v17 - 8);
  v72 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MapScaleViewConfig(0);
  v74 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v62 = (uint64_t)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v61 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v61 - v26;
  v28 = *(_QWORD *)(v1 + 32);
  v29 = *(_BYTE *)(v2 + 40);
  sub_21C531A90(v28, v29);
  v30 = sub_21C52D7BC(v28, v29);
  sub_21C531A84(v28, v29);
  v31 = type metadata accessor for MapScaleView(0);
  v32 = *(_BYTE *)(v2 + *(int *)(v31 + 36));
  v61 = v31;
  sub_21C52D1D4((uint64_t)v19);
  if (v30 == 3)
    v33 = 0;
  else
    v33 = v30;
  v25[1] = v33;
  v25[2] = v32;
  v34 = v2;
  v35 = (uint64_t)v73;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v25[*(int *)(v20 + 28)], v19, v72);
  *v25 = 1;
  sub_21C52AAD4((uint64_t)v25, (uint64_t)v27, type metadata accessor for MapScaleViewConfig);
  v36 = type metadata accessor for MapPitchToggleConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
  v37 = v35 + v15[5];
  sub_21C529664((uint64_t)v27, v37, type metadata accessor for MapScaleViewConfig);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v74 + 56))(v37, 0, 1, v20);
  v38 = v35 + v15[6];
  v39 = type metadata accessor for MapUserLocationButtonConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 1, 1, v39);
  v40 = v35 + v15[7];
  v41 = type metadata accessor for MapCompassConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
  *(_WORD *)(v35 + v15[8]) = 2;
  *(_WORD *)(v35 + v15[9]) = 2;
  *(_WORD *)(v35 + v15[10]) = 2;
  v42 = *(_QWORD *)(v34 + 16);
  v43 = *(_BYTE *)(v34 + 24);
  sub_21C531A90(v42, v43);
  v44 = sub_21C52D604(v42, v43);
  sub_21C531A84(v42, v43);
  if ((v44 & 1) != 0)
  {
    v45 = sub_21C5E3724();
    v46 = v64;
    sub_21C529664(v35, v64, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
    v47 = v63;
    sub_21C531B18(v46, (uint64_t)v63 + *(int *)(v75 + 36), &qword_2552880B8);
    *v47 = v45;
    sub_21C524980(v46, &qword_2552880B8);
    v48 = &qword_2552880C0;
    v49 = (uint64_t)v47;
    v50 = v65;
    sub_21C52DB08(v49, v65, &qword_2552880C0);
    sub_21C531B18(v50, v77, &qword_2552880C0);
  }
  else
  {
    v51 = v62;
    sub_21C529664((uint64_t)v27, v62, type metadata accessor for MapScaleViewConfig);
    v52 = (uint64_t *)(v34 + *(int *)(v61 + 32));
    v53 = *v52;
    v54 = *((_BYTE *)v52 + 8);
    KeyPath = swift_getKeyPath();
    v56 = v67;
    v57 = (uint64_t)v68;
    *v68 = KeyPath;
    *(_BYTE *)(v57 + 8) = 0;
    sub_21C52AAD4(v51, v57 + *(int *)(v56 + 24), type metadata accessor for MapScaleViewConfig);
    *(_QWORD *)(v57 + 16) = v53;
    *(_BYTE *)(v57 + 24) = v54;
    v58 = v69;
    sub_21C52AAD4(v57, v69, type metadata accessor for _MapScaleView);
    v59 = v66;
    sub_21C529664(v58, v66, type metadata accessor for _MapScaleView);
    *(_WORD *)(v59 + *(int *)(v78 + 36)) = 257;
    sub_21C52A88C(v58, type metadata accessor for _MapScaleView);
    v48 = &qword_2552898F8;
    v50 = v70;
    sub_21C52DB08(v59, v70, &qword_2552898F8);
    sub_21C531B18(v50, v77, &qword_2552898F8);
  }
  swift_storeEnumTagMultiPayload();
  sub_21C52D9D4();
  sub_21C59B50C();
  sub_21C5E33E8();
  sub_21C524980(v50, v48);
  sub_21C52A88C(v35, (uint64_t (*)(_QWORD))type metadata accessor for MapControlsConfig);
  return sub_21C52A88C((uint64_t)v27, type metadata accessor for MapScaleViewConfig);
}

uint64_t sub_21C59AEF0()
{
  sub_21C59C828(&qword_255289958, (uint64_t)&unk_21C5E8B38);
  return sub_21C5E33C4();
}

uint64_t sub_21C59AF50()
{
  sub_21C59C828(&qword_255289958, (uint64_t)&unk_21C5E8B38);
  return sub_21C5E3370();
}

void sub_21C59AFB0()
{
  sub_21C59C828(&qword_255289958, (uint64_t)&unk_21C5E8B38);
  sub_21C5E33B8();
  __break(1u);
}

id sub_21C59AFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _BYTE v24[8];

  v1 = v0;
  v2 = sub_21C5E2E78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB1A0]), sel_init);
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
    goto LABEL_13;
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(_QWORD *)v0;
  v10 = *(_BYTE *)(v0 + 8);
  sub_21C52EF74(*(_QWORD *)v0, v10);
  v11 = sub_21C52F61C(v9, v10);
  sub_21C531AC8(v9, v10);
  if (!*(_QWORD *)(v11 + 16) || (v12 = sub_21C530EAC(v8), (v13 & 1) == 0))
  {
    v22 = 0;
    v23 = 1;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_21C5317D4(*(_QWORD *)(v11 + 56) + 8 * v12, (uint64_t)&v22);
  v23 = 0;
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
  {
LABEL_12:
    sub_21C524980((uint64_t)&v22, &qword_255288140);
    goto LABEL_13;
  }
  sub_21C531764((uint64_t)&v22, (uint64_t)v24);
  v14 = MEMORY[0x22077FAFC](v24);
  if (v14)
  {
    v15 = (void *)v14;
    objc_msgSend(v6, sel_setMapView_, v14);
    v16 = v1 + *(int *)(type metadata accessor for _MapScaleView(0) + 24);
    objc_msgSend(v6, sel_setScaleVisibility_, qword_21C5E8C20[*(char *)(v16 + 1)]);
    objc_msgSend(v6, sel_setLegendAlignment_, *(unsigned __int8 *)(v16 + 2));
    v17 = type metadata accessor for MapScaleViewConfig(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v16 + *(int *)(v17 + 28), v2);
    v18 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    v19 = 1;
    if (v18 != *MEMORY[0x24BDEB480] && v18 != *MEMORY[0x24BDEB490] && v18 != *MEMORY[0x24BDEB498])
    {
      if (v18 == *MEMORY[0x24BDEB488])
      {
        v19 = 2;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 8))(v5, v2, 1);
        v19 = 1;
      }
    }
    objc_msgSend(v6, sel__setControlSize_, v19);

  }
  sub_21C5317A0((uint64_t)v24);
LABEL_13:
  LODWORD(v7) = 1144750080;
  objc_msgSend(v6, sel__mapkit_setContentHuggingPriority_forAxis_, 1, v7);
  return v6;
}

id sub_21C59B26C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _BYTE v25[8];

  v2 = v1;
  v4 = sub_21C5E2E78();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
    goto LABEL_8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)v1;
  v10 = *(_BYTE *)(v1 + 8);
  sub_21C52EF74(*(_QWORD *)v1, v10);
  v11 = sub_21C52F61C(v9, v10);
  sub_21C531AC8(v9, v10);
  if (*(_QWORD *)(v11 + 16) && (v12 = sub_21C530EAC(v8), (v13 & 1) != 0))
  {
    sub_21C5317D4(*(_QWORD *)(v11 + 56) + 8 * v12, (uint64_t)&v23);
    v24 = 0;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      sub_21C531764((uint64_t)&v23, (uint64_t)v25);
      v14 = (void *)MEMORY[0x22077FAFC](v25);
      objc_msgSend(a1, sel_setMapView_, v14);

      sub_21C5317A0((uint64_t)v25);
      goto LABEL_8;
    }
  }
  else
  {
    v23 = 0;
    v24 = 1;
    swift_bridgeObjectRelease();
  }
  sub_21C524980((uint64_t)&v23, &qword_255288140);
LABEL_8:
  v15 = v2 + *(int *)(type metadata accessor for _MapScaleView(0) + 24);
  objc_msgSend(a1, sel_setScaleVisibility_, qword_21C5E8C20[*(char *)(v15 + 1)]);
  objc_msgSend(a1, sel_setLegendAlignment_, *(unsigned __int8 *)(v15 + 2));
  v16 = type metadata accessor for MapScaleViewConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15 + *(int *)(v16 + 28), v4);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v17 == *MEMORY[0x24BDEB480] || v17 == *MEMORY[0x24BDEB490] || v17 == *MEMORY[0x24BDEB498])
    goto LABEL_18;
  if (v17 != *MEMORY[0x24BDEB488])
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_18:
    v20 = 1;
    return objc_msgSend(a1, sel__setControlSize_, v20);
  }
  v20 = 2;
  return objc_msgSend(a1, sel__setControlSize_, v20);
}

uint64_t type metadata accessor for MapScaleView(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255289918);
}

uint64_t type metadata accessor for _MapScaleView(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255289938);
}

uint64_t type metadata accessor for MapScaleViewConfig(uint64_t a1)
{
  return sub_21C5254A0(a1, (uint64_t *)&unk_255289948);
}

unint64_t sub_21C59B50C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255289908;
  if (!qword_255289908)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2552898F8);
    v2[0] = sub_21C59C828(&qword_255289910, (uint64_t)&unk_21C5E8BC8);
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255289908);
  }
  return result;
}

uint64_t sub_21C59B588()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t initializeBufferWithCopyOfBuffer for MapScaleView(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_21C52EF74(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_21C531A90(v9, v10);
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_BYTE *)(a2 + 40);
    sub_21C531A90(v11, v12);
    *(_QWORD *)(a1 + 32) = v11;
    *(_BYTE *)(a1 + 40) = v12;
    v13 = a3[7];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (_QWORD *)(a2 + v13);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_21C5E2E78();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v18 = a3[8];
    v19 = a3[9];
    v20 = a1 + v18;
    v21 = a2 + v18;
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
    *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  }
  return a1;
}

uint64_t destroy for MapScaleView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_21C531AC8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  sub_21C531A84(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  sub_21C531A84(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  v4 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_21C5E2E78();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for MapScaleView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_21C52EF74(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_21C531A90(v8, v9);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a2 + 40);
  sub_21C531A90(v10, v11);
  *(_QWORD *)(a1 + 32) = v10;
  *(_BYTE *)(a1 + 40) = v11;
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_21C5E2E78();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v16 = a3[8];
  v17 = a3[9];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  return a1;
}

uint64_t assignWithCopy for MapScaleView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_21C52EF74(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_21C531AC8(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_BYTE *)(a2 + 24);
  sub_21C531A90(v10, v11);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  *(_BYTE *)(a1 + 24) = v11;
  sub_21C531A84(v12, v13);
  v14 = *(_QWORD *)(a2 + 32);
  v15 = *(_BYTE *)(a2 + 40);
  sub_21C531A90(v14, v15);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v14;
  *(_BYTE *)(a1 + 40) = v15;
  sub_21C531A84(v16, v17);
  if (a1 != a2)
  {
    v18 = a3[7];
    v19 = (_QWORD *)(a1 + v18);
    v20 = (_QWORD *)(a2 + v18);
    sub_21C524980(a1 + v18, (uint64_t *)&unk_2552897E0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_21C5E2E78();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = (uint64_t *)(a2 + v22);
  v25 = *v24;
  *(_BYTE *)(v23 + 8) = *((_BYTE *)v24 + 8);
  *(_QWORD *)v23 = v25;
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for MapScaleView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_21C5E2E78();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[8];
  v12 = a3[9];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for MapScaleView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_21C531AC8(v8, v9);
  v10 = *((_BYTE *)a2 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v10;
  sub_21C531A84(v11, v12);
  v13 = *((_BYTE *)a2 + 40);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = v13;
  sub_21C531A84(v14, v15);
  if ((uint64_t *)a1 != a2)
  {
    v16 = a3[7];
    v17 = (void *)(a1 + v16);
    v18 = (char *)a2 + v16;
    sub_21C524980(a1 + v16, (uint64_t *)&unk_2552897E0);
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2552897E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_21C5E2E78();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  v21 = a3[8];
  v22 = a3[9];
  v23 = a1 + v21;
  v24 = (uint64_t)a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_BYTE *)(a1 + v22) = *((_BYTE *)a2 + v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for MapScaleView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C59BC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MapScaleView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C59BCD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2552880F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_21C59BD4C()
{
  unint64_t v0;

  sub_21C59BDD8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_21C59BDD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255289D70)
  {
    sub_21C5E2E78();
    v0 = sub_21C5E2E84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255289D70);
  }
}

unint64_t sub_21C59BE30()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255289928;
  if (!qword_255289928)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289930);
    v2[0] = sub_21C52D9D4();
    v2[1] = sub_21C59B50C();
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255289928);
  }
  return result;
}

unint64_t sub_21C59BE9C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_21C52EF74(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    v9 = *(int *)(a3 + 24);
    v10 = a1 + v9;
    v11 = a2 + v9;
    *(_WORD *)v10 = *(_WORD *)(a2 + v9);
    *(_BYTE *)(v10 + 2) = *(_BYTE *)(a2 + v9 + 2);
    v12 = *(int *)(type metadata accessor for MapScaleViewConfig(0) + 28);
    v13 = v10 + v12;
    v14 = v11 + v12;
    v15 = sub_21C5E2E78();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_21C59BF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_21C531AC8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = v4 + *(int *)(type metadata accessor for MapScaleViewConfig(0) + 28);
  v6 = sub_21C5E2E78();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_21C59BFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_21C52EF74(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_WORD *)v9 = *(_WORD *)v10;
  *(_BYTE *)(v9 + 2) = *(_BYTE *)(v10 + 2);
  v11 = *(int *)(type metadata accessor for MapScaleViewConfig(0) + 28);
  v12 = v9 + v11;
  v13 = v10 + v11;
  v14 = sub_21C5E2E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_21C59C08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_21C52EF74(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_21C531AC8(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v10;
  v11 = *(int *)(a3 + 24);
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v14 = *(int *)(type metadata accessor for MapScaleViewConfig(0) + 28);
  v15 = &v12[v14];
  v16 = &v13[v14];
  v17 = sub_21C5E2E78();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t sub_21C59C154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_WORD *)v5 = *(_WORD *)(a2 + v4);
  *(_BYTE *)(v5 + 2) = *(_BYTE *)(a2 + v4 + 2);
  v7 = *(int *)(type metadata accessor for MapScaleViewConfig(0) + 28);
  v8 = v5 + v7;
  v9 = v6 + v7;
  v10 = sub_21C5E2E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_21C59C1EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_21C531AC8(v8, v9);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  v10 = *(int *)(a3 + 24);
  v11 = (_BYTE *)(a1 + v10);
  v12 = (char *)a2 + v10;
  *v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v13 = *(int *)(type metadata accessor for MapScaleViewConfig(0) + 28);
  v14 = &v11[v13];
  v15 = &v12[v13];
  v16 = sub_21C5E2E78();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_21C59C2A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C59C2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for MapScaleViewConfig(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_21C59C320()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C59C32C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = type metadata accessor for MapScaleViewConfig(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_21C59C39C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MapScaleViewConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_21C59C418(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(_BYTE *)(a1 + 2) = *((_BYTE *)a2 + 2);
    v5 = *(int *)(a3 + 28);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_21C5E2E78();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_21C59C4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = sub_21C5E2E78();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_21C59C4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21C5E2E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_21C59C544(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = *(int *)(a3 + 28);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_21C5E2E78();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_21C59C5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_21C5E2E78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_21C59C614(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = *(int *)(a3 + 28);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_21C5E2E78();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_21C59C680()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C59C68C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_21C5E2E78();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v10);
  }
}

uint64_t sub_21C59C708()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_21C59C714(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_21C5E2E78();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_21C59C784()
{
  uint64_t result;
  unint64_t v1;

  result = sub_21C5E2E78();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_21C59C804()
{
  return sub_21C59C828(&qword_255289910, (uint64_t)&unk_21C5E8BC8);
}

uint64_t sub_21C59C828(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for _MapScaleView(255);
    result = MEMORY[0x22077F9A0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_21C59C868(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;

  if (*a1 != *a2)
    return 0;
  if ((sub_21C5E2E54() & 1) == 0)
    return 0;
  v2 = sub_21C5E2FF8();
  if (v2 != sub_21C5E2FF8())
    return 0;
  type metadata accessor for MapScaleViewConfig(0);
  return sub_21C5E2E6C();
}

uint64_t sub_21C59C8F8@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  unsigned int *v3;
  int OffsetAttribute2;

  sub_21C52BB38(v3);
  if (*(_QWORD *)(*(_QWORD *)(a2 - 8) + 64))
    a1(1);
  OffsetAttribute2 = AGGraphCreateOffsetAttribute2();
  return sub_21C52BAE0(OffsetAttribute2, a3);
}

uint64_t LookAroundPreview.init(initialScene:allowsNavigation:showsRoadLabels:pointsOfInterest:badgePosition:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t result;

  v11 = *a4;
  v12 = a4[1];
  v13 = (uint64_t *)(a6 + *(int *)(type metadata accessor for LookAroundPreview() + 36));
  *v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288158);
  result = swift_storeEnumTagMultiPayload();
  *(_QWORD *)(a6 + 8) = 0;
  *(_QWORD *)(a6 + 16) = 0;
  *(_QWORD *)a6 = a1;
  *(_BYTE *)(a6 + 24) = a2;
  *(_BYTE *)(a6 + 25) = a3;
  *(_QWORD *)(a6 + 32) = v11;
  *(_QWORD *)(a6 + 40) = v12;
  *(_QWORD *)(a6 + 48) = a5;
  return result;
}

uint64_t type metadata accessor for LookAroundPreview()
{
  uint64_t result;

  result = qword_255289968;
  if (!qword_255289968)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LookAroundPreview.init(scene:allowsNavigation:showsRoadLabels:pointsOfInterest:badgePosition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t result;

  v15 = *a6;
  v16 = a6[1];
  v17 = (uint64_t *)(a8 + *(int *)(type metadata accessor for LookAroundPreview() + 36));
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288158);
  result = swift_storeEnumTagMultiPayload();
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2 | 0x8000000000000000;
  *(_QWORD *)(a8 + 16) = a3;
  *(_BYTE *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 25) = a5;
  *(_QWORD *)(a8 + 32) = v15;
  *(_QWORD *)(a8 + 40) = v16;
  *(_QWORD *)(a8 + 48) = a7;
  return result;
}

uint64_t LookAroundPreview.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char v14;
  void (*v15)(char *, uint64_t);
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v20;

  v2 = v1;
  v4 = sub_21C5E3130();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = *(void **)v1;
  v12 = *(_QWORD *)(v1 + 8);
  v13 = *(void **)(v1 + 16);
  type metadata accessor for LookAroundPreview();
  sub_21C59CDBC(v11, v12, v13);
  sub_21C530810((uint64_t)v10);
  sub_21C5E3118();
  v14 = sub_21C5E3124();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  v16 = *(_BYTE *)(v2 + 24);
  v17 = *(_BYTE *)(v2 + 25);
  v18 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)a1 = v11;
  *(_QWORD *)(a1 + 8) = v12;
  *(_QWORD *)(a1 + 16) = v13;
  *(_BYTE *)(a1 + 24) = v14 & 1;
  *(_BYTE *)(a1 + 25) = v16;
  *(_BYTE *)(a1 + 26) = v17;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v2 + 40);
  *(_QWORD *)(a1 + 32) = v18;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21C59CC3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  char v15;
  void (*v16)(char *, uint64_t);
  char v17;
  char v18;
  uint64_t v19;
  _QWORD v21[2];

  v21[1] = a1;
  v3 = v2;
  v5 = sub_21C5E3130();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v21 - v10;
  v12 = *(void **)v2;
  v13 = *(_QWORD *)(v2 + 8);
  v14 = *(void **)(v2 + 16);
  sub_21C59CDBC(*(void **)v2, v13, v14);
  sub_21C530810((uint64_t)v11);
  sub_21C5E3118();
  v15 = sub_21C5E3124();
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v9, v5);
  v16(v11, v5);
  v17 = *(_BYTE *)(v3 + 24);
  v18 = *(_BYTE *)(v3 + 25);
  v19 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v14;
  *(_BYTE *)(a2 + 24) = v15 & 1;
  *(_BYTE *)(a2 + 25) = v17;
  *(_BYTE *)(a2 + 26) = v18;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v3 + 40);
  *(_QWORD *)(a2 + 32) = v19;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_21C59CD7C()
{
  return sub_21C5E3238();
}

uint64_t sub_21C59CD9C()
{
  return sub_21C5E3238();
}

id sub_21C59CDBC(void *a1, uint64_t a2, void *a3)
{
  id v4;

  if ((a2 & 0x8000000000000000) == 0)
    return a1;
  v4 = a3;
  swift_retain();
  return (id)swift_retain();
}

uint64_t sub_21C59CDFC()
{
  return swift_getOpaqueTypeConformance2();
}

char *initializeBufferWithCopyOfBuffer for LookAroundPreview(char *a1, void **a2, uint64_t a3)
{
  int v5;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = (char *)*a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v15[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = (char *)*a2;
    v8 = (uint64_t)a2[1];
    v9 = (char *)a2[2];
    sub_21C59CDBC(*a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *((_QWORD *)a1 + 1) = v8;
    *((_QWORD *)a1 + 2) = v9;
    *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
    v10 = (char *)a2[5];
    *((_QWORD *)a1 + 4) = a2[4];
    *((_QWORD *)a1 + 5) = v10;
    v11 = *(int *)(a3 + 36);
    v12 = &a1[v11];
    v13 = (void **)((char *)a2 + v11);
    *((_QWORD *)a1 + 6) = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288158);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_21C5E3130();
      (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *(_QWORD *)v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for LookAroundPreview(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_21C59CFBC(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288158);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_21C5E3130();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

void sub_21C59CFBC(void *a1, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    swift_release();
    swift_release();
    a1 = a3;
  }

}

uint64_t initializeWithCopy for LookAroundPreview(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(void **)(a2 + 16);
  sub_21C59CDBC(*(void **)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(int *)(a3 + 36);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_255288158);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_21C5E3130();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for LookAroundPreview(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(void **)(a2 + 16);
  sub_21C59CDBC(*(void **)a2, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  sub_21C59CFBC(v9, v10, v11);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 36);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_21C59D224(a1 + v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255288158);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_21C5E3130();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_21C59D224(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288158);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for LookAroundPreview(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(int *)(a3 + 36);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288158);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_21C5E3130();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for LookAroundPreview(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v6;
  sub_21C59CFBC(v7, v8, v9);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 36);
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_21C59D224(a1 + v10);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_255288158);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_21C5E3130();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LookAroundPreview()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C59D444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289960);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for LookAroundPreview()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_21C59D4DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 32) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289960);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

void sub_21C59D554()
{
  unint64_t v0;

  sub_21C59D5EC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_21C59D5EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255289978)
  {
    sub_21C5E3130();
    v0 = sub_21C5E2E84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255289978);
  }
}

unint64_t sub_21C59D644()
{
  unint64_t result;

  result = qword_255289A10;
  if (!qword_255289A10)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E8F2C, &type metadata for _LookAroundPreview);
    atomic_store(result, (unint64_t *)&qword_255289A10);
  }
  return result;
}

void static MapFeature.FeatureKind.pointOfInterest.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void static MapFeature.FeatureKind.territory.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static MapFeature.FeatureKind.physicalFeature.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

id MapFeature.coordinate.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_coordinate);
}

uint64_t MapFeature.title.getter()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_title);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_21C5E3964();

  return v3;
}

id MapFeature.kind.getter@<X0>(_QWORD *a1@<X8>)
{
  id *v1;
  id result;

  result = objc_msgSend(*v1, sel_featureType);
  if ((unint64_t)result >= 3)
  {
    result = (id)sub_21C5E3D48();
    __break(1u);
  }
  else
  {
    *a1 = result;
  }
  return result;
}

id MapFeature.backgroundColor.getter()
{
  return sub_21C59D7D0((SEL *)&selRef_backgroundColor, MEMORY[0x24BDF3EB0]);
}

id MapFeature.image.getter()
{
  return sub_21C59D7D0((SEL *)&selRef_image, MEMORY[0x24BDF3F58]);
}

id sub_21C59D7D0(SEL *a1, uint64_t (*a2)(id))
{
  id *v2;
  id result;
  void *v6;
  id v7;

  result = objc_msgSend(*v2, sel_iconStyle);
  if (result)
  {
    v6 = result;
    v7 = objc_msgSend(result, *a1);

    if (v7)
      return (id)a2(v7);
    else
      return 0;
  }
  return result;
}

id MapFeature.pointOfInterestCategory.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_pointOfInterestCategory);
}

id static MapFeature.== infix(_:_:)(id *a1, _QWORD *a2)
{
  return objc_msgSend(*a1, sel_isEqual_, *a2);
}

id sub_21C59D88C(id *a1, _QWORD *a2)
{
  return objc_msgSend(*a1, sel_isEqual_, *a2);
}

uint64_t MapFeature.hash(into:)()
{
  return sub_21C5E3BA4();
}

uint64_t MapFeature.hashValue.getter()
{
  sub_21C5E3E14();
  sub_21C5E3BA4();
  return sub_21C5E3E44();
}

uint64_t sub_21C59D910()
{
  sub_21C5E3E14();
  sub_21C5E3BA4();
  return sub_21C5E3E44();
}

uint64_t sub_21C59D950()
{
  return sub_21C5E3BA4();
}

uint64_t sub_21C59D970()
{
  sub_21C5E3E14();
  sub_21C5E3BA4();
  return sub_21C5E3E44();
}

uint64_t MapFeature.FeatureKind.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  if (!*v0)
    return 0x49664F746E696F70;
  if (v1 == 2)
    return 0x6C61636973796870;
  if (v1 == 1)
    return 0x726F746972726574;
  result = sub_21C5E3D48();
  __break(1u);
  return result;
}

BOOL static MapFeature.FeatureKind.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_21C59DAA0()
{
  uint64_t v1;

  sub_21C59DE20();
  sub_21C5E3298();
  return v1;
}

uint64_t View.mapFeatureSelectionContent<A>(content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;

  swift_getKeyPath();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a6;
  v12[6] = a1;
  v12[7] = a2;
  swift_retain();
  sub_21C5E3664();
  swift_release();
  return swift_release();
}

double sub_21C59DBAC@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_21C59DE20();
  sub_21C5E3298();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_21C59DBF8(uint64_t *a1)
{
  sub_21C531AAC(*a1);
  sub_21C59DE20();
  return sub_21C5E32A4();
}

double sub_21C59DC48@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_21C59DE20();
  sub_21C5E3298();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_21C59DC98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C59DCBC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t *);
  uint64_t v7;

  v3 = v2[3];
  v4 = v2[5];
  v5 = (uint64_t (*)(uint64_t *))v2[6];
  v7 = *a1;
  a2[3] = v3;
  a2[4] = v4;
  __swift_allocate_boxed_opaque_existential_0(a2);
  return v5(&v7);
}

unint64_t sub_21C59DD0C()
{
  unint64_t result;

  result = qword_255289980;
  if (!qword_255289980)
  {
    result = MEMORY[0x22077F9A0](&protocol conformance descriptor for MapFeature, &type metadata for MapFeature);
    atomic_store(result, (unint64_t *)&qword_255289980);
  }
  return result;
}

ValueMetadata *type metadata accessor for MapFeature()
{
  return &type metadata for MapFeature;
}

ValueMetadata *type metadata accessor for MapFeature.FeatureKind()
{
  return &type metadata for MapFeature.FeatureKind;
}

uint64_t sub_21C59DD70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289988);
  v2 = sub_21C5E30A0();
  v4[0] = v1;
  v4[1] = sub_21C59DDD4();
  return MEMORY[0x22077F9A0](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_21C59DDD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255289990;
  if (!qword_255289990)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289988);
    result = MEMORY[0x22077F9A0](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_255289990);
  }
  return result;
}

unint64_t sub_21C59DE20()
{
  unint64_t result;

  result = qword_255289998;
  if (!qword_255289998)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E8E48, &type metadata for DefaultMapFeatureSelectionContentKey);
    atomic_store(result, (unint64_t *)&qword_255289998);
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultMapFeatureSelectionContentKey()
{
  return &type metadata for DefaultMapFeatureSelectionContentKey;
}

uint64_t sub_21C59DE74(uint64_t result)
{
  uint64_t v1;
  void *v2;
  id v3;

  if ((*(_QWORD *)(v1 + OBJC_IVAR____TtCV15_MapKit_SwiftUI18_LookAroundPreview11Coordinator_sceneStorage + 8) & 0x8000000000000000) != 0)
  {
    v2 = (void *)result;
    v3 = *(id *)(v1 + OBJC_IVAR____TtCV15_MapKit_SwiftUI18_LookAroundPreview11Coordinator_sceneStorage + 16);
    swift_retain();
    swift_retain();
    objc_msgSend(v2, sel_scene);
    __swift_instantiateConcreteTypeFromMangledName(&qword_255289A20);
    sub_21C5E37CC();

    swift_release();
    return swift_release();
  }
  return result;
}

id sub_21C59DFB8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _LookAroundPreview.Coordinator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for _LookAroundPreview.Coordinator()
{
  return objc_opt_self();
}

void destroy for _LookAroundPreview.SceneStorage(uint64_t a1)
{
  sub_21C59CFBC(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16));
}

_QWORD *_s15_MapKit_SwiftUI18_LookAroundPreviewV12SceneStorageOwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  sub_21C59CDBC(*(void **)a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t assignWithCopy for _LookAroundPreview.SceneStorage(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  sub_21C59CDBC(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  sub_21C59CFBC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for _LookAroundPreview.SceneStorage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  sub_21C59CFBC(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for _LookAroundPreview.SceneStorage(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)(a1 + 8) >> 57) >> 6) | (2
                                                          * ((*(_QWORD *)(a1 + 8) >> 57) & 0x38 | *(_QWORD *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for _LookAroundPreview.SceneStorage(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 16) = 0;
    }
  }
  return result;
}

uint64_t sub_21C59E1C4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for _LookAroundPreview.SceneStorage()
{
  return &type metadata for _LookAroundPreview.SceneStorage;
}

uint64_t destroy for _LookAroundPreview(uint64_t a1)
{
  sub_21C59CFBC(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for _LookAroundPreview(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  sub_21C59CDBC(*(void **)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for _LookAroundPreview(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)(a2 + 16);
  sub_21C59CDBC(*(void **)a2, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  sub_21C59CFBC(v7, v8, v9);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for _LookAroundPreview(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  sub_21C59CFBC(v5, v6, v7);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for _LookAroundPreview(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for _LookAroundPreview(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for _LookAroundPreview()
{
  return &type metadata for _LookAroundPreview;
}

void sub_21C59E494(void *a1, uint64_t a2)
{
  char **v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  char *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;

  v4 = *v2;
  v5 = *((unsigned __int8 *)v2 + 24);
  v6 = *((unsigned __int8 *)v2 + 25);
  v7 = *((unsigned __int8 *)v2 + 26);
  v9 = v2[4];
  v8 = v2[5];
  v22 = v2[6];
  v23 = v2[2];
  v24 = (uint64_t)v2[1];
  if (v24 < 0)
  {
    v21 = a2;
    v25 = *v2;
    v11 = v2[2];
    swift_retain();
    swift_retain();
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289A20);
    MEMORY[0x22077ECE0](&v26, v12);

    swift_release();
    swift_release();
    v10 = v26;
  }
  else
  {
    v10 = v4;
  }
  objc_msgSend(a1, sel_setScene_, v10, v21);

  objc_msgSend(a1, sel__setFullScreenCover_, v5);
  objc_msgSend(a1, sel_setNavigationEnabled_, v6);
  objc_msgSend(a1, sel_setShowsRoadLabels_, v7);
  if (v9)
  {
    v13 = objc_allocWithZone(MEMORY[0x24BDDB170]);
    type metadata accessor for MKPointOfInterestCategory(0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v14 = (void *)sub_21C5E39D0();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v13, sel_initIncludingCategories_, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!v8)
    {
      v15 = 0;
      goto LABEL_9;
    }
    v16 = objc_allocWithZone(MEMORY[0x24BDDB170]);
    type metadata accessor for MKPointOfInterestCategory(0);
    swift_bridgeObjectRetain_n();
    v14 = (void *)sub_21C5E39D0();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v16, sel_initExcludingCategories_, v14);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

LABEL_9:
  objc_msgSend(a1, sel_setPointOfInterestFilter_, v15);

  objc_msgSend(a1, sel_setBadgePosition_, v22);
  __swift_instantiateConcreteTypeFromMangledName(qword_255289A28);
  sub_21C5E35C8();
  v17 = &v25[OBJC_IVAR____TtCV15_MapKit_SwiftUI18_LookAroundPreview11Coordinator_sceneStorage];
  v18 = *(void **)&v25[OBJC_IVAR____TtCV15_MapKit_SwiftUI18_LookAroundPreview11Coordinator_sceneStorage];
  v19 = *(_QWORD *)&v25[OBJC_IVAR____TtCV15_MapKit_SwiftUI18_LookAroundPreview11Coordinator_sceneStorage + 8];
  v20 = *(void **)&v25[OBJC_IVAR____TtCV15_MapKit_SwiftUI18_LookAroundPreview11Coordinator_sceneStorage + 16];
  *(_QWORD *)v17 = v4;
  *((_QWORD *)v17 + 1) = v24;
  *((_QWORD *)v17 + 2) = v23;
  sub_21C59CDBC(v4, v24, v23);
  sub_21C59CFBC(v18, v19, v20);

}

id sub_21C59E730(uint64_t a1)
{
  id v2;
  void *v4;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB0C8]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(qword_255289A28);
  sub_21C5E35C8();
  objc_msgSend(v2, sel_setDelegate_, v4);

  sub_21C59E494(v2, a1);
  return v2;
}

id sub_21C59E820@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  objc_class *v6;
  char *v7;
  char *v8;
  id result;
  objc_super v10;

  v3 = *(void **)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(void **)(v1 + 16);
  v6 = (objc_class *)type metadata accessor for _LookAroundPreview.Coordinator();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = &v7[OBJC_IVAR____TtCV15_MapKit_SwiftUI18_LookAroundPreview11Coordinator_sceneStorage];
  *(_QWORD *)v8 = v3;
  *((_QWORD *)v8 + 1) = v4;
  *((_QWORD *)v8 + 2) = v5;
  sub_21C59CDBC(v3, v4, v5);
  v10.receiver = v7;
  v10.super_class = v6;
  result = objc_msgSendSuper2(&v10, sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_21C59E8A8()
{
  return sub_21C5E3580();
}

uint64_t sub_21C59E8E0()
{
  sub_21C59E9A4();
  return sub_21C5E35BC();
}

uint64_t sub_21C59E930()
{
  sub_21C59E9A4();
  return sub_21C5E358C();
}

void sub_21C59E980()
{
  sub_21C59E9A4();
  sub_21C5E35B0();
  __break(1u);
}

unint64_t sub_21C59E9A4()
{
  unint64_t result;

  result = qword_255289A18;
  if (!qword_255289A18)
  {
    result = MEMORY[0x22077F9A0](&unk_21C5E8EB4, &type metadata for _LookAroundPreview);
    atomic_store(result, (unint64_t *)&qword_255289A18);
  }
  return result;
}

uint64_t MapReader.init(content:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t MapReader.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *v2;
  v5 = v2[1];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289858);
  v8 = (_QWORD *)swift_allocObject();
  v9 = *(_QWORD *)(a1 + 24);
  v8[2] = *(_QWORD *)(a1 + 16);
  v8[3] = v9;
  v8[4] = v6;
  v8[5] = v5;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_255289878);
  sub_21C59EE40((unint64_t *)&unk_255289880, &qword_255289878);
  v10 = sub_21C5E3424();
  v11 = sub_21C59EE40(&qword_255289868, &qword_255289858);
  v12 = MEMORY[0x24BDEFF58];
  v13 = MEMORY[0x22077F9A0](MEMORY[0x24BDEFF58], v10);
  sub_21C5E2FBC();
  swift_release();
  v16[0] = v21;
  v16[1] = v22;
  v17 = v7;
  v18 = v10;
  v19 = v11;
  v20 = v13;
  v14 = sub_21C5E3424();
  MEMORY[0x22077F9A0](v12, v14);
  sub_21C5976B4((uint64_t)v16, v14, (uint64_t)&v17);
  swift_release();
  v21 = v17;
  v22 = v18;
  sub_21C56F04C((uint64_t)&v21, v14, a2);
  return swift_release();
}

uint64_t sub_21C59EB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  _QWORD v16[2];

  v16[0] = a2;
  v16[1] = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289BC8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_255289878);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = a4;
  *((_QWORD *)v14 + 3) = a5;
  *((_QWORD *)v14 + 4) = v16[0];
  *((_QWORD *)v14 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v14[v13], (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  sub_21C59EE40((unint64_t *)&unk_255289880, &qword_255289878);
  swift_retain();
  sub_21C5E2FBC();
  return swift_release();
}

uint64_t sub_21C59ECC4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_21C59ECE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_21C59EB80(a1, v2[4], v2[5], v2[2], v2[3], a2);
}

uint64_t sub_21C59ECF4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t (*v19)(_QWORD *);
  _QWORD v20[2];

  v18[2] = a3;
  v19 = a2;
  v18[1] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_255289BD0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (_QWORD *)((char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_255289BC8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (_QWORD *)((char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v11);
  if (v13 == 8)
  {
    v16 = *v14;
    (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
    if (v9 == 8)
    {
      v17 = *v10;
      (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
      v20[0] = v16;
      v20[1] = v17;
      return v19(v20);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

