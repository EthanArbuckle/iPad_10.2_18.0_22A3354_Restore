void sub_1A600AA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_13_1();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  a10 = v20;
  v27 = v26;
  v29 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_54_0();
  v31 = sub_1A6121F58();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&a9 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&a9 - v36;
  v38 = v25(0);
  sub_1A5FB14A8(v29 + *(int *)(v38 + 20), v21, &qword_1ED1929C8);
  OUTLINED_FUNCTION_163((uint64_t)v35, v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16));
  if (__swift_getEnumTagSinglePayload(v21, 1, v31) == 1)
  {
    v39 = OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_163(v39, v40, v41);
    sub_1A5FAFD58(v21, &qword_1ED1929C8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
    OUTLINED_FUNCTION_163((uint64_t)v37, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 32));
  }
  sub_1A5FE88F8();
  sub_1A61237AC();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v31);
  OUTLINED_FUNCTION_20();
}

void sub_1A600AB80(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD);
  uint64_t v30;
  char v31;
  _BYTE *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  void (*v46)(_BYTE *, uint64_t);
  uint64_t v47;
  char *v48;
  _BYTE v49[12];
  unsigned int v50;
  void (*v51)(uint64_t, _QWORD, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_BYTE *, uint64_t, uint64_t);
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  _BYTE *v61;
  void (*v62)(_BYTE *, uint64_t);
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v62 = a3;
  v4 = sub_1A6121D9C();
  v65 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v61 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v49[-v7];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  MEMORY[0x1E0C80A78](v9);
  v63 = &v49[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v49[-v12];
  v14 = sub_1A6121F58();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v64 = &v49[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v17);
  v19 = &v49[-v18];
  v20 = sub_1A6122060();
  v66 = *(_QWORD *)(v20 - 8);
  v67 = v20;
  MEMORY[0x1E0C80A78](v20);
  sub_1A6121FF4();
  v68 = a1;
  sub_1A5FB14A8(a1, (uint64_t)v13, &qword_1ED1929C8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14) == 1)
  {
    sub_1A5FAFD58((uint64_t)v13, &qword_1ED1929C8);
    v65 = 0;
  }
  else
  {
    v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 32);
    v60 = v14;
    v57 = v21;
    v58 = v15;
    v21(v19, (uint64_t)v13, v14);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191810);
    v23 = sub_1A6122048();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(_QWORD *)(v24 + 72);
    v26 = *(unsigned __int8 *)(v24 + 80);
    v27 = (v26 + 32) & ~v26;
    v55 = v22;
    v52 = v26 | 7;
    v53 = v27 + v25;
    v28 = swift_allocObject();
    v59 = xmmword_1A6124350;
    *(_OWORD *)(v28 + 16) = xmmword_1A6124350;
    v54 = v27;
    v29 = *(void (**)(_QWORD))(v24 + 104);
    v50 = *MEMORY[0x1E0CB1178];
    v56 = v23;
    v51 = (void (*)(uint64_t, _QWORD, uint64_t))v29;
    v29(v28 + v27);
    sub_1A60FB0F0(v28);
    sub_1A612200C();
    swift_bridgeObjectRelease();
    v30 = sub_1A6121D90();
    LOBYTE(v28) = v31;
    v62 = *(void (**)(_BYTE *, uint64_t))(v65 + 8);
    v62(v8, v4);
    v32 = v19;
    v65 = 0;
    if ((v28 & 1) != 0)
    {
      v33 = (uint64_t)v63;
    }
    else
    {
      v33 = (uint64_t)v63;
      if (v30 >= 1)
      {
        if (qword_1ED1925A0 != -1)
          swift_once();
        v34 = (id)qword_1ED19DB10;
        sub_1A6121DA8();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191E60);
        v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = v59;
        *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v35 + 64) = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v35 + 32) = v30;
        v65 = sub_1A61237D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    v36 = type metadata accessor for PrecipitationShift();
    v37 = v68;
    sub_1A5FB14A8(v68 + *(int *)(v36 + 20), v33, &qword_1ED1929C8);
    v38 = v60;
    if (__swift_getEnumTagSinglePayload(v33, 1, v60) == 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v19, v38);
      sub_1A5FAFD58(v33, &qword_1ED1929C8);
      goto LABEL_19;
    }
    v57(v64, v33, v38);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = v59;
    v51(v39 + v54, v50, v56);
    sub_1A60FB0F0(v39);
    v40 = v61;
    sub_1A612200C();
    swift_bridgeObjectRelease();
    v41 = sub_1A6121D90();
    LOBYTE(v39) = v42;
    v62(v40, v4);
    if ((v39 & 1) != 0)
    {
      v43 = v58;
    }
    else
    {
      v43 = v58;
      if (v41 >= 1)
      {
        if (qword_1ED1925A0 != -1)
          swift_once();
        v44 = (id)qword_1ED19DB10;
        sub_1A6121DA8();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191E60);
        v45 = swift_allocObject();
        *(_OWORD *)(v45 + 16) = v59;
        *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v45 + 64) = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v45 + 32) = v41;
        sub_1A61237D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    v46 = *(void (**)(_BYTE *, uint64_t))(v43 + 8);
    v47 = v60;
    v46(v64, v60);
    v46(v32, v47);
  }
  v37 = v68;
LABEL_19:
  v48 = (char *)&loc_1A600B1C8
      + 4 * word_1A6129E4A[*(unsigned __int8 *)(v37 + *(int *)(type metadata accessor for PrecipitationShift() + 24))];
  __asm { BR              X10 }
}

void MinuteForecastStringBuilder.buildShortString(from:referenceDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9[3];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192148);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_14_15();
  v3 = type metadata accessor for MinuteCondition();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_54_0();
  if ((OUTLINED_FUNCTION_18_9() & 1) != 0)
  {
    Forecast<>.conditions.getter();
    MEMORY[0x1E0C80A78](v5);
    OUTLINED_FUNCTION_36_6();
    sub_1A60096EC();
    v9[0] = v6;
    swift_bridgeObjectRetain();
    sub_1A60101A4(v9, (uint64_t (*)(_QWORD))type metadata accessor for MinuteCondition, (uint64_t (*)(uint64_t))sub_1A601121C);
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_20_8((uint64_t (*)(_QWORD))type metadata accessor for MinuteCondition, v0);
    OUTLINED_FUNCTION_24_3();
    v7 = OUTLINED_FUNCTION_26_2(v0, 1, v3);
    if (v8)
    {
      OUTLINED_FUNCTION_32_4(v7, &qword_1ED192148);
    }
    else
    {
      sub_1A6010298(v0, v1, (uint64_t (*)(_QWORD))type metadata accessor for MinuteCondition);
      sub_1A600D094(v1 + *(int *)(v3 + 40));
      sub_1A5FA1740(v1, (uint64_t (*)(_QWORD))type metadata accessor for MinuteCondition);
    }
  }
  OUTLINED_FUNCTION_175();
}

void sub_1A600D094(uint64_t a1)
{
  char *v1;

  v1 = (char *)sub_1A600D0DC
     + 4 * word_1A6129F14[*(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for PrecipitationShift() + 24))];
  __asm { BR              X10 }
}

uint64_t sub_1A600D0DC()
{
  id v0;
  uint64_t v1;

  if (qword_1ED1925A0 != -1)
    swift_once();
  v0 = (id)qword_1ED19DB10;
  v1 = sub_1A6121DA8();

  return v1;
}

void MinuteForecastStringBuilder.buildIntensityString(from:referenceDate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12[3];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8139C0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_14_15();
  v6 = type metadata accessor for MinuteSummary();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_70();
  if ((OUTLINED_FUNCTION_18_9() & 1) == 0)
    goto LABEL_10;
  Forecast<>.summaries.getter();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_36_6();
  OUTLINED_FUNCTION_37_3();
  v12[0] = v9;
  swift_bridgeObjectRetain();
  sub_1A60101A4(v12, (uint64_t (*)(_QWORD))type metadata accessor for MinuteSummary, (uint64_t (*)(uint64_t))sub_1A6011230);
  if (!a2)
  {
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_20_8((uint64_t (*)(_QWORD))type metadata accessor for MinuteSummary, v3);
    OUTLINED_FUNCTION_24_3();
    v10 = OUTLINED_FUNCTION_26_2(v3, 1, v6);
    if (v11)
    {
      OUTLINED_FUNCTION_32_4(v10, &qword_1EE8139C0);
    }
    else
    {
      sub_1A6010298(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for MinuteSummary);
      if (*(_BYTE *)(v2 + *(int *)(v6 + 36) + 8) == 3)
      {
        sub_1A5FA1740(v2, (uint64_t (*)(_QWORD))type metadata accessor for MinuteSummary);
      }
      else
      {
        LOBYTE(v12[0]) = *(_BYTE *)(v2 + *(int *)(v6 + 36) + 8);
        static MinuteForecastStringBuilder.buildIntensityString(for:)(v12);
        sub_1A5FA1740(v2, (uint64_t (*)(_QWORD))type metadata accessor for MinuteSummary);
      }
    }
LABEL_10:
    OUTLINED_FUNCTION_34_3();
    OUTLINED_FUNCTION_175();
    return;
  }
  swift_release();
  __break(1u);
}

uint64_t static MinuteForecastStringBuilder.buildIntensityString(for:)(_BYTE *a1)
{
  id v1;
  uint64_t v2;

  if (!*a1)
  {
    if (qword_1ED1925A0 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (*a1 == 1)
  {
    if (qword_1ED1925A0 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (qword_1ED1925A0 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  v1 = (id)qword_1ED19DB10;
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_1();
  v2 = sub_1A6121DA8();

  return v2;
}

void sub_1A600DE3C(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD);
  uint64_t v30;
  char v31;
  _BYTE *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  void (*v46)(_BYTE *, uint64_t);
  uint64_t v47;
  char *v48;
  _BYTE v49[12];
  unsigned int v50;
  void (*v51)(uint64_t, _QWORD, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_BYTE *, uint64_t, uint64_t);
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  _BYTE *v61;
  void (*v62)(_BYTE *, uint64_t);
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v62 = a3;
  v4 = sub_1A6121D9C();
  v65 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v61 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v8 = &v49[-v7];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v63 = &v49[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v13 = &v49[-v12];
  v14 = sub_1A6121F58();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v64 = &v49[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v19 = &v49[-v18];
  v20 = sub_1A6122060();
  v66 = *(_QWORD *)(v20 - 8);
  v67 = v20;
  MEMORY[0x1E0C80A78](v20);
  sub_1A6121FF4();
  v68 = a1;
  sub_1A5FB14A8(a1, (uint64_t)v13, &qword_1ED1929C8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14) == 1)
  {
    sub_1A5FAFD58((uint64_t)v13, &qword_1ED1929C8);
    v65 = 0;
  }
  else
  {
    v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 32);
    v60 = v14;
    v57 = v21;
    v58 = v15;
    v21(v19, (uint64_t)v13, v14);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191810);
    v23 = sub_1A6122048();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(_QWORD *)(v24 + 72);
    v26 = *(unsigned __int8 *)(v24 + 80);
    v27 = (v26 + 32) & ~v26;
    v55 = v22;
    v52 = v26 | 7;
    v53 = v27 + v25;
    v28 = swift_allocObject();
    v59 = xmmword_1A6124350;
    *(_OWORD *)(v28 + 16) = xmmword_1A6124350;
    v54 = v27;
    v29 = *(void (**)(_QWORD))(v24 + 104);
    v50 = *MEMORY[0x1E0CB1178];
    v56 = v23;
    v51 = (void (*)(uint64_t, _QWORD, uint64_t))v29;
    v29(v28 + v27);
    sub_1A60FB0F0(v28);
    sub_1A612200C();
    swift_bridgeObjectRelease();
    v30 = sub_1A6121D90();
    LOBYTE(v28) = v31;
    v62 = *(void (**)(_BYTE *, uint64_t))(v65 + 8);
    v62(v8, v4);
    v32 = v19;
    v65 = 0;
    if ((v28 & 1) != 0)
    {
      v33 = (uint64_t)v63;
    }
    else
    {
      v33 = (uint64_t)v63;
      if (v30 >= 1)
      {
        if (qword_1ED1925A0 != -1)
          swift_once();
        v34 = (id)qword_1ED19DB10;
        sub_1A6121DA8();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191E60);
        v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = v59;
        *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v35 + 64) = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v35 + 32) = v30;
        v65 = sub_1A61237D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    v36 = type metadata accessor for PrecipitationShift();
    v37 = v68;
    sub_1A5FB14A8(v68 + *(int *)(v36 + 20), v33, &qword_1ED1929C8);
    v38 = v60;
    if (__swift_getEnumTagSinglePayload(v33, 1, v60) == 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v19, v38);
      sub_1A5FAFD58(v33, &qword_1ED1929C8);
      goto LABEL_19;
    }
    v57(v64, v33, v38);
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = v59;
    v51(v39 + v54, v50, v56);
    sub_1A60FB0F0(v39);
    v40 = v61;
    sub_1A612200C();
    swift_bridgeObjectRelease();
    v41 = sub_1A6121D90();
    LOBYTE(v39) = v42;
    v62(v40, v4);
    if ((v39 & 1) != 0)
    {
      v43 = v58;
    }
    else
    {
      v43 = v58;
      if (v41 >= 1)
      {
        if (qword_1ED1925A0 != -1)
          swift_once();
        v44 = (id)qword_1ED19DB10;
        sub_1A6121DA8();

        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191E60);
        v45 = swift_allocObject();
        *(_OWORD *)(v45 + 16) = v59;
        *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v45 + 64) = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v45 + 32) = v41;
        sub_1A61237D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    v46 = *(void (**)(_BYTE *, uint64_t))(v43 + 8);
    v47 = v60;
    v46(v64, v60);
    v46(v32, v47);
  }
  v37 = v68;
LABEL_19:
  v48 = (char *)&loc_1A600E484
      + 4 * word_1A6129FDE[*(unsigned __int8 *)(v37 + *(int *)(type metadata accessor for PrecipitationShift() + 24))];
  __asm { BR              X10 }
}

uint64_t MinuteForecastStringBuilder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MinuteForecastStringBuilder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A601015C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1A60101A4(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t))
{
  uint64_t v5;

  a2(0);
  v5 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = a3(v5);
  sub_1A6010300();
  *a1 = v5;
}

#error "1A6010264: call analysis failed (funcsize=8)"

#error "1A6010288: call analysis failed (funcsize=8)"

void sub_1A6010298(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_34(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  OUTLINED_FUNCTION_51();
}

uint64_t type metadata accessor for MinuteForecastStringBuilder()
{
  return objc_opt_self();
}

uint64_t method lookup function for MinuteForecastStringBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MinuteForecastStringBuilder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

void sub_1A6010300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(_QWORD);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  char v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  int64_t *v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(_QWORD);

  OUTLINED_FUNCTION_13_1();
  v137 = v1;
  v3 = v2;
  v5 = v4;
  v6 = v0;
  v8 = (int64_t)v7;
  v9 = v4(0);
  v138 = *(_QWORD *)(v9 - 8);
  v139 = v9;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_151();
  v134 = v11;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v12);
  v146 = (uint64_t)&v127 - v13;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v14);
  v143 = (uint64_t)&v127 - v15;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v16);
  v142 = (uint64_t)&v127 - v17;
  v18 = *(_QWORD *)(v8 + 8);
  v19 = sub_1A6123CE0();
  if (v19 >= v18)
  {
    if (v18 < 0)
      goto LABEL_139;
    if (v18)
      sub_1A6010BBC();
LABEL_117:
    OUTLINED_FUNCTION_20();
    return;
  }
  v20 = v19;
  v130 = v3(v18 / 2);
  v131 = v18;
  v136 = v21;
  if (v18 <= 0)
    goto LABEL_103;
  v129 = v20;
  v22 = 0;
  v23 = (char *)MEMORY[0x1E0DEE9D8];
  v24 = v18;
  v148 = v5;
  v144 = (_QWORD *)v8;
  while (1)
  {
    v25 = v22 + 1;
    v135 = v22;
    v133 = v24;
    if (v22 + 1 >= v24)
    {
      v33 = v22;
      v40 = v22 + 1;
    }
    else
    {
      v26 = v24;
      v27 = *(_QWORD *)v8;
      v28 = *(_QWORD *)(v138 + 72);
      v147 = v28;
      v29 = v142;
      OUTLINED_FUNCTION_17_9(v27 + v28 * v25, v142);
      v30 = v27 + v28 * v135;
      v31 = v143;
      OUTLINED_FUNCTION_17_9(v30, v143);
      LODWORD(v141) = sub_1A6121F04();
      sub_1A5FA1740(v31, v5);
      v32 = v29;
      v33 = v135;
      sub_1A5FA1740(v32, v5);
      v140 = v27;
      v145 = v33 + 2;
      if (v33 + 2 < v26)
      {
        v132 = v23;
        v34 = v147 * v25;
        v35 = v27;
        v36 = v147 * (v33 + 2);
        while (1)
        {
          v37 = v142;
          OUTLINED_FUNCTION_17_9(v35 + v36, v142);
          v38 = v143;
          OUTLINED_FUNCTION_17_9(v35 + v34, v143);
          v39 = sub_1A6121F04();
          OUTLINED_FUNCTION_16_5(v38);
          OUTLINED_FUNCTION_16_5(v37);
          if (((v141 ^ v39) & 1) != 0)
            break;
          v35 += v147;
          ++v145;
          v5 = v148;
          if (v145 >= v26)
          {
            v145 = v26;
            goto LABEL_12;
          }
        }
        v5 = v148;
LABEL_12:
        v23 = v132;
        v8 = (int64_t)v144;
        v33 = v135;
      }
      if ((v141 & 1) != 0)
      {
        v40 = v145;
        if (v145 < v33)
          goto LABEL_140;
        if (v33 < v145)
        {
          v132 = v23;
          v41 = v6;
          v42 = 0;
          v43 = v147;
          v44 = v147 * (v145 - 1);
          v45 = v145 * v147;
          v46 = v33 * v147;
          do
          {
            if (v33 != v40 + v42 - 1)
            {
              v47 = v140;
              if (!v140)
                goto LABEL_146;
              v5 = (uint64_t (*)(_QWORD))(v140 + v46);
              sub_1A6010298(v140 + v46, v134, v148);
              if (v46 < v44 || (unint64_t)v5 >= v47 + v45)
              {
                OUTLINED_FUNCTION_47_3();
              }
              else if (v46 != v44)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              OUTLINED_FUNCTION_44_3(v134, v47 + v44);
              v40 = v145;
              v43 = v147;
            }
            ++v33;
            --v42;
            v44 -= v43;
            v45 -= v43;
            v46 += v43;
          }
          while (v33 < v40 + v42);
          v6 = v41;
          v23 = v132;
          v8 = (int64_t)v144;
          v33 = v135;
        }
      }
      else
      {
        v40 = v145;
      }
    }
    if (v40 < v133)
    {
      if (__OFSUB__(v40, v33))
        goto LABEL_138;
      if (v40 - v33 < v129)
      {
        if (__OFADD__(v33, v129))
          goto LABEL_141;
        v49 = v133;
        if (v33 + v129 < v133)
          v49 = v33 + v129;
        if (v49 < v33)
        {
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (v40 != v49)
        {
          v132 = v23;
          v133 = v49;
          v128 = v6;
          v50 = *(_QWORD *)(v138 + 72);
          v51 = v50 * (v40 - 1);
          v140 = v50;
          v52 = v40 * v50;
          do
          {
            v53 = 0;
            v145 = v40;
            v141 = v52;
            while (1)
            {
              v147 = v33;
              v54 = *(_QWORD *)v8;
              v55 = v52 + v53 + *(_QWORD *)v8;
              v56 = v142;
              OUTLINED_FUNCTION_17_9(v55, v142);
              v57 = v51;
              v58 = v51 + v53 + v54;
              v59 = v5;
              v60 = v143;
              sub_1A5FA9220(v58, v143, v59);
              LOBYTE(v54) = OUTLINED_FUNCTION_38_6();
              v61 = v60;
              v5 = v59;
              sub_1A5FA1740(v61, v59);
              sub_1A5FA1740(v56, v59);
              if ((v54 & 1) == 0)
                break;
              v62 = *(_QWORD *)v8;
              if (!*(_QWORD *)v8)
                goto LABEL_144;
              v52 = v141;
              v5 = (uint64_t (*)(_QWORD))(v62 + v141 + v53);
              v51 = v57;
              v63 = v62 + v57 + v53;
              sub_1A6010298((uint64_t)v5, v146, v148);
              OUTLINED_FUNCTION_47_3();
              OUTLINED_FUNCTION_44_3(v146, v63);
              v53 -= v140;
              v33 = v147 + 1;
              v8 = (int64_t)v144;
              v64 = v145;
              if (v145 == v147 + 1)
                goto LABEL_46;
            }
            v64 = v145;
            v51 = v57;
            v52 = v141;
LABEL_46:
            v40 = v64 + 1;
            v51 += v140;
            v52 += v140;
            v33 = v135;
          }
          while (v40 != v133);
          v40 = v133;
          v6 = v128;
          v23 = v132;
        }
      }
    }
    if (v40 < v33)
      goto LABEL_137;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v145 = v40;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v23 = OUTLINED_FUNCTION_40_4(0, *((_QWORD *)v23 + 2) + 1);
    v67 = *((_QWORD *)v23 + 2);
    v66 = *((_QWORD *)v23 + 3);
    v68 = v67 + 1;
    if (v67 >= v66 >> 1)
      v23 = OUTLINED_FUNCTION_40_4((char *)(v66 > 1), v67 + 1);
    *((_QWORD *)v23 + 2) = v68;
    v69 = v23 + 32;
    v70 = &v23[16 * v67 + 32];
    v71 = v145;
    *(_QWORD *)v70 = v33;
    *((_QWORD *)v70 + 1) = v71;
    if (v67)
      break;
    v68 = 1;
LABEL_96:
    v24 = *(_QWORD *)(v8 + 8);
    v22 = v145;
    if (v145 >= v24)
      goto LABEL_104;
  }
  while (1)
  {
    v72 = v68 - 1;
    if (v68 >= 4)
    {
      v77 = &v69[16 * v68];
      v78 = *((_QWORD *)v77 - 8);
      v79 = *((_QWORD *)v77 - 7);
      v83 = __OFSUB__(v79, v78);
      v80 = v79 - v78;
      if (v83)
        goto LABEL_122;
      v82 = *((_QWORD *)v77 - 6);
      v81 = *((_QWORD *)v77 - 5);
      v83 = __OFSUB__(v81, v82);
      v75 = v81 - v82;
      v76 = v83;
      if (v83)
        goto LABEL_123;
      v84 = v68 - 2;
      v85 = &v69[16 * v68 - 32];
      v87 = *(_QWORD *)v85;
      v86 = *((_QWORD *)v85 + 1);
      v83 = __OFSUB__(v86, v87);
      v88 = v86 - v87;
      if (v83)
        goto LABEL_124;
      v83 = __OFADD__(v75, v88);
      v89 = v75 + v88;
      if (v83)
        goto LABEL_126;
      if (v89 >= v80)
      {
        v107 = &v69[16 * v72];
        v109 = *(_QWORD *)v107;
        v108 = *((_QWORD *)v107 + 1);
        v83 = __OFSUB__(v108, v109);
        v110 = v108 - v109;
        if (v83)
          goto LABEL_132;
        v100 = v75 < v110;
        goto LABEL_85;
      }
    }
    else
    {
      if (v68 != 3)
      {
        v101 = *((_QWORD *)v23 + 4);
        v102 = *((_QWORD *)v23 + 5);
        v83 = __OFSUB__(v102, v101);
        v94 = v102 - v101;
        v95 = v83;
        goto LABEL_79;
      }
      v74 = *((_QWORD *)v23 + 4);
      v73 = *((_QWORD *)v23 + 5);
      v83 = __OFSUB__(v73, v74);
      v75 = v73 - v74;
      v76 = v83;
    }
    if ((v76 & 1) != 0)
      goto LABEL_125;
    v84 = v68 - 2;
    v90 = &v69[16 * v68 - 32];
    v92 = *(_QWORD *)v90;
    v91 = *((_QWORD *)v90 + 1);
    v93 = __OFSUB__(v91, v92);
    v94 = v91 - v92;
    v95 = v93;
    if (v93)
      goto LABEL_127;
    v96 = &v69[16 * v72];
    v98 = *(_QWORD *)v96;
    v97 = *((_QWORD *)v96 + 1);
    v83 = __OFSUB__(v97, v98);
    v99 = v97 - v98;
    if (v83)
      goto LABEL_129;
    if (__OFADD__(v94, v99))
      goto LABEL_131;
    if (v94 + v99 >= v75)
    {
      v100 = v75 < v99;
LABEL_85:
      if (v100)
        v72 = v84;
      goto LABEL_87;
    }
LABEL_79:
    if ((v95 & 1) != 0)
      goto LABEL_128;
    v103 = &v69[16 * v72];
    v105 = *(_QWORD *)v103;
    v104 = *((_QWORD *)v103 + 1);
    v83 = __OFSUB__(v104, v105);
    v106 = v104 - v105;
    if (v83)
      goto LABEL_130;
    if (v106 < v94)
      goto LABEL_96;
LABEL_87:
    v111 = v72 - 1;
    if (v72 - 1 >= v68)
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if (!*(_QWORD *)v8)
      goto LABEL_145;
    v112 = v23;
    v113 = (int64_t *)&v69[16 * v111];
    v8 = *v113;
    v114 = &v69[16 * v72];
    v115 = *((_QWORD *)v114 + 1);
    sub_1A6010DA0();
    if (v6)
      break;
    if (v115 < v8)
      goto LABEL_119;
    if (v72 > *((_QWORD *)v112 + 2))
      goto LABEL_120;
    *v113 = v8;
    *(_QWORD *)&v69[16 * v111 + 8] = v115;
    v116 = *((_QWORD *)v112 + 2);
    if (v72 >= v116)
      goto LABEL_121;
    v23 = v112;
    v68 = v116 - 1;
    memmove(&v69[16 * v72], v114 + 16, 16 * (v116 - 1 - v72));
    *((_QWORD *)v23 + 2) = v116 - 1;
    v5 = v148;
    v8 = (int64_t)v144;
    if (v116 <= 2)
      goto LABEL_96;
  }
LABEL_101:
  swift_bridgeObjectRelease();
  if (v131 >= -1)
    goto LABEL_116;
  __break(1u);
LABEL_103:
  v23 = (char *)MEMORY[0x1E0DEE9D8];
  v68 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_104:
  v117 = v23;
  if (v68 >= 2)
  {
    v118 = *(_QWORD *)v8;
    while (1)
    {
      v119 = v68 - 2;
      if (v68 < 2)
        break;
      if (!v118)
        goto LABEL_147;
      v8 = v68 - 1;
      v120 = v117;
      v121 = *(_QWORD *)&v117[16 * v119 + 32];
      v122 = *(_QWORD *)&v117[16 * v68 + 24];
      sub_1A6010DA0();
      if (v6)
        goto LABEL_101;
      if (v122 < v121)
        goto LABEL_134;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v120 = sub_1A6011208((uint64_t)v120);
      if (v119 >= *((_QWORD *)v120 + 2))
        goto LABEL_135;
      v123 = v120 + 32;
      v124 = &v120[16 * v119 + 32];
      *(_QWORD *)v124 = v121;
      *((_QWORD *)v124 + 1) = v122;
      v125 = v120;
      v126 = *((_QWORD *)v120 + 2);
      if (v68 > v126)
        goto LABEL_136;
      memmove(&v123[16 * v8], &v123[16 * v68], 16 * (v126 - v68));
      v117 = v125;
      *((_QWORD *)v125 + 2) = v126 - 1;
      v68 = v126 - 1;
      if (v126 <= 2)
        goto LABEL_115;
    }
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
LABEL_115:
  swift_bridgeObjectRelease();
  if (v131 >= -1)
  {
LABEL_116:
    *(_QWORD *)(v130 + 16) = 0;
    swift_bridgeObjectRelease();
    goto LABEL_117;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
}

void sub_1A6010BBC()
{
  uint64_t (*v0)(_QWORD);
  uint64_t (*v1)(_QWORD);
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_13_1();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v26 = v8;
  v27 = v0(0);
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_46_3();
  v31 = v9;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v10);
  v28 = &v24[-v11];
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v12);
  v15 = &v24[-v14];
  v30 = v5;
  v25 = v7;
  if (v5 != v7)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v33 = v16 * (v30 - 1);
    v29 = v16;
    v32 = v16 * v30;
    while (2)
    {
      v17 = 0;
      v18 = v26;
      do
      {
        v19 = *v3;
        sub_1A5FA9220(v32 + v17 + *v3, (uint64_t)v15, v1);
        v20 = v28;
        sub_1A5FA9220(v33 + v17 + v19, (uint64_t)v28, v1);
        LOBYTE(v19) = sub_1A6121F04();
        OUTLINED_FUNCTION_16_5((uint64_t)v20);
        OUTLINED_FUNCTION_16_5((uint64_t)v15);
        if ((v19 & 1) == 0)
          break;
        v21 = *v3;
        if (!*v3)
        {
          __break(1u);
          return;
        }
        v22 = v3;
        v23 = v21 + v33 + v17;
        sub_1A6010298(v21 + v32 + v17, v31, v1);
        OUTLINED_FUNCTION_34_3();
        swift_arrayInitWithTakeFrontToBack();
        sub_1A6010298(v31, v23, v1);
        v17 -= v29;
        ++v18;
        v3 = v22;
      }
      while (v30 != v18);
      v33 += v29;
      v32 += v29;
      if (++v30 != v25)
        continue;
      break;
    }
  }
  OUTLINED_FUNCTION_20();
}

void sub_1A6010DA0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  unint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v29;
  BOOL v31;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t (*v36)(_QWORD);
  unint64_t v37;
  char v38;
  unint64_t v40;
  _QWORD v44[2];
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);
  char *v52;
  uint64_t v53;

  OUTLINED_FUNCTION_13_1();
  v44[1] = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v51 = v9;
  v50 = v9(0);
  MEMORY[0x1E0C80A78](v50);
  OUTLINED_FUNCTION_46_3();
  v53 = v10;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v11);
  v52 = (char *)v44 - v13;
  v14 = *(_QWORD *)(v12 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  v15 = v6 - v8;
  if (v6 - v8 == 0x8000000000000000 && v14 == -1)
    goto LABEL_78;
  v17 = v4 - v6;
  if (v4 - v6 == 0x8000000000000000 && v14 == -1)
    goto LABEL_79;
  v19 = v15 / v14;
  v20 = v17 / v14;
  v45 = *(_QWORD *)(v12 + 72);
  if (v15 / v14 >= v17 / v14)
  {
    OUTLINED_FUNCTION_49_3();
    v21 = v2 + v20 * v14;
    if (v20 * v14 < 1 || v8 >= v6)
      goto LABEL_72;
    v47 = v8;
    v48 = -v14;
    v46 = v2;
    v33 = (uint64_t)v52;
    while (1)
    {
      v34 = v48;
      v35 = v4 + v48;
      v49 = v21 + v48;
      v36 = v51;
      v37 = v21;
      sub_1A5FA9220(v21 + v48, v33, v51);
      sub_1A5FA9220(v6 + v34, v53, v36);
      v38 = sub_1A6121F04();
      sub_1A5FA1740(v53, v36);
      sub_1A5FA1740(v33, v36);
      if ((v38 & 1) != 0)
        break;
      if (v4 < v37 || v35 >= v37)
      {
        OUTLINED_FUNCTION_51_3();
        swift_arrayInitWithTakeFrontToBack();
        v21 = v37;
        v2 = v46;
        v40 = v47;
LABEL_66:
        v4 = v35;
        goto LABEL_67;
      }
      v40 = v47;
      if (v4 == v37)
      {
        v21 = v49;
        v2 = v46;
        goto LABEL_66;
      }
      v4 = v35;
      OUTLINED_FUNCTION_51_3();
      swift_arrayInitWithTakeBackToFront();
      v21 = v37;
      v2 = v46;
LABEL_67:
      if (v21 <= v2 || v6 <= v40)
      {
        v14 = v45;
        goto LABEL_72;
      }
    }
    if (v4 < v6 || v35 >= v6)
    {
      OUTLINED_FUNCTION_16_11();
      v6 += v34;
      v2 = v46;
      v40 = v47;
    }
    else
    {
      v40 = v47;
      if (v4 != v6)
      {
        v4 = v35;
        OUTLINED_FUNCTION_15_11();
        v6 += v34;
        v2 = v46;
LABEL_64:
        v21 = v37;
        goto LABEL_67;
      }
      v6 += v34;
      v2 = v46;
    }
    v4 = v35;
    goto LABEL_64;
  }
  OUTLINED_FUNCTION_49_3();
  v21 = v2 + v19 * v14;
  if (v19 * v14 >= 1 && v6 < v4)
  {
    v49 = v4;
    v24 = v51;
    v23 = (uint64_t)v52;
    do
    {
      v25 = v21;
      sub_1A5FA9220(v6, v23, v24);
      sub_1A5FA9220(v2, v53, v24);
      v26 = OUTLINED_FUNCTION_38_6();
      sub_1A5FA1740(v53, v24);
      sub_1A5FA1740(v23, v24);
      if ((v26 & 1) != 0)
      {
        v27 = v6 + v14;
        if (v8 < v6 || v8 >= v27)
        {
          OUTLINED_FUNCTION_16_11();
        }
        else if (v8 != v6)
        {
          OUTLINED_FUNCTION_15_11();
        }
      }
      else
      {
        v29 = v2 + v14;
        if (v8 < v2 || v8 >= v29)
        {
          OUTLINED_FUNCTION_16_11();
        }
        else if (v8 != v2)
        {
          OUTLINED_FUNCTION_15_11();
        }
        v27 = v6;
        v2 = v29;
        v14 = v45;
      }
      v21 = v25;
      v8 += v14;
      v31 = v2 >= v25 || v27 >= v49;
      v6 = v27;
    }
    while (!v31);
  }
LABEL_72:
  if (v14 != -1 || v21 - v2 != 0x8000000000000000)
  {
    OUTLINED_FUNCTION_49_3();
    OUTLINED_FUNCTION_20();
    return;
  }
LABEL_80:
  __break(1u);
}

char *sub_1A6011114(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8139C8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A6011208(uint64_t a1)
{
  return sub_1A6011114(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1A601121C()
{
  sub_1A6001DA8();
}

void sub_1A6011230()
{
  sub_1A6001DC4();
}

uint64_t sub_1A6011244()
{
  return sub_1A6010250() & 1;
}

void WeatherCondition.accessibilityDescription.getter()
{
  __asm { BR              X10 }
}

void sub_1A601128C()
{
  id v0;

  if (qword_1ED1925A0 != -1)
    swift_once();
  v0 = (id)qword_1ED19DB10;
  OUTLINED_FUNCTION_4_15();
  OUTLINED_FUNCTION_28_7();
  OUTLINED_FUNCTION_1();
  sub_1A6121DA8();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_4_1();
}

WeatherKit::WeatherCondition_optional __swiftcall WeatherCondition.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  WeatherKit::WeatherCondition_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1A6123D04();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 16;
  switch(v3)
  {
    case 0:
      goto LABEL_18;
    case 1:
      v5 = 1;
      goto LABEL_18;
    case 2:
      v5 = 2;
      goto LABEL_18;
    case 3:
      v5 = 3;
      goto LABEL_18;
    case 4:
      v5 = 4;
      goto LABEL_18;
    case 5:
      v5 = 5;
      goto LABEL_18;
    case 6:
      v5 = 6;
      goto LABEL_18;
    case 7:
      v5 = 7;
      goto LABEL_18;
    case 8:
      v5 = 8;
      goto LABEL_18;
    case 9:
      v5 = 9;
      goto LABEL_18;
    case 10:
      v5 = 10;
      goto LABEL_18;
    case 11:
      v5 = 11;
      goto LABEL_18;
    case 12:
      v5 = 12;
      goto LABEL_18;
    case 13:
      v5 = 13;
      goto LABEL_18;
    case 14:
      v5 = 14;
      goto LABEL_18;
    case 15:
      v5 = 15;
LABEL_18:
      v6 = v5;
      break;
    case 16:
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    case 25:
      v6 = 25;
      break;
    case 26:
      v6 = 26;
      break;
    case 27:
      v6 = 27;
      break;
    case 28:
      v6 = 28;
      break;
    case 29:
      v6 = 29;
      break;
    case 30:
      v6 = 30;
      break;
    case 31:
      v6 = 31;
      break;
    case 32:
      v6 = 32;
      break;
    case 33:
      v6 = 33;
      break;
    default:
      v6 = 34;
      break;
  }
  *v2 = v6;
  return result;
}

WeatherKit::WeatherCondition_optional sub_1A6011FE8(Swift::String *a1)
{
  return WeatherCondition.init(rawValue:)(*a1);
}

void sub_1A6011FF4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4FE05A8;
}

void sub_1A6012004()
{
  unsigned __int8 *v0;

  sub_1A610576C(*v0);
}

uint64_t sub_1A601200C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A60025E0(a1, *v1);
}

void sub_1A6012014(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1A6105A98(a1, *v1);
}

uint64_t sub_1A601201C()
{
  sub_1A601214C();
  return sub_1A61238B4();
}

uint64_t sub_1A6012078()
{
  sub_1A601214C();
  return sub_1A612389C();
}

unint64_t sub_1A60120C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE8139D0;
  if (!qword_1EE8139D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE8139D8);
    result = MEMORY[0x1A85BB36C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE8139D0);
  }
  return result;
}

unint64_t sub_1A6012110()
{
  unint64_t result;

  result = qword_1ED191040;
  if (!qword_1ED191040)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherCondition, &type metadata for WeatherCondition);
    atomic_store(result, (unint64_t *)&qword_1ED191040);
  }
  return result;
}

unint64_t sub_1A601214C()
{
  unint64_t result;

  result = qword_1ED191E48;
  if (!qword_1ED191E48)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherCondition, &type metadata for WeatherCondition);
    atomic_store(result, (unint64_t *)&qword_1ED191E48);
  }
  return result;
}

void sub_1A6012188(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t *);
  void *v57;
  _BYTE *v58;
  _QWORD v59[2];
  void *v60;
  uint64_t v61;
  void (*v62)(uint64_t *);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;

  v7 = v6;
  v61 = a6;
  v64 = a4;
  v11 = sub_1A6121F58();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = *a1;
  sub_1A6121F4C();
  sub_1A6121E5C();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (qword_1ED193BE8 != -1)
    swift_once();
  v17 = sub_1A612356C();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED19DB18);
  v19 = a3;
  v20 = sub_1A6123554();
  v21 = sub_1A6123A4C();
  v22 = os_log_type_enabled(v20, v21);
  v62 = a5;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v60 = v6;
    v24 = v23;
    v25 = swift_slowAlloc();
    v59[1] = v18;
    v26 = v25;
    *(_DWORD *)v24 = 141558531;
    v65 = 1752392040;
    v66 = v25;
    sub_1A6123A88();
    *(_WORD *)(v24 + 12) = 2081;
    v65 = (uint64_t)v19;
    sub_1A5FAA124();
    v27 = v19;
    v28 = sub_1A612380C();
    v65 = sub_1A5FBE7E0(v28, v29, &v66);
    sub_1A6123A88();

    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2050;
    v65 = v16;
    sub_1A6123A88();
    _os_log_impl(&dword_1A5F87000, v20, v21, "Got response for fetch of available data sets; location=%{private,mask.hash}s, duration=%{public}f",
      (uint8_t *)v24,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v26, -1, -1);
    v30 = v24;
    v7 = v60;
    MEMORY[0x1A85BB42C](v30, -1, -1);

  }
  else
  {

  }
  sub_1A5FE24F4();
  if (v7)
  {
    v31 = v19;
    v32 = v7;
    v33 = v31;
    v34 = v7;
    v35 = sub_1A6123554();
    v36 = sub_1A6123A40();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      *(_DWORD *)v37 = 141558531;
      v65 = 1752392040;
      v66 = v38;
      sub_1A6123A88();
      *(_WORD *)(v37 + 12) = 2081;
      v65 = (uint64_t)v33;
      sub_1A5FAA124();
      v39 = v33;
      v40 = sub_1A612380C();
      v65 = sub_1A5FBE7E0(v40, v41, &v66);
      sub_1A6123A88();

      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 22) = 2082;
      v65 = (uint64_t)v7;
      v42 = v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C90);
      v43 = sub_1A61237F4();
      v65 = sub_1A5FBE7E0(v43, v44, &v66);
      sub_1A6123A88();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A5F87000, v35, v36, "Unexpected error when attempting to parse the available data sets object; location=%{private,mask.hash}s, error=%{public}s",
        (uint8_t *)v37,
        0x20u);
      swift_arrayDestroy();
      MEMORY[0x1A85BB42C](v38, -1, -1);
      MEMORY[0x1A85BB42C](v37, -1, -1);
    }
    else
    {

    }
    v56 = v62;
    sub_1A5FCC4D4();
    v57 = (void *)swift_allocError();
    *v58 = 1;
    v66 = (uint64_t)v57;
    v67 = 1;
    v56(&v66);

  }
  else
  {
    v45 = v66;
    v46 = v19;
    v47 = sub_1A6123554();
    v48 = sub_1A6123A4C();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = swift_slowAlloc();
      v64 = v45;
      v50 = v49;
      v51 = swift_slowAlloc();
      *(_DWORD *)v50 = 141558275;
      v65 = 1752392040;
      v66 = v51;
      sub_1A6123A88();
      *(_WORD *)(v50 + 12) = 2081;
      v65 = (uint64_t)v46;
      sub_1A5FAA124();
      v52 = v46;
      v53 = sub_1A612380C();
      v65 = sub_1A5FBE7E0(v53, v54, &v66);
      sub_1A6123A88();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5F87000, v47, v48, "Successfully parsed available data sets; location=%{private,mask.hash}s",
        (uint8_t *)v50,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85BB42C](v51, -1, -1);
      v55 = v50;
      v45 = v64;
      MEMORY[0x1A85BB42C](v55, -1, -1);

    }
    else
    {

    }
    v66 = v45;
    v67 = 0;
    v62(&v66);
  }
}

void sub_1A6012804(void *a1, void *a2, void (*a3)(uint64_t *))
{
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  if (qword_1ED193BE8 != -1)
    swift_once();
  v6 = sub_1A612356C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED19DB18);
  v7 = a1;
  v8 = a1;
  v9 = a1;
  v10 = a2;
  v11 = a1;
  v12 = v10;
  v13 = sub_1A6123554();
  v14 = sub_1A6123A40();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    *(_DWORD *)v15 = 141558787;
    v26 = v24;
    sub_1A6123A88();
    *(_WORD *)(v15 + 12) = 2081;
    sub_1A5FAA124();
    v17 = v12;
    v18 = sub_1A612380C();
    sub_1A5FBE7E0(v18, v19, &v26);
    sub_1A6123A88();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    swift_getErrorValue();
    v20 = sub_1A6123D28();
    sub_1A5FBE7E0(v20, v21, &v26);
    sub_1A6123A88();
    swift_bridgeObjectRelease();

    *(_WORD *)(v15 + 32) = 2112;
    v22 = a1;
    v25 = _swift_stdlib_bridgeErrorToNSError();
    sub_1A6123A88();
    *v16 = v25;

    _os_log_impl(&dword_1A5F87000, v13, v14, "Encountered an error when fetching available data sets; location=%{private,mask.hash}s, error=%{public}s %@",
      (uint8_t *)v15,
      0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v16, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v24, -1, -1);
    MEMORY[0x1A85BB42C](v15, -1, -1);
  }
  else
  {

  }
  v26 = (uint64_t)a1;
  v27 = 1;
  v23 = a1;
  a3(&v26);

}

uint64_t sub_1A6012B50(void *a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v37 = a2;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C38);
  MEMORY[0x1E0C80A78](v39);
  v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192878);
  MEMORY[0x1E0C80A78](v12);
  v38 = (uint64_t)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED193BE8 != -1)
    swift_once();
  v14 = sub_1A612356C();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED19DB18);
  swift_bridgeObjectRetain();
  v15 = a4;
  v16 = a1;
  swift_bridgeObjectRetain();
  v17 = v15;
  v18 = a1;
  v19 = sub_1A6123554();
  v20 = sub_1A6123A40();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v36 = a5;
    v22 = v21;
    v35 = swift_slowAlloc();
    v41 = v35;
    *(_DWORD *)v22 = 136446979;
    swift_bridgeObjectRetain();
    v40 = sub_1A5FBE7E0(v37, a3, &v41);
    v37 = v5;
    sub_1A6123A88();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2160;
    v40 = 1752392040;
    sub_1A6123A88();
    *(_WORD *)(v22 + 22) = 2081;
    v40 = (uint64_t)v17;
    sub_1A5FAA124();
    v23 = v17;
    v24 = sub_1A612380C();
    v40 = sub_1A5FBE7E0(v24, v25, &v41);
    sub_1A6123A88();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 32) = 2082;
    v40 = (uint64_t)a1;
    v26 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C90);
    v27 = sub_1A61237F4();
    v40 = sub_1A5FBE7E0(v27, v28, &v41);
    sub_1A6123A88();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A5F87000, v19, v20, "Error while trying to fetch air quality scale; scaleName=%{public}s, location=%{private,mask.hash}s, error=%{public}s",
      (uint8_t *)v22,
      0x2Au);
    v29 = v35;
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v29, -1, -1);
    v30 = v22;
    a5 = v36;
    MEMORY[0x1A85BB42C](v30, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  v31 = sub_1A6122F30();
  v32 = v38;
  __swift_storeEnumTagSinglePayload(v38, 1, 1, v31);
  v33 = (uint64_t)v11 + *(int *)(v39 + 48);
  *v11 = a5;
  sub_1A5FAA160(v32, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193BA0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  return sub_1A6122228();
}

uint64_t sub_1A6012F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  os_log_type_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, char *, uint64_t);
  uint64_t v76;
  NSObject *v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  NSObject *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, NSObject *, uint64_t);
  NSObject *v88;
  uint64_t v89;
  id v90;
  NSObject *v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  id v96;
  uint64_t v97;
  unint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  NSObject *v101;
  uint64_t v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  uint64_t v109;
  unint64_t v110;
  void (*v111)(uint64_t, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint64_t v117;
  uint64_t v118;
  NSObject *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v127;
  uint64_t v128;
  NSObject *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  NSObject *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v132 = a3;
  v139 = a2;
  v141 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192878);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v7);
  v143 = OUTLINED_FUNCTION_41_3();
  v128 = *(_QWORD *)(v143 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_0();
  v134 = v9;
  v137 = OUTLINED_FUNCTION_6();
  v135 = *(_QWORD *)(v137 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_151();
  v131 = v11;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v12);
  v140 = (char *)&v127 - v13;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v14);
  v136 = (char *)&v127 - v15;
  v16 = OUTLINED_FUNCTION_58_2();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_88();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v127 - v19;
  v21 = sub_1A61228DC();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_151();
  v127 = v23;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_34_0();
  v129 = v25;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_34_0();
  v150 = v27;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_34_0();
  v145 = v29;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_34_0();
  v146 = v31;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v32);
  v34 = ((char *)&v127 - v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193BC0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_23();
  v38 = v36 - v37;
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_34_0();
  v138 = v40;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_53();
  v144 = v42;
  v43 = *(_QWORD *)(a1 + 16);
  v147 = v21;
  v148 = v22;
  v142 = v34;
  if (v43)
  {
    OUTLINED_FUNCTION_59_2();
    v45 = a1 + v44;
    v149 = *(NSObject **)(v17 + 72);
    v130 = a1;
    OUTLINED_FUNCTION_49_4();
    v46 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1A5FA0BCC(v45, (uint64_t)v20);
      sub_1A5FA0BCC((uint64_t)v20, v4);
      if (swift_getEnumCaseMultiPayload())
        break;
      OUTLINED_FUNCTION_45_4(v4);
      if (v47)
      {
        sub_1A5FA0C4C(v4, &qword_1ED193BC0);
        goto LABEL_8;
      }
      v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 32);
      v55 = v145;
      v54(v145, v4, v21);
      v54(v38, v55, v21);
      v22 = v148;
      v56 = 0;
LABEL_9:
      __swift_storeEnumTagSinglePayload(v38, v56, 1, v21);
      sub_1A5FA0C10((uint64_t)v20);
      OUTLINED_FUNCTION_45_4(v38);
      if (v47)
      {
        sub_1A5FA0C4C(v38, &qword_1ED193BC0);
      }
      else
      {
        v48 = v146;
        OUTLINED_FUNCTION_67_3(v146, v38);
        OUTLINED_FUNCTION_67_3(v150, v48);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v46 = OUTLINED_FUNCTION_53_3(0, *(_QWORD *)(v46 + 16) + 1);
        v51 = *(_QWORD *)(v46 + 16);
        v50 = *(_QWORD *)(v46 + 24);
        if (v51 >= v50 >> 1)
          v46 = OUTLINED_FUNCTION_53_3(v50 > 1, v51 + 1);
        *(_QWORD *)(v46 + 16) = v51 + 1;
        v22 = v148;
        OUTLINED_FUNCTION_59_2();
        v53 = v46 + v52 + *(_QWORD *)(v22 + 72) * v51;
        v21 = v147;
        OUTLINED_FUNCTION_67_3(v53, v150);
      }
      v45 += (uint64_t)v149;
      if (!--v43)
      {
        swift_bridgeObjectRelease();
        v34 = v142;
        goto LABEL_20;
      }
    }
    sub_1A5FA0C10(v4);
LABEL_8:
    v56 = 1;
    goto LABEL_9;
  }
  v46 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  v57 = v144;
  sub_1A5FA0C9C(v46, v144);
  swift_bridgeObjectRelease();
  v58 = v138;
  sub_1A5FA0D14(v57, v138);
  OUTLINED_FUNCTION_45_4(v58);
  v59 = (uint64_t)v140;
  if (v47)
  {
    sub_1A5FA0C4C(v58, &qword_1ED193BC0);
    if (qword_1ED193BE8 != -1)
      swift_once();
    v60 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_47_4(v60, (uint64_t)qword_1ED19DB18);
    v61 = OUTLINED_FUNCTION_68_2();
    sub_1A6123554();
    v62 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_10_17(v62))
    {
      OUTLINED_FUNCTION_26();
      v63 = OUTLINED_FUNCTION_26();
      OUTLINED_FUNCTION_8_14(v63, 7.2225e-34);
      OUTLINED_FUNCTION_34_5();
      v151 = (uint64_t)v61;
      OUTLINED_FUNCTION_12_13();
      v64 = v61;
      v65 = OUTLINED_FUNCTION_38_7();
      v151 = OUTLINED_FUNCTION_20_10(v65, v66);
      OUTLINED_FUNCTION_33_2();

      OUTLINED_FUNCTION_307();
      OUTLINED_FUNCTION_32_6(&dword_1A5F87000, v67, v68, "Found no air quality data; not fetching a scale; location=%{private,mask.hash}s");
      OUTLINED_FUNCTION_30_8();
      OUTLINED_FUNCTION_8();
    }

    goto LABEL_42;
  }
  (*(void (**)(NSObject *, uint64_t, uint64_t))(v22 + 32))(v34, v58, v21);
  v69 = sub_1A61228C4();
  if (!v70)
  {
    if (qword_1ED193BE8 != -1)
      swift_once();
    v86 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_47_4(v86, (uint64_t)qword_1ED19DB18);
    v87 = *(void (**)(uint64_t, NSObject *, uint64_t))(v22 + 16);
    v88 = v129;
    v87((uint64_t)v129, v34, v21);
    v89 = v21;
    v90 = OUTLINED_FUNCTION_68_2();
    sub_1A6123554();
    v91 = v34;
    v92 = OUTLINED_FUNCTION_44();
    if (OUTLINED_FUNCTION_264(v92))
    {
      v93 = OUTLINED_FUNCTION_26();
      v150 = OUTLINED_FUNCTION_26();
      v152 = v150;
      *(_DWORD *)v93 = 136315651;
      LODWORD(v149) = v4;
      v87(v127, v88, v89);
      v94 = sub_1A61237F4();
      v151 = OUTLINED_FUNCTION_20_10(v94, v95);
      OUTLINED_FUNCTION_25_12();
      OUTLINED_FUNCTION_86();
      (*(void (**)(NSObject *, uint64_t))(v22 + 8))(v88, v89);
      OUTLINED_FUNCTION_11_13();
      *(_WORD *)(v93 + 22) = 2081;
      v151 = (uint64_t)v90;
      OUTLINED_FUNCTION_12_13();
      v96 = v90;
      v97 = OUTLINED_FUNCTION_48_4();
      v151 = OUTLINED_FUNCTION_20_10(v97, v98);
      OUTLINED_FUNCTION_25_12();

      OUTLINED_FUNCTION_86();
      OUTLINED_FUNCTION_13_14(&dword_1A5F87000, v34, (os_log_type_t)v149, "Missing scale name for air quality data; data will be unavailable; airQuality=%s, location=%{private,mask.hash}s");
      OUTLINED_FUNCTION_29_9();
      OUTLINED_FUNCTION_8();
    }

    v123 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v123((uint64_t)v88, v89);
    v123((uint64_t)v91, v89);
LABEL_42:
    sub_1A5FA0C4C(v57, &qword_1ED193BC0);
    v124 = 1;
    v125 = v141;
    return OUTLINED_FUNCTION_125(v125, v124);
  }
  v71 = v70;
  v150 = v69;
  v72 = v136;
  sub_1A6121F4C();
  if (qword_1ED193BE8 != -1)
    swift_once();
  v73 = OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_47_4(v73, (uint64_t)qword_1ED19DB18);
  v74 = v135;
  v75 = *(void (**)(uint64_t, char *, uint64_t))(v135 + 16);
  v76 = v137;
  v75(v59, v72, v137);
  v77 = OUTLINED_FUNCTION_68_2();
  v149 = v34;
  v78 = sub_1A6123554();
  v79 = sub_1A6123A4C();
  LODWORD(v146) = v79;
  if (os_log_type_enabled(v78, v79))
  {
    v80 = OUTLINED_FUNCTION_26();
    v145 = OUTLINED_FUNCTION_26();
    v151 = 1752392040;
    v152 = v145;
    *(_DWORD *)v80 = 141558531;
    sub_1A6123A88();
    *(_WORD *)(v80 + 12) = 2081;
    v151 = (uint64_t)v77;
    OUTLINED_FUNCTION_12_13();
    v81 = v77;
    v82 = sub_1A612380C();
    v151 = OUTLINED_FUNCTION_20_10(v82, v83);
    sub_1A6123A88();

    swift_bridgeObjectRelease();
    *(_WORD *)(v80 + 22) = 2082;
    v75(v131, (char *)v59, v137);
    v84 = sub_1A612380C();
    v151 = OUTLINED_FUNCTION_20_10(v84, v85);
    sub_1A6123A88();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_65_2(v59);
    _os_log_impl(&dword_1A5F87000, v78, (os_log_type_t)v146, "About to fetch AQI Scale from cache; location=%{private,mask.hash}s, startTime=%{public}s",
      (uint8_t *)v80,
      0x20u);
    OUTLINED_FUNCTION_29_9();
    OUTLINED_FUNCTION_8();
  }

  v99 = *(void (**)(char *, uint64_t))(v74 + 8);
  OUTLINED_FUNCTION_65_2(v59);

  v100 = v133;
  v101 = v77;
  v102 = v150;
  sub_1A6117B40(v150, v71, v133);
  v103 = v143;
  if (__swift_getEnumTagSinglePayload(v100, 1, v143) == 1)
  {
    sub_1A5FA0C4C(v100, &qword_1ED192878);
    v104 = v101;
    swift_bridgeObjectRetain();
    sub_1A6123554();
    v105 = OUTLINED_FUNCTION_44();
    if (OUTLINED_FUNCTION_10_17(v105))
    {
      v106 = OUTLINED_FUNCTION_26();
      v152 = OUTLINED_FUNCTION_26();
      *(_DWORD *)v106 = 136446723;
      swift_bridgeObjectRetain();
      v107 = sub_1A5FBE7E0(v102, v71, &v152);
      OUTLINED_FUNCTION_19_10(v107);
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_11_13();
      *(_WORD *)(v106 + 22) = 2081;
      v151 = (uint64_t)v104;
      OUTLINED_FUNCTION_12_13();
      v108 = v104;
      v109 = OUTLINED_FUNCTION_38_7();
      v151 = OUTLINED_FUNCTION_20_10(v109, v110);
      OUTLINED_FUNCTION_33_2();

      OUTLINED_FUNCTION_307();
      OUTLINED_FUNCTION_13_14(&dword_1A5F87000, v101, (os_log_type_t)v100, "Error while trying to retrieve air quality scale from cache; scaleName=%{public}s, location=%{private,mask.hash}s");
      OUTLINED_FUNCTION_29_9();
      OUTLINED_FUNCTION_8();
    }
    swift_bridgeObjectRelease_n();

    v99(v72, v76);
    OUTLINED_FUNCTION_39_3();
    sub_1A5FA0C4C(v144, &qword_1ED193BC0);
    v124 = 1;
    v125 = v141;
  }
  else
  {
    OUTLINED_FUNCTION_307();
    v111 = *(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 32);
    v111(v134, v100, v103);
    v112 = v131;
    sub_1A6121F4C();
    sub_1A6121E5C();
    v114 = v113;
    OUTLINED_FUNCTION_65_2(v112);
    v115 = v101;
    sub_1A6123554();
    v116 = OUTLINED_FUNCTION_37_4();
    if (OUTLINED_FUNCTION_10_17(v116))
    {
      v117 = OUTLINED_FUNCTION_26();
      v118 = OUTLINED_FUNCTION_26();
      OUTLINED_FUNCTION_8_14(v118, 7.2226e-34);
      OUTLINED_FUNCTION_34_5();
      v151 = (uint64_t)v115;
      OUTLINED_FUNCTION_12_13();
      v119 = v115;
      v120 = OUTLINED_FUNCTION_48_4();
      v122 = OUTLINED_FUNCTION_20_10(v120, v121);
      OUTLINED_FUNCTION_19_10(v122);

      OUTLINED_FUNCTION_86();
      *(_WORD *)(v117 + 22) = 2050;
      v151 = v114;
      sub_1A6123A88();
      OUTLINED_FUNCTION_13_14(&dword_1A5F87000, v101, (os_log_type_t)v100, "Got response for fetch of AQI scale; location=%{private,mask.hash}s, duration=%{public}f");
      OUTLINED_FUNCTION_30_8();
      OUTLINED_FUNCTION_8();
    }

    v99(v72, v76);
    OUTLINED_FUNCTION_39_3();
    sub_1A5FA0C4C(v144, &qword_1ED193BC0);
    v125 = v141;
    v111(v141, v134, v103);
    v124 = 0;
  }
  return OUTLINED_FUNCTION_125(v125, v124);
}

uint64_t sub_1A6013C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_66(v2);

  swift_release();
  swift_release();
  return OUTLINED_FUNCTION_18_3();
}

void sub_1A6013CCC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1A6121F58();
  OUTLINED_FUNCTION_15_13();
  sub_1A6012188(a1, v1 + v5, *(void **)(v1 + v4), *(_QWORD *)(v1 + (v3 & 0xFFFFFFFFFFFFFFF8)), *(void (**)(uint64_t *))(v1 + (((v3 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + (((v3 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1A6013D34()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A6013D60(void *a1)
{
  uint64_t v1;

  sub_1A6012804(a1, *(void **)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24));
}

uint64_t sub_1A6013D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_6_16();
  OUTLINED_FUNCTION_66(v2);

  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_18_3();
}

uint64_t sub_1A6013DB4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A6013DE8(void *a1)
{
  uint64_t v1;

  return sub_1A6012B50(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

Swift::Double __swiftcall Double.init(_:)(Swift::Int_optional a1)
{
  Swift::Double result;

  result = (double)a1.value;
  if (a1.is_nil)
    return 0.0;
  return result;
}

uint64_t sub_1A6013E18(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for WeatherAttribution.Storage()
{
  uint64_t result;

  result = qword_1ED192540;
  if (!qword_1ED192540)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A6013E90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  BOOL v9;
  _BYTE v11[24];

  v5 = OUTLINED_FUNCTION_267();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v11[-v7];
  v9 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (v9 || (sub_1A6123CF8() & 1) != 0)
  {
    OUTLINED_FUNCTION_0_4();
    OUTLINED_FUNCTION_6_17((uint64_t)v8);
    OUTLINED_FUNCTION_0_4();
    OUTLINED_FUNCTION_6_17(v2);
    OUTLINED_FUNCTION_13_15();
  }
  return 0;
}

uint64_t sub_1A60140B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;

  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v11 = v6 + OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_legalPageURL;
  OUTLINED_FUNCTION_267();
  OUTLINED_FUNCTION_20_11(v11, a3);
  OUTLINED_FUNCTION_20_11(v6 + OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_squareMarkURL, a4);
  OUTLINED_FUNCTION_20_11(v6+ OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_combinedMarkDarkURL, a5);
  OUTLINED_FUNCTION_20_11(v6+ OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_combinedMarkLightURL, a6);
  return v6;
}

uint64_t sub_1A6014164(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x4E65636976726573 && a2 == 0xEB00000000656D61;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6761506C6167656CLL && a2 == 0xEC0000004C525565;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x614D657261757173 && a2 == 0xED00004C52556B72;
      if (v7 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A614AD30 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001A614AD50)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = sub_1A6123CF8();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_1A60143C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A60143FC + 4 * byte_1A612A3D0[a1]))(0x4E65636976726573, 0xEB00000000656D61);
}

uint64_t sub_1A60143FC()
{
  return 0x6761506C6167656CLL;
}

uint64_t sub_1A601441C()
{
  return 0x614D657261757173;
}

unint64_t sub_1A6014440()
{
  return 0xD000000000000013;
}

unint64_t sub_1A601445C()
{
  return 0xD000000000000014;
}

uint64_t sub_1A601447C()
{
  unsigned __int8 *v0;

  return sub_1A60143C0(*v0);
}

uint64_t sub_1A6014484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6014164(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A60144A8()
{
  sub_1A6015B80();
  return sub_1A6123DE8();
}

uint64_t sub_1A60144D0()
{
  sub_1A6015B80();
  return sub_1A6123DF4();
}

uint64_t sub_1A60144F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_legalPageURL;
  v2 = sub_1A6121DF0();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_squareMarkURL, v2);
  v3(v0+ OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_combinedMarkDarkURL, v2);
  v3(v0+ OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_combinedMarkLightURL, v2);
  return v0;
}

uint64_t sub_1A601458C()
{
  sub_1A60144F8();
  return swift_deallocClassInstance();
}

uint64_t sub_1A60145AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;

  v2 = v1;
  v4 = sub_1A6121DF0();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  MEMORY[0x1E0C80A78](v4);
  v48 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v45 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v45 - v10;
  MEMORY[0x1E0C80A78](v12);
  v51 = (char *)&v45 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813A00);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6015B80();
  sub_1A6123DD0();
  v18 = v2;
  v56 = 0;
  swift_bridgeObjectRetain();
  v19 = v14;
  v20 = v52;
  sub_1A6123C8C();
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v46 = v8;
    v47 = v11;
    v52 = v15;
    swift_bridgeObjectRelease();
    v22 = v18;
    v23 = v18
        + OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_legalPageURL;
    swift_beginAccess();
    v24 = v49;
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
    v26 = v23;
    v27 = v50;
    v25(v51, v26, v50);
    v55 = 1;
    sub_1A5FCAA84(&qword_1ED191690, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    v28 = v17;
    sub_1A6123CC8();
    v29 = *(void (**)(char *, uint64_t))(v24 + 8);
    v29(v51, v27);
    v30 = v22
        + OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_squareMarkURL;
    swift_beginAccess();
    v31 = v47;
    v32 = v30;
    v33 = v50;
    v25(v47, v32, v50);
    v54 = 2;
    sub_1A6123CC8();
    v34 = v31;
    v35 = v29;
    v29(v34, v33);
    v36 = v22
        + OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_combinedMarkDarkURL;
    swift_beginAccess();
    v37 = v46;
    v38 = v36;
    v39 = v50;
    v25(v46, v38, v50);
    v53 = 3;
    sub_1A6123CC8();
    v35(v37, v39);
    v40 = v22
        + OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_combinedMarkLightURL;
    swift_beginAccess();
    v41 = v48;
    v42 = v40;
    v43 = v50;
    v25(v48, v42, v50);
    v57 = 4;
    sub_1A6123CC8();
    v44 = v52;
    v35(v41, v43);
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v28, v19);
  }
}

_QWORD *sub_1A60149B8(_QWORD *a1)
{
  swift_allocObject();
  return sub_1A6014A00(a1);
}

_QWORD *sub_1A6014A00(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  _QWORD v28[2];
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v2 = v1;
  v36 = *v1;
  v4 = sub_1A6121DF0();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  MEMORY[0x1E0C80A78](v4);
  v29 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v30 = (char *)v28 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v28 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v28 - v12;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813A10);
  v14 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6015B80();
  v33 = v16;
  v17 = v35;
  sub_1A6123DC4();
  if (v17)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v35 = v10;
    v18 = v14;
    v19 = v32;
    v41 = 0;
    v1[2] = sub_1A6123C08();
    v1[3] = v20;
    v40 = 1;
    sub_1A5FCAA84(&qword_1EE813A18, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    sub_1A6123C44();
    v28[0] = *(_QWORD *)(v31 + 32);
    ((void (*)(char *, char *, uint64_t))v28[0])((char *)v1+ OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_legalPageURL, v13, v19);
    v39 = 2;
    v21 = v35;
    v28[1] = 0;
    sub_1A6123C44();
    v22 = v19;
    ((void (*)(char *, char *, uint64_t))v28[0])((char *)v1+ OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_squareMarkURL, v21, v19);
    v38 = 3;
    v23 = v30;
    sub_1A6123C44();
    v2 = v1;
    v24 = v23;
    v25 = (void (*)(char *, char *, uint64_t))v28[0];
    ((void (*)(char *, char *, uint64_t))v28[0])((char *)v1+ OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_combinedMarkDarkURL, v24, v22);
    v37 = 4;
    v26 = v29;
    sub_1A6123C44();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v33, v34);
    v25((char *)v1+ OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_combinedMarkLightURL, v26, v22);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t sub_1A6014E4C(uint64_t *a1, uint64_t *a2)
{
  return sub_1A6013E90(*a1, *a2);
}

_QWORD *sub_1A6014E58@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1A60149B8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A6014E80(_QWORD *a1)
{
  return sub_1A60145AC(a1);
}

uint64_t WeatherAttribution.serviceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A6014ED0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = WeatherAttribution.serviceName.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A6014F08(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return WeatherAttribution.serviceName.setter(v1, v2);
}

uint64_t WeatherAttribution.serviceName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*WeatherAttribution.serviceName.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_1A6014F98;
}

uint64_t sub_1A6014F98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = **(_QWORD **)(a1 + 16);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_bridgeObjectRelease();
}

void WeatherAttribution.legalPageURL.getter()
{
  sub_1A6015248();
}

void sub_1A6014FBC()
{
  WeatherAttribution.legalPageURL.getter();
}

void WeatherAttribution.legalPageURL.setter(uint64_t a1)
{
  sub_1A60152C8(a1, &OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_legalPageURL);
}

void WeatherAttribution.legalPageURL.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_12_14();
  v2 = OUTLINED_FUNCTION_4_16((uint64_t)v1);
  *(_QWORD *)(v0 + 96) = OUTLINED_FUNCTION_1_20(v2);
  v3 = OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_15_14((uint64_t)v3);
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_3_14();
  OUTLINED_FUNCTION_3_8();
}

void sub_1A6015054(uint64_t *a1, char a2)
{
  sub_1A601538C(a1, a2, &OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_legalPageURL);
}

void WeatherAttribution.squareMarkURL.getter()
{
  sub_1A6015248();
}

void sub_1A601506C()
{
  WeatherAttribution.squareMarkURL.getter();
}

uint64_t sub_1A601509C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v7 = OUTLINED_FUNCTION_267();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v11 + 16))(v10, a1, v8);
  return a5(v10);
}

void WeatherAttribution.squareMarkURL.setter(uint64_t a1)
{
  sub_1A60152C8(a1, &OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_squareMarkURL);
}

void WeatherAttribution.squareMarkURL.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_12_14();
  v2 = OUTLINED_FUNCTION_4_16((uint64_t)v1);
  *(_QWORD *)(v0 + 96) = OUTLINED_FUNCTION_1_20(v2);
  v3 = OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_15_14((uint64_t)v3);
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_3_14();
  OUTLINED_FUNCTION_3_8();
}

void sub_1A6015180(uint64_t *a1, char a2)
{
  sub_1A601538C(a1, a2, &OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_squareMarkURL);
}

void WeatherAttribution.combinedMarkDarkURL.getter()
{
  sub_1A6015248();
}

void sub_1A6015198()
{
  WeatherAttribution.combinedMarkDarkURL.getter();
}

void WeatherAttribution.combinedMarkDarkURL.setter(uint64_t a1)
{
  sub_1A60152C8(a1, &OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_combinedMarkDarkURL);
}

void WeatherAttribution.combinedMarkDarkURL.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_12_14();
  v2 = OUTLINED_FUNCTION_4_16((uint64_t)v1);
  *(_QWORD *)(v0 + 96) = OUTLINED_FUNCTION_1_20(v2);
  v3 = OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_15_14((uint64_t)v3);
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_3_14();
  OUTLINED_FUNCTION_3_8();
}

void sub_1A6015230(uint64_t *a1, char a2)
{
  sub_1A601538C(a1, a2, &OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_combinedMarkDarkURL);
}

void WeatherAttribution.combinedMarkLightURL.getter()
{
  sub_1A6015248();
}

void sub_1A6015248()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_267();
  v0 = OUTLINED_FUNCTION_24_10();
  v1(v0);
  OUTLINED_FUNCTION_25_2();
}

void sub_1A601528C()
{
  WeatherAttribution.combinedMarkLightURL.getter();
}

void WeatherAttribution.combinedMarkLightURL.setter(uint64_t a1)
{
  sub_1A60152C8(a1, &OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_combinedMarkLightURL);
}

void sub_1A60152C8(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2 + *a2;
  OUTLINED_FUNCTION_2_20();
  v5 = OUTLINED_FUNCTION_267();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
  swift_endAccess();
  OUTLINED_FUNCTION_25_2();
}

void WeatherAttribution.combinedMarkLightURL.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_12_14();
  v2 = OUTLINED_FUNCTION_4_16((uint64_t)v1);
  *(_QWORD *)(v0 + 96) = OUTLINED_FUNCTION_1_20(v2);
  v3 = OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_15_14((uint64_t)v3);
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_3_14();
  OUTLINED_FUNCTION_3_8();
}

void sub_1A6015380(uint64_t *a1, char a2)
{
  sub_1A601538C(a1, a2, &OBJC_IVAR____TtCV10WeatherKit18WeatherAttributionP33_58EC53A9C2B4F8A1CC73F192127C76C07Storage_combinedMarkLightURL);
}

void sub_1A601538C(uint64_t *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = *(void **)(v4 + 104);
    v7 = *(_QWORD *)(v4 + 88);
    v6 = *(void **)(v4 + 96);
    v9 = *(_QWORD **)(v4 + 72);
    v8 = *(_QWORD *)(v4 + 80);
    OUTLINED_FUNCTION_202((uint64_t)v6, (uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 112));
    v10 = *v9 + *a3;
    OUTLINED_FUNCTION_2_20();
    OUTLINED_FUNCTION_202(v10, (uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 40));
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v8);
  }
  else
  {
    v6 = *(void **)(v4 + 96);
    v5 = *(void **)(v4 + 104);
    v11 = *(_QWORD *)(v4 + 88);
    v12 = **(_QWORD **)(v4 + 72) + *a3;
    OUTLINED_FUNCTION_2_20();
    OUTLINED_FUNCTION_202(v12, (uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 40));
    swift_endAccess();
  }
  free(v5);
  free(v6);
  free((void *)v4);
}

uint64_t WeatherAttribution.legalAttributionText.getter()
{
  return 0x10000000000004FFLL;
}

uint64_t WeatherAttribution.sourceURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A60154C4(a1);
}

uint64_t WeatherAttribution.logoURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A60154C4(a1);
}

uint64_t WeatherAttribution.logo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A60154C4(a1);
}

uint64_t sub_1A60154C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  OUTLINED_FUNCTION_0_4();
  v2 = OUTLINED_FUNCTION_267();
  v3 = OUTLINED_FUNCTION_24_10();
  v4(v3);
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v2);
}

void WeatherAttribution.init(serviceName:legalPageURL:squareMarkURL:combinedMarkDarkURL:combinedMarkLightURL:name:sourceURL:logoURL:logo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t *v11;

  OUTLINED_FUNCTION_14_17();
  swift_bridgeObjectRelease();
  sub_1A6013E18(a11);
  sub_1A6013E18(a10);
  sub_1A6013E18(a9);
  OUTLINED_FUNCTION_21_10();
  OUTLINED_FUNCTION_54();
  *v11 = OUTLINED_FUNCTION_8_15();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A6015590(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x656761726F7473 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1A6123CF8();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A6015614()
{
  return 0x656761726F7473;
}

uint64_t sub_1A6015630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6015590(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A6015658()
{
  sub_1A60157A4();
  return sub_1A6123DE8();
}

uint64_t sub_1A6015680()
{
  sub_1A60157A4();
  return sub_1A6123DF4();
}

void WeatherAttribution.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191548);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_7();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A60157A4();
  sub_1A6123DD0();
  type metadata accessor for WeatherAttribution.Storage();
  sub_1A5FCAA84(&qword_1EE8139E0, (uint64_t (*)(uint64_t))type metadata accessor for WeatherAttribution.Storage, (uint64_t)&unk_1A612A5C4);
  sub_1A6123CC8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A60157A4()
{
  unint64_t result;

  result = qword_1ED191068;
  if (!qword_1ED191068)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612A5EC, &type metadata for WeatherAttribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191068);
  }
  return result;
}

void WeatherAttribution.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8139E8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_7();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A60157A4();
  sub_1A6123DC4();
  if (!v2)
  {
    type metadata accessor for WeatherAttribution.Storage();
    sub_1A5FCAA84(&qword_1EE8139F0, (uint64_t (*)(uint64_t))type metadata accessor for WeatherAttribution.Storage, (uint64_t)&unk_1A612A59C);
    sub_1A6123C44();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
    *a2 = v8;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_20();
}

void sub_1A60158F8(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  WeatherAttribution.init(from:)(a1, a2);
}

void sub_1A601590C(_QWORD *a1)
{
  WeatherAttribution.encode(to:)(a1);
}

uint64_t sub_1A601592C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A601509C(a1, a2, a3, a4, (uint64_t (*)(char *))WeatherAttribution.legalPageURL.setter);
}

uint64_t sub_1A601594C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A601509C(a1, a2, a3, a4, (uint64_t (*)(char *))WeatherAttribution.squareMarkURL.setter);
}

uint64_t sub_1A601596C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A601509C(a1, a2, a3, a4, (uint64_t (*)(char *))WeatherAttribution.combinedMarkDarkURL.setter);
}

uint64_t sub_1A601598C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A601509C(a1, a2, a3, a4, (uint64_t (*)(char *))WeatherAttribution.combinedMarkLightURL.setter);
}

uint64_t sub_1A60159A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A6121DF0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WeatherAttribution.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A6015A64 + 4 * byte_1A612A3D5[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A6015A84 + 4 * byte_1A612A3DA[v4]))();
}

_BYTE *sub_1A6015A64(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A6015A84(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A6015A8C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A6015A94(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A6015A9C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A6015AA4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WeatherAttribution.CodingKeys()
{
  return &type metadata for WeatherAttribution.CodingKeys;
}

unint64_t sub_1A6015AC4()
{
  unint64_t result;

  result = qword_1EE8139F8;
  if (!qword_1EE8139F8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612A54C, &type metadata for WeatherAttribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8139F8);
  }
  return result;
}

unint64_t sub_1A6015B04()
{
  unint64_t result;

  result = qword_1ED191078;
  if (!qword_1ED191078)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612A4BC, &type metadata for WeatherAttribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191078);
  }
  return result;
}

unint64_t sub_1A6015B44()
{
  unint64_t result;

  result = qword_1ED191070;
  if (!qword_1ED191070)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612A4E4, &type metadata for WeatherAttribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191070);
  }
  return result;
}

unint64_t sub_1A6015B80()
{
  unint64_t result;

  result = qword_1EE813A08;
  if (!qword_1EE813A08)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612A6F4, &type metadata for WeatherAttribution.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813A08);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WeatherAttribution.Storage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A6015C08 + 4 * byte_1A612A3E4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A6015C3C + 4 * byte_1A612A3DF[v4]))();
}

uint64_t sub_1A6015C3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6015C44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6015C4CLL);
  return result;
}

uint64_t sub_1A6015C58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6015C60);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A6015C64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6015C6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherAttribution.Storage.CodingKeys()
{
  return &type metadata for WeatherAttribution.Storage.CodingKeys;
}

unint64_t sub_1A6015C8C()
{
  unint64_t result;

  result = qword_1EE813A20;
  if (!qword_1EE813A20)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612A6CC, &type metadata for WeatherAttribution.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813A20);
  }
  return result;
}

unint64_t sub_1A6015CCC()
{
  unint64_t result;

  result = qword_1EE813A28;
  if (!qword_1EE813A28)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612A63C, &type metadata for WeatherAttribution.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813A28);
  }
  return result;
}

unint64_t sub_1A6015D0C()
{
  unint64_t result;

  result = qword_1EE813A30;
  if (!qword_1EE813A30)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612A664, &type metadata for WeatherAttribution.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813A30);
  }
  return result;
}

WeatherKit::CloudCoverByAltitude __swiftcall CloudCoverByAltitude.init(low:medium:high:)(Swift::Double low, Swift::Double medium, Swift::Double high)
{
  Swift::Double *v3;
  WeatherKit::CloudCoverByAltitude result;

  *v3 = low;
  v3[1] = medium;
  v3[2] = high;
  result.high = high;
  result.medium = medium;
  result.low = low;
  return result;
}

BOOL static CloudCoverByAltitude.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

double CloudCoverByAltitude.low.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void CloudCoverByAltitude.low.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*CloudCoverByAltitude.low.modify())()
{
  return GEOLocationCoordinate2DMake;
}

double CloudCoverByAltitude.medium.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void CloudCoverByAltitude.medium.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*CloudCoverByAltitude.medium.modify())()
{
  return GEOLocationCoordinate2DMake;
}

double CloudCoverByAltitude.high.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void CloudCoverByAltitude.high.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*CloudCoverByAltitude.high.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1A6015DE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 7827308 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6D756964656DLL && a2 == 0xE600000000000000;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1751607656 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1A6123CF8();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1A6015F0C(char a1)
{
  if (!a1)
    return 7827308;
  if (a1 == 1)
    return 0x6D756964656DLL;
  return 1751607656;
}

uint64_t sub_1A6015F50()
{
  char *v0;

  return sub_1A6015F0C(*v0);
}

uint64_t sub_1A6015F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6015DE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6015F7C()
{
  sub_1A60160F8();
  return sub_1A6123DE8();
}

uint64_t sub_1A6015FA4()
{
  sub_1A60160F8();
  return sub_1A6123DF4();
}

uint64_t CloudCoverByAltitude.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813A38);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A60160F8();
  sub_1A6123DD0();
  v11 = 0;
  OUTLINED_FUNCTION_1_9();
  if (!v1)
  {
    v10 = 1;
    OUTLINED_FUNCTION_1_9();
    v9 = 2;
    OUTLINED_FUNCTION_1_9();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A60160F8()
{
  unint64_t result;

  result = qword_1EE813A40;
  if (!qword_1EE813A40)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612A8B8, &type metadata for CloudCoverByAltitude.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813A40);
  }
  return result;
}

uint64_t CloudCoverByAltitude.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813A48);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A60160F8();
  sub_1A6123DC4();
  if (!v2)
  {
    OUTLINED_FUNCTION_0_23();
    v7 = v6;
    OUTLINED_FUNCTION_0_23();
    v10 = v9;
    OUTLINED_FUNCTION_0_23();
    v12 = v11;
    OUTLINED_FUNCTION_17();
    *a2 = v7;
    a2[1] = v10;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A6016280@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return CloudCoverByAltitude.init(from:)(a1, a2);
}

uint64_t sub_1A6016294(_QWORD *a1)
{
  return CloudCoverByAltitude.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for CloudCoverByAltitude(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CloudCoverByAltitude(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CloudCoverByAltitude()
{
  return &type metadata for CloudCoverByAltitude;
}

uint64_t storeEnumTagSinglePayload for CloudCoverByAltitude.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A6016350 + 4 * byte_1A612A755[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A6016384 + 4 * byte_1A612A750[v4]))();
}

uint64_t sub_1A6016384(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A601638C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6016394);
  return result;
}

uint64_t sub_1A60163A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A60163A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A60163AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60163B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CloudCoverByAltitude.CodingKeys()
{
  return &type metadata for CloudCoverByAltitude.CodingKeys;
}

unint64_t sub_1A60163D4()
{
  unint64_t result;

  result = qword_1EE813A50;
  if (!qword_1EE813A50)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612A890, &type metadata for CloudCoverByAltitude.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813A50);
  }
  return result;
}

unint64_t sub_1A6016414()
{
  unint64_t result;

  result = qword_1EE813A58;
  if (!qword_1EE813A58)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612A800, &type metadata for CloudCoverByAltitude.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813A58);
  }
  return result;
}

unint64_t sub_1A6016454()
{
  unint64_t result;

  result = qword_1EE813A60;
  if (!qword_1EE813A60)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612A828, &type metadata for CloudCoverByAltitude.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813A60);
  }
  return result;
}

uint64_t static MonthlyWeatherStatisticsQuery.temperature.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  void (**v4)();

  v2 = OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_0_1(v2);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813A68);
  v4 = (void (**)())(a1 + *(int *)(result + 52));
  *v4 = sub_1A60164E0;
  v4[1] = 0;
  return result;
}

void sub_1A60164E0()
{
  sub_1A5FE7208();
  OUTLINED_FUNCTION_2_21();
}

uint64_t static MonthlyWeatherStatisticsQuery.precipitation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  void (**v4)();

  v2 = OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_0_1(v2);
  result = __swift_instantiateConcreteTypeFromMangledName(qword_1EE813A70);
  v4 = (void (**)())(a1 + *(int *)(result + 52));
  *v4 = sub_1A601654C;
  v4[1] = 0;
  return result;
}

void sub_1A601654C()
{
  sub_1A5FE7754();
  OUTLINED_FUNCTION_2_21();
}

uint64_t sub_1A6016568()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6016574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_1_17();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 52));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1A60165E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A60165F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_1_17();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  return result;
}

void type metadata accessor for MonthlyWeatherStatisticsQuery()
{
  JUMPOUT(0x1A85BB2E8);
}

void sub_1A6016670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  (*(void (**)(void))(v3 + *(int *)(a3 + 52)))();
  OUTLINED_FUNCTION_2_21();
}

uint64_t static Trend<>.mock(baselineKind:baselineValue:currentValue:deviation:baselineStartDate:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  return sub_1A60166CC(a1, a2, a3, a4, &qword_1ED192980, &qword_1EE812FC0, &qword_1ED191020, a5);
}

{
  return sub_1A60166CC(a1, a2, a3, a4, &qword_1ED192880, &qword_1EE812FB8, &qword_1ED191028, a5);
}

uint64_t sub_1A60166CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X5>, uint64_t *a6@<X6>, uint64_t *a7@<X7>, uint64_t a8@<X8>)
{
  char v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  v14 = *a3;
  v15 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(a8, a1, v15);
  v17 = a8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a6) + 32);
  v18 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, a4, v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(a7);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v16)(a8 + *(int *)(v19 + 28), a2, v15);
  *(_BYTE *)(a8 + *(int *)(v19 + 32)) = v14;
  return result;
}

uint64_t static WeatherQuery.current.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1ED193200, a1);
}

uint64_t static WeatherQuery.minute.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1ED191F40, a1);
}

uint64_t static WeatherQuery.hourly.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1ED1924F8, a1);
}

uint64_t static WeatherQuery.daily.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1ED1924F0, a1);
}

uint64_t static WeatherQuery.alerts.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1ED191CE0, a1);
}

uint64_t static WeatherQuery.availability.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1ED191CB8, a1);
}

uint64_t static WeatherQuery.airQuality.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1ED1922C8, a1);
}

uint64_t static WeatherQuery.historicalFacts.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1ED190AB8, a1);
}

uint64_t static WeatherQuery.locationInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1ED191E50, a1);
}

uint64_t static WeatherQuery.marineForecast.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1EE812E90, a1);
}

uint64_t static WeatherQuery.marineHourly.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1EE812E90, a1);
}

uint64_t static WeatherQuery.news.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1ED190CB0, a1);
}

uint64_t static WeatherQuery.tideEvents.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1EE813AF8, a1);
}

uint64_t static WeatherQuery.changes.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(qword_1ED1921F8, a1);
}

uint64_t static WeatherQuery.historicalComparisons.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A6016850(&qword_1ED191AD0, a1);
}

uint64_t sub_1A6016850@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_3_4(a2);
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_3_4(a2 + v4[7]);
  v5 = a2 + v4[8];
  *(_QWORD *)v5 = 0;
  *(_QWORD *)(v5 + 8) = 0;
  *(_BYTE *)(v5 + 16) = 1;
  OUTLINED_FUNCTION_14_18(a2 + v4[9]);
  v6 = a2 + v4[10];
  *(_QWORD *)v6 = 0;
  *(_QWORD *)(v6 + 8) = 0;
  *(_BYTE *)(v6 + 16) = v7;
  v8 = a2 + v4[11];
  v9 = OUTLINED_FUNCTION_4_17();
  return OUTLINED_FUNCTION_3_3(v8, 1, 1, v9);
}

void static WeatherQuery<A>.daily(startDate:endDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_17_10();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_29_0();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_7_22(v3, v4, v5, v6, v7, v8, v9, v10, v17);
  OUTLINED_FUNCTION_13_16();
  OUTLINED_FUNCTION_19_11();
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_20_0(v0, 0);
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1924F0);
  OUTLINED_FUNCTION_20_0(v0 + v11[7], 1);
  v12 = v0 + v11[11];
  v13 = OUTLINED_FUNCTION_4_17();
  OUTLINED_FUNCTION_21(v12, v14, v15, v13);
  v16 = v0 + v11[8];
  *(_QWORD *)v16 = 0;
  *(_QWORD *)(v16 + 8) = 0;
  *(_BYTE *)(v16 + 16) = 1;
  OUTLINED_FUNCTION_14_18(v0 + v11[9]);
  OUTLINED_FUNCTION_16_14(v11[10]);
  OUTLINED_FUNCTION_175();
}

void static WeatherQuery<A>.hourly(startDate:endDate:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_9_15();
  OUTLINED_FUNCTION_17_10();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_29_0();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_7_22(v3, v4, v5, v6, v7, v8, v9, v10, v20);
  OUTLINED_FUNCTION_13_16();
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1924F8);
  v12 = v0 + v11[7];
  OUTLINED_FUNCTION_19_11();
  v13 = OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_11_1(v0);
  __swift_storeEnumTagSinglePayload(v12, 0, 1, v13);
  v14 = v0 + v11[11];
  v15 = OUTLINED_FUNCTION_4_17();
  OUTLINED_FUNCTION_21(v14, v16, v17, v15);
  v18 = v0 + v11[8];
  *(_QWORD *)v18 = 0;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 1;
  v19 = v0 + v11[9];
  *(_QWORD *)v19 = 0;
  *(_QWORD *)(v19 + 8) = 0;
  *(_BYTE *)(v19 + 16) = 2;
  OUTLINED_FUNCTION_16_14(v11[10]);
  OUTLINED_FUNCTION_175();
}

void static WeatherQuery<A>.instants(spanning:stride:)(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE813B00) + 44);
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812E80) + 48);
  OUTLINED_FUNCTION_5_17();
  v6 = OUTLINED_FUNCTION_18_11();
  v7(v6);
  *(_QWORD *)v5 = v2;
  *(_BYTE *)(v5 + 8) = v3;
  OUTLINED_FUNCTION_4_17();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_175();
}

void static WeatherQuery<A>.instant(at:)()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813B08);
  sub_1A6121F58();
  v0 = OUTLINED_FUNCTION_18_11();
  v1(v0);
  OUTLINED_FUNCTION_4_17();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_3_8();
}

void static WeatherQuery<A>.daily(relativeTo:start:end:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v7 = OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_11_1(a3);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1924F0);
  v9 = OUTLINED_FUNCTION_1_21(v8);
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v9);
  v10 = a3 + *(int *)(v3 + 32);
  *(_QWORD *)v10 = a1;
  *(_QWORD *)(v10 + 8) = a2;
  *(_BYTE *)(v10 + 16) = 0;
  OUTLINED_FUNCTION_15_15(a3 + *(int *)(v3 + 36));
  *(_QWORD *)v11 = 0;
  *(_QWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 16) = v12;
  OUTLINED_FUNCTION_3_8();
}

void static WeatherQuery<A>.hourly(relativeTo:start:end:)(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *a1;
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_11_1(a4);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1924F8);
  v10 = OUTLINED_FUNCTION_1_21(v9);
  OUTLINED_FUNCTION_6_18(v10);
  *(_QWORD *)v11 = a2;
  *(_QWORD *)(v11 + 8) = a3;
  *(_BYTE *)(v11 + 16) = v8;
  OUTLINED_FUNCTION_14_18(a4 + *(int *)(v4 + 40));
  OUTLINED_FUNCTION_175();
}

void static WeatherQuery<A>.marineHourly(relativeTo:start:end:)(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = *a1;
  OUTLINED_FUNCTION_5_17();
  OUTLINED_FUNCTION_11_1(a4);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812E90);
  v9 = OUTLINED_FUNCTION_1_21(v8);
  OUTLINED_FUNCTION_6_18(v9);
  OUTLINED_FUNCTION_15_15(v10);
  *(_QWORD *)v11 = a2;
  *(_QWORD *)(v11 + 8) = a3;
  *(_BYTE *)(v11 + 16) = v7;
  OUTLINED_FUNCTION_175();
}

uint64_t *sub_1A6016CE4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t Options;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6121D24();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v10 = a3[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v10, 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    v14 = a3[8];
    v15 = a3[9];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    v18 = *(_OWORD *)v17;
    v16[16] = v17[16];
    *(_OWORD *)v16 = v18;
    v19 = (char *)a1 + v15;
    v20 = (char *)a2 + v15;
    *(_OWORD *)v19 = *(_OWORD *)v20;
    v19[16] = v20[16];
    v21 = a3[10];
    v22 = a3[11];
    v23 = (char *)a1 + v21;
    v24 = (char *)a2 + v21;
    *(_OWORD *)v23 = *(_OWORD *)v24;
    v23[16] = v24[16];
    v25 = (char *)a1 + v22;
    v26 = (char *)a2 + v22;
    Options = type metadata accessor for InstantWeatherQueryOptions();
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, Options))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192EB8);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v25, v26, v7);
        v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812E80) + 48);
        v30 = &v25[v29];
        v31 = &v26[v29];
        *(_QWORD *)v30 = *(_QWORD *)v31;
        v30[8] = v31[8];
      }
      else
      {
        v32 = sub_1A6121F58();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v25, v26, v32);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, Options);
    }
  }
  return a1;
}

uint64_t sub_1A6016F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Options;
  uint64_t result;

  v4 = sub_1A6121D24();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 28);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v5, v4);
  v6 = a1 + *(int *)(a2 + 44);
  Options = type metadata accessor for InstantWeatherQueryOptions();
  result = __swift_getEnumTagSinglePayload(v6, 1, Options);
  if (!(_DWORD)result)
  {
    if (swift_getEnumCaseMultiPayload() != 1)
      v4 = sub_1A6121F58();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v6, v4);
  }
  return result;
}

char *sub_1A6017058(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t Options;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = sub_1A6121D24();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[7];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[8];
  v13 = a3[9];
  v14 = &a1[v12];
  v15 = &a2[v12];
  v16 = *(_OWORD *)v15;
  v14[16] = v15[16];
  *(_OWORD *)v14 = v16;
  v17 = &a1[v13];
  v18 = &a2[v13];
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v17[16] = v18[16];
  v19 = a3[10];
  v20 = a3[11];
  v21 = &a1[v19];
  v22 = &a2[v19];
  *(_OWORD *)v21 = *(_OWORD *)v22;
  v21[16] = v22[16];
  v23 = &a1[v20];
  v24 = &a2[v20];
  Options = type metadata accessor for InstantWeatherQueryOptions();
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, Options))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192EB8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v23, v24, v6);
      v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812E80) + 48);
      v28 = &v23[v27];
      v29 = &v24[v27];
      *(_QWORD *)v28 = *(_QWORD *)v29;
      v28[8] = v29[8];
    }
    else
    {
      v30 = sub_1A6121F58();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v23, v24, v30);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, Options);
  }
  return a1;
}

char *sub_1A60172AC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t Options;
  int v34;
  int v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;

  v6 = sub_1A6121D24();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v12, v13, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v16 = *(_QWORD *)(v6 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
LABEL_13:
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *(_OWORD *)v20;
  v19[16] = v20[16];
  *(_OWORD *)v19 = v21;
  v22 = a3[9];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *(_OWORD *)v24;
  v23[16] = v24[16];
  *(_OWORD *)v23 = v25;
  v26 = a3[10];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = *(_OWORD *)v28;
  v27[16] = v28[16];
  *(_OWORD *)v27 = v29;
  v30 = a3[11];
  v31 = &a1[v30];
  v32 = &a2[v30];
  Options = type metadata accessor for InstantWeatherQueryOptions();
  v34 = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, Options);
  v35 = __swift_getEnumTagSinglePayload((uint64_t)v32, 1, Options);
  if (v34)
  {
    if (!v35)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v31, v32, v6);
        v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812E80) + 48);
        v37 = &v31[v36];
        v38 = &v32[v36];
        v39 = v38[8];
        *(_QWORD *)v37 = *(_QWORD *)v38;
        v37[8] = v39;
      }
      else
      {
        v45 = sub_1A6121F58();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v31, v32, v45);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, Options);
      return a1;
    }
LABEL_19:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192EB8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    return a1;
  }
  if (v35)
  {
    sub_1A5FFD440((uint64_t)v31);
    goto LABEL_19;
  }
  if (a1 != a2)
  {
    sub_1A5FFD440((uint64_t)v31);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v31, v32, v6);
      v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812E80) + 48);
      v42 = &v31[v41];
      v43 = &v32[v41];
      v44 = v43[8];
      *(_QWORD *)v42 = *(_QWORD *)v43;
      v42[8] = v44;
    }
    else
    {
      v46 = sub_1A6121F58();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v31, v32, v46);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1A601766C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t Options;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = sub_1A6121D24();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[7];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[8];
  v13 = a3[9];
  v14 = &a1[v12];
  v15 = &a2[v12];
  v16 = *(_OWORD *)v15;
  v14[16] = v15[16];
  *(_OWORD *)v14 = v16;
  v17 = &a1[v13];
  v18 = &a2[v13];
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v17[16] = v18[16];
  v19 = a3[10];
  v20 = a3[11];
  v21 = &a1[v19];
  v22 = &a2[v19];
  *(_OWORD *)v21 = *(_OWORD *)v22;
  v21[16] = v22[16];
  v23 = &a1[v20];
  v24 = &a2[v20];
  Options = type metadata accessor for InstantWeatherQueryOptions();
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, Options))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192EB8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v23, v24, v6);
      v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812E80) + 48);
      v28 = &v23[v27];
      v29 = &v24[v27];
      *(_QWORD *)v28 = *(_QWORD *)v29;
      v28[8] = v29[8];
    }
    else
    {
      v30 = sub_1A6121F58();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v23, v24, v30);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, Options);
  }
  return a1;
}

char *sub_1A60178C0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t Options;
  int v32;
  int v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v6 = sub_1A6121D24();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v12, v13, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v16 = *(_QWORD *)(v6 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
LABEL_13:
  v18 = a3[8];
  v19 = a3[9];
  v20 = &a1[v18];
  v21 = &a2[v18];
  v22 = *(_OWORD *)v21;
  v20[16] = v21[16];
  *(_OWORD *)v20 = v22;
  v23 = &a1[v19];
  v24 = &a2[v19];
  *(_OWORD *)v23 = *(_OWORD *)v24;
  v23[16] = v24[16];
  v25 = a3[10];
  v26 = a3[11];
  v27 = &a1[v25];
  v28 = &a2[v25];
  *(_OWORD *)v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  v29 = &a1[v26];
  v30 = &a2[v26];
  Options = type metadata accessor for InstantWeatherQueryOptions();
  v32 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, Options);
  v33 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, Options);
  if (v32)
  {
    if (!v33)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v29, v30, v6);
        v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812E80) + 48);
        v35 = &v29[v34];
        v36 = &v30[v34];
        *(_QWORD *)v35 = *(_QWORD *)v36;
        v35[8] = v36[8];
      }
      else
      {
        v41 = sub_1A6121F58();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v29, v30, v41);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, Options);
      return a1;
    }
LABEL_19:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192EB8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    return a1;
  }
  if (v33)
  {
    sub_1A5FFD440((uint64_t)v29);
    goto LABEL_19;
  }
  if (a1 != a2)
  {
    sub_1A5FFD440((uint64_t)v29);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v29, v30, v6);
      v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812E80) + 48);
      v39 = &v29[v38];
      v40 = &v30[v38];
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v39[8] = v40[8];
    }
    else
    {
      v42 = sub_1A6121F58();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v29, v30, v42);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A6017C78()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6017C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if ((_DWORD)a2 != 253)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192EB8);
    v8 = a1 + *(int *)(a3 + 44);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 36) + 16) <= 2u)
    v9 = 2;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36) + 16);
  v10 = v9 - 2;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 36) + 16) >= 2u)
    return v10;
  else
    return 0;
}

uint64_t sub_1A6017D30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1;
  }
  else
  {
    if (a3 == 253)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 36) + 16) = a2 + 2;
      return result;
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192EB8);
    v10 = a1 + *(int *)(a4 + 44);
  }
  return OUTLINED_FUNCTION_3_3(v10, a2, a2, v9);
}

void HistoricalComparison.isDeviatingFromTrend.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191020);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191028);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0();
  type metadata accessor for HistoricalComparison();
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_54_0();
  sub_1A6017F50(v0, v1);
  v5 = (char *)sub_1A6017E9C + 4 * byte_1A612A990[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_1A6017E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  sub_1A5FAA1A8(v2, v1, &qword_1ED191028);
  v3 = *(unsigned __int8 *)(v1 + *(int *)(v0 + 32));
  sub_1A5FBC9D8(v1, &qword_1ED191028);
  return v3 != 2;
}

uint64_t type metadata accessor for HistoricalComparison()
{
  uint64_t result;

  result = qword_1ED191C58;
  if (!qword_1ED191C58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A6017F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HistoricalComparison();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void static HistoricalComparison.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD v20[6];

  v20[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191020);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_151();
  v20[5] = v6;
  MEMORY[0x1E0C80A78](v7);
  v20[4] = (char *)v20 - v8;
  v20[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191028);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_23();
  MEMORY[0x1E0C80A78](v10);
  v20[3] = (char *)v20 - v11;
  type metadata accessor for HistoricalComparison();
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_23();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_35_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_34_6();
  MEMORY[0x1E0C80A78](v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813B10);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_70();
  v18 = v2 + *(int *)(v17 + 48);
  sub_1A6017F50(a1, v2);
  sub_1A6017F50(a2, v18);
  v19 = (char *)sub_1A6018130 + 4 * byte_1A612A994[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A6018130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1A6017F50(v0, v1);
  if (OUTLINED_FUNCTION_8_16())
  {
    sub_1A5FBC9D8(v1, &qword_1ED191028);
    sub_1A5FBC9D8(v0, &qword_1EE813B10);
    return 0;
  }
  v5 = *(_QWORD *)(v3 - 104);
  sub_1A5FAA1A8(v2, v5, &qword_1ED191028);
  OUTLINED_FUNCTION_18_12(v6, qword_1ED1927C0);
  if ((OUTLINED_FUNCTION_16_15() & 1) == 0
    || (__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FB8), (sub_1A6121F1C() & 1) == 0)
    || (OUTLINED_FUNCTION_16_15() & 1) == 0
    || (v7 = *(int *)(*(_QWORD *)(v3 - 120) + 32), *(unsigned __int8 *)(v1 + v7) != *(unsigned __int8 *)(v5 + v7)))
  {
    OUTLINED_FUNCTION_24_11();
    sub_1A5FBC9D8(v1, &qword_1ED191028);
    sub_1A6018508(v0);
    return 0;
  }
  OUTLINED_FUNCTION_24_11();
  sub_1A5FBC9D8(v1, &qword_1ED191028);
  sub_1A6018508(v0);
  return 1;
}

uint64_t sub_1A6018508(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HistoricalComparison();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A6018544(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x706D655468676968 && a2 == 0xEF65727574617265;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65706D6554776F6CLL && a2 == 0xEE00657275746172;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001A6141620 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x6C6C6166776F6E73 && a2 == 0xEE00746E756F6D41)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v8 = sub_1A6123CF8();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_1A6018758(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6018798 + 4 * byte_1A612A998[a1]))(0x706D655468676968, 0xEF65727574617265);
}

uint64_t sub_1A6018798()
{
  return 0x65706D6554776F6CLL;
}

unint64_t sub_1A60187BC()
{
  return 0xD000000000000013;
}

uint64_t sub_1A60187D8()
{
  return 0x6C6C6166776F6E73;
}

uint64_t sub_1A60187FC()
{
  return 12383;
}

uint64_t sub_1A6018808(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1A6123CF8();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1A6018874()
{
  sub_1A6123D64();
  OUTLINED_FUNCTION_31_7();
  sub_1A6123D88();
  OUTLINED_FUNCTION_16();
}

uint64_t sub_1A60188A4()
{
  unsigned __int8 *v0;

  return sub_1A6018758(*v0);
}

uint64_t sub_1A60188AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6018544(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A60188D0()
{
  sub_1A6018F90();
  return sub_1A6123DE8();
}

uint64_t sub_1A60188F8()
{
  sub_1A6018F90();
  return sub_1A6123DF4();
}

void sub_1A6018920()
{
  sub_1A6018874();
}

uint64_t sub_1A601893C()
{
  sub_1A6019080();
  return sub_1A6123DE8();
}

uint64_t sub_1A6018964()
{
  sub_1A6019080();
  return sub_1A6123DF4();
}

uint64_t sub_1A601898C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6018808(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A60189B4()
{
  sub_1A6019044();
  return sub_1A6123DE8();
}

uint64_t sub_1A60189DC()
{
  sub_1A6019044();
  return sub_1A6123DF4();
}

uint64_t sub_1A6018A04()
{
  sub_1A6019008();
  return sub_1A6123DE8();
}

uint64_t sub_1A6018A2C()
{
  sub_1A6019008();
  return sub_1A6123DF4();
}

void sub_1A6018A54()
{
  sub_1A6123D64();
  OUTLINED_FUNCTION_31_7();
  sub_1A6123D88();
  OUTLINED_FUNCTION_16();
}

uint64_t sub_1A6018A80()
{
  sub_1A6018FCC();
  return sub_1A6123DE8();
}

uint64_t sub_1A6018AA8()
{
  sub_1A6018FCC();
  return sub_1A6123DF4();
}

void HistoricalComparison.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26[20];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813B18);
  v26[12] = *(_QWORD *)(v2 - 8);
  v26[13] = v2;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_13_2(v4, v26[0]);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813B20);
  v26[9] = *(_QWORD *)(v5 - 8);
  v26[10] = v5;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_0();
  v26[8] = v7;
  v26[15] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191020);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_151();
  v26[7] = v9;
  MEMORY[0x1E0C80A78](v10);
  v26[6] = (uint64_t)v26 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813B28);
  v26[4] = *(_QWORD *)(v12 - 8);
  v26[5] = v12;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_11_0();
  v26[3] = v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813B30);
  v26[1] = *(_QWORD *)(v15 - 8);
  v26[2] = v15;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_70();
  v26[14] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191028);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_23();
  MEMORY[0x1E0C80A78](v18);
  type metadata accessor for HistoricalComparison();
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_0();
  v22 = v21 - v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813B38);
  v26[16] = *(_QWORD *)(v23 - 8);
  v26[17] = v23;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_54_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6018F90();
  sub_1A6123DD0();
  sub_1A6017F50(v26[19], v22);
  v25 = (char *)sub_1A6018D04 + 4 * byte_1A612A99C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1A6018D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1A5FAA1A8(v2, v3, &qword_1ED191028);
  *(_BYTE *)(v4 - 68) = 0;
  sub_1A6019080();
  v5 = *(_QWORD *)(v4 - 104);
  OUTLINED_FUNCTION_7_23();
  sub_1A60197B8(&qword_1EE813B68, &qword_1ED191028, (uint64_t)&protocol conformance descriptor for Trend<A>);
  v6 = *(_QWORD *)(v4 - 224);
  OUTLINED_FUNCTION_17_11();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 232) + 8))(v0, v6);
  sub_1A5FBC9D8(v3, &qword_1ED191028);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v1, v5);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A6018F90()
{
  unint64_t result;

  result = qword_1EE813B40;
  if (!qword_1EE813B40)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AFE4, &type metadata for HistoricalComparison.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813B40);
  }
  return result;
}

unint64_t sub_1A6018FCC()
{
  unint64_t result;

  result = qword_1EE813B48;
  if (!qword_1EE813B48)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AF94, &type metadata for HistoricalComparison.SnowfallAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813B48);
  }
  return result;
}

unint64_t sub_1A6019008()
{
  unint64_t result;

  result = qword_1EE813B58;
  if (!qword_1EE813B58)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AF44, &type metadata for HistoricalComparison.PrecipitationAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813B58);
  }
  return result;
}

unint64_t sub_1A6019044()
{
  unint64_t result;

  result = qword_1EE813B60;
  if (!qword_1EE813B60)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AEF4, &type metadata for HistoricalComparison.LowTemperatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813B60);
  }
  return result;
}

unint64_t sub_1A6019080()
{
  unint64_t result;

  result = qword_1EE813B70;
  if (!qword_1EE813B70)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AEA4, &type metadata for HistoricalComparison.HighTemperatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813B70);
  }
  return result;
}

void HistoricalComparison.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48[19];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;

  v48[14] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813B78);
  v48[12] = *(_QWORD *)(v5 - 8);
  v48[13] = v5;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_0();
  v48[18] = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813B80);
  v48[10] = *(_QWORD *)(v8 - 8);
  v48[11] = v8;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_13_2(v10, v48[0]);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813B88);
  v48[8] = *(_QWORD *)(v11 - 8);
  v48[9] = v11;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_11_0();
  v48[16] = v13;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813B90);
  v48[7] = *(_QWORD *)(v51 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_11_0();
  v48[15] = v15;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813B98);
  v49 = *(_QWORD *)(v52 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_0();
  v19 = v18 - v17;
  v50 = type metadata accessor for HistoricalComparison();
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_23();
  v23 = v21 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v48 - v25;
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_35_0();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_34_6();
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v48 - v30;
  v32 = a1[3];
  v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v32);
  sub_1A6018F90();
  v33 = v54;
  sub_1A6123DC4();
  if (!v33)
  {
    v48[2] = v2;
    v48[3] = (uint64_t)v26;
    v48[4] = v23;
    v48[5] = v3;
    v34 = v50;
    v48[6] = (uint64_t)v31;
    v35 = sub_1A6123C50();
    v36 = *(_QWORD *)(v35 + 16);
    if (v36)
    {
      v54 = 0;
      v37 = *(unsigned __int8 *)(v35 + 32);
      v38 = sub_1A5FF62F0(1, v36, v35, v35 + 32, 0, (2 * v36) | 1);
      v40 = v39;
      v42 = v41;
      swift_bridgeObjectRelease();
      if (v40 == v42 >> 1)
      {
        v48[1] = v38;
        __asm { BR              X9 }
      }
    }
    v43 = v19;
    v44 = sub_1A6123B48();
    swift_allocError();
    v46 = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8134C8);
    *v46 = v34;
    v47 = v52;
    sub_1A6123BCC();
    sub_1A6123B3C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v46, *MEMORY[0x1E0DEC450], v44);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v43, v47);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  OUTLINED_FUNCTION_20();
}

void sub_1A6019748(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  HistoricalComparison.init(from:)(a1, a2);
}

void sub_1A601975C(_QWORD *a1)
{
  HistoricalComparison.encode(to:)(a1);
}

uint64_t sub_1A6019774(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HistoricalComparison();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1A60197B8(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x1A85BB36C](a3, v5), a1);
  }
  OUTLINED_FUNCTION_51();
}

uint64_t initializeBufferWithCopyOfBuffer for HistoricalComparison(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1A601984C + 4 * byte_1A612A9A4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for HistoricalComparison(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v10(a1, v3);
      v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FB8) + 32);
      v5 = sub_1A6121F58();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      v6 = &qword_1ED191028;
      goto LABEL_4;
    case 2:
    case 3:
      v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v10(a1, v3);
      v7 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FC0) + 32);
      v8 = sub_1A6121F58();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      v6 = &qword_1ED191020;
LABEL_4:
      v9 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v6) + 28);
      result = ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v3);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for HistoricalComparison()
{
  char *v0;

  v0 = (char *)sub_1A6019CA0 + 4 * byte_1A612A9AC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A6019CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16);
  v3(v0, v1, v2);
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FB8) + 32);
  v5 = v0 + v4;
  v6 = v1 + v4;
  v7 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191028);
  v3(v0 + *(int *)(v8 + 28), v1 + *(int *)(v8 + 28), v2);
  *(_BYTE *)(v0 + *(int *)(v8 + 32)) = *(_BYTE *)(v1 + *(int *)(v8 + 32));
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for HistoricalComparison(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1A6018508(result);
    v2 = (char *)&loc_1A6019E28 + 4 * byte_1A612A9B0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for HistoricalComparison()
{
  char *v0;

  v0 = (char *)sub_1A6019FA0 + 4 * byte_1A612A9B4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A6019FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32);
  v3(v0, v1, v2);
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FB8) + 32);
  v5 = v0 + v4;
  v6 = v1 + v4;
  v7 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191028);
  v3(v0 + *(int *)(v8 + 28), v1 + *(int *)(v8 + 28), v2);
  *(_BYTE *)(v0 + *(int *)(v8 + 32)) = *(_BYTE *)(v1 + *(int *)(v8 + 32));
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for HistoricalComparison(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1A6018508(result);
    v2 = (char *)&loc_1A601A128 + 4 * byte_1A612A9B8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1A601A250()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A5FC0AAC(319, &qword_1ED1926F0, qword_1ED1927C0);
  if (v0 <= 0x3F)
  {
    sub_1A5FC0AAC(319, &qword_1ED1926E8, (unint64_t *)&qword_1ED193C60);
    if (v1 <= 0x3F)
      swift_initEnumMetadataMultiPayload();
  }
}

uint64_t storeEnumTagSinglePayload for HistoricalComparison.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A601A34C + 4 * byte_1A612A9C1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A601A380 + 4 * byte_1A612A9BC[v4]))();
}

uint64_t sub_1A601A380(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A601A388(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A601A390);
  return result;
}

uint64_t sub_1A601A39C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A601A3A4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A601A3A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A601A3B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HistoricalComparison.CodingKeys()
{
  return &type metadata for HistoricalComparison.CodingKeys;
}

ValueMetadata *type metadata accessor for HistoricalComparison.HighTemperatureCodingKeys()
{
  return &type metadata for HistoricalComparison.HighTemperatureCodingKeys;
}

ValueMetadata *type metadata accessor for HistoricalComparison.LowTemperatureCodingKeys()
{
  return &type metadata for HistoricalComparison.LowTemperatureCodingKeys;
}

ValueMetadata *type metadata accessor for HistoricalComparison.PrecipitationAmountCodingKeys()
{
  return &type metadata for HistoricalComparison.PrecipitationAmountCodingKeys;
}

uint64_t _s10WeatherKit20HistoricalComparisonO25HighTemperatureCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A601A444 + 4 * byte_1A612A9C6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A601A464 + 4 * byte_1A612A9CB[v4]))();
}

_BYTE *sub_1A601A444(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A601A464(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A601A46C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A601A474(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A601A47C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A601A484(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HistoricalComparison.SnowfallAmountCodingKeys()
{
  return &type metadata for HistoricalComparison.SnowfallAmountCodingKeys;
}

unint64_t sub_1A601A4A4()
{
  unint64_t result;

  result = qword_1EE813BB0;
  if (!qword_1EE813BB0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AB9C, &type metadata for HistoricalComparison.SnowfallAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813BB0);
  }
  return result;
}

unint64_t sub_1A601A4E4()
{
  unint64_t result;

  result = qword_1EE813BB8;
  if (!qword_1EE813BB8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AC54, &type metadata for HistoricalComparison.PrecipitationAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813BB8);
  }
  return result;
}

unint64_t sub_1A601A524()
{
  unint64_t result;

  result = qword_1EE813BC0;
  if (!qword_1EE813BC0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AD0C, &type metadata for HistoricalComparison.LowTemperatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813BC0);
  }
  return result;
}

unint64_t sub_1A601A564()
{
  unint64_t result;

  result = qword_1EE813BC8;
  if (!qword_1EE813BC8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612ADC4, &type metadata for HistoricalComparison.HighTemperatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813BC8);
  }
  return result;
}

unint64_t sub_1A601A5A4()
{
  unint64_t result;

  result = qword_1EE813BD0;
  if (!qword_1EE813BD0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AE7C, &type metadata for HistoricalComparison.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813BD0);
  }
  return result;
}

unint64_t sub_1A601A5E4()
{
  unint64_t result;

  result = qword_1EE813BD8;
  if (!qword_1EE813BD8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AD34, &type metadata for HistoricalComparison.HighTemperatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813BD8);
  }
  return result;
}

unint64_t sub_1A601A624()
{
  unint64_t result;

  result = qword_1EE813BE0;
  if (!qword_1EE813BE0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AD5C, &type metadata for HistoricalComparison.HighTemperatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813BE0);
  }
  return result;
}

unint64_t sub_1A601A664()
{
  unint64_t result;

  result = qword_1EE813BE8;
  if (!qword_1EE813BE8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AC7C, &type metadata for HistoricalComparison.LowTemperatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813BE8);
  }
  return result;
}

unint64_t sub_1A601A6A4()
{
  unint64_t result;

  result = qword_1EE813BF0;
  if (!qword_1EE813BF0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612ACA4, &type metadata for HistoricalComparison.LowTemperatureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813BF0);
  }
  return result;
}

unint64_t sub_1A601A6E4()
{
  unint64_t result;

  result = qword_1EE813BF8;
  if (!qword_1EE813BF8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612ABC4, &type metadata for HistoricalComparison.PrecipitationAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813BF8);
  }
  return result;
}

unint64_t sub_1A601A724()
{
  unint64_t result;

  result = qword_1EE813C00;
  if (!qword_1EE813C00)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612ABEC, &type metadata for HistoricalComparison.PrecipitationAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813C00);
  }
  return result;
}

unint64_t sub_1A601A764()
{
  unint64_t result;

  result = qword_1EE813C08;
  if (!qword_1EE813C08)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AB0C, &type metadata for HistoricalComparison.SnowfallAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813C08);
  }
  return result;
}

unint64_t sub_1A601A7A4()
{
  unint64_t result;

  result = qword_1EE813C10;
  if (!qword_1EE813C10)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AB34, &type metadata for HistoricalComparison.SnowfallAmountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813C10);
  }
  return result;
}

unint64_t sub_1A601A7E4()
{
  unint64_t result;

  result = qword_1EE813C18;
  if (!qword_1EE813C18)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612ADEC, &type metadata for HistoricalComparison.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813C18);
  }
  return result;
}

unint64_t sub_1A601A824()
{
  unint64_t result;

  result = qword_1EE813C20;
  if (!qword_1EE813C20)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612AE14, &type metadata for HistoricalComparison.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813C20);
  }
  return result;
}

uint64_t sub_1A601A864(uint64_t a1)
{
  return sub_1A5FC00DC(a1, qword_1EE844F30);
}

#error "1A601AA1C: call analysis failed (funcsize=122)"

uint64_t type metadata accessor for NextHourData()
{
  uint64_t result;

  result = qword_1ED194AC8;
  if (!qword_1ED194AC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A601AACC(uint64_t a1, uint64_t a2)
{
  uint64_t HourData;

  HourData = type metadata accessor for NextHourData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(HourData - 8) + 16))(a2, a1, HourData);
  return a2;
}

uint64_t sub_1A601AB10(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194A38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void NextHourData.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t HourPrecipitation;
  uint64_t v16;
  char v17;

  HourPrecipitation = type metadata accessor for NextHourPrecipitation();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_0();
  v7 = v6 - v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813C28);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0();
  type metadata accessor for NextHourData();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_7();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A601AD5C();
  sub_1A6123DC4();
  if (!v16)
  {
    sub_1A601AD98();
    OUTLINED_FUNCTION_9_17();
    if (v17)
    {
      v10 = HourPrecipitation;
      OUTLINED_FUNCTION_1_23();
      if (v17 == 1)
        v11 = 1;
      else
        v11 = 2;
      v12 = a2;
    }
    else
    {
      sub_1A601B058(&qword_1EE813C38, (uint64_t)&protocol conformance descriptor for NextHourPrecipitation);
      v13 = v7;
      v10 = HourPrecipitation;
      OUTLINED_FUNCTION_9_17();
      OUTLINED_FUNCTION_1_23();
      sub_1A601ADD4(v13, v2, (uint64_t (*)(_QWORD))type metadata accessor for NextHourPrecipitation);
      v11 = 0;
      v12 = a2;
    }
    __swift_storeEnumTagSinglePayload(v2, v11, 2, v10);
    sub_1A601ADD4(v2, v12, (uint64_t (*)(_QWORD))type metadata accessor for NextHourData);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A601AD5C()
{
  unint64_t result;

  result = qword_1ED194A40;
  if (!qword_1ED194A40)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B2D4, &type metadata for NextHourData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED194A40);
  }
  return result;
}

unint64_t sub_1A601AD98()
{
  unint64_t result;

  result = qword_1EE813C30;
  if (!qword_1EE813C30)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B2AC, &type metadata for NextHourData.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EE813C30);
  }
  return result;
}

void sub_1A601ADD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  OUTLINED_FUNCTION_51();
}

void NextHourData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t HourPrecipitation;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = v1;
  HourPrecipitation = type metadata accessor for NextHourPrecipitation();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_7();
  type metadata accessor for NextHourData();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_0();
  v12 = v11 - v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194A48);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_12();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A601AD5C();
  sub_1A6123DD0();
  sub_1A601AACC(v5, v12);
  if (__swift_getEnumTagSinglePayload(v12, 2, HourPrecipitation))
  {
    sub_1A601B01C();
    OUTLINED_FUNCTION_8_17();
  }
  else
  {
    sub_1A601ADD4(v12, v4, (uint64_t (*)(_QWORD))type metadata accessor for NextHourPrecipitation);
    sub_1A601B01C();
    OUTLINED_FUNCTION_8_17();
    if (!v2)
    {
      sub_1A601B058(&qword_1EE813C40, (uint64_t)&protocol conformance descriptor for NextHourPrecipitation);
      sub_1A6123CC8();
    }
    sub_1A5FAD104(v4, (uint64_t (*)(_QWORD))type metadata accessor for NextHourPrecipitation);
  }
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v3, v13);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A601B01C()
{
  unint64_t result;

  result = qword_1ED194A50;
  if (!qword_1ED194A50)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B284, &type metadata for NextHourData.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED194A50);
  }
  return result;
}

void sub_1A601B058(unint64_t *a1, uint64_t a2)
{
  uint64_t HourPrecipitation;

  if (!*a1)
  {
    HourPrecipitation = type metadata accessor for NextHourPrecipitation();
    atomic_store(MEMORY[0x1A85BB36C](a2, HourPrecipitation), a1);
  }
  OUTLINED_FUNCTION_51();
}

uint64_t sub_1A601B094()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1A6123BB4();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1A601B0E8()
{
  unint64_t v0;

  v0 = sub_1A6123BB4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1A601B130(char a1)
{
  if (!a1)
    return 0x6C62616C69617661;
  if (a1 == 1)
    return 0xD000000000000016;
  return 0x726F707075736E75;
}

void sub_1A601B198()
{
  sub_1A6105790();
}

uint64_t sub_1A601B1A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A601B094();
  *a1 = result;
  return result;
}

uint64_t sub_1A601B1CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A601B0E4();
  *a1 = result;
  return result;
}

uint64_t sub_1A601B1F0()
{
  sub_1A601AD5C();
  return sub_1A6123DE8();
}

uint64_t sub_1A601B218()
{
  sub_1A601AD5C();
  return sub_1A6123DF4();
}

uint64_t sub_1A601B240(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A5FCF518(*a1, *a2);
}

void sub_1A601B24C()
{
  sub_1A61057AC();
}

uint64_t sub_1A601B254(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A60024D4(a1, *v1);
}

uint64_t sub_1A601B25C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A6105AA8(a1, *v1);
}

uint64_t sub_1A601B264@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A601B0E8();
  *a1 = result;
  return result;
}

uint64_t sub_1A601B290@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A601B130(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A601B2B8()
{
  sub_1A601BE40();
  return sub_1A61238B4();
}

uint64_t sub_1A601B314()
{
  sub_1A601BE40();
  return sub_1A612389C();
}

void sub_1A601B360(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  NextHourData.init(from:)(a1, a2);
}

void sub_1A601B374(_QWORD *a1)
{
  NextHourData.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for NextHourData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int *HourPrecipitation;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *, uint64_t *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    HourPrecipitation = (int *)type metadata accessor for NextHourPrecipitation();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)HourPrecipitation))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_1A6121F58();
      v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      v10(a1, a2, v9);
      v10((uint64_t *)((char *)a1 + HourPrecipitation[5]), (uint64_t *)((char *)a2 + HourPrecipitation[5]), v9);
      *(uint64_t *)((char *)a1 + HourPrecipitation[6]) = *(uint64_t *)((char *)a2 + HourPrecipitation[6]);
      *(uint64_t *)((char *)a1 + HourPrecipitation[7]) = *(uint64_t *)((char *)a2 + HourPrecipitation[7]);
      *(uint64_t *)((char *)a1 + HourPrecipitation[8]) = *(uint64_t *)((char *)a2 + HourPrecipitation[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)HourPrecipitation);
    }
  }
  return a1;
}

uint64_t destroy for NextHourData(uint64_t a1)
{
  uint64_t HourPrecipitation;
  uint64_t result;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  HourPrecipitation = type metadata accessor for NextHourPrecipitation();
  result = __swift_getEnumTagSinglePayload(a1, 2, HourPrecipitation);
  if (!(_DWORD)result)
  {
    v4 = sub_1A6121F58();
    v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v5(a1, v4);
    v5(a1 + *(int *)(HourPrecipitation + 20), v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for NextHourData(char *a1, char *a2, uint64_t a3)
{
  int *HourPrecipitation;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  HourPrecipitation = (int *)type metadata accessor for NextHourPrecipitation();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)HourPrecipitation))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1A6121F58();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8(&a1[HourPrecipitation[5]], &a2[HourPrecipitation[5]], v7);
    *(_QWORD *)&a1[HourPrecipitation[6]] = *(_QWORD *)&a2[HourPrecipitation[6]];
    *(_QWORD *)&a1[HourPrecipitation[7]] = *(_QWORD *)&a2[HourPrecipitation[7]];
    *(_QWORD *)&a1[HourPrecipitation[8]] = *(_QWORD *)&a2[HourPrecipitation[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)HourPrecipitation);
  }
  return a1;
}

char *assignWithCopy for NextHourData(char *a1, char *a2, uint64_t a3)
{
  int *HourPrecipitation;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  HourPrecipitation = (int *)type metadata accessor for NextHourPrecipitation();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)HourPrecipitation);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)HourPrecipitation);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v12 = sub_1A6121F58();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24);
      v13(a1, a2, v12);
      v13(&a1[HourPrecipitation[5]], &a2[HourPrecipitation[5]], v12);
      *(_QWORD *)&a1[HourPrecipitation[6]] = *(_QWORD *)&a2[HourPrecipitation[6]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&a1[HourPrecipitation[7]] = *(_QWORD *)&a2[HourPrecipitation[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&a1[HourPrecipitation[8]] = *(_QWORD *)&a2[HourPrecipitation[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A5FAD104((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for NextHourPrecipitation);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1A6121F58();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(a1, a2, v9);
  v10(&a1[HourPrecipitation[5]], &a2[HourPrecipitation[5]], v9);
  *(_QWORD *)&a1[HourPrecipitation[6]] = *(_QWORD *)&a2[HourPrecipitation[6]];
  *(_QWORD *)&a1[HourPrecipitation[7]] = *(_QWORD *)&a2[HourPrecipitation[7]];
  *(_QWORD *)&a1[HourPrecipitation[8]] = *(_QWORD *)&a2[HourPrecipitation[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)HourPrecipitation);
  return a1;
}

char *initializeWithTake for NextHourData(char *a1, char *a2, uint64_t a3)
{
  int *HourPrecipitation;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  HourPrecipitation = (int *)type metadata accessor for NextHourPrecipitation();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)HourPrecipitation))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1A6121F58();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    v8(&a1[HourPrecipitation[5]], &a2[HourPrecipitation[5]], v7);
    *(_QWORD *)&a1[HourPrecipitation[6]] = *(_QWORD *)&a2[HourPrecipitation[6]];
    *(_QWORD *)&a1[HourPrecipitation[7]] = *(_QWORD *)&a2[HourPrecipitation[7]];
    *(_QWORD *)&a1[HourPrecipitation[8]] = *(_QWORD *)&a2[HourPrecipitation[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)HourPrecipitation);
  }
  return a1;
}

char *assignWithTake for NextHourData(char *a1, char *a2, uint64_t a3)
{
  int *HourPrecipitation;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  HourPrecipitation = (int *)type metadata accessor for NextHourPrecipitation();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, (uint64_t)HourPrecipitation);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, (uint64_t)HourPrecipitation);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v12 = sub_1A6121F58();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40);
      v13(a1, a2, v12);
      v13(&a1[HourPrecipitation[5]], &a2[HourPrecipitation[5]], v12);
      *(_QWORD *)&a1[HourPrecipitation[6]] = *(_QWORD *)&a2[HourPrecipitation[6]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&a1[HourPrecipitation[7]] = *(_QWORD *)&a2[HourPrecipitation[7]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&a1[HourPrecipitation[8]] = *(_QWORD *)&a2[HourPrecipitation[8]];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A5FAD104((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for NextHourPrecipitation);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1A6121F58();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(a1, a2, v9);
  v10(&a1[HourPrecipitation[5]], &a2[HourPrecipitation[5]], v9);
  *(_QWORD *)&a1[HourPrecipitation[6]] = *(_QWORD *)&a2[HourPrecipitation[6]];
  *(_QWORD *)&a1[HourPrecipitation[7]] = *(_QWORD *)&a2[HourPrecipitation[7]];
  *(_QWORD *)&a1[HourPrecipitation[8]] = *(_QWORD *)&a2[HourPrecipitation[8]];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, (uint64_t)HourPrecipitation);
  return a1;
}

uint64_t getEnumTagSinglePayload for NextHourData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A601BA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = OUTLINED_FUNCTION_1_3();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 3)
    return EnumTagSinglePayload - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NextHourData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A601BAA4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = OUTLINED_FUNCTION_1_3();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1A601BAEC(uint64_t a1)
{
  uint64_t HourPrecipitation;

  HourPrecipitation = type metadata accessor for NextHourPrecipitation();
  return __swift_getEnumTagSinglePayload(a1, 2, HourPrecipitation);
}

uint64_t sub_1A601BB1C(uint64_t a1, uint64_t a2)
{
  uint64_t HourPrecipitation;

  HourPrecipitation = type metadata accessor for NextHourPrecipitation();
  return __swift_storeEnumTagSinglePayload(a1, a2, 2, HourPrecipitation);
}

uint64_t sub_1A601BB54()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for NextHourPrecipitation();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NextHourData.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A601BBF4 + 4 * byte_1A612B039[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A601BC28 + 4 * byte_1A612B034[v4]))();
}

uint64_t sub_1A601BC28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A601BC30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A601BC38);
  return result;
}

uint64_t sub_1A601BC44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A601BC4CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A601BC50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A601BC58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NextHourData.CodingType()
{
  return &type metadata for NextHourData.CodingType;
}

uint64_t storeEnumTagSinglePayload for NextHourData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A601BCC0 + 4 * byte_1A612B043[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A601BCF4 + 4 * byte_1A612B03E[v4]))();
}

uint64_t sub_1A601BCF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A601BCFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A601BD04);
  return result;
}

uint64_t sub_1A601BD10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A601BD18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A601BD1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A601BD24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NextHourData.CodingKeys()
{
  return &type metadata for NextHourData.CodingKeys;
}

unint64_t sub_1A601BD44()
{
  unint64_t result;

  result = qword_1EE813C48;
  if (!qword_1EE813C48)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B1BC, &type metadata for NextHourData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813C48);
  }
  return result;
}

unint64_t sub_1A601BD84()
{
  unint64_t result;

  result = qword_1EE813C50;
  if (!qword_1EE813C50)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B25C, &type metadata for NextHourData.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EE813C50);
  }
  return result;
}

unint64_t sub_1A601BDC4()
{
  unint64_t result;

  result = qword_1ED194AD8;
  if (!qword_1ED194AD8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B0F4, &type metadata for NextHourData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED194AD8);
  }
  return result;
}

unint64_t sub_1A601BE04()
{
  unint64_t result;

  result = qword_1ED194AE0;
  if (!qword_1ED194AE0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B11C, &type metadata for NextHourData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED194AE0);
  }
  return result;
}

unint64_t sub_1A601BE40()
{
  unint64_t result;

  result = qword_1ED194AE8;
  if (!qword_1ED194AE8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B1E4, &type metadata for NextHourData.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED194AE8);
  }
  return result;
}

double sub_1A601BE7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  unint64_t v6;
  char v7;
  double result;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_1A5FB4AC4(a1, a2), (v7 & 1) != 0))
  {
    sub_1A5FBE8B0(*(_QWORD *)(a3 + 56) + 32 * v6, (uint64_t)a4);
  }
  else
  {
    result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_1A601BECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_1A5FB4AC4(a1, a2), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(a3 + 56);
    v10 = type metadata accessor for ReverseGeocodeResult();
    sub_1A5FEA1D0(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v8, a4);
    v11 = a4;
    v12 = 0;
    v13 = v10;
  }
  else
  {
    v13 = type metadata accessor for ReverseGeocodeResult();
    v11 = a4;
    v12 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v11, v12, 1, v13);
}

void sub_1A601BF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName(a4);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_72();
  v13 = OUTLINED_FUNCTION_34_7();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v17 - v14;
  if (__swift_getEnumTagSinglePayload(a1, 1, v16) == 1)
  {
    OUTLINED_FUNCTION_37_5(a1);
    sub_1A601D130(a2, a3, a6, a5, v6);
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_37_5(v6);
  }
  else
  {
    sub_1A5FA6658(a1, (uint64_t)v15, a5);
    sub_1A5FB4CA4((uint64_t)v15, a2, a3, a6, a5);
    OUTLINED_FUNCTION_55();
  }
  OUTLINED_FUNCTION_0_0();
}

void sub_1A601C054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192878);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_42();
  v9 = sub_1A6122F30();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_72();
  if (__swift_getEnumTagSinglePayload(a1, 1, v9) == 1)
  {
    sub_1A5FBC9D8(a1, &qword_1ED192878);
    sub_1A601D26C(a2, a3, v3);
    OUTLINED_FUNCTION_55();
    sub_1A5FBC9D8(v3, &qword_1ED192878);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v4, a1, v9);
    sub_1A601D3B4(v4, a2, a3);
    OUTLINED_FUNCTION_55();
  }
}

uint64_t sub_1A601C150()
{
  uint64_t v1;

  sub_1A61221C8();
  return v1;
}

uint64_t GeocodeManager.__allocating_init(service:store:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  GeocodeManager.init(service:store:)(a1, a2, a3);
  return v6;
}

void sub_1A601C1D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  if (qword_1ED1940C0 != -1)
    swift_once();
  v3 = sub_1A612356C();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED19DB70);
  v4 = sub_1A6123554();
  v5 = sub_1A6123A4C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1A5F87000, v4, v5, "Handling country code configuration change", v6, 2u);
    MEMORY[0x1A85BB42C](v6, -1, -1);
  }

  sub_1A5FBE8B0(a1, (uint64_t)&v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194070);
  if (!swift_dynamicCast() || !v17)
  {
    v19 = 0u;
    v20 = 0u;
    goto LABEL_11;
  }
  v7 = sub_1A61237DC();
  sub_1A601BE7C(v7, v8, v17, &v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
  {
LABEL_11:
    sub_1A5FBC9D8((uint64_t)&v19, &qword_1ED194088);
    goto LABEL_12;
  }
  if (swift_dynamicCast())
  {
    v9 = v17;
    v10 = v18;
LABEL_15:
    sub_1A6122168();
    *(_QWORD *)(v1 + 40) = v9;
    *(_QWORD *)(v1 + 48) = v10;
    swift_bridgeObjectRelease();
    sub_1A6122174();
    return;
  }
LABEL_12:
  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedConfiguration);
  if (v11)
  {
    v12 = sub_1A5FBFEB8(v11);
    if (v13)
    {
      v9 = v12;
      v10 = v13;
      goto LABEL_15;
    }
    v14 = sub_1A6123554();
    v15 = sub_1A6123A40();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1A5F87000, v14, v15, "Could not retrieve countryCode from GEOCountryConfiguration.shared - aborting", v16, 2u);
      MEMORY[0x1A85BB42C](v16, -1, -1);
    }

  }
  else
  {
    __break(1u);
  }
}

uint64_t GeocodeManager.reverseGeocode(location:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[30] = a2;
  v3[31] = v2;
  v3[29] = a1;
  v3[32] = type metadata accessor for ReverseGeocodeResult();
  v3[33] = OUTLINED_FUNCTION_3_17();
  v3[34] = OUTLINED_FUNCTION_3_17();
  v3[35] = OUTLINED_FUNCTION_3_17();
  v3[36] = OUTLINED_FUNCTION_3_17();
  v3[37] = OUTLINED_FUNCTION_3_17();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192390);
  v3[38] = OUTLINED_FUNCTION_3_17();
  v3[39] = OUTLINED_FUNCTION_3_17();
  v3[40] = OUTLINED_FUNCTION_3_17();
  v3[41] = OUTLINED_FUNCTION_3_17();
  return swift_task_switch();
}

uint64_t sub_1A601C554()
{
  uint64_t v0;
  os_log_type_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int EnumTagSinglePayload;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  _QWORD *v41;
  uint64_t v43;
  void *v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  os_log_type_t v66;
  _BOOL4 v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;

  v2 = *(void **)(v0 + 240);
  v3 = *(_QWORD **)(v0 + 248);
  *(_QWORD *)(v0 + 336) = v3[7];
  sub_1A6122168();
  v4 = v3[5];
  *(_QWORD *)(v0 + 344) = v4;
  v5 = v3[6];
  *(_QWORD *)(v0 + 352) = v5;
  swift_bridgeObjectRetain();
  sub_1A6122174();
  objc_msgSend(v2, sel_coordinate);
  v90 = v4;
  v6 = sub_1A6123A64();
  v8 = v7;
  v91 = v6;
  *(_QWORD *)(v0 + 360) = v6;
  *(_QWORD *)(v0 + 368) = v7;
  if (qword_1ED1940C0 != -1)
    swift_once();
  v92 = v8;
  v9 = *(NSObject **)(v0 + 240);
  v10 = sub_1A612356C();
  *(_QWORD *)(v0 + 376) = __swift_project_value_buffer(v10, (uint64_t)qword_1ED19DB70);
  v11 = v9;
  OUTLINED_FUNCTION_19_12();
  v12 = OUTLINED_FUNCTION_10_3();
  v13 = OUTLINED_FUNCTION_143(v12);
  v14 = *(void **)(v0 + 240);
  if (v13)
  {
    v15 = OUTLINED_FUNCTION_26();
    OUTLINED_FUNCTION_26();
    OUTLINED_FUNCTION_4_18(7.2225e-34);
    *(_QWORD *)(v0 + 208) = v16;
    sub_1A6123A88();
    *(_WORD *)(v15 + 12) = 2081;
    objc_msgSend(v14, sel_coordinate);
    *(_QWORD *)(v0 + 88) = v17;
    *(_QWORD *)(v0 + 96) = v18;
    OUTLINED_FUNCTION_17_12();
    v19 = sub_1A61237F4();
    *(_QWORD *)(v0 + 224) = OUTLINED_FUNCTION_29_10(v19, v20, v21, v22, v23, v24, v25, v26, v0 + 224, v90);
    sub_1A6123A88();
    OUTLINED_FUNCTION_55();

    OUTLINED_FUNCTION_8_18(&dword_1A5F87000, v9, v1, "About to reverse geocode a location. location=%{private,mask.hash}s");
    OUTLINED_FUNCTION_5_19();
    OUTLINED_FUNCTION_8();
  }

  v28 = *(_QWORD *)(v0 + 320);
  v27 = *(_QWORD *)(v0 + 328);
  v30 = *(_QWORD *)(v0 + 248);
  v29 = *(_QWORD *)(v0 + 256);
  sub_1A6122168();
  v89 = v30 + 32;
  OUTLINED_FUNCTION_2_20();
  v31 = *(_QWORD *)(v30 + 32);
  swift_bridgeObjectRetain();
  sub_1A601BECC(v91, v92, v31, v27);
  swift_endAccess();
  OUTLINED_FUNCTION_307();
  sub_1A6122174();
  sub_1A601D5BC(v27, v28);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v28, 1, v29);
  v33 = *(_QWORD *)(v0 + 320);
  if (EnumTagSinglePayload != 1)
  {
    v43 = *(_QWORD *)(v0 + 296);
    v44 = *(void **)(v0 + 240);
    OUTLINED_FUNCTION_86();
    OUTLINED_FUNCTION_307();
    sub_1A5FA6658(v33, v43, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodeResult);
    v45 = v44;
    v46 = OUTLINED_FUNCTION_19_12();
    v47 = sub_1A6123A4C();
    v48 = os_log_type_enabled(v46, v47);
    v49 = *(void **)(v0 + 240);
    if (v48)
    {
      v50 = OUTLINED_FUNCTION_26();
      OUTLINED_FUNCTION_26();
      OUTLINED_FUNCTION_4_18(7.2225e-34);
      *(_QWORD *)(v0 + 184) = v51;
      sub_1A6123A88();
      *(_WORD *)(v50 + 12) = 2081;
      objc_msgSend(v49, sel_coordinate);
      *(_QWORD *)(v0 + 104) = v52;
      *(_QWORD *)(v0 + 112) = v53;
      OUTLINED_FUNCTION_17_12();
      v54 = sub_1A61237F4();
      *(_QWORD *)(v0 + 200) = OUTLINED_FUNCTION_29_10(v54, v55, v56, v57, v58, v59, v60, v61, v89, v90);
      sub_1A6123A88();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_8_18(&dword_1A5F87000, v46, v47, "Found a rev geo result in the in memory cache. location=%{private,mask.hash}s");
      OUTLINED_FUNCTION_5_19();
      OUTLINED_FUNCTION_8();
    }

    OUTLINED_FUNCTION_35_9(v62, &qword_1ED192390);
    goto LABEL_18;
  }
  v34 = *(NSObject **)(v0 + 248);
  sub_1A5FBC9D8(*(_QWORD *)(v0 + 320), &qword_1ED192390);
  if (sub_1A601C150())
  {
    v35 = *(_QWORD *)(v0 + 312);
    v36 = *(_QWORD *)(v0 + 256);
    GeocodeStore.queryReverseGeocodeResult(for:configuredCountryCode:)(v91, v92, v90, v5, v35);
    v37 = __swift_getEnumTagSinglePayload(v35, 1, v36);
    v34 = *(NSObject **)(v0 + 312);
    if (v37 == 1)
    {
      v38 = swift_release();
      OUTLINED_FUNCTION_35_9(v38, &qword_1ED192390);
      goto LABEL_9;
    }
    v63 = *(_QWORD *)(v0 + 288);
    v64 = *(void **)(v0 + 240);
    OUTLINED_FUNCTION_86();
    sub_1A5FA6658((uint64_t)v34, v63, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodeResult);
    v65 = v64;
    OUTLINED_FUNCTION_19_12();
    v66 = OUTLINED_FUNCTION_10_3();
    v67 = os_log_type_enabled(v34, v66);
    v68 = *(void **)(v0 + 240);
    if (v67)
    {
      v69 = OUTLINED_FUNCTION_26();
      OUTLINED_FUNCTION_26();
      OUTLINED_FUNCTION_4_18(7.2225e-34);
      *(_QWORD *)(v0 + 160) = v70;
      sub_1A6123A88();
      *(_WORD *)(v69 + 12) = 2081;
      objc_msgSend(v68, sel_coordinate);
      *(_QWORD *)(v0 + 120) = v71;
      *(_QWORD *)(v0 + 128) = v72;
      OUTLINED_FUNCTION_17_12();
      v73 = sub_1A61237F4();
      *(_QWORD *)(v0 + 176) = OUTLINED_FUNCTION_29_10(v73, v74, v75, v76, v77, v78, v79, v80, v89, v90);
      sub_1A6123A88();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_8_18(&dword_1A5F87000, v34, v66, "Found a rev geo result in the database. location=%{private,mask.hash}s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_8();
    }

    v81 = *(_QWORD *)(v0 + 328);
    v82 = *(_QWORD *)(v0 + 304);
    v83 = *(_QWORD *)(v0 + 288);
    v84 = *(_QWORD *)(v0 + 256);
    sub_1A6122168();
    sub_1A5FEA1D0(v83, v82);
    OUTLINED_FUNCTION_28_10();
    __swift_storeEnumTagSinglePayload(v85, v86, v87, v84);
    OUTLINED_FUNCTION_2_20();
    sub_1A601BF58(v82, v91, v92, &qword_1ED192390, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodeResult, &qword_1ED191ED8);
    swift_endAccess();
    sub_1A6122174();
    swift_release();
    OUTLINED_FUNCTION_37_5(v81);
LABEL_18:
    OUTLINED_FUNCTION_14_19();
    sub_1A5FA6658(v88, *(_QWORD *)(v0 + 232), (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodeResult);
    OUTLINED_FUNCTION_36_1();
    OUTLINED_FUNCTION_31_1();
    OUTLINED_FUNCTION_41_4();
    OUTLINED_FUNCTION_40_5();
    OUTLINED_FUNCTION_33_1();
    OUTLINED_FUNCTION_32_7();
    OUTLINED_FUNCTION_39_4();
    OUTLINED_FUNCTION_27_0();
    OUTLINED_FUNCTION_25_3();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_9:
  OUTLINED_FUNCTION_19_12();
  v39 = OUTLINED_FUNCTION_10_3();
  if (os_log_type_enabled(v34, v39))
  {
    v40 = (uint8_t *)OUTLINED_FUNCTION_26();
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_1A5F87000, v34, v39, "About to perform reverseGeocode through service", v40, 2u);
    OUTLINED_FUNCTION_8();
  }

  v41 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 384) = v41;
  *v41 = v0;
  v41[1] = sub_1A601CC90;
  return sub_1A61093EC(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 240));
}

uint64_t sub_1A601CC90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_1A601CD08()
{
  uint64_t v0;
  NSObject *v1;
  void *v2;
  id v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v1 = *(NSObject **)(v0 + 376);
  v2 = *(void **)(v0 + 240);
  sub_1A5FEA1D0(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 272));
  v3 = v2;
  sub_1A6123554();
  v4 = OUTLINED_FUNCTION_10_3();
  if (os_log_type_enabled(v1, v4))
  {
    v6 = *(_QWORD *)(v0 + 264);
    v5 = *(_QWORD *)(v0 + 272);
    v7 = *(void **)(v0 + 240);
    v8 = OUTLINED_FUNCTION_26();
    v27 = OUTLINED_FUNCTION_26();
    *(_DWORD *)v8 = 141558787;
    *(_QWORD *)(v0 + 216) = 1752392040;
    sub_1A6123A88();
    *(_WORD *)(v8 + 12) = 2081;
    objc_msgSend(v7, sel_coordinate);
    *(_QWORD *)(v0 + 136) = v9;
    *(_QWORD *)(v0 + 144) = v10;
    OUTLINED_FUNCTION_17_12();
    v11 = sub_1A61237F4();
    *(_QWORD *)(v0 + 192) = sub_1A5FBE7E0(v11, v12, &v27);
    sub_1A6123A88();
    OUTLINED_FUNCTION_86();

    *(_WORD *)(v8 + 22) = 2160;
    *(_QWORD *)(v0 + 168) = 1752392040;
    sub_1A6123A88();
    *(_WORD *)(v8 + 32) = 2081;
    sub_1A5FEA1D0(v5, v6);
    v13 = sub_1A61237F4();
    *(_QWORD *)(v0 + 152) = sub_1A5FBE7E0(v13, v14, &v27);
    sub_1A6123A88();
    OUTLINED_FUNCTION_307();
    sub_1A601D604(v5);
    _os_log_impl(&dword_1A5F87000, v1, v4, "Successfully reverse geocoded the location. location=%{private,mask.hash}s, result=%{private,mask.hash}s", (uint8_t *)v8, 0x2Au);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_8();
  }
  v15 = *(_QWORD *)(v0 + 272);
  v16 = *(void **)(v0 + 240);

  sub_1A601D604(v15);
  if (sub_1A601C150())
  {
    GeocodeStore.saveReverseGeocodeResult(_:for:configuredCountryCode:)(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 352));
    swift_release();
  }
  v18 = *(_QWORD *)(v0 + 360);
  v17 = *(_QWORD *)(v0 + 368);
  v26 = *(_QWORD *)(v0 + 328);
  v19 = *(_QWORD *)(v0 + 304);
  v20 = *(_QWORD *)(v0 + 280);
  v21 = *(_QWORD *)(v0 + 256);
  swift_bridgeObjectRelease();
  sub_1A6122168();
  sub_1A5FEA1D0(v20, v19);
  OUTLINED_FUNCTION_28_10();
  __swift_storeEnumTagSinglePayload(v22, v23, v24, v21);
  OUTLINED_FUNCTION_2_20();
  sub_1A601BF58(v19, v18, v17, &qword_1ED192390, (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodeResult, &qword_1ED191ED8);
  swift_endAccess();
  sub_1A6122174();
  sub_1A5FBC9D8(v26, &qword_1ED192390);
  sub_1A5FA6658(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 232), (uint64_t (*)(_QWORD))type metadata accessor for ReverseGeocodeResult);
  OUTLINED_FUNCTION_36_1();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_41_4();
  OUTLINED_FUNCTION_40_5();
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_39_4();
  OUTLINED_FUNCTION_32_7();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_25_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A601D054()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_14_19();
  OUTLINED_FUNCTION_35_9(v1, &qword_1ED192390);
  OUTLINED_FUNCTION_36_1();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_41_4();
  OUTLINED_FUNCTION_40_5();
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_32_7();
  OUTLINED_FUNCTION_39_4();
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_25_3();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GeocodeManager.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t GeocodeManager.__deallocating_deinit()
{
  GeocodeManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A601D130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v8;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v8 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_1A5FB4AC4(a1, a2);
  LOBYTE(a2) = v13;
  OUTLINED_FUNCTION_307();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v21 = *v8;
    *v8 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_1A6123B6C();
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(v21 + 56);
    v15 = a4(0);
    sub_1A5FA6658(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v12, a5, a4);
    sub_1A6123B78();
    *v8 = v21;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_28_10();
    v19 = v15;
  }
  else
  {
    a4(0);
    v16 = OUTLINED_FUNCTION_100();
  }
  return __swift_storeEnumTagSinglePayload(v16, v17, v18, v19);
}

uint64_t sub_1A601D26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1A5FB4AC4(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v14 = *v4;
    *v4 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1924D0);
    sub_1A6123B6C();
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(v14 + 56);
    v11 = sub_1A6122F30();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v8, v11);
    sub_1A6123B78();
    *v4 = v14;
    swift_bridgeObjectRelease();
    return __swift_storeEnumTagSinglePayload(a3, 0, 1, v11);
  }
  else
  {
    v13 = sub_1A6122F30();
    return __swift_storeEnumTagSinglePayload(a3, 1, 1, v13);
  }
}

uint64_t sub_1A601D3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v8;

  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_11_15();
  sub_1A601D41C(a1, a2, a3);
  *v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A601D41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  unint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  OUTLINED_FUNCTION_13_18(a1, a2, a3);
  OUTLINED_FUNCTION_22_9();
  if (v9)
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = v7;
  v11 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1924D0);
  if ((sub_1A6123B6C() & 1) == 0)
    goto LABEL_5;
  v12 = sub_1A5FB4AC4(a2, a3);
  if ((v11 & 1) != (v13 & 1))
  {
LABEL_9:
    result = sub_1A6123D1C();
    __break(1u);
    return result;
  }
  v10 = v12;
LABEL_5:
  v14 = *v3;
  if ((v11 & 1) != 0)
  {
    v15 = *(_QWORD *)(v14 + 56);
    v16 = sub_1A6122F30();
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v10, a1, v16);
  }
  else
  {
    sub_1A601D52C(v10, a2, a3, a1, v14);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1A601D52C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  OUTLINED_FUNCTION_2_23(a1, a2, a3, a4, a5);
  v9 = *(_QWORD *)(v8 + 56);
  v10 = sub_1A6122F30();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = *(_QWORD *)(a5 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    *(_QWORD *)(a5 + 16) = v14;
  return result;
}

uint64_t sub_1A601D598()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A601D5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A601D604(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ReverseGeocodeResult();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t method lookup function for GeocodeManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GeocodeManager.__allocating_init(service:store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t static MoonEvents.mock()@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - v6;
  sub_1A6121F58();
  OUTLINED_FUNCTION_11_1((uint64_t)v7);
  OUTLINED_FUNCTION_11_1((uint64_t)v4);
  v8 = type metadata accessor for MoonEvents();
  v9 = (uint64_t)&a1[*(int *)(v8 + 20)];
  OUTLINED_FUNCTION_11_1(v9);
  v10 = (uint64_t)&a1[*(int *)(v8 + 24)];
  OUTLINED_FUNCTION_11_1(v10);
  *a1 = 2;
  sub_1A5FBF9A0((uint64_t)v7, v9);
  return sub_1A5FBF9A0((uint64_t)v4, v10);
}

uint64_t ProviderAttribution.init(name:logoURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  v8 = (uint64_t)a4 + *(int *)(OUTLINED_FUNCTION_3_18() + 20);
  v9 = sub_1A6121DF0();
  __swift_storeEnumTagSinglePayload(v8, 1, 1, v9);
  *a4 = a1;
  a4[1] = a2;
  return sub_1A601D7AC(a3, v8);
}

uint64_t sub_1A601D7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t ProviderAttribution.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void ProviderAttribution.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_9();
}

uint64_t (*ProviderAttribution.name.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t ProviderAttribution.logoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_3_18() + 20);
  return sub_1A5FB34FC(v3, a1);
}

uint64_t ProviderAttribution.logoURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_3_18() + 20);
  return sub_1A601D7AC(a1, v3);
}

double (*ProviderAttribution.logoURL.modify())(double, double)
{
  OUTLINED_FUNCTION_3_18();
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1A601D8D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C52556F676F6CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1A6123CF8();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A601D9B4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x4C52556F676F6CLL;
  else
    return 1701667182;
}

uint64_t sub_1A601D9E4()
{
  char *v0;

  return sub_1A601D9B4(*v0);
}

uint64_t sub_1A601D9EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A601D8D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A601DA10()
{
  sub_1A601DBA8();
  return sub_1A6123DE8();
}

uint64_t sub_1A601DA38()
{
  sub_1A601DBA8();
  return sub_1A6123DF4();
}

uint64_t ProviderAttribution.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1917E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A601DBA8();
  sub_1A6123DD0();
  sub_1A6123C8C();
  if (!v1)
  {
    type metadata accessor for ProviderAttribution();
    sub_1A6121DF0();
    sub_1A5FB3544(&qword_1ED191690, MEMORY[0x1E0CB0010]);
    sub_1A6123C80();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

unint64_t sub_1A601DBA8()
{
  unint64_t result;

  result = qword_1ED191748;
  if (!qword_1ED191748)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B504, &type metadata for ProviderAttribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191748);
  }
  return result;
}

uint64_t ProviderAttribution.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v17;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0();
  v6 = v5 - v4;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813C60);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_0();
  type metadata accessor for ProviderAttribution();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_0();
  v10 = (uint64_t *)(v9 - v8);
  v12 = v9 - v8 + *(int *)(v11 + 20);
  v13 = sub_1A6121DF0();
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A601DBA8();
  sub_1A6123DC4();
  if (v18)
  {
    OUTLINED_FUNCTION_7_1();
    return sub_1A5FA0C4C(v12, &qword_1ED1940B8);
  }
  else
  {
    *v10 = sub_1A6123C08();
    v10[1] = v14;
    sub_1A5FB3544(&qword_1EE813A18, MEMORY[0x1E0CB0038]);
    sub_1A6123BFC();
    OUTLINED_FUNCTION_5_20();
    sub_1A601D7AC(v6, v12);
    sub_1A601DDE8((uint64_t)v10, a2);
    OUTLINED_FUNCTION_7_1();
    return sub_1A601DE2C((uint64_t)v10);
  }
}

uint64_t sub_1A601DDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ProviderAttribution();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A601DE2C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ProviderAttribution();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A601DE68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ProviderAttribution.init(from:)(a1, a2);
}

uint64_t sub_1A601DE7C(_QWORD *a1)
{
  return ProviderAttribution.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ProviderAttribution(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1A6121DF0();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
    }
  }
  return v3;
}

_QWORD *assignWithCopy for ProviderAttribution(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6121DF0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for ProviderAttribution(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1A6121DF0();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for ProviderAttribution(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A6121DF0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    v13 = *(_QWORD *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1A601E24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

void sub_1A601E2C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_9();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t storeEnumTagSinglePayload for ProviderAttribution.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A601E378 + 4 * byte_1A612B385[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A601E3AC + 4 * byte_1A612B380[v4]))();
}

uint64_t sub_1A601E3AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A601E3B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A601E3BCLL);
  return result;
}

uint64_t sub_1A601E3C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A601E3D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A601E3D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A601E3DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProviderAttribution.CodingKeys()
{
  return &type metadata for ProviderAttribution.CodingKeys;
}

unint64_t sub_1A601E3FC()
{
  unint64_t result;

  result = qword_1EE813C68;
  if (!qword_1EE813C68)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B4DC, &type metadata for ProviderAttribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813C68);
  }
  return result;
}

unint64_t sub_1A601E43C()
{
  unint64_t result;

  result = qword_1ED191758;
  if (!qword_1ED191758)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B44C, &type metadata for ProviderAttribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191758);
  }
  return result;
}

unint64_t sub_1A601E47C()
{
  unint64_t result;

  result = qword_1ED191750;
  if (!qword_1ED191750)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B474, &type metadata for ProviderAttribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191750);
  }
  return result;
}

BOOL sub_1A601E4B8(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 >= a2;
}

BOOL sub_1A601E4C8(char a1, char a2)
{
  return qword_1A612B848[a1] >= qword_1A612B848[a2];
}

BOOL sub_1A601E4EC(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 >= a1;
}

BOOL sub_1A601E4FC(char a1, char a2)
{
  return qword_1A612B848[a2] >= qword_1A612B848[a1];
}

BOOL sub_1A601E520(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 < a1;
}

BOOL sub_1A601E530(char a1, char a2)
{
  return qword_1A612B848[a2] < qword_1A612B848[a1];
}

BOOL static WeatherCondition.Intensity.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t WeatherCondition.Intensity.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t WeatherCondition.Intensity.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 5;
  if (result < 5)
    v2 = result;
  *a2 = v2;
  return result;
}

void sub_1A601E584()
{
  sub_1A61057C8();
}

void sub_1A601E58C()
{
  sub_1A6002624();
}

void sub_1A601E594()
{
  sub_1A6105A6C();
}

unint64_t sub_1A601E59C@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return WeatherCondition.Intensity.init(rawValue:)(*a1, a2);
}

uint64_t sub_1A601E5A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = WeatherCondition.Intensity.rawValue.getter();
  *a1 = result;
  return result;
}

BOOL sub_1A601E5CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A601E4EC(*a1, *a2);
}

BOOL sub_1A601E5D8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A601E4B8(*a1, *a2);
}

BOOL sub_1A601E5E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A601E520(*a1, *a2);
}

uint64_t WeatherCondition.ConditionGeneralCategory.hash(into:)()
{
  return sub_1A6123D70();
}

uint64_t WeatherCondition.ConditionGeneralCategory.hashValue.getter()
{
  sub_1A6123D64();
  sub_1A6123D70();
  return sub_1A6123D88();
}

void WeatherCondition.intensity.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_15_17(a1);
}

uint64_t WeatherCondition.isSignificant.getter()
{
  _BYTE *v0;

  return (*v0 < 0x22uLL) & (0x265401401uLL >> *v0);
}

Swift::String __swiftcall WeatherCondition.descriptionCategoryExpectedPhrase(isDaylight:isLeading:)(Swift::Bool isDaylight, Swift::Bool isLeading)
{
  Swift::String result;
  char v3;

  WeatherCondition.category.getter(&v3);
  __asm { BR              X10 }
  return result;
}

void sub_1A601E6E4()
{
  char v0;
  char v1;
  id v2;
  id v3;

  OUTLINED_FUNCTION_3_19();
  if ((v1 & 1) == 0)
  {
    if ((v0 & 1) != 0)
    {
      if (qword_1ED1925A0 != -1)
        swift_once();
      goto LABEL_5;
    }
    if (qword_1ED1925A0 != -1)
      swift_once();
LABEL_15:
    v3 = (id)qword_1ED19DB10;
    OUTLINED_FUNCTION_20_12();
    OUTLINED_FUNCTION_0_3();
    goto LABEL_16;
  }
  if ((v0 & 1) == 0)
  {
    if (qword_1ED1925A0 != -1)
      swift_once();
    goto LABEL_15;
  }
  if (qword_1ED1925A0 != -1)
    swift_once();
LABEL_5:
  v2 = (id)qword_1ED19DB10;
  OUTLINED_FUNCTION_21_11();
  OUTLINED_FUNCTION_0_3();
LABEL_16:
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_1();
  sub_1A6121DA8();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_4_1();
}

Swift::String __swiftcall WeatherCondition.exactDescriptionPhrase(isDaylight:isLeading:)(Swift::Bool isDaylight, Swift::Bool isLeading)
{
  char *v2;
  uint64_t v3;
  void *v4;
  Swift::String result;

  sub_1A601F524(*v2);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

void sub_1A601F524(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A601F554(uint64_t a1, char a2)
{
  id v2;
  uint64_t v3;

  if ((a2 & 1) != 0)
  {
    if (qword_1ED1925A0 != -1)
      swift_once();
  }
  else if (qword_1ED1925A0 != -1)
  {
    swift_once();
  }
  v2 = (id)qword_1ED19DB10;
  v3 = sub_1A6121DA8();

  return v3;
}

Swift::String __swiftcall WeatherCondition.exactDescriptionExpectedPhrase(isDaylight:isLeading:)(Swift::Bool isDaylight, Swift::Bool isLeading)
{
  char *v2;
  uint64_t v3;
  void *v4;
  Swift::String result;

  sub_1A602167C(*v2);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

void sub_1A602167C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A60216AC(uint64_t a1, char a2)
{
  id v2;
  uint64_t v3;

  if ((a2 & 1) != 0)
  {
    if (qword_1ED1925A0 != -1)
      swift_once();
  }
  else if (qword_1ED1925A0 != -1)
  {
    swift_once();
  }
  v2 = (id)qword_1ED19DB10;
  v3 = sub_1A6121DA8();

  return v3;
}

unint64_t sub_1A6023594()
{
  unint64_t result;

  result = qword_1ED190710;
  if (!qword_1ED190710)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherCondition.Intensity, &type metadata for WeatherCondition.Intensity);
    atomic_store(result, (unint64_t *)&qword_1ED190710);
  }
  return result;
}

unint64_t sub_1A60235D4()
{
  unint64_t result;

  result = qword_1EE813C70;
  if (!qword_1EE813C70)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherCondition.ConditionGeneralCategory, &type metadata for WeatherCondition.ConditionGeneralCategory);
    atomic_store(result, (unint64_t *)&qword_1EE813C70);
  }
  return result;
}

uint64_t _s9IntensityOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A602365C + 4 * byte_1A612B641[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A6023690 + 4 * byte_1A612B63C[v4]))();
}

uint64_t sub_1A6023690(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6023698(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A60236A0);
  return result;
}

uint64_t sub_1A60236AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A60236B4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A60236B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60236C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherCondition.Intensity()
{
  return &type metadata for WeatherCondition.Intensity;
}

uint64_t _s24ConditionGeneralCategoryOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEC)
  {
    if (a2 + 20 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 20) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 21;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x15;
  v5 = v6 - 21;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s24ConditionGeneralCategoryOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_1A60237B0 + 4 * byte_1A612B64B[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_1A60237E4 + 4 * byte_1A612B646[v4]))();
}

uint64_t sub_1A60237E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60237EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A60237F4);
  return result;
}

uint64_t sub_1A6023800(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6023808);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_1A602380C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6023814(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void WeatherStatisticsModel.init(hourlyTemperatureStatistics:dailyPrecipitationStatistics:monthlyTemperatureStatistics:monthlyPrecipitationStatistics:dailyPrecipitationSummary:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int *v11;

  sub_1A6024A48(a1, a6, &qword_1ED190A10);
  v11 = (int *)OUTLINED_FUNCTION_6_20();
  sub_1A6024A48(a2, a6 + v11[5], &qword_1EE813008);
  sub_1A6024A48(a3, a6 + v11[6], &qword_1EE812FF8);
  sub_1A6024A48(a4, a6 + v11[7], &qword_1EE812FE8);
  sub_1A6024A48(a5, a6 + v11[8], &qword_1EE812FD8);
}

unint64_t sub_1A60238D8(unint64_t result, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v3 >= result && v3 >= a2)
    return a2 - result;
  __break(1u);
  return result;
}

uint64_t sub_1A60238F8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < a2 || a3 < result)
    __break(1u);
  return result;
}

void WeatherStatisticsModel.hourlyTemperatureStatistics.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A5FB14D4(v1, a1, &qword_1ED190A10);
}

void WeatherStatisticsModel.dailyPrecipitationStatistics.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_6_20();
  OUTLINED_FUNCTION_23_11(v0 + *(int *)(v1 + 20), v2, &qword_1EE813008);
  OUTLINED_FUNCTION_51();
}

void WeatherStatisticsModel.monthlyTemperatureStatistics.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_6_20();
  OUTLINED_FUNCTION_23_11(v0 + *(int *)(v1 + 24), v2, &qword_1EE812FF8);
  OUTLINED_FUNCTION_51();
}

void WeatherStatisticsModel.monthlyPrecipitationStatistics.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_6_20();
  OUTLINED_FUNCTION_23_11(v0 + *(int *)(v1 + 28), v2, &qword_1EE812FE8);
  OUTLINED_FUNCTION_51();
}

void WeatherStatisticsModel.dailyPrecipitationSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_6_20();
  OUTLINED_FUNCTION_23_11(v0 + *(int *)(v1 + 32), v2, &qword_1EE812FD8);
  OUTLINED_FUNCTION_51();
}

uint64_t sub_1A60239F0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A614EED0 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A614EEF0 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A614EF10 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001A614EF30 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001A614EF50)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_1A6123CF8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A6023BDC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A6023C18 + 4 * byte_1A612B8C0[a1]))(0xD00000000000001BLL, 0x80000001A614EED0);
}

unint64_t sub_1A6023C18()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1A6023C40()
{
  uint64_t v0;

  return v0 + 2;
}

uint64_t sub_1A6023C68()
{
  unsigned __int8 *v0;

  return sub_1A6023BDC(*v0);
}

uint64_t sub_1A6023C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A60239F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6023C94()
{
  sub_1A6024A7C();
  return sub_1A6123DE8();
}

uint64_t sub_1A6023CBC()
{
  sub_1A6024A7C();
  return sub_1A6123DF4();
}

void WeatherStatisticsModel.monthlyTemperatureRangeAverages.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v14 = type metadata accessor for MonthTemperatureStatistics();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_12();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8137D8);
  v13 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v3 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_0_25() + 24));
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    OUTLINED_FUNCTION_25_15();
    sub_1A6001C14();
    v5 = 0;
    v6 = *(_QWORD *)(v3 + 16);
    while (v5 < v6)
    {
      sub_1A5FBA570(v3+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v5, v1, (uint64_t (*)(_QWORD))type metadata accessor for MonthTemperatureStatistics);
      v7 = v2 + *(int *)(v16 + 48);
      v8 = v1 + *(int *)(v14 + 20);
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      v10(v2, v8, v9);
      v10(v7, v1 + *(int *)(v14 + 24), v9);
      sub_1A5FA1740(v1, (uint64_t (*)(_QWORD))type metadata accessor for MonthTemperatureStatistics);
      if ((OUTLINED_FUNCTION_20_13() & 1) == 0)
      {
        OUTLINED_FUNCTION_8_19();
        sub_1A6001C14();
        v7 = v17;
      }
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      v3 = v12 + 1;
      if (v12 >= v11 >> 1)
      {
        OUTLINED_FUNCTION_9_19(v11);
        sub_1A6001C14();
        v7 = v17;
      }
      *(_QWORD *)(v7 + 16) = v3;
      sub_1A6024A48(v2, v7+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v12, &qword_1EE8137D8);
      OUTLINED_FUNCTION_35_10();
      if (v5 >= v6)
        goto LABEL_12;
      if (v4 == ++v5)
        goto LABEL_10;
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    OUTLINED_FUNCTION_0_0();
  }
}

void WeatherStatisticsModel.monthlyPrecipitationAmountAverages.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)();

  v17 = type metadata accessor for MonthPrecipitationStatistics();
  OUTLINED_FUNCTION_144_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_12();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_0_25() + 28));
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    OUTLINED_FUNCTION_25_15();
    sub_1A6001C48();
    v8 = 0;
    v9 = *(_QWORD *)(v6 + 16);
    while (v8 < v9)
    {
      OUTLINED_FUNCTION_21_12();
      v12 = type metadata accessor for MonthPrecipitationStatistics;
      sub_1A5FBA570(v10 + v11 * v8, v1, (uint64_t (*)(_QWORD))type metadata accessor for MonthPrecipitationStatistics);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v1 + *(int *)(v17 + 24), v4);
      sub_1A5FA1740(v1, (uint64_t (*)(_QWORD))type metadata accessor for MonthPrecipitationStatistics);
      if ((OUTLINED_FUNCTION_20_13() & 1) == 0)
      {
        OUTLINED_FUNCTION_8_19();
        sub_1A6001C48();
        v12 = v18;
      }
      v14 = *((_QWORD *)v12 + 2);
      v13 = *((_QWORD *)v12 + 3);
      if (v14 >= v13 >> 1)
      {
        OUTLINED_FUNCTION_9_19(v13);
        sub_1A6001C48();
      }
      OUTLINED_FUNCTION_18_13();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v15 + v16 * v14, v2, v4);
      OUTLINED_FUNCTION_35_10();
      if (v8 >= v9)
        goto LABEL_12;
      if (v7 == ++v8)
        goto LABEL_10;
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    OUTLINED_FUNCTION_0_0();
  }
}

void WeatherStatisticsModel.precipitationCalendar.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;

  v19 = type metadata accessor for DayPrecipitationStatistics();
  OUTLINED_FUNCTION_144_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_12();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8137C0);
  MEMORY[0x1E0C80A78](v18);
  v20 = v0;
  v17 = *(int *)(OUTLINED_FUNCTION_0_25() + 20);
  v4 = *(_QWORD *)(v0 + v17);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    OUTLINED_FUNCTION_25_15();
    sub_1A6001C7C();
    v6 = 0;
    v7 = *(_QWORD *)(v4 + 16);
    while (v6 < v7)
    {
      OUTLINED_FUNCTION_21_12();
      sub_1A5FBA570(v8 + v9 * v6, (uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for DayPrecipitationStatistics);
      v10 = (char *)v2 + *(int *)(v18 + 48);
      *v2 = *v1;
      v11 = (char *)v1 + *(int *)(v19 + 24);
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      sub_1A5FA1740((uint64_t)v1, (uint64_t (*)(_QWORD))type metadata accessor for DayPrecipitationStatistics);
      if ((OUTLINED_FUNCTION_20_13() & 1) == 0)
      {
        OUTLINED_FUNCTION_8_19();
        sub_1A6001C7C();
        v10 = v21;
      }
      v14 = *((_QWORD *)v10 + 2);
      v13 = *((_QWORD *)v10 + 3);
      if (v14 >= v13 >> 1)
      {
        OUTLINED_FUNCTION_9_19(v13);
        sub_1A6001C7C();
      }
      OUTLINED_FUNCTION_18_13();
      sub_1A6024A48((uint64_t)v2, v15 + v16 * v14, &qword_1EE8137C0);
      v7 = *(_QWORD *)(*(_QWORD *)(v20 + v17) + 16);
      if (v6 >= v7)
        goto LABEL_12;
      if (v5 == ++v6)
        goto LABEL_10;
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    OUTLINED_FUNCTION_0_0();
  }
}

void WeatherStatisticsModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813C78);
  OUTLINED_FUNCTION_144_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_12();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6024A7C();
  sub_1A6123DD0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190A10);
  sub_1A5FA3DEC(&qword_1EE813C88, &qword_1ED190A10);
  OUTLINED_FUNCTION_13_0();
  if (!v1)
  {
    type metadata accessor for WeatherStatisticsModel();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_30_10(&qword_1EE813C90);
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_30_10(&qword_1EE813C98);
    OUTLINED_FUNCTION_4_20();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_30_10(&qword_1EE813CA0);
    OUTLINED_FUNCTION_4_20();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FD8);
    sub_1A5FA3DEC(&qword_1EE813CA8, &qword_1EE812FD8);
    OUTLINED_FUNCTION_13_0();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  OUTLINED_FUNCTION_20();
}

void WeatherStatisticsModel.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;

  v29 = a2;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FD8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_0();
  v31 = v4;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FE8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_0();
  v33 = v6;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FF8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_0();
  v35 = v8;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813008);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_11_0();
  v37 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190A10);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_11_0();
  v38 = v12;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813CB0);
  v13 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for WeatherStatisticsModel();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6024A7C();
  v40 = v15;
  v20 = v41;
  sub_1A6123DC4();
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v41 = v13;
    v21 = (uint64_t)v19;
    v22 = (uint64_t)a1;
    v46 = 0;
    sub_1A5FA3DEC(&qword_1EE813CB8, &qword_1ED190A10);
    v23 = v38;
    sub_1A6123C44();
    sub_1A6024A48(v23, v21, &qword_1ED190A10);
    v45 = 1;
    sub_1A5FA3DEC(&qword_1EE813CC0, &qword_1EE813008);
    v24 = sub_1A6123C44();
    OUTLINED_FUNCTION_26_10(v24, v21 + v16[5], &qword_1EE813008);
    v44 = 2;
    sub_1A5FA3DEC(&qword_1EE813CC8, &qword_1EE812FF8);
    v25 = sub_1A6123C44();
    OUTLINED_FUNCTION_26_10(v25, v21 + v16[6], &qword_1EE812FF8);
    v43 = 3;
    sub_1A5FA3DEC(&qword_1EE813CD0, &qword_1EE812FE8);
    v26 = OUTLINED_FUNCTION_11_17();
    OUTLINED_FUNCTION_26_10(v26, v21 + v16[7], &qword_1EE812FE8);
    v42 = 4;
    sub_1A5FA3DEC(&qword_1EE813CD8, &qword_1EE812FD8);
    OUTLINED_FUNCTION_11_17();
    v27 = OUTLINED_FUNCTION_146((uint64_t)v40, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
    OUTLINED_FUNCTION_26_10(v27, v21 + v16[8], &qword_1EE812FD8);
    sub_1A5FBA570(v21, v29, (uint64_t (*)(_QWORD))type metadata accessor for WeatherStatisticsModel);
    __swift_destroy_boxed_opaque_existential_1(v22);
    sub_1A5FA1740(v21, (uint64_t (*)(_QWORD))type metadata accessor for WeatherStatisticsModel);
  }
  OUTLINED_FUNCTION_20();
}

void sub_1A60248DC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  WeatherStatisticsModel.init(from:)(a1, a2);
}

void sub_1A60248F0(_QWORD *a1)
{
  WeatherStatisticsModel.encode(to:)(a1);
}

void static WeatherStatisticsModel.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;

  OUTLINED_FUNCTION_34_8(a1);
  sub_1A5FC89A4();
  if ((v2 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190A10);
    if ((OUTLINED_FUNCTION_17_14() & 1) != 0)
    {
      OUTLINED_FUNCTION_29_11(*(int *)(v1 + 56));
      if ((v3 & 1) != 0)
      {
        v4 = (int *)OUTLINED_FUNCTION_6_20();
        v5 = OUTLINED_FUNCTION_28_11(v4[5]);
        sub_1A60249F0(v5, v6, (uint64_t)sub_1A5FC8808, (uint64_t)&qword_1EE813008);
        if ((v7 & 1) != 0)
        {
          v8 = OUTLINED_FUNCTION_28_11(v4[6]);
          sub_1A60249F0(v8, v9, (uint64_t)sub_1A5FC86E8, (uint64_t)&qword_1EE812FF8);
          if ((v10 & 1) != 0)
          {
            v11 = OUTLINED_FUNCTION_28_11(v4[7]);
            sub_1A60249F0(v11, v12, (uint64_t)sub_1A5FC86DC, (uint64_t)&qword_1EE812FE8);
            if ((v13 & 1) != 0)
            {
              sub_1A5FC85C4();
              if ((v14 & 1) != 0)
              {
                v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FD8);
                OUTLINED_FUNCTION_29_11(*(int *)(v15 + 52));
              }
            }
          }
        }
      }
    }
  }
  OUTLINED_FUNCTION_9();
}

void sub_1A60249F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  v5 = OUTLINED_FUNCTION_34_8(a1);
  if ((v6(v5) & 1) != 0
    && (__swift_instantiateConcreteTypeFromMangledName((uint64_t *)a4), (OUTLINED_FUNCTION_17_14() & 1) != 0))
  {
    v7 = OUTLINED_FUNCTION_28_11(*(int *)(a4 + 56));
    static WeatherMetadata.== infix(_:_:)(v7, v8);
  }
  else
  {
    OUTLINED_FUNCTION_9();
  }
}

void sub_1A6024A48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_8_0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  OUTLINED_FUNCTION_51();
}

unint64_t sub_1A6024A7C()
{
  unint64_t result;

  result = qword_1EE813C80;
  if (!qword_1EE813C80)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612BA5C, &type metadata for WeatherStatisticsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813C80);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for WeatherStatisticsModel(char *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (char *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    swift_bridgeObjectRetain();
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190A10);
    v9 = *(int *)(v8 + 52);
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    v12 = sub_1A6121F58();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v14 = *(int *)(v8 + 56);
    v15 = &a1[v14];
    v16 = (char *)a2 + v14;
    v13(&a1[v14], (char *)a2 + v14, v12);
    v17 = (int *)type metadata accessor for WeatherMetadata();
    v13(&v15[v17[5]], &v16[v17[5]], v12);
    *(_QWORD *)&v15[v17[6]] = *(_QWORD *)&v16[v17[6]];
    *(_QWORD *)&v15[v17[7]] = *(_QWORD *)&v16[v17[7]];
    *(_QWORD *)&v15[v17[8]] = *(_QWORD *)&v16[v17[8]];
    v18 = a3[5];
    v19 = &a1[v18];
    v20 = (char *)a2 + v18;
    *(_QWORD *)&a1[v18] = *(uint64_t *)((char *)a2 + v18);
    swift_retain();
    swift_bridgeObjectRetain();
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813008);
    v13(&v19[*(int *)(v21 + 52)], &v20[*(int *)(v21 + 52)], v12);
    v22 = *(int *)(v21 + 56);
    v23 = &v19[v22];
    v24 = &v20[v22];
    v13(v23, &v20[v22], v12);
    v13(&v23[v17[5]], &v24[v17[5]], v12);
    *(_QWORD *)&v23[v17[6]] = *(_QWORD *)&v24[v17[6]];
    *(_QWORD *)&v23[v17[7]] = *(_QWORD *)&v24[v17[7]];
    *(_QWORD *)&v23[v17[8]] = *(_QWORD *)&v24[v17[8]];
    v25 = a3[6];
    v26 = &a1[v25];
    v27 = (char *)a2 + v25;
    *(_QWORD *)&a1[v25] = *(uint64_t *)((char *)a2 + v25);
    swift_retain();
    swift_bridgeObjectRetain();
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FF8);
    v13(&v26[*(int *)(v28 + 52)], &v27[*(int *)(v28 + 52)], v12);
    v29 = *(int *)(v28 + 56);
    v30 = &v26[v29];
    v31 = &v27[v29];
    v13(v30, &v27[v29], v12);
    v13(&v30[v17[5]], &v31[v17[5]], v12);
    *(_QWORD *)&v30[v17[6]] = *(_QWORD *)&v31[v17[6]];
    *(_QWORD *)&v30[v17[7]] = *(_QWORD *)&v31[v17[7]];
    *(_QWORD *)&v30[v17[8]] = *(_QWORD *)&v31[v17[8]];
    v32 = a3[7];
    v33 = &a1[v32];
    v34 = (char *)a2 + v32;
    *(_QWORD *)&a1[v32] = *(uint64_t *)((char *)a2 + v32);
    swift_retain();
    swift_bridgeObjectRetain();
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FE8);
    v13(&v33[*(int *)(v35 + 52)], &v34[*(int *)(v35 + 52)], v12);
    v36 = *(int *)(v35 + 56);
    v37 = &v33[v36];
    v38 = &v34[v36];
    v13(v37, &v34[v36], v12);
    v13(&v37[v17[5]], &v38[v17[5]], v12);
    *(_QWORD *)&v37[v17[6]] = *(_QWORD *)&v38[v17[6]];
    *(_QWORD *)&v37[v17[7]] = *(_QWORD *)&v38[v17[7]];
    *(_QWORD *)&v37[v17[8]] = *(_QWORD *)&v38[v17[8]];
    v39 = a3[8];
    v40 = &a1[v39];
    v41 = (char *)a2 + v39;
    *(_QWORD *)&a1[v39] = *(uint64_t *)((char *)a2 + v39);
    swift_retain();
    swift_bridgeObjectRetain();
    v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FD8) + 52);
    v43 = &v40[v42];
    v44 = &v41[v42];
    v13(v43, &v41[v42], v12);
    v13(&v43[v17[5]], &v44[v17[5]], v12);
    *(_QWORD *)&v43[v17[6]] = *(_QWORD *)&v44[v17[6]];
    *(_QWORD *)&v43[v17[7]] = *(_QWORD *)&v44[v17[7]];
    *(_QWORD *)&v43[v17[8]] = *(_QWORD *)&v44[v17[8]];
  }
  swift_retain();
  return a1;
}

uint64_t destroy for WeatherStatisticsModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  swift_bridgeObjectRelease();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190A10);
  v5 = a1 + *(int *)(v4 + 52);
  v6 = sub_1A6121F58();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v8 = a1 + *(int *)(v4 + 56);
  v7(v8, v6);
  v9 = type metadata accessor for WeatherMetadata();
  v7(v8 + *(int *)(v9 + 20), v6);
  swift_release();
  v10 = a1 + a2[5];
  swift_bridgeObjectRelease();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813008);
  v7(v10 + *(int *)(v11 + 52), v6);
  v12 = v10 + *(int *)(v11 + 56);
  v7(v12, v6);
  v7(v12 + *(int *)(v9 + 20), v6);
  swift_release();
  v13 = a1 + a2[6];
  swift_bridgeObjectRelease();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FF8);
  v7(v13 + *(int *)(v14 + 52), v6);
  v15 = v13 + *(int *)(v14 + 56);
  v7(v15, v6);
  v7(v15 + *(int *)(v9 + 20), v6);
  swift_release();
  v16 = a1 + a2[7];
  swift_bridgeObjectRelease();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FE8);
  v7(v16 + *(int *)(v17 + 52), v6);
  v18 = v16 + *(int *)(v17 + 56);
  v7(v18, v6);
  v7(v18 + *(int *)(v9 + 20), v6);
  swift_release();
  v19 = a1 + a2[8];
  swift_bridgeObjectRelease();
  v20 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FD8) + 52);
  v7(v20, v6);
  v7(v20 + *(int *)(v9 + 20), v6);
  return swift_release();
}

char *initializeWithCopy for WeatherStatisticsModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190A10);
  v7 = *(int *)(v6 + 52);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1A6121F58();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v12 = *(int *)(v6 + 56);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v11(&a1[v12], &a2[v12], v10);
  v15 = (int *)type metadata accessor for WeatherMetadata();
  v11(&v13[v15[5]], &v14[v15[5]], v10);
  *(_QWORD *)&v13[v15[6]] = *(_QWORD *)&v14[v15[6]];
  *(_QWORD *)&v13[v15[7]] = *(_QWORD *)&v14[v15[7]];
  *(_QWORD *)&v13[v15[8]] = *(_QWORD *)&v14[v15[8]];
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  swift_retain();
  swift_bridgeObjectRetain();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813008);
  v11(&v17[*(int *)(v19 + 52)], &v18[*(int *)(v19 + 52)], v10);
  v20 = *(int *)(v19 + 56);
  v21 = &v17[v20];
  v22 = &v18[v20];
  v11(v21, &v18[v20], v10);
  v11(&v21[v15[5]], &v22[v15[5]], v10);
  *(_QWORD *)&v21[v15[6]] = *(_QWORD *)&v22[v15[6]];
  *(_QWORD *)&v21[v15[7]] = *(_QWORD *)&v22[v15[7]];
  *(_QWORD *)&v21[v15[8]] = *(_QWORD *)&v22[v15[8]];
  v23 = a3[6];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  swift_retain();
  swift_bridgeObjectRetain();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FF8);
  v11(&v24[*(int *)(v26 + 52)], &v25[*(int *)(v26 + 52)], v10);
  v27 = *(int *)(v26 + 56);
  v28 = &v24[v27];
  v29 = &v25[v27];
  v11(v28, &v25[v27], v10);
  v11(&v28[v15[5]], &v29[v15[5]], v10);
  *(_QWORD *)&v28[v15[6]] = *(_QWORD *)&v29[v15[6]];
  *(_QWORD *)&v28[v15[7]] = *(_QWORD *)&v29[v15[7]];
  *(_QWORD *)&v28[v15[8]] = *(_QWORD *)&v29[v15[8]];
  v30 = a3[7];
  v31 = &a1[v30];
  v32 = &a2[v30];
  *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
  swift_retain();
  swift_bridgeObjectRetain();
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FE8);
  v11(&v31[*(int *)(v33 + 52)], &v32[*(int *)(v33 + 52)], v10);
  v34 = *(int *)(v33 + 56);
  v35 = &v31[v34];
  v36 = &v32[v34];
  v11(v35, &v32[v34], v10);
  v11(&v35[v15[5]], &v36[v15[5]], v10);
  *(_QWORD *)&v35[v15[6]] = *(_QWORD *)&v36[v15[6]];
  *(_QWORD *)&v35[v15[7]] = *(_QWORD *)&v36[v15[7]];
  *(_QWORD *)&v35[v15[8]] = *(_QWORD *)&v36[v15[8]];
  v37 = a3[8];
  v38 = &a1[v37];
  v39 = &a2[v37];
  *(_QWORD *)&a1[v37] = *(_QWORD *)&a2[v37];
  swift_retain();
  swift_bridgeObjectRetain();
  v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FD8) + 52);
  v41 = &v38[v40];
  v42 = &v39[v40];
  v11(v41, &v39[v40], v10);
  v11(&v41[v15[5]], &v42[v15[5]], v10);
  *(_QWORD *)&v41[v15[6]] = *(_QWORD *)&v42[v15[6]];
  *(_QWORD *)&v41[v15[7]] = *(_QWORD *)&v42[v15[7]];
  *(_QWORD *)&v41[v15[8]] = *(_QWORD *)&v42[v15[8]];
  swift_retain();
  return a1;
}

char *assignWithCopy for WeatherStatisticsModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190A10);
  v7 = *(int *)(v6 + 52);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1A6121F58();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v12 = *(int *)(v6 + 56);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v11(&a1[v12], &a2[v12], v10);
  v15 = (int *)type metadata accessor for WeatherMetadata();
  v11(&v13[v15[5]], &v14[v15[5]], v10);
  *(_QWORD *)&v13[v15[6]] = *(_QWORD *)&v14[v15[6]];
  *(_QWORD *)&v13[v15[7]] = *(_QWORD *)&v14[v15[7]];
  *(_QWORD *)&v13[v15[8]] = *(_QWORD *)&v14[v15[8]];
  swift_retain();
  swift_release();
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813008);
  v11(&v17[*(int *)(v19 + 52)], &v18[*(int *)(v19 + 52)], v10);
  v20 = *(int *)(v19 + 56);
  v21 = &v17[v20];
  v22 = &v18[v20];
  v11(v21, &v18[v20], v10);
  v11(&v21[v15[5]], &v22[v15[5]], v10);
  *(_QWORD *)&v21[v15[6]] = *(_QWORD *)&v22[v15[6]];
  *(_QWORD *)&v21[v15[7]] = *(_QWORD *)&v22[v15[7]];
  *(_QWORD *)&v21[v15[8]] = *(_QWORD *)&v22[v15[8]];
  swift_retain();
  swift_release();
  v23 = a3[6];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FF8);
  v11(&v24[*(int *)(v26 + 52)], &v25[*(int *)(v26 + 52)], v10);
  v27 = *(int *)(v26 + 56);
  v28 = &v24[v27];
  v29 = &v25[v27];
  v11(v28, &v25[v27], v10);
  v11(&v28[v15[5]], &v29[v15[5]], v10);
  *(_QWORD *)&v28[v15[6]] = *(_QWORD *)&v29[v15[6]];
  *(_QWORD *)&v28[v15[7]] = *(_QWORD *)&v29[v15[7]];
  *(_QWORD *)&v28[v15[8]] = *(_QWORD *)&v29[v15[8]];
  swift_retain();
  swift_release();
  v30 = a3[7];
  v31 = &a1[v30];
  v32 = &a2[v30];
  *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FE8);
  v11(&v31[*(int *)(v33 + 52)], &v32[*(int *)(v33 + 52)], v10);
  v34 = *(int *)(v33 + 56);
  v35 = &v31[v34];
  v36 = &v32[v34];
  v11(v35, &v32[v34], v10);
  v11(&v35[v15[5]], &v36[v15[5]], v10);
  *(_QWORD *)&v35[v15[6]] = *(_QWORD *)&v36[v15[6]];
  *(_QWORD *)&v35[v15[7]] = *(_QWORD *)&v36[v15[7]];
  *(_QWORD *)&v35[v15[8]] = *(_QWORD *)&v36[v15[8]];
  swift_retain();
  swift_release();
  v37 = a3[8];
  v38 = &a1[v37];
  v39 = &a2[v37];
  *(_QWORD *)&a1[v37] = *(_QWORD *)&a2[v37];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FD8) + 52);
  v41 = &v38[v40];
  v42 = &v39[v40];
  v11(v41, &v39[v40], v10);
  v11(&v41[v15[5]], &v42[v15[5]], v10);
  *(_QWORD *)&v41[v15[6]] = *(_QWORD *)&v42[v15[6]];
  *(_QWORD *)&v41[v15[7]] = *(_QWORD *)&v42[v15[7]];
  *(_QWORD *)&v41[v15[8]] = *(_QWORD *)&v42[v15[8]];
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for WeatherStatisticsModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190A10);
  v7 = *(int *)(v6 + 52);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1A6121F58();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = *(int *)(v6 + 56);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v11(&a1[v12], &a2[v12], v10);
  v15 = (int *)type metadata accessor for WeatherMetadata();
  v11(&v13[v15[5]], &v14[v15[5]], v10);
  *(_QWORD *)&v13[v15[6]] = *(_QWORD *)&v14[v15[6]];
  *(_QWORD *)&v13[v15[7]] = *(_QWORD *)&v14[v15[7]];
  *(_QWORD *)&v13[v15[8]] = *(_QWORD *)&v14[v15[8]];
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813008);
  v11(&v17[*(int *)(v19 + 52)], &v18[*(int *)(v19 + 52)], v10);
  v20 = *(int *)(v19 + 56);
  v21 = &v17[v20];
  v22 = &v18[v20];
  v11(v21, &v18[v20], v10);
  v11(&v21[v15[5]], &v22[v15[5]], v10);
  *(_QWORD *)&v21[v15[6]] = *(_QWORD *)&v22[v15[6]];
  *(_QWORD *)&v21[v15[7]] = *(_QWORD *)&v22[v15[7]];
  *(_QWORD *)&v21[v15[8]] = *(_QWORD *)&v22[v15[8]];
  v23 = a3[6];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FF8);
  v11(&v24[*(int *)(v26 + 52)], &v25[*(int *)(v26 + 52)], v10);
  v27 = *(int *)(v26 + 56);
  v28 = &v24[v27];
  v29 = &v25[v27];
  v11(v28, &v25[v27], v10);
  v11(&v28[v15[5]], &v29[v15[5]], v10);
  *(_QWORD *)&v28[v15[6]] = *(_QWORD *)&v29[v15[6]];
  *(_QWORD *)&v28[v15[7]] = *(_QWORD *)&v29[v15[7]];
  *(_QWORD *)&v28[v15[8]] = *(_QWORD *)&v29[v15[8]];
  v30 = a3[7];
  v31 = &a1[v30];
  v32 = &a2[v30];
  *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FE8);
  v11(&v31[*(int *)(v33 + 52)], &v32[*(int *)(v33 + 52)], v10);
  v34 = *(int *)(v33 + 56);
  v35 = &v31[v34];
  v36 = &v32[v34];
  v11(v35, &v32[v34], v10);
  v11(&v35[v15[5]], &v36[v15[5]], v10);
  *(_QWORD *)&v35[v15[6]] = *(_QWORD *)&v36[v15[6]];
  *(_QWORD *)&v35[v15[7]] = *(_QWORD *)&v36[v15[7]];
  *(_QWORD *)&v35[v15[8]] = *(_QWORD *)&v36[v15[8]];
  v37 = a3[8];
  v38 = &a1[v37];
  v39 = &a2[v37];
  *(_QWORD *)&a1[v37] = *(_QWORD *)&a2[v37];
  v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FD8) + 52);
  v41 = &v38[v40];
  v42 = &v39[v40];
  v11(v41, &v39[v40], v10);
  v11(&v41[v15[5]], &v42[v15[5]], v10);
  *(_QWORD *)&v41[v15[6]] = *(_QWORD *)&v42[v15[6]];
  *(_QWORD *)&v41[v15[7]] = *(_QWORD *)&v42[v15[7]];
  *(_QWORD *)&v41[v15[8]] = *(_QWORD *)&v42[v15[8]];
  return a1;
}

char *assignWithTake for WeatherStatisticsModel(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190A10);
  v7 = *(int *)(v6 + 52);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1A6121F58();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v12 = *(int *)(v6 + 56);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v11(&a1[v12], &a2[v12], v10);
  v15 = (int *)type metadata accessor for WeatherMetadata();
  v11(&v13[v15[5]], &v14[v15[5]], v10);
  *(_QWORD *)&v13[v15[6]] = *(_QWORD *)&v14[v15[6]];
  *(_QWORD *)&v13[v15[7]] = *(_QWORD *)&v14[v15[7]];
  *(_QWORD *)&v13[v15[8]] = *(_QWORD *)&v14[v15[8]];
  swift_release();
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  swift_bridgeObjectRelease();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813008);
  v11(&v17[*(int *)(v19 + 52)], &v18[*(int *)(v19 + 52)], v10);
  v20 = *(int *)(v19 + 56);
  v21 = &v17[v20];
  v22 = &v18[v20];
  v11(v21, &v18[v20], v10);
  v11(&v21[v15[5]], &v22[v15[5]], v10);
  *(_QWORD *)&v21[v15[6]] = *(_QWORD *)&v22[v15[6]];
  *(_QWORD *)&v21[v15[7]] = *(_QWORD *)&v22[v15[7]];
  *(_QWORD *)&v21[v15[8]] = *(_QWORD *)&v22[v15[8]];
  swift_release();
  v23 = a3[6];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  swift_bridgeObjectRelease();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FF8);
  v11(&v24[*(int *)(v26 + 52)], &v25[*(int *)(v26 + 52)], v10);
  v27 = *(int *)(v26 + 56);
  v28 = &v24[v27];
  v29 = &v25[v27];
  v11(v28, &v25[v27], v10);
  v11(&v28[v15[5]], &v29[v15[5]], v10);
  *(_QWORD *)&v28[v15[6]] = *(_QWORD *)&v29[v15[6]];
  *(_QWORD *)&v28[v15[7]] = *(_QWORD *)&v29[v15[7]];
  *(_QWORD *)&v28[v15[8]] = *(_QWORD *)&v29[v15[8]];
  swift_release();
  v30 = a3[7];
  v31 = &a1[v30];
  v32 = &a2[v30];
  *(_QWORD *)&a1[v30] = *(_QWORD *)&a2[v30];
  swift_bridgeObjectRelease();
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FE8);
  v11(&v31[*(int *)(v33 + 52)], &v32[*(int *)(v33 + 52)], v10);
  v34 = *(int *)(v33 + 56);
  v35 = &v31[v34];
  v36 = &v32[v34];
  v11(v35, &v32[v34], v10);
  v11(&v35[v15[5]], &v36[v15[5]], v10);
  *(_QWORD *)&v35[v15[6]] = *(_QWORD *)&v36[v15[6]];
  *(_QWORD *)&v35[v15[7]] = *(_QWORD *)&v36[v15[7]];
  *(_QWORD *)&v35[v15[8]] = *(_QWORD *)&v36[v15[8]];
  swift_release();
  v37 = a3[8];
  v38 = &a1[v37];
  v39 = &a2[v37];
  *(_QWORD *)&a1[v37] = *(_QWORD *)&a2[v37];
  swift_bridgeObjectRelease();
  v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FD8) + 52);
  v41 = &v38[v40];
  v42 = &v39[v40];
  v11(v41, &v39[v40], v10);
  v11(&v41[v15[5]], &v42[v15[5]], v10);
  *(_QWORD *)&v41[v15[6]] = *(_QWORD *)&v42[v15[6]];
  *(_QWORD *)&v41[v15[7]] = *(_QWORD *)&v42[v15[7]];
  *(_QWORD *)&v41[v15[8]] = *(_QWORD *)&v42[v15[8]];
  swift_release();
  return a1;
}

uint64_t sub_1A6025D7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190A10);
  OUTLINED_FUNCTION_14_0();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813008);
    OUTLINED_FUNCTION_14_0();
    if (v9)
    {
      v7 = v10;
      v11 = a3[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FF8);
      OUTLINED_FUNCTION_14_0();
      if (v12)
      {
        v7 = v13;
        v11 = a3[6];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FE8);
        OUTLINED_FUNCTION_14_0();
        if (v14)
        {
          v7 = v15;
          v11 = a3[7];
        }
        else
        {
          v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FD8);
          v11 = a3[8];
        }
      }
    }
    v8 = a1 + v11;
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t sub_1A6025E44(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190A10);
  OUTLINED_FUNCTION_13();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813008);
    OUTLINED_FUNCTION_13();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FF8);
      OUTLINED_FUNCTION_13();
      if (v13)
      {
        v8 = v14;
        v12 = a4[6];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FE8);
        OUTLINED_FUNCTION_13();
        if (v15)
        {
          v8 = v16;
          v12 = a4[7];
        }
        else
        {
          v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FD8);
          v12 = a4[8];
        }
      }
    }
    v9 = a1 + v12;
  }
  return __swift_storeEnumTagSinglePayload(v9, a2, a2, v8);
}

uint64_t sub_1A6025F14()
{
  uint64_t result;

  result = qword_1ED191AC8;
  if (!qword_1ED191AC8)
  {
    type metadata accessor for DayPrecipitationSummary();
    sub_1A5FAF4C0(&qword_1ED191850, (void (*)(uint64_t))type metadata accessor for DayPrecipitationSummary);
    sub_1A5FAF4C0(&qword_1ED191C78, (void (*)(uint64_t))type metadata accessor for DayPrecipitationSummary);
    sub_1A5FAF4C0(&qword_1ED191C80, (void (*)(uint64_t))type metadata accessor for DayPrecipitationSummary);
    type metadata accessor for DailyWeatherSummary();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WeatherStatisticsModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A6026030 + 4 * byte_1A612B8CA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A6026064 + 4 * byte_1A612B8C5[v4]))();
}

uint64_t sub_1A6026064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A602606C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6026074);
  return result;
}

uint64_t sub_1A6026080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6026088);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A602608C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6026094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherStatisticsModel.CodingKeys()
{
  return &type metadata for WeatherStatisticsModel.CodingKeys;
}

unint64_t sub_1A60260B4()
{
  unint64_t result;

  result = qword_1EE813CE0;
  if (!qword_1EE813CE0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612BA34, &type metadata for WeatherStatisticsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813CE0);
  }
  return result;
}

unint64_t sub_1A60260F4()
{
  unint64_t result;

  result = qword_1EE813CE8;
  if (!qword_1EE813CE8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B9A4, &type metadata for WeatherStatisticsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813CE8);
  }
  return result;
}

unint64_t sub_1A6026134()
{
  unint64_t result;

  result = qword_1EE813CF0;
  if (!qword_1EE813CF0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612B9CC, &type metadata for WeatherStatisticsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813CF0);
  }
  return result;
}

uint64_t WatchWeather.init(currentWeather:minuteForecast:hourlyForecast:dailyForecast:airQuality:alerts:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;

  v12 = type metadata accessor for CurrentWeather();
  OUTLINED_FUNCTION_21(a7, v13, v14, v12);
  v15 = (int *)OUTLINED_FUNCTION_2_24();
  v16 = a7 + v15[5];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  OUTLINED_FUNCTION_21(v16, v18, v19, v17);
  v20 = a7 + v15[6];
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  OUTLINED_FUNCTION_21(v20, v22, v23, v21);
  v24 = a7 + v15[7];
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  OUTLINED_FUNCTION_21(v24, v26, v27, v25);
  v28 = a7 + v15[8];
  v29 = type metadata accessor for AirQuality();
  OUTLINED_FUNCTION_21(v28, v30, v31, v29);
  v32 = v15[9];
  *(_QWORD *)(a7 + v32) = 0;
  sub_1A5FA2CA8(a1, a7, &qword_1ED192D38);
  sub_1A5FA2CA8(a2, v16, &qword_1ED192870);
  sub_1A5FA2CA8(a3, v20, &qword_1ED193AC8);
  sub_1A5FA2CA8(a4, v24, &qword_1ED193AA0);
  sub_1A5FA2CA8(a5, v28, &qword_1ED193508);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a7 + v32) = a6;
  return result;
}

uint64_t type metadata accessor for WatchWeather()
{
  uint64_t result;

  result = qword_1ED194B48;
  if (!qword_1ED194B48)
    return swift_getSingletonMetadata();
  return result;
}

void WatchWeather.currentWeather.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A5FA25BC(v1, a1, &qword_1ED192D38);
}

void WatchWeather.currentWeather.setter(uint64_t a1)
{
  uint64_t v1;

  sub_1A5FA2CA8(a1, v1, &qword_1ED192D38);
}

uint64_t (*WatchWeather.currentWeather.modify())()
{
  return GEOLocationCoordinate2DMake;
}

void WatchWeather.minuteForecast.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_61(v0 + *(int *)(v1 + 20), v2, &qword_1ED192870);
  OUTLINED_FUNCTION_51();
}

void WatchWeather.minuteForecast.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_63(v1, v0 + *(int *)(v1 + 20), &qword_1ED192870);
  OUTLINED_FUNCTION_51();
}

double (*WatchWeather.minuteForecast.modify())(double, double)
{
  OUTLINED_FUNCTION_2_24();
  return GEOLocationCoordinate2DMake;
}

void WatchWeather.hourlyForecast.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_61(v0 + *(int *)(v1 + 24), v2, &qword_1ED193AC8);
  OUTLINED_FUNCTION_51();
}

void WatchWeather.hourlyForecast.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_63(v1, v0 + *(int *)(v1 + 24), &qword_1ED193AC8);
  OUTLINED_FUNCTION_51();
}

double (*WatchWeather.hourlyForecast.modify())(double, double)
{
  OUTLINED_FUNCTION_2_24();
  return GEOLocationCoordinate2DMake;
}

void WatchWeather.dailyForecast.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_61(v0 + *(int *)(v1 + 28), v2, &qword_1ED193AA0);
  OUTLINED_FUNCTION_51();
}

void WatchWeather.dailyForecast.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_63(v1, v0 + *(int *)(v1 + 28), &qword_1ED193AA0);
  OUTLINED_FUNCTION_51();
}

double (*WatchWeather.dailyForecast.modify())(double, double)
{
  OUTLINED_FUNCTION_2_24();
  return GEOLocationCoordinate2DMake;
}

void WatchWeather.airQuality.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_61(v0 + *(int *)(v1 + 32), v2, &qword_1ED193508);
  OUTLINED_FUNCTION_51();
}

void WatchWeather.airQuality.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_63(v1, v0 + *(int *)(v1 + 32), &qword_1ED193508);
  OUTLINED_FUNCTION_51();
}

double (*WatchWeather.airQuality.modify())(double, double)
{
  OUTLINED_FUNCTION_2_24();
  return GEOLocationCoordinate2DMake;
}

uint64_t WatchWeather.alerts.getter()
{
  OUTLINED_FUNCTION_2_24();
  return swift_bridgeObjectRetain();
}

void WatchWeather.alerts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_2_24() + 36);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_9();
}

double (*WatchWeather.alerts.modify())(double, double)
{
  OUTLINED_FUNCTION_2_24();
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1A60265EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x57746E6572727563 && a2 == 0xEE00726568746165;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F466574756E696DLL && a2 == 0xEE00747361636572;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6F46796C72756F68 && a2 == 0xEE00747361636572;
      if (v7 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x726F46796C696164 && a2 == 0xED00007473616365;
        if (v8 || (sub_1A6123CF8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x696C617551726961 && a2 == 0xEA00000000007974;
          if (v9 || (sub_1A6123CF8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x737472656C61 && a2 == 0xE600000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_1A6123CF8();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_1A60268E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6026924 + 4 * byte_1A612BAB0[a1]))(0x57746E6572727563, 0xEE00726568746165);
}

uint64_t sub_1A6026924()
{
  return 0x6F466574756E696DLL;
}

uint64_t sub_1A6026958()
{
  return 0x726F46796C696164;
}

uint64_t sub_1A602697C()
{
  return 0x696C617551726961;
}

uint64_t sub_1A6026998()
{
  return 0x737472656C61;
}

uint64_t sub_1A60269AC()
{
  unsigned __int8 *v0;

  return sub_1A60268E4(*v0);
}

uint64_t sub_1A60269B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A60265EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A60269D8()
{
  sub_1A6027E54();
  return sub_1A6123DE8();
}

uint64_t sub_1A6026A00()
{
  sub_1A6027E54();
  return sub_1A6123DF4();
}

uint64_t static WatchWeather.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;

  v150 = a1;
  v151 = a2;
  v127 = type metadata accessor for AirQuality();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v3);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190CC0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_151();
  v139 = v7;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v8);
  v134 = (uint64_t)&v123 - v9;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_129((uint64_t)&v123 - v11);
  v132 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v13);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813CF8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_11_0();
  v133 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_151();
  v146 = v17;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v18);
  v138 = (char *)&v123 - v19;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v20);
  v136 = (uint64_t)&v123 - v21;
  v141 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v23);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813D00);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_215(v25, v123);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_151();
  v135 = v27;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v28);
  v144 = (uint64_t)&v123 - v29;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v30);
  v145 = (uint64_t)&v123 - v31;
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_11_0();
  v137 = v33;
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190E38);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_11_0();
  v149 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_151();
  v143 = v37;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v123 - v39;
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v123 - v42;
  v44 = type metadata accessor for CurrentWeather();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_0();
  v48 = v47 - v46;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813D08);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v50);
  OUTLINED_FUNCTION_0();
  v53 = v52 - v51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v54);
  v56 = (char *)&v123 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v57);
  v59 = (char *)&v123 - v58;
  MEMORY[0x1E0C80A78](v60);
  v62 = (char *)&v123 - v61;
  OUTLINED_FUNCTION_15_18(v150, (uint64_t)&v123 - v61);
  OUTLINED_FUNCTION_15_18(v151, (uint64_t)v59);
  v63 = v53 + *(int *)(v49 + 48);
  OUTLINED_FUNCTION_15_18((uint64_t)v62, v53);
  OUTLINED_FUNCTION_15_18((uint64_t)v59, v63);
  OUTLINED_FUNCTION_26_2(v53, 1, v44);
  if (v64)
  {
    OUTLINED_FUNCTION_20_1((uint64_t)v59);
    OUTLINED_FUNCTION_20_1((uint64_t)v62);
    OUTLINED_FUNCTION_26_2(v63, 1, v44);
    if (v64)
    {
      sub_1A5FAFD58(v53, &qword_1ED192D38);
      goto LABEL_11;
    }
LABEL_9:
    v65 = &qword_1EE813D08;
    v66 = v53;
LABEL_51:
    sub_1A5FAFD58(v66, v65);
    return 0;
  }
  sub_1A5FA25BC(v53, (uint64_t)v56, &qword_1ED192D38);
  OUTLINED_FUNCTION_26_2(v63, 1, v44);
  if (v64)
  {
    OUTLINED_FUNCTION_40_0((uint64_t)v59);
    OUTLINED_FUNCTION_40_0((uint64_t)v62);
    sub_1A5FA1740((uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
    goto LABEL_9;
  }
  sub_1A6027E1C(v63, v48, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  v67 = static CurrentWeather.== infix(_:_:)((uint64_t)v56, v48);
  sub_1A5FA1740(v48, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  OUTLINED_FUNCTION_38_8((uint64_t)v59);
  OUTLINED_FUNCTION_38_8((uint64_t)v62);
  sub_1A5FA1740((uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  OUTLINED_FUNCTION_38_8(v53);
  if ((v67 & 1) == 0)
    return 0;
LABEL_11:
  v68 = OUTLINED_FUNCTION_2_24();
  v69 = v150;
  OUTLINED_FUNCTION_15_18(v150 + *(int *)(v68 + 20), (uint64_t)v43);
  v70 = v151;
  OUTLINED_FUNCTION_15_18(v151 + *(int *)(v68 + 20), (uint64_t)v40);
  v71 = v149;
  v72 = v149 + *(int *)(v147 + 48);
  OUTLINED_FUNCTION_15_18((uint64_t)v43, v149);
  OUTLINED_FUNCTION_15_18((uint64_t)v40, v72);
  v73 = v148;
  OUTLINED_FUNCTION_26_2(v71, 1, v148);
  if (v64)
  {
    OUTLINED_FUNCTION_20_1((uint64_t)v40);
    OUTLINED_FUNCTION_20_1((uint64_t)v43);
    OUTLINED_FUNCTION_26_2(v72, 1, v73);
    v74 = v146;
    if (v64)
    {
      sub_1A5FAFD58(v71, &qword_1ED192870);
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v75 = v143;
  sub_1A5FA25BC(v71, v143, &qword_1ED192870);
  OUTLINED_FUNCTION_26_2(v72, 1, v73);
  if (v76)
  {
    OUTLINED_FUNCTION_18_0((uint64_t)v40);
    OUTLINED_FUNCTION_18_0((uint64_t)v43);
    sub_1A5FAFD58(v75, &qword_1ED193AE0);
LABEL_19:
    v65 = &qword_1ED190E38;
    v66 = v71;
    goto LABEL_51;
  }
  v77 = v137;
  sub_1A5FA3C64(v72, v137, &qword_1ED193AE0);
  v78 = sub_1A5FB1830(v75, v77, sub_1A5FC81B0, &qword_1ED193AE0);
  sub_1A5FAFD58(v77, &qword_1ED193AE0);
  sub_1A5FAFD58((uint64_t)v40, &qword_1ED192870);
  sub_1A5FAFD58((uint64_t)v43, &qword_1ED192870);
  sub_1A5FAFD58(v75, &qword_1ED193AE0);
  v74 = v146;
  sub_1A5FAFD58(v71, &qword_1ED192870);
  if ((v78 & 1) == 0)
    return 0;
LABEL_21:
  v79 = v145;
  OUTLINED_FUNCTION_16_0(v69 + *(int *)(v68 + 24), v145);
  v149 = v68;
  v80 = v70 + *(int *)(v68 + 24);
  v81 = v144;
  OUTLINED_FUNCTION_16_0(v80, v144);
  v82 = v142;
  v83 = v142 + *(int *)(v140 + 48);
  OUTLINED_FUNCTION_16_0(v79, v142);
  OUTLINED_FUNCTION_16_0(v81, v83);
  v84 = v141;
  OUTLINED_FUNCTION_26_2(v82, 1, v141);
  if (v64)
  {
    OUTLINED_FUNCTION_18_0(v81);
    OUTLINED_FUNCTION_18_0(v79);
    v85 = OUTLINED_FUNCTION_26_2(v83, 1, v84);
    v86 = (uint64_t)v138;
    v87 = v139;
    if (v64)
    {
      OUTLINED_FUNCTION_313(v85, &qword_1ED193AC8);
      goto LABEL_31;
    }
LABEL_29:
    v65 = &qword_1EE813D00;
LABEL_50:
    v66 = v82;
    goto LABEL_51;
  }
  v88 = v135;
  sub_1A5FA25BC(v82, v135, &qword_1ED193AC8);
  OUTLINED_FUNCTION_26_2(v83, 1, v84);
  v86 = (uint64_t)v138;
  v87 = v139;
  if (v89)
  {
    OUTLINED_FUNCTION_40_0(v144);
    OUTLINED_FUNCTION_40_0(v145);
    sub_1A5FAFD58(v88, (uint64_t *)&unk_1ED193AB8);
    goto LABEL_29;
  }
  v90 = v130;
  sub_1A5FA3C64(v83, v130, (uint64_t *)&unk_1ED193AB8);
  v91 = sub_1A5FB1830(v88, v90, sub_1A5FB206C, &unk_1ED193AB8);
  OUTLINED_FUNCTION_18_0(v90);
  OUTLINED_FUNCTION_20_1(v144);
  OUTLINED_FUNCTION_20_1(v145);
  OUTLINED_FUNCTION_18_0(v88);
  OUTLINED_FUNCTION_20_1(v82);
  if ((v91 & 1) == 0)
    return 0;
LABEL_31:
  v92 = v149;
  v93 = v136;
  OUTLINED_FUNCTION_16_0(v69 + *(int *)(v149 + 28), v136);
  OUTLINED_FUNCTION_16_0(v70 + *(int *)(v92 + 28), v86);
  v82 = v133;
  v94 = v133 + *(int *)(v131 + 48);
  OUTLINED_FUNCTION_16_0(v93, v133);
  OUTLINED_FUNCTION_16_0(v86, v94);
  v95 = v132;
  OUTLINED_FUNCTION_26_2(v82, 1, v132);
  if (v64)
  {
    v96 = v87;
    OUTLINED_FUNCTION_18_0(v86);
    OUTLINED_FUNCTION_18_0(v93);
    v97 = OUTLINED_FUNCTION_26_2(v94, 1, v95);
    v98 = v134;
    if (v64)
    {
      OUTLINED_FUNCTION_313(v97, &qword_1ED193AA0);
      goto LABEL_41;
    }
    goto LABEL_39;
  }
  sub_1A5FA25BC(v82, v74, &qword_1ED193AA0);
  OUTLINED_FUNCTION_26_2(v94, 1, v95);
  v98 = v134;
  if (v99)
  {
    OUTLINED_FUNCTION_40_0(v86);
    OUTLINED_FUNCTION_40_0(v136);
    sub_1A5FAFD58(v74, (uint64_t *)&unk_1ED193A90);
LABEL_39:
    v65 = &qword_1EE813CF8;
    goto LABEL_50;
  }
  v96 = v87;
  v100 = v125;
  sub_1A5FA3C64(v94, v125, (uint64_t *)&unk_1ED193A90);
  v101 = sub_1A5FB1830(v74, v100, sub_1A5FB2080, &unk_1ED193A90);
  OUTLINED_FUNCTION_18_0(v100);
  OUTLINED_FUNCTION_77(v86);
  OUTLINED_FUNCTION_77(v136);
  OUTLINED_FUNCTION_18_0(v74);
  OUTLINED_FUNCTION_77(v82);
  if ((v101 & 1) == 0)
    return 0;
LABEL_41:
  v102 = v149;
  v103 = v129;
  OUTLINED_FUNCTION_16_0(v69 + *(int *)(v149 + 32), v129);
  OUTLINED_FUNCTION_16_0(v70 + *(int *)(v102 + 32), v98);
  v82 = v128;
  v104 = v128 + *(int *)(v126 + 48);
  OUTLINED_FUNCTION_16_0(v103, v128);
  OUTLINED_FUNCTION_16_0(v98, v104);
  v105 = v127;
  OUTLINED_FUNCTION_26_2(v82, 1, v127);
  if (!v64)
  {
    sub_1A5FA25BC(v82, v96, &qword_1ED193508);
    OUTLINED_FUNCTION_26_2(v104, 1, v105);
    if (!v107)
    {
      v109 = v96;
      v110 = v124;
      sub_1A6027E1C(v104, v124, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
      v111 = static AirQuality.== infix(_:_:)(v109, v110);
      sub_1A5FA1740(v110, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
      OUTLINED_FUNCTION_77(v98);
      OUTLINED_FUNCTION_77(v129);
      sub_1A5FA1740(v109, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
      OUTLINED_FUNCTION_77(v82);
      if ((v111 & 1) == 0)
        return 0;
      goto LABEL_55;
    }
    OUTLINED_FUNCTION_40_0(v98);
    OUTLINED_FUNCTION_40_0(v129);
    sub_1A5FA1740(v96, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
    goto LABEL_49;
  }
  OUTLINED_FUNCTION_18_0(v98);
  OUTLINED_FUNCTION_18_0(v103);
  v106 = OUTLINED_FUNCTION_26_2(v104, 1, v105);
  if (!v64)
  {
LABEL_49:
    v65 = &qword_1ED190CC0;
    goto LABEL_50;
  }
  OUTLINED_FUNCTION_313(v106, &qword_1ED193508);
  v102 = v149;
LABEL_55:
  v112 = *(int *)(v102 + 36);
  v113 = *(_QWORD *)(v70 + v112);
  if (*(_QWORD *)(v69 + v112))
  {
    if (v113)
    {
      swift_bridgeObjectRetain();
      v114 = swift_bridgeObjectRetain();
      sub_1A5FC8174(v114, v113, v115, v116, v117, v118, v119, v120, v123, v124, v125, v126, v127, v128, v129, v130, v131, v132, v133,
        v134);
      v122 = v121;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v122 & 1) != 0)
        return 1;
    }
  }
  else if (!v113)
  {
    return 1;
  }
  return 0;
}

void WatchWeather.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813D10);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6027E54();
  sub_1A6123DD0();
  type metadata accessor for CurrentWeather();
  sub_1A5FAF4C0(&qword_1ED1916E8, (void (*)(uint64_t))type metadata accessor for CurrentWeather);
  OUTLINED_FUNCTION_7_2();
  if (!v1)
  {
    type metadata accessor for WatchWeather();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_30_10(&qword_1ED1914A8);
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_30_10(&qword_1ED1914A0);
    OUTLINED_FUNCTION_6_21();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_30_10(&qword_1ED191498);
    OUTLINED_FUNCTION_6_21();
    type metadata accessor for AirQuality();
    sub_1A5FAF4C0(&qword_1ED1910E8, (void (*)(uint64_t))type metadata accessor for AirQuality);
    OUTLINED_FUNCTION_7_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192648);
    sub_1A6027E90(&qword_1ED1914F0, &qword_1ED1910B0, (uint64_t)&protocol conformance descriptor for WeatherAlert, MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_7_2();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_20();
}

void WatchWeather.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_0();
  v51 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_0();
  v58 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_0();
  v56 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_215(v10, v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_11_0();
  v57 = v12;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813D20);
  v54 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  OUTLINED_FUNCTION_0();
  v15 = v14 - v13;
  v16 = (int *)type metadata accessor for WatchWeather();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_0();
  v20 = v19 - v18;
  type metadata accessor for CurrentWeather();
  OUTLINED_FUNCTION_69();
  __swift_storeEnumTagSinglePayload(v21, v22, v23, v24);
  v25 = v20 + v16[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  v53 = v25;
  OUTLINED_FUNCTION_69();
  __swift_storeEnumTagSinglePayload(v26, v27, v28, v29);
  v30 = v20 + v16[6];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  v52 = v30;
  OUTLINED_FUNCTION_69();
  __swift_storeEnumTagSinglePayload(v31, v32, v33, v34);
  v35 = v20 + v16[7];
  v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  OUTLINED_FUNCTION_69();
  __swift_storeEnumTagSinglePayload(v37, v38, v39, v36);
  v40 = v20 + v16[8];
  v41 = type metadata accessor for AirQuality();
  OUTLINED_FUNCTION_69();
  __swift_storeEnumTagSinglePayload(v42, v43, v44, v41);
  v45 = v16[9];
  *(_QWORD *)(v20 + v45) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6027E54();
  sub_1A6123DC4();
  if (v60)
  {
    v47 = (uint64_t)a1;
    v46 = v20;
  }
  else
  {
    v49 = v35;
    sub_1A5FAF4C0(&qword_1EE813D28, (void (*)(uint64_t))type metadata accessor for CurrentWeather);
    OUTLINED_FUNCTION_18_2();
    v46 = v20;
    sub_1A5FA2CA8(v57, v20, &qword_1ED192D38);
    sub_1A5FA3DEC(&qword_1EE813D30, &qword_1ED193AE0);
    sub_1A6123BFC();
    sub_1A5FA2CA8(v55, v53, &qword_1ED192870);
    sub_1A5FA3DEC(&qword_1EE813D38, (uint64_t *)&unk_1ED193AB8);
    OUTLINED_FUNCTION_18_2();
    sub_1A5FA2CA8(v56, v52, &qword_1ED193AC8);
    sub_1A5FA3DEC(&qword_1EE813D40, (uint64_t *)&unk_1ED193A90);
    OUTLINED_FUNCTION_18_2();
    sub_1A5FA2CA8(v58, v49, &qword_1ED193AA0);
    sub_1A5FAF4C0(&qword_1EE813D48, (void (*)(uint64_t))type metadata accessor for AirQuality);
    OUTLINED_FUNCTION_18_2();
    sub_1A5FA2CA8(v51, v40, &qword_1ED193508);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192648);
    sub_1A6027E90(&qword_1EE813D50, &qword_1EE813D58, (uint64_t)&protocol conformance descriptor for WeatherAlert, MEMORY[0x1E0DEAF40]);
    sub_1A6123BFC();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v15, v59);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v20 + v45) = v61;
    sub_1A6027F14(v20, a2);
    v47 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1(v47);
  sub_1A5FA1740(v46, (uint64_t (*)(_QWORD))type metadata accessor for WatchWeather);
  OUTLINED_FUNCTION_20();
}

void sub_1A6027DE0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  WatchWeather.init(from:)(a1, a2);
}

void sub_1A6027DF4(_QWORD *a1)
{
  WatchWeather.encode(to:)(a1);
}

uint64_t sub_1A6027E08(uint64_t a1, uint64_t a2)
{
  return sub_1A5FB1830(a1, a2, sub_1A5FC81B0, &qword_1ED193AE0);
}

void sub_1A6027E1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_14(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_51();
}

unint64_t sub_1A6027E54()
{
  unint64_t result;

  result = qword_1EE813D18;
  if (!qword_1EE813D18)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612BC54, &type metadata for WatchWeather.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813D18);
  }
  return result;
}

uint64_t sub_1A6027E90(unint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED192648);
    sub_1A5FAF4C0(a2, (void (*)(uint64_t))type metadata accessor for WeatherAlert);
    v10 = v9;
    result = MEMORY[0x1A85BB36C](a4, v8, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A6027F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WatchWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for WatchWeather(_QWORD *a1, char *a2, int *a3)
{
  char *v3;
  int v5;
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  int *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  int *v109;
  uint64_t v110;
  _QWORD *v111;
  char *v112;
  int *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  int *v120;
  uint64_t v121;
  _QWORD *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  _QWORD *v129;
  char *v130;
  int *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  int *v138;
  uint64_t v139;
  _QWORD *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  _QWORD *v147;
  char *v148;
  int *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);
  int *v156;
  uint64_t v157;
  _QWORD *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  int *v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, char *, uint64_t);
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  int *v218;
  char *__dst;
  uint64_t v221;
  uint64_t v222;
  void (*v223)(char *, char *, uint64_t);
  uint64_t v224;
  void (*v225)(char *, char *);
  void (*v226)(char *, char *, uint64_t);
  uint64_t v227;
  uint64_t v228;
  void (*v229)(char *, char *, uint64_t);
  _QWORD *v230;
  uint64_t v231;
  char *v232;
  int *v233;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = (int *)type metadata accessor for CurrentWeather();
    v233 = v6;
    if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, (uint64_t)v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
      memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = sub_1A6121F58();
      v229 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      v231 = v10;
      ((void (*)(_QWORD *, char *))v229)(a1, v3);
      *(_QWORD *)((char *)a1 + v7[5]) = *(_QWORD *)&v3[v7[5]];
      *(_QWORD *)((char *)a1 + v7[6]) = *(_QWORD *)&v3[v7[6]];
      *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)&v3[v7[7]];
      *(_QWORD *)((char *)a1 + v7[8]) = *(_QWORD *)&v3[v7[8]];
      v11 = v7[9];
      v12 = (char *)a1 + v11;
      v13 = &v3[v11];
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
      *((_BYTE *)a1 + v7[10]) = v3[v7[10]];
      v14 = v7[11];
      v15 = (_QWORD *)((char *)a1 + v14);
      v16 = &v3[v14];
      v17 = *((_QWORD *)v16 + 1);
      *v15 = *(_QWORD *)v16;
      v15[1] = v17;
      v18 = v7[12];
      v19 = (char *)a1 + v18;
      v20 = &v3[v18];
      swift_bridgeObjectRetain();
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
      v223 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      v223(v19, v20, v21);
      *(_QWORD *)((char *)a1 + v7[13]) = *(_QWORD *)&v3[v7[13]];
      v22 = v7[14];
      v23 = (char *)a1 + v22;
      v24 = &v3[v22];
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
      v225 = *(void (**)(char *, char *))(*(_QWORD *)(v25 - 8) + 16);
      v227 = v25;
      v225(v23, v24);
      v26 = v7[15];
      v27 = (char *)a1 + v26;
      v28 = &v3[v26];
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      *((_BYTE *)a1 + v7[16]) = v3[v7[16]];
      v30 = v7[17];
      v31 = (char *)a1 + v30;
      v32 = &v3[v30];
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
      v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
      v34(v31, v32, v33);
      v35 = (char *)a1;
      v36 = (int *)type metadata accessor for PrecipitationAmount();
      v34(&v31[v36[5]], &v32[v36[5]], v33);
      v34(&v31[v36[6]], &v32[v36[6]], v33);
      v34(&v31[v36[7]], &v32[v36[7]], v33);
      v34(&v31[v36[8]], &v32[v36[8]], v33);
      v34(&v31[v36[9]], &v32[v36[9]], v33);
      v37 = v7[18];
      v38 = &v35[v37];
      v39 = &v3[v37];
      v34(&v35[v37], &v3[v37], v33);
      v34(&v38[v36[5]], &v39[v36[5]], v33);
      v34(&v38[v36[6]], &v39[v36[6]], v33);
      v34(&v38[v36[7]], &v39[v36[7]], v33);
      v34(&v38[v36[8]], &v39[v36[8]], v33);
      v34(&v38[v36[9]], &v39[v36[9]], v33);
      v40 = v7[19];
      v41 = &v35[v40];
      v42 = &v3[v40];
      v34(&v35[v40], &v3[v40], v33);
      v43 = (int *)type metadata accessor for PrecipitationAmountByType();
      v34(&v41[v43[5]], &v42[v43[5]], v33);
      v34(&v41[v43[6]], &v42[v43[6]], v33);
      v34(&v41[v43[7]], &v42[v43[7]], v33);
      v34(&v41[v43[8]], &v42[v43[8]], v33);
      v44 = v43[9];
      v45 = &v41[v44];
      v46 = &v42[v44];
      v34(v45, v46, v33);
      v47 = v3;
      v48 = (int *)type metadata accessor for SnowfallAmount();
      v34(&v45[v48[5]], &v46[v48[5]], v33);
      v34(&v45[v48[6]], &v46[v48[6]], v33);
      v34(&v45[v48[7]], &v46[v48[7]], v33);
      v34(&v45[v48[8]], &v46[v48[8]], v33);
      v34(&v45[v48[9]], &v46[v48[9]], v33);
      v49 = v7[20];
      v50 = &v35[v49];
      v51 = &v47[v49];
      v34(&v35[v49], &v47[v49], v33);
      v34(&v50[v43[5]], &v51[v43[5]], v33);
      v34(&v50[v43[6]], &v51[v43[6]], v33);
      v34(&v50[v43[7]], &v51[v43[7]], v33);
      v34(&v50[v43[8]], &v51[v43[8]], v33);
      v52 = v43[9];
      v53 = &v50[v52];
      v54 = &v51[v52];
      v34(v53, v54, v33);
      v34(&v53[v48[5]], &v54[v48[5]], v33);
      v34(&v53[v48[6]], &v54[v48[6]], v33);
      v34(&v53[v48[7]], &v54[v48[7]], v33);
      v34(&v53[v48[8]], &v54[v48[8]], v33);
      v34(&v53[v48[9]], &v54[v48[9]], v33);
      v55 = v7[21];
      v56 = &v35[v55];
      v57 = &v47[v55];
      v34(&v35[v55], &v47[v55], v33);
      v34(&v56[v43[5]], &v57[v43[5]], v33);
      v34(&v56[v43[6]], &v57[v43[6]], v33);
      v34(&v56[v43[7]], &v57[v43[7]], v33);
      v34(&v56[v43[8]], &v57[v43[8]], v33);
      v58 = v43[9];
      v59 = &v56[v58];
      v60 = &v57[v58];
      v34(v59, v60, v33);
      v34(&v59[v48[5]], &v60[v48[5]], v33);
      v34(&v59[v48[6]], &v60[v48[6]], v33);
      v34(&v59[v48[7]], &v60[v48[7]], v33);
      v34(&v59[v48[8]], &v60[v48[8]], v33);
      v34(&v59[v48[9]], &v60[v48[9]], v33);
      v61 = v7[22];
      v62 = &v35[v61];
      v63 = &v47[v61];
      v34(&v35[v61], &v47[v61], v33);
      v34(&v62[v43[5]], &v63[v43[5]], v33);
      v34(&v62[v43[6]], &v63[v43[6]], v33);
      v34(&v62[v43[7]], &v63[v43[7]], v33);
      v34(&v62[v43[8]], &v63[v43[8]], v33);
      v64 = v43[9];
      v65 = &v62[v64];
      v66 = &v63[v64];
      v34(v65, v66, v33);
      v34(&v65[v48[5]], &v66[v48[5]], v33);
      v34(&v65[v48[6]], &v66[v48[6]], v33);
      v34(&v65[v48[7]], &v66[v48[7]], v33);
      v34(&v65[v48[8]], &v66[v48[8]], v33);
      v34(&v65[v48[9]], &v66[v48[9]], v33);
      v67 = v7[23];
      v68 = &v35[v67];
      v69 = &v47[v67];
      v34(&v35[v67], &v47[v67], v33);
      v34(&v68[v43[5]], &v69[v43[5]], v33);
      v34(&v68[v43[6]], &v69[v43[6]], v33);
      v34(&v68[v43[7]], &v69[v43[7]], v33);
      v34(&v68[v43[8]], &v69[v43[8]], v33);
      v70 = v43[9];
      v71 = &v68[v70];
      v72 = &v69[v70];
      v34(v71, v72, v33);
      v34(&v71[v48[5]], &v72[v48[5]], v33);
      v34(&v71[v48[6]], &v72[v48[6]], v33);
      v34(&v71[v48[7]], &v72[v48[7]], v33);
      v34(&v71[v48[8]], &v72[v48[8]], v33);
      v34(&v71[v48[9]], &v72[v48[9]], v33);
      v73 = v7[24];
      v74 = &v35[v73];
      v75 = &v47[v73];
      v34(&v35[v73], &v47[v73], v33);
      v34(&v74[v43[5]], &v75[v43[5]], v33);
      v34(&v74[v43[6]], &v75[v43[6]], v33);
      v34(&v74[v43[7]], &v75[v43[7]], v33);
      v34(&v74[v43[8]], &v75[v43[8]], v33);
      v76 = v43[9];
      a1 = v35;
      v77 = &v74[v76];
      v78 = &v75[v76];
      v34(v77, v78, v33);
      v34(&v77[v48[5]], &v78[v48[5]], v33);
      v34(&v77[v48[6]], &v78[v48[6]], v33);
      v34(&v77[v48[7]], &v78[v48[7]], v33);
      v34(&v77[v48[8]], &v78[v48[8]], v33);
      v79 = v48[9];
      v3 = v47;
      v34(&v77[v79], &v78[v79], v33);
      v80 = v7[25];
      v81 = &v35[v80];
      v82 = &v47[v80];
      *(_QWORD *)v81 = *(_QWORD *)v82;
      v81[8] = v82[8];
      v35[v7[26]] = v47[v7[26]];
      v223(&v35[v7[27]], &v47[v7[27]], v21);
      v223(&v35[v7[28]], &v47[v7[28]], v21);
      v83 = v7[29];
      v84 = &v35[v83];
      v85 = &v47[v83];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v47[v83], 1, v21))
      {
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        v223(v84, v85, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v21);
      }
      v87 = v7[30];
      v88 = &v35[v87];
      v89 = &v47[v87];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v47[v87], 1, v21))
      {
        v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        v223(v88, v89, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v21);
      }
      v91 = v7[31];
      v92 = &v35[v91];
      v93 = &v47[v91];
      *(_QWORD *)v92 = *(_QWORD *)v93;
      v92[8] = v93[8];
      v34(&v35[v7[32]], &v47[v7[32]], v33);
      v94 = v7[33];
      v95 = &v35[v94];
      v96 = &v47[v94];
      v35[v94] = v47[v94];
      v97 = (int *)type metadata accessor for Wind();
      v98 = v97[5];
      v99 = &v95[v98];
      v100 = &v96[v98];
      v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v99, v100, v101);
      ((void (*)(char *, char *, uint64_t))v225)(&v95[v97[6]], &v96[v97[6]], v227);
      v102 = v97[7];
      v103 = &v95[v102];
      v104 = &v96[v102];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v96[v102], 1, v227))
      {
        v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
        memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v225)(v103, v104, v227);
        __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v227);
      }
      v106 = v7[34];
      v107 = (char *)a1 + v106;
      v108 = &v47[v106];
      v229((char *)a1 + v106, &v47[v106], v231);
      v109 = (int *)type metadata accessor for WeatherMetadata();
      v229(&v107[v109[5]], &v108[v109[5]], v231);
      *(_QWORD *)&v107[v109[6]] = *(_QWORD *)&v108[v109[6]];
      *(_QWORD *)&v107[v109[7]] = *(_QWORD *)&v108[v109[7]];
      *(_QWORD *)&v107[v109[8]] = *(_QWORD *)&v108[v109[8]];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v7);
      v6 = v233;
    }
    v110 = v6[5];
    v111 = (_QWORD *)((char *)a1 + v110);
    v112 = &v3[v110];
    v113 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v112, 1, (uint64_t)v113))
    {
      v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
      memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    }
    else
    {
      *v111 = *(_QWORD *)v112;
      v115 = v113[13];
      v116 = (char *)v111 + v115;
      v117 = &v112[v115];
      v118 = sub_1A6121F58();
      v119 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
      swift_bridgeObjectRetain();
      v119(v116, v117, v118);
      v120 = (int *)type metadata accessor for WeatherMetadata();
      v119(&v116[v120[5]], &v117[v120[5]], v118);
      *(_QWORD *)&v116[v120[6]] = *(_QWORD *)&v117[v120[6]];
      *(_QWORD *)&v116[v120[7]] = *(_QWORD *)&v117[v120[7]];
      *(_QWORD *)&v116[v120[8]] = *(_QWORD *)&v117[v120[8]];
      v121 = v113[14];
      v122 = (_QWORD *)((char *)v111 + v121);
      v123 = &v112[v121];
      v124 = *((_QWORD *)v123 + 1);
      *v122 = *(_QWORD *)v123;
      v122[1] = v124;
      *(_QWORD *)((char *)v111 + v113[15]) = *(_QWORD *)&v112[v113[15]];
      *(_QWORD *)((char *)v111 + v113[16]) = *(_QWORD *)&v112[v113[16]];
      v125 = v113[17];
      v126 = (char *)v111 + v125;
      v127 = &v112[v125];
      v126[16] = v127[16];
      *(_OWORD *)v126 = *(_OWORD *)v127;
      swift_retain();
      v6 = v233;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v111, 0, 1, (uint64_t)v113);
    }
    v128 = v6[6];
    v129 = (_QWORD *)((char *)a1 + v128);
    v130 = &v3[v128];
    v131 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
    if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, (uint64_t)v131))
    {
      v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
      memcpy(v129, v130, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
    }
    else
    {
      *v129 = *(_QWORD *)v130;
      v133 = v131[13];
      v134 = (char *)v129 + v133;
      v135 = &v130[v133];
      v136 = sub_1A6121F58();
      v137 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 16);
      swift_bridgeObjectRetain();
      v137(v134, v135, v136);
      v138 = (int *)type metadata accessor for WeatherMetadata();
      v137(&v134[v138[5]], &v135[v138[5]], v136);
      *(_QWORD *)&v134[v138[6]] = *(_QWORD *)&v135[v138[6]];
      *(_QWORD *)&v134[v138[7]] = *(_QWORD *)&v135[v138[7]];
      *(_QWORD *)&v134[v138[8]] = *(_QWORD *)&v135[v138[8]];
      v139 = v131[14];
      v140 = (_QWORD *)((char *)v129 + v139);
      v141 = &v130[v139];
      v142 = *((_QWORD *)v141 + 1);
      *v140 = *(_QWORD *)v141;
      v140[1] = v142;
      *(_QWORD *)((char *)v129 + v131[15]) = *(_QWORD *)&v130[v131[15]];
      *(_QWORD *)((char *)v129 + v131[16]) = *(_QWORD *)&v130[v131[16]];
      v143 = v131[17];
      v144 = (char *)v129 + v143;
      v145 = &v130[v143];
      v144[16] = v145[16];
      *(_OWORD *)v144 = *(_OWORD *)v145;
      swift_retain();
      v6 = v233;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, (uint64_t)v131);
    }
    v146 = v6[7];
    v147 = (_QWORD *)((char *)a1 + v146);
    v148 = &v3[v146];
    v149 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
    if (__swift_getEnumTagSinglePayload((uint64_t)v148, 1, (uint64_t)v149))
    {
      v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
      memcpy(v147, v148, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
    }
    else
    {
      *v147 = *(_QWORD *)v148;
      v151 = v149[13];
      v152 = (char *)v147 + v151;
      v153 = &v148[v151];
      v154 = sub_1A6121F58();
      v155 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 16);
      swift_bridgeObjectRetain();
      v155(v152, v153, v154);
      v156 = (int *)type metadata accessor for WeatherMetadata();
      v155(&v152[v156[5]], &v153[v156[5]], v154);
      *(_QWORD *)&v152[v156[6]] = *(_QWORD *)&v153[v156[6]];
      *(_QWORD *)&v152[v156[7]] = *(_QWORD *)&v153[v156[7]];
      *(_QWORD *)&v152[v156[8]] = *(_QWORD *)&v153[v156[8]];
      v157 = v149[14];
      v158 = (_QWORD *)((char *)v147 + v157);
      v159 = &v148[v157];
      v160 = *((_QWORD *)v159 + 1);
      *v158 = *(_QWORD *)v159;
      v158[1] = v160;
      *(_QWORD *)((char *)v147 + v149[15]) = *(_QWORD *)&v148[v149[15]];
      *(_QWORD *)((char *)v147 + v149[16]) = *(_QWORD *)&v148[v149[16]];
      v161 = v149[17];
      v162 = (char *)v147 + v161;
      v163 = &v148[v161];
      v162[16] = v163[16];
      *(_OWORD *)v162 = *(_OWORD *)v163;
      swift_retain();
      v6 = v233;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v147, 0, 1, (uint64_t)v149);
    }
    v164 = v6[8];
    v165 = (char *)a1 + v164;
    v166 = &v3[v164];
    v167 = (int *)type metadata accessor for AirQuality();
    if (__swift_getEnumTagSinglePayload((uint64_t)v166, 1, (uint64_t)v167))
    {
      v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
      memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
    }
    else
    {
      v230 = a1;
      v232 = v3;
      v169 = sub_1A6121F58();
      v170 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 16);
      v170(v165, v166, v169);
      v226 = v170;
      v228 = v169;
      v170(&v165[v167[5]], &v166[v167[5]], v169);
      v171 = v167[6];
      v172 = &v165[v171];
      v173 = &v166[v171];
      v224 = *((_QWORD *)v173 + 1);
      *(_QWORD *)v172 = *(_QWORD *)v173;
      *((_QWORD *)v172 + 1) = v224;
      v174 = v167[7];
      v175 = &v165[v174];
      v176 = &v166[v174];
      v177 = *((_QWORD *)v176 + 1);
      *(_QWORD *)v175 = *(_QWORD *)v176;
      *((_QWORD *)v175 + 1) = v177;
      v178 = *((_QWORD *)v176 + 3);
      *((_QWORD *)v175 + 2) = *((_QWORD *)v176 + 2);
      *((_QWORD *)v175 + 3) = v178;
      v179 = *((_QWORD *)v176 + 5);
      *((_QWORD *)v175 + 4) = *((_QWORD *)v176 + 4);
      *((_QWORD *)v175 + 5) = v179;
      v180 = *((_QWORD *)v176 + 7);
      *((_QWORD *)v175 + 6) = *((_QWORD *)v176 + 6);
      *((_QWORD *)v175 + 7) = v180;
      v181 = *((_QWORD *)v176 + 9);
      *((_QWORD *)v175 + 8) = *((_QWORD *)v176 + 8);
      *((_QWORD *)v175 + 9) = v181;
      v175[80] = v176[80];
      *(_OWORD *)(v175 + 88) = *(_OWORD *)(v176 + 88);
      v222 = *((_QWORD *)v176 + 14);
      *((_QWORD *)v175 + 13) = *((_QWORD *)v176 + 13);
      *((_QWORD *)v175 + 14) = v222;
      *(_QWORD *)&v165[v167[8]] = *(_QWORD *)&v166[v167[8]];
      v182 = v167[9];
      v183 = &v165[v182];
      v184 = &v166[v182];
      v185 = *((_QWORD *)v184 + 1);
      *(_QWORD *)v183 = *(_QWORD *)v184;
      *((_QWORD *)v183 + 1) = v185;
      *((_OWORD *)v183 + 1) = *((_OWORD *)v184 + 1);
      v186 = *((_QWORD *)v184 + 5);
      *((_QWORD *)v183 + 4) = *((_QWORD *)v184 + 4);
      *((_QWORD *)v183 + 5) = v186;
      *((_QWORD *)v183 + 6) = *((_QWORD *)v184 + 6);
      *(_OWORD *)(v183 + 56) = *(_OWORD *)(v184 + 56);
      v187 = *((_QWORD *)v184 + 10);
      *((_QWORD *)v183 + 9) = *((_QWORD *)v184 + 9);
      *((_QWORD *)v183 + 10) = v187;
      v165[v167[10]] = v166[v167[10]];
      v188 = v167[11];
      __dst = &v165[v188];
      v189 = &v166[v188];
      v221 = type metadata accessor for ProviderAttribution();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v189, 1, v221))
      {
        v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
        memcpy(__dst, v189, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
        v3 = v232;
      }
      else
      {
        v191 = *((_QWORD *)v189 + 1);
        *(_QWORD *)__dst = *(_QWORD *)v189;
        *((_QWORD *)__dst + 1) = v191;
        v192 = *(int *)(v221 + 20);
        v193 = &__dst[v192];
        v194 = &v189[v192];
        v195 = sub_1A6121DF0();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v194, 1, v195))
        {
          v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
          memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 16))(v193, v194, v195);
          __swift_storeEnumTagSinglePayload((uint64_t)v193, 0, 1, v195);
        }
        v3 = v232;
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v221);
      }
      v197 = v167[12];
      v198 = &v165[v197];
      v199 = &v166[v197];
      v200 = sub_1A6121DF0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 16))(v198, v199, v200);
      *(_QWORD *)&v165[v167[13]] = *(_QWORD *)&v166[v167[13]];
      v201 = v167[14];
      v202 = &v165[v201];
      v203 = &v166[v201];
      v204 = type metadata accessor for AirPollutant();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v203, 1, v204))
      {
        v205 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
        memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
      }
      else
      {
        *v202 = *v203;
        v206 = *(int *)(v204 + 20);
        v207 = &v202[v206];
        v208 = &v203[v206];
        type metadata accessor for AirPollutantMeasurement();
        if (swift_getEnumCaseMultiPayload() == 1)
          v209 = &qword_1ED190B60;
        else
          v209 = &qword_1ED1922B8;
        v210 = __swift_instantiateConcreteTypeFromMangledName(v209);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 16))(v207, v208, v210);
        v3 = v232;
        swift_storeEnumTagMultiPayload();
        v202[*(int *)(v204 + 24)] = v203[*(int *)(v204 + 24)];
        __swift_storeEnumTagSinglePayload((uint64_t)v202, 0, 1, v204);
      }
      v165[v167[15]] = v166[v167[15]];
      v211 = v167[16];
      v212 = &v165[v211];
      v213 = &v166[v211];
      *v212 = *v213;
      v214 = *((_QWORD *)v213 + 2);
      *((_QWORD *)v212 + 1) = *((_QWORD *)v213 + 1);
      *((_QWORD *)v212 + 2) = v214;
      v215 = v167[17];
      v216 = &v165[v215];
      v217 = &v166[v215];
      swift_bridgeObjectRetain();
      v226(v216, v217, v228);
      v218 = (int *)type metadata accessor for WeatherMetadata();
      v226(&v216[v218[5]], &v217[v218[5]], v228);
      *(_QWORD *)&v216[v218[6]] = *(_QWORD *)&v217[v218[6]];
      *(_QWORD *)&v216[v218[7]] = *(_QWORD *)&v217[v218[7]];
      *(_QWORD *)&v216[v218[8]] = *(_QWORD *)&v217[v218[8]];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v165, 0, 1, (uint64_t)v167);
      a1 = v230;
      v6 = v233;
    }
    *(_QWORD *)((char *)a1 + v6[9]) = *(_QWORD *)&v3[v6[9]];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WatchWeather(uint64_t a1, int *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  int *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v76)(uint64_t, uint64_t);
  void (*v77)(uint64_t, uint64_t);
  void (*v78)(uint64_t);
  uint64_t v79;

  v4 = (int *)type metadata accessor for CurrentWeather();
  if (!__swift_getEnumTagSinglePayload(a1, 1, (uint64_t)v4))
  {
    v5 = sub_1A6121F58();
    v78 = *(void (**)(uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v79 = v5;
    v78(a1);
    swift_bridgeObjectRelease();
    v6 = a1 + v4[12];
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    v76 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v76(v6, v7);
    v8 = a1 + v4[14];
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
    v77 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v77(v8, v9);
    v10 = a1 + v4[15];
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = a1 + v4[17];
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v14(v12, v13);
    v15 = (int *)type metadata accessor for PrecipitationAmount();
    v14(v12 + v15[5], v13);
    v14(v12 + v15[6], v13);
    v14(v12 + v15[7], v13);
    v14(v12 + v15[8], v13);
    v14(v12 + v15[9], v13);
    v16 = a1 + v4[18];
    v14(v16, v13);
    v14(v16 + v15[5], v13);
    v14(v16 + v15[6], v13);
    v14(v16 + v15[7], v13);
    v14(v16 + v15[8], v13);
    v14(v16 + v15[9], v13);
    v17 = a1 + v4[19];
    v14(v17, v13);
    v18 = (int *)type metadata accessor for PrecipitationAmountByType();
    v14(v17 + v18[5], v13);
    v14(v17 + v18[6], v13);
    v14(v17 + v18[7], v13);
    v14(v17 + v18[8], v13);
    v19 = v17 + v18[9];
    v14(v19, v13);
    v20 = (int *)type metadata accessor for SnowfallAmount();
    v14(v19 + v20[5], v13);
    v14(v19 + v20[6], v13);
    v14(v19 + v20[7], v13);
    v14(v19 + v20[8], v13);
    v14(v19 + v20[9], v13);
    v21 = a1 + v4[20];
    v14(v21, v13);
    v14(v21 + v18[5], v13);
    v14(v21 + v18[6], v13);
    v14(v21 + v18[7], v13);
    v14(v21 + v18[8], v13);
    v22 = v21 + v18[9];
    v14(v22, v13);
    v14(v22 + v20[5], v13);
    v14(v22 + v20[6], v13);
    v14(v22 + v20[7], v13);
    v14(v22 + v20[8], v13);
    v14(v22 + v20[9], v13);
    v23 = a1 + v4[21];
    v14(v23, v13);
    v14(v23 + v18[5], v13);
    v14(v23 + v18[6], v13);
    v14(v23 + v18[7], v13);
    v14(v23 + v18[8], v13);
    v24 = v23 + v18[9];
    v14(v24, v13);
    v14(v24 + v20[5], v13);
    v14(v24 + v20[6], v13);
    v14(v24 + v20[7], v13);
    v14(v24 + v20[8], v13);
    v14(v24 + v20[9], v13);
    v25 = a1 + v4[22];
    v14(v25, v13);
    v14(v25 + v18[5], v13);
    v14(v25 + v18[6], v13);
    v14(v25 + v18[7], v13);
    v14(v25 + v18[8], v13);
    v26 = v25 + v18[9];
    v14(v26, v13);
    v14(v26 + v20[5], v13);
    v14(v26 + v20[6], v13);
    v14(v26 + v20[7], v13);
    v14(v26 + v20[8], v13);
    v14(v26 + v20[9], v13);
    v27 = a1 + v4[23];
    v14(v27, v13);
    v14(v27 + v18[5], v13);
    v14(v27 + v18[6], v13);
    v14(v27 + v18[7], v13);
    v14(v27 + v18[8], v13);
    v28 = v27 + v18[9];
    v14(v28, v13);
    v14(v28 + v20[5], v13);
    v14(v28 + v20[6], v13);
    v14(v28 + v20[7], v13);
    v14(v28 + v20[8], v13);
    v14(v28 + v20[9], v13);
    v29 = a1 + v4[24];
    v14(v29, v13);
    v14(v29 + v18[5], v13);
    v14(v29 + v18[6], v13);
    v14(v29 + v18[7], v13);
    v14(v29 + v18[8], v13);
    v30 = v29 + v18[9];
    v14(v30, v13);
    v14(v30 + v20[5], v13);
    v14(v30 + v20[6], v13);
    v14(v30 + v20[7], v13);
    v14(v30 + v20[8], v13);
    v14(v30 + v20[9], v13);
    v76(a1 + v4[27], v7);
    v76(a1 + v4[28], v7);
    v31 = a1 + v4[29];
    if (!__swift_getEnumTagSinglePayload(v31, 1, v7))
      v76(v31, v7);
    v32 = a1 + v4[30];
    if (!__swift_getEnumTagSinglePayload(v32, 1, v7))
      v76(v32, v7);
    v14(a1 + v4[32], v13);
    v33 = a1 + v4[33];
    v34 = (int *)type metadata accessor for Wind();
    v35 = v33 + v34[5];
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
    v77(v33 + v34[6], v9);
    v37 = v33 + v34[7];
    if (!__swift_getEnumTagSinglePayload(v37, 1, v9))
      v77(v37, v9);
    v38 = a1 + v4[34];
    ((void (*)(uint64_t, uint64_t))v78)(v38, v79);
    v39 = type metadata accessor for WeatherMetadata();
    ((void (*)(uint64_t, uint64_t))v78)(v38 + *(int *)(v39 + 20), v79);
    swift_release();
  }
  v40 = a1 + a2[5];
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  if (!__swift_getEnumTagSinglePayload(v40, 1, v41))
  {
    swift_bridgeObjectRelease();
    v42 = v40 + *(int *)(v41 + 52);
    v43 = sub_1A6121F58();
    v44 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8);
    v44(v42, v43);
    v45 = type metadata accessor for WeatherMetadata();
    v44(v42 + *(int *)(v45 + 20), v43);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v46 = a1 + a2[6];
  v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  if (!__swift_getEnumTagSinglePayload(v46, 1, v47))
  {
    swift_bridgeObjectRelease();
    v48 = v46 + *(int *)(v47 + 52);
    v49 = sub_1A6121F58();
    v50 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8);
    v50(v48, v49);
    v51 = type metadata accessor for WeatherMetadata();
    v50(v48 + *(int *)(v51 + 20), v49);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v52 = a1 + a2[7];
  v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  if (!__swift_getEnumTagSinglePayload(v52, 1, v53))
  {
    swift_bridgeObjectRelease();
    v54 = v52 + *(int *)(v53 + 52);
    v55 = sub_1A6121F58();
    v56 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8);
    v56(v54, v55);
    v57 = type metadata accessor for WeatherMetadata();
    v56(v54 + *(int *)(v57 + 20), v55);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v58 = a1 + a2[8];
  v59 = (int *)type metadata accessor for AirQuality();
  if (!__swift_getEnumTagSinglePayload(v58, 1, (uint64_t)v59))
  {
    v60 = sub_1A6121F58();
    v61 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8);
    v61(v58, v60);
    v61(v58 + v59[5], v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v62 = v58 + v59[11];
    v63 = type metadata accessor for ProviderAttribution();
    if (!__swift_getEnumTagSinglePayload(v62, 1, v63))
    {
      swift_bridgeObjectRelease();
      v64 = v62 + *(int *)(v63 + 20);
      v65 = sub_1A6121DF0();
      if (!__swift_getEnumTagSinglePayload(v64, 1, v65))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
    }
    v66 = v58 + v59[12];
    v67 = sub_1A6121DF0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v66, v67);
    swift_bridgeObjectRelease();
    v68 = v58 + v59[14];
    v69 = type metadata accessor for AirPollutant();
    if (!__swift_getEnumTagSinglePayload(v68, 1, v69))
    {
      v70 = v68 + *(int *)(v69 + 20);
      type metadata accessor for AirPollutantMeasurement();
      if (swift_getEnumCaseMultiPayload() == 1)
        v71 = &qword_1ED190B60;
      else
        v71 = &qword_1ED1922B8;
      v72 = __swift_instantiateConcreteTypeFromMangledName(v71);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(v70, v72);
    }
    swift_bridgeObjectRelease();
    v73 = v58 + v59[17];
    v61(v73, v60);
    v74 = type metadata accessor for WeatherMetadata();
    v61(v73 + *(int *)(v74 + 20), v60);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for WatchWeather(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  int *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  int *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  int *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  void (*v117)(char *, char *, uint64_t);
  int *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  int *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  void (*v135)(char *, char *, uint64_t);
  int *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  int *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  void (*v153)(char *, char *, uint64_t);
  int *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  int *v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(char *, char *, uint64_t);
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  int *v216;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  void (*__dst)(char *, char *, uint64_t);
  char *__dsta;
  void (*v223)(char *, char *);
  void (*v224)(char *, char *, uint64_t);
  uint64_t v225;
  uint64_t v226;
  void (*v227)(char *, char *);
  char *v228;
  uint64_t v229;
  char *v230;
  int *v231;

  v6 = (int *)type metadata accessor for CurrentWeather();
  v231 = a3;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_1A6121F58();
    v227 = *(void (**)(char *, char *))(*(_QWORD *)(v8 - 8) + 16);
    v229 = v8;
    v227(a1, a2);
    *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    v9 = v6[9];
    v10 = &a1[v9];
    v11 = &a2[v9];
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    a1[v6[10]] = a2[v6[10]];
    v12 = v6[11];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = v6[12];
    v17 = &a1[v16];
    v18 = &a2[v16];
    swift_bridgeObjectRetain();
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    __dst = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    __dst(v17, v18, v19);
    *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
    v20 = v6[14];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
    v223 = *(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16);
    v225 = v23;
    v223(v21, v22);
    v24 = v6[15];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    a1[v6[16]] = a2[v6[16]];
    v28 = v6[17];
    v29 = &a1[v28];
    v30 = &a2[v28];
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    v32(v29, v30, v31);
    v33 = a1;
    v34 = (int *)type metadata accessor for PrecipitationAmount();
    v32(&v29[v34[5]], &v30[v34[5]], v31);
    v32(&v29[v34[6]], &v30[v34[6]], v31);
    v32(&v29[v34[7]], &v30[v34[7]], v31);
    v32(&v29[v34[8]], &v30[v34[8]], v31);
    v32(&v29[v34[9]], &v30[v34[9]], v31);
    v35 = v6[18];
    v36 = &v33[v35];
    v37 = &a2[v35];
    v32(&v33[v35], &a2[v35], v31);
    v32(&v36[v34[5]], &v37[v34[5]], v31);
    v32(&v36[v34[6]], &v37[v34[6]], v31);
    v32(&v36[v34[7]], &v37[v34[7]], v31);
    v32(&v36[v34[8]], &v37[v34[8]], v31);
    v32(&v36[v34[9]], &v37[v34[9]], v31);
    v38 = v6[19];
    v39 = &v33[v38];
    v40 = &a2[v38];
    v32(&v33[v38], &a2[v38], v31);
    v41 = (int *)type metadata accessor for PrecipitationAmountByType();
    v32(&v39[v41[5]], &v40[v41[5]], v31);
    v32(&v39[v41[6]], &v40[v41[6]], v31);
    v32(&v39[v41[7]], &v40[v41[7]], v31);
    v32(&v39[v41[8]], &v40[v41[8]], v31);
    v42 = v41[9];
    v43 = &v39[v42];
    v44 = &v40[v42];
    v32(v43, v44, v31);
    v45 = a2;
    v46 = (int *)type metadata accessor for SnowfallAmount();
    v32(&v43[v46[5]], &v44[v46[5]], v31);
    v32(&v43[v46[6]], &v44[v46[6]], v31);
    v32(&v43[v46[7]], &v44[v46[7]], v31);
    v32(&v43[v46[8]], &v44[v46[8]], v31);
    v32(&v43[v46[9]], &v44[v46[9]], v31);
    v47 = v6[20];
    v48 = &v33[v47];
    v49 = &v45[v47];
    v32(&v33[v47], &v45[v47], v31);
    v32(&v48[v41[5]], &v49[v41[5]], v31);
    v32(&v48[v41[6]], &v49[v41[6]], v31);
    v32(&v48[v41[7]], &v49[v41[7]], v31);
    v32(&v48[v41[8]], &v49[v41[8]], v31);
    v50 = v41[9];
    v51 = &v48[v50];
    v52 = &v49[v50];
    v32(v51, v52, v31);
    v32(&v51[v46[5]], &v52[v46[5]], v31);
    v32(&v51[v46[6]], &v52[v46[6]], v31);
    v32(&v51[v46[7]], &v52[v46[7]], v31);
    v32(&v51[v46[8]], &v52[v46[8]], v31);
    v32(&v51[v46[9]], &v52[v46[9]], v31);
    v53 = v6[21];
    v54 = &v33[v53];
    v55 = &v45[v53];
    v32(&v33[v53], &v45[v53], v31);
    v32(&v54[v41[5]], &v55[v41[5]], v31);
    v32(&v54[v41[6]], &v55[v41[6]], v31);
    v32(&v54[v41[7]], &v55[v41[7]], v31);
    v32(&v54[v41[8]], &v55[v41[8]], v31);
    v56 = v41[9];
    v57 = &v54[v56];
    v58 = &v55[v56];
    v32(v57, v58, v31);
    v32(&v57[v46[5]], &v58[v46[5]], v31);
    v32(&v57[v46[6]], &v58[v46[6]], v31);
    v32(&v57[v46[7]], &v58[v46[7]], v31);
    v32(&v57[v46[8]], &v58[v46[8]], v31);
    v32(&v57[v46[9]], &v58[v46[9]], v31);
    v59 = v6[22];
    v60 = &v33[v59];
    v61 = &v45[v59];
    v32(&v33[v59], &v45[v59], v31);
    v32(&v60[v41[5]], &v61[v41[5]], v31);
    v32(&v60[v41[6]], &v61[v41[6]], v31);
    v32(&v60[v41[7]], &v61[v41[7]], v31);
    v32(&v60[v41[8]], &v61[v41[8]], v31);
    v62 = v41[9];
    v63 = &v60[v62];
    v64 = &v61[v62];
    v32(v63, v64, v31);
    v32(&v63[v46[5]], &v64[v46[5]], v31);
    v32(&v63[v46[6]], &v64[v46[6]], v31);
    v32(&v63[v46[7]], &v64[v46[7]], v31);
    v32(&v63[v46[8]], &v64[v46[8]], v31);
    v32(&v63[v46[9]], &v64[v46[9]], v31);
    v65 = v6[23];
    v66 = &v33[v65];
    v67 = &v45[v65];
    v32(&v33[v65], &v45[v65], v31);
    v32(&v66[v41[5]], &v67[v41[5]], v31);
    v32(&v66[v41[6]], &v67[v41[6]], v31);
    v32(&v66[v41[7]], &v67[v41[7]], v31);
    v32(&v66[v41[8]], &v67[v41[8]], v31);
    v68 = v41[9];
    v69 = &v66[v68];
    v70 = &v67[v68];
    v32(v69, v70, v31);
    v32(&v69[v46[5]], &v70[v46[5]], v31);
    v32(&v69[v46[6]], &v70[v46[6]], v31);
    v32(&v69[v46[7]], &v70[v46[7]], v31);
    v32(&v69[v46[8]], &v70[v46[8]], v31);
    v32(&v69[v46[9]], &v70[v46[9]], v31);
    v71 = v6[24];
    v72 = &v33[v71];
    v73 = &v45[v71];
    v32(&v33[v71], &v45[v71], v31);
    v32(&v72[v41[5]], &v73[v41[5]], v31);
    v32(&v72[v41[6]], &v73[v41[6]], v31);
    v32(&v72[v41[7]], &v73[v41[7]], v31);
    v32(&v72[v41[8]], &v73[v41[8]], v31);
    v74 = v41[9];
    a1 = v33;
    v75 = &v72[v74];
    v76 = &v73[v74];
    v32(v75, v76, v31);
    v32(&v75[v46[5]], &v76[v46[5]], v31);
    v32(&v75[v46[6]], &v76[v46[6]], v31);
    v32(&v75[v46[7]], &v76[v46[7]], v31);
    v32(&v75[v46[8]], &v76[v46[8]], v31);
    v77 = v46[9];
    a2 = v45;
    v32(&v75[v77], &v76[v77], v31);
    v78 = v6[25];
    v79 = &v33[v78];
    v80 = &v45[v78];
    *(_QWORD *)v79 = *(_QWORD *)v80;
    v79[8] = v80[8];
    v33[v6[26]] = v45[v6[26]];
    __dst(&v33[v6[27]], &v45[v6[27]], v19);
    __dst(&v33[v6[28]], &v45[v6[28]], v19);
    v81 = v6[29];
    v82 = &v33[v81];
    v83 = &v45[v81];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v45[v81], 1, v19))
    {
      v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
      memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      __dst(v82, v83, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v19);
    }
    v85 = v6[30];
    v86 = &v33[v85];
    v87 = &v45[v85];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v45[v85], 1, v19))
    {
      v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
      memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    }
    else
    {
      __dst(v86, v87, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v86, 0, 1, v19);
    }
    v89 = v6[31];
    v90 = &v33[v89];
    v91 = &v45[v89];
    *(_QWORD *)v90 = *(_QWORD *)v91;
    v90[8] = v91[8];
    v32(&v33[v6[32]], &v45[v6[32]], v31);
    v92 = v6[33];
    v93 = &v33[v92];
    v94 = &v45[v92];
    v33[v92] = v45[v92];
    v95 = (int *)type metadata accessor for Wind();
    v96 = v95[5];
    v97 = &v93[v96];
    v98 = &v94[v96];
    v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v97, v98, v99);
    ((void (*)(char *, char *, uint64_t))v223)(&v93[v95[6]], &v94[v95[6]], v225);
    v100 = v95[7];
    v101 = &v93[v100];
    v102 = &v94[v100];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v94[v100], 1, v225))
    {
      v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
      memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v223)(v101, v102, v225);
      __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v225);
    }
    v104 = v6[34];
    v105 = &a1[v104];
    v106 = &v45[v104];
    ((void (*)(char *, char *, uint64_t))v227)(&a1[v104], &v45[v104], v229);
    v107 = (int *)type metadata accessor for WeatherMetadata();
    ((void (*)(char *, char *, uint64_t))v227)(&v105[v107[5]], &v106[v107[5]], v229);
    *(_QWORD *)&v105[v107[6]] = *(_QWORD *)&v106[v107[6]];
    *(_QWORD *)&v105[v107[7]] = *(_QWORD *)&v106[v107[7]];
    *(_QWORD *)&v105[v107[8]] = *(_QWORD *)&v106[v107[8]];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
    a3 = v231;
  }
  v108 = a3[5];
  v109 = &a1[v108];
  v110 = &a2[v108];
  v111 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, (uint64_t)v111))
  {
    v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v109 = *(_QWORD *)v110;
    v113 = v111[13];
    v114 = &v109[v113];
    v115 = &v110[v113];
    v116 = sub_1A6121F58();
    v117 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16);
    swift_bridgeObjectRetain();
    v117(v114, v115, v116);
    v118 = (int *)type metadata accessor for WeatherMetadata();
    v117(&v114[v118[5]], &v115[v118[5]], v116);
    *(_QWORD *)&v114[v118[6]] = *(_QWORD *)&v115[v118[6]];
    *(_QWORD *)&v114[v118[7]] = *(_QWORD *)&v115[v118[7]];
    *(_QWORD *)&v114[v118[8]] = *(_QWORD *)&v115[v118[8]];
    v119 = v111[14];
    v120 = &v109[v119];
    v121 = &v110[v119];
    v122 = *((_QWORD *)v121 + 1);
    *(_QWORD *)v120 = *(_QWORD *)v121;
    *((_QWORD *)v120 + 1) = v122;
    *(_QWORD *)&v109[v111[15]] = *(_QWORD *)&v110[v111[15]];
    *(_QWORD *)&v109[v111[16]] = *(_QWORD *)&v110[v111[16]];
    v123 = v111[17];
    v124 = &v109[v123];
    v125 = &v110[v123];
    v124[16] = v125[16];
    *(_OWORD *)v124 = *(_OWORD *)v125;
    swift_retain();
    a3 = v231;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, (uint64_t)v111);
  }
  v126 = a3[6];
  v127 = &a1[v126];
  v128 = &a2[v126];
  v129 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v128, 1, (uint64_t)v129))
  {
    v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v127 = *(_QWORD *)v128;
    v131 = v129[13];
    v132 = &v127[v131];
    v133 = &v128[v131];
    v134 = sub_1A6121F58();
    v135 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16);
    swift_bridgeObjectRetain();
    v135(v132, v133, v134);
    v136 = (int *)type metadata accessor for WeatherMetadata();
    v135(&v132[v136[5]], &v133[v136[5]], v134);
    *(_QWORD *)&v132[v136[6]] = *(_QWORD *)&v133[v136[6]];
    *(_QWORD *)&v132[v136[7]] = *(_QWORD *)&v133[v136[7]];
    *(_QWORD *)&v132[v136[8]] = *(_QWORD *)&v133[v136[8]];
    v137 = v129[14];
    v138 = &v127[v137];
    v139 = &v128[v137];
    v140 = *((_QWORD *)v139 + 1);
    *(_QWORD *)v138 = *(_QWORD *)v139;
    *((_QWORD *)v138 + 1) = v140;
    *(_QWORD *)&v127[v129[15]] = *(_QWORD *)&v128[v129[15]];
    *(_QWORD *)&v127[v129[16]] = *(_QWORD *)&v128[v129[16]];
    v141 = v129[17];
    v142 = &v127[v141];
    v143 = &v128[v141];
    v142[16] = v143[16];
    *(_OWORD *)v142 = *(_OWORD *)v143;
    swift_retain();
    a3 = v231;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v127, 0, 1, (uint64_t)v129);
  }
  v144 = a3[7];
  v145 = &a1[v144];
  v146 = &a2[v144];
  v147 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  if (__swift_getEnumTagSinglePayload((uint64_t)v146, 1, (uint64_t)v147))
  {
    v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
    memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v145 = *(_QWORD *)v146;
    v149 = v147[13];
    v150 = &v145[v149];
    v151 = &v146[v149];
    v152 = sub_1A6121F58();
    v153 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 16);
    swift_bridgeObjectRetain();
    v153(v150, v151, v152);
    v154 = (int *)type metadata accessor for WeatherMetadata();
    v153(&v150[v154[5]], &v151[v154[5]], v152);
    *(_QWORD *)&v150[v154[6]] = *(_QWORD *)&v151[v154[6]];
    *(_QWORD *)&v150[v154[7]] = *(_QWORD *)&v151[v154[7]];
    *(_QWORD *)&v150[v154[8]] = *(_QWORD *)&v151[v154[8]];
    v155 = v147[14];
    v156 = &v145[v155];
    v157 = &v146[v155];
    v158 = *((_QWORD *)v157 + 1);
    *(_QWORD *)v156 = *(_QWORD *)v157;
    *((_QWORD *)v156 + 1) = v158;
    *(_QWORD *)&v145[v147[15]] = *(_QWORD *)&v146[v147[15]];
    *(_QWORD *)&v145[v147[16]] = *(_QWORD *)&v146[v147[16]];
    v159 = v147[17];
    v160 = &v145[v159];
    v161 = &v146[v159];
    v160[16] = v161[16];
    *(_OWORD *)v160 = *(_OWORD *)v161;
    swift_retain();
    a3 = v231;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v145, 0, 1, (uint64_t)v147);
  }
  v162 = a3[8];
  v163 = &a1[v162];
  v164 = &a2[v162];
  v165 = (int *)type metadata accessor for AirQuality();
  if (__swift_getEnumTagSinglePayload((uint64_t)v164, 1, (uint64_t)v165))
  {
    v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
    memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
  }
  else
  {
    v228 = a1;
    v230 = a2;
    v167 = sub_1A6121F58();
    v168 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 16);
    v168(v163, v164, v167);
    v224 = v168;
    v226 = v167;
    v168(&v163[v165[5]], &v164[v165[5]], v167);
    v169 = v165[6];
    v170 = &v163[v169];
    v171 = &v164[v169];
    v220 = *((_QWORD *)v171 + 1);
    *(_QWORD *)v170 = *(_QWORD *)v171;
    *((_QWORD *)v170 + 1) = v220;
    v172 = v165[7];
    v173 = &v163[v172];
    v174 = &v164[v172];
    v175 = *((_QWORD *)v174 + 1);
    *(_QWORD *)v173 = *(_QWORD *)v174;
    *((_QWORD *)v173 + 1) = v175;
    v176 = *((_QWORD *)v174 + 3);
    *((_QWORD *)v173 + 2) = *((_QWORD *)v174 + 2);
    *((_QWORD *)v173 + 3) = v176;
    v177 = *((_QWORD *)v174 + 5);
    *((_QWORD *)v173 + 4) = *((_QWORD *)v174 + 4);
    *((_QWORD *)v173 + 5) = v177;
    v178 = *((_QWORD *)v174 + 7);
    *((_QWORD *)v173 + 6) = *((_QWORD *)v174 + 6);
    *((_QWORD *)v173 + 7) = v178;
    v179 = *((_QWORD *)v174 + 9);
    *((_QWORD *)v173 + 8) = *((_QWORD *)v174 + 8);
    *((_QWORD *)v173 + 9) = v179;
    v173[80] = v174[80];
    *(_OWORD *)(v173 + 88) = *(_OWORD *)(v174 + 88);
    v219 = *((_QWORD *)v174 + 14);
    *((_QWORD *)v173 + 13) = *((_QWORD *)v174 + 13);
    *((_QWORD *)v173 + 14) = v219;
    *(_QWORD *)&v163[v165[8]] = *(_QWORD *)&v164[v165[8]];
    v180 = v165[9];
    v181 = &v163[v180];
    v182 = &v164[v180];
    v183 = *((_QWORD *)v182 + 1);
    *(_QWORD *)v181 = *(_QWORD *)v182;
    *((_QWORD *)v181 + 1) = v183;
    *((_OWORD *)v181 + 1) = *((_OWORD *)v182 + 1);
    v184 = *((_QWORD *)v182 + 5);
    *((_QWORD *)v181 + 4) = *((_QWORD *)v182 + 4);
    *((_QWORD *)v181 + 5) = v184;
    *((_QWORD *)v181 + 6) = *((_QWORD *)v182 + 6);
    *(_OWORD *)(v181 + 56) = *(_OWORD *)(v182 + 56);
    v185 = *((_QWORD *)v182 + 10);
    *((_QWORD *)v181 + 9) = *((_QWORD *)v182 + 9);
    *((_QWORD *)v181 + 10) = v185;
    v163[v165[10]] = v164[v165[10]];
    v186 = v165[11];
    __dsta = &v163[v186];
    v187 = &v164[v186];
    v218 = type metadata accessor for ProviderAttribution();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v187, 1, v218))
    {
      v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
      memcpy(__dsta, v187, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
      a2 = v230;
    }
    else
    {
      v189 = *((_QWORD *)v187 + 1);
      *(_QWORD *)__dsta = *(_QWORD *)v187;
      *((_QWORD *)__dsta + 1) = v189;
      v190 = *(int *)(v218 + 20);
      v191 = &__dsta[v190];
      v192 = &v187[v190];
      v193 = sub_1A6121DF0();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v192, 1, v193))
      {
        v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
        memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 16))(v191, v192, v193);
        __swift_storeEnumTagSinglePayload((uint64_t)v191, 0, 1, v193);
      }
      a2 = v230;
      __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v218);
    }
    v195 = v165[12];
    v196 = &v163[v195];
    v197 = &v164[v195];
    v198 = sub_1A6121DF0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 16))(v196, v197, v198);
    *(_QWORD *)&v163[v165[13]] = *(_QWORD *)&v164[v165[13]];
    v199 = v165[14];
    v200 = &v163[v199];
    v201 = &v164[v199];
    v202 = type metadata accessor for AirPollutant();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v201, 1, v202))
    {
      v203 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
      memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
    }
    else
    {
      *v200 = *v201;
      v204 = *(int *)(v202 + 20);
      v205 = &v200[v204];
      v206 = &v201[v204];
      type metadata accessor for AirPollutantMeasurement();
      if (swift_getEnumCaseMultiPayload() == 1)
        v207 = &qword_1ED190B60;
      else
        v207 = &qword_1ED1922B8;
      v208 = __swift_instantiateConcreteTypeFromMangledName(v207);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 16))(v205, v206, v208);
      a2 = v230;
      swift_storeEnumTagMultiPayload();
      v200[*(int *)(v202 + 24)] = v201[*(int *)(v202 + 24)];
      __swift_storeEnumTagSinglePayload((uint64_t)v200, 0, 1, v202);
    }
    v163[v165[15]] = v164[v165[15]];
    v209 = v165[16];
    v210 = &v163[v209];
    v211 = &v164[v209];
    *v210 = *v211;
    v212 = *((_QWORD *)v211 + 2);
    *((_QWORD *)v210 + 1) = *((_QWORD *)v211 + 1);
    *((_QWORD *)v210 + 2) = v212;
    v213 = v165[17];
    v214 = &v163[v213];
    v215 = &v164[v213];
    swift_bridgeObjectRetain();
    v224(v214, v215, v226);
    v216 = (int *)type metadata accessor for WeatherMetadata();
    v224(&v214[v216[5]], &v215[v216[5]], v226);
    *(_QWORD *)&v214[v216[6]] = *(_QWORD *)&v215[v216[6]];
    *(_QWORD *)&v214[v216[7]] = *(_QWORD *)&v215[v216[7]];
    *(_QWORD *)&v214[v216[8]] = *(_QWORD *)&v215[v216[8]];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v163, 0, 1, (uint64_t)v165);
    a1 = v228;
    a3 = v231;
  }
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *assignWithCopy for WatchWeather(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  _BYTE *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  _BYTE *v46;
  int *v47;
  uint64_t v48;
  char *v49;
  _BYTE *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  _BYTE *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  _BYTE *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  _BYTE *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  _BYTE *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  _BYTE *v112;
  int *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  int *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  _BYTE *v124;
  int *v125;
  uint64_t v126;
  char *v127;
  _BYTE *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  _BYTE *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  _BYTE *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  _BYTE *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  _BYTE *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  _BYTE *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  int v163;
  uint64_t v164;
  char *v165;
  _BYTE *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  _BYTE *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  _BYTE *v174;
  int *v175;
  uint64_t v176;
  char *v177;
  _BYTE *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  _BYTE *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  _BYTE *v186;
  int *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  int v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  _BYTE *v197;
  uint64_t v198;
  char *v199;
  _BYTE *v200;
  int *v201;
  uint64_t v202;
  char *v203;
  _BYTE *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  _BYTE *v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  _BYTE *v213;
  int *v214;
  uint64_t v215;
  _QWORD *v216;
  _QWORD *v217;
  int *v218;
  int v219;
  int v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  void (*v225)(char *, char *, uint64_t);
  int *v226;
  uint64_t v227;
  _QWORD *v228;
  _QWORD *v229;
  uint64_t v230;
  char *v231;
  char *v232;
  char v233;
  uint64_t v234;
  uint64_t v235;
  _QWORD *v236;
  _QWORD *v237;
  int *v238;
  int v239;
  int v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  void (*v245)(char *, char *, uint64_t);
  int *v246;
  uint64_t v247;
  _QWORD *v248;
  _QWORD *v249;
  uint64_t v250;
  char *v251;
  char *v252;
  char v253;
  uint64_t v254;
  uint64_t v255;
  _QWORD *v256;
  _QWORD *v257;
  int *v258;
  int v259;
  int v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  void (*v265)(char *, char *, uint64_t);
  int *v266;
  uint64_t v267;
  _QWORD *v268;
  _QWORD *v269;
  uint64_t v270;
  char *v271;
  char *v272;
  char v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  char *v277;
  int *v278;
  int v279;
  int v280;
  uint64_t v281;
  void (*v282)(char *, _BYTE *, uint64_t);
  uint64_t v283;
  char *v284;
  char *v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  char *v290;
  char *v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  void (*v303)(char *, char *, uint64_t);
  int *v304;
  uint64_t v305;
  _QWORD *v306;
  _QWORD *v307;
  uint64_t v308;
  char *v309;
  char *v310;
  __int128 v311;
  uint64_t v312;
  char *v313;
  char *v314;
  uint64_t v315;
  void (*v316)(char *, char *, uint64_t);
  int *v317;
  uint64_t v318;
  _QWORD *v319;
  _QWORD *v320;
  uint64_t v321;
  char *v322;
  char *v323;
  __int128 v324;
  uint64_t v325;
  char *v326;
  char *v327;
  uint64_t v328;
  void (*v329)(char *, char *, uint64_t);
  int *v330;
  uint64_t v331;
  _QWORD *v332;
  _QWORD *v333;
  uint64_t v334;
  char *v335;
  char *v336;
  __int128 v337;
  uint64_t v338;
  void (*v339)(char *, char *, uint64_t);
  uint64_t v340;
  char *v341;
  char *v342;
  uint64_t v343;
  char *v344;
  char *v345;
  uint64_t v346;
  char *v347;
  char *v348;
  uint64_t v349;
  char *v350;
  char *v351;
  uint64_t v352;
  int v353;
  uint64_t v354;
  char *v355;
  char *v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  char *v361;
  uint64_t v362;
  uint64_t v363;
  size_t v364;
  void *v365;
  const void *v366;
  uint64_t v367;
  char *v368;
  _BYTE *v369;
  uint64_t v370;
  uint64_t v371;
  char *v372;
  _BYTE *v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  _BYTE *v377;
  _BYTE *v378;
  uint64_t *v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  char *v383;
  uint64_t v384;
  char *v385;
  _BYTE *v386;
  int *v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  int v392;
  int v393;
  uint64_t v394;
  char *v395;
  char *v396;
  uint64_t v397;
  uint64_t v398;
  char *v399;
  char *v400;
  uint64_t v401;
  int v402;
  uint64_t v403;
  _BYTE *v404;
  _BYTE *v405;
  uint64_t *v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  char *v410;
  char *v411;
  uint64_t v412;
  char *v413;
  char *v414;
  int *v415;
  uint64_t v417;
  _BYTE *v418;
  _BYTE *v419;
  uint64_t *v420;
  uint64_t v421;
  uint64_t v422;
  char *__dst;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  void (*v427)(char *, _BYTE *, uint64_t);
  void (*v428)(_BYTE *, _BYTE *);
  void (*v429)(_BYTE *, _BYTE *);
  uint64_t v430;
  uint64_t v431;
  void (*v432)(char *, char *, uint64_t);
  void (*v433)(char *, char *, uint64_t);
  uint64_t v434;
  void (*v435)(char *, char *);
  void (*v436)(char *, char *);
  _BYTE *v437;
  _BYTE *v438;
  uint64_t v439;
  void (*v440)(char *, char *, uint64_t);
  _BYTE *v441;
  _BYTE *v442;
  int *v443;

  v6 = (int *)type metadata accessor for CurrentWeather();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6);
  v443 = a3;
  if (!EnumTagSinglePayload)
  {
    if (v8)
    {
      sub_1A5FA1740((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
      goto LABEL_7;
    }
    v88 = sub_1A6121F58();
    v429 = *(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v88 - 8) + 24);
    v431 = v88;
    v429(a1, a2);
    *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    v89 = v6[9];
    v90 = &a1[v89];
    v91 = &a2[v89];
    *v90 = *v91;
    v90[1] = v91[1];
    v90[2] = v91[2];
    a1[v6[10]] = a2[v6[10]];
    v92 = v6[11];
    v93 = &a1[v92];
    v94 = &a2[v92];
    *v93 = *v94;
    v93[1] = v94[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v95 = v6[12];
    v96 = &a1[v95];
    v97 = &a2[v95];
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    v426 = *(_QWORD *)(v98 - 8);
    v440 = *(void (**)(char *, char *, uint64_t))(v426 + 24);
    v440(v96, v97, v98);
    *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
    v99 = v6[14];
    v100 = &a1[v99];
    v101 = &a2[v99];
    v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
    v425 = *(_QWORD *)(v102 - 8);
    v434 = v102;
    v436 = *(void (**)(char *, char *))(v425 + 24);
    v436(v100, v101);
    v103 = v6[15];
    v104 = &a1[v103];
    v105 = &a2[v103];
    v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 24))(v104, v105, v106);
    a1[v6[16]] = a2[v6[16]];
    v107 = v6[17];
    v108 = &a1[v107];
    v109 = &a2[v107];
    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 24);
    v111(v108, v109, v110);
    v112 = a1;
    v113 = (int *)type metadata accessor for PrecipitationAmount();
    v111(&v108[v113[5]], &v109[v113[5]], v110);
    v111(&v108[v113[6]], &v109[v113[6]], v110);
    v111(&v108[v113[7]], &v109[v113[7]], v110);
    v111(&v108[v113[8]], &v109[v113[8]], v110);
    v111(&v108[v113[9]], &v109[v113[9]], v110);
    v114 = v6[18];
    v115 = &v112[v114];
    v116 = &a2[v114];
    v111(&v112[v114], &a2[v114], v110);
    v111(&v115[v113[5]], &v116[v113[5]], v110);
    v111(&v115[v113[6]], &v116[v113[6]], v110);
    v111(&v115[v113[7]], &v116[v113[7]], v110);
    v111(&v115[v113[8]], &v116[v113[8]], v110);
    v111(&v115[v113[9]], &v116[v113[9]], v110);
    v117 = v6[19];
    v118 = &v112[v117];
    v119 = &a2[v117];
    v111(&v112[v117], &a2[v117], v110);
    v120 = (int *)type metadata accessor for PrecipitationAmountByType();
    v111(&v118[v120[5]], &v119[v120[5]], v110);
    v111(&v118[v120[6]], &v119[v120[6]], v110);
    v111(&v118[v120[7]], &v119[v120[7]], v110);
    v111(&v118[v120[8]], &v119[v120[8]], v110);
    v121 = v120[9];
    v122 = &v118[v121];
    v123 = &v119[v121];
    v111(v122, v123, v110);
    v124 = a2;
    v125 = (int *)type metadata accessor for SnowfallAmount();
    v111(&v122[v125[5]], &v123[v125[5]], v110);
    v111(&v122[v125[6]], &v123[v125[6]], v110);
    v111(&v122[v125[7]], &v123[v125[7]], v110);
    v111(&v122[v125[8]], &v123[v125[8]], v110);
    v111(&v122[v125[9]], &v123[v125[9]], v110);
    v126 = v6[20];
    v127 = &v112[v126];
    v128 = &v124[v126];
    v111(&v112[v126], &v124[v126], v110);
    v111(&v127[v120[5]], &v128[v120[5]], v110);
    v111(&v127[v120[6]], &v128[v120[6]], v110);
    v111(&v127[v120[7]], &v128[v120[7]], v110);
    v111(&v127[v120[8]], &v128[v120[8]], v110);
    v129 = v120[9];
    v130 = &v127[v129];
    v131 = &v128[v129];
    v111(v130, v131, v110);
    v111(&v130[v125[5]], &v131[v125[5]], v110);
    v111(&v130[v125[6]], &v131[v125[6]], v110);
    v111(&v130[v125[7]], &v131[v125[7]], v110);
    v111(&v130[v125[8]], &v131[v125[8]], v110);
    v111(&v130[v125[9]], &v131[v125[9]], v110);
    v132 = v6[21];
    v133 = &v112[v132];
    v134 = &v124[v132];
    v111(&v112[v132], &v124[v132], v110);
    v111(&v133[v120[5]], &v134[v120[5]], v110);
    v111(&v133[v120[6]], &v134[v120[6]], v110);
    v111(&v133[v120[7]], &v134[v120[7]], v110);
    v111(&v133[v120[8]], &v134[v120[8]], v110);
    v135 = v120[9];
    v136 = &v133[v135];
    v137 = &v134[v135];
    v111(v136, v137, v110);
    v111(&v136[v125[5]], &v137[v125[5]], v110);
    v111(&v136[v125[6]], &v137[v125[6]], v110);
    v111(&v136[v125[7]], &v137[v125[7]], v110);
    v111(&v136[v125[8]], &v137[v125[8]], v110);
    v111(&v136[v125[9]], &v137[v125[9]], v110);
    v138 = v6[22];
    v139 = &v112[v138];
    v140 = &v124[v138];
    v111(&v112[v138], &v124[v138], v110);
    v111(&v139[v120[5]], &v140[v120[5]], v110);
    v111(&v139[v120[6]], &v140[v120[6]], v110);
    v111(&v139[v120[7]], &v140[v120[7]], v110);
    v111(&v139[v120[8]], &v140[v120[8]], v110);
    v141 = v120[9];
    v142 = &v139[v141];
    v143 = &v140[v141];
    v111(v142, v143, v110);
    v111(&v142[v125[5]], &v143[v125[5]], v110);
    v111(&v142[v125[6]], &v143[v125[6]], v110);
    v111(&v142[v125[7]], &v143[v125[7]], v110);
    v111(&v142[v125[8]], &v143[v125[8]], v110);
    v111(&v142[v125[9]], &v143[v125[9]], v110);
    v144 = v6[23];
    v145 = &v112[v144];
    v146 = &v124[v144];
    v111(&v112[v144], &v124[v144], v110);
    v111(&v145[v120[5]], &v146[v120[5]], v110);
    v111(&v145[v120[6]], &v146[v120[6]], v110);
    v111(&v145[v120[7]], &v146[v120[7]], v110);
    v111(&v145[v120[8]], &v146[v120[8]], v110);
    v147 = v120[9];
    v148 = &v145[v147];
    v149 = &v146[v147];
    v111(v148, v149, v110);
    v111(&v148[v125[5]], &v149[v125[5]], v110);
    v111(&v148[v125[6]], &v149[v125[6]], v110);
    v111(&v148[v125[7]], &v149[v125[7]], v110);
    v111(&v148[v125[8]], &v149[v125[8]], v110);
    v111(&v148[v125[9]], &v149[v125[9]], v110);
    v150 = v6[24];
    v151 = &v112[v150];
    v152 = &v124[v150];
    v111(&v112[v150], &v124[v150], v110);
    v111(&v151[v120[5]], &v152[v120[5]], v110);
    v111(&v151[v120[6]], &v152[v120[6]], v110);
    v111(&v151[v120[7]], &v152[v120[7]], v110);
    v111(&v151[v120[8]], &v152[v120[8]], v110);
    v153 = v120[9];
    a1 = v112;
    v154 = &v151[v153];
    v155 = &v152[v153];
    v111(v154, v155, v110);
    v111(&v154[v125[5]], &v155[v125[5]], v110);
    v111(&v154[v125[6]], &v155[v125[6]], v110);
    v111(&v154[v125[7]], &v155[v125[7]], v110);
    v111(&v154[v125[8]], &v155[v125[8]], v110);
    v156 = v125[9];
    a2 = v124;
    v111(&v154[v156], &v155[v156], v110);
    v157 = v6[25];
    v158 = &v112[v157];
    v159 = &v124[v157];
    *(_QWORD *)v158 = *(_QWORD *)v159;
    v158[8] = v159[8];
    v112[v6[26]] = v124[v6[26]];
    v440(&v112[v6[27]], &v124[v6[27]], v98);
    v440(&v112[v6[28]], &v124[v6[28]], v98);
    v160 = v6[29];
    v161 = &v112[v160];
    v162 = &v124[v160];
    LODWORD(v112) = __swift_getEnumTagSinglePayload((uint64_t)&v112[v160], 1, v98);
    v163 = __swift_getEnumTagSinglePayload((uint64_t)v162, 1, v98);
    if ((_DWORD)v112)
    {
      if (!v163)
      {
        (*(void (**)(char *, char *, uint64_t))(v426 + 16))(v161, v162, v98);
        __swift_storeEnumTagSinglePayload((uint64_t)v161, 0, 1, v98);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v163)
      {
        v440(v161, v162, v98);
LABEL_22:
        v189 = v6[30];
        v190 = &a1[v189];
        v191 = &v124[v189];
        v192 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v189], 1, v98);
        v193 = __swift_getEnumTagSinglePayload((uint64_t)v191, 1, v98);
        if (v192)
        {
          if (!v193)
          {
            (*(void (**)(char *, char *, uint64_t))(v426 + 16))(v190, v191, v98);
            __swift_storeEnumTagSinglePayload((uint64_t)v190, 0, 1, v98);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v193)
          {
            v440(v190, v191, v98);
LABEL_28:
            v195 = v6[31];
            v196 = &a1[v195];
            v197 = &v124[v195];
            *(_QWORD *)v196 = *(_QWORD *)v197;
            v196[8] = v197[8];
            v111(&a1[v6[32]], &v124[v6[32]], v110);
            v198 = v6[33];
            v199 = &a1[v198];
            v200 = &v124[v198];
            a1[v198] = v124[v198];
            v201 = (int *)type metadata accessor for Wind();
            v202 = v201[5];
            v203 = &v199[v202];
            v204 = &v200[v202];
            v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
            (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v205 - 8) + 24))(v203, v204, v205);
            ((void (*)(char *, _BYTE *, uint64_t))v436)(&v199[v201[6]], &v200[v201[6]], v434);
            v206 = v201[7];
            v207 = &v199[v206];
            v208 = &v200[v206];
            LODWORD(v204) = __swift_getEnumTagSinglePayload((uint64_t)&v199[v206], 1, v434);
            v209 = __swift_getEnumTagSinglePayload((uint64_t)v208, 1, v434);
            if ((_DWORD)v204)
            {
              if (!v209)
              {
                (*(void (**)(char *, _BYTE *, uint64_t))(v425 + 16))(v207, v208, v434);
                __swift_storeEnumTagSinglePayload((uint64_t)v207, 0, 1, v434);
LABEL_34:
                a3 = v443;
                v211 = v6[34];
                v212 = &a1[v211];
                v213 = &v124[v211];
                ((void (*)(_BYTE *, _BYTE *, uint64_t))v429)(&a1[v211], &v124[v211], v431);
                v214 = (int *)type metadata accessor for WeatherMetadata();
                ((void (*)(char *, _BYTE *, uint64_t))v429)(&v212[v214[5]], &v213[v214[5]], v431);
                *(_QWORD *)&v212[v214[6]] = *(_QWORD *)&v213[v214[6]];
                *(_QWORD *)&v212[v214[7]] = *(_QWORD *)&v213[v214[7]];
                *(_QWORD *)&v212[v214[8]] = *(_QWORD *)&v213[v214[8]];
                swift_retain();
                swift_release();
                goto LABEL_35;
              }
            }
            else
            {
              if (!v209)
              {
                ((void (*)(char *, _BYTE *, uint64_t))v436)(v207, v208, v434);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v425 + 8))(v207, v434);
            }
            v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
            memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v426 + 8))(v190, v98);
        }
        v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
        memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v426 + 8))(v161, v98);
    }
    v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
    goto LABEL_22;
  }
  if (v8)
  {
LABEL_7:
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_35;
  }
  v9 = sub_1A6121F58();
  v428 = *(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v9 - 8) + 16);
  v430 = v9;
  v428(a1, a2);
  *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
  *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  v10 = v6[9];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_QWORD *)v12 + 2);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_QWORD *)v11 + 2) = v13;
  a1[v6[10]] = a2[v6[10]];
  v14 = v6[11];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *v15 = *v16;
  v15[1] = v16[1];
  v17 = v6[12];
  v18 = &a1[v17];
  v19 = &a2[v17];
  swift_bridgeObjectRetain();
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v433 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v433(v18, v19, v20);
  *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
  v21 = v6[14];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
  v435 = *(void (**)(char *, char *))(*(_QWORD *)(v24 - 8) + 16);
  v439 = v24;
  v435(v22, v23);
  v25 = v6[15];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  a1[v6[16]] = a2[v6[16]];
  v29 = v6[17];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
  v33(v30, v31, v32);
  v34 = a1;
  v35 = (int *)type metadata accessor for PrecipitationAmount();
  v33(&v30[v35[5]], &v31[v35[5]], v32);
  v33(&v30[v35[6]], &v31[v35[6]], v32);
  v33(&v30[v35[7]], &v31[v35[7]], v32);
  v33(&v30[v35[8]], &v31[v35[8]], v32);
  v33(&v30[v35[9]], &v31[v35[9]], v32);
  v36 = v6[18];
  v37 = &v34[v36];
  v38 = &a2[v36];
  v33(&v34[v36], &a2[v36], v32);
  v33(&v37[v35[5]], &v38[v35[5]], v32);
  v33(&v37[v35[6]], &v38[v35[6]], v32);
  v33(&v37[v35[7]], &v38[v35[7]], v32);
  v33(&v37[v35[8]], &v38[v35[8]], v32);
  v33(&v37[v35[9]], &v38[v35[9]], v32);
  v39 = v6[19];
  v40 = &v34[v39];
  v41 = &a2[v39];
  v33(&v34[v39], &a2[v39], v32);
  v42 = (int *)type metadata accessor for PrecipitationAmountByType();
  v33(&v40[v42[5]], &v41[v42[5]], v32);
  v33(&v40[v42[6]], &v41[v42[6]], v32);
  v33(&v40[v42[7]], &v41[v42[7]], v32);
  v33(&v40[v42[8]], &v41[v42[8]], v32);
  v43 = v42[9];
  v44 = &v40[v43];
  v45 = &v41[v43];
  v33(v44, v45, v32);
  v46 = a2;
  v47 = (int *)type metadata accessor for SnowfallAmount();
  v33(&v44[v47[5]], &v45[v47[5]], v32);
  v33(&v44[v47[6]], &v45[v47[6]], v32);
  v33(&v44[v47[7]], &v45[v47[7]], v32);
  v33(&v44[v47[8]], &v45[v47[8]], v32);
  v33(&v44[v47[9]], &v45[v47[9]], v32);
  v48 = v6[20];
  v49 = &v34[v48];
  v50 = &v46[v48];
  v33(&v34[v48], &v46[v48], v32);
  v33(&v49[v42[5]], &v50[v42[5]], v32);
  v33(&v49[v42[6]], &v50[v42[6]], v32);
  v33(&v49[v42[7]], &v50[v42[7]], v32);
  v33(&v49[v42[8]], &v50[v42[8]], v32);
  v51 = v42[9];
  v52 = &v49[v51];
  v53 = &v50[v51];
  v33(v52, v53, v32);
  v33(&v52[v47[5]], &v53[v47[5]], v32);
  v33(&v52[v47[6]], &v53[v47[6]], v32);
  v33(&v52[v47[7]], &v53[v47[7]], v32);
  v33(&v52[v47[8]], &v53[v47[8]], v32);
  v33(&v52[v47[9]], &v53[v47[9]], v32);
  v54 = v6[21];
  v55 = &v34[v54];
  v56 = &v46[v54];
  v33(&v34[v54], &v46[v54], v32);
  v33(&v55[v42[5]], &v56[v42[5]], v32);
  v33(&v55[v42[6]], &v56[v42[6]], v32);
  v33(&v55[v42[7]], &v56[v42[7]], v32);
  v33(&v55[v42[8]], &v56[v42[8]], v32);
  v57 = v42[9];
  v58 = &v55[v57];
  v59 = &v56[v57];
  v33(v58, v59, v32);
  v33(&v58[v47[5]], &v59[v47[5]], v32);
  v33(&v58[v47[6]], &v59[v47[6]], v32);
  v33(&v58[v47[7]], &v59[v47[7]], v32);
  v33(&v58[v47[8]], &v59[v47[8]], v32);
  v33(&v58[v47[9]], &v59[v47[9]], v32);
  v60 = v6[22];
  v61 = &v34[v60];
  v62 = &v46[v60];
  v33(&v34[v60], &v46[v60], v32);
  v33(&v61[v42[5]], &v62[v42[5]], v32);
  v33(&v61[v42[6]], &v62[v42[6]], v32);
  v33(&v61[v42[7]], &v62[v42[7]], v32);
  v33(&v61[v42[8]], &v62[v42[8]], v32);
  v63 = v42[9];
  v64 = &v61[v63];
  v65 = &v62[v63];
  v33(v64, v65, v32);
  v33(&v64[v47[5]], &v65[v47[5]], v32);
  v33(&v64[v47[6]], &v65[v47[6]], v32);
  v33(&v64[v47[7]], &v65[v47[7]], v32);
  v33(&v64[v47[8]], &v65[v47[8]], v32);
  v33(&v64[v47[9]], &v65[v47[9]], v32);
  v66 = v6[23];
  v67 = &v34[v66];
  v68 = &v46[v66];
  v33(&v34[v66], &v46[v66], v32);
  v33(&v67[v42[5]], &v68[v42[5]], v32);
  v33(&v67[v42[6]], &v68[v42[6]], v32);
  v33(&v67[v42[7]], &v68[v42[7]], v32);
  v33(&v67[v42[8]], &v68[v42[8]], v32);
  v69 = v42[9];
  v70 = &v67[v69];
  v71 = &v68[v69];
  v33(v70, v71, v32);
  v33(&v70[v47[5]], &v71[v47[5]], v32);
  v33(&v70[v47[6]], &v71[v47[6]], v32);
  v33(&v70[v47[7]], &v71[v47[7]], v32);
  v33(&v70[v47[8]], &v71[v47[8]], v32);
  v33(&v70[v47[9]], &v71[v47[9]], v32);
  v72 = v6[24];
  v73 = &v34[v72];
  v74 = &v46[v72];
  v33(&v34[v72], &v46[v72], v32);
  v33(&v73[v42[5]], &v74[v42[5]], v32);
  v33(&v73[v42[6]], &v74[v42[6]], v32);
  v33(&v73[v42[7]], &v74[v42[7]], v32);
  v33(&v73[v42[8]], &v74[v42[8]], v32);
  v75 = v42[9];
  a1 = v34;
  v76 = &v73[v75];
  v77 = &v74[v75];
  v33(v76, v77, v32);
  v33(&v76[v47[5]], &v77[v47[5]], v32);
  v33(&v76[v47[6]], &v77[v47[6]], v32);
  v33(&v76[v47[7]], &v77[v47[7]], v32);
  v33(&v76[v47[8]], &v77[v47[8]], v32);
  v78 = v47[9];
  a2 = v46;
  v33(&v76[v78], &v77[v78], v32);
  v79 = v6[25];
  v80 = &v34[v79];
  v81 = &v46[v79];
  v82 = *(_QWORD *)v81;
  v80[8] = v81[8];
  *(_QWORD *)v80 = v82;
  v34[v6[26]] = v46[v6[26]];
  v433(&v34[v6[27]], &v46[v6[27]], v20);
  v433(&v34[v6[28]], &v46[v6[28]], v20);
  v83 = v6[29];
  v84 = &v34[v83];
  v85 = &v46[v83];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v46[v83], 1, v20))
  {
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    v433(v84, v85, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v20);
  }
  v164 = v6[30];
  v165 = &v34[v164];
  v166 = &v46[v164];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v46[v164], 1, v20))
  {
    v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
  }
  else
  {
    v433(v165, v166, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v165, 0, 1, v20);
  }
  v168 = v6[31];
  v169 = &v34[v168];
  v170 = &v46[v168];
  v171 = *(_QWORD *)v170;
  v169[8] = v170[8];
  *(_QWORD *)v169 = v171;
  v33(&v34[v6[32]], &v46[v6[32]], v32);
  v172 = v6[33];
  v173 = &v34[v172];
  v174 = &v46[v172];
  v34[v172] = v46[v172];
  v175 = (int *)type metadata accessor for Wind();
  v176 = v175[5];
  v177 = &v173[v176];
  v178 = &v174[v176];
  v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v177, v178, v179);
  ((void (*)(char *, _BYTE *, uint64_t))v435)(&v173[v175[6]], &v174[v175[6]], v439);
  v180 = v175[7];
  v181 = &v173[v180];
  v182 = &v174[v180];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v174[v180], 1, v439))
  {
    v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
    memcpy(v181, v182, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, _BYTE *, uint64_t))v435)(v181, v182, v439);
    __swift_storeEnumTagSinglePayload((uint64_t)v181, 0, 1, v439);
  }
  a3 = v443;
  v184 = v6[34];
  v185 = &a1[v184];
  v186 = &v46[v184];
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v428)(&a1[v184], &v46[v184], v430);
  v187 = (int *)type metadata accessor for WeatherMetadata();
  ((void (*)(char *, _BYTE *, uint64_t))v428)(&v185[v187[5]], &v186[v187[5]], v430);
  *(_QWORD *)&v185[v187[6]] = *(_QWORD *)&v186[v187[6]];
  *(_QWORD *)&v185[v187[7]] = *(_QWORD *)&v186[v187[7]];
  *(_QWORD *)&v185[v187[8]] = *(_QWORD *)&v186[v187[8]];
  swift_retain();
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
LABEL_35:
  v215 = a3[5];
  v216 = &a1[v215];
  v217 = &a2[v215];
  v218 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  v219 = __swift_getEnumTagSinglePayload((uint64_t)v216, 1, (uint64_t)v218);
  v220 = __swift_getEnumTagSinglePayload((uint64_t)v217, 1, (uint64_t)v218);
  if (v219)
  {
    if (!v220)
    {
      *v216 = *v217;
      v221 = v218[13];
      v222 = (char *)v216 + v221;
      v223 = (char *)v217 + v221;
      v224 = sub_1A6121F58();
      v225 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 16);
      swift_bridgeObjectRetain();
      v225(v222, v223, v224);
      v226 = (int *)type metadata accessor for WeatherMetadata();
      v225(&v222[v226[5]], &v223[v226[5]], v224);
      a3 = v443;
      *(_QWORD *)&v222[v226[6]] = *(_QWORD *)&v223[v226[6]];
      *(_QWORD *)&v222[v226[7]] = *(_QWORD *)&v223[v226[7]];
      *(_QWORD *)&v222[v226[8]] = *(_QWORD *)&v223[v226[8]];
      v227 = v218[14];
      v228 = (_QWORD *)((char *)v216 + v227);
      v229 = (_QWORD *)((char *)v217 + v227);
      *v228 = *v229;
      v228[1] = v229[1];
      *(_QWORD *)((char *)v216 + v218[15]) = *(_QWORD *)((char *)v217 + v218[15]);
      *(_QWORD *)((char *)v216 + v218[16]) = *(_QWORD *)((char *)v217 + v218[16]);
      v230 = v218[17];
      v231 = (char *)v216 + v230;
      v232 = (char *)v217 + v230;
      v233 = v232[16];
      *(_OWORD *)v231 = *(_OWORD *)v232;
      v231[16] = v233;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v216, 0, 1, (uint64_t)v218);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v220)
  {
    sub_1A5FAFD58((uint64_t)v216, &qword_1ED193AE0);
LABEL_40:
    v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
    goto LABEL_41;
  }
  *v216 = *v217;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v299 = v218[13];
  v300 = (char *)v216 + v299;
  v301 = (char *)v217 + v299;
  v302 = sub_1A6121F58();
  v303 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 24);
  v303(v300, v301, v302);
  v304 = (int *)type metadata accessor for WeatherMetadata();
  v303(&v300[v304[5]], &v301[v304[5]], v302);
  a3 = v443;
  *(_QWORD *)&v300[v304[6]] = *(_QWORD *)&v301[v304[6]];
  *(_QWORD *)&v300[v304[7]] = *(_QWORD *)&v301[v304[7]];
  *(_QWORD *)&v300[v304[8]] = *(_QWORD *)&v301[v304[8]];
  swift_retain();
  swift_release();
  v305 = v218[14];
  v306 = (_QWORD *)((char *)v216 + v305);
  v307 = (_QWORD *)((char *)v217 + v305);
  *v306 = *v307;
  v306[1] = v307[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v216 + v218[15]) = *(_QWORD *)((char *)v217 + v218[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v216 + v218[16]) = *(_QWORD *)((char *)v217 + v218[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v308 = v218[17];
  v309 = (char *)v216 + v308;
  v310 = (char *)v217 + v308;
  v311 = *(_OWORD *)v310;
  v309[16] = v310[16];
  *(_OWORD *)v309 = v311;
LABEL_41:
  v235 = a3[6];
  v236 = &a1[v235];
  v237 = &a2[v235];
  v238 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  v239 = __swift_getEnumTagSinglePayload((uint64_t)v236, 1, (uint64_t)v238);
  v240 = __swift_getEnumTagSinglePayload((uint64_t)v237, 1, (uint64_t)v238);
  if (v239)
  {
    if (!v240)
    {
      *v236 = *v237;
      v241 = v238[13];
      v242 = (char *)v236 + v241;
      v243 = (char *)v237 + v241;
      v244 = sub_1A6121F58();
      v245 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 16);
      swift_bridgeObjectRetain();
      v245(v242, v243, v244);
      v246 = (int *)type metadata accessor for WeatherMetadata();
      v245(&v242[v246[5]], &v243[v246[5]], v244);
      a3 = v443;
      *(_QWORD *)&v242[v246[6]] = *(_QWORD *)&v243[v246[6]];
      *(_QWORD *)&v242[v246[7]] = *(_QWORD *)&v243[v246[7]];
      *(_QWORD *)&v242[v246[8]] = *(_QWORD *)&v243[v246[8]];
      v247 = v238[14];
      v248 = (_QWORD *)((char *)v236 + v247);
      v249 = (_QWORD *)((char *)v237 + v247);
      *v248 = *v249;
      v248[1] = v249[1];
      *(_QWORD *)((char *)v236 + v238[15]) = *(_QWORD *)((char *)v237 + v238[15]);
      *(_QWORD *)((char *)v236 + v238[16]) = *(_QWORD *)((char *)v237 + v238[16]);
      v250 = v238[17];
      v251 = (char *)v236 + v250;
      v252 = (char *)v237 + v250;
      v253 = v252[16];
      *(_OWORD *)v251 = *(_OWORD *)v252;
      v251[16] = v253;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v236, 0, 1, (uint64_t)v238);
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  if (v240)
  {
    sub_1A5FAFD58((uint64_t)v236, (uint64_t *)&unk_1ED193AB8);
LABEL_46:
    v254 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
    memcpy(v236, v237, *(_QWORD *)(*(_QWORD *)(v254 - 8) + 64));
    goto LABEL_47;
  }
  *v236 = *v237;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v312 = v238[13];
  v313 = (char *)v236 + v312;
  v314 = (char *)v237 + v312;
  v315 = sub_1A6121F58();
  v316 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v315 - 8) + 24);
  v316(v313, v314, v315);
  v317 = (int *)type metadata accessor for WeatherMetadata();
  v316(&v313[v317[5]], &v314[v317[5]], v315);
  a3 = v443;
  *(_QWORD *)&v313[v317[6]] = *(_QWORD *)&v314[v317[6]];
  *(_QWORD *)&v313[v317[7]] = *(_QWORD *)&v314[v317[7]];
  *(_QWORD *)&v313[v317[8]] = *(_QWORD *)&v314[v317[8]];
  swift_retain();
  swift_release();
  v318 = v238[14];
  v319 = (_QWORD *)((char *)v236 + v318);
  v320 = (_QWORD *)((char *)v237 + v318);
  *v319 = *v320;
  v319[1] = v320[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v236 + v238[15]) = *(_QWORD *)((char *)v237 + v238[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v236 + v238[16]) = *(_QWORD *)((char *)v237 + v238[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v321 = v238[17];
  v322 = (char *)v236 + v321;
  v323 = (char *)v237 + v321;
  v324 = *(_OWORD *)v323;
  v322[16] = v323[16];
  *(_OWORD *)v322 = v324;
LABEL_47:
  v255 = a3[7];
  v256 = &a1[v255];
  v257 = &a2[v255];
  v258 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  v259 = __swift_getEnumTagSinglePayload((uint64_t)v256, 1, (uint64_t)v258);
  v260 = __swift_getEnumTagSinglePayload((uint64_t)v257, 1, (uint64_t)v258);
  if (v259)
  {
    if (!v260)
    {
      *v256 = *v257;
      v261 = v258[13];
      v262 = (char *)v256 + v261;
      v263 = (char *)v257 + v261;
      v264 = sub_1A6121F58();
      v265 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v264 - 8) + 16);
      swift_bridgeObjectRetain();
      v265(v262, v263, v264);
      v266 = (int *)type metadata accessor for WeatherMetadata();
      v265(&v262[v266[5]], &v263[v266[5]], v264);
      a3 = v443;
      *(_QWORD *)&v262[v266[6]] = *(_QWORD *)&v263[v266[6]];
      *(_QWORD *)&v262[v266[7]] = *(_QWORD *)&v263[v266[7]];
      *(_QWORD *)&v262[v266[8]] = *(_QWORD *)&v263[v266[8]];
      v267 = v258[14];
      v268 = (_QWORD *)((char *)v256 + v267);
      v269 = (_QWORD *)((char *)v257 + v267);
      *v268 = *v269;
      v268[1] = v269[1];
      *(_QWORD *)((char *)v256 + v258[15]) = *(_QWORD *)((char *)v257 + v258[15]);
      *(_QWORD *)((char *)v256 + v258[16]) = *(_QWORD *)((char *)v257 + v258[16]);
      v270 = v258[17];
      v271 = (char *)v256 + v270;
      v272 = (char *)v257 + v270;
      v273 = v272[16];
      *(_OWORD *)v271 = *(_OWORD *)v272;
      v271[16] = v273;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v256, 0, 1, (uint64_t)v258);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v260)
  {
    sub_1A5FAFD58((uint64_t)v256, (uint64_t *)&unk_1ED193A90);
LABEL_52:
    v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
    memcpy(v256, v257, *(_QWORD *)(*(_QWORD *)(v274 - 8) + 64));
    goto LABEL_53;
  }
  *v256 = *v257;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v325 = v258[13];
  v326 = (char *)v256 + v325;
  v327 = (char *)v257 + v325;
  v328 = sub_1A6121F58();
  v329 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v328 - 8) + 24);
  v329(v326, v327, v328);
  v330 = (int *)type metadata accessor for WeatherMetadata();
  v329(&v326[v330[5]], &v327[v330[5]], v328);
  a3 = v443;
  *(_QWORD *)&v326[v330[6]] = *(_QWORD *)&v327[v330[6]];
  *(_QWORD *)&v326[v330[7]] = *(_QWORD *)&v327[v330[7]];
  *(_QWORD *)&v326[v330[8]] = *(_QWORD *)&v327[v330[8]];
  swift_retain();
  swift_release();
  v331 = v258[14];
  v332 = (_QWORD *)((char *)v256 + v331);
  v333 = (_QWORD *)((char *)v257 + v331);
  *v332 = *v333;
  v332[1] = v333[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v256 + v258[15]) = *(_QWORD *)((char *)v257 + v258[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v256 + v258[16]) = *(_QWORD *)((char *)v257 + v258[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v334 = v258[17];
  v335 = (char *)v256 + v334;
  v336 = (char *)v257 + v334;
  v337 = *(_OWORD *)v336;
  v335[16] = v336[16];
  *(_OWORD *)v335 = v337;
LABEL_53:
  v275 = a3[8];
  v276 = &a1[v275];
  v277 = &a2[v275];
  v278 = (int *)type metadata accessor for AirQuality();
  v279 = __swift_getEnumTagSinglePayload((uint64_t)v276, 1, (uint64_t)v278);
  v280 = __swift_getEnumTagSinglePayload((uint64_t)v277, 1, (uint64_t)v278);
  if (!v279)
  {
    if (v280)
    {
      sub_1A5FA1740((uint64_t)v276, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
      goto LABEL_59;
    }
    v438 = a2;
    v442 = a1;
    v338 = sub_1A6121F58();
    v339 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v338 - 8) + 24);
    v339(v276, v277, v338);
    v432 = v339;
    v339(&v276[v278[5]], &v277[v278[5]], v338);
    v340 = v278[6];
    v341 = &v276[v340];
    v342 = &v277[v340];
    *v341 = *v342;
    v341[1] = v342[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v343 = v278[7];
    v344 = &v276[v343];
    v345 = &v277[v343];
    *(_QWORD *)v344 = *(_QWORD *)&v277[v343];
    *((_QWORD *)v344 + 1) = *(_QWORD *)&v277[v343 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v344 + 2) = *((_QWORD *)v345 + 2);
    *((_QWORD *)v344 + 3) = *((_QWORD *)v345 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v344 + 4) = *((_QWORD *)v345 + 4);
    *((_QWORD *)v344 + 5) = *((_QWORD *)v345 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v344 + 6) = *((_QWORD *)v345 + 6);
    *((_QWORD *)v344 + 7) = *((_QWORD *)v345 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v344 + 8) = *((_QWORD *)v345 + 8);
    *((_QWORD *)v344 + 9) = *((_QWORD *)v345 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v344[80] = v345[80];
    *((_QWORD *)v344 + 11) = *((_QWORD *)v345 + 11);
    *((_QWORD *)v344 + 12) = *((_QWORD *)v345 + 12);
    *((_QWORD *)v344 + 13) = *((_QWORD *)v345 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v344 + 14) = *((_QWORD *)v345 + 14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v276[v278[8]] = *(_QWORD *)&v277[v278[8]];
    v346 = v278[9];
    v347 = &v276[v346];
    v348 = &v277[v346];
    *v347 = *(_QWORD *)&v277[v346];
    v347[1] = *(_QWORD *)&v277[v346 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v347[2] = v348[2];
    v347[3] = v348[3];
    v347[4] = v348[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v347[5] = v348[5];
    v347[6] = v348[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v347[7] = v348[7];
    v347[8] = v348[8];
    v347[9] = v348[9];
    v347[10] = v348[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v276[v278[10]] = v277[v278[10]];
    v349 = v278[11];
    v350 = &v276[v349];
    v351 = &v277[v349];
    v352 = type metadata accessor for ProviderAttribution();
    LODWORD(v339) = __swift_getEnumTagSinglePayload((uint64_t)v350, 1, v352);
    v353 = __swift_getEnumTagSinglePayload((uint64_t)v351, 1, v352);
    if ((_DWORD)v339)
    {
      if (!v353)
      {
        *v350 = *v351;
        v350[1] = v351[1];
        v354 = *(int *)(v352 + 20);
        v355 = (char *)v350 + v354;
        v356 = (char *)v351 + v354;
        v357 = sub_1A6121DF0();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v356, 1, v357))
        {
          v358 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
          memcpy(v355, v356, *(_QWORD *)(*(_QWORD *)(v358 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(v355, v356, v357);
          __swift_storeEnumTagSinglePayload((uint64_t)v355, 0, 1, v357);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v350, 0, 1, v352);
LABEL_90:
        v394 = v278[12];
        v395 = &v276[v394];
        v396 = &v277[v394];
        v397 = sub_1A6121DF0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v397 - 8) + 24))(v395, v396, v397);
        *(_QWORD *)&v276[v278[13]] = *(_QWORD *)&v277[v278[13]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v398 = v278[14];
        v399 = &v276[v398];
        v400 = &v277[v398];
        v401 = type metadata accessor for AirPollutant();
        LODWORD(v395) = __swift_getEnumTagSinglePayload((uint64_t)v399, 1, v401);
        v402 = __swift_getEnumTagSinglePayload((uint64_t)v400, 1, v401);
        if ((_DWORD)v395)
        {
          if (!v402)
          {
            *v399 = *v400;
            v403 = *(int *)(v401 + 20);
            v404 = &v399[v403];
            v405 = &v400[v403];
            type metadata accessor for AirPollutantMeasurement();
            if (swift_getEnumCaseMultiPayload() == 1)
              v406 = &qword_1ED190B60;
            else
              v406 = &qword_1ED1922B8;
            v407 = __swift_instantiateConcreteTypeFromMangledName(v406);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v407 - 8) + 16))(v404, v405, v407);
            swift_storeEnumTagMultiPayload();
            v399[*(int *)(v401 + 24)] = v400[*(int *)(v401 + 24)];
            __swift_storeEnumTagSinglePayload((uint64_t)v399, 0, 1, v401);
            goto LABEL_99;
          }
        }
        else
        {
          if (!v402)
          {
            *v399 = *v400;
            if (v442 != v438)
            {
              v417 = *(int *)(v401 + 20);
              v418 = &v400[v417];
              v419 = &v399[v417];
              sub_1A5FA1740((uint64_t)&v399[v417], (uint64_t (*)(_QWORD))type metadata accessor for AirPollutantMeasurement);
              type metadata accessor for AirPollutantMeasurement();
              if (swift_getEnumCaseMultiPayload() == 1)
                v420 = &qword_1ED190B60;
              else
                v420 = &qword_1ED1922B8;
              v421 = __swift_instantiateConcreteTypeFromMangledName(v420);
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v421 - 8) + 16))(v419, v418, v421);
              swift_storeEnumTagMultiPayload();
            }
            v399[*(int *)(v401 + 24)] = v400[*(int *)(v401 + 24)];
            goto LABEL_99;
          }
          sub_1A5FA1740((uint64_t)v399, (uint64_t (*)(_QWORD))type metadata accessor for AirPollutant);
        }
        v408 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
        memcpy(v399, v400, *(_QWORD *)(*(_QWORD *)(v408 - 8) + 64));
LABEL_99:
        a2 = v438;
        a1 = v442;
        a3 = v443;
        v276[v278[15]] = v277[v278[15]];
        v409 = v278[16];
        v410 = &v276[v409];
        v411 = &v277[v409];
        *v410 = *v411;
        *((_QWORD *)v410 + 1) = *((_QWORD *)v411 + 1);
        *((_QWORD *)v410 + 2) = *((_QWORD *)v411 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v412 = v278[17];
        v413 = &v276[v412];
        v414 = &v277[v412];
        v432(&v276[v412], &v277[v412], v338);
        v415 = (int *)type metadata accessor for WeatherMetadata();
        v432(&v413[v415[5]], &v414[v415[5]], v338);
        *(_QWORD *)&v413[v415[6]] = *(_QWORD *)&v414[v415[6]];
        *(_QWORD *)&v413[v415[7]] = *(_QWORD *)&v414[v415[7]];
        *(_QWORD *)&v413[v415[8]] = *(_QWORD *)&v414[v415[8]];
        swift_retain();
        swift_release();
        goto LABEL_100;
      }
    }
    else
    {
      if (!v353)
      {
        *v350 = *v351;
        v350[1] = v351[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v388 = *(int *)(v352 + 20);
        v389 = (uint64_t)v350 + v388;
        v390 = (uint64_t)v351 + v388;
        v391 = sub_1A6121DF0();
        v392 = __swift_getEnumTagSinglePayload(v389, 1, v391);
        v393 = __swift_getEnumTagSinglePayload(v390, 1, v391);
        if (v392)
        {
          if (!v393)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v391 - 8) + 16))(v389, v390, v391);
            __swift_storeEnumTagSinglePayload(v389, 0, 1, v391);
            goto LABEL_90;
          }
        }
        else
        {
          v422 = *(_QWORD *)(v391 - 8);
          if (!v393)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v422 + 24))(v389, v390, v391);
            goto LABEL_90;
          }
          (*(void (**)(uint64_t, uint64_t))(v422 + 8))(v389, v391);
        }
        v364 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8) - 8) + 64);
        v365 = (void *)v389;
        v366 = (const void *)v390;
LABEL_72:
        memcpy(v365, v366, v364);
        goto LABEL_90;
      }
      sub_1A5FA1740((uint64_t)v350, (uint64_t (*)(_QWORD))type metadata accessor for ProviderAttribution);
    }
    v364 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330) - 8) + 64);
    v365 = v350;
    v366 = v351;
    goto LABEL_72;
  }
  if (v280)
  {
LABEL_59:
    v298 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
    memcpy(v276, v277, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
    goto LABEL_100;
  }
  v437 = a2;
  v441 = a1;
  v281 = sub_1A6121F58();
  v282 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v281 - 8) + 16);
  v282(v276, v277, v281);
  v424 = v281;
  v427 = v282;
  v282(&v276[v278[5]], &v277[v278[5]], v281);
  v283 = v278[6];
  v284 = &v276[v283];
  v285 = &v277[v283];
  *v284 = *v285;
  v284[1] = v285[1];
  v286 = v278[7];
  v287 = &v276[v286];
  v288 = &v277[v286];
  *(_QWORD *)v287 = *(_QWORD *)v288;
  *((_QWORD *)v287 + 1) = *((_QWORD *)v288 + 1);
  *((_QWORD *)v287 + 2) = *((_QWORD *)v288 + 2);
  *((_QWORD *)v287 + 3) = *((_QWORD *)v288 + 3);
  *((_QWORD *)v287 + 4) = *((_QWORD *)v288 + 4);
  *((_QWORD *)v287 + 5) = *((_QWORD *)v288 + 5);
  *((_QWORD *)v287 + 6) = *((_QWORD *)v288 + 6);
  *((_QWORD *)v287 + 7) = *((_QWORD *)v288 + 7);
  *((_QWORD *)v287 + 8) = *((_QWORD *)v288 + 8);
  *((_QWORD *)v287 + 9) = *((_QWORD *)v288 + 9);
  v287[80] = v288[80];
  *(_OWORD *)(v287 + 88) = *(_OWORD *)(v288 + 88);
  *((_QWORD *)v287 + 13) = *((_QWORD *)v288 + 13);
  *((_QWORD *)v287 + 14) = *((_QWORD *)v288 + 14);
  *(_QWORD *)&v276[v278[8]] = *(_QWORD *)&v277[v278[8]];
  v289 = v278[9];
  v290 = &v276[v289];
  v291 = &v277[v289];
  *(_QWORD *)v290 = *(_QWORD *)v291;
  *((_QWORD *)v290 + 1) = *((_QWORD *)v291 + 1);
  *((_QWORD *)v290 + 2) = *((_QWORD *)v291 + 2);
  *((_QWORD *)v290 + 3) = *((_QWORD *)v291 + 3);
  *((_QWORD *)v290 + 4) = *((_QWORD *)v291 + 4);
  *((_QWORD *)v290 + 5) = *((_QWORD *)v291 + 5);
  *((_QWORD *)v290 + 6) = *((_QWORD *)v291 + 6);
  *(_OWORD *)(v290 + 56) = *(_OWORD *)(v291 + 56);
  *((_QWORD *)v290 + 9) = *((_QWORD *)v291 + 9);
  *((_QWORD *)v290 + 10) = *((_QWORD *)v291 + 10);
  v276[v278[10]] = v277[v278[10]];
  v292 = v278[11];
  __dst = &v276[v292];
  v293 = &v277[v292];
  v294 = type metadata accessor for ProviderAttribution();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v293, 1, v294))
  {
    v295 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
    memcpy(__dst, v293, *(_QWORD *)(*(_QWORD *)(v295 - 8) + 64));
    a2 = v437;
    v296 = v277;
    v297 = v281;
  }
  else
  {
    *__dst = *v293;
    __dst[1] = v293[1];
    v359 = *(int *)(v294 + 20);
    v360 = (char *)__dst + v359;
    v361 = (char *)v293 + v359;
    v362 = sub_1A6121DF0();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v361, 1, v362))
    {
      v363 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
      memcpy(v360, v361, *(_QWORD *)(*(_QWORD *)(v363 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v360, v361, v362);
      __swift_storeEnumTagSinglePayload((uint64_t)v360, 0, 1, v362);
    }
    a2 = v437;
    v296 = v277;
    v297 = v424;
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v294);
  }
  v367 = v278[12];
  v368 = &v276[v367];
  v369 = &v296[v367];
  v370 = sub_1A6121DF0();
  (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v368, v369, v370);
  *(_QWORD *)&v276[v278[13]] = *(_QWORD *)&v296[v278[13]];
  v371 = v278[14];
  v372 = &v276[v371];
  v373 = &v296[v371];
  v374 = type metadata accessor for AirPollutant();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v374))
  {
    v375 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
    memcpy(v372, v373, *(_QWORD *)(*(_QWORD *)(v375 - 8) + 64));
  }
  else
  {
    *v372 = *v373;
    v376 = *(int *)(v374 + 20);
    v377 = &v372[v376];
    v378 = &v373[v376];
    type metadata accessor for AirPollutantMeasurement();
    if (swift_getEnumCaseMultiPayload() == 1)
      v379 = &qword_1ED190B60;
    else
      v379 = &qword_1ED1922B8;
    v380 = __swift_instantiateConcreteTypeFromMangledName(v379);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v380 - 8) + 16))(v377, v378, v380);
    v296 = v277;
    swift_storeEnumTagMultiPayload();
    v372[*(int *)(v374 + 24)] = v373[*(int *)(v374 + 24)];
    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v374);
  }
  a1 = v441;
  a3 = v443;
  v276[v278[15]] = v296[v278[15]];
  v381 = v278[16];
  v382 = &v276[v381];
  v383 = &v296[v381];
  *v382 = *v383;
  *((_QWORD *)v382 + 1) = *((_QWORD *)v383 + 1);
  *((_QWORD *)v382 + 2) = *((_QWORD *)v383 + 2);
  v384 = v278[17];
  v385 = &v276[v384];
  v386 = &v296[v384];
  swift_bridgeObjectRetain();
  v427(v385, v386, v297);
  v387 = (int *)type metadata accessor for WeatherMetadata();
  v427(&v385[v387[5]], &v386[v387[5]], v297);
  *(_QWORD *)&v385[v387[6]] = *(_QWORD *)&v386[v387[6]];
  *(_QWORD *)&v385[v387[7]] = *(_QWORD *)&v386[v387[7]];
  *(_QWORD *)&v385[v387[8]] = *(_QWORD *)&v386[v387[8]];
  swift_retain();
  __swift_storeEnumTagSinglePayload((uint64_t)v276, 0, 1, (uint64_t)v278);
LABEL_100:
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for WatchWeather(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  int *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  int *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  int *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  void (*v124)(char *, char *, uint64_t);
  int *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  int *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  void (*v138)(char *, char *, uint64_t);
  int *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  int *v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(char *, char *, uint64_t);
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  int *v182;
  void (*v184)(char *, char *, uint64_t);
  void (*v185)(char *, char *);
  uint64_t v186;
  void (*__dst)(char *, char *);
  char *__dsta;
  void *__dstb;
  uint64_t v190;
  void (*v191)(char *, char *, uint64_t);
  int *v192;

  v6 = (int *)type metadata accessor for CurrentWeather();
  v192 = a3;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_1A6121F58();
    __dst = *(void (**)(char *, char *))(*(_QWORD *)(v8 - 8) + 32);
    v190 = v8;
    __dst(a1, a2);
    *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    v9 = v6[9];
    v10 = &a1[v9];
    v11 = &a2[v9];
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    a1[v6[10]] = a2[v6[10]];
    *(_OWORD *)&a1[v6[11]] = *(_OWORD *)&a2[v6[11]];
    v12 = v6[12];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    v184 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v184(v13, v14, v15);
    *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
    v16 = v6[14];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
    v185 = *(void (**)(char *, char *))(*(_QWORD *)(v19 - 8) + 32);
    v186 = v19;
    v185(v17, v18);
    v20 = v6[15];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    a1[v6[16]] = a2[v6[16]];
    v24 = v6[17];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32);
    v28(v25, v26, v27);
    v29 = (int *)type metadata accessor for PrecipitationAmount();
    v28(&v25[v29[5]], &v26[v29[5]], v27);
    v28(&v25[v29[6]], &v26[v29[6]], v27);
    v28(&v25[v29[7]], &v26[v29[7]], v27);
    v28(&v25[v29[8]], &v26[v29[8]], v27);
    v28(&v25[v29[9]], &v26[v29[9]], v27);
    v30 = v6[18];
    v31 = &a1[v30];
    v32 = &a2[v30];
    v28(&a1[v30], &a2[v30], v27);
    v28(&v31[v29[5]], &v32[v29[5]], v27);
    v28(&v31[v29[6]], &v32[v29[6]], v27);
    v28(&v31[v29[7]], &v32[v29[7]], v27);
    v28(&v31[v29[8]], &v32[v29[8]], v27);
    v28(&v31[v29[9]], &v32[v29[9]], v27);
    v33 = v6[19];
    v34 = &a1[v33];
    v35 = &a2[v33];
    v28(&a1[v33], &a2[v33], v27);
    v36 = (int *)type metadata accessor for PrecipitationAmountByType();
    v28(&v34[v36[5]], &v35[v36[5]], v27);
    v28(&v34[v36[6]], &v35[v36[6]], v27);
    v28(&v34[v36[7]], &v35[v36[7]], v27);
    v28(&v34[v36[8]], &v35[v36[8]], v27);
    v37 = v36[9];
    v38 = &v34[v37];
    v39 = &v35[v37];
    v28(v38, &v35[v37], v27);
    v40 = (int *)type metadata accessor for SnowfallAmount();
    v28(&v38[v40[5]], &v39[v40[5]], v27);
    v28(&v38[v40[6]], &v39[v40[6]], v27);
    v28(&v38[v40[7]], &v39[v40[7]], v27);
    v28(&v38[v40[8]], &v39[v40[8]], v27);
    v28(&v38[v40[9]], &v39[v40[9]], v27);
    v41 = v6[20];
    v42 = &a1[v41];
    v43 = &a2[v41];
    v28(&a1[v41], &a2[v41], v27);
    v28(&v42[v36[5]], &v43[v36[5]], v27);
    v28(&v42[v36[6]], &v43[v36[6]], v27);
    v28(&v42[v36[7]], &v43[v36[7]], v27);
    v28(&v42[v36[8]], &v43[v36[8]], v27);
    v44 = v36[9];
    v45 = &v42[v44];
    v46 = &v43[v44];
    v28(v45, v46, v27);
    v28(&v45[v40[5]], &v46[v40[5]], v27);
    v28(&v45[v40[6]], &v46[v40[6]], v27);
    v28(&v45[v40[7]], &v46[v40[7]], v27);
    v28(&v45[v40[8]], &v46[v40[8]], v27);
    v28(&v45[v40[9]], &v46[v40[9]], v27);
    v47 = v6[21];
    v48 = &a1[v47];
    v49 = &a2[v47];
    v28(&a1[v47], &a2[v47], v27);
    v28(&v48[v36[5]], &v49[v36[5]], v27);
    v28(&v48[v36[6]], &v49[v36[6]], v27);
    v28(&v48[v36[7]], &v49[v36[7]], v27);
    v28(&v48[v36[8]], &v49[v36[8]], v27);
    v50 = v36[9];
    v51 = &v48[v50];
    v52 = &v49[v50];
    v28(v51, v52, v27);
    v28(&v51[v40[5]], &v52[v40[5]], v27);
    v28(&v51[v40[6]], &v52[v40[6]], v27);
    v28(&v51[v40[7]], &v52[v40[7]], v27);
    v28(&v51[v40[8]], &v52[v40[8]], v27);
    v28(&v51[v40[9]], &v52[v40[9]], v27);
    v53 = v6[22];
    v54 = &a1[v53];
    v55 = &a2[v53];
    v28(&a1[v53], &a2[v53], v27);
    v28(&v54[v36[5]], &v55[v36[5]], v27);
    v28(&v54[v36[6]], &v55[v36[6]], v27);
    v28(&v54[v36[7]], &v55[v36[7]], v27);
    v28(&v54[v36[8]], &v55[v36[8]], v27);
    v56 = v36[9];
    v57 = &v54[v56];
    v58 = &v55[v56];
    v28(v57, v58, v27);
    v28(&v57[v40[5]], &v58[v40[5]], v27);
    v28(&v57[v40[6]], &v58[v40[6]], v27);
    v28(&v57[v40[7]], &v58[v40[7]], v27);
    v28(&v57[v40[8]], &v58[v40[8]], v27);
    v28(&v57[v40[9]], &v58[v40[9]], v27);
    v59 = v6[23];
    v60 = &a1[v59];
    v61 = &a2[v59];
    v28(&a1[v59], &a2[v59], v27);
    v28(&v60[v36[5]], &v61[v36[5]], v27);
    v28(&v60[v36[6]], &v61[v36[6]], v27);
    v28(&v60[v36[7]], &v61[v36[7]], v27);
    v28(&v60[v36[8]], &v61[v36[8]], v27);
    v62 = v36[9];
    v63 = &v60[v62];
    v64 = &v61[v62];
    v28(v63, v64, v27);
    v28(&v63[v40[5]], &v64[v40[5]], v27);
    v28(&v63[v40[6]], &v64[v40[6]], v27);
    v28(&v63[v40[7]], &v64[v40[7]], v27);
    v28(&v63[v40[8]], &v64[v40[8]], v27);
    v28(&v63[v40[9]], &v64[v40[9]], v27);
    v65 = v6[24];
    v66 = &a1[v65];
    v67 = &a2[v65];
    v28(&a1[v65], &a2[v65], v27);
    v28(&v66[v36[5]], &v67[v36[5]], v27);
    v28(&v66[v36[6]], &v67[v36[6]], v27);
    v28(&v66[v36[7]], &v67[v36[7]], v27);
    v28(&v66[v36[8]], &v67[v36[8]], v27);
    v68 = v36[9];
    v69 = &v66[v68];
    v70 = &v67[v68];
    v28(v69, v70, v27);
    v28(&v69[v40[5]], &v70[v40[5]], v27);
    v28(&v69[v40[6]], &v70[v40[6]], v27);
    v28(&v69[v40[7]], &v70[v40[7]], v27);
    v28(&v69[v40[8]], &v70[v40[8]], v27);
    v28(&v69[v40[9]], &v70[v40[9]], v27);
    v71 = v6[25];
    v72 = &a1[v71];
    v73 = &a2[v71];
    *(_QWORD *)v72 = *(_QWORD *)v73;
    v72[8] = v73[8];
    a1[v6[26]] = a2[v6[26]];
    v184(&a1[v6[27]], &a2[v6[27]], v15);
    v184(&a1[v6[28]], &a2[v6[28]], v15);
    v74 = v6[29];
    v75 = &a1[v74];
    v76 = &a2[v74];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v74], 1, v15))
    {
      v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      v184(v75, v76, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v15);
    }
    v78 = v6[30];
    v79 = &a1[v78];
    v80 = &a2[v78];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v78], 1, v15))
    {
      v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      v184(v79, v80, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v15);
    }
    v82 = v6[31];
    v83 = &a1[v82];
    v84 = &a2[v82];
    *(_QWORD *)v83 = *(_QWORD *)v84;
    v83[8] = v84[8];
    v28(&a1[v6[32]], &a2[v6[32]], v27);
    v85 = v6[33];
    v86 = &a1[v85];
    v87 = &a2[v85];
    a1[v85] = a2[v85];
    v88 = (int *)type metadata accessor for Wind();
    v89 = v88[5];
    v90 = &v86[v89];
    v91 = &v87[v89];
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
    ((void (*)(char *, char *, uint64_t))v185)(&v86[v88[6]], &v87[v88[6]], v186);
    v93 = v88[7];
    v94 = &v86[v93];
    v95 = &v87[v93];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v87[v93], 1, v186))
    {
      v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
      memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v185)(v94, v95, v186);
      __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v186);
    }
    v97 = v6[34];
    v98 = &a1[v97];
    v99 = &a2[v97];
    ((void (*)(char *, char *, uint64_t))__dst)(&a1[v97], &a2[v97], v190);
    v100 = (int *)type metadata accessor for WeatherMetadata();
    ((void (*)(char *, char *, uint64_t))__dst)(&v98[v100[5]], &v99[v100[5]], v190);
    *(_QWORD *)&v98[v100[6]] = *(_QWORD *)&v99[v100[6]];
    *(_QWORD *)&v98[v100[7]] = *(_QWORD *)&v99[v100[7]];
    *(_QWORD *)&v98[v100[8]] = *(_QWORD *)&v99[v100[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
    a3 = v192;
  }
  v101 = a3[5];
  v102 = &a1[v101];
  v103 = &a2[v101];
  v104 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, (uint64_t)v104))
  {
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v102 = *(_QWORD *)v103;
    v106 = v104[13];
    v107 = &v102[v106];
    v108 = &v103[v106];
    v109 = sub_1A6121F58();
    v110 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32);
    v110(v107, v108, v109);
    v111 = (int *)type metadata accessor for WeatherMetadata();
    v110(&v107[v111[5]], &v108[v111[5]], v109);
    *(_QWORD *)&v107[v111[6]] = *(_QWORD *)&v108[v111[6]];
    *(_QWORD *)&v107[v111[7]] = *(_QWORD *)&v108[v111[7]];
    *(_QWORD *)&v107[v111[8]] = *(_QWORD *)&v108[v111[8]];
    a3 = v192;
    *(_OWORD *)&v102[v104[14]] = *(_OWORD *)&v103[v104[14]];
    *(_QWORD *)&v102[v104[15]] = *(_QWORD *)&v103[v104[15]];
    *(_QWORD *)&v102[v104[16]] = *(_QWORD *)&v103[v104[16]];
    v112 = v104[17];
    v113 = &v102[v112];
    v114 = &v103[v112];
    v113[16] = v114[16];
    *(_OWORD *)v113 = *(_OWORD *)v114;
    __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, (uint64_t)v104);
  }
  v115 = a3[6];
  v116 = &a1[v115];
  v117 = &a2[v115];
  v118 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, (uint64_t)v118))
  {
    v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
    memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v116 = *(_QWORD *)v117;
    v120 = v118[13];
    v121 = &v116[v120];
    v122 = &v117[v120];
    v123 = sub_1A6121F58();
    v124 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 32);
    v124(v121, v122, v123);
    v125 = (int *)type metadata accessor for WeatherMetadata();
    v124(&v121[v125[5]], &v122[v125[5]], v123);
    *(_QWORD *)&v121[v125[6]] = *(_QWORD *)&v122[v125[6]];
    *(_QWORD *)&v121[v125[7]] = *(_QWORD *)&v122[v125[7]];
    *(_QWORD *)&v121[v125[8]] = *(_QWORD *)&v122[v125[8]];
    a3 = v192;
    *(_OWORD *)&v116[v118[14]] = *(_OWORD *)&v117[v118[14]];
    *(_QWORD *)&v116[v118[15]] = *(_QWORD *)&v117[v118[15]];
    *(_QWORD *)&v116[v118[16]] = *(_QWORD *)&v117[v118[16]];
    v126 = v118[17];
    v127 = &v116[v126];
    v128 = &v117[v126];
    v127[16] = v128[16];
    *(_OWORD *)v127 = *(_OWORD *)v128;
    __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, (uint64_t)v118);
  }
  v129 = a3[7];
  v130 = &a1[v129];
  v131 = &a2[v129];
  v132 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  if (__swift_getEnumTagSinglePayload((uint64_t)v131, 1, (uint64_t)v132))
  {
    v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
    memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v130 = *(_QWORD *)v131;
    v134 = v132[13];
    v135 = &v130[v134];
    v136 = &v131[v134];
    v137 = sub_1A6121F58();
    v138 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 32);
    v138(v135, v136, v137);
    v139 = (int *)type metadata accessor for WeatherMetadata();
    v138(&v135[v139[5]], &v136[v139[5]], v137);
    *(_QWORD *)&v135[v139[6]] = *(_QWORD *)&v136[v139[6]];
    *(_QWORD *)&v135[v139[7]] = *(_QWORD *)&v136[v139[7]];
    *(_QWORD *)&v135[v139[8]] = *(_QWORD *)&v136[v139[8]];
    a3 = v192;
    *(_OWORD *)&v130[v132[14]] = *(_OWORD *)&v131[v132[14]];
    *(_QWORD *)&v130[v132[15]] = *(_QWORD *)&v131[v132[15]];
    *(_QWORD *)&v130[v132[16]] = *(_QWORD *)&v131[v132[16]];
    v140 = v132[17];
    v141 = &v130[v140];
    v142 = &v131[v140];
    v141[16] = v142[16];
    *(_OWORD *)v141 = *(_OWORD *)v142;
    __swift_storeEnumTagSinglePayload((uint64_t)v130, 0, 1, (uint64_t)v132);
  }
  v143 = a3[8];
  v144 = &a1[v143];
  v145 = &a2[v143];
  v146 = (int *)type metadata accessor for AirQuality();
  if (__swift_getEnumTagSinglePayload((uint64_t)v145, 1, (uint64_t)v146))
  {
    v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
    memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
  }
  else
  {
    v148 = sub_1A6121F58();
    v149 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 32);
    v149(v144, v145, v148);
    v191 = v149;
    v149(&v144[v146[5]], &v145[v146[5]], v148);
    *(_OWORD *)&v144[v146[6]] = *(_OWORD *)&v145[v146[6]];
    memcpy(&v144[v146[7]], &v145[v146[7]], 0x78uLL);
    *(_QWORD *)&v144[v146[8]] = *(_QWORD *)&v145[v146[8]];
    memcpy(&v144[v146[9]], &v145[v146[9]], 0x58uLL);
    v144[v146[10]] = v145[v146[10]];
    v150 = v146[11];
    v151 = &v144[v150];
    v152 = &v145[v150];
    v153 = type metadata accessor for ProviderAttribution();
    if (__swift_getEnumTagSinglePayload((uint64_t)v152, 1, v153))
    {
      v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
      memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v151 = *(_OWORD *)v152;
      v155 = *(int *)(v153 + 20);
      __dsta = &v151[v155];
      v156 = &v152[v155];
      v157 = sub_1A6121DF0();
      if (__swift_getEnumTagSinglePayload((uint64_t)v156, 1, v157))
      {
        v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
        memcpy(__dsta, v156, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(__dsta, v156, v157);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v157);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v151, 0, 1, v153);
    }
    v159 = v146[12];
    v160 = &v144[v159];
    v161 = &v145[v159];
    v162 = sub_1A6121DF0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v160, v161, v162);
    *(_QWORD *)&v144[v146[13]] = *(_QWORD *)&v145[v146[13]];
    v163 = v146[14];
    v164 = &v144[v163];
    v165 = &v145[v163];
    v166 = type metadata accessor for AirPollutant();
    if (__swift_getEnumTagSinglePayload((uint64_t)v165, 1, v166))
    {
      v167 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
      memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
    }
    else
    {
      *v164 = *v165;
      v168 = *(int *)(v166 + 20);
      v169 = &v164[v168];
      __dstb = (void *)v148;
      v170 = &v165[v168];
      type metadata accessor for AirPollutantMeasurement();
      if (swift_getEnumCaseMultiPayload() == 1)
        v171 = &qword_1ED190B60;
      else
        v171 = &qword_1ED1922B8;
      v172 = __swift_instantiateConcreteTypeFromMangledName(v171);
      v173 = v170;
      v148 = (uint64_t)__dstb;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v169, v173, v172);
      swift_storeEnumTagMultiPayload();
      v164[*(int *)(v166 + 24)] = v165[*(int *)(v166 + 24)];
      __swift_storeEnumTagSinglePayload((uint64_t)v164, 0, 1, v166);
    }
    v144[v146[15]] = v145[v146[15]];
    v174 = v146[16];
    v175 = &v144[v174];
    v176 = &v145[v174];
    *(_OWORD *)v175 = *(_OWORD *)v176;
    *((_QWORD *)v175 + 2) = *((_QWORD *)v176 + 2);
    v177 = v146[17];
    v178 = &v144[v177];
    v179 = &v145[v177];
    v191(&v144[v177], v179, v148);
    v180 = type metadata accessor for WeatherMetadata();
    v181 = v148;
    v182 = (int *)v180;
    v191(&v178[*(int *)(v180 + 20)], &v179[*(int *)(v180 + 20)], v181);
    *(_QWORD *)&v178[v182[6]] = *(_QWORD *)&v179[v182[6]];
    *(_QWORD *)&v178[v182[7]] = *(_QWORD *)&v179[v182[7]];
    *(_QWORD *)&v178[v182[8]] = *(_QWORD *)&v179[v182[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)v144, 0, 1, (uint64_t)v146);
    a3 = v192;
  }
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

_BYTE *assignWithTake for WatchWeather(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  int *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  int *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  int v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  int *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  int *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  int v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  int *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  int *v203;
  uint64_t v204;
  _QWORD *v205;
  _QWORD *v206;
  int *v207;
  int v208;
  int v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  void (*v214)(char *, char *, uint64_t);
  int *v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  _QWORD *v221;
  _QWORD *v222;
  int *v223;
  int v224;
  int v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  void (*v230)(char *, char *, uint64_t);
  int *v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  _QWORD *v238;
  int *v239;
  int v240;
  int v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  void (*v246)(char *, char *, uint64_t);
  int *v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  _BYTE *v254;
  int *v255;
  int v256;
  int v257;
  uint64_t v258;
  void (*v259)(char *, char *, uint64_t);
  uint64_t v260;
  char *v261;
  _OWORD *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  char *v268;
  uint64_t v269;
  void (*v270)(char *, char *, uint64_t);
  int *v271;
  uint64_t v272;
  _QWORD *v273;
  uint64_t *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  char *v281;
  char *v282;
  uint64_t v283;
  void (*v284)(char *, char *, uint64_t);
  int *v285;
  uint64_t v286;
  _QWORD *v287;
  uint64_t *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  char *v295;
  char *v296;
  uint64_t v297;
  void (*v298)(char *, char *, uint64_t);
  int *v299;
  uint64_t v300;
  _QWORD *v301;
  uint64_t *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char *v306;
  char *v307;
  uint64_t v308;
  void (*v309)(char *, _BYTE *, uint64_t);
  uint64_t v310;
  char *v311;
  uint64_t *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  int v333;
  uint64_t v334;
  void *v335;
  const void *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  uint64_t v341;
  uint64_t v342;
  size_t v343;
  void *v344;
  const void *v345;
  uint64_t v346;
  char *v347;
  char *v348;
  uint64_t v349;
  uint64_t v350;
  char *v351;
  _BYTE *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  char *v356;
  _BYTE *v357;
  uint64_t *v358;
  uint64_t v359;
  _BYTE *v360;
  uint64_t v361;
  char *v362;
  char *v363;
  uint64_t v364;
  char *v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  int *v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  int v375;
  int v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  char *v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  char *v385;
  uint64_t v386;
  int v387;
  uint64_t v388;
  char *v389;
  char *v390;
  uint64_t *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  char *v395;
  char *v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  char *v400;
  char *v401;
  int *v402;
  uint64_t v404;
  char *v405;
  char *v406;
  uint64_t *v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  void (*v414)(_BYTE *, _BYTE *);
  void (*v415)(_BYTE *, _BYTE *);
  uint64_t v416;
  uint64_t v417;
  _BYTE *v418;
  void (*__dst)(char *, char *, uint64_t);
  void (*__dsta)(char *, char *, uint64_t);
  void (*__dstb)(char *, char *, uint64_t);
  char *__dstc;
  void *__dstd;
  void (*v424)(char *, char *);
  void (*v425)(char *, char *);
  void (*v426)(char *, char *, uint64_t);
  uint64_t v427;
  int *v428;

  v6 = (int *)type metadata accessor for CurrentWeather();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6);
  v428 = a3;
  if (!EnumTagSinglePayload)
  {
    if (v8)
    {
      sub_1A5FA1740((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
      goto LABEL_7;
    }
    v79 = sub_1A6121F58();
    v415 = *(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v79 - 8) + 40);
    v417 = v79;
    v415(a1, a2);
    *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    v80 = v6[9];
    v81 = &a1[v80];
    v82 = &a2[v80];
    *(_OWORD *)v81 = *(_OWORD *)v82;
    *((_QWORD *)v81 + 2) = *((_QWORD *)v82 + 2);
    a1[v6[10]] = a2[v6[10]];
    v83 = v6[11];
    v84 = &a1[v83];
    v85 = (uint64_t *)&a2[v83];
    v87 = *v85;
    v86 = v85[1];
    *v84 = v87;
    v84[1] = v86;
    swift_bridgeObjectRelease();
    v88 = v6[12];
    v89 = &a1[v88];
    v90 = &a2[v88];
    v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    v411 = *(_QWORD *)(v91 - 8);
    __dsta = *(void (**)(char *, char *, uint64_t))(v411 + 40);
    __dsta(v89, v90, v91);
    *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
    v92 = v6[14];
    v93 = &a1[v92];
    v94 = &a2[v92];
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
    v410 = *(_QWORD *)(v95 - 8);
    v413 = v95;
    v425 = *(void (**)(char *, char *))(v410 + 40);
    v425(v93, v94);
    v96 = v6[15];
    v97 = &a1[v96];
    v98 = &a2[v96];
    v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 40))(v97, v98, v99);
    a1[v6[16]] = a2[v6[16]];
    v100 = v6[17];
    v101 = &a1[v100];
    v102 = &a2[v100];
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    v104 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 40);
    v104(v101, v102, v103);
    v105 = (int *)type metadata accessor for PrecipitationAmount();
    v104(&v101[v105[5]], &v102[v105[5]], v103);
    v104(&v101[v105[6]], &v102[v105[6]], v103);
    v104(&v101[v105[7]], &v102[v105[7]], v103);
    v104(&v101[v105[8]], &v102[v105[8]], v103);
    v104(&v101[v105[9]], &v102[v105[9]], v103);
    v106 = v6[18];
    v107 = &a1[v106];
    v108 = &a2[v106];
    v104(&a1[v106], &a2[v106], v103);
    v104(&v107[v105[5]], &v108[v105[5]], v103);
    v104(&v107[v105[6]], &v108[v105[6]], v103);
    v104(&v107[v105[7]], &v108[v105[7]], v103);
    v104(&v107[v105[8]], &v108[v105[8]], v103);
    v104(&v107[v105[9]], &v108[v105[9]], v103);
    v109 = v6[19];
    v110 = &a1[v109];
    v111 = &a2[v109];
    v104(&a1[v109], &a2[v109], v103);
    v112 = (int *)type metadata accessor for PrecipitationAmountByType();
    v104(&v110[v112[5]], &v111[v112[5]], v103);
    v104(&v110[v112[6]], &v111[v112[6]], v103);
    v104(&v110[v112[7]], &v111[v112[7]], v103);
    v104(&v110[v112[8]], &v111[v112[8]], v103);
    v113 = v112[9];
    v114 = &v110[v113];
    v115 = &v111[v113];
    v104(v114, &v111[v113], v103);
    v116 = (int *)type metadata accessor for SnowfallAmount();
    v104(&v114[v116[5]], &v115[v116[5]], v103);
    v104(&v114[v116[6]], &v115[v116[6]], v103);
    v104(&v114[v116[7]], &v115[v116[7]], v103);
    v104(&v114[v116[8]], &v115[v116[8]], v103);
    v104(&v114[v116[9]], &v115[v116[9]], v103);
    v117 = v6[20];
    v118 = &a1[v117];
    v119 = &a2[v117];
    v104(&a1[v117], &a2[v117], v103);
    v104(&v118[v112[5]], &v119[v112[5]], v103);
    v104(&v118[v112[6]], &v119[v112[6]], v103);
    v104(&v118[v112[7]], &v119[v112[7]], v103);
    v104(&v118[v112[8]], &v119[v112[8]], v103);
    v120 = v112[9];
    v121 = &v118[v120];
    v122 = &v119[v120];
    v104(v121, v122, v103);
    v104(&v121[v116[5]], &v122[v116[5]], v103);
    v104(&v121[v116[6]], &v122[v116[6]], v103);
    v104(&v121[v116[7]], &v122[v116[7]], v103);
    v104(&v121[v116[8]], &v122[v116[8]], v103);
    v104(&v121[v116[9]], &v122[v116[9]], v103);
    v123 = v6[21];
    v124 = &a1[v123];
    v125 = &a2[v123];
    v104(&a1[v123], &a2[v123], v103);
    v104(&v124[v112[5]], &v125[v112[5]], v103);
    v104(&v124[v112[6]], &v125[v112[6]], v103);
    v104(&v124[v112[7]], &v125[v112[7]], v103);
    v104(&v124[v112[8]], &v125[v112[8]], v103);
    v126 = v112[9];
    v127 = &v124[v126];
    v128 = &v125[v126];
    v104(v127, v128, v103);
    v104(&v127[v116[5]], &v128[v116[5]], v103);
    v104(&v127[v116[6]], &v128[v116[6]], v103);
    v104(&v127[v116[7]], &v128[v116[7]], v103);
    v104(&v127[v116[8]], &v128[v116[8]], v103);
    v104(&v127[v116[9]], &v128[v116[9]], v103);
    v129 = v6[22];
    v130 = &a1[v129];
    v131 = &a2[v129];
    v104(&a1[v129], &a2[v129], v103);
    v104(&v130[v112[5]], &v131[v112[5]], v103);
    v104(&v130[v112[6]], &v131[v112[6]], v103);
    v104(&v130[v112[7]], &v131[v112[7]], v103);
    v104(&v130[v112[8]], &v131[v112[8]], v103);
    v132 = v112[9];
    v133 = &v130[v132];
    v134 = &v131[v132];
    v104(v133, v134, v103);
    v104(&v133[v116[5]], &v134[v116[5]], v103);
    v104(&v133[v116[6]], &v134[v116[6]], v103);
    v104(&v133[v116[7]], &v134[v116[7]], v103);
    v104(&v133[v116[8]], &v134[v116[8]], v103);
    v104(&v133[v116[9]], &v134[v116[9]], v103);
    v135 = v6[23];
    v136 = &a1[v135];
    v137 = &a2[v135];
    v104(&a1[v135], &a2[v135], v103);
    v104(&v136[v112[5]], &v137[v112[5]], v103);
    v104(&v136[v112[6]], &v137[v112[6]], v103);
    v104(&v136[v112[7]], &v137[v112[7]], v103);
    v104(&v136[v112[8]], &v137[v112[8]], v103);
    v138 = v112[9];
    v139 = &v136[v138];
    v140 = &v137[v138];
    v104(v139, v140, v103);
    v104(&v139[v116[5]], &v140[v116[5]], v103);
    v104(&v139[v116[6]], &v140[v116[6]], v103);
    v104(&v139[v116[7]], &v140[v116[7]], v103);
    v104(&v139[v116[8]], &v140[v116[8]], v103);
    v104(&v139[v116[9]], &v140[v116[9]], v103);
    v141 = v6[24];
    v142 = &a1[v141];
    v143 = &a2[v141];
    v104(&a1[v141], &a2[v141], v103);
    v104(&v142[v112[5]], &v143[v112[5]], v103);
    v104(&v142[v112[6]], &v143[v112[6]], v103);
    v104(&v142[v112[7]], &v143[v112[7]], v103);
    v104(&v142[v112[8]], &v143[v112[8]], v103);
    v144 = v112[9];
    v145 = &v142[v144];
    v146 = &v143[v144];
    v104(v145, v146, v103);
    v104(&v145[v116[5]], &v146[v116[5]], v103);
    v104(&v145[v116[6]], &v146[v116[6]], v103);
    v104(&v145[v116[7]], &v146[v116[7]], v103);
    v104(&v145[v116[8]], &v146[v116[8]], v103);
    v104(&v145[v116[9]], &v146[v116[9]], v103);
    v147 = v6[25];
    v148 = &a1[v147];
    v149 = &a2[v147];
    *(_QWORD *)v148 = *(_QWORD *)v149;
    v148[8] = v149[8];
    a1[v6[26]] = a2[v6[26]];
    __dsta(&a1[v6[27]], &a2[v6[27]], v91);
    __dsta(&a1[v6[28]], &a2[v6[28]], v91);
    v150 = v6[29];
    v151 = &a1[v150];
    v152 = &a2[v150];
    LODWORD(v145) = __swift_getEnumTagSinglePayload((uint64_t)&a1[v150], 1, v91);
    v153 = __swift_getEnumTagSinglePayload((uint64_t)v152, 1, v91);
    if ((_DWORD)v145)
    {
      if (!v153)
      {
        (*(void (**)(char *, char *, uint64_t))(v411 + 32))(v151, v152, v91);
        __swift_storeEnumTagSinglePayload((uint64_t)v151, 0, 1, v91);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v153)
      {
        __dsta(v151, v152, v91);
LABEL_22:
        v178 = v6[30];
        v179 = &a1[v178];
        v180 = &a2[v178];
        v181 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v178], 1, v91);
        v182 = __swift_getEnumTagSinglePayload((uint64_t)v180, 1, v91);
        if (v181)
        {
          if (!v182)
          {
            (*(void (**)(char *, char *, uint64_t))(v411 + 32))(v179, v180, v91);
            __swift_storeEnumTagSinglePayload((uint64_t)v179, 0, 1, v91);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v182)
          {
            __dsta(v179, v180, v91);
LABEL_28:
            a3 = v428;
            v184 = v6[31];
            v185 = &a1[v184];
            v186 = &a2[v184];
            *(_QWORD *)v185 = *(_QWORD *)v186;
            v185[8] = v186[8];
            v104(&a1[v6[32]], &a2[v6[32]], v103);
            v187 = v6[33];
            v188 = &a1[v187];
            v189 = &a2[v187];
            a1[v187] = a2[v187];
            v190 = (int *)type metadata accessor for Wind();
            v191 = v190[5];
            v192 = &v188[v191];
            v193 = &v189[v191];
            v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 40))(v192, v193, v194);
            ((void (*)(char *, char *, uint64_t))v425)(&v188[v190[6]], &v189[v190[6]], v413);
            v195 = v190[7];
            v196 = &v188[v195];
            v197 = &v189[v195];
            LODWORD(v190) = __swift_getEnumTagSinglePayload((uint64_t)&v188[v195], 1, v413);
            v198 = __swift_getEnumTagSinglePayload((uint64_t)v197, 1, v413);
            if ((_DWORD)v190)
            {
              if (!v198)
              {
                (*(void (**)(char *, char *, uint64_t))(v410 + 32))(v196, v197, v413);
                __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v413);
LABEL_34:
                v200 = v6[34];
                v201 = &a1[v200];
                v202 = &a2[v200];
                ((void (*)(_BYTE *, _BYTE *, uint64_t))v415)(&a1[v200], &a2[v200], v417);
                v203 = (int *)type metadata accessor for WeatherMetadata();
                ((void (*)(char *, char *, uint64_t))v415)(&v201[v203[5]], &v202[v203[5]], v417);
                *(_QWORD *)&v201[v203[6]] = *(_QWORD *)&v202[v203[6]];
                *(_QWORD *)&v201[v203[7]] = *(_QWORD *)&v202[v203[7]];
                *(_QWORD *)&v201[v203[8]] = *(_QWORD *)&v202[v203[8]];
                swift_release();
                goto LABEL_35;
              }
            }
            else
            {
              if (!v198)
              {
                ((void (*)(char *, char *, uint64_t))v425)(v196, v197, v413);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v410 + 8))(v196, v413);
            }
            v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
            memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v411 + 8))(v179, v91);
        }
        v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
        memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v411 + 8))(v151, v91);
    }
    v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
    goto LABEL_22;
  }
  if (v8)
  {
LABEL_7:
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    goto LABEL_35;
  }
  v9 = sub_1A6121F58();
  v414 = *(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v9 - 8) + 32);
  v416 = v9;
  v414(a1, a2);
  *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
  *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  v10 = v6[9];
  v11 = &a1[v10];
  v12 = &a2[v10];
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
  a1[v6[10]] = a2[v6[10]];
  *(_OWORD *)&a1[v6[11]] = *(_OWORD *)&a2[v6[11]];
  v13 = v6[12];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  __dst = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  __dst(v14, v15, v16);
  *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
  v17 = v6[14];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v412 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
  v424 = *(void (**)(char *, char *))(*(_QWORD *)(v412 - 8) + 32);
  v424(v18, v19);
  v20 = v6[15];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  a1[v6[16]] = a2[v6[16]];
  v24 = v6[17];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32);
  v28(v25, v26, v27);
  v29 = (int *)type metadata accessor for PrecipitationAmount();
  v28(&v25[v29[5]], &v26[v29[5]], v27);
  v28(&v25[v29[6]], &v26[v29[6]], v27);
  v28(&v25[v29[7]], &v26[v29[7]], v27);
  v28(&v25[v29[8]], &v26[v29[8]], v27);
  v28(&v25[v29[9]], &v26[v29[9]], v27);
  v30 = v6[18];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v28(&a1[v30], &a2[v30], v27);
  v28(&v31[v29[5]], &v32[v29[5]], v27);
  v28(&v31[v29[6]], &v32[v29[6]], v27);
  v28(&v31[v29[7]], &v32[v29[7]], v27);
  v28(&v31[v29[8]], &v32[v29[8]], v27);
  v28(&v31[v29[9]], &v32[v29[9]], v27);
  v33 = v6[19];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v28(&a1[v33], &a2[v33], v27);
  v36 = (int *)type metadata accessor for PrecipitationAmountByType();
  v28(&v34[v36[5]], &v35[v36[5]], v27);
  v28(&v34[v36[6]], &v35[v36[6]], v27);
  v28(&v34[v36[7]], &v35[v36[7]], v27);
  v28(&v34[v36[8]], &v35[v36[8]], v27);
  v37 = v36[9];
  v38 = &v34[v37];
  v39 = &v35[v37];
  v28(v38, &v35[v37], v27);
  v40 = (int *)type metadata accessor for SnowfallAmount();
  v28(&v38[v40[5]], &v39[v40[5]], v27);
  v28(&v38[v40[6]], &v39[v40[6]], v27);
  v28(&v38[v40[7]], &v39[v40[7]], v27);
  v28(&v38[v40[8]], &v39[v40[8]], v27);
  v28(&v38[v40[9]], &v39[v40[9]], v27);
  v41 = v6[20];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v28(&a1[v41], &a2[v41], v27);
  v28(&v42[v36[5]], &v43[v36[5]], v27);
  v28(&v42[v36[6]], &v43[v36[6]], v27);
  v28(&v42[v36[7]], &v43[v36[7]], v27);
  v28(&v42[v36[8]], &v43[v36[8]], v27);
  v44 = v36[9];
  v45 = &v42[v44];
  v46 = &v43[v44];
  v28(v45, v46, v27);
  v28(&v45[v40[5]], &v46[v40[5]], v27);
  v28(&v45[v40[6]], &v46[v40[6]], v27);
  v28(&v45[v40[7]], &v46[v40[7]], v27);
  v28(&v45[v40[8]], &v46[v40[8]], v27);
  v28(&v45[v40[9]], &v46[v40[9]], v27);
  v47 = v6[21];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v28(&a1[v47], &a2[v47], v27);
  v28(&v48[v36[5]], &v49[v36[5]], v27);
  v28(&v48[v36[6]], &v49[v36[6]], v27);
  v28(&v48[v36[7]], &v49[v36[7]], v27);
  v28(&v48[v36[8]], &v49[v36[8]], v27);
  v50 = v36[9];
  v51 = &v48[v50];
  v52 = &v49[v50];
  v28(v51, v52, v27);
  v28(&v51[v40[5]], &v52[v40[5]], v27);
  v28(&v51[v40[6]], &v52[v40[6]], v27);
  v28(&v51[v40[7]], &v52[v40[7]], v27);
  v28(&v51[v40[8]], &v52[v40[8]], v27);
  v28(&v51[v40[9]], &v52[v40[9]], v27);
  v53 = v6[22];
  v54 = &a1[v53];
  v55 = &a2[v53];
  v28(&a1[v53], &a2[v53], v27);
  v28(&v54[v36[5]], &v55[v36[5]], v27);
  v28(&v54[v36[6]], &v55[v36[6]], v27);
  v28(&v54[v36[7]], &v55[v36[7]], v27);
  v28(&v54[v36[8]], &v55[v36[8]], v27);
  v56 = v36[9];
  v57 = &v54[v56];
  v58 = &v55[v56];
  v28(v57, v58, v27);
  v28(&v57[v40[5]], &v58[v40[5]], v27);
  v28(&v57[v40[6]], &v58[v40[6]], v27);
  v28(&v57[v40[7]], &v58[v40[7]], v27);
  v28(&v57[v40[8]], &v58[v40[8]], v27);
  v28(&v57[v40[9]], &v58[v40[9]], v27);
  v59 = v6[23];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v28(&a1[v59], &a2[v59], v27);
  v28(&v60[v36[5]], &v61[v36[5]], v27);
  v28(&v60[v36[6]], &v61[v36[6]], v27);
  v28(&v60[v36[7]], &v61[v36[7]], v27);
  v28(&v60[v36[8]], &v61[v36[8]], v27);
  v62 = v36[9];
  v63 = &v60[v62];
  v64 = &v61[v62];
  v28(v63, v64, v27);
  v28(&v63[v40[5]], &v64[v40[5]], v27);
  v28(&v63[v40[6]], &v64[v40[6]], v27);
  v28(&v63[v40[7]], &v64[v40[7]], v27);
  v28(&v63[v40[8]], &v64[v40[8]], v27);
  v28(&v63[v40[9]], &v64[v40[9]], v27);
  v65 = v6[24];
  v66 = &a1[v65];
  v67 = &a2[v65];
  v28(&a1[v65], &a2[v65], v27);
  v28(&v66[v36[5]], &v67[v36[5]], v27);
  v28(&v66[v36[6]], &v67[v36[6]], v27);
  v28(&v66[v36[7]], &v67[v36[7]], v27);
  v28(&v66[v36[8]], &v67[v36[8]], v27);
  v68 = v36[9];
  v69 = &v66[v68];
  v70 = &v67[v68];
  v28(v69, v70, v27);
  v28(&v69[v40[5]], &v70[v40[5]], v27);
  v28(&v69[v40[6]], &v70[v40[6]], v27);
  v28(&v69[v40[7]], &v70[v40[7]], v27);
  v28(&v69[v40[8]], &v70[v40[8]], v27);
  v28(&v69[v40[9]], &v70[v40[9]], v27);
  v71 = v6[25];
  v72 = &a1[v71];
  v73 = &a2[v71];
  *(_QWORD *)v72 = *(_QWORD *)v73;
  v72[8] = v73[8];
  a1[v6[26]] = a2[v6[26]];
  __dst(&a1[v6[27]], &a2[v6[27]], v16);
  __dst(&a1[v6[28]], &a2[v6[28]], v16);
  v74 = v6[29];
  v75 = &a1[v74];
  v76 = &a2[v74];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v74], 1, v16))
  {
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    __dst(v75, v76, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v16);
  }
  a3 = v428;
  v154 = v6[30];
  v155 = &a1[v154];
  v156 = &a2[v154];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v154], 1, v16))
  {
    v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
  }
  else
  {
    __dst(v155, v156, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v155, 0, 1, v16);
  }
  v158 = v6[31];
  v159 = &a1[v158];
  v160 = &a2[v158];
  *(_QWORD *)v159 = *(_QWORD *)v160;
  v159[8] = v160[8];
  v28(&a1[v6[32]], &a2[v6[32]], v27);
  v161 = v6[33];
  v162 = &a1[v161];
  v163 = &a2[v161];
  a1[v161] = a2[v161];
  v164 = (int *)type metadata accessor for Wind();
  v165 = v164[5];
  v166 = &v162[v165];
  v167 = &v163[v165];
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v166, v167, v168);
  ((void (*)(char *, char *, uint64_t))v424)(&v162[v164[6]], &v163[v164[6]], v412);
  v169 = v164[7];
  v170 = &v162[v169];
  v171 = &v163[v169];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v163[v169], 1, v412))
  {
    v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
    memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v424)(v170, v171, v412);
    __swift_storeEnumTagSinglePayload((uint64_t)v170, 0, 1, v412);
  }
  v173 = v6[34];
  v174 = &a1[v173];
  v175 = &a2[v173];
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v414)(&a1[v173], &a2[v173], v416);
  v176 = (int *)type metadata accessor for WeatherMetadata();
  ((void (*)(char *, char *, uint64_t))v414)(&v174[v176[5]], &v175[v176[5]], v416);
  *(_QWORD *)&v174[v176[6]] = *(_QWORD *)&v175[v176[6]];
  *(_QWORD *)&v174[v176[7]] = *(_QWORD *)&v175[v176[7]];
  *(_QWORD *)&v174[v176[8]] = *(_QWORD *)&v175[v176[8]];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
LABEL_35:
  v204 = a3[5];
  v205 = &a1[v204];
  v206 = &a2[v204];
  v207 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  v208 = __swift_getEnumTagSinglePayload((uint64_t)v205, 1, (uint64_t)v207);
  v209 = __swift_getEnumTagSinglePayload((uint64_t)v206, 1, (uint64_t)v207);
  if (v208)
  {
    if (!v209)
    {
      *v205 = *v206;
      v210 = v207[13];
      v211 = (char *)v205 + v210;
      v212 = (char *)v206 + v210;
      v213 = sub_1A6121F58();
      v214 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 32);
      v214(v211, v212, v213);
      v215 = (int *)type metadata accessor for WeatherMetadata();
      v214(&v211[v215[5]], &v212[v215[5]], v213);
      a3 = v428;
      *(_QWORD *)&v211[v215[6]] = *(_QWORD *)&v212[v215[6]];
      *(_QWORD *)&v211[v215[7]] = *(_QWORD *)&v212[v215[7]];
      *(_QWORD *)&v211[v215[8]] = *(_QWORD *)&v212[v215[8]];
      *(_OWORD *)((char *)v205 + v207[14]) = *(_OWORD *)((char *)v206 + v207[14]);
      *(_QWORD *)((char *)v205 + v207[15]) = *(_QWORD *)((char *)v206 + v207[15]);
      *(_QWORD *)((char *)v205 + v207[16]) = *(_QWORD *)((char *)v206 + v207[16]);
      v216 = v207[17];
      v217 = (char *)v205 + v216;
      v218 = (char *)v206 + v216;
      v217[16] = v218[16];
      *(_OWORD *)v217 = *(_OWORD *)v218;
      __swift_storeEnumTagSinglePayload((uint64_t)v205, 0, 1, (uint64_t)v207);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v209)
  {
    sub_1A5FAFD58((uint64_t)v205, &qword_1ED193AE0);
LABEL_40:
    v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
    goto LABEL_41;
  }
  *v205 = *v206;
  swift_bridgeObjectRelease();
  v266 = v207[13];
  v267 = (char *)v205 + v266;
  v268 = (char *)v206 + v266;
  v269 = sub_1A6121F58();
  v270 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v269 - 8) + 40);
  v270(v267, v268, v269);
  v271 = (int *)type metadata accessor for WeatherMetadata();
  v270(&v267[v271[5]], &v268[v271[5]], v269);
  a3 = v428;
  *(_QWORD *)&v267[v271[6]] = *(_QWORD *)&v268[v271[6]];
  *(_QWORD *)&v267[v271[7]] = *(_QWORD *)&v268[v271[7]];
  *(_QWORD *)&v267[v271[8]] = *(_QWORD *)&v268[v271[8]];
  swift_release();
  v272 = v207[14];
  v273 = (_QWORD *)((char *)v205 + v272);
  v274 = (_QWORD *)((char *)v206 + v272);
  v276 = *v274;
  v275 = v274[1];
  *v273 = v276;
  v273[1] = v275;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v205 + v207[15]) = *(_QWORD *)((char *)v206 + v207[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v205 + v207[16]) = *(_QWORD *)((char *)v206 + v207[16]);
  swift_bridgeObjectRelease();
  v277 = v207[17];
  v278 = (char *)v205 + v277;
  v279 = (char *)v206 + v277;
  *(_OWORD *)v278 = *(_OWORD *)v279;
  v278[16] = v279[16];
LABEL_41:
  v220 = a3[6];
  v221 = &a1[v220];
  v222 = &a2[v220];
  v223 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  v224 = __swift_getEnumTagSinglePayload((uint64_t)v221, 1, (uint64_t)v223);
  v225 = __swift_getEnumTagSinglePayload((uint64_t)v222, 1, (uint64_t)v223);
  if (v224)
  {
    if (!v225)
    {
      *v221 = *v222;
      v226 = v223[13];
      v227 = (char *)v221 + v226;
      v228 = (char *)v222 + v226;
      v229 = sub_1A6121F58();
      v230 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v229 - 8) + 32);
      v230(v227, v228, v229);
      v231 = (int *)type metadata accessor for WeatherMetadata();
      v230(&v227[v231[5]], &v228[v231[5]], v229);
      a3 = v428;
      *(_QWORD *)&v227[v231[6]] = *(_QWORD *)&v228[v231[6]];
      *(_QWORD *)&v227[v231[7]] = *(_QWORD *)&v228[v231[7]];
      *(_QWORD *)&v227[v231[8]] = *(_QWORD *)&v228[v231[8]];
      *(_OWORD *)((char *)v221 + v223[14]) = *(_OWORD *)((char *)v222 + v223[14]);
      *(_QWORD *)((char *)v221 + v223[15]) = *(_QWORD *)((char *)v222 + v223[15]);
      *(_QWORD *)((char *)v221 + v223[16]) = *(_QWORD *)((char *)v222 + v223[16]);
      v232 = v223[17];
      v233 = (char *)v221 + v232;
      v234 = (char *)v222 + v232;
      v233[16] = v234[16];
      *(_OWORD *)v233 = *(_OWORD *)v234;
      __swift_storeEnumTagSinglePayload((uint64_t)v221, 0, 1, (uint64_t)v223);
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  if (v225)
  {
    sub_1A5FAFD58((uint64_t)v221, (uint64_t *)&unk_1ED193AB8);
LABEL_46:
    v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
    memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
    goto LABEL_47;
  }
  *v221 = *v222;
  swift_bridgeObjectRelease();
  v280 = v223[13];
  v281 = (char *)v221 + v280;
  v282 = (char *)v222 + v280;
  v283 = sub_1A6121F58();
  v284 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v283 - 8) + 40);
  v284(v281, v282, v283);
  v285 = (int *)type metadata accessor for WeatherMetadata();
  v284(&v281[v285[5]], &v282[v285[5]], v283);
  a3 = v428;
  *(_QWORD *)&v281[v285[6]] = *(_QWORD *)&v282[v285[6]];
  *(_QWORD *)&v281[v285[7]] = *(_QWORD *)&v282[v285[7]];
  *(_QWORD *)&v281[v285[8]] = *(_QWORD *)&v282[v285[8]];
  swift_release();
  v286 = v223[14];
  v287 = (_QWORD *)((char *)v221 + v286);
  v288 = (_QWORD *)((char *)v222 + v286);
  v290 = *v288;
  v289 = v288[1];
  *v287 = v290;
  v287[1] = v289;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v221 + v223[15]) = *(_QWORD *)((char *)v222 + v223[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v221 + v223[16]) = *(_QWORD *)((char *)v222 + v223[16]);
  swift_bridgeObjectRelease();
  v291 = v223[17];
  v292 = (char *)v221 + v291;
  v293 = (char *)v222 + v291;
  *(_OWORD *)v292 = *(_OWORD *)v293;
  v292[16] = v293[16];
LABEL_47:
  v236 = a3[7];
  v237 = &a1[v236];
  v238 = &a2[v236];
  v239 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  v240 = __swift_getEnumTagSinglePayload((uint64_t)v237, 1, (uint64_t)v239);
  v241 = __swift_getEnumTagSinglePayload((uint64_t)v238, 1, (uint64_t)v239);
  if (v240)
  {
    if (!v241)
    {
      *v237 = *v238;
      v242 = v239[13];
      v243 = (char *)v237 + v242;
      v244 = (char *)v238 + v242;
      v245 = sub_1A6121F58();
      v246 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32);
      v246(v243, v244, v245);
      v247 = (int *)type metadata accessor for WeatherMetadata();
      v246(&v243[v247[5]], &v244[v247[5]], v245);
      a3 = v428;
      *(_QWORD *)&v243[v247[6]] = *(_QWORD *)&v244[v247[6]];
      *(_QWORD *)&v243[v247[7]] = *(_QWORD *)&v244[v247[7]];
      *(_QWORD *)&v243[v247[8]] = *(_QWORD *)&v244[v247[8]];
      *(_OWORD *)((char *)v237 + v239[14]) = *(_OWORD *)((char *)v238 + v239[14]);
      *(_QWORD *)((char *)v237 + v239[15]) = *(_QWORD *)((char *)v238 + v239[15]);
      *(_QWORD *)((char *)v237 + v239[16]) = *(_QWORD *)((char *)v238 + v239[16]);
      v248 = v239[17];
      v249 = (char *)v237 + v248;
      v250 = (char *)v238 + v248;
      v249[16] = v250[16];
      *(_OWORD *)v249 = *(_OWORD *)v250;
      __swift_storeEnumTagSinglePayload((uint64_t)v237, 0, 1, (uint64_t)v239);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v241)
  {
    sub_1A5FAFD58((uint64_t)v237, (uint64_t *)&unk_1ED193A90);
LABEL_52:
    v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
    memcpy(v237, v238, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
    goto LABEL_53;
  }
  *v237 = *v238;
  swift_bridgeObjectRelease();
  v294 = v239[13];
  v295 = (char *)v237 + v294;
  v296 = (char *)v238 + v294;
  v297 = sub_1A6121F58();
  v298 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 40);
  v298(v295, v296, v297);
  v299 = (int *)type metadata accessor for WeatherMetadata();
  v298(&v295[v299[5]], &v296[v299[5]], v297);
  a3 = v428;
  *(_QWORD *)&v295[v299[6]] = *(_QWORD *)&v296[v299[6]];
  *(_QWORD *)&v295[v299[7]] = *(_QWORD *)&v296[v299[7]];
  *(_QWORD *)&v295[v299[8]] = *(_QWORD *)&v296[v299[8]];
  swift_release();
  v300 = v239[14];
  v301 = (_QWORD *)((char *)v237 + v300);
  v302 = (_QWORD *)((char *)v238 + v300);
  v304 = *v302;
  v303 = v302[1];
  *v301 = v304;
  v301[1] = v303;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v237 + v239[15]) = *(_QWORD *)((char *)v238 + v239[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v237 + v239[16]) = *(_QWORD *)((char *)v238 + v239[16]);
  swift_bridgeObjectRelease();
  v305 = v239[17];
  v306 = (char *)v237 + v305;
  v307 = (char *)v238 + v305;
  *(_OWORD *)v306 = *(_OWORD *)v307;
  v306[16] = v307[16];
LABEL_53:
  v252 = a3[8];
  v253 = &a1[v252];
  v254 = &a2[v252];
  v255 = (int *)type metadata accessor for AirQuality();
  v256 = __swift_getEnumTagSinglePayload((uint64_t)v253, 1, (uint64_t)v255);
  v257 = __swift_getEnumTagSinglePayload((uint64_t)v254, 1, (uint64_t)v255);
  if (!v256)
  {
    if (v257)
    {
      sub_1A5FA1740((uint64_t)v253, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
      goto LABEL_59;
    }
    v308 = sub_1A6121F58();
    v309 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v308 - 8) + 40);
    v309(v253, v254, v308);
    __dstb = v309;
    v427 = v308;
    v309(&v253[v255[5]], &v254[v255[5]], v308);
    v310 = v255[6];
    v311 = &v253[v310];
    v312 = (uint64_t *)&v254[v310];
    v314 = *v312;
    v313 = v312[1];
    *(_QWORD *)v311 = v314;
    *((_QWORD *)v311 + 1) = v313;
    swift_bridgeObjectRelease();
    v315 = v255[7];
    v316 = &v253[v315];
    v317 = &v254[v315];
    v318 = *(_QWORD *)&v254[v315 + 8];
    *(_QWORD *)v316 = *(_QWORD *)&v254[v315];
    *((_QWORD *)v316 + 1) = v318;
    swift_bridgeObjectRelease();
    v319 = *((_QWORD *)v317 + 3);
    *((_QWORD *)v316 + 2) = *((_QWORD *)v317 + 2);
    *((_QWORD *)v316 + 3) = v319;
    swift_bridgeObjectRelease();
    v320 = *((_QWORD *)v317 + 5);
    *((_QWORD *)v316 + 4) = *((_QWORD *)v317 + 4);
    *((_QWORD *)v316 + 5) = v320;
    swift_bridgeObjectRelease();
    v321 = *((_QWORD *)v317 + 7);
    *((_QWORD *)v316 + 6) = *((_QWORD *)v317 + 6);
    *((_QWORD *)v316 + 7) = v321;
    swift_bridgeObjectRelease();
    v322 = *((_QWORD *)v317 + 9);
    *((_QWORD *)v316 + 8) = *((_QWORD *)v317 + 8);
    *((_QWORD *)v316 + 9) = v322;
    swift_bridgeObjectRelease();
    v316[80] = v317[80];
    *(_OWORD *)(v316 + 88) = *(_OWORD *)(v317 + 88);
    *((_QWORD *)v316 + 13) = *((_QWORD *)v317 + 13);
    swift_bridgeObjectRelease();
    *((_QWORD *)v316 + 14) = *((_QWORD *)v317 + 14);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v253[v255[8]] = *(_QWORD *)&v254[v255[8]];
    v323 = v255[9];
    v324 = &v253[v323];
    v325 = &v254[v323];
    v326 = *(_QWORD *)&v254[v323 + 8];
    *(_QWORD *)v324 = *(_QWORD *)&v254[v323];
    *((_QWORD *)v324 + 1) = v326;
    swift_bridgeObjectRelease();
    *((_OWORD *)v324 + 1) = *((_OWORD *)v325 + 1);
    *((_QWORD *)v324 + 4) = *((_QWORD *)v325 + 4);
    swift_bridgeObjectRelease();
    v327 = *((_QWORD *)v325 + 6);
    *((_QWORD *)v324 + 5) = *((_QWORD *)v325 + 5);
    *((_QWORD *)v324 + 6) = v327;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v324 + 56) = *(_OWORD *)(v325 + 56);
    v328 = *((_QWORD *)v325 + 10);
    *((_QWORD *)v324 + 9) = *((_QWORD *)v325 + 9);
    *((_QWORD *)v324 + 10) = v328;
    swift_bridgeObjectRelease();
    v253[v255[10]] = v254[v255[10]];
    v329 = v255[11];
    v330 = (uint64_t)&v253[v329];
    v331 = (uint64_t)&v254[v329];
    v332 = type metadata accessor for ProviderAttribution();
    LODWORD(v324) = __swift_getEnumTagSinglePayload(v330, 1, v332);
    v333 = __swift_getEnumTagSinglePayload(v331, 1, v332);
    if ((_DWORD)v324)
    {
      if (!v333)
      {
        *(_OWORD *)v330 = *(_OWORD *)v331;
        v334 = *(int *)(v332 + 20);
        v335 = (void *)(v330 + v334);
        v336 = (const void *)(v331 + v334);
        v337 = sub_1A6121DF0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v336, 1, v337))
        {
          v338 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
          memcpy(v335, v336, *(_QWORD *)(*(_QWORD *)(v338 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v337 - 8) + 32))(v335, v336, v337);
          __swift_storeEnumTagSinglePayload((uint64_t)v335, 0, 1, v337);
        }
        v377 = v330;
        v378 = v332;
        goto LABEL_90;
      }
    }
    else
    {
      if (!v333)
      {
        v370 = *(_QWORD *)(v331 + 8);
        *(_QWORD *)v330 = *(_QWORD *)v331;
        *(_QWORD *)(v330 + 8) = v370;
        swift_bridgeObjectRelease();
        v371 = *(int *)(v332 + 20);
        v372 = v330 + v371;
        v373 = v331 + v371;
        v374 = sub_1A6121DF0();
        v375 = __swift_getEnumTagSinglePayload(v372, 1, v374);
        v376 = __swift_getEnumTagSinglePayload(v373, 1, v374);
        if (v375)
        {
          if (!v376)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v374 - 8) + 32))(v372, v373, v374);
            v377 = v372;
            v378 = v374;
LABEL_90:
            __swift_storeEnumTagSinglePayload(v377, 0, 1, v378);
            goto LABEL_91;
          }
        }
        else
        {
          v409 = *(_QWORD *)(v374 - 8);
          if (!v376)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v409 + 40))(v372, v373, v374);
LABEL_91:
            v379 = v255[12];
            v380 = &v253[v379];
            v381 = &v254[v379];
            v382 = sub_1A6121DF0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v382 - 8) + 40))(v380, v381, v382);
            *(_QWORD *)&v253[v255[13]] = *(_QWORD *)&v254[v255[13]];
            swift_bridgeObjectRelease();
            v383 = v255[14];
            v384 = &v253[v383];
            v385 = &v254[v383];
            v386 = type metadata accessor for AirPollutant();
            LODWORD(v380) = __swift_getEnumTagSinglePayload((uint64_t)v384, 1, v386);
            v387 = __swift_getEnumTagSinglePayload((uint64_t)v385, 1, v386);
            if ((_DWORD)v380)
            {
              if (!v387)
              {
                *v384 = *v385;
                v388 = *(int *)(v386 + 20);
                v389 = &v384[v388];
                v390 = &v385[v388];
                type metadata accessor for AirPollutantMeasurement();
                if (swift_getEnumCaseMultiPayload() == 1)
                  v391 = &qword_1ED190B60;
                else
                  v391 = &qword_1ED1922B8;
                v392 = __swift_instantiateConcreteTypeFromMangledName(v391);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v392 - 8) + 32))(v389, v390, v392);
                swift_storeEnumTagMultiPayload();
                v384[*(int *)(v386 + 24)] = v385[*(int *)(v386 + 24)];
                __swift_storeEnumTagSinglePayload((uint64_t)v384, 0, 1, v386);
                goto LABEL_100;
              }
            }
            else
            {
              if (!v387)
              {
                *v384 = *v385;
                if (a1 != a2)
                {
                  v404 = *(int *)(v386 + 20);
                  v405 = &v385[v404];
                  v406 = &v384[v404];
                  sub_1A5FA1740((uint64_t)&v384[v404], (uint64_t (*)(_QWORD))type metadata accessor for AirPollutantMeasurement);
                  type metadata accessor for AirPollutantMeasurement();
                  if (swift_getEnumCaseMultiPayload() == 1)
                    v407 = &qword_1ED190B60;
                  else
                    v407 = &qword_1ED1922B8;
                  v408 = __swift_instantiateConcreteTypeFromMangledName(v407);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v408 - 8) + 32))(v406, v405, v408);
                  swift_storeEnumTagMultiPayload();
                }
                v384[*(int *)(v386 + 24)] = v385[*(int *)(v386 + 24)];
                goto LABEL_100;
              }
              sub_1A5FA1740((uint64_t)v384, (uint64_t (*)(_QWORD))type metadata accessor for AirPollutant);
            }
            v393 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
            memcpy(v384, v385, *(_QWORD *)(*(_QWORD *)(v393 - 8) + 64));
LABEL_100:
            a3 = v428;
            v253[v255[15]] = v254[v255[15]];
            v394 = v255[16];
            v395 = &v253[v394];
            v396 = &v254[v394];
            *v395 = *v396;
            v398 = *((_QWORD *)v396 + 1);
            v397 = *((_QWORD *)v396 + 2);
            *((_QWORD *)v395 + 1) = v398;
            *((_QWORD *)v395 + 2) = v397;
            swift_bridgeObjectRelease();
            v399 = v255[17];
            v400 = &v253[v399];
            v401 = &v254[v399];
            __dstb(v400, &v254[v399], v427);
            v402 = (int *)type metadata accessor for WeatherMetadata();
            __dstb(&v400[v402[5]], &v401[v402[5]], v427);
            *(_QWORD *)&v400[v402[6]] = *(_QWORD *)&v401[v402[6]];
            *(_QWORD *)&v400[v402[7]] = *(_QWORD *)&v401[v402[7]];
            *(_QWORD *)&v400[v402[8]] = *(_QWORD *)&v401[v402[8]];
            swift_release();
            goto LABEL_101;
          }
          (*(void (**)(uint64_t, uint64_t))(v409 + 8))(v372, v374);
        }
        v343 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8) - 8) + 64);
        v344 = (void *)v372;
        v345 = (const void *)v373;
LABEL_72:
        memcpy(v344, v345, v343);
        goto LABEL_91;
      }
      sub_1A5FA1740(v330, (uint64_t (*)(_QWORD))type metadata accessor for ProviderAttribution);
    }
    v343 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330) - 8) + 64);
    v344 = (void *)v330;
    v345 = (const void *)v331;
    goto LABEL_72;
  }
  if (v257)
  {
LABEL_59:
    v265 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
    memcpy(v253, v254, *(_QWORD *)(*(_QWORD *)(v265 - 8) + 64));
    goto LABEL_101;
  }
  v258 = sub_1A6121F58();
  v259 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 32);
  v259(v253, v254, v258);
  v426 = v259;
  v259(&v253[v255[5]], &v254[v255[5]], v258);
  *(_OWORD *)&v253[v255[6]] = *(_OWORD *)&v254[v255[6]];
  memcpy(&v253[v255[7]], &v254[v255[7]], 0x78uLL);
  *(_QWORD *)&v253[v255[8]] = *(_QWORD *)&v254[v255[8]];
  memcpy(&v253[v255[9]], &v254[v255[9]], 0x58uLL);
  v253[v255[10]] = v254[v255[10]];
  v260 = v255[11];
  v261 = &v253[v260];
  v262 = &v254[v260];
  v263 = type metadata accessor for ProviderAttribution();
  if (__swift_getEnumTagSinglePayload((uint64_t)v262, 1, v263))
  {
    v264 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
    memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v264 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v261 = *v262;
    v339 = *(int *)(v263 + 20);
    __dstc = &v261[v339];
    v340 = (char *)v262 + v339;
    v341 = sub_1A6121DF0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v340, 1, v341))
    {
      v342 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
      memcpy(__dstc, v340, *(_QWORD *)(*(_QWORD *)(v342 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v341 - 8) + 32))(__dstc, v340, v341);
      __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v341);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v261, 0, 1, v263);
  }
  v346 = v255[12];
  v347 = &v253[v346];
  v348 = &v254[v346];
  v349 = sub_1A6121DF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v349 - 8) + 32))(v347, v348, v349);
  *(_QWORD *)&v253[v255[13]] = *(_QWORD *)&v254[v255[13]];
  v350 = v255[14];
  v351 = &v253[v350];
  v352 = &v254[v350];
  v353 = type metadata accessor for AirPollutant();
  if (__swift_getEnumTagSinglePayload((uint64_t)v352, 1, v353))
  {
    v354 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
    memcpy(v351, v352, *(_QWORD *)(*(_QWORD *)(v354 - 8) + 64));
  }
  else
  {
    *v351 = *v352;
    v355 = *(int *)(v353 + 20);
    v418 = a2;
    __dstd = (void *)v258;
    v356 = &v351[v355];
    v357 = &v352[v355];
    type metadata accessor for AirPollutantMeasurement();
    if (swift_getEnumCaseMultiPayload() == 1)
      v358 = &qword_1ED190B60;
    else
      v358 = &qword_1ED1922B8;
    v359 = __swift_instantiateConcreteTypeFromMangledName(v358);
    v360 = v357;
    v258 = (uint64_t)__dstd;
    (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v359 - 8) + 32))(v356, v360, v359);
    a2 = v418;
    swift_storeEnumTagMultiPayload();
    v351[*(int *)(v353 + 24)] = v352[*(int *)(v353 + 24)];
    __swift_storeEnumTagSinglePayload((uint64_t)v351, 0, 1, v353);
  }
  a3 = v428;
  v253[v255[15]] = v254[v255[15]];
  v361 = v255[16];
  v362 = &v253[v361];
  v363 = &v254[v361];
  *(_OWORD *)v362 = *(_OWORD *)v363;
  *((_QWORD *)v362 + 2) = *((_QWORD *)v363 + 2);
  v364 = v255[17];
  v365 = &v253[v364];
  v366 = &v254[v364];
  v426(&v253[v364], v366, v258);
  v367 = type metadata accessor for WeatherMetadata();
  v368 = v258;
  v369 = (int *)v367;
  v426(&v365[*(int *)(v367 + 20)], &v366[*(int *)(v367 + 20)], v368);
  *(_QWORD *)&v365[v369[6]] = *(_QWORD *)&v366[v369[6]];
  *(_QWORD *)&v365[v369[7]] = *(_QWORD *)&v366[v369[7]];
  *(_QWORD *)&v365[v369[8]] = *(_QWORD *)&v366[v369[8]];
  __swift_storeEnumTagSinglePayload((uint64_t)v253, 0, 1, (uint64_t)v255);
LABEL_101:
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WatchWeather()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6031930(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v19;
  int v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
  OUTLINED_FUNCTION_14_0();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  OUTLINED_FUNCTION_14_0();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_16:
    v8 = a1 + v11;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
  OUTLINED_FUNCTION_14_0();
  if (v12)
  {
    v7 = v13;
    v11 = a3[6];
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
  OUTLINED_FUNCTION_14_0();
  if (v14)
  {
    v7 = v15;
    v11 = a3[7];
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  OUTLINED_FUNCTION_14_0();
  if (v16)
  {
    v7 = v17;
    v11 = a3[8];
    goto LABEL_16;
  }
  v19 = *(_QWORD *)(a1 + a3[9]);
  if (v19 >= 0xFFFFFFFF)
    LODWORD(v19) = -1;
  v20 = v19 - 1;
  if (v20 < 0)
    v20 = -1;
  return (v20 + 1);
}

uint64_t storeEnumTagSinglePayload for WatchWeather()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1A6031A40(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
  OUTLINED_FUNCTION_13();
  if (v10)
  {
    v8 = v7;
    v9 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    OUTLINED_FUNCTION_13();
    if (v10)
    {
      v8 = v11;
      v12 = a4[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
      OUTLINED_FUNCTION_13();
      if (v13)
      {
        v8 = v14;
        v12 = a4[6];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
        OUTLINED_FUNCTION_13();
        if (v15)
        {
          v8 = v16;
          v12 = a4[7];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
          OUTLINED_FUNCTION_13();
          if (!v17)
          {
            *(_QWORD *)(a1 + a4[9]) = a2;
            OUTLINED_FUNCTION_9();
            return;
          }
          v8 = v18;
          v12 = a4[8];
        }
      }
    }
    v9 = a1 + v12;
  }
  __swift_storeEnumTagSinglePayload(v9, a2, a2, v8);
}

void sub_1A6031B2C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1A5FC5798(319, &qword_1ED192D40, (void (*)(uint64_t))type metadata accessor for CurrentWeather);
  if (v0 <= 0x3F)
  {
    sub_1A5FC06C4(319, (unint64_t *)&qword_1ED193AE8, &qword_1ED193AE0);
    if (v1 <= 0x3F)
    {
      sub_1A5FC06C4(319, (unint64_t *)&unk_1ED193AD0, (uint64_t *)&unk_1ED193AB8);
      if (v2 <= 0x3F)
      {
        sub_1A5FC06C4(319, (unint64_t *)&unk_1ED193AA8, (uint64_t *)&unk_1ED193A90);
        if (v3 <= 0x3F)
        {
          sub_1A5FC5798(319, &qword_1ED193510, (void (*)(uint64_t))type metadata accessor for AirQuality);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t storeEnumTagSinglePayload for WatchWeather.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A6031CA8 + 4 * byte_1A612BABB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A6031CDC + 4 * byte_1A612BAB6[v4]))();
}

uint64_t sub_1A6031CDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6031CE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6031CECLL);
  return result;
}

uint64_t sub_1A6031CF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6031D00);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A6031D04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6031D0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchWeather.CodingKeys()
{
  return &type metadata for WatchWeather.CodingKeys;
}

unint64_t sub_1A6031D2C()
{
  unint64_t result;

  result = qword_1EE813D60;
  if (!qword_1EE813D60)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612BC2C, &type metadata for WatchWeather.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813D60);
  }
  return result;
}

unint64_t sub_1A6031D6C()
{
  unint64_t result;

  result = qword_1EE813D68;
  if (!qword_1EE813D68)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612BB9C, &type metadata for WatchWeather.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813D68);
  }
  return result;
}

unint64_t sub_1A6031DAC()
{
  unint64_t result;

  result = qword_1EE813D70;
  if (!qword_1EE813D70)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612BBC4, &type metadata for WatchWeather.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813D70);
  }
  return result;
}

void sub_1A6031DE8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for DailyWeatherSummaryQuery.BuildParameters();
}

uint64_t sub_1A6031E28(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);

  v6 = v4 + a1[13];
  OUTLINED_FUNCTION_11_18();
  OUTLINED_FUNCTION_6_22();
  v7(v6, v3);
  v8 = v4 + a1[14];
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_6_22();
  v9(v8, v2);
  v10 = v4 + a1[15];
  OUTLINED_FUNCTION_10_19();
  OUTLINED_FUNCTION_6_22();
  return v11(v10, v1);
}

uint64_t static DailyWeatherSummaryQuery.temperature.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t (**v4)(uint64_t);

  v2 = OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_0_1(v2);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813D78);
  v4 = (uint64_t (**)(uint64_t))(a1 + *(int *)(result + 52));
  *v4 = sub_1A6031EE8;
  v4[1] = 0;
  return result;
}

uint64_t sub_1A6031EE8(uint64_t a1)
{
  return sub_1A6031F80(a1, &qword_1EE813E90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5FE6AA8);
}

uint64_t static DailyWeatherSummaryQuery.precipitation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t (**v4)(uint64_t);

  v2 = OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_0_1(v2);
  result = __swift_instantiateConcreteTypeFromMangledName(qword_1EE813D80);
  v4 = (uint64_t (**)(uint64_t))(a1 + *(int *)(result + 52));
  *v4 = sub_1A6031F5C;
  v4[1] = 0;
  return result;
}

uint64_t sub_1A6031F5C(uint64_t a1)
{
  return sub_1A6031F80(a1, &qword_1EE813E88, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5FE6734);
}

uint64_t sub_1A6031F80(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  int *v5;

  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(a2);
  return a3(a1 + v5[13], a1 + v5[14], a1 + v5[15]);
}

uint64_t sub_1A6031FE8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1A6031FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_1_17();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    OUTLINED_FUNCTION_1_25(a1, a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_12_16(*(_QWORD *)(a1 + *(int *)(a3 + 52)));
    OUTLINED_FUNCTION_9();
  }
}

uint64_t sub_1A603204C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1A6032058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_13();
  if (v8)
  {
    OUTLINED_FUNCTION_3_3(a1, a2, a2, v7);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
    OUTLINED_FUNCTION_9();
  }
}

void type metadata accessor for DailyWeatherSummaryQuery()
{
  JUMPOUT(0x1A85BB2E8);
}

uint64_t sub_1A60320BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1A6122B70();
  if (v1 <= 0x3F)
  {
    result = sub_1A6121F58();
    if (v2 <= 0x3F)
    {
      result = sub_1A61220A8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1A603216C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[13];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A6122B70();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    v13 = a3[14];
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1A6121F58();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[15];
    v18 = (char *)v7 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_1A61220A8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return v7;
}

uint64_t sub_1A603226C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  v4 = a1 + a2[13];
  v5 = sub_1A6122B70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[14];
  v7 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[15];
  v9 = sub_1A61220A8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *sub_1A6032304(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a3[13];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6122B70();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  v11 = a3[14];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1A6121F58();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = a3[15];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1A61220A8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

_QWORD *sub_1A60323DC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = a3[13];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6122B70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[14];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1A6121F58();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[15];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1A61220A8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_QWORD *sub_1A60324B0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[13];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6122B70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[14];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1A6121F58();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[15];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1A61220A8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_QWORD *sub_1A6032574(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  swift_release();
  v6 = a3[13];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6122B70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[14];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1A6121F58();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[15];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1A61220A8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t sub_1A6032640()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1A603264C(unint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_12_16(*a1);
    OUTLINED_FUNCTION_9();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_11_18();
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v6;
      v8 = a3[13];
    }
    else
    {
      v9 = OUTLINED_FUNCTION_6();
      if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
      {
        v7 = v9;
        v8 = a3[14];
      }
      else
      {
        v7 = OUTLINED_FUNCTION_10_19();
        v8 = a3[15];
      }
    }
    OUTLINED_FUNCTION_1_25((uint64_t)a1 + v8, a2, v7);
  }
}

uint64_t sub_1A60326E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1A60326EC(_QWORD *a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_9();
  }
  else
  {
    OUTLINED_FUNCTION_11_18();
    OUTLINED_FUNCTION_13();
    if (v10)
    {
      v8 = v7;
      v9 = a4[13];
    }
    else
    {
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_13();
      if (v10)
      {
        v8 = v11;
        v9 = a4[14];
      }
      else
      {
        v8 = OUTLINED_FUNCTION_10_19();
        v9 = a4[15];
      }
    }
    OUTLINED_FUNCTION_3_3((uint64_t)a1 + v9, a2, a2, v8);
  }
}

void type metadata accessor for DailyWeatherSummaryQuery.BuildParameters()
{
  JUMPOUT(0x1A85BB2E8);
}

uint64_t sub_1A6032784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_1_17();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3 - v2, v0);
  return sub_1A6123A10();
}

void sub_1A603280C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A61220A8();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_0();
  v2 = sub_1A6121F58();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0();
  v1 = sub_1A6122B70();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0();
  type metadata accessor for DailyWeatherSummaryQuery.BuildParameters();
}

void sub_1A60328F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  *(_QWORD *)(v14 - 192) = a1;
  *(_QWORD *)(v14 - 208) = *(_QWORD *)(a1 - 8);
  v15 = MEMORY[0x1E0C80A78](a1);
  v17 = (uint64_t *)((char *)&a9 - v16);
  v18 = *(_QWORD *)(v14 - 168);
  *(_QWORD *)(v14 - 176) = *(_QWORD *)(*(_QWORD *)(v14 - 176) + *(int *)(v9 + 52));
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 16))(v11, v18, v12, v15);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v14 - 216) + 16))(v13, *(_QWORD *)(v14 - 144), *(_QWORD *)(v14 - 200));
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v14 - 160) + 16))(*(_QWORD *)(v14 - 184), *(_QWORD *)(v14 - 136), *(_QWORD *)(v14 - 152));
  sub_1A6031DE8(*(_QWORD *)(v14 - 128), v17);
}

uint64_t sub_1A60329A8()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  (*(void (**)(uint64_t))(v1 - 176))(v0);
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 208) + 8))(v0, *(_QWORD *)(v1 - 192));
}

void WeatherServiceAttribution.logoDark3x.getter()
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_51();
}

void WeatherServiceAttribution.logoDark3x.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_17();
  swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_9();
}

uint64_t (*WeatherServiceAttribution.logoDark3x.modify())()
{
  return GEOLocationCoordinate2DMake;
}

void WeatherServiceAttribution.logoLight3x.getter()
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_51();
}

void WeatherServiceAttribution.logoLight3x.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_17();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_9();
}

uint64_t (*WeatherServiceAttribution.logoLight3x.modify())()
{
  return GEOLocationCoordinate2DMake;
}

void WeatherServiceAttribution.logoSquare3x.getter()
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_51();
}

void WeatherServiceAttribution.logoSquare3x.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_17();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  OUTLINED_FUNCTION_9();
}

uint64_t (*WeatherServiceAttribution.logoSquare3x.modify())()
{
  return GEOLocationCoordinate2DMake;
}

void WeatherServiceAttribution.serviceName.getter()
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_51();
}

void WeatherServiceAttribution.serviceName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_17();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  OUTLINED_FUNCTION_9();
}

uint64_t (*WeatherServiceAttribution.serviceName.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1A6032B64()
{
  unint64_t v0;

  v0 = sub_1A6123BB4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1A6032BB0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6032BEC + 4 * byte_1A612BD00[a1]))(0x6B7261446F676F6CLL, 0xEB00000000783340);
}

uint64_t sub_1A6032BEC()
{
  return 0x6867694C6F676F6CLL;
}

uint64_t sub_1A6032C0C()
{
  return 0x617571536F676F6CLL;
}

uint64_t sub_1A6032C30()
{
  return 0x4E65636976726573;
}

uint64_t sub_1A6032C50(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6032C8C + 4 * byte_1A612BD04[a1]))(0x6B7261446F676F6CLL, 0xEB00000000783340);
}

uint64_t sub_1A6032C8C()
{
  return 0x6867694C6F676F6CLL;
}

uint64_t sub_1A6032CAC()
{
  return 0x617571536F676F6CLL;
}

uint64_t sub_1A6032CD0()
{
  return 0x4E65636976726573;
}

void sub_1A6032CF0(char *a1)
{
  sub_1A5FCF78C(*a1);
}

void sub_1A6032CFC()
{
  sub_1A61057F4();
}

void sub_1A6032D04(uint64_t a1)
{
  char *v1;

  sub_1A6002694(a1, *v1);
}

void sub_1A6032D0C()
{
  sub_1A61059EC();
}

uint64_t sub_1A6032D14@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6032B64();
  *a1 = result;
  return result;
}

uint64_t sub_1A6032D40@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A6032BB0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A6032D68()
{
  unsigned __int8 *v0;

  return sub_1A6032C50(*v0);
}

uint64_t sub_1A6032D70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6032BAC();
  *a1 = result;
  return result;
}

uint64_t sub_1A6032D94()
{
  sub_1A6032F54();
  return sub_1A6123DE8();
}

uint64_t sub_1A6032DBC()
{
  sub_1A6032F54();
  return sub_1A6123DF4();
}

void WeatherServiceAttribution.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[8];
  char v12;
  char v13;
  char v14;
  char v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813E98);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11[5] = v1[3];
  v11[6] = v7;
  v8 = v1[4];
  v11[3] = v1[5];
  v11[4] = v8;
  v9 = v1[6];
  v11[1] = v1[7];
  v11[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6032F54();
  sub_1A6123DD0();
  v15 = 0;
  v10 = v11[7];
  sub_1A6123C8C();
  if (!v10)
  {
    v14 = 1;
    OUTLINED_FUNCTION_2_25();
    v13 = 2;
    OUTLINED_FUNCTION_2_25();
    v12 = 3;
    OUTLINED_FUNCTION_2_25();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A6032F54()
{
  unint64_t result;

  result = qword_1EE813EA0;
  if (!qword_1EE813EA0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612BE98, &type metadata for WeatherServiceAttribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813EA0);
  }
  return result;
}

void WeatherServiceAttribution.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813EA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6032F54();
  sub_1A6123DC4();
  if (v2)
  {
    OUTLINED_FUNCTION_7_1();
  }
  else
  {
    v31 = 0;
    v9 = OUTLINED_FUNCTION_3_20();
    v11 = v10;
    v26 = v9;
    v30 = 1;
    OUTLINED_FUNCTION_10_20();
    v12 = OUTLINED_FUNCTION_3_20();
    v27 = v13;
    v25 = v12;
    v29 = 2;
    OUTLINED_FUNCTION_10_20();
    v23 = sub_1A6123C08();
    v24 = v14;
    v28 = 3;
    OUTLINED_FUNCTION_10_20();
    v15 = OUTLINED_FUNCTION_3_20();
    v17 = v16;
    v18 = *(void (**)(char *, uint64_t))(v6 + 8);
    v19 = v15;
    v18(v8, v5);
    swift_bridgeObjectRetain();
    v20 = v27;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_77_0();
    swift_bridgeObjectRelease();
    *a2 = v26;
    a2[1] = v11;
    v21 = v24;
    a2[2] = v25;
    a2[3] = v20;
    a2[4] = v23;
    a2[5] = v21;
    a2[6] = v19;
    a2[7] = v17;
    OUTLINED_FUNCTION_7_1();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_20();
}

void sub_1A60331BC(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  WeatherServiceAttribution.init(from:)(a1, a2);
}

void sub_1A60331D0(_QWORD *a1)
{
  WeatherServiceAttribution.encode(to:)(a1);
}

uint64_t destroy for WeatherServiceAttribution()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for WeatherServiceAttribution(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for WeatherServiceAttribution(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for WeatherServiceAttribution(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WeatherServiceAttribution()
{
  return &type metadata for WeatherServiceAttribution;
}

uint64_t storeEnumTagSinglePayload for WeatherServiceAttribution.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A60333EC + 4 * byte_1A612BD0D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A6033420 + 4 * byte_1A612BD08[v4]))();
}

uint64_t sub_1A6033420(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6033428(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6033430);
  return result;
}

uint64_t sub_1A603343C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6033444);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A6033448(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6033450(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherServiceAttribution.CodingKeys()
{
  return &type metadata for WeatherServiceAttribution.CodingKeys;
}

unint64_t sub_1A6033470()
{
  unint64_t result;

  result = qword_1EE813EB0;
  if (!qword_1EE813EB0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612BE70, &type metadata for WeatherServiceAttribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813EB0);
  }
  return result;
}

unint64_t sub_1A60334B0()
{
  unint64_t result;

  result = qword_1EE813EB8;
  if (!qword_1EE813EB8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612BDA8, &type metadata for WeatherServiceAttribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813EB8);
  }
  return result;
}

unint64_t sub_1A60334F0()
{
  unint64_t result;

  result = qword_1EE813EC0;
  if (!qword_1EE813EC0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612BDD0, &type metadata for WeatherServiceAttribution.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813EC0);
  }
  return result;
}

uint64_t sub_1A603352C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __int16 *a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v29;
  __int16 v30;
  uint64_t v32;

  v29 = *((_BYTE *)a8 + 2);
  v30 = *a8;
  v32 = *a10;
  v14 = v10 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_minuteForecast;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  __swift_storeEnumTagSinglePayload(v14, 1, 1, v15);
  v16 = v10 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_airQuality;
  v17 = type metadata accessor for AirQuality();
  __swift_storeEnumTagSinglePayload(v16, 1, 1, v17);
  v18 = v10 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherChanges;
  v19 = type metadata accessor for WeatherChanges();
  __swift_storeEnumTagSinglePayload(v18, 1, 1, v19);
  v20 = OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherAlerts;
  *(_QWORD *)(v10
            + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherAlerts) = 0;
  v21 = v10
      + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_historicalComparisons;
  v22 = type metadata accessor for HistoricalComparisons();
  __swift_storeEnumTagSinglePayload(v21, 1, 1, v22);
  v23 = OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_historicalFacts;
  *(_QWORD *)(v10
            + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_historicalFacts) = 0;
  sub_1A6027E1C(a1, v10 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_currentWeather, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  swift_beginAccess();
  sub_1A5FA2CA8(a2, v14, &qword_1ED192870);
  swift_endAccess();
  sub_1A5FA3C64(a3, v10 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_hourlyForecast, (uint64_t *)&unk_1ED193AB8);
  sub_1A5FA3C64(a4, v10 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_dailyForecast, (uint64_t *)&unk_1ED193A90);
  swift_beginAccess();
  sub_1A5FA2CA8(a5, v16, &qword_1ED193508);
  swift_endAccess();
  swift_beginAccess();
  sub_1A5FA2CA8(a6, v18, &qword_1ED193FF0);
  swift_endAccess();
  *(_QWORD *)(v10 + v20) = a7;
  swift_bridgeObjectRelease();
  v24 = v10 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_availability;
  *(_WORD *)v24 = v30;
  *(_BYTE *)(v24 + 2) = v29;
  swift_beginAccess();
  sub_1A5FA2CA8(a9, v21, &qword_1ED194020);
  swift_endAccess();
  *(_QWORD *)(v10 + v23) = v32;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A60337B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v14;

  v2 = a1 == 0x57746E6572727563 && a2 == 0xEE00726568746165;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F466574756E696DLL && a2 == 0xEE00747361636572;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6F46796C72756F68 && a2 == 0xEE00747361636572;
      if (v7 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x726F46796C696164 && a2 == 0xED00007473616365;
        if (v8 || (sub_1A6123CF8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x696C617551726961 && a2 == 0xEA00000000007974;
          if (v9 || (sub_1A6123CF8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x4372656874616577 && a2 == 0xEE007365676E6168;
            if (v10 || (sub_1A6123CF8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x4172656874616577 && a2 == 0xED0000737472656CLL;
              if (v11 || (sub_1A6123CF8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x6962616C69617661 && a2 == 0xEC0000007974696CLL;
                if (v12 || (sub_1A6123CF8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0xD000000000000015 && a2 == 0x80000001A614F040 || (sub_1A6123CF8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else if (a1 == 0x6369726F74736968 && a2 == 0xEF73746361466C61)
                {
                  swift_bridgeObjectRelease();
                  return 9;
                }
                else
                {
                  v14 = sub_1A6123CF8();
                  swift_bridgeObjectRelease();
                  if ((v14 & 1) != 0)
                    return 9;
                  else
                    return 10;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A6033CB4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6033CF4 + 4 * byte_1A612BEF0[a1]))(0x57746E6572727563, 0xEE00726568746165);
}

uint64_t sub_1A6033CF4()
{
  return 0x6F466574756E696DLL;
}

uint64_t sub_1A6033D28()
{
  return 0x726F46796C696164;
}

uint64_t sub_1A6033D4C()
{
  return 0x696C617551726961;
}

uint64_t sub_1A6033D68()
{
  return 0x4372656874616577;
}

uint64_t sub_1A6033D8C()
{
  return 0x4172656874616577;
}

uint64_t sub_1A6033DB0()
{
  return 0x6962616C69617661;
}

unint64_t sub_1A6033DD0()
{
  return 0xD000000000000015;
}

uint64_t sub_1A6033DEC()
{
  return 0x6369726F74736968;
}

uint64_t sub_1A6033E10()
{
  unsigned __int8 *v0;

  return sub_1A6033CB4(*v0);
}

uint64_t sub_1A6033E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A60337B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6033E3C()
{
  sub_1A6036F34();
  return sub_1A6123DE8();
}

uint64_t sub_1A6033E64()
{
  sub_1A6036F34();
  return sub_1A6123DF4();
}

uint64_t sub_1A6033E8C()
{
  uint64_t v0;

  sub_1A5FA1740(v0 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_currentWeather, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  sub_1A5FAFD58(v0 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_minuteForecast, &qword_1ED192870);
  sub_1A5FAFD58(v0 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_hourlyForecast, (uint64_t *)&unk_1ED193AB8);
  sub_1A5FAFD58(v0 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_dailyForecast, (uint64_t *)&unk_1ED193A90);
  sub_1A5FAFD58(v0 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_airQuality, &qword_1ED193508);
  sub_1A5FAFD58(v0 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherChanges, &qword_1ED193FF0);
  swift_bridgeObjectRelease();
  sub_1A5FAFD58(v0+ OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_historicalComparisons, &qword_1ED194020);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A6033F68()
{
  sub_1A6033E8C();
  return swift_deallocClassInstance();
}

uint64_t sub_1A6033F88(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
  MEMORY[0x1E0C80A78](v2);
  v37 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
  MEMORY[0x1E0C80A78](v4);
  v38 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  MEMORY[0x1E0C80A78](v6);
  v39 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  MEMORY[0x1E0C80A78](v41);
  v40 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  MEMORY[0x1E0C80A78](v42);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  MEMORY[0x1E0C80A78](v11);
  v43 = (uint64_t)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for CurrentWeather();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813EE8);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6036F34();
  v20 = v44;
  sub_1A6123DD0();
  v21 = v20 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_currentWeather;
  swift_beginAccess();
  sub_1A6035280(v21, (uint64_t)v15);
  v52 = 0;
  sub_1A5FAF4C0(&qword_1ED1916E8, (void (*)(uint64_t))type metadata accessor for CurrentWeather);
  v22 = v19;
  v23 = v45;
  sub_1A6123CC8();
  sub_1A5FA1740((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  if (v23)
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v24 = v20 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_minuteForecast;
  swift_beginAccess();
  sub_1A5FA25BC(v24, v43, &qword_1ED192870);
  v51 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  sub_1A5FA3DEC(&qword_1ED1914A8, &qword_1ED193AE0);
  sub_1A6123C80();
  sub_1A5FAFD58(v43, &qword_1ED192870);
  v25 = v20 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_hourlyForecast;
  swift_beginAccess();
  sub_1A5FA25BC(v25, (uint64_t)v10, (uint64_t *)&unk_1ED193AB8);
  v50 = 2;
  sub_1A5FA3DEC(&qword_1ED1914A0, (uint64_t *)&unk_1ED193AB8);
  sub_1A6123CC8();
  sub_1A5FAFD58((uint64_t)v10, (uint64_t *)&unk_1ED193AB8);
  v26 = v16;
  v27 = v20 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_dailyForecast;
  swift_beginAccess();
  v28 = v40;
  sub_1A5FA25BC(v27, v40, (uint64_t *)&unk_1ED193A90);
  v49 = 3;
  sub_1A5FA3DEC(&qword_1ED191498, (uint64_t *)&unk_1ED193A90);
  sub_1A6123CC8();
  sub_1A5FAFD58(v28, (uint64_t *)&unk_1ED193A90);
  v30 = v20 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_airQuality;
  swift_beginAccess();
  v31 = v39;
  sub_1A5FA25BC(v30, v39, &qword_1ED193508);
  v48 = 4;
  type metadata accessor for AirQuality();
  sub_1A5FAF4C0(&qword_1ED1910E8, (void (*)(uint64_t))type metadata accessor for AirQuality);
  sub_1A6123C80();
  sub_1A5FAFD58(v31, &qword_1ED193508);
  v32 = v20 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherChanges;
  swift_beginAccess();
  v33 = v38;
  sub_1A5FA25BC(v32, v38, &qword_1ED193FF0);
  LOBYTE(v47) = 5;
  type metadata accessor for WeatherChanges();
  sub_1A5FAF4C0(&qword_1EE813EF8, (void (*)(uint64_t))type metadata accessor for WeatherChanges);
  sub_1A6123C80();
  sub_1A5FAFD58(v33, &qword_1ED193FF0);
  v47 = *(_QWORD *)(v20
                  + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherAlerts);
  LOBYTE(v53) = 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192648);
  sub_1A6036FE8(&qword_1ED1914F0, &qword_1ED1910B0);
  sub_1A6123C80();
  v34 = *(_BYTE *)(v20
                 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_availability
                 + 2);
  LOWORD(v47) = *(_WORD *)(v20
                         + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_availability);
  BYTE2(v47) = v34;
  LOBYTE(v53) = 7;
  sub_1A6036F70();
  sub_1A6123CC8();
  v35 = v20
      + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_historicalComparisons;
  swift_beginAccess();
  v36 = v37;
  sub_1A5FA25BC(v35, v37, &qword_1ED194020);
  LOBYTE(v53) = 8;
  type metadata accessor for HistoricalComparisons();
  sub_1A5FAF4C0(&qword_1EE813F00, (void (*)(uint64_t))type metadata accessor for HistoricalComparisons);
  sub_1A6123C80();
  sub_1A5FAFD58(v36, &qword_1ED194020);
  v53 = *(_QWORD *)(v20
                  + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_historicalFacts);
  v46 = 9;
  sub_1A6036FAC();
  sub_1A6123C80();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v26);
}

_QWORD *sub_1A60347B8(_QWORD *a1)
{
  swift_allocObject();
  return sub_1A6034800(a1);
}

_QWORD *sub_1A6034800(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char v71;

  v60 = *v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
  MEMORY[0x1E0C80A78](v3);
  v47 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
  MEMORY[0x1E0C80A78](v5);
  v48 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  MEMORY[0x1E0C80A78](v7);
  v49 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  MEMORY[0x1E0C80A78](v50);
  v56 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  MEMORY[0x1E0C80A78](v51);
  v54 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  MEMORY[0x1E0C80A78](v11);
  v52 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for CurrentWeather();
  MEMORY[0x1E0C80A78](v53);
  v55 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813F10);
  v15 = *(_QWORD *)(v14 - 8);
  v57 = v14;
  v58 = v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)v1
      + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_minuteForecast;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  v66 = v18;
  __swift_storeEnumTagSinglePayload(v18, 1, 1, v19);
  v20 = (uint64_t)v1
      + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_airQuality;
  v21 = type metadata accessor for AirQuality();
  v64 = v20;
  __swift_storeEnumTagSinglePayload(v20, 1, 1, v21);
  v22 = (uint64_t)v1
      + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherChanges;
  v23 = type metadata accessor for WeatherChanges();
  v63 = v22;
  __swift_storeEnumTagSinglePayload(v22, 1, 1, v23);
  v68 = OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherAlerts;
  *(_QWORD *)((char *)v1
            + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherAlerts) = 0;
  v24 = (uint64_t)v1
      + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_historicalComparisons;
  v25 = type metadata accessor for HistoricalComparisons();
  v62 = v24;
  __swift_storeEnumTagSinglePayload(v24, 1, 1, v25);
  v61 = OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_historicalFacts;
  v69 = v1;
  *(_QWORD *)((char *)v1
            + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_historicalFacts) = 0;
  v26 = a1[3];
  v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1A6036F34();
  v59 = v17;
  v27 = v67;
  sub_1A6123DC4();
  if (v27)
  {
    v29 = v63;
    v28 = v64;
    v34 = v69;
    sub_1A5FAFD58(v66, &qword_1ED192870);
    sub_1A5FAFD58(v28, &qword_1ED193508);
    sub_1A5FAFD58(v29, &qword_1ED193FF0);
    swift_bridgeObjectRelease();
    sub_1A5FAFD58(v62, &qword_1ED194020);
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v30 = (uint64_t)v52;
    v31 = (uint64_t)v54;
    v67 = v23;
    v32 = (uint64_t)v56;
    v46 = v25;
    LOBYTE(v70) = 0;
    sub_1A5FAF4C0(&qword_1EE813D28, (void (*)(uint64_t))type metadata accessor for CurrentWeather);
    v33 = (uint64_t)v55;
    sub_1A6123C44();
    v55 = (char *)v69
        + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_currentWeather;
    sub_1A6027E1C(v33, (uint64_t)v69+ OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_currentWeather, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
    LOBYTE(v70) = 1;
    sub_1A5FA3DEC(&qword_1EE813D30, &qword_1ED193AE0);
    sub_1A6123BFC();
    v36 = v66;
    swift_beginAccess();
    sub_1A5FA2CA8(v30, v36, &qword_1ED192870);
    swift_endAccess();
    LOBYTE(v70) = 2;
    sub_1A5FA3DEC(&qword_1EE813D38, (uint64_t *)&unk_1ED193AB8);
    sub_1A6123C44();
    v38 = v63;
    v37 = v64;
    sub_1A5FA3C64(v31, (uint64_t)v69+ OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_hourlyForecast, (uint64_t *)&unk_1ED193AB8);
    LOBYTE(v70) = 3;
    sub_1A5FA3DEC(&qword_1EE813D40, (uint64_t *)&unk_1ED193A90);
    sub_1A6123C44();
    sub_1A5FA3C64(v32, (uint64_t)v69+ OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_dailyForecast, (uint64_t *)&unk_1ED193A90);
    LOBYTE(v70) = 4;
    sub_1A5FAF4C0(&qword_1EE813D48, (void (*)(uint64_t))type metadata accessor for AirQuality);
    v39 = (uint64_t)v49;
    sub_1A6123BFC();
    swift_beginAccess();
    sub_1A5FA2CA8(v39, v37, &qword_1ED193508);
    swift_endAccess();
    LOBYTE(v70) = 5;
    sub_1A5FAF4C0(&qword_1EE813F18, (void (*)(uint64_t))type metadata accessor for WeatherChanges);
    v40 = (uint64_t)v48;
    sub_1A6123BFC();
    swift_beginAccess();
    sub_1A5FA2CA8(v40, v38, &qword_1ED193FF0);
    swift_endAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192648);
    v71 = 6;
    sub_1A6036FE8(&qword_1EE813D50, &qword_1EE813D58);
    sub_1A6123BFC();
    v41 = v69;
    *(_QWORD *)((char *)v69 + v68) = v70;
    swift_bridgeObjectRelease();
    v71 = 7;
    sub_1A6037068();
    sub_1A6123C44();
    v42 = BYTE2(v70);
    v43 = (uint64_t)v41
        + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_availability;
    *(_WORD *)v43 = v70;
    *(_BYTE *)(v43 + 2) = v42;
    LOBYTE(v70) = 8;
    sub_1A5FAF4C0(&qword_1EE813F28, (void (*)(uint64_t))type metadata accessor for HistoricalComparisons);
    v44 = (uint64_t)v47;
    sub_1A6123BFC();
    v45 = v62;
    swift_beginAccess();
    sub_1A5FA2CA8(v44, v45, &qword_1ED194020);
    swift_endAccess();
    v71 = 9;
    sub_1A60370A4();
    sub_1A6123BFC();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v57);
    v34 = v69;
    *(_QWORD *)((char *)v69 + v61) = v70;
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  return v34;
}

_QWORD *sub_1A6035238@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1A60347B8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A6035260(_QWORD *a1)
{
  return sub_1A6033F88(a1);
}

uint64_t sub_1A6035280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1A60352C4()
{
  WeatherDataModel.currentWeather.getter();
}

void sub_1A60352F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = type metadata accessor for CurrentWeather();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6035280(a1, (uint64_t)v4);
  WeatherDataModel.currentWeather.setter((uint64_t)v4);
}

void WeatherDataModel.currentWeather.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_currentWeather;
  OUTLINED_FUNCTION_2_20();
  sub_1A60353B8(a1, v3);
  swift_endAccess();
  OUTLINED_FUNCTION_25_2();
}

uint64_t sub_1A60353B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void WeatherDataModel.currentWeather.modify()
{
  uint64_t v0;
  void *v1;
  size_t v2;

  v1 = OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_16_17((uint64_t)v1);
  v2 = *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_30_0() - 8) + 64);
  *(_QWORD *)(v0 + 80) = malloc(v2);
  *(_QWORD *)(v0 + 88) = malloc(v2);
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_9();
}

void sub_1A6035470(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 80);
  v4 = *(void **)(*(_QWORD *)a1 + 88);
  if ((a2 & 1) != 0)
  {
    v5 = OUTLINED_FUNCTION_53_4();
    sub_1A6035280(v5, v6);
    OUTLINED_FUNCTION_2_20();
    v7 = OUTLINED_FUNCTION_61_1();
    sub_1A60353B8(v7, v8);
    v9 = swift_endAccess();
    OUTLINED_FUNCTION_64_2(v9, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  }
  else
  {
    v10 = **(_QWORD **)(*(_QWORD *)a1 + 72)
        + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_currentWeather;
    OUTLINED_FUNCTION_2_20();
    sub_1A60353B8((uint64_t)v4, v10);
    swift_endAccess();
  }
  free(v4);
  free(v3);
  free(v2);
}

void sub_1A6035540(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = *v1 + *a1;
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_54_4(v2);
  OUTLINED_FUNCTION_43();
}

void sub_1A6035584()
{
  WeatherDataModel.minuteForecast.getter();
}

void WeatherDataModel.minuteForecast.setter(uint64_t a1)
{
  sub_1A60355C8(a1, (uint64_t)&OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_minuteForecast, &qword_1ED192870);
}

void sub_1A60355C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_2_20();
  v4 = OUTLINED_FUNCTION_53_4();
  sub_1A5FA2CA8(v4, v5, a3);
  swift_endAccess();
  OUTLINED_FUNCTION_43();
}

void WeatherDataModel.minuteForecast.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_16_17((uint64_t)v1);
  v2 = OUTLINED_FUNCTION_21_0();
  *(_QWORD *)(v0 + 80) = OUTLINED_FUNCTION_9_20(v2);
  v3 = OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_18_14((uint64_t)v3);
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_9();
}

void sub_1A6035680(uint64_t a1, char a2)
{
  sub_1A6035694(a1, a2, &OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_minuteForecast, &qword_1ED192870);
}

void sub_1A6035694(uint64_t a1, char a2, _QWORD *a3, uint64_t *a4)
{
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(void **)a1;
  v6 = *(void **)(*(_QWORD *)a1 + 80);
  v7 = *(void **)(*(_QWORD *)a1 + 88);
  if ((a2 & 1) != 0)
  {
    v8 = OUTLINED_FUNCTION_53_4();
    sub_1A5FA25BC(v8, v9, a4);
    OUTLINED_FUNCTION_2_20();
    v10 = OUTLINED_FUNCTION_61_1();
    sub_1A5FA2CA8(v10, v11, a4);
    swift_endAccess();
    OUTLINED_FUNCTION_20_1((uint64_t)v7);
  }
  else
  {
    v12 = **(_QWORD **)(*(_QWORD *)a1 + 72) + *a3;
    OUTLINED_FUNCTION_2_20();
    sub_1A5FA2CA8((uint64_t)v7, v12, a4);
    swift_endAccess();
  }
  free(v7);
  free(v6);
  free(v5);
}

void sub_1A6035774()
{
  WeatherDataModel.hourlyForecast.getter();
}

void WeatherDataModel.hourlyForecast.setter(uint64_t a1)
{
  sub_1A60355C8(a1, (uint64_t)&OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_hourlyForecast, (uint64_t *)&unk_1ED193AB8);
}

void WeatherDataModel.hourlyForecast.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_16_17((uint64_t)v1);
  v2 = OUTLINED_FUNCTION_21_0();
  *(_QWORD *)(v0 + 80) = OUTLINED_FUNCTION_9_20(v2);
  v3 = OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_18_14((uint64_t)v3);
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_9();
}

void sub_1A603581C(uint64_t a1, char a2)
{
  sub_1A6035694(a1, a2, &OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_hourlyForecast, (uint64_t *)&unk_1ED193AB8);
}

void sub_1A6035830()
{
  WeatherDataModel.dailyForecast.getter();
}

void WeatherDataModel.dailyForecast.setter(uint64_t a1)
{
  sub_1A60355C8(a1, (uint64_t)&OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_dailyForecast, (uint64_t *)&unk_1ED193A90);
}

void WeatherDataModel.dailyForecast.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_16_17((uint64_t)v1);
  v2 = OUTLINED_FUNCTION_21_0();
  *(_QWORD *)(v0 + 80) = OUTLINED_FUNCTION_9_20(v2);
  v3 = OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_18_14((uint64_t)v3);
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_9();
}

void sub_1A60358D8(uint64_t a1, char a2)
{
  sub_1A6035694(a1, a2, &OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_dailyForecast, (uint64_t *)&unk_1ED193A90);
}

void sub_1A60358EC()
{
  WeatherDataModel.airQuality.getter();
}

void WeatherDataModel.airQuality.setter(uint64_t a1)
{
  sub_1A60355C8(a1, (uint64_t)&OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_airQuality, &qword_1ED193508);
}

void WeatherDataModel.airQuality.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_16_17((uint64_t)v1);
  v2 = OUTLINED_FUNCTION_21_0();
  *(_QWORD *)(v0 + 80) = OUTLINED_FUNCTION_9_20(v2);
  v3 = OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_18_14((uint64_t)v3);
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_9();
}

void sub_1A6035994(uint64_t a1, char a2)
{
  sub_1A6035694(a1, a2, &OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_airQuality, &qword_1ED193508);
}

void WeatherDataModel.weatherChanges.getter()
{
  sub_1A6035540(&OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherChanges);
}

void sub_1A60359BC()
{
  WeatherDataModel.weatherChanges.getter();
}

uint64_t sub_1A60359EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(a5);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_54_0();
  sub_1A5FA25BC(a1, v6, a5);
  return a6(v6);
}

void WeatherDataModel.weatherChanges.setter(uint64_t a1)
{
  sub_1A60355C8(a1, (uint64_t)&OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherChanges, &qword_1ED193FF0);
}

void WeatherDataModel.weatherChanges.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_16_17((uint64_t)v1);
  v2 = OUTLINED_FUNCTION_21_0();
  *(_QWORD *)(v0 + 80) = OUTLINED_FUNCTION_9_20(v2);
  v3 = OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_18_14((uint64_t)v3);
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_9();
}

void sub_1A6035AD8(uint64_t a1, char a2)
{
  sub_1A6035694(a1, a2, &OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherChanges, &qword_1ED193FF0);
}

uint64_t sub_1A6035AEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = WeatherDataModel.weatherAlerts.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1A6035B24()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return WeatherDataModel.weatherAlerts.setter(v0);
}

uint64_t WeatherDataModel.weatherAlerts.setter(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)(*v1
            + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherAlerts) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*WeatherDataModel.weatherAlerts.modify(_QWORD *a1))(uint64_t a1)
{
  _QWORD *v1;

  a1[1] = v1;
  *a1 = *(_QWORD *)(*v1
                  + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherAlerts);
  swift_bridgeObjectRetain();
  return sub_1A6035BB0;
}

uint64_t sub_1A6035BB0(uint64_t a1)
{
  *(_QWORD *)(**(_QWORD **)(a1 + 8)
            + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherAlerts) = *(_QWORD *)a1;
  return swift_bridgeObjectRelease();
}

void sub_1A6035BCC(uint64_t a1@<X8>)
{
  char v2;
  __int16 v3;
  char v4;

  WeatherDataModel.availability.getter((uint64_t)&v3);
  v2 = v4;
  *(_WORD *)a1 = v3;
  *(_BYTE *)(a1 + 2) = v2;
}

uint64_t sub_1A6035C14(__int16 *a1)
{
  char v1;
  __int16 v3;
  char v4;

  v1 = *((_BYTE *)a1 + 2);
  v3 = *a1;
  v4 = v1;
  return WeatherDataModel.availability.setter((uint64_t)&v3);
}

uint64_t WeatherDataModel.availability.setter(uint64_t result)
{
  _QWORD *v1;
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(result + 2);
  v3 = *v1 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_availability;
  *(_WORD *)v3 = *(_WORD *)result;
  *(_BYTE *)(v3 + 2) = v2;
  return result;
}

uint64_t (*WeatherDataModel.availability.modify(uint64_t a1))(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  __int16 v3;

  *(_QWORD *)a1 = v1;
  v2 = *v1 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_availability;
  v3 = *(_WORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 2);
  *(_WORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 10) = v2;
  return sub_1A6035CA8;
}

uint64_t sub_1A6035CA8(uint64_t result)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(result + 10);
  v2 = **(_QWORD **)result
     + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_availability;
  *(_WORD *)v2 = *(_WORD *)(result + 8);
  *(_BYTE *)(v2 + 2) = v1;
  return result;
}

void WeatherDataModel.historicalComparisons.getter()
{
  sub_1A6035540(&OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_historicalComparisons);
}

void sub_1A6035CE4()
{
  WeatherDataModel.historicalComparisons.getter();
}

void sub_1A6035D14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5FA25BC(a1, (uint64_t)v4, &qword_1ED194020);
  sub_1A60355C8((uint64_t)v4, (uint64_t)&OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_historicalComparisons, &qword_1ED194020);
}

uint64_t WeatherDataModel.historicalFacts.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_QWORD *)(*v1
                  + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_historicalFacts);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A6035DB8@<X0>(_QWORD *a1@<X8>)
{
  return WeatherDataModel.historicalFacts.getter(a1);
}

uint64_t sub_1A6035DE8(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_bridgeObjectRetain();
  return sub_1A6035E20(&v2);
}

uint64_t sub_1A6035E20(_QWORD *a1)
{
  _QWORD *v1;

  *(_QWORD *)(*v1
            + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_historicalFacts) = *a1;
  return swift_bridgeObjectRelease();
}

void WeatherDataModel.init(currentWeather:minuteForecast:hourlyForecast:dailyForecast:airQuality:weatherChanges:weatherAlerts:availability:historicalComparisons:historicalFacts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t *a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int16 v60;
  char v61;

  OUTLINED_FUNCTION_6_2();
  v28 = v27;
  v54 = v29;
  v55 = v30;
  v52 = v31;
  v53 = v32;
  v50 = v33;
  v56 = v35;
  v57 = v34;
  v58 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_11_0();
  v51 = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_11_0();
  v49 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_70();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_22_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_72();
  v46 = *(_WORD *)v28;
  LOBYTE(v28) = *(_BYTE *)(v28 + 2);
  v47 = *a22;
  sub_1A6035280(v58, v26);
  sub_1A5FA25BC(v57, v25, &qword_1ED192870);
  sub_1A5FA25BC(v56, v23, (uint64_t *)&unk_1ED193AB8);
  sub_1A5FA25BC(v52, v22, (uint64_t *)&unk_1ED193A90);
  sub_1A5FA25BC(v50, v24, &qword_1ED193508);
  sub_1A5FA25BC(v53, v49, &qword_1ED193FF0);
  v60 = v46;
  v61 = v28;
  sub_1A5FA25BC(a21, v51, &qword_1ED194020);
  v59 = v47;
  type metadata accessor for WeatherDataModel.Storage();
  OUTLINED_FUNCTION_54();
  v48 = OUTLINED_FUNCTION_59_4(v26, v25, v23, v22, v24, v49, v54, &v60, v51, &v59);
  sub_1A5FAFD58(a21, &qword_1ED194020);
  sub_1A5FAFD58(v53, &qword_1ED193FF0);
  sub_1A5FAFD58(v50, &qword_1ED193508);
  sub_1A5FAFD58(v52, (uint64_t *)&unk_1ED193A90);
  sub_1A5FAFD58(v56, (uint64_t *)&unk_1ED193AB8);
  sub_1A5FAFD58(v57, &qword_1ED192870);
  sub_1A5FA1740(v58, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  *v55 = v48;
  OUTLINED_FUNCTION_0_0();
}

uint64_t type metadata accessor for WeatherDataModel.Storage()
{
  uint64_t result;

  result = qword_1ED191B40;
  if (!qword_1ED191B40)
    return swift_getSingletonMetadata();
  return result;
}

void WeatherDataModel.init(currentWeather:minuteForecast:hourlyForecast:dailyForecast:airQuality:weatherChanges:weatherAlerts:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int16 *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;

  OUTLINED_FUNCTION_6_2();
  v32 = v5;
  v33 = v6;
  v30 = v7;
  v31 = v8;
  v27 = v9;
  v29 = v10;
  v34 = v12;
  v35 = v11;
  v13 = (uint64_t)v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_11_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_22_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_24();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_12();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_6_9();
  OUTLINED_FUNCTION_65_3(v13);
  sub_1A5FA25BC(v35, v3, &qword_1ED192870);
  sub_1A5FA25BC(v29, v2, (uint64_t *)&unk_1ED193AB8);
  OUTLINED_FUNCTION_54_4(v30);
  sub_1A5FA25BC(v31, v4, &qword_1ED193508);
  sub_1A5FA25BC(v32, v0, &qword_1ED193FF0);
  v21 = OUTLINED_FUNCTION_29_12();
  OUTLINED_FUNCTION_38_9(v21, v22, v23, v21);
  OUTLINED_FUNCTION_54();
  v24 = OUTLINED_FUNCTION_46_4();
  v26 = OUTLINED_FUNCTION_59_4(v24, v3, v2, v1, v4, v0, v33, v25, v4, v27);
  sub_1A5FAFD58(v32, &qword_1ED193FF0);
  sub_1A5FAFD58(v31, &qword_1ED193508);
  sub_1A5FAFD58(v30, (uint64_t *)&unk_1ED193A90);
  sub_1A5FAFD58(v29, (uint64_t *)&unk_1ED193AB8);
  sub_1A5FAFD58(v35, &qword_1ED192870);
  sub_1A5FA1740(v28, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  *v34 = v26;
  OUTLINED_FUNCTION_0_0();
}

void WeatherDataModel.init(currentWeather:hourlyForecast:dailyForecast:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int16 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;

  OUTLINED_FUNCTION_6_2();
  v35 = v4;
  v36 = v5;
  v7 = v6;
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_22_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_71_1();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_70();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_6_9();
  OUTLINED_FUNCTION_65_3(v9);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  OUTLINED_FUNCTION_21(v2, v20, v21, v19);
  OUTLINED_FUNCTION_5_22(v7, v0);
  v22 = v35;
  sub_1A5FA25BC(v35, (uint64_t)v15, (uint64_t *)&unk_1ED193A90);
  v23 = OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_21(v3, v24, v25, v23);
  v26 = OUTLINED_FUNCTION_57_4();
  OUTLINED_FUNCTION_21(v1, v27, v28, v26);
  v29 = OUTLINED_FUNCTION_29_12();
  OUTLINED_FUNCTION_38_9(v29, v30, v31, v29);
  OUTLINED_FUNCTION_54();
  v32 = OUTLINED_FUNCTION_46_4();
  v34 = OUTLINED_FUNCTION_59_4(v32, v2, v0, (uint64_t)v15, v3, v1, 0, v33, v35, v36);
  sub_1A5FAFD58(v22, (uint64_t *)&unk_1ED193A90);
  sub_1A5FAFD58(v7, (uint64_t *)&unk_1ED193AB8);
  sub_1A5FA1740(v9, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  *v36 = v34;
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A6036538()
{
  sub_1A6036680();
  return sub_1A6123DE8();
}

uint64_t sub_1A6036560()
{
  sub_1A6036680();
  return sub_1A6123DF4();
}

void WeatherDataModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191558);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_7();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6036680();
  sub_1A6123DD0();
  type metadata accessor for WeatherDataModel.Storage();
  sub_1A5FAF4C0(&qword_1EE813EC8, (void (*)(uint64_t))type metadata accessor for WeatherDataModel.Storage);
  sub_1A6123CC8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A6036680()
{
  unint64_t result;

  result = qword_1ED1910B8;
  if (!qword_1ED1910B8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C0F4, &type metadata for WeatherDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1910B8);
  }
  return result;
}

void WeatherDataModel.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813ED0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_7();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6036680();
  sub_1A6123DC4();
  if (!v2)
  {
    type metadata accessor for WeatherDataModel.Storage();
    sub_1A5FAF4C0(&qword_1EE813ED8, (void (*)(uint64_t))type metadata accessor for WeatherDataModel.Storage);
    sub_1A6123C44();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
    *a2 = v8;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_20();
}

void sub_1A60367D4(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  WeatherDataModel.init(from:)(a1, a2);
}

void sub_1A60367E8(_QWORD *a1)
{
  WeatherDataModel.encode(to:)(a1);
}

void WeatherDataModel.isExpired.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_6_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_0();
  v21 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_12();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_71_1();
  v8 = sub_1A6121F58();
  v9 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_6_9();
  v11 = *v0;
  v12 = *v0 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_currentWeather;
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_65_3(v12);
  OUTLINED_FUNCTION_41_5();
  type metadata accessor for WeatherMetadata();
  sub_1A5FAF4C0(&qword_1ED191E98, v9);
  OUTLINED_FUNCTION_53_4();
  OUTLINED_FUNCTION_40_6();
  OUTLINED_FUNCTION_63_3();
  sub_1A5FA1740(v3, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  v13 = v11 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_airQuality;
  OUTLINED_FUNCTION_0_4();
  sub_1A5FA25BC(v13, v2, &qword_1ED193508);
  v14 = OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_26_2(v2, 1, v14);
  if (v15)
  {
    sub_1A5FAFD58(v2, &qword_1ED193508);
  }
  else
  {
    OUTLINED_FUNCTION_41_5();
    OUTLINED_FUNCTION_40_6();
    OUTLINED_FUNCTION_63_3();
    sub_1A5FA1740(v2, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
  }
  OUTLINED_FUNCTION_0_4();
  v16 = OUTLINED_FUNCTION_47_5();
  sub_1A5FA25BC(v16, v17, &qword_1ED192870);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  OUTLINED_FUNCTION_42_1(v1);
  if (!v15)
  {
    OUTLINED_FUNCTION_41_5();
    sub_1A61237AC();
    OUTLINED_FUNCTION_52_3();
  }
  OUTLINED_FUNCTION_18_0(v1);
  if (*(_QWORD *)(v11
                 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherAlerts))
  {
    v18 = swift_bridgeObjectRetain();
    Array<A>.isExpired.getter(v18);
    swift_bridgeObjectRelease();
  }
  v19 = v11 + OBJC_IVAR____TtCV10WeatherKit16WeatherDataModelP33_F7CB3AD3091A0ACC4A7EE9D64C438A297Storage_weatherChanges;
  OUTLINED_FUNCTION_0_4();
  sub_1A5FA25BC(v19, v21, &qword_1ED193FF0);
  v20 = OUTLINED_FUNCTION_57_4();
  OUTLINED_FUNCTION_26_2(v21, 1, v20);
  if (v15)
  {
    sub_1A5FAFD58(v21, &qword_1ED193FF0);
  }
  else
  {
    OUTLINED_FUNCTION_41_5();
    sub_1A61237AC();
    OUTLINED_FUNCTION_52_3();
    sub_1A5FA1740(v21, (uint64_t (*)(_QWORD))type metadata accessor for WeatherChanges);
  }
  OUTLINED_FUNCTION_45_5();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A6036B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A60359EC(a1, a2, a3, a4, &qword_1ED192870, (uint64_t (*)(uint64_t))WeatherDataModel.minuteForecast.setter);
}

uint64_t sub_1A6036BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A60359EC(a1, a2, a3, a4, (uint64_t *)&unk_1ED193AB8, (uint64_t (*)(uint64_t))WeatherDataModel.hourlyForecast.setter);
}

uint64_t sub_1A6036BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A60359EC(a1, a2, a3, a4, (uint64_t *)&unk_1ED193A90, (uint64_t (*)(uint64_t))WeatherDataModel.dailyForecast.setter);
}

uint64_t sub_1A6036C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A60359EC(a1, a2, a3, a4, &qword_1ED193508, (uint64_t (*)(uint64_t))WeatherDataModel.airQuality.setter);
}

uint64_t sub_1A6036C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A60359EC(a1, a2, a3, a4, &qword_1ED193FF0, (uint64_t (*)(uint64_t))WeatherDataModel.weatherChanges.setter);
}

uint64_t sub_1A6036C7C()
{
  return type metadata accessor for WeatherDataModel.Storage();
}

void sub_1A6036C84()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  type metadata accessor for CurrentWeather();
  if (v0 <= 0x3F)
  {
    sub_1A5FC0748();
    if (v1 <= 0x3F)
    {
      sub_1A5FC07A0();
      if (v2 <= 0x3F)
      {
        sub_1A5FC0870();
        if (v3 <= 0x3F)
        {
          sub_1A5FA87CC(319, &qword_1ED193510, (void (*)(uint64_t))type metadata accessor for AirQuality);
          if (v4 <= 0x3F)
          {
            sub_1A5FA87CC(319, &qword_1ED193FF8, (void (*)(uint64_t))type metadata accessor for WeatherChanges);
            if (v5 <= 0x3F)
            {
              sub_1A5FA87CC(319, &qword_1ED194028, (void (*)(uint64_t))type metadata accessor for HistoricalComparisons);
              if (v6 <= 0x3F)
                swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

uint64_t storeEnumTagSinglePayload for WeatherDataModel.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A6036E18 + 4 * byte_1A612BEFA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A6036E38 + 4 * byte_1A612BEFF[v4]))();
}

_BYTE *sub_1A6036E18(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A6036E38(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A6036E40(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A6036E48(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A6036E50(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A6036E58(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataModel.CodingKeys()
{
  return &type metadata for WeatherDataModel.CodingKeys;
}

unint64_t sub_1A6036E78()
{
  unint64_t result;

  result = qword_1EE813EE0;
  if (!qword_1EE813EE0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C07C, &type metadata for WeatherDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813EE0);
  }
  return result;
}

unint64_t sub_1A6036EB8()
{
  unint64_t result;

  result = qword_1ED1910C8;
  if (!qword_1ED1910C8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612BFEC, &type metadata for WeatherDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1910C8);
  }
  return result;
}

unint64_t sub_1A6036EF8()
{
  unint64_t result;

  result = qword_1ED1910C0;
  if (!qword_1ED1910C0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C014, &type metadata for WeatherDataModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1910C0);
  }
  return result;
}

unint64_t sub_1A6036F34()
{
  unint64_t result;

  result = qword_1EE813EF0;
  if (!qword_1EE813EF0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C1FC, &type metadata for WeatherDataModel.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813EF0);
  }
  return result;
}

unint64_t sub_1A6036F70()
{
  unint64_t result;

  result = qword_1ED1910A8;
  if (!qword_1ED1910A8)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherAvailability, &type metadata for WeatherAvailability);
    atomic_store(result, (unint64_t *)&qword_1ED1910A8);
  }
  return result;
}

unint64_t sub_1A6036FAC()
{
  unint64_t result;

  result = qword_1EE813F08;
  if (!qword_1EE813F08)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for HistoricalFacts, &type metadata for HistoricalFacts);
    atomic_store(result, (unint64_t *)&qword_1EE813F08);
  }
  return result;
}

uint64_t sub_1A6036FE8(unint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED192648);
    sub_1A5FAF4C0(a2, (void (*)(uint64_t))type metadata accessor for WeatherAlert);
    v5 = OUTLINED_FUNCTION_61_1();
    result = MEMORY[0x1A85BB36C](v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A6037068()
{
  unint64_t result;

  result = qword_1EE813F20;
  if (!qword_1EE813F20)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherAvailability, &type metadata for WeatherAvailability);
    atomic_store(result, (unint64_t *)&qword_1EE813F20);
  }
  return result;
}

unint64_t sub_1A60370A4()
{
  unint64_t result;

  result = qword_1EE813F30;
  if (!qword_1EE813F30)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for HistoricalFacts, &type metadata for HistoricalFacts);
    atomic_store(result, (unint64_t *)&qword_1EE813F30);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WeatherDataModel.Storage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1A603712C + 4 * byte_1A612BF09[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1A6037160 + 4 * byte_1A612BF04[v4]))();
}

uint64_t sub_1A6037160(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6037168(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6037170);
  return result;
}

uint64_t sub_1A603717C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6037184);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1A6037188(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6037190(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataModel.Storage.CodingKeys()
{
  return &type metadata for WeatherDataModel.Storage.CodingKeys;
}

unint64_t sub_1A60371B0()
{
  unint64_t result;

  result = qword_1EE813F38;
  if (!qword_1EE813F38)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C1D4, &type metadata for WeatherDataModel.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813F38);
  }
  return result;
}

unint64_t sub_1A60371F0()
{
  unint64_t result;

  result = qword_1EE813F40;
  if (!qword_1EE813F40)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C144, &type metadata for WeatherDataModel.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813F40);
  }
  return result;
}

unint64_t sub_1A6037230()
{
  unint64_t result;

  result = qword_1EE813F48;
  if (!qword_1EE813F48)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C16C, &type metadata for WeatherDataModel.Storage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE813F48);
  }
  return result;
}

uint64_t static HistoricalComparison.mockMaximumTemperature(trend:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A603728C(a1, &qword_1ED191028, a2);
}

uint64_t static HistoricalComparison.mockPrecipitation(trend:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A603728C(a1, &qword_1ED191020, a2);
}

uint64_t sub_1A603728C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A60372CC(a1, a3, a2);
  type metadata accessor for HistoricalComparison();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A60372CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1A6037310()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 56))
  {
    *(_QWORD *)(v0 + 56) = sub_1A6037EB0();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_27();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9();
}

double sub_1A6037364()
{
  uint64_t v0;
  double result;

  type metadata accessor for MockDataConstants();
  v0 = swift_allocObject();
  *(_QWORD *)&result = 10;
  *(_OWORD *)(v0 + 16) = xmmword_1A612C250;
  *(_QWORD *)(v0 + 32) = 60;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  qword_1EE844F48 = v0;
  return result;
}

uint64_t sub_1A60373A4()
{
  uint64_t v0;

  v0 = sub_1A6121F58();
  __swift_allocate_value_buffer(v0, qword_1EE844F50);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE844F50);
  return sub_1A6121F28();
}

uint64_t sub_1A60373EC(uint64_t a1)
{
  return sub_1A603740C(a1, qword_1EE844F68);
}

uint64_t sub_1A60373FC(uint64_t a1)
{
  return sub_1A603740C(a1, qword_1EE844F80);
}

uint64_t sub_1A603740C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;

  v3 = sub_1A6121F58();
  v23 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0();
  v6 = v5 - v4;
  v7 = sub_1A6122048();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_0();
  v11 = v10 - v9;
  v22 = sub_1A6122060();
  v12 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_0();
  v15 = v14 - v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_0();
  v19 = v18 - v17;
  __swift_allocate_value_buffer(v3, a2);
  v20 = __swift_project_value_buffer(v3, (uint64_t)a2);
  sub_1A6122030();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0CB1130], v7);
  sub_1A6121F4C();
  sub_1A6122018();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v6, v3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v22);
  result = __swift_getEnumTagSinglePayload(v19, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v20, v19, v3);
  __break(1u);
  return result;
}

void sub_1A60375E0()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 40))
  {
    *(_QWORD *)(v0 + 40) = sub_1A6037634();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_27();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1A6037634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  char *v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v40;
  char *v41;
  char *v42;
  unsigned int v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v0 = sub_1A6122048();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A6122060();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  MEMORY[0x1E0C80A78](v7);
  v45 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A6121F58();
  v50 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v44 = (char *)&v40 - v13;
  MEMORY[0x1E0C80A78](v14);
  v48 = (char *)&v40 - v15;
  v16 = 0;
  v43 = *MEMORY[0x1E0CB1130];
  v51 = MEMORY[0x1E0DEE9D8];
  v49 = v0;
  v41 = v11;
  v42 = v3;
  while (1)
  {
    sub_1A6122030();
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, v43, v0);
    if (qword_1EE812C10 != -1)
      swift_once();
    v17 = __swift_project_value_buffer(v9, (uint64_t)qword_1EE844F50);
    v18 = v50;
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
    v20 = v44;
    v19(v44, v17, v9);
    v21 = v45;
    sub_1A6122018();
    v22 = v3;
    v23 = *(void (**)(char *, uint64_t))(v18 + 8);
    v23(v20, v9);
    v24 = (uint64_t)v21;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v22, v49);
    v25 = v6;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v6, v47);
    if (__swift_getEnumTagSinglePayload(v24, 1, v9) == 1)
      break;
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
    v27 = v48;
    v26(v48, v24, v9);
    v28 = v41;
    v19(v41, (uint64_t)v27, v9);
    v29 = v51;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = sub_1A610B830(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
    v31 = *(_QWORD *)(v29 + 16);
    v30 = *(_QWORD *)(v29 + 24);
    v32 = v50;
    if (v31 >= v30 >> 1)
    {
      v34 = sub_1A610B830(v30 > 1, v31 + 1, 1, v29);
      v32 = v50;
      v29 = v34;
    }
    ++v16;
    *(_QWORD *)(v29 + 16) = v31 + 1;
    v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    v51 = v29;
    v26((char *)(v29 + v33 + *(_QWORD *)(v32 + 72) * v31), (uint64_t)v28, v9);
    v23(v48, v9);
    v0 = v49;
    v3 = v42;
    v6 = v25;
    if (v16 == 10)
      return v51;
  }
  sub_1A5FD1B38(v24);
  if (qword_1EE812C00 != -1)
    swift_once();
  v35 = sub_1A612356C();
  __swift_project_value_buffer(v35, (uint64_t)qword_1EE844F30);
  v36 = sub_1A6123554();
  v37 = sub_1A6123A40();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    _os_log_impl(&dword_1A5F87000, v36, v37, "Failed to generate date", v38, 2u);
    MEMORY[0x1A85BB42C](v38, -1, -1);
  }

  return v51;
}

void sub_1A6037A48()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 48))
  {
    *(_QWORD *)(v0 + 48) = sub_1A6037A9C();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_27();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1A6037A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  char *v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v40;
  char *v41;
  char *v42;
  unsigned int v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v0 = sub_1A6122048();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A6122060();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  MEMORY[0x1E0C80A78](v7);
  v45 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A6121F58();
  v50 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v44 = (char *)&v40 - v13;
  MEMORY[0x1E0C80A78](v14);
  v48 = (char *)&v40 - v15;
  v16 = 0;
  v43 = *MEMORY[0x1E0CB1140];
  v51 = MEMORY[0x1E0DEE9D8];
  v49 = v0;
  v41 = v11;
  v42 = v3;
  while (1)
  {
    sub_1A6122030();
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, v43, v0);
    if (qword_1EE812C10 != -1)
      swift_once();
    v17 = __swift_project_value_buffer(v9, (uint64_t)qword_1EE844F50);
    v18 = v50;
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
    v20 = v44;
    v19(v44, v17, v9);
    v21 = v45;
    sub_1A6122018();
    v22 = v3;
    v23 = *(void (**)(char *, uint64_t))(v18 + 8);
    v23(v20, v9);
    v24 = (uint64_t)v21;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v22, v49);
    v25 = v6;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v6, v47);
    if (__swift_getEnumTagSinglePayload(v24, 1, v9) == 1)
      break;
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
    v27 = v48;
    v26(v48, v24, v9);
    v28 = v41;
    v19(v41, (uint64_t)v27, v9);
    v29 = v51;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = sub_1A610B830(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
    v31 = *(_QWORD *)(v29 + 16);
    v30 = *(_QWORD *)(v29 + 24);
    v32 = v50;
    if (v31 >= v30 >> 1)
    {
      v34 = sub_1A610B830(v30 > 1, v31 + 1, 1, v29);
      v32 = v50;
      v29 = v34;
    }
    ++v16;
    *(_QWORD *)(v29 + 16) = v31 + 1;
    v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    v51 = v29;
    v26((char *)(v29 + v33 + *(_QWORD *)(v32 + 72) * v31), (uint64_t)v28, v9);
    v23(v48, v9);
    v0 = v49;
    v3 = v42;
    v6 = v25;
    if (v16 == 24)
      return v51;
  }
  sub_1A5FD1B38(v24);
  if (qword_1EE812C00 != -1)
    swift_once();
  v35 = sub_1A612356C();
  __swift_project_value_buffer(v35, (uint64_t)qword_1EE844F30);
  v36 = sub_1A6123554();
  v37 = sub_1A6123A40();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    _os_log_impl(&dword_1A5F87000, v36, v37, "Failed to generate date", v38, 2u);
    MEMORY[0x1A85BB42C](v38, -1, -1);
  }

  return v51;
}

uint64_t sub_1A6037EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  char *v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v40;
  char *v41;
  char *v42;
  unsigned int v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v0 = sub_1A6122048();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A6122060();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  MEMORY[0x1E0C80A78](v7);
  v45 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A6121F58();
  v50 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v44 = (char *)&v40 - v13;
  MEMORY[0x1E0C80A78](v14);
  v48 = (char *)&v40 - v15;
  v16 = 0;
  v43 = *MEMORY[0x1E0CB1178];
  v51 = MEMORY[0x1E0DEE9D8];
  v49 = v0;
  v41 = v11;
  v42 = v3;
  while (1)
  {
    sub_1A6122030();
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, v43, v0);
    if (qword_1EE812C10 != -1)
      swift_once();
    v17 = __swift_project_value_buffer(v9, (uint64_t)qword_1EE844F50);
    v18 = v50;
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
    v20 = v44;
    v19(v44, v17, v9);
    v21 = v45;
    sub_1A6122018();
    v22 = v3;
    v23 = *(void (**)(char *, uint64_t))(v18 + 8);
    v23(v20, v9);
    v24 = (uint64_t)v21;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v22, v49);
    v25 = v6;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v6, v47);
    if (__swift_getEnumTagSinglePayload(v24, 1, v9) == 1)
      break;
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
    v27 = v48;
    v26(v48, v24, v9);
    v28 = v41;
    v19(v41, (uint64_t)v27, v9);
    v29 = v51;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = sub_1A610B830(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
    v31 = *(_QWORD *)(v29 + 16);
    v30 = *(_QWORD *)(v29 + 24);
    v32 = v50;
    if (v31 >= v30 >> 1)
    {
      v34 = sub_1A610B830(v30 > 1, v31 + 1, 1, v29);
      v32 = v50;
      v29 = v34;
    }
    ++v16;
    *(_QWORD *)(v29 + 16) = v31 + 1;
    v33 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    v51 = v29;
    v26((char *)(v29 + v33 + *(_QWORD *)(v32 + 72) * v31), (uint64_t)v28, v9);
    v23(v48, v9);
    v0 = v49;
    v3 = v42;
    v6 = v25;
    if (v16 == 60)
      return v51;
  }
  sub_1A5FD1B38(v24);
  if (qword_1EE812C00 != -1)
    swift_once();
  v35 = sub_1A612356C();
  __swift_project_value_buffer(v35, (uint64_t)qword_1EE844F30);
  v36 = sub_1A6123554();
  v37 = sub_1A6123A40();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    _os_log_impl(&dword_1A5F87000, v36, v37, "Failed to generate minute date.", v38, 2u);
    MEMORY[0x1A85BB42C](v38, -1, -1);
  }

  return v51;
}

void sub_1A60382C4()
{
  qword_1EE844F98 = (uint64_t)&unk_1E4FDF818;
}

void sub_1A60382D8()
{
  qword_1EE844FA0 = (uint64_t)&unk_1E4FDF7A0;
}

void sub_1A60382EC()
{
  qword_1EE844FA8 = (uint64_t)&unk_1E4FDF770;
}

void sub_1A6038300()
{
  qword_1EE844FB0 = (uint64_t)&unk_1E4FDF668;
}

void sub_1A6038314()
{
  qword_1EE844FB8 = (uint64_t)&unk_1E4FDF628;
}

uint64_t sub_1A6038328()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A6038354()
{
  sub_1A6038328();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MockDataConstants()
{
  return objc_opt_self();
}

uint64_t sub_1A6038394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  BOOL v4;
  uint64_t result;
  char v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v14;

  v4 = a1 == 0x73726F576863756DLL && a2 == 0xE900000000000065;
  if (v4 || (OUTLINED_FUNCTION_3_12() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v8 = 0;
  }
  else
  {
    v9 = a1 == 0x6573726F77 && a2 == 0xE500000000000000;
    if (v9 || (OUTLINED_FUNCTION_3_12() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v8 = 1;
    }
    else
    {
      v10 = a1 == 1701667187 && a2 == 0xE400000000000000;
      if (v10 || (OUTLINED_FUNCTION_3_12() & 1) != 0)
      {
        result = swift_bridgeObjectRelease();
        v8 = 2;
      }
      else
      {
        v11 = a1 == 0x726574746562 && a2 == 0xE600000000000000;
        if (v11 || (OUTLINED_FUNCTION_3_12() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v8 = 3;
        }
        else
        {
          v12 = a1 == 0x747465426863756DLL && a2 == 0xEA00000000007265;
          if (v12 || (OUTLINED_FUNCTION_3_12() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v8 = 4;
          }
          else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
          {
            result = swift_bridgeObjectRelease();
            v8 = 5;
          }
          else
          {
            v14 = OUTLINED_FUNCTION_3_12();
            result = swift_bridgeObjectRelease();
            if ((v14 & 1) != 0)
              v8 = 5;
            else
              v8 = 6;
          }
        }
      }
    }
  }
  *a3 = v8;
  return result;
}

uint64_t AirQualityPreviousDayComparison.hash(into:)()
{
  return sub_1A6123D70();
}

uint64_t sub_1A60385E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x73726F576863756DLL && a2 == 0xE900000000000065;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6573726F77 && a2 == 0xE500000000000000;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1701667187 && a2 == 0xE400000000000000;
      if (v7 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x726574746562 && a2 == 0xE600000000000000;
        if (v8 || (sub_1A6123CF8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x747465426863756DLL && a2 == 0xEA00000000007265;
          if (v9 || (sub_1A6123CF8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_1A6123CF8();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_1A603884C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6038884 + 4 * byte_1A612C2B0[a1]))(0x73726F576863756DLL, 0xE900000000000065);
}

uint64_t sub_1A6038884()
{
  return 0x6573726F77;
}

uint64_t sub_1A6038898()
{
  return 1701667187;
}

uint64_t sub_1A60388A8()
{
  return 0x726574746562;
}

uint64_t sub_1A60388BC()
{
  return 0x747465426863756DLL;
}

uint64_t sub_1A60388D8()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1A60388F0()
{
  sub_1A6038F44();
  return sub_1A6123DE8();
}

uint64_t sub_1A6038918()
{
  sub_1A6038F44();
  return sub_1A6123DF4();
}

uint64_t sub_1A6038940()
{
  unsigned __int8 *v0;

  return sub_1A603884C(*v0);
}

uint64_t sub_1A6038948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A60385E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A603896C()
{
  sub_1A6038E90();
  return sub_1A6123DE8();
}

uint64_t sub_1A6038994()
{
  sub_1A6038E90();
  return sub_1A6123DF4();
}

uint64_t sub_1A60389BC()
{
  sub_1A6038F08();
  return sub_1A6123DE8();
}

uint64_t sub_1A60389E4()
{
  sub_1A6038F08();
  return sub_1A6123DF4();
}

uint64_t sub_1A6038A0C()
{
  sub_1A6038FF8();
  return sub_1A6123DE8();
}

uint64_t sub_1A6038A34()
{
  sub_1A6038FF8();
  return sub_1A6123DF4();
}

uint64_t sub_1A6038A5C()
{
  sub_1A6038F80();
  return sub_1A6123DE8();
}

uint64_t sub_1A6038A84()
{
  sub_1A6038F80();
  return sub_1A6123DF4();
}

uint64_t sub_1A6038AAC()
{
  sub_1A6038ECC();
  return sub_1A6123DE8();
}

uint64_t sub_1A6038AD4()
{
  sub_1A6038ECC();
  return sub_1A6123DF4();
}

uint64_t sub_1A6038AFC()
{
  sub_1A6038FBC();
  return sub_1A6123DE8();
}

uint64_t sub_1A6038B24()
{
  sub_1A6038FBC();
  return sub_1A6123DF4();
}

void AirQualityPreviousDayComparison.hashValue.getter()
{
  sub_1A6123D64();
  OUTLINED_FUNCTION_17_5();
  sub_1A6123D88();
  OUTLINED_FUNCTION_16();
}

BOOL static AirQualityPreviousDayComparison.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void AirQualityPreviousDayComparison.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191648);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191658);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_13_2(v5, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191640);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191630);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191638);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191650);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191628);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_11_0();
  v11 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6038E90();
  sub_1A6123DD0();
  __asm { BR              X9 }
}

void sub_1A6038D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 70) = 0;
  sub_1A6038FF8();
  OUTLINED_FUNCTION_1_26();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8))(v2, v0);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A6038E90()
{
  unint64_t result;

  result = qword_1ED191380;
  if (!qword_1ED191380)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C8EC, &type metadata for AirQualityPreviousDayComparison.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191380);
  }
  return result;
}

unint64_t sub_1A6038ECC()
{
  unint64_t result;

  result = qword_1ED1913C8;
  if (!qword_1ED1913C8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C89C, &type metadata for AirQualityPreviousDayComparison.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1913C8);
  }
  return result;
}

unint64_t sub_1A6038F08()
{
  unint64_t result;

  result = qword_1EE814028;
  if (!qword_1EE814028)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C84C, &type metadata for AirQualityPreviousDayComparison.MuchBetterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814028);
  }
  return result;
}

unint64_t sub_1A6038F44()
{
  unint64_t result;

  result = qword_1EE814030;
  if (!qword_1EE814030)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C7FC, &type metadata for AirQualityPreviousDayComparison.BetterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814030);
  }
  return result;
}

unint64_t sub_1A6038F80()
{
  unint64_t result;

  result = qword_1EE814038;
  if (!qword_1EE814038)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C7AC, &type metadata for AirQualityPreviousDayComparison.SameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814038);
  }
  return result;
}

unint64_t sub_1A6038FBC()
{
  unint64_t result;

  result = qword_1EE814040;
  if (!qword_1EE814040)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C75C, &type metadata for AirQualityPreviousDayComparison.WorseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814040);
  }
  return result;
}

unint64_t sub_1A6038FF8()
{
  unint64_t result;

  result = qword_1EE814048;
  if (!qword_1EE814048)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C70C, &type metadata for AirQualityPreviousDayComparison.MuchWorseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814048);
  }
  return result;
}

void AirQualityPreviousDayComparison.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814050);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_11_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814058);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814060);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814068);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814070);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_13_2(v7, v24);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814078);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814080);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_0();
  v13 = v12 - v11;
  v26 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6038E90();
  sub_1A6123DC4();
  if (!v27)
  {
    v14 = v13;
    v15 = sub_1A6123C50();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v25 = *(unsigned __int8 *)(v15 + 32);
      sub_1A5FF62F0(1, v16, v15, v15 + 32, 0, (2 * v16) | 1);
      v18 = v17;
      v20 = v19;
      swift_bridgeObjectRelease();
      if (v18 == v20 >> 1)
        __asm { BR              X9 }
      v14 = v13;
    }
    v21 = sub_1A6123B48();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8134C8);
    *v23 = &type metadata for AirQualityPreviousDayComparison;
    sub_1A6123BCC();
    sub_1A6123B3C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v21);
    swift_willThrow();
    OUTLINED_FUNCTION_13_3();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v9);
  }
  __swift_destroy_boxed_opaque_existential_1(v26);
  OUTLINED_FUNCTION_20();
}

void sub_1A60394F0(_QWORD *a1)
{
  AirQualityPreviousDayComparison.init(from:)(a1);
}

void sub_1A6039504(_QWORD *a1)
{
  AirQualityPreviousDayComparison.encode(to:)(a1);
}

unint64_t sub_1A603951C()
{
  unint64_t result;

  result = qword_1EE814088;
  if (!qword_1EE814088)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for AirQualityPreviousDayComparison, &type metadata for AirQualityPreviousDayComparison);
    atomic_store(result, (unint64_t *)&qword_1EE814088);
  }
  return result;
}

uint64_t sub_1A6039560(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A60395AC + 4 * byte_1A612C2C7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A60395E0 + 4 * byte_1A612C2C2[v4]))();
}

uint64_t sub_1A60395E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60395E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A60395F0);
  return result;
}

uint64_t sub_1A60395FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6039604);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A6039608(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6039610(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AirQualityPreviousDayComparison.CodingKeys()
{
  return &type metadata for AirQualityPreviousDayComparison.CodingKeys;
}

ValueMetadata *type metadata accessor for AirQualityPreviousDayComparison.MuchWorseCodingKeys()
{
  return &type metadata for AirQualityPreviousDayComparison.MuchWorseCodingKeys;
}

ValueMetadata *type metadata accessor for AirQualityPreviousDayComparison.WorseCodingKeys()
{
  return &type metadata for AirQualityPreviousDayComparison.WorseCodingKeys;
}

ValueMetadata *type metadata accessor for AirQualityPreviousDayComparison.SameCodingKeys()
{
  return &type metadata for AirQualityPreviousDayComparison.SameCodingKeys;
}

ValueMetadata *type metadata accessor for AirQualityPreviousDayComparison.BetterCodingKeys()
{
  return &type metadata for AirQualityPreviousDayComparison.BetterCodingKeys;
}

ValueMetadata *type metadata accessor for AirQualityPreviousDayComparison.MuchBetterCodingKeys()
{
  return &type metadata for AirQualityPreviousDayComparison.MuchBetterCodingKeys;
}

ValueMetadata *type metadata accessor for AirQualityPreviousDayComparison.UnknownCodingKeys()
{
  return &type metadata for AirQualityPreviousDayComparison.UnknownCodingKeys;
}

unint64_t sub_1A6039690()
{
  unint64_t result;

  result = qword_1EE814090;
  if (!qword_1EE814090)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C6E4, &type metadata for AirQualityPreviousDayComparison.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814090);
  }
  return result;
}

unint64_t sub_1A60396D0()
{
  unint64_t result;

  result = qword_1ED1913E8;
  if (!qword_1ED1913E8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C604, &type metadata for AirQualityPreviousDayComparison.MuchWorseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1913E8);
  }
  return result;
}

unint64_t sub_1A6039710()
{
  unint64_t result;

  result = qword_1ED1913E0;
  if (!qword_1ED1913E0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C62C, &type metadata for AirQualityPreviousDayComparison.MuchWorseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1913E0);
  }
  return result;
}

unint64_t sub_1A6039750()
{
  unint64_t result;

  result = qword_1ED1913B0;
  if (!qword_1ED1913B0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C5B4, &type metadata for AirQualityPreviousDayComparison.WorseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1913B0);
  }
  return result;
}

unint64_t sub_1A6039790()
{
  unint64_t result;

  result = qword_1ED1913A8;
  if (!qword_1ED1913A8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C5DC, &type metadata for AirQualityPreviousDayComparison.WorseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1913A8);
  }
  return result;
}

unint64_t sub_1A60397D0()
{
  unint64_t result;

  result = qword_1ED1913A0;
  if (!qword_1ED1913A0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C564, &type metadata for AirQualityPreviousDayComparison.SameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1913A0);
  }
  return result;
}

unint64_t sub_1A6039810()
{
  unint64_t result;

  result = qword_1ED191398;
  if (!qword_1ED191398)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C58C, &type metadata for AirQualityPreviousDayComparison.SameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191398);
  }
  return result;
}

unint64_t sub_1A6039850()
{
  unint64_t result;

  result = qword_1ED1913C0;
  if (!qword_1ED1913C0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C514, &type metadata for AirQualityPreviousDayComparison.BetterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1913C0);
  }
  return result;
}

unint64_t sub_1A6039890()
{
  unint64_t result;

  result = qword_1ED1913B8;
  if (!qword_1ED1913B8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C53C, &type metadata for AirQualityPreviousDayComparison.BetterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1913B8);
  }
  return result;
}

unint64_t sub_1A60398D0()
{
  unint64_t result;

  result = qword_1ED1913F8;
  if (!qword_1ED1913F8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C4C4, &type metadata for AirQualityPreviousDayComparison.MuchBetterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1913F8);
  }
  return result;
}

unint64_t sub_1A6039910()
{
  unint64_t result;

  result = qword_1ED1913F0;
  if (!qword_1ED1913F0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C4EC, &type metadata for AirQualityPreviousDayComparison.MuchBetterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1913F0);
  }
  return result;
}

unint64_t sub_1A6039950()
{
  unint64_t result;

  result = qword_1ED1913D8;
  if (!qword_1ED1913D8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C474, &type metadata for AirQualityPreviousDayComparison.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1913D8);
  }
  return result;
}

unint64_t sub_1A6039990()
{
  unint64_t result;

  result = qword_1ED1913D0;
  if (!qword_1ED1913D0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C49C, &type metadata for AirQualityPreviousDayComparison.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1913D0);
  }
  return result;
}

unint64_t sub_1A60399D0()
{
  unint64_t result;

  result = qword_1ED191390;
  if (!qword_1ED191390)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C654, &type metadata for AirQualityPreviousDayComparison.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191390);
  }
  return result;
}

unint64_t sub_1A6039A10()
{
  unint64_t result;

  result = qword_1ED191388;
  if (!qword_1ED191388)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C67C, &type metadata for AirQualityPreviousDayComparison.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191388);
  }
  return result;
}

WeatherKit::HistoricalFacts __swiftcall HistoricalFacts.init(facts:)(WeatherKit::HistoricalFacts facts)
{
  WeatherKit::HistoricalFacts *v1;

  v1->facts._rawValue = facts.facts._rawValue;
  return facts;
}

uint64_t HistoricalFacts.facts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static HistoricalFacts.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_1A5FC7D94(*a1, *a2);
}

uint64_t sub_1A6039A68(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7374636166 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1A6123CF8();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A6039AE4()
{
  return 0x7374636166;
}

uint64_t sub_1A6039AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6039A68(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A6039B24()
{
  sub_1A6039C88();
  return sub_1A6123DE8();
}

uint64_t sub_1A6039B4C()
{
  sub_1A6039C88();
  return sub_1A6123DF4();
}

void HistoricalFacts.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v8[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814098);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6039C88();
  sub_1A6123DD0();
  v8[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8140A8);
  sub_1A6039DF8(&qword_1EE8140B0, &qword_1EE8140B8, (uint64_t)&protocol conformance descriptor for HistoricalFact, MEMORY[0x1E0DEAF10]);
  sub_1A6123CC8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A6039C88()
{
  unint64_t result;

  result = qword_1EE8140A0;
  if (!qword_1EE8140A0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612CA9C, &type metadata for HistoricalFacts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8140A0);
  }
  return result;
}

void HistoricalFacts.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8140C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6039C88();
  sub_1A6123DC4();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8140A8);
    sub_1A6039DF8(&qword_1EE8140C8, &qword_1EE8140D0, (uint64_t)&protocol conformance descriptor for HistoricalFact, MEMORY[0x1E0DEAF40]);
    sub_1A6123C44();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_20();
}

uint64_t sub_1A6039DF8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE8140A8);
    v10 = sub_1A6039E74(a2, a3);
    result = MEMORY[0x1A85BB36C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A6039E74(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for HistoricalFact(255);
    result = MEMORY[0x1A85BB36C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1A6039EB4(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  HistoricalFacts.init(from:)(a1, a2);
}

void sub_1A6039EC8(_QWORD *a1)
{
  HistoricalFacts.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for HistoricalFacts()
{
  return &type metadata for HistoricalFacts;
}

uint64_t storeEnumTagSinglePayload for HistoricalFacts.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A6039F30 + 4 * byte_1A612C93C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A6039F50 + 4 * byte_1A612C941[v4]))();
}

_BYTE *sub_1A6039F30(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A6039F50(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A6039F58(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A6039F60(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A6039F68(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A6039F70(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HistoricalFacts.CodingKeys()
{
  return &type metadata for HistoricalFacts.CodingKeys;
}

unint64_t sub_1A6039F90()
{
  unint64_t result;

  result = qword_1EE8140D8;
  if (!qword_1EE8140D8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612CA74, &type metadata for HistoricalFacts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8140D8);
  }
  return result;
}

unint64_t sub_1A6039FD0()
{
  unint64_t result;

  result = qword_1EE8140E0;
  if (!qword_1EE8140E0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612C9E4, &type metadata for HistoricalFacts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8140E0);
  }
  return result;
}

unint64_t sub_1A603A010()
{
  unint64_t result;

  result = qword_1EE8140E8;
  if (!qword_1EE8140E8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612CA0C, &type metadata for HistoricalFacts.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8140E8);
  }
  return result;
}

_QWORD *assignWithCopy for AQIScaleEntity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AQIScaleEntity(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AQIScaleEntity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AQIScaleEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AQIScaleEntity()
{
  return &type metadata for AQIScaleEntity;
}

uint64_t sub_1A603A19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a3;
  v34 = a2;
  v32 = a1;
  v5 = sub_1A6122F30();
  v35 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_0();
  v33 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192470);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_12();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192490);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_23();
  v11 = v9 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193BF8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_23();
  v18 = v16 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v31 - v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C08);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v31 - v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C00);
  OUTLINED_FUNCTION_2_27((uint64_t)v25);
  OUTLINED_FUNCTION_2_27(v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C18);
  OUTLINED_FUNCTION_54();
  v26 = sub_1A6123668();
  swift_retain();
  sub_1A6121F4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193BF0);
  OUTLINED_FUNCTION_19_14((uint64_t)v21);
  OUTLINED_FUNCTION_20_0((uint64_t)v21, 0);
  sub_1A6121F4C();
  OUTLINED_FUNCTION_19_14(v18);
  OUTLINED_FUNCTION_20_0(v18, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C10);
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_14_22();
  sub_1A6123668();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192488);
  OUTLINED_FUNCTION_2_27((uint64_t)v14);
  OUTLINED_FUNCTION_2_27(v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1924A0);
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_5_23();
  sub_1A6123668();
  v37 = v32;
  v38 = v34;
  swift_retain();
  sub_1A6123680();
  swift_release();
  v28 = v35;
  v27 = v36;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v33, v36, v5);
  sub_1A603AEEC(&qword_1ED191050);
  sub_1A603AEEC(&qword_1ED191048);
  sub_1A61235FC();
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192468);
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v29);
  sub_1A6123680();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v5);
  return v26;
}

uint64_t sub_1A603A4E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6465696669646F6DLL && a2 == 0xE800000000000000;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x656C616373 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1A6123CF8();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1A603A614(char a1)
{
  if (!a1)
    return 25705;
  if (a1 == 1)
    return 0x6465696669646F6DLL;
  return 0x656C616373;
}

uint64_t sub_1A603A65C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814128);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_12();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A603AE78();
  sub_1A6123DD0();
  OUTLINED_FUNCTION_25_16();
  OUTLINED_FUNCTION_17_15(&qword_1EE814130);
  sub_1A6123CC8();
  if (!v1)
  {
    OUTLINED_FUNCTION_25_16();
    OUTLINED_FUNCTION_17_15(&qword_1EE814138);
    OUTLINED_FUNCTION_6_23();
    OUTLINED_FUNCTION_25_16();
    OUTLINED_FUNCTION_17_15(&qword_1EE814140);
    OUTLINED_FUNCTION_6_23();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

uint64_t sub_1A603A7F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814100);
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_0();
  v36 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192490);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_23();
  v8 = v6 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193BF8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_23();
  v15 = v13 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C08);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_19_0();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v31 - v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C00);
  OUTLINED_FUNCTION_11_1((uint64_t)v22);
  OUTLINED_FUNCTION_11_1(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C18);
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_10_22();
  v35 = sub_1A6123668();
  sub_1A6121F4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193BF0);
  OUTLINED_FUNCTION_24_13((uint64_t)v18);
  OUTLINED_FUNCTION_16_18((uint64_t)v18);
  sub_1A6121F4C();
  OUTLINED_FUNCTION_24_13(v15);
  OUTLINED_FUNCTION_16_18(v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C10);
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_14_22();
  sub_1A6123668();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192488);
  OUTLINED_FUNCTION_10_1((uint64_t)v11);
  OUTLINED_FUNCTION_10_1(v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1924A0);
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_5_23();
  sub_1A6123668();
  v23 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_1A603AE78();
  v24 = v37;
  sub_1A6123DC4();
  if (v24)
  {
    v25 = (uint64_t)v34;
    v26 = v35;
  }
  else
  {
    v38 = 0;
    sub_1A603AEB4(&qword_1EE814110, &qword_1ED193C18);
    OUTLINED_FUNCTION_17_2();
    swift_release();
    v26 = v39;
    v38 = 1;
    v28 = sub_1A603AEB4(&qword_1EE814118, &qword_1ED193C10);
    swift_retain();
    OUTLINED_FUNCTION_17_2();
    if (v28)
    {
      OUTLINED_FUNCTION_7_7(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    }
    else
    {
      OUTLINED_FUNCTION_14_4();
      v38 = 2;
      v29 = sub_1A603AEB4(&qword_1EE814120, &qword_1ED1924A0);
      swift_retain();
      OUTLINED_FUNCTION_17_2();
      v30 = v32;
      if (!v29)
      {
        swift_release();
        OUTLINED_FUNCTION_7_7(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
        swift_retain();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
        swift_release();
        OUTLINED_FUNCTION_14_4();
        OUTLINED_FUNCTION_6_6();
        return v26;
      }
      OUTLINED_FUNCTION_7_7(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
      OUTLINED_FUNCTION_6_6();
    }
    swift_release();
    v25 = (uint64_t)v34;
  }
  __swift_destroy_boxed_opaque_existential_1(v25);
  swift_release();
  OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_6_6();
  return v26;
}

uint64_t sub_1A603AC24()
{
  char *v0;

  return sub_1A603A614(*v0);
}

uint64_t sub_1A603AC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A603A4E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A603AC50()
{
  sub_1A603AE78();
  return sub_1A6123DE8();
}

uint64_t sub_1A603AC78()
{
  sub_1A603AE78();
  return sub_1A6123DF4();
}

uint64_t sub_1A603ACA0()
{
  return swift_retain();
}

uint64_t sub_1A603ACA8()
{
  sub_1A5FC2030();
  return sub_1A6123578();
}

uint64_t sub_1A603ACE0()
{
  sub_1A5FC2030();
  return sub_1A6123590();
}

uint64_t sub_1A603AD18()
{
  sub_1A5FC2030();
  return sub_1A6123584();
}

uint64_t sub_1A603AD68@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1A603A7F8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A603AD94(_QWORD *a1)
{
  return sub_1A603A65C(a1);
}

uint64_t sub_1A603ADB0()
{
  sub_1A5FC2030();
  return sub_1A61235B4();
}

uint64_t sub_1A603ADE8()
{
  sub_1A5FC2030();
  return sub_1A61235A8();
}

uint64_t sub_1A603AE28()
{
  sub_1A5FC2030();
  return sub_1A612359C();
}

unint64_t sub_1A603AE78()
{
  unint64_t result;

  result = qword_1EE814108;
  if (!qword_1EE814108)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612CD4C, &type metadata for AQIScaleEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814108);
  }
  return result;
}

uint64_t sub_1A603AEB4(uint64_t *a1, uint64_t *a2)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_11_2();
  }
  return result;
}

uint64_t sub_1A603AEEC(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    sub_1A6122F30();
    OUTLINED_FUNCTION_11_2();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AQIScaleEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A603AF70 + 4 * byte_1A612CAF1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A603AFA4 + 4 * byte_1A612CAEC[v4]))();
}

uint64_t sub_1A603AFA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A603AFAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A603AFB4);
  return result;
}

uint64_t sub_1A603AFC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A603AFC8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A603AFCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A603AFD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AQIScaleEntity.CodingKeys()
{
  return &type metadata for AQIScaleEntity.CodingKeys;
}

unint64_t sub_1A603AFF4()
{
  unint64_t result;

  result = qword_1EE814148;
  if (!qword_1EE814148)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612CD24, &type metadata for AQIScaleEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814148);
  }
  return result;
}

unint64_t sub_1A603B034()
{
  unint64_t result;

  result = qword_1EE814150;
  if (!qword_1EE814150)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612CC94, &type metadata for AQIScaleEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814150);
  }
  return result;
}

unint64_t sub_1A603B074()
{
  unint64_t result;

  result = qword_1EE814158;
  if (!qword_1EE814158)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612CCBC, &type metadata for AQIScaleEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814158);
  }
  return result;
}

uint64_t sub_1A603B0B0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int16 *a12, uint64_t *a13, uint64_t a14, uint64_t *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  unsigned __int16 v54;
  char v55;

  v48 = a7;
  v49 = a8;
  v46 = a5;
  v47 = a6;
  v44 = a3;
  v45 = a4;
  v42 = result;
  v43 = a2;
  v50 = a9;
  v40 = a19;
  if (a19)
  {
    v21 = 0;
    v38 = a17;
    v39 = a18;
    v36 = a11;
    v37 = a16;
    v34 = a14;
    v35 = a10;
    v22 = *a12 | (*((unsigned __int8 *)a12 + 2) << 16);
    v23 = *a13;
    v41 = a20 & 0xFFFFFFFFFFFFFFFELL;
    v32 = *a15;
    v33 = v23;
    v53 = v22;
    v24 = HIWORD(v22);
    while (1)
    {
      v25 = *(_QWORD *)(v50 + 8 * v21);
      v26 = *(_QWORD *)(v42 + 8 * v21);
      v27 = type metadata accessor for WeatherQuery(0, *(_QWORD *)(v41 + 8 * v21), a3, (uint64_t)a4);
      v28 = *(_QWORD *)(v27 - 8);
      MEMORY[0x1E0C80A78](v27);
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))((char *)&v32 - v29, v26, v27);
      v55 = v24;
      v54 = v53;
      v51 = v32;
      v52 = v33;
      sub_1A60C92FC(v43, v44, v45, v46, v47, v48, v49, v35, v25, v36, &v54, &v52, v34, &v51, v37, v38, v39, v27);
      if (v20)
        break;
      result = OUTLINED_FUNCTION_0_27();
      if (v40 == ++v21)
        return result;
    }
    result = OUTLINED_FUNCTION_0_27();
    if (v21)
    {
      v30 = v41 - 8;
      v31 = v50 - 8;
      do
      {
        result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v30 + 8 * v21) - 8) + 8))(*(_QWORD *)(v31 + 8 * v21));
        --v21;
      }
      while (v21);
    }
  }
  return result;
}

uint64_t MoonEvents.init(phase:moonrise:moonset:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_1_27();
  v9 = (uint64_t)&a4[*(int *)(v8 + 20)];
  sub_1A6121F58();
  OUTLINED_FUNCTION_1_6(v9);
  v10 = (uint64_t)&a4[*(int *)(v8 + 24)];
  OUTLINED_FUNCTION_1_6(v10);
  *a4 = a1;
  sub_1A5FBF9A0(a2, v9);
  return sub_1A5FBF9A0(a3, v10);
}

uint64_t MoonEvents.phase.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t MoonEvents.phase.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*MoonEvents.phase.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t MoonEvents.moonrise.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_1_27();
  return OUTLINED_FUNCTION_4_14(v1 + *(int *)(v3 + 20), a1);
}

uint64_t MoonEvents.moonrise.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_1_27();
  return OUTLINED_FUNCTION_5_14(a1, v1 + *(int *)(v3 + 20));
}

double (*MoonEvents.moonrise.modify())(double, double)
{
  OUTLINED_FUNCTION_1_27();
  return GEOLocationCoordinate2DMake;
}

uint64_t MoonEvents.moonset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_1_27();
  return OUTLINED_FUNCTION_4_14(v1 + *(int *)(v3 + 24), a1);
}

uint64_t MoonEvents.moonset.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_1_27();
  return OUTLINED_FUNCTION_5_14(a1, v1 + *(int *)(v3 + 24));
}

double (*MoonEvents.moonset.modify())(double, double)
{
  OUTLINED_FUNCTION_1_27();
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1A603B448(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6573616870 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x657369726E6F6F6DLL && a2 == 0xE800000000000000;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7465736E6F6F6DLL && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1A6123CF8();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1A603B58C(char a1)
{
  if (!a1)
    return 0x6573616870;
  if (a1 == 1)
    return 0x657369726E6F6F6DLL;
  return 0x7465736E6F6F6DLL;
}

uint64_t sub_1A603B5E0()
{
  char *v0;

  return sub_1A603B58C(*v0);
}

uint64_t sub_1A603B5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A603B448(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A603B60C()
{
  sub_1A603BAA0();
  return sub_1A6123DE8();
}

uint64_t sub_1A603B634()
{
  sub_1A603BAA0();
  return sub_1A6123DF4();
}

void MoonEvents.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191568);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A603BAA0();
  sub_1A6123DD0();
  sub_1A603BADC();
  sub_1A6123CC8();
  if (!v1)
  {
    type metadata accessor for MoonEvents();
    sub_1A6121F58();
    sub_1A5FAF4F4(&qword_1ED191698, MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_5_1();
    OUTLINED_FUNCTION_5_1();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_20();
}

void MoonEvents.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v31 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_151();
  v30 = v4;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v5);
  v33 = (char *)&v27 - v6;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814160);
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_0();
  v9 = v8 - v7;
  v10 = type metadata accessor for MoonEvents();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_0();
  v14 = (_BYTE *)(v13 - v12);
  v16 = v13 - v12 + *(int *)(v15 + 20);
  sub_1A6121F58();
  OUTLINED_FUNCTION_11_1(v16);
  v17 = (uint64_t)&v14[*(int *)(v10 + 24)];
  OUTLINED_FUNCTION_11_1(v17);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A603BAA0();
  v35 = v9;
  v18 = v36;
  sub_1A6123DC4();
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1A5FA0C4C(v16, &qword_1ED1929C8);
    sub_1A5FA0C4C(v17, &qword_1ED1929C8);
  }
  else
  {
    v36 = v17;
    v20 = v32;
    v19 = (uint64_t)v33;
    v29 = a1;
    v39 = 0;
    sub_1A603BB18();
    v22 = v34;
    v21 = v35;
    sub_1A6123C44();
    *v14 = v40;
    v38 = 1;
    sub_1A5FAF4F4(&qword_1EE812DF0, MEMORY[0x1E0CB08C0]);
    OUTLINED_FUNCTION_11_20();
    v28 = v14;
    sub_1A5FBF9A0(v19, v16);
    v37 = 2;
    v23 = v30;
    OUTLINED_FUNCTION_11_20();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
    v24 = v31;
    v25 = (uint64_t)v29;
    sub_1A5FBF9A0(v23, v36);
    v26 = (uint64_t)v28;
    sub_1A603BB54((uint64_t)v28, v24);
    __swift_destroy_boxed_opaque_existential_1(v25);
    sub_1A603BB98(v26);
  }
  OUTLINED_FUNCTION_20();
}

void sub_1A603BA78(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  MoonEvents.init(from:)(a1, a2);
}

void sub_1A603BA8C(_QWORD *a1)
{
  MoonEvents.encode(to:)(a1);
}

unint64_t sub_1A603BAA0()
{
  unint64_t result;

  result = qword_1ED1910F0;
  if (!qword_1ED1910F0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612CF24, &type metadata for MoonEvents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1910F0);
  }
  return result;
}

unint64_t sub_1A603BADC()
{
  unint64_t result;

  result = qword_1ED1914B0;
  if (!qword_1ED1914B0)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for MoonPhase, &type metadata for MoonPhase);
    atomic_store(result, (unint64_t *)&qword_1ED1914B0);
  }
  return result;
}

unint64_t sub_1A603BB18()
{
  unint64_t result;

  result = qword_1EE814168;
  if (!qword_1EE814168)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for MoonPhase, &type metadata for MoonPhase);
    atomic_store(result, (unint64_t *)&qword_1EE814168);
  }
  return result;
}

uint64_t sub_1A603BB54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoonEvents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A603BB98(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MoonEvents();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for MoonEvents(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1A6121F58();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v10))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v14, v15, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v10);
    }
  }
  return v4;
}

uint64_t destroy for MoonEvents(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1A6121F58();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  result = __swift_getEnumTagSinglePayload(v6, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v6, v5);
  return result;
}

_BYTE *initializeWithCopy for MoonEvents(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1A6121F58();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 24);
  v12 = &a1[v11];
  v13 = &a2[v11];
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v9))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
  }
  return a1;
}

_BYTE *assignWithCopy for MoonEvents(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1A6121F58();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v14], 1, v9);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (!v17)
  {
    v19 = *(_QWORD *)(v9 - 8);
    if (!v18)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 24))(v15, v16, v9);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v15, v9);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v15, v16, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
  return a1;
}

_BYTE *initializeWithTake for MoonEvents(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1A6121F58();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(a3 + 24);
  v12 = &a1[v11];
  v13 = &a2[v11];
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v9))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
  }
  return a1;
}

_BYTE *assignWithTake for MoonEvents(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1A6121F58();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(a3 + 24);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v14], 1, v9);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (!v17)
  {
    v19 = *(_QWORD *)(v9 - 8);
    if (!v18)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 40))(v15, v16, v9);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v15, v9);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v15, v16, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoonEvents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A603C3B8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 248)
  {
    v4 = *a1;
    if (v4 >= 8)
      return v4 - 7;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    return __swift_getEnumTagSinglePayload((uint64_t)&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MoonEvents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1A603C434(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 248)
  {
    *result = a2 + 7;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    return (_BYTE *)__swift_storeEnumTagSinglePayload((uint64_t)&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MoonEvents.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A603C4EC + 4 * byte_1A612CDA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A603C520 + 4 * byte_1A612CDA0[v4]))();
}

uint64_t sub_1A603C520(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A603C528(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A603C530);
  return result;
}

uint64_t sub_1A603C53C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A603C544);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A603C548(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A603C550(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MoonEvents.CodingKeys()
{
  return &type metadata for MoonEvents.CodingKeys;
}

unint64_t sub_1A603C570()
{
  unint64_t result;

  result = qword_1EE814170;
  if (!qword_1EE814170)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612CEFC, &type metadata for MoonEvents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814170);
  }
  return result;
}

unint64_t sub_1A603C5B0()
{
  unint64_t result;

  result = qword_1ED191100;
  if (!qword_1ED191100)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612CE6C, &type metadata for MoonEvents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191100);
  }
  return result;
}

unint64_t sub_1A603C5F0()
{
  unint64_t result;

  result = qword_1ED1910F8;
  if (!qword_1ED1910F8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612CE94, &type metadata for MoonEvents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1910F8);
  }
  return result;
}

uint64_t PrecipitationAmount.init(pastHour:pastSixHours:pastTwentyFourHours:nextHour:nextSixHours:nextTwentyFourHours:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);

  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  OUTLINED_FUNCTION_7_25(a7, a1, v15, v16, v17, v18, v19, v20, v47, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32));
  v21 = (int *)OUTLINED_FUNCTION_4_21();
  OUTLINED_FUNCTION_7_25(a7 + v21[5], a2, v22, v23, v24, v25, v26, v27, v48, v52);
  OUTLINED_FUNCTION_7_25(a7 + v21[6], a3, v28, v29, v30, v31, v32, v33, v49, v53);
  OUTLINED_FUNCTION_7_25(a7 + v21[7], a4, v34, v35, v36, v37, v38, v39, v50, v54);
  OUTLINED_FUNCTION_7_25(a7 + v21[8], a5, v40, v41, v42, v43, v44, v45, v51, v55);
  return v56(a7 + v21[9], a6, v14);
}

uint64_t PrecipitationAmount.pastHour.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t (*PrecipitationAmount.pastHour.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t PrecipitationAmount.pastSixHours.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*PrecipitationAmount.pastSixHours.modify())(double, double)
{
  OUTLINED_FUNCTION_4_21();
  return GEOLocationCoordinate2DMake;
}

uint64_t PrecipitationAmount.pastTwentyFourHours.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*PrecipitationAmount.pastTwentyFourHours.modify())(double, double)
{
  OUTLINED_FUNCTION_4_21();
  return GEOLocationCoordinate2DMake;
}

uint64_t PrecipitationAmount.nextHour.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t PrecipitationAmount.nextHour.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*PrecipitationAmount.nextHour.modify())(double, double)
{
  OUTLINED_FUNCTION_4_21();
  return GEOLocationCoordinate2DMake;
}

uint64_t PrecipitationAmount.nextSixHours.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t PrecipitationAmount.nextSixHours.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*PrecipitationAmount.nextSixHours.modify())(double, double)
{
  OUTLINED_FUNCTION_4_21();
  return GEOLocationCoordinate2DMake;
}

uint64_t PrecipitationAmount.nextTwentyFourHours.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_21();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*PrecipitationAmount.nextTwentyFourHours.modify())(double, double)
{
  OUTLINED_FUNCTION_4_21();
  return GEOLocationCoordinate2DMake;
}

uint64_t PrecipitationAmount.init(pastHour:pastSixHours:pastTwentyFourHours:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  id v14;
  id v15;
  id v16;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0();
  v12 = v11 - v10;
  OUTLINED_FUNCTION_18_15(a4, a1);
  v13 = (int *)OUTLINED_FUNCTION_4_21();
  OUTLINED_FUNCTION_18_15(a4 + v13[5], a2);
  OUTLINED_FUNCTION_18_15(a4 + v13[6], a3);
  v14 = objc_msgSend((id)objc_opt_self(), sel_millimeters);
  sub_1A5FAC190();
  OUTLINED_FUNCTION_145();
  v15 = OUTLINED_FUNCTION_15_20();
  OUTLINED_FUNCTION_145();
  v16 = OUTLINED_FUNCTION_15_20();
  OUTLINED_FUNCTION_145();
  OUTLINED_FUNCTION_16_19(a3);
  OUTLINED_FUNCTION_16_19(a2);
  OUTLINED_FUNCTION_16_19(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(a4 + v13[9], v12, v8);
}

uint64_t sub_1A603CAD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v9;

  v2 = a1 == 0x72756F4874736170 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x4878695374736170 && a2 == 0xEC0000007372756FLL;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001A614F160 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x72756F487478656ELL && a2 == 0xE800000000000000;
      if (v7 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x487869537478656ELL && a2 == 0xEC0000007372756FLL;
        if (v8 || (sub_1A6123CF8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000001A614F180)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = sub_1A6123CF8();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 5;
          else
            return 6;
        }
      }
    }
  }
}

uint64_t sub_1A603CD60(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A603CD94 + 4 * byte_1A612CF80[a1]))(0x72756F4874736170, 0xE800000000000000);
}

uint64_t sub_1A603CD94()
{
  return 0x4878695374736170;
}

uint64_t sub_1A603CDFC()
{
  unsigned __int8 *v0;

  return sub_1A603CD60(*v0);
}

uint64_t sub_1A603CE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A603CAD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A603CE28()
{
  sub_1A603D018();
  return sub_1A6123DE8();
}

uint64_t sub_1A603CE50()
{
  sub_1A603D018();
  return sub_1A6123DF4();
}

void PrecipitationAmount.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1917D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A603D018();
  sub_1A6123DD0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  sub_1A5FCBBFC(&qword_1ED191678, MEMORY[0x1E0CAE340]);
  OUTLINED_FUNCTION_1_28();
  if (!v1)
  {
    type metadata accessor for PrecipitationAmount();
    OUTLINED_FUNCTION_1_28();
    OUTLINED_FUNCTION_1_28();
    OUTLINED_FUNCTION_1_28();
    OUTLINED_FUNCTION_1_28();
    OUTLINED_FUNCTION_1_28();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A603D018()
{
  unint64_t result;

  result = qword_1ED191728;
  if (!qword_1ED191728)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D118, &type metadata for PrecipitationAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191728);
  }
  return result;
}

void PrecipitationAmount.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  int *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;

  v33 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v40 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v32 - v6;
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)&v32 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v32 - v13;
  MEMORY[0x1E0C80A78](v15);
  v38 = (char *)&v32 - v16;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814178);
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_0();
  v39 = (int *)type metadata accessor for PrecipitationAmount();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_0();
  v43 = v18 - v17;
  v19 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1A603D018();
  v20 = v42;
  sub_1A6123DC4();
  if (v20)
  {
    OUTLINED_FUNCTION_17_4();
  }
  else
  {
    v21 = v14;
    v42 = v11;
    v49 = 0;
    v22 = sub_1A5FCBBFC(&qword_1EE812E58, MEMORY[0x1E0CAE358]);
    OUTLINED_FUNCTION_8_2();
    v23 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 32);
    v23(v43, v38, v3);
    v48 = 1;
    OUTLINED_FUNCTION_8_2();
    v24 = v43 + v39[5];
    v38 = (char *)v23;
    v23(v24, v21, v3);
    v47 = 2;
    v25 = (uint64_t)v42;
    v32 = v22;
    OUTLINED_FUNCTION_8_2();
    v26 = v43;
    OUTLINED_FUNCTION_10_23(v43 + v39[6], v25);
    v46 = 3;
    v27 = (uint64_t)v36;
    OUTLINED_FUNCTION_9_21();
    v28 = v26;
    v29 = v39;
    OUTLINED_FUNCTION_10_23(v28 + v39[7], v27);
    v45 = 4;
    v30 = (uint64_t)v35;
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_10_23(v28 + v29[8], v30);
    v44 = 5;
    v31 = (uint64_t)v34;
    OUTLINED_FUNCTION_9_21();
    OUTLINED_FUNCTION_14_23();
    OUTLINED_FUNCTION_10_23(v28 + v29[9], v31);
    sub_1A5FE9D38(v28, v33);
    OUTLINED_FUNCTION_17_4();
    sub_1A603D4E0(v28);
  }
  OUTLINED_FUNCTION_20();
}

uint64_t sub_1A603D4E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PrecipitationAmount();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A603D51C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  PrecipitationAmount.init(from:)(a1, a2);
}

void sub_1A603D530(_QWORD *a1)
{
  PrecipitationAmount.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for SnowfallAmount(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v8((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    v8((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
    v8((uint64_t *)((char *)a1 + a3[8]), (uint64_t *)((char *)a2 + a3[8]), v7);
    v8((uint64_t *)((char *)a1 + a3[9]), (uint64_t *)((char *)a2 + a3[9]), v7);
  }
  return a1;
}

uint64_t assignWithCopy for SnowfallAmount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t initializeWithTake for SnowfallAmount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t assignWithTake for SnowfallAmount(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v7(a1 + a3[6], a2 + a3[6], v6);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  v7(a1 + a3[9], a2 + a3[9], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrecipitationAmount()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A603D88C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PrecipitationAmount()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A603D8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PrecipitationAmount.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A603D958 + 4 * byte_1A612CF8B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A603D98C + 4 * byte_1A612CF86[v4]))();
}

uint64_t sub_1A603D98C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A603D994(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A603D99CLL);
  return result;
}

uint64_t sub_1A603D9A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A603D9B0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A603D9B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A603D9BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PrecipitationAmount.CodingKeys()
{
  return &type metadata for PrecipitationAmount.CodingKeys;
}

unint64_t sub_1A603D9DC()
{
  unint64_t result;

  result = qword_1EE814180;
  if (!qword_1EE814180)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D0F0, &type metadata for PrecipitationAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814180);
  }
  return result;
}

unint64_t sub_1A603DA1C()
{
  unint64_t result;

  result = qword_1ED191738;
  if (!qword_1ED191738)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D060, &type metadata for PrecipitationAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191738);
  }
  return result;
}

unint64_t sub_1A603DA5C()
{
  unint64_t result;

  result = qword_1ED191730;
  if (!qword_1ED191730)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D088, &type metadata for PrecipitationAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191730);
  }
  return result;
}

double static Forecast<>.mock()@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t *v41;
  _QWORD *v42;
  char *v43;
  double result;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(unint64_t, char *, uint64_t);
  id v61;
  uint64_t v62;
  id v63;

  v56 = a1;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v59 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v51 = (char *)&v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for Swell();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1A6121F58();
  v5 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v55 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v45 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813780);
  v10 = type metadata accessor for HourMarineWeather();
  v11 = *(_QWORD *)(v10 - 8);
  v58 = *(_QWORD *)(v11 + 72);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1A61256C0;
  v54 = v13;
  v14 = v13 + v12;
  sub_1A6121E2C();
  v49 = (id)OUTLINED_FUNCTION_165();
  v48 = OUTLINED_FUNCTION_82((uint64_t)objc_msgSend(v49, sel_meters), (unint64_t *)&qword_1ED193C60);
  sub_1A6121CE8();
  v63 = (id)OUTLINED_FUNCTION_165();
  v62 = OUTLINED_FUNCTION_82((uint64_t)objc_msgSend(v63, sel_degrees), &qword_1ED193C50);
  sub_1A6121CE8();
  *(_QWORD *)&v4[*(int *)(v2 + 24)] = 0x4028000000000000;
  v61 = (id)OUTLINED_FUNCTION_165();
  v15 = OUTLINED_FUNCTION_82((uint64_t)objc_msgSend(v61, sel_celsius), qword_1ED1927C0);
  v16 = v51;
  v47 = v15;
  sub_1A6121CE8();
  v53 = v5;
  v60 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  v17 = v50;
  v45 = v9;
  v18 = v60(v14, v9, v50);
  v57 = v10;
  OUTLINED_FUNCTION_4_22(v18, v14 + *(int *)(v10 + 20));
  v19 = v14 + *(int *)(v10 + 24);
  v46 = v14;
  v59 = *(_QWORD *)(v59 + 32);
  ((void (*)(unint64_t, char *, uint64_t))v59)(v19, v16, v52);
  v20 = v14 + v58;
  sub_1A6121E2C();
  v21 = v49;
  v22 = objc_msgSend(v49, sel_meters);
  sub_1A6121CE8();
  v23 = objc_msgSend(v63, sel_degrees);
  v24 = v2;
  sub_1A6121CE8();
  *(_QWORD *)&v4[*(int *)(v2 + 24)] = 0x4020000000000000;
  v25 = objc_msgSend(v61, sel_celsius);
  v26 = (uint64_t)v16;
  sub_1A6121CE8();
  v27 = (uint64_t)v45;
  v28 = OUTLINED_FUNCTION_1_29(v20);
  v29 = v57;
  OUTLINED_FUNCTION_4_22(v28, v20 + *(int *)(v57 + 20));
  OUTLINED_FUNCTION_3_21(v20 + *(int *)(v29 + 24), v26);
  v30 = v46 + 2 * v58;
  sub_1A6121E2C();
  v31 = objc_msgSend(v21, sel_meters);
  sub_1A6121CE8();
  v32 = objc_msgSend(v63, sel_degrees);
  sub_1A6121CE8();
  *(_QWORD *)&v4[*(int *)(v24 + 24)] = 0x4028000000000000;
  v33 = objc_msgSend(v61, sel_celsius);
  sub_1A6121CE8();
  v34 = OUTLINED_FUNCTION_1_29(v30);
  v35 = v57;
  OUTLINED_FUNCTION_4_22(v34, v30 + *(int *)(v57 + 20));
  OUTLINED_FUNCTION_3_21(v30 + *(int *)(v35 + 24), v26);
  if (qword_1EE812C10 != -1)
    swift_once();
  v36 = __swift_project_value_buffer(v17, (uint64_t)qword_1EE844F50);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16);
  v37(v27, v36, v17);
  if (qword_1EE812C18 != -1)
    swift_once();
  v38 = __swift_project_value_buffer(v17, (uint64_t)qword_1EE844F68);
  v39 = (uint64_t)v55;
  v37((uint64_t)v55, v38, v17);
  v40 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED194050);
  v41 = v56;
  WeatherMetadata.init(date:expirationDate:latitude:longitude:)(v27, v39, (uint64_t)v56 + v40[13], 37.323, -122.0);
  if (qword_1EE812C78 != -1)
    swift_once();
  *v41 = v54;
  v42 = (uint64_t *)((char *)v41 + v40[14]);
  *v42 = 0;
  v42[1] = 0;
  *(uint64_t *)((char *)v41 + v40[15]) = 0;
  *(uint64_t *)((char *)v41 + v40[16]) = 0;
  v43 = (char *)v41 + v40[17];
  result = *(double *)&xmmword_1EE844FC0;
  *(_OWORD *)v43 = xmmword_1EE844FC0;
  v43[16] = 0;
  return result;
}

uint64_t sub_1A603E058(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Swell();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DayTemperatureSummary.init(date:lowTemperature:highTemperature:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v8 = OUTLINED_FUNCTION_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = OUTLINED_FUNCTION_3_22();
  v10 = a4 + *(int *)(v9 + 20);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v13(v10, a2, v11);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(a4 + *(int *)(v9 + 24), a3, v11);
}

uint64_t type metadata accessor for DayTemperatureSummary()
{
  uint64_t result;

  result = qword_1EE8141F8;
  if (!qword_1EE8141F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DayTemperatureSummary.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t DayTemperatureSummary.date.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t (*DayTemperatureSummary.date.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t DayTemperatureSummary.lowTemperature.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_3_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t DayTemperatureSummary.lowTemperature.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_3_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*DayTemperatureSummary.lowTemperature.modify())(double, double)
{
  OUTLINED_FUNCTION_3_22();
  return GEOLocationCoordinate2DMake;
}

uint64_t DayTemperatureSummary.highTemperature.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_3_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t DayTemperatureSummary.highTemperature.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_3_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*DayTemperatureSummary.highTemperature.modify())(double, double)
{
  OUTLINED_FUNCTION_3_22();
  return GEOLocationCoordinate2DMake;
}

uint64_t static DayTemperatureSummary.== infix(_:_:)()
{
  if ((sub_1A6121F1C() & 1) != 0 && (OUTLINED_FUNCTION_3_22(), sub_1A5FBFFD0(), (sub_1A6121CDC() & 1) != 0))
    return sub_1A6121CDC();
  else
    return 0;
}

uint64_t sub_1A603E390(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65706D6554776F6CLL && a2 == 0xEE00657275746172;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x706D655468676968 && a2 == 0xEF65727574617265)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1A6123CF8();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1A603E514(char a1)
{
  if (!a1)
    return 1702125924;
  if (a1 == 1)
    return 0x65706D6554776F6CLL;
  return 0x706D655468676968;
}

uint64_t sub_1A603E57C()
{
  char *v0;

  return sub_1A603E514(*v0);
}

uint64_t sub_1A603E584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A603E390(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A603E5A8()
{
  sub_1A603E76C();
  return sub_1A6123DE8();
}

uint64_t sub_1A603E5D0()
{
  sub_1A603E76C();
  return sub_1A6123DF4();
}

void DayTemperatureSummary.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814188);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A603E76C();
  sub_1A6123DD0();
  sub_1A6121F58();
  sub_1A5FD2980((uint64_t *)&qword_1ED191698);
  sub_1A6123CC8();
  if (!v1)
  {
    type metadata accessor for DayTemperatureSummary();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    sub_1A603EAEC(&qword_1ED191688);
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_3_1();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A603E76C()
{
  unint64_t result;

  result = qword_1EE814190;
  if (!qword_1EE814190)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D2EC, &type metadata for DayTemperatureSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814190);
  }
  return result;
}

void DayTemperatureSummary.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char v36;
  char v37;
  char v38;

  v26 = a2;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v28 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v27 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v30 = (char *)&v24 - v5;
  v6 = sub_1A6121F58();
  v29 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_0();
  v32 = v8 - v7;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814198);
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_0();
  v11 = v10 - v9;
  v12 = type metadata accessor for DayTemperatureSummary();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_0();
  v15 = v14 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A603E76C();
  v34 = v11;
  v16 = (uint64_t)v35;
  sub_1A6123DC4();
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v17 = v12;
    v25 = v15;
    v35 = a1;
    v18 = v30;
    v19 = v31;
    v38 = 0;
    sub_1A5FD2980((uint64_t *)&qword_1EE812DF0);
    v20 = v32;
    OUTLINED_FUNCTION_7_5();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v25, v20, v6);
    v37 = 1;
    sub_1A603EAEC(&qword_1EE812F28);
    OUTLINED_FUNCTION_7_5();
    v32 = v6;
    v21 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
    v21(v25 + *(int *)(v17 + 20), v18, v19);
    v36 = 2;
    v22 = v27;
    sub_1A6123C44();
    OUTLINED_FUNCTION_8_21();
    v23 = v25;
    v21(v25 + *(int *)(v17 + 24), v22, v19);
    sub_1A603EB28(v23, v26);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    sub_1A603EB6C(v23);
  }
  OUTLINED_FUNCTION_20();
}

uint64_t sub_1A603EAEC(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED192880);
    OUTLINED_FUNCTION_11_2();
  }
  return result;
}

uint64_t sub_1A603EB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DayTemperatureSummary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A603EB6C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DayTemperatureSummary();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A603EBA8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  DayTemperatureSummary.init(from:)(a1, a2);
}

void sub_1A603EBBC(_QWORD *a1)
{
  DayTemperatureSummary.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for DayTemperatureSummary(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6121F58();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v11);
  }
  return a1;
}

uint64_t destroy for DayTemperatureSummary(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v8(v5, v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + *(int *)(a2 + 24), v6);
}

uint64_t initializeWithCopy for DayTemperatureSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t assignWithCopy for DayTemperatureSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t initializeWithTake for DayTemperatureSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t assignWithTake for DayTemperatureSummary(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for DayTemperatureSummary()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A603EFE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    v8 = a1 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for DayTemperatureSummary()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A603F058(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    v10 = a1 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

void sub_1A603F0C8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A6121F58();
  if (v0 <= 0x3F)
  {
    sub_1A5FC6464();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for DayTemperatureSummary.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A603F198 + 4 * byte_1A612D175[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A603F1CC + 4 * byte_1A612D170[v4]))();
}

uint64_t sub_1A603F1CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A603F1D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A603F1DCLL);
  return result;
}

uint64_t sub_1A603F1E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A603F1F0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A603F1F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A603F1FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DayTemperatureSummary.CodingKeys()
{
  return &type metadata for DayTemperatureSummary.CodingKeys;
}

unint64_t sub_1A603F21C()
{
  unint64_t result;

  result = qword_1EE814238;
  if (!qword_1EE814238)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D2C4, &type metadata for DayTemperatureSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814238);
  }
  return result;
}

unint64_t sub_1A603F25C()
{
  unint64_t result;

  result = qword_1EE814240;
  if (!qword_1EE814240)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D234, &type metadata for DayTemperatureSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814240);
  }
  return result;
}

unint64_t sub_1A603F29C()
{
  unint64_t result;

  result = qword_1EE814248;
  if (!qword_1EE814248)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D25C, &type metadata for DayTemperatureSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814248);
  }
  return result;
}

uint64_t SnowfallAmount.init(amount:maximum:minimum:amountLiquidEquivalent:maximumLiquidEquivalent:minimumLiquidEquivalent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);

  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  OUTLINED_FUNCTION_7_25(a7, a1, v15, v16, v17, v18, v19, v20, v47, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32));
  v21 = (int *)OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_7_25(a7 + v21[5], a2, v22, v23, v24, v25, v26, v27, v48, v52);
  OUTLINED_FUNCTION_7_25(a7 + v21[6], a3, v28, v29, v30, v31, v32, v33, v49, v53);
  OUTLINED_FUNCTION_7_25(a7 + v21[7], a4, v34, v35, v36, v37, v38, v39, v50, v54);
  OUTLINED_FUNCTION_7_25(a7 + v21[8], a5, v40, v41, v42, v43, v44, v45, v51, v55);
  return v56(a7 + v21[9], a6, v14);
}

uint64_t type metadata accessor for SnowfallAmount()
{
  uint64_t result;

  result = qword_1ED194000;
  if (!qword_1ED194000)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static SnowfallAmount.== infix(_:_:)()
{
  sub_1A5FAC190();
  if ((sub_1A6121CDC() & 1) != 0
    && (OUTLINED_FUNCTION_4_23(), (OUTLINED_FUNCTION_5_24() & 1) != 0)
    && (OUTLINED_FUNCTION_5_24() & 1) != 0
    && (OUTLINED_FUNCTION_5_24() & 1) != 0
    && (OUTLINED_FUNCTION_5_24() & 1) != 0)
  {
    return sub_1A6121CDC();
  }
  else
  {
    return 0;
  }
}

uint64_t SnowfallAmount.amount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t SnowfallAmount.amount.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t (*SnowfallAmount.amount.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t SnowfallAmount.maximum.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t SnowfallAmount.maximum.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*SnowfallAmount.maximum.modify())(double, double)
{
  OUTLINED_FUNCTION_4_23();
  return GEOLocationCoordinate2DMake;
}

uint64_t SnowfallAmount.minimum.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t SnowfallAmount.minimum.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*SnowfallAmount.minimum.modify())(double, double)
{
  OUTLINED_FUNCTION_4_23();
  return GEOLocationCoordinate2DMake;
}

uint64_t SnowfallAmount.amountLiquidEquivalent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t SnowfallAmount.amountLiquidEquivalent.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*SnowfallAmount.amountLiquidEquivalent.modify())(double, double)
{
  OUTLINED_FUNCTION_4_23();
  return GEOLocationCoordinate2DMake;
}

uint64_t SnowfallAmount.maximumLiquidEquivalent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t SnowfallAmount.maximumLiquidEquivalent.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*SnowfallAmount.maximumLiquidEquivalent.modify())(double, double)
{
  OUTLINED_FUNCTION_4_23();
  return GEOLocationCoordinate2DMake;
}

uint64_t SnowfallAmount.minimumLiquidEquivalent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t SnowfallAmount.minimumLiquidEquivalent.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_4_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*SnowfallAmount.minimumLiquidEquivalent.modify())(double, double)
{
  OUTLINED_FUNCTION_4_23();
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1A603F7B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x746E756F6D61 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6D756D6978616DLL && a2 == 0xE700000000000000;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6D756D696E696DLL && a2 == 0xE700000000000000;
      if (v7 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x80000001A614F1A0 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000017 && a2 == 0x80000001A614F1C0 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000017 && a2 == 0x80000001A614F1E0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v8 = sub_1A6123CF8();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 5;
        else
          return 6;
      }
    }
  }
}

uint64_t sub_1A603FA10(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A603FA40 + 4 * byte_1A612D33C[a1]))(0x746E756F6D61, 0xE600000000000000);
}

uint64_t sub_1A603FA40()
{
  return 0x6D756D6978616DLL;
}

unint64_t sub_1A603FA68()
{
  return 0xD000000000000016;
}

unint64_t sub_1A603FA88()
{
  return 0xD000000000000017;
}

uint64_t sub_1A603FAB0()
{
  unsigned __int8 *v0;

  return sub_1A603FA10(*v0);
}

uint64_t sub_1A603FAB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A603F7B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A603FADC()
{
  sub_1A603FCC8();
  return sub_1A6123DE8();
}

uint64_t sub_1A603FB04()
{
  sub_1A603FCC8();
  return sub_1A6123DF4();
}

void SnowfallAmount.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814250);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A603FCC8();
  sub_1A6123DD0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  sub_1A5FCBBFC(&qword_1ED191678, MEMORY[0x1E0CAE340]);
  OUTLINED_FUNCTION_1_28();
  if (!v1)
  {
    type metadata accessor for SnowfallAmount();
    OUTLINED_FUNCTION_1_28();
    OUTLINED_FUNCTION_1_28();
    OUTLINED_FUNCTION_1_28();
    OUTLINED_FUNCTION_1_28();
    OUTLINED_FUNCTION_1_28();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A603FCC8()
{
  unint64_t result;

  result = qword_1EE814258;
  if (!qword_1EE814258)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D4CC, &type metadata for SnowfallAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814258);
  }
  return result;
}

void SnowfallAmount.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  int *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;

  v33 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v40 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v32 - v6;
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)&v32 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v32 - v13;
  MEMORY[0x1E0C80A78](v15);
  v38 = (char *)&v32 - v16;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814260);
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_0();
  v39 = (int *)type metadata accessor for SnowfallAmount();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_0();
  v43 = v18 - v17;
  v19 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1A603FCC8();
  v20 = v42;
  sub_1A6123DC4();
  if (v20)
  {
    OUTLINED_FUNCTION_17_4();
  }
  else
  {
    v21 = v14;
    v42 = v11;
    v49 = 0;
    v22 = sub_1A5FCBBFC(&qword_1EE812E58, MEMORY[0x1E0CAE358]);
    OUTLINED_FUNCTION_8_2();
    v23 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 32);
    v23(v43, v38, v3);
    v48 = 1;
    OUTLINED_FUNCTION_8_2();
    v24 = v43 + v39[5];
    v38 = (char *)v23;
    v23(v24, v21, v3);
    v47 = 2;
    v25 = (uint64_t)v42;
    v32 = v22;
    OUTLINED_FUNCTION_8_2();
    v26 = v43;
    OUTLINED_FUNCTION_10_23(v43 + v39[6], v25);
    v46 = 3;
    v27 = (uint64_t)v36;
    OUTLINED_FUNCTION_10_24();
    v28 = v26;
    v29 = v39;
    OUTLINED_FUNCTION_10_23(v28 + v39[7], v27);
    v45 = 4;
    v30 = (uint64_t)v35;
    OUTLINED_FUNCTION_10_24();
    OUTLINED_FUNCTION_10_23(v28 + v29[8], v30);
    v44 = 5;
    v31 = (uint64_t)v34;
    OUTLINED_FUNCTION_8_2();
    OUTLINED_FUNCTION_14_23();
    OUTLINED_FUNCTION_10_23(v28 + v29[9], v31);
    sub_1A6040180(v28, v33);
    OUTLINED_FUNCTION_17_4();
    sub_1A60401C4(v28);
  }
  OUTLINED_FUNCTION_20();
}

uint64_t sub_1A6040180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SnowfallAmount();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A60401C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SnowfallAmount();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A6040200(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  SnowfallAmount.init(from:)(a1, a2);
}

void sub_1A6040214(_QWORD *a1)
{
  SnowfallAmount.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for SnowfallAmount()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6040238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SnowfallAmount()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A604027C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SnowfallAmount.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A6040304 + 4 * byte_1A612D347[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A6040338 + 4 * byte_1A612D342[v4]))();
}

uint64_t sub_1A6040338(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6040340(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6040348);
  return result;
}

uint64_t sub_1A6040354(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A604035CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A6040360(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6040368(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SnowfallAmount.CodingKeys()
{
  return &type metadata for SnowfallAmount.CodingKeys;
}

unint64_t sub_1A6040388()
{
  unint64_t result;

  result = qword_1EE814268;
  if (!qword_1EE814268)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D4A4, &type metadata for SnowfallAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814268);
  }
  return result;
}

unint64_t sub_1A60403C8()
{
  unint64_t result;

  result = qword_1EE814270;
  if (!qword_1EE814270)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D414, &type metadata for SnowfallAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814270);
  }
  return result;
}

unint64_t sub_1A6040408()
{
  unint64_t result;

  result = qword_1EE814278;
  if (!qword_1EE814278)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D43C, &type metadata for SnowfallAmount.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814278);
  }
  return result;
}

uint64_t static TideEvent.mock()@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t result;

  sub_1A6121F28();
  v2 = objc_msgSend((id)objc_opt_self(), sel_feet);
  v3 = type metadata accessor for TideEvent();
  sub_1A5FAC190();
  result = sub_1A6121CE8();
  *(_BYTE *)(a1 + *(int *)(v3 + 20)) = 0;
  return result;
}

uint64_t MinuteCondition.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_31();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t MinuteCondition.date.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_30(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*MinuteCondition.date.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t MinuteCondition.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_28() + 20);
  return sub_1A5FAF43C(v3, a1);
}

uint64_t MinuteCondition.expirationDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_28() + 20);
  return sub_1A5FBF9A0(a1, v3);
}

double (*MinuteCondition.expirationDate.modify())(double, double)
{
  OUTLINED_FUNCTION_0_28();
  return GEOLocationCoordinate2DMake;
}

void MinuteCondition.shortDescription.getter()
{
  OUTLINED_FUNCTION_0_28();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_51();
}

void MinuteCondition.shortDescription.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_0_28();
  OUTLINED_FUNCTION_31_0();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_9();
}

double (*MinuteCondition.shortDescription.modify())(double, double)
{
  OUTLINED_FUNCTION_0_28();
  return GEOLocationCoordinate2DMake;
}

void MinuteCondition.longDescription.getter()
{
  OUTLINED_FUNCTION_0_28();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_31();
  OUTLINED_FUNCTION_51();
}

void MinuteCondition.longDescription.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_0_28();
  OUTLINED_FUNCTION_31_0();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_9();
}

double (*MinuteCondition.longDescription.modify())(double, double)
{
  OUTLINED_FUNCTION_0_28();
  return GEOLocationCoordinate2DMake;
}

uint64_t MinuteCondition.parameters.getter()
{
  OUTLINED_FUNCTION_0_28();
  return swift_bridgeObjectRetain();
}

void MinuteCondition.parameters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_28() + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_9();
}

double (*MinuteCondition.parameters.modify())(double, double)
{
  OUTLINED_FUNCTION_0_28();
  return GEOLocationCoordinate2DMake;
}

void MinuteCondition.token.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_28() + 36));
  OUTLINED_FUNCTION_51();
}

void MinuteCondition.token.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_28() + 36)) = v2;
  OUTLINED_FUNCTION_51();
}

double (*MinuteCondition.token.modify())(double, double)
{
  OUTLINED_FUNCTION_0_28();
  return GEOLocationCoordinate2DMake;
}

void MinuteCondition.shift.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_0_28();
  sub_1A5FAAF38(v1 + *(int *)(v3 + 40), a1, (uint64_t (*)(_QWORD))type metadata accessor for PrecipitationShift);
  OUTLINED_FUNCTION_51();
}

uint64_t MinuteCondition.shift.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_28() + 40);
  return sub_1A6040804(a1, v3);
}

double (*MinuteCondition.shift.modify())(double, double)
{
  OUTLINED_FUNCTION_0_28();
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1A6040804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PrecipitationShift();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void MinuteCondition.init(date:expirationDate:shortDescription:longDescription:parameters:token:shift:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  v16 = *a8;
  v17 = (int *)OUTLINED_FUNCTION_0_28();
  v18 = a9 + v17[5];
  v19 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_38_2(v18, 1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  sub_1A5FBF9A0(a2, v18);
  v20 = (_QWORD *)(a9 + v17[6]);
  *v20 = a3;
  v20[1] = a4;
  v21 = (_QWORD *)(a9 + v17[7]);
  *v21 = a5;
  v21[1] = a6;
  *(_QWORD *)(a9 + v17[8]) = a7;
  *(_BYTE *)(a9 + v17[9]) = v16;
  sub_1A5FB9BAC(a10, a9 + v17[10], (uint64_t (*)(_QWORD))type metadata accessor for PrecipitationShift);
}

void MinuteCondition.init(date:expirationDate:shortDescription:longDescription:parameters:token:)()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_6_2();
  v1 = v0;
  v3 = v2;
  v43 = v4;
  v44 = v5;
  v41 = v6;
  v42 = v7;
  v39 = v8;
  v10 = v9;
  v37 = v9;
  v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_151();
  v40 = v14;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v15);
  v17 = &v35[-v16];
  v18 = OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v19);
  v21 = &v35[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v22);
  v24 = &v35[-v23];
  v36 = *v1;
  v25 = (int *)OUTLINED_FUNCTION_0_28();
  v26 = v12 + v25[5];
  v27 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_10_1(v26);
  v38 = *(_QWORD *)(v27 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v12, v10, v27);
  v28 = v39;
  sub_1A5FAAFA8(v39, v26);
  v29 = (_QWORD *)(v12 + v25[6]);
  v30 = v42;
  *v29 = v41;
  v29[1] = v30;
  v31 = (_QWORD *)(v12 + v25[7]);
  v32 = v44;
  *v31 = v43;
  v31[1] = v32;
  *(_QWORD *)(v12 + v25[8]) = v3;
  *(_BYTE *)(v12 + v25[9]) = v36;
  OUTLINED_FUNCTION_10_1((uint64_t)v17);
  v33 = v40;
  OUTLINED_FUNCTION_10_1(v40);
  OUTLINED_FUNCTION_10_1((uint64_t)v21);
  v34 = (uint64_t)&v21[*(int *)(v18 + 20)];
  OUTLINED_FUNCTION_10_1(v34);
  sub_1A5FBF9A0((uint64_t)v17, (uint64_t)v21);
  sub_1A5FBF9A0(v33, v34);
  v21[*(int *)(v18 + 24)] = 100;
  sub_1A5FB9BAC((uint64_t)v21, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for PrecipitationShift);
  sub_1A5FBCA10(v28, &qword_1ED1929C8);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v27);
  sub_1A5FB9BAC((uint64_t)v24, v12 + v25[10], (uint64_t (*)(_QWORD))type metadata accessor for PrecipitationShift);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A6040B38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6974617269707865 && a2 == 0xEE00657461446E6FLL;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001A614F200 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x63736544676E6F6CLL && a2 == 0xEF6E6F6974706972;
      if (v7 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372;
        if (v8 || (sub_1A6123CF8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x6E656B6F74 && a2 == 0xE500000000000000;
          if (v9 || (sub_1A6123CF8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0x7466696873 && a2 == 0xE500000000000000)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v11 = sub_1A6123CF8();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 6;
            else
              return 7;
          }
        }
      }
    }
  }
}

uint64_t sub_1A6040E3C()
{
  return 7;
}

uint64_t sub_1A6040E44(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6040E70 + 4 * byte_1A612D520[a1]))(1702125924, 0xE400000000000000);
}

uint64_t sub_1A6040E70()
{
  return 0x6974617269707865;
}

unint64_t sub_1A6040E94()
{
  return 0xD000000000000010;
}

uint64_t sub_1A6040EB0()
{
  return 0x63736544676E6F6CLL;
}

uint64_t sub_1A6040ED4()
{
  return 0x6574656D61726170;
}

uint64_t sub_1A6040EF0()
{
  return 0x6E656B6F74;
}

uint64_t sub_1A6040F04()
{
  return 0x7466696873;
}

uint64_t sub_1A6040F18()
{
  unsigned __int8 *v0;

  return sub_1A6040E44(*v0);
}

uint64_t sub_1A6040F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6040B38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6040F44@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6040E3C();
  *a1 = result;
  return result;
}

uint64_t sub_1A6040F68()
{
  sub_1A60418EC();
  return sub_1A6123DE8();
}

uint64_t sub_1A6040F90()
{
  sub_1A60418EC();
  return sub_1A6123DF4();
}

void static MinuteCondition.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  BOOL v40;
  uint64_t v41;
  char v42;
  int *v43;
  uint64_t v44;

  OUTLINED_FUNCTION_6_2();
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_6();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_0();
  v10 = v9 - v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191C98);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_54_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_22_12();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v43 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v43 - v18;
  if ((sub_1A6121F1C() & 1) == 0)
    goto LABEL_11;
  v20 = OUTLINED_FUNCTION_0_28();
  v44 = v3;
  v21 = v20;
  sub_1A5FAF43C(v5 + *(int *)(v20 + 20), (uint64_t)v19);
  v43 = (int *)v21;
  v22 = *(int *)(v21 + 20);
  v23 = v44;
  sub_1A5FAF43C(v44 + v22, (uint64_t)v17);
  v24 = v0 + *(int *)(v11 + 48);
  sub_1A5FAF43C((uint64_t)v19, v0);
  sub_1A5FAF43C((uint64_t)v17, v24);
  OUTLINED_FUNCTION_2_17(v0);
  if (!v26)
  {
    sub_1A5FAF43C(v0, v1);
    OUTLINED_FUNCTION_2_17(v24);
    if (!v26)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v10, v24, v6);
      sub_1A5FAF484(&qword_1ED191CA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v27 = sub_1A61237B8();
      v28 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v28(v10, v6);
      OUTLINED_FUNCTION_23_13((uint64_t)v17);
      OUTLINED_FUNCTION_23_13((uint64_t)v19);
      v28(v1, v6);
      OUTLINED_FUNCTION_23_13(v0);
      if ((v27 & 1) == 0)
        goto LABEL_11;
      goto LABEL_13;
    }
    sub_1A5FBCA10((uint64_t)v17, &qword_1ED1929C8);
    sub_1A5FBCA10((uint64_t)v19, &qword_1ED1929C8);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
LABEL_10:
    OUTLINED_FUNCTION_30_12(v25, &qword_1ED191C98);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_23_13((uint64_t)v17);
  OUTLINED_FUNCTION_23_13((uint64_t)v19);
  v25 = OUTLINED_FUNCTION_2_17(v24);
  if (!v26)
    goto LABEL_10;
  OUTLINED_FUNCTION_30_12(v25, &qword_1ED1929C8);
LABEL_13:
  v29 = v23;
  v30 = v43;
  v31 = v43[6];
  v32 = *(_QWORD *)(v5 + v31);
  v33 = *(_QWORD *)(v5 + v31 + 8);
  v34 = (_QWORD *)(v29 + v31);
  v35 = v32 == *v34 && v33 == v34[1];
  if (v35 || (sub_1A6123CF8() & 1) != 0)
  {
    v36 = v30[7];
    v37 = *(_QWORD *)(v5 + v36);
    v38 = *(_QWORD *)(v5 + v36 + 8);
    v39 = (_QWORD *)(v44 + v36);
    v40 = v37 == *v39 && v38 == v39[1];
    if (v40 || (sub_1A6123CF8() & 1) != 0)
    {
      v41 = v44;
      sub_1A60412C4();
      if ((v42 & 1) != 0 && *(unsigned __int8 *)(v5 + v30[9]) == *(unsigned __int8 *)(v41 + v30[9]))
        static PrecipitationShift.== infix(_:_:)(v5 + v30[10], v41 + v30[10]);
    }
  }
LABEL_11:
  OUTLINED_FUNCTION_0_0();
}

void sub_1A60412C4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int v37;
  void *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  char v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  int v64;
  uint64_t v65;
  unint64_t v66;

  OUTLINED_FUNCTION_6_2();
  v2 = v1;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_6();
  v62 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_151();
  v61 = v7;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v55 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8142E8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_22_12();
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v55 - v13);
  if (v4 == v2)
  {
    v64 = 1;
LABEL_38:
    OUTLINED_FUNCTION_0_0();
    return;
  }
  if (*(_QWORD *)(v4 + 16) != *(_QWORD *)(v2 + 16))
  {
LABEL_37:
    v64 = 0;
    goto LABEL_38;
  }
  v63 = 0;
  v59 = v4;
  v60 = v2;
  OUTLINED_FUNCTION_43_5();
  v17 = v16 & v15;
  v57 = v4 + 64;
  v58 = (unint64_t)(v18 + 63) >> 6;
  v56 = v58 - 1;
  v19 = &unk_1EE8142F0;
  v65 = v5;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v21 = (v17 - 1) & v17;
      v22 = v62;
      v23 = v20 | (v63 << 6);
LABEL_6:
      v24 = *(_QWORD *)(v59 + 56);
      v25 = (_QWORD *)(*(_QWORD *)(v59 + 48) + 16 * v23);
      v26 = v25[1];
      *(_QWORD *)v0 = *v25;
      *((_QWORD *)v0 + 1) = v26;
      v27 = v24 + *(_QWORD *)(v22 + 72) * v23;
      v28 = OUTLINED_FUNCTION_33();
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(&v0[*(int *)(v28 + 48)], v27, v65);
      OUTLINED_FUNCTION_38_2((uint64_t)v0, 0);
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    v29 = v63 + 1;
    if (__OFADD__(v63, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    v22 = v62;
    if (v29 < v58)
    {
      v30 = *(_QWORD *)(v57 + 8 * v29);
      if (v30)
        goto LABEL_10;
      v31 = v63 + 2;
      ++v63;
      if (v29 + 1 < v58)
      {
        v30 = *(_QWORD *)(v57 + 8 * v31);
        if (v30)
          goto LABEL_13;
        v63 = v29 + 1;
        if (v29 + 2 < v58)
        {
          v30 = *(_QWORD *)(v57 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_10;
          }
          v63 = v29 + 2;
          if (v29 + 3 < v58)
          {
            v30 = *(_QWORD *)(v57 + 8 * (v29 + 3));
            if (v30)
            {
              v29 += 3;
              goto LABEL_10;
            }
            v31 = v29 + 4;
            v63 = v29 + 3;
            if (v29 + 4 < v58)
              break;
          }
        }
      }
    }
LABEL_27:
    v32 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_21((uint64_t)v0, v33, v34, v32);
    v21 = 0;
LABEL_28:
    sub_1A5FB43BC((uint64_t)v0, (uint64_t)v14, &qword_1EE8142E8);
    v35 = OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_2_17((uint64_t)v14);
    if (v36)
      v37 = 1;
    else
      v37 = 0;
    v64 = v37;
    if (v36)
      goto LABEL_38;
    v66 = v21;
    v38 = v19;
    v39 = v0;
    v40 = (char *)v14 + *(int *)(v35 + 48);
    v41 = *v14;
    v42 = v14[1];
    v43 = v14;
    v44 = v65;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v10, v40, v65);
    v45 = v41;
    v46 = v60;
    v47 = v10;
    v48 = sub_1A5FB4AC4(v45, v42);
    v50 = v49;
    swift_bridgeObjectRelease();
    if ((v50 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v47, v44);
      goto LABEL_37;
    }
    v51 = *(_QWORD *)(v46 + 56) + *(_QWORD *)(v22 + 72) * v48;
    v52 = v61;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v22 + 16))(v61, v51, v44);
    sub_1A5FAF484(&qword_1ED191CA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
    v53 = sub_1A61237B8();
    v54 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v54(v52, v44);
    v54((uint64_t)v47, v44);
    v10 = v47;
    v0 = v39;
    v14 = v43;
    v19 = v38;
    v17 = v66;
    if ((v53 & 1) == 0)
      goto LABEL_38;
  }
  v30 = *(_QWORD *)(v57 + 8 * v31);
  if (v30)
  {
LABEL_13:
    v29 = v31;
LABEL_10:
    v21 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v29 << 6);
    v63 = v29;
    goto LABEL_6;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v58)
    {
      v63 = v56;
      goto LABEL_27;
    }
    v30 = *(_QWORD *)(v57 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_10;
  }
LABEL_40:
  __break(1u);
}

void MinuteCondition.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814280);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_12();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A60418EC();
  sub_1A6123DD0();
  sub_1A6121F58();
  sub_1A5FAF484(&qword_1ED191698, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  OUTLINED_FUNCTION_13_0();
  if (!v1)
  {
    type metadata accessor for MinuteCondition();
    sub_1A6123C80();
    OUTLINED_FUNCTION_12_19(2);
    OUTLINED_FUNCTION_12_19(3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814290);
    sub_1A6041928();
    OUTLINED_FUNCTION_13_0();
    sub_1A60419AC();
    OUTLINED_FUNCTION_13_0();
    type metadata accessor for PrecipitationShift();
    sub_1A5FAF484(&qword_1EE8142A8, (uint64_t (*)(uint64_t))type metadata accessor for PrecipitationShift, (uint64_t)&protocol conformance descriptor for PrecipitationShift);
    OUTLINED_FUNCTION_13_0();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A60418EC()
{
  unint64_t result;

  result = qword_1EE814288;
  if (!qword_1EE814288)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D6EC, &type metadata for MinuteCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814288);
  }
  return result;
}

unint64_t sub_1A6041928()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EE814298;
  if (!qword_1EE814298)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE814290);
    sub_1A5FAF484(&qword_1ED191698, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1A85BB36C](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE814298);
  }
  return result;
}

unint64_t sub_1A60419AC()
{
  unint64_t result;

  result = qword_1EE8142A0;
  if (!qword_1EE8142A0)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for NextHourToken, &type metadata for NextHourToken);
    atomic_store(result, (unint64_t *)&qword_1EE8142A0);
  }
  return result;
}

void MinuteCondition.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;

  type metadata accessor for PrecipitationShift();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_12();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_0();
  v9 = v8 - v7;
  v10 = sub_1A6121F58();
  v23 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_27_9();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8142B0);
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_0();
  type metadata accessor for MinuteCondition();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_0();
  v27 = v13;
  v25 = v15 - v14;
  v28 = v15 - v14 + v13[5];
  __swift_storeEnumTagSinglePayload(v28, 1, 1, v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A60418EC();
  sub_1A6123DC4();
  if (v26)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1A5FBCA10(v28, &qword_1ED1929C8);
  }
  else
  {
    sub_1A5FAF484(&qword_1EE812DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    OUTLINED_FUNCTION_8_2();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v25, v3, v10);
    LOBYTE(v29) = 1;
    sub_1A6123BFC();
    sub_1A5FBF9A0(v9, v28);
    v16 = OUTLINED_FUNCTION_20_3(2);
    v17 = (uint64_t *)(v25 + v27[6]);
    *v17 = v16;
    v17[1] = v18;
    v19 = OUTLINED_FUNCTION_20_3(3);
    v20 = (uint64_t *)(v25 + v27[7]);
    *v20 = v19;
    v20[1] = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814290);
    sub_1A6041E34();
    OUTLINED_FUNCTION_8_2();
    *(_QWORD *)(v25 + v27[8]) = v29;
    sub_1A6041EB8();
    OUTLINED_FUNCTION_8_2();
    *(_BYTE *)(v25 + v27[9]) = 1;
    sub_1A5FAF484(&qword_1EE8142C8, (uint64_t (*)(uint64_t))type metadata accessor for PrecipitationShift, (uint64_t)&protocol conformance descriptor for PrecipitationShift);
    OUTLINED_FUNCTION_8_2();
    OUTLINED_FUNCTION_5_25();
    sub_1A5FB9BAC(v2, v25 + v27[10], (uint64_t (*)(_QWORD))type metadata accessor for PrecipitationShift);
    sub_1A5FAAF38(v25, a2, (uint64_t (*)(_QWORD))type metadata accessor for MinuteCondition);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1A5FAAED0(v25, (uint64_t (*)(_QWORD))type metadata accessor for MinuteCondition);
  }
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A6041E34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EE8142B8;
  if (!qword_1EE8142B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE814290);
    sub_1A5FAF484(&qword_1EE812DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1A85BB36C](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE8142B8);
  }
  return result;
}

unint64_t sub_1A6041EB8()
{
  unint64_t result;

  result = qword_1EE8142C0;
  if (!qword_1EE8142C0)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for NextHourToken, &type metadata for NextHourToken);
    atomic_store(result, (unint64_t *)&qword_1EE8142C0);
  }
  return result;
}

void sub_1A6041EF4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  MinuteCondition.init(from:)(a1, a2);
}

void sub_1A6041F08(_QWORD *a1)
{
  MinuteCondition.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for NextHourCondition(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6121F58();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v7))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = &a1[v14];
    v17 = &a2[v14];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = &a1[v15];
    v20 = &a2[v15];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = a3[9];
    *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
    a1[v22] = a2[v22];
    v23 = a3[10];
    v24 = &a1[v23];
    v25 = &a2[v23];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v7))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v8(v24, v25, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v7);
    }
    v27 = type metadata accessor for PrecipitationShift();
    v28 = *(int *)(v27 + 20);
    v29 = &v24[v28];
    v30 = &v25[v28];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v25[v28], 1, v7))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v8(v29, v30, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v7);
    }
    v24[*(int *)(v27 + 24)] = v25[*(int *)(v27 + 24)];
  }
  return a1;
}

uint64_t initializeWithCopy for NextHourCondition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = sub_1A6121F58();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  if (__swift_getEnumTagSinglePayload(a2 + v8, 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)(a1 + v13);
  v18 = (_QWORD *)(a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[10];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v6))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v22, (uint64_t)v23, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v6);
  }
  v25 = type metadata accessor for PrecipitationShift();
  v26 = *(int *)(v25 + 20);
  v27 = &v22[v26];
  v28 = &v23[v26];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v23[v26], 1, v6))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v27, (uint64_t)v28, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v6);
  }
  v22[*(int *)(v25 + 24)] = v23[*(int *)(v25 + 24)];
  return a1;
}

uint64_t assignWithCopy for NextHourCondition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;

  v6 = sub_1A6121F58();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1 + v9, 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v21 = a3[10];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v24 = __swift_getEnumTagSinglePayload(a1 + v21, 1, v6);
  v25 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v6);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v22, v23, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v6);
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  v8((uint64_t)v22, (uint64_t)v23, v6);
LABEL_13:
  v27 = type metadata accessor for PrecipitationShift();
  v28 = *(int *)(v27 + 20);
  v29 = &v22[v28];
  v30 = &v23[v28];
  v31 = __swift_getEnumTagSinglePayload((uint64_t)&v22[v28], 1, v6);
  v32 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v6);
  if (!v31)
  {
    if (!v32)
    {
      v8((uint64_t)v29, (uint64_t)v30, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_18:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v29, v30, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v6);
LABEL_19:
  v22[*(int *)(v27 + 24)] = v23[*(int *)(v27 + 24)];
  return a1;
}

uint64_t initializeWithTake for NextHourCondition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = sub_1A6121F58();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  if (__swift_getEnumTagSinglePayload(a2 + v8, 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[10];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v15, (uint64_t)v16, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v6);
  }
  v18 = type metadata accessor for PrecipitationShift();
  v19 = *(int *)(v18 + 20);
  v20 = &v15[v19];
  v21 = &v16[v19];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v16[v19], 1, v6))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v20, (uint64_t)v21, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v6);
  }
  v15[*(int *)(v18 + 24)] = v16[*(int *)(v18 + 24)];
  return a1;
}

uint64_t assignWithTake for NextHourCondition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  int v36;
  uint64_t v37;

  v6 = sub_1A6121F58();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1 + v9, 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v25 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v26 = (char *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = __swift_getEnumTagSinglePayload(a1 + v25, 1, v6);
  v29 = __swift_getEnumTagSinglePayload((uint64_t)v27, 1, v6);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v26, v27, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v26, v6);
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  v8((uint64_t)v26, (uint64_t)v27, v6);
LABEL_13:
  v31 = type metadata accessor for PrecipitationShift();
  v32 = *(int *)(v31 + 20);
  v33 = &v26[v32];
  v34 = &v27[v32];
  v35 = __swift_getEnumTagSinglePayload((uint64_t)&v26[v32], 1, v6);
  v36 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, v6);
  if (!v35)
  {
    if (!v36)
    {
      v8((uint64_t)v33, (uint64_t)v34, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v33, v6);
    goto LABEL_18;
  }
  if (v36)
  {
LABEL_18:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v33, v34, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v6);
LABEL_19:
  v26[*(int *)(v31 + 24)] = v27[*(int *)(v31 + 24)];
  return a1;
}

uint64_t getEnumTagSinglePayload for MinuteCondition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6042B14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v6 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v10 = a3[5];
LABEL_10:
    v8 = a1 + v10;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v7 = OUTLINED_FUNCTION_42_0();
    v10 = a3[10];
    goto LABEL_10;
  }
  v11 = *(_QWORD *)(a1 + a3[6] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for MinuteCondition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1A6042BE0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
    {
      v9 = v11;
      v12 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[6] + 8) = (a2 - 1);
        OUTLINED_FUNCTION_9();
        return;
      }
      v9 = OUTLINED_FUNCTION_42_0();
      v12 = a4[10];
    }
    v10 = a1 + v12;
  }
  __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t getEnumTagSinglePayload for MinuteCondition.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MinuteCondition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1A6042D68 + 4 * byte_1A612D52C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1A6042D9C + 4 * byte_1A612D527[v4]))();
}

uint64_t sub_1A6042D9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6042DA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6042DACLL);
  return result;
}

uint64_t sub_1A6042DB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6042DC0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1A6042DC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6042DCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MinuteCondition.CodingKeys()
{
  return &type metadata for MinuteCondition.CodingKeys;
}

unint64_t sub_1A6042DEC()
{
  unint64_t result;

  result = qword_1EE8142D0;
  if (!qword_1EE8142D0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D6C4, &type metadata for MinuteCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8142D0);
  }
  return result;
}

unint64_t sub_1A6042E2C()
{
  unint64_t result;

  result = qword_1EE8142D8;
  if (!qword_1EE8142D8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D634, &type metadata for MinuteCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8142D8);
  }
  return result;
}

unint64_t sub_1A6042E6C()
{
  unint64_t result;

  result = qword_1EE8142E0;
  if (!qword_1EE8142E0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612D65C, &type metadata for MinuteCondition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8142E0);
  }
  return result;
}

uint64_t TrendBaseline.init(kind:value:startDate:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_1A6121CF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v11 = a4 + *(int *)(type metadata accessor for TrendBaseline(0, a3, v9, v10) + 32);
  v12 = OUTLINED_FUNCTION_6();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a2, v12);
}

uint64_t type metadata accessor for TrendBaseline(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TrendBaseline);
}

uint64_t static TrendBaseline.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  if ((sub_1A6121CDC() & 1) == 0)
    return 0;
  type metadata accessor for TrendBaseline(0, a3, v4, v5);
  return sub_1A6121F1C();
}

uint64_t TrendBaseline.Kind.hash(into:)()
{
  return sub_1A6123D70();
}

uint64_t static TrendBaseline.Kind.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1A6042FC8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1851876717 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1A6123CF8();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1A604303C()
{
  return 1851876717;
}

uint64_t sub_1A604304C()
{
  return sub_1A5FCF784();
}

uint64_t sub_1A6043054()
{
  return sub_1A6004A08();
}

uint64_t sub_1A604305C()
{
  return sub_1A6004954();
}

uint64_t sub_1A6043064()
{
  sub_1A6123D64();
  sub_1A6004954();
  return sub_1A6123D88();
}

uint64_t sub_1A60430A4()
{
  return sub_1A604303C();
}

uint64_t sub_1A60430AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6042FC8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A60430D8()
{
  return sub_1A5FC6EE0();
}

uint64_t sub_1A60430F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5FCF784();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1A6043120(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A612DB38, a1);
  return sub_1A6123DE8();
}

uint64_t sub_1A6043154(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A612DB38, a1);
  return sub_1A6123DF4();
}

uint64_t sub_1A6043188()
{
  return sub_1A5FF4C88();
}

uint64_t sub_1A6043190@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5FF4C6C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1A60431BC(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A612DB88, a1);
  return sub_1A6123DE8();
}

uint64_t sub_1A60431F0(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A612DB88, a1);
  return sub_1A6123DF4();
}

void TrendBaseline.Kind.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_13_1();
  v1 = v0;
  v3 = *(_QWORD *)(v2 + 16);
  v6 = type metadata accessor for TrendBaseline.Kind.MeanCodingKeys(255, v3, v4, v5);
  v19 = MEMORY[0x1A85BB36C](&unk_1A612DB88, v6);
  v20 = sub_1A6123CD4();
  v18 = *(_QWORD *)(v20 - 8);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - v8;
  v12 = type metadata accessor for TrendBaseline.Kind.CodingKeys(255, v3, v10, v11);
  MEMORY[0x1A85BB36C](&unk_1A612DB38, v12);
  v13 = sub_1A6123CD4();
  v17 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v17 - v15;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  OUTLINED_FUNCTION_10_25();
  sub_1A6123C68();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v20);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v16, v13);
  OUTLINED_FUNCTION_20();
}

uint64_t type metadata accessor for TrendBaseline.Kind.MeanCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TrendBaseline.Kind.MeanCodingKeys);
}

uint64_t type metadata accessor for TrendBaseline.Kind.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TrendBaseline.Kind.CodingKeys);
}

uint64_t TrendBaseline.Kind.hashValue.getter()
{
  sub_1A6123D64();
  sub_1A6123D70();
  return sub_1A6123D88();
}

void TrendBaseline.Kind.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[18];

  OUTLINED_FUNCTION_13_1();
  v2 = v1;
  v4 = v3;
  v7 = type metadata accessor for TrendBaseline.Kind.MeanCodingKeys(255, v1, v5, v6);
  v15[8] = MEMORY[0x1A85BB36C](&unk_1A612DB88, v7);
  v8 = sub_1A6123C5C();
  v15[5] = *(_QWORD *)(v8 - 8);
  v15[6] = v8;
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v9);
  v15[7] = (char *)v15 - v10;
  v13 = type metadata accessor for TrendBaseline.Kind.CodingKeys(255, v2, v11, v12);
  MEMORY[0x1A85BB36C](&unk_1A612DB38, v13);
  v15[9] = sub_1A6123C5C();
  OUTLINED_FUNCTION_14_24();
  MEMORY[0x1E0C80A78](v14);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1A6123DC4();
  if (!v0)
  {
    v15[3] = v7;
    v15[4] = v2;
    v15[10] = sub_1A6123C50();
    sub_1A6123908();
    OUTLINED_FUNCTION_4_24();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  OUTLINED_FUNCTION_20();
}

uint64_t sub_1A60436C4()
{
  return TrendBaseline.Kind.hashValue.getter();
}

uint64_t sub_1A60436D8()
{
  return TrendBaseline.Kind.hash(into:)();
}

uint64_t sub_1A60436EC()
{
  sub_1A6123D64();
  TrendBaseline.Kind.hash(into:)();
  return sub_1A6123D88();
}

uint64_t type metadata accessor for TrendBaseline.Kind(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TrendBaseline.Kind);
}

void sub_1A6043730()
{
  TrendBaseline.Kind.init(from:)();
}

void sub_1A6043748()
{
  TrendBaseline.Kind.encode(to:)();
}

uint64_t TrendBaseline.value.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_9_1();
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t TrendBaseline.startDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t sub_1A60437AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1684957547 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1A6123CF8();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1A60438EC(char a1)
{
  if (!a1)
    return 1684957547;
  if (a1 == 1)
    return 0x65756C6176;
  return 0x7461447472617473;
}

uint64_t sub_1A604393C()
{
  char *v0;

  return sub_1A60438EC(*v0);
}

uint64_t sub_1A6043948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A60437AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6043970(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A612DAE8, a1);
  return sub_1A6123DE8();
}

uint64_t sub_1A60439A4(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A612DAE8, a1);
  return sub_1A6123DF4();
}

void TrendBaseline.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_13_1();
  v1 = v0;
  v3 = *(_QWORD *)(v2 + 16);
  v6 = type metadata accessor for TrendBaseline.CodingKeys(255, v3, v4, v5);
  MEMORY[0x1A85BB36C](&unk_1A612DAE8, v6);
  sub_1A6123CD4();
  OUTLINED_FUNCTION_14_24();
  MEMORY[0x1E0C80A78](v7);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  OUTLINED_FUNCTION_10_25();
  type metadata accessor for TrendBaseline.Kind(0, v3, v8, v9);
  OUTLINED_FUNCTION_4_24();
}

void sub_1A6043AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 - 88);
  sub_1A6123CC8();
  if (!v4)
  {
    *(_BYTE *)(v3 - 66) = 1;
    sub_1A6121CF4();
    OUTLINED_FUNCTION_4_24();
  }
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  OUTLINED_FUNCTION_20();
}

uint64_t type metadata accessor for TrendBaseline.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TrendBaseline.CodingKeys);
}

void TrendBaseline.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_13_1();
  v1 = v0;
  v9[3] = v2;
  v10 = sub_1A6121F58();
  v9[2] = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v9[4] = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A6121CF4();
  v12 = *(_QWORD *)(v4 - 8);
  v13 = v4;
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v5);
  v11 = (char *)v9 - v6;
  type metadata accessor for TrendBaseline.CodingKeys(255, v1, v7, v8);
  OUTLINED_FUNCTION_4_24();
}

void sub_1A6043C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v12 = sub_1A6123C5C();
  *(_QWORD *)(v11 - 96) = v12;
  *(_QWORD *)(v11 - 144) = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_6_1();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&a9 - v14;
  *(_QWORD *)(v11 - 112) = v9;
  v18 = type metadata accessor for TrendBaseline(0, v9, v16, v17);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  *(_QWORD *)(v11 - 104) = v15;
  v20 = *(_QWORD *)(v11 - 88);
  sub_1A6123DC4();
  if (!v20)
  {
    *(_QWORD *)(v11 - 184) = v19;
    *(_QWORD *)(v11 - 88) = v18;
    type metadata accessor for TrendBaseline.Kind(0, *(_QWORD *)(v11 - 112), v21, v22);
    *(_BYTE *)(v11 - 65) = 0;
    OUTLINED_FUNCTION_4_24();
  }
  OUTLINED_FUNCTION_11_21();
  OUTLINED_FUNCTION_20();
}

void sub_1A6043E70()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A6043E80()
{
  TrendBaseline.init(from:)();
}

void sub_1A6043E98()
{
  TrendBaseline.encode(to:)();
}

uint64_t sub_1A6043EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static TrendBaseline.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t sub_1A6043EB4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A6121CF4();
  if (v1 <= 0x3F)
  {
    result = sub_1A6121F58();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1A6043F4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6121CF4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A6121F58();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1A6043FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1A6121CF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 32);
  v6 = sub_1A6121F58();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1A6044058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A6121CF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1A60440D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A6121CF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1A6044158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A6121CF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1A60441D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A6121CF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1A6044258()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6044264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_9_1();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_6();
    v8 = a1 + *(int *)(a3 + 32);
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t sub_1A60442C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A60442D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_9_1();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = OUTLINED_FUNCTION_6();
    v10 = a1 + *(int *)(a4 + 32);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t sub_1A6044344(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A6044390 + 4 * byte_1A612D745[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A60443C4 + 4 * byte_1A612D740[v4]))();
}

uint64_t sub_1A60443C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60443CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A60443D4);
  return result;
}

uint64_t sub_1A60443E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A60443E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A60443EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60443F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6044400(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A6044440 + 4 * byte_1A612D74A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A6044460 + 4 * byte_1A612D74F[v4]))();
}

_BYTE *sub_1A6044440(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A6044460(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A6044468(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A6044470(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A6044478(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A6044480(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1A604448C()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A604449C()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A60444AC()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A60444BC()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A60444CC()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A60444DC()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A60444EC()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A60444FC()
{
  JUMPOUT(0x1A85BB36CLL);
}

uint64_t CLLocationCoordinate2D.solarEvents(referenceDate:timeZone:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char isDayLightForLocation;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v53;

  v50 = a1;
  v47 = a2;
  v53 = *MEMORY[0x1E0C80C00];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  v7 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v7);
  v12 = (char *)&v42 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v42 - v13;
  v15 = sub_1A6121F58();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v15);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = ((uint64_t (*)(uint64_t))MEMORY[0x1E0C80A78])(v17);
  v22 = (char *)&v42 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v42 - v23;
  v25 = sub_1A6122060();
  v43 = *(_QWORD *)(v25 - 8);
  v44 = v25;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = GEOLocationCoordinate2DMake(a3, a4);
  v30 = v29;
  v51 = v28;
  v52 = v29;
  sub_1A6121FF4();
  v42 = v27;
  sub_1A6121FE8();
  v45 = v24;
  sub_1A6121E20();
  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D27558]), sel_initWithLocation_time_altitudeInDegrees_accuracy_, v28, v30, v31, *MEMORY[0x1E0D26430], 60.0);
  v48 = v14;
  OUTLINED_FUNCTION_0_29((uint64_t)v14, 1);
  v49 = v12;
  OUTLINED_FUNCTION_0_29((uint64_t)v12, 1);
  objc_msgSend(v32, sel_nextEventOfType_, 8);
  objc_msgSend(v32, sel_nextEventOfType_, 32);
  sub_1A6121E14();
  sub_1A6121E14();
  v46 = v16;
  OUTLINED_FUNCTION_79((uint64_t)v9, (uint64_t)v22);
  v33 = OUTLINED_FUNCTION_3_24();
  LOBYTE(v27) = sub_1A60449BC(v33);
  OUTLINED_FUNCTION_4_25();
  if ((v27 & 1) != 0)
  {
    v34 = (uint64_t)v48;
    sub_1A5FD1B38((uint64_t)v48);
    OUTLINED_FUNCTION_79(v34, (uint64_t)v22);
    OUTLINED_FUNCTION_0_29(v34, 0);
  }
  OUTLINED_FUNCTION_79((uint64_t)v9, (uint64_t)v19);
  v35 = OUTLINED_FUNCTION_3_24();
  v36 = sub_1A60449BC(v35);
  OUTLINED_FUNCTION_4_25();
  if ((v36 & 1) != 0)
  {
    v37 = (uint64_t)v49;
    OUTLINED_FUNCTION_4_25();
    OUTLINED_FUNCTION_79(v37, (uint64_t)v19);
    OUTLINED_FUNCTION_0_29(v37, 0);
  }
  sub_1A6121E20();
  isDayLightForLocation = geo_isDayLightForLocation();

  OUTLINED_FUNCTION_5_26((uint64_t)v19);
  OUTLINED_FUNCTION_5_26((uint64_t)v22);
  OUTLINED_FUNCTION_5_26((uint64_t)v45);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
  v39 = v47;
  sub_1A6044B34((uint64_t)v48, v47);
  v40 = OUTLINED_FUNCTION_1_30();
  result = sub_1A6044B34((uint64_t)v49, v39 + *(int *)(v40 + 20));
  *(_BYTE *)(v39 + *(int *)(v40 + 24)) = isDayLightForLocation;
  return result;
}

uint64_t CLLocationCoordinate2D.SolarEvents.sunrise.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A5FAF43C(v1, a1);
}

uint64_t CLLocationCoordinate2D.SolarEvents.sunrise.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5FBF9A0(a1, v1);
}

uint64_t (*CLLocationCoordinate2D.SolarEvents.sunrise.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t CLLocationCoordinate2D.SolarEvents.sunset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_1_30() + 20);
  return sub_1A5FAF43C(v3, a1);
}

uint64_t CLLocationCoordinate2D.SolarEvents.sunset.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_1_30() + 20);
  return sub_1A5FBF9A0(a1, v3);
}

double (*CLLocationCoordinate2D.SolarEvents.sunset.modify())(double, double)
{
  OUTLINED_FUNCTION_1_30();
  return GEOLocationCoordinate2DMake;
}

uint64_t CLLocationCoordinate2D.SolarEvents.isDaylight.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_1_30() + 24));
}

uint64_t CLLocationCoordinate2D.SolarEvents.isDaylight.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_1_30();
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

double (*CLLocationCoordinate2D.SolarEvents.isDaylight.modify())(double, double)
{
  OUTLINED_FUNCTION_1_30();
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1A60449BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v15;

  v2 = sub_1A6122060();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A6121F58();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5FAF43C(a1, (uint64_t)v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    sub_1A5FD1B38((uint64_t)v8);
    v13 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_1A6121FF4();
    v13 = sub_1A6122024();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v13 & 1;
}

uint64_t sub_1A6044B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for PrecipitationShift(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6121F58();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v10, 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for PrecipitationShift(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = sub_1A6121F58();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  result = __swift_getEnumTagSinglePayload(v5, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v5, v4);
  return result;
}

char *initializeWithCopy for PrecipitationShift(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_1A6121F58();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithCopy for PrecipitationShift(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1A6121F58();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    v16 = *(_QWORD *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *initializeWithTake for PrecipitationShift(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_1A6121F58();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for PrecipitationShift(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1A6121F58();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    v16 = *(_QWORD *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t _s11SolarEventsVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6045330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v8 >= 2)
    return ((v8 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t _s11SolarEventsVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A60453C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t HourTide.init(date:height:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(OUTLINED_FUNCTION_2_28() + 20);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
}

uint64_t type metadata accessor for HourTide()
{
  uint64_t result;

  result = qword_1EE8144E8;
  if (!qword_1EE8144E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t HourTide.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t HourTide.date.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t (*HourTide.date.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t HourTide.height.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_2_28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t HourTide.height.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_2_28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*HourTide.height.modify())(double, double)
{
  OUTLINED_FUNCTION_2_28();
  return GEOLocationCoordinate2DMake;
}

uint64_t static HourTide.== infix(_:_:)()
{
  if ((sub_1A6121F1C() & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_2_28();
  sub_1A5FAC190();
  return sub_1A6121CDC();
}

uint64_t sub_1A604562C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1A6123CF8();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A6045700(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746867696568;
  else
    return 1702125924;
}

uint64_t sub_1A604572C()
{
  char *v0;

  return sub_1A6045700(*v0);
}

uint64_t sub_1A6045734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A604562C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6045758()
{
  sub_1A6045900();
  return sub_1A6123DE8();
}

uint64_t sub_1A6045780()
{
  sub_1A6045900();
  return sub_1A6123DF4();
}

uint64_t HourTide.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814478);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_12();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6045900();
  sub_1A6123DD0();
  sub_1A6121F58();
  sub_1A5FD2980((uint64_t *)&qword_1ED191698);
  OUTLINED_FUNCTION_4();
  if (!v1)
  {
    type metadata accessor for HourTide();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    sub_1A6045BBC((uint64_t *)&qword_1ED191678);
    OUTLINED_FUNCTION_4();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_1A6045900()
{
  unint64_t result;

  result = qword_1EE814480;
  if (!qword_1EE814480)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612DD7C, &type metadata for HourTide.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814480);
  }
  return result;
}

uint64_t HourTide.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v20 = a2;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v19 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_11_0();
  v22 = v4;
  v25 = sub_1A6121F58();
  v21 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_11_0();
  v24 = v5;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814488);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_12();
  v7 = type metadata accessor for HourTide();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6045900();
  sub_1A6123DC4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = v7;
  v17 = a1;
  v18 = v6;
  v11 = v21;
  v10 = v22;
  v12 = v23;
  v28 = 0;
  sub_1A5FD2980((uint64_t *)&qword_1EE812DF0);
  v13 = v24;
  OUTLINED_FUNCTION_8_23();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v9, v13, v25);
  v27 = 1;
  sub_1A6045BBC((uint64_t *)&qword_1EE812E58);
  OUTLINED_FUNCTION_8_23();
  OUTLINED_FUNCTION_1_31();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(&v9[*(int *)(v16 + 20)], v10, v12);
  sub_1A6045BF8((uint64_t)v9, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_1A6045C3C((uint64_t)v9);
}

uint64_t sub_1A6045BBC(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED192980);
    OUTLINED_FUNCTION_11_2();
  }
  return result;
}

uint64_t sub_1A6045BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HourTide();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6045C3C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HourTide();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A6045C78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HourTide.init(from:)(a1, a2);
}

uint64_t sub_1A6045C8C(_QWORD *a1)
{
  return HourTide.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for HourTide(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6121F58();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for HourTide(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for HourTide(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for HourTide(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for HourTide(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for HourTide(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for HourTide()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6045FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    v8 = a1 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for HourTide()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6046030(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    v10 = a1 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

void sub_1A60460A0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A6121F58();
  if (v0 <= 0x3F)
  {
    sub_1A5FC64B8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for HourTide.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A6046170 + 4 * byte_1A612DC1D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A60461A4 + 4 * byte_1A612DC18[v4]))();
}

uint64_t sub_1A60461A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60461AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A60461B4);
  return result;
}

uint64_t sub_1A60461C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A60461C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A60461CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60461D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HourTide.CodingKeys()
{
  return &type metadata for HourTide.CodingKeys;
}

unint64_t sub_1A60461F4()
{
  unint64_t result;

  result = qword_1EE814520;
  if (!qword_1EE814520)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612DD54, &type metadata for HourTide.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814520);
  }
  return result;
}

unint64_t sub_1A6046234()
{
  unint64_t result;

  result = qword_1EE814528;
  if (!qword_1EE814528)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612DCC4, &type metadata for HourTide.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814528);
  }
  return result;
}

unint64_t sub_1A6046274()
{
  unint64_t result;

  result = qword_1EE814530;
  if (!qword_1EE814530)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612DCEC, &type metadata for HourTide.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814530);
  }
  return result;
}

unint64_t Forecast.debugDescription.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;
  char v51;
  int v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  int v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  char v69;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  int v75;
  char v76;
  uint64_t (*v77)();
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)();
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190B80);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_151();
  v88 = v3;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_53();
  v95 = v5;
  v99 = type metadata accessor for DayWeather();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_151();
  v87 = v7;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_53();
  v90 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190B88);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_151();
  v92 = v11;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_53();
  v98 = v13;
  v100 = type metadata accessor for HourWeather();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_151();
  v86 = v15;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_53();
  v93 = v17;
  v18 = *(_QWORD *)(a1 + 16);
  v104 = sub_1A6123A7C();
  v19 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  OUTLINED_FUNCTION_151();
  v89 = v20;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_34_0();
  v96 = v22;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_34_0();
  v91 = v24;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_34_0();
  v97 = v26;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_34_0();
  v94 = v28;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v84 - v30;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED190B90);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v84 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v84 - v36;
  v38 = type metadata accessor for MinuteWeather();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v84 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x1E0C80A78](v42);
  v45 = (char *)&v84 - v44;
  v101 = MEMORY[0x1A85BB36C](&protocol conformance descriptor for Forecast<A>, a1, v43);
  v102 = a1;
  sub_1A61239EC();
  OUTLINED_FUNCTION_26_2((uint64_t)v31, 1, v18);
  v103 = v19;
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v31, v104);
    OUTLINED_FUNCTION_19_15();
    v46 = v102;
    v47 = v100;
  }
  else
  {
    v48 = v94;
    v85 = v34;
    v84 = v41;
    v49 = OUTLINED_FUNCTION_15_1();
    __swift_storeEnumTagSinglePayload((uint64_t)v37, v49 ^ 1u, 1, v38);
    OUTLINED_FUNCTION_26_2((uint64_t)v37, 1, v38);
    if (v50)
    {
      v46 = v102;
      v47 = v100;
    }
    else
    {
      sub_1A601ADD4((uint64_t)v37, (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for MinuteWeather);
      MEMORY[0x1A85BB36C](&protocol conformance descriptor for Forecast<A>, v102);
      sub_1A61237A0();
      OUTLINED_FUNCTION_6_3(v48);
      if (v51)
      {
        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v48, v104);
        v37 = v85;
        OUTLINED_FUNCTION_19_15();
        v47 = v100;
      }
      else
      {
        v37 = v85;
        v52 = OUTLINED_FUNCTION_15_1();
        __swift_storeEnumTagSinglePayload((uint64_t)v37, v52 ^ 1u, 1, v38);
        OUTLINED_FUNCTION_26_2((uint64_t)v37, 1, v38);
        v47 = v100;
        if (!v53)
        {
          v77 = type metadata accessor for MinuteWeather;
          v78 = (uint64_t)v84;
          sub_1A601ADD4((uint64_t)v37, (uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for MinuteWeather);
          OUTLINED_FUNCTION_26_11();
          sub_1A6123B18();
          sub_1A6123848();
          v105 = sub_1A61239E0();
          OUTLINED_FUNCTION_31_8();
          OUTLINED_FUNCTION_0_30();
          OUTLINED_FUNCTION_27();
          OUTLINED_FUNCTION_1_32();
          OUTLINED_FUNCTION_6();
          sub_1A6046F28();
          OUTLINED_FUNCTION_2_29();
          OUTLINED_FUNCTION_0_30();
          OUTLINED_FUNCTION_114_0();
          OUTLINED_FUNCTION_12_20();
          OUTLINED_FUNCTION_2_29();
          OUTLINED_FUNCTION_0_30();
          OUTLINED_FUNCTION_27();
          OUTLINED_FUNCTION_23_14();
          OUTLINED_FUNCTION_32_9(v45[*(int *)(v38 + 20)]);
          OUTLINED_FUNCTION_0_30();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_23_14();
          OUTLINED_FUNCTION_33();
          OUTLINED_FUNCTION_30_13(&qword_1ED190F50);
          OUTLINED_FUNCTION_2_29();
          OUTLINED_FUNCTION_0_30();
          OUTLINED_FUNCTION_114_0();
          OUTLINED_FUNCTION_4_26();
          OUTLINED_FUNCTION_32_9(*(_BYTE *)(v78 + *(int *)(v38 + 20)));
          OUTLINED_FUNCTION_0_30();
          OUTLINED_FUNCTION_114_0();
          OUTLINED_FUNCTION_4_26();
          OUTLINED_FUNCTION_2_29();
          OUTLINED_FUNCTION_0_30();
          OUTLINED_FUNCTION_27();
          v79 = v106;
          sub_1A5FA1740(v78, (uint64_t (*)(_QWORD))type metadata accessor for MinuteWeather);
          v80 = (uint64_t)v45;
LABEL_39:
          v83 = v77;
          goto LABEL_40;
        }
      }
      sub_1A5FA1740((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for MinuteWeather);
      v46 = v102;
    }
  }
  v55 = v97;
  v54 = v98;
  sub_1A5FAFD58((uint64_t)v37, qword_1ED190B90);
  OUTLINED_FUNCTION_18_16();
  OUTLINED_FUNCTION_6_3(v55);
  if (v50)
  {
    v56 = v104;
    OUTLINED_FUNCTION_24_14(v103);
    OUTLINED_FUNCTION_14_25(v54, 1);
    v57 = v54;
    v58 = v99;
  }
  else
  {
    v59 = OUTLINED_FUNCTION_15_1();
    OUTLINED_FUNCTION_14_25(v54, v59 ^ 1u);
    OUTLINED_FUNCTION_26_2(v54, 1, v47);
    v58 = v99;
    if (v60)
    {
      v57 = v54;
    }
    else
    {
      v61 = v93;
      sub_1A601ADD4(v54, v93, (uint64_t (*)(_QWORD))type metadata accessor for HourWeather);
      MEMORY[0x1A85BB36C](&protocol conformance descriptor for Forecast<A>, v46);
      v62 = v91;
      OUTLINED_FUNCTION_20_14();
      OUTLINED_FUNCTION_6_3(v62);
      if (v63)
      {
        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v62, v104);
        v57 = v92;
        OUTLINED_FUNCTION_14_25(v92, 1);
      }
      else
      {
        v57 = v92;
        v64 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_14_25(v57, v64 ^ 1u);
        OUTLINED_FUNCTION_26_2(v57, 1, v47);
        if (!v65)
        {
          v77 = type metadata accessor for HourWeather;
          v81 = v86;
          sub_1A601ADD4(v57, v86, (uint64_t (*)(_QWORD))type metadata accessor for HourWeather);
          OUTLINED_FUNCTION_26_11();
          sub_1A6123B18();
          OUTLINED_FUNCTION_34_9();
          v105 = sub_1A61239E0();
          OUTLINED_FUNCTION_31_8();
          OUTLINED_FUNCTION_0_30();
          OUTLINED_FUNCTION_27();
          OUTLINED_FUNCTION_1_32();
          OUTLINED_FUNCTION_6();
          sub_1A6046F28();
          OUTLINED_FUNCTION_2_29();
          OUTLINED_FUNCTION_0_30();
          OUTLINED_FUNCTION_77_0();
          OUTLINED_FUNCTION_12_20();
          OUTLINED_FUNCTION_2_29();
          OUTLINED_FUNCTION_0_30();
          OUTLINED_FUNCTION_27();
          OUTLINED_FUNCTION_13_22();
          OUTLINED_FUNCTION_10_26(*(_BYTE *)(v61 + *(int *)(v47 + 40)));
          OUTLINED_FUNCTION_0_30();
          OUTLINED_FUNCTION_27();
          OUTLINED_FUNCTION_13_22();
          OUTLINED_FUNCTION_33();
          OUTLINED_FUNCTION_30_13(&qword_1ED190B50);
          OUTLINED_FUNCTION_2_29();
          OUTLINED_FUNCTION_0_30();
          OUTLINED_FUNCTION_77_0();
          OUTLINED_FUNCTION_4_26();
          OUTLINED_FUNCTION_10_26(*(_BYTE *)(v81 + *(int *)(v47 + 40)));
          OUTLINED_FUNCTION_0_30();
          OUTLINED_FUNCTION_77_0();
          OUTLINED_FUNCTION_13_22();
          OUTLINED_FUNCTION_2_29();
          OUTLINED_FUNCTION_0_30();
          OUTLINED_FUNCTION_27();
          v79 = v106;
          sub_1A5FA1740(v81, (uint64_t (*)(_QWORD))type metadata accessor for HourWeather);
          v80 = v61;
          goto LABEL_39;
        }
      }
      sub_1A5FA1740(v61, (uint64_t (*)(_QWORD))type metadata accessor for HourWeather);
    }
    v56 = v104;
  }
  sub_1A5FAFD58(v57, &qword_1ED190B88);
  v66 = v96;
  OUTLINED_FUNCTION_18_16();
  OUTLINED_FUNCTION_6_3(v66);
  if (v50)
  {
    OUTLINED_FUNCTION_24_14(v103);
    v67 = v95;
    OUTLINED_FUNCTION_16_20();
LABEL_31:
    sub_1A5FAFD58(v67, &qword_1ED190B80);
    return 0xD000000000000015;
  }
  v67 = v95;
  v68 = OUTLINED_FUNCTION_15_1();
  __swift_storeEnumTagSinglePayload(v67, v68 ^ 1u, 1, v58);
  OUTLINED_FUNCTION_26_2(v67, 1, v58);
  if (v69)
    goto LABEL_31;
  v71 = v90;
  sub_1A601ADD4(v67, v90, (uint64_t (*)(_QWORD))type metadata accessor for DayWeather);
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for Forecast<A>, v46);
  v72 = v89;
  OUTLINED_FUNCTION_20_14();
  OUTLINED_FUNCTION_6_3(v72);
  if (v73)
  {
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v72, v56);
    v74 = v88;
    OUTLINED_FUNCTION_16_20();
  }
  else
  {
    v74 = v88;
    v75 = OUTLINED_FUNCTION_15_1();
    __swift_storeEnumTagSinglePayload(v74, v75 ^ 1u, 1, v58);
    OUTLINED_FUNCTION_26_2(v74, 1, v58);
    if (!v76)
    {
      v82 = v87;
      sub_1A601ADD4(v74, v87, (uint64_t (*)(_QWORD))type metadata accessor for DayWeather);
      OUTLINED_FUNCTION_26_11();
      sub_1A6123B18();
      sub_1A6123848();
      v105 = sub_1A61239E0();
      OUTLINED_FUNCTION_31_8();
      OUTLINED_FUNCTION_0_30();
      OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_1_32();
      OUTLINED_FUNCTION_6();
      sub_1A6046F28();
      OUTLINED_FUNCTION_3_25();
      OUTLINED_FUNCTION_0_30();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_12_20();
      OUTLINED_FUNCTION_3_25();
      OUTLINED_FUNCTION_0_30();
      OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_13_22();
      OUTLINED_FUNCTION_10_26(*(_BYTE *)(v71 + *(int *)(v58 + 20)));
      OUTLINED_FUNCTION_0_30();
      OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_28_13();
      sub_1A6123848();
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_30_13(&qword_1ED190B50);
      OUTLINED_FUNCTION_3_25();
      OUTLINED_FUNCTION_0_30();
      OUTLINED_FUNCTION_307();
      OUTLINED_FUNCTION_28_13();
      OUTLINED_FUNCTION_34_9();
      OUTLINED_FUNCTION_3_25();
      OUTLINED_FUNCTION_0_30();
      OUTLINED_FUNCTION_307();
      OUTLINED_FUNCTION_4_26();
      OUTLINED_FUNCTION_10_26(*(_BYTE *)(v82 + *(int *)(v58 + 20)));
      OUTLINED_FUNCTION_0_30();
      OUTLINED_FUNCTION_307();
      OUTLINED_FUNCTION_34_9();
      OUTLINED_FUNCTION_3_25();
      OUTLINED_FUNCTION_0_30();
      OUTLINED_FUNCTION_307();
      sub_1A6123848();
      OUTLINED_FUNCTION_3_25();
      OUTLINED_FUNCTION_0_30();
      OUTLINED_FUNCTION_55();
      v79 = v106;
      sub_1A5FA1740(v82, (uint64_t (*)(_QWORD))type metadata accessor for DayWeather);
      v80 = v71;
      v83 = type metadata accessor for DayWeather;
LABEL_40:
      sub_1A5FA1740(v80, (uint64_t (*)(_QWORD))v83);
      return v79;
    }
  }
  sub_1A5FA1740(v71, (uint64_t (*)(_QWORD))type metadata accessor for DayWeather);
  sub_1A5FAFD58(v74, &qword_1ED190B80);
  return 0xD000000000000015;
}

unint64_t sub_1A6046F28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED190B78;
  if (!qword_1ED190B78)
  {
    v1 = sub_1A6121F58();
    result = MEMORY[0x1A85BB36C](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED190B78);
  }
  return result;
}

void sub_1A6046F6C(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x1A85BB36C](MEMORY[0x1E0CAE360], v3), a1);
  }
  OUTLINED_FUNCTION_51();
}

uint64_t WeatherMetadata.init(date:expirationDate:latitude:longitude:attribution:)@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v7 = *a1;
  v8 = (int *)OUTLINED_FUNCTION_49();
  v9 = v8[8];
  v10 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_4_27(v10);
  result = OUTLINED_FUNCTION_9_22();
  *(double *)(a2 + v8[6]) = a3;
  *(double *)(a2 + v8[7]) = a4;
  *(_QWORD *)(a2 + v9) = v7;
  return result;
}

uint64_t WeatherMetadata.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t WeatherMetadata.date.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t (*WeatherMetadata.date.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherMetadata.expirationDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t WeatherMetadata.expirationDate.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_6();
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*WeatherMetadata.expirationDate.modify())(double, double)
{
  OUTLINED_FUNCTION_49();
  return GEOLocationCoordinate2DMake;
}

id WeatherMetadata.location.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_49();
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, *(double *)(v0 + *(int *)(v1 + 24)), *(double *)(v0 + *(int *)(v1 + 28)));
}

double WeatherMetadata.latitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_49() + 24));
}

uint64_t WeatherMetadata.latitude.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_49();
  *(double *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

double (*WeatherMetadata.latitude.modify())(double, double)
{
  OUTLINED_FUNCTION_49();
  return GEOLocationCoordinate2DMake;
}

double WeatherMetadata.longitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_49() + 28));
}

uint64_t WeatherMetadata.longitude.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_49();
  *(double *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

double (*WeatherMetadata.longitude.modify())(double, double)
{
  OUTLINED_FUNCTION_49();
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherMetadata.attribution.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_49() + 32));
  return swift_retain();
}

void WeatherMetadata.attribution.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *(int *)(OUTLINED_FUNCTION_49() + 32);
  swift_release();
  *(_QWORD *)(v1 + v3) = v2;
  OUTLINED_FUNCTION_9();
}

double (*WeatherMetadata.attribution.modify())(double, double)
{
  OUTLINED_FUNCTION_49();
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherMetadata.init(date:expirationDate:attribution:)@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *a1;
  v4 = (int *)OUTLINED_FUNCTION_49();
  v5 = v4[8];
  v6 = OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_4_27(v6);
  result = OUTLINED_FUNCTION_9_22();
  *(_QWORD *)(a2 + v4[6]) = 0;
  *(_QWORD *)(a2 + v4[7]) = 0;
  *(_QWORD *)(a2 + v5) = v3;
  return result;
}

uint64_t sub_1A60472F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6974617269707865 && a2 == 0xEE00657461446E6FLL;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
      if (v7 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065;
        if (v8 || (sub_1A6123CF8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x7475626972747461 && a2 == 0xEB000000006E6F69)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1A6123CF8();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1A6047534(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6047560 + 4 * byte_1A612DDF8[a1]))(1702125924, 0xE400000000000000);
}

uint64_t sub_1A6047560()
{
  return 0x6974617269707865;
}

uint64_t sub_1A6047584()
{
  return 0x656475746974616CLL;
}

uint64_t sub_1A604759C()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_1A60475B8()
{
  return 0x7475626972747461;
}

uint64_t sub_1A60475D8()
{
  unsigned __int8 *v0;

  return sub_1A6047534(*v0);
}

uint64_t sub_1A60475E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A60472F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6047604()
{
  sub_1A60477F8();
  return sub_1A6123DE8();
}

uint64_t sub_1A604762C()
{
  sub_1A60477F8();
  return sub_1A6123DF4();
}

void WeatherMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1917D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A60477F8();
  sub_1A6123DD0();
  sub_1A6121F58();
  sub_1A5FAF4F4(&qword_1ED191698, MEMORY[0x1E0CB0890]);
  OUTLINED_FUNCTION_3_1();
  if (!v1)
  {
    type metadata accessor for WeatherMetadata();
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_12_21();
    OUTLINED_FUNCTION_12_21();
    sub_1A6047834();
    sub_1A6123C80();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A60477F8()
{
  unint64_t result;

  result = qword_1ED191700;
  if (!qword_1ED191700)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612DF9C, &type metadata for WeatherMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191700);
  }
  return result;
}

unint64_t sub_1A6047834()
{
  unint64_t result;

  result = qword_1ED1916F0;
  if (!qword_1ED1916F0)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherAttribution, &type metadata for WeatherAttribution);
    atomic_store(result, (unint64_t *)&qword_1ED1916F0);
  }
  return result;
}

void WeatherMetadata.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v32 = a2;
  v36 = sub_1A6121F58();
  v3 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v29 - v7;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814538);
  v8 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_0();
  v11 = v10 - v9;
  v12 = type metadata accessor for WeatherMetadata();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_0();
  v37 = *(int *)(v13 + 32);
  v39 = v15 - v14;
  *(_QWORD *)(v39 + v37) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A60477F8();
  v35 = v11;
  v16 = (uint64_t)v38;
  sub_1A6123DC4();
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_release();
  }
  else
  {
    v17 = v5;
    v30 = v3;
    v31 = v8;
    v38 = a1;
    v45 = 0;
    sub_1A5FAF4F4(&qword_1EE812DF0, MEMORY[0x1E0CB08C0]);
    v18 = v33;
    OUTLINED_FUNCTION_16_21();
    v19 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 32);
    v20 = v36;
    v19(v39, v18, v36);
    v44 = 1;
    OUTLINED_FUNCTION_16_21();
    v21 = v12;
    v22 = *(int *)(v12 + 20);
    v23 = v39;
    v19(v39 + v22, v17, v20);
    v43 = 2;
    sub_1A6123C20();
    *(_QWORD *)(v23 + *(int *)(v21 + 24)) = v24;
    v42 = 3;
    sub_1A6123C20();
    *(_QWORD *)(v23 + *(int *)(v21 + 28)) = v25;
    v41 = 4;
    sub_1A6047BE0();
    sub_1A6123BFC();
    OUTLINED_FUNCTION_7_7(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
    v26 = v40;
    v27 = v23;
    v28 = v37;
    swift_release();
    *(_QWORD *)(v27 + v28) = v26;
    sub_1A5FBFA40(v27, v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    sub_1A5FD0BB4(v27);
  }
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A6047BE0()
{
  unint64_t result;

  result = qword_1EE814540;
  if (!qword_1EE814540)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherAttribution, &type metadata for WeatherAttribution);
    atomic_store(result, (unint64_t *)&qword_1EE814540);
  }
  return result;
}

void sub_1A6047C1C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  WeatherMetadata.init(from:)(a1, a2);
}

void sub_1A6047C30(_QWORD *a1)
{
  WeatherMetadata.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for WeatherMetadata(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1A6121F58();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WeatherMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A6121F58();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WeatherMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_1A6121F58();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1A6047E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    __swift_getEnumTagSinglePayload(a1, a2, v4);
  else
    OUTLINED_FUNCTION_9();
}

uint64_t storeEnumTagSinglePayload for WeatherMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1A6047ECC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 32)) = a2;
    OUTLINED_FUNCTION_9();
  }
}

uint64_t storeEnumTagSinglePayload for WeatherMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A6047F80 + 4 * byte_1A612DE02[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A6047FB4 + 4 * byte_1A612DDFD[v4]))();
}

uint64_t sub_1A6047FB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6047FBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6047FC4);
  return result;
}

uint64_t sub_1A6047FD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6047FD8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A6047FDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6047FE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherMetadata.CodingKeys()
{
  return &type metadata for WeatherMetadata.CodingKeys;
}

unint64_t sub_1A6048004()
{
  unint64_t result;

  result = qword_1EE814548;
  if (!qword_1EE814548)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612DF74, &type metadata for WeatherMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814548);
  }
  return result;
}

unint64_t sub_1A6048044()
{
  unint64_t result;

  result = qword_1ED191710;
  if (!qword_1ED191710)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612DEE4, &type metadata for WeatherMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191710);
  }
  return result;
}

unint64_t sub_1A6048084()
{
  unint64_t result;

  result = qword_1ED191708;
  if (!qword_1ED191708)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612DF0C, &type metadata for WeatherMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED191708);
  }
  return result;
}

BOOL static NextHourToken.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NextHourToken.hash(into:)()
{
  return sub_1A6123D70();
}

uint64_t sub_1A60480FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  BOOL v34;
  BOOL v35;
  BOOL v36;
  BOOL v37;
  BOOL v38;
  BOOL v39;
  BOOL v40;
  BOOL v41;
  BOOL v42;
  BOOL v43;
  char v45;

  v2 = a1 == 0x656C626973736F70 && a2 == 0xEF656C7A7A697244;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A614F300 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A614F320 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A614F340 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001A614F360 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = a1 == 0x656C7A7A697264 && a2 == 0xE700000000000000;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      v7 = a1 == 0x53656C7A7A697264 && a2 == 0xEC00000074726174;
      if (v7 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else
      {
        v8 = a1 == 0x53656C7A7A697264 && a2 == 0xEB00000000706F74;
        if (v8 || (sub_1A6123CF8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x80000001A614F380 || (sub_1A6123CF8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x80000001A614F3A0 || (sub_1A6123CF8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 9;
        }
        else
        {
          v9 = a1 == 1852399986 && a2 == 0xE400000000000000;
          if (v9 || (sub_1A6123CF8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else
          {
            v10 = a1 == 0x726174536E696172 && a2 == 0xE900000000000074;
            if (v10 || (sub_1A6123CF8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 11;
            }
            else
            {
              v11 = a1 == 0x706F74536E696172 && a2 == 0xE800000000000000;
              if (v11 || (sub_1A6123CF8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 12;
              }
              else
              {
                v12 = a1 == 0x726174536E696172 && a2 == 0xED0000706F745374;
                if (v12 || (sub_1A6123CF8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 13;
                }
                else
                {
                  v13 = a1 == 0x706F74536E696172 && a2 == 0xED00007472617453;
                  if (v13 || (sub_1A6123CF8() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 14;
                  }
                  else
                  {
                    v14 = a1 == 0x6961527976616568 && a2 == 0xE90000000000006ELL;
                    if (v14 || (sub_1A6123CF8() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 15;
                    }
                    else
                    {
                      v15 = a1 == 0x6961527976616568 && a2 == 0xEE0074726174536ELL;
                      if (v15 || (sub_1A6123CF8() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 16;
                      }
                      else
                      {
                        v16 = a1 == 0x6961527976616568 && a2 == 0xED0000706F74536ELL;
                        if (v16 || (sub_1A6123CF8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 17;
                        }
                        else if (a1 == 0xD000000000000012 && a2 == 0x80000001A614F3C0 || (sub_1A6123CF8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 18;
                        }
                        else if (a1 == 0xD000000000000012 && a2 == 0x80000001A614F3E0 || (sub_1A6123CF8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 19;
                        }
                        else if (a1 == 0xD000000000000012 && a2 == 0x80000001A614F400 || (sub_1A6123CF8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 20;
                        }
                        else if (a1 == 0xD000000000000012 && a2 == 0x80000001A614F420 || (sub_1A6123CF8() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 21;
                        }
                        else
                        {
                          v17 = a1 == 0x65486F546E696172 && a2 == 0xEF6E696152797661;
                          if (v17 || (sub_1A6123CF8() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 22;
                          }
                          else
                          {
                            v18 = a1 == 0x6961527976616568 && a2 == 0xEF6E6961526F546ELL;
                            if (v18 || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 23;
                            }
                            else if (a1 == 0xD000000000000017 && a2 == 0x80000001A614F440
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 24;
                            }
                            else if (a1 == 0xD000000000000017 && a2 == 0x80000001A614F460
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 25;
                            }
                            else if (a1 == 0xD000000000000014 && a2 == 0x80000001A614F480
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 26;
                            }
                            else if (a1 == 0xD000000000000014 && a2 == 0x80000001A614F4A0
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 27;
                            }
                            else if (a1 == 0xD000000000000016 && a2 == 0x80000001A614F4C0
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 28;
                            }
                            else if (a1 == 0xD000000000000016 && a2 == 0x80000001A614F4E0
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 29;
                            }
                            else if (a1 == 0xD000000000000013 && a2 == 0x80000001A614F500
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 30;
                            }
                            else if (a1 == 0xD000000000000013 && a2 == 0x80000001A614F520
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 31;
                            }
                            else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A614F540
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 32;
                            }
                            else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A614F560
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 33;
                            }
                            else if (a1 == 0xD000000000000018 && a2 == 0x80000001A614F580
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 34;
                            }
                            else if (a1 == 0xD000000000000018 && a2 == 0x80000001A614F5A0
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 35;
                            }
                            else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A614F5C0
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 36;
                            }
                            else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001A614F5E0
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 37;
                            }
                            else if (a1 == 0xD000000000000018 && a2 == 0x80000001A614F600
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 38;
                            }
                            else if (a1 == 0xD000000000000018 && a2 == 0x80000001A614F620
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 39;
                            }
                            else if (a1 == 0xD000000000000010 && a2 == 0x80000001A614F640
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 40;
                            }
                            else if (a1 == 0xD000000000000015 && a2 == 0x80000001A614F660
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 41;
                            }
                            else if (a1 == 0xD000000000000014 && a2 == 0x80000001A614F680
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 42;
                            }
                            else if (a1 == 0xD000000000000019 && a2 == 0x80000001A614F6A0
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 43;
                            }
                            else if (a1 == 0xD000000000000019 && a2 == 0x80000001A614F6C0
                                   || (sub_1A6123CF8() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 44;
                            }
                            else
                            {
                              v19 = a1 == 0x7365697272756C66 && a2 == 0xE800000000000000;
                              if (v19 || (sub_1A6123CF8() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 45;
                              }
                              else
                              {
                                v20 = a1 == 0x7365697272756C66 && a2 == 0xED00007472617453;
                                if (v20 || (sub_1A6123CF8() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 46;
                                }
                                else
                                {
                                  v21 = a1 == 0x7365697272756C66 && a2 == 0xEC000000706F7453;
                                  if (v21 || (sub_1A6123CF8() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 47;
                                  }
                                  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A614F6E0
                                         || (sub_1A6123CF8() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 48;
                                  }
                                  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A614F700
                                         || (sub_1A6123CF8() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 49;
                                  }
                                  else
                                  {
                                    v22 = a1 == 2003791475 && a2 == 0xE400000000000000;
                                    if (v22 || (sub_1A6123CF8() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 50;
                                    }
                                    else
                                    {
                                      v23 = a1 == 0x72617453776F6E73 && a2 == 0xE900000000000074;
                                      if (v23 || (sub_1A6123CF8() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 51;
                                      }
                                      else
                                      {
                                        v24 = a1 == 0x706F7453776F6E73 && a2 == 0xE800000000000000;
                                        if (v24 || (sub_1A6123CF8() & 1) != 0)
                                        {
                                          swift_bridgeObjectRelease();
                                          return 52;
                                        }
                                        else
                                        {
                                          v25 = a1 == 0x72617453776F6E73 && a2 == 0xED0000706F745374;
                                          if (v25 || (sub_1A6123CF8() & 1) != 0)
                                          {
                                            swift_bridgeObjectRelease();
                                            return 53;
                                          }
                                          else
                                          {
                                            v26 = a1 == 0x706F7453776F6E73 && a2 == 0xED00007472617453;
                                            if (v26 || (sub_1A6123CF8() & 1) != 0)
                                            {
                                              swift_bridgeObjectRelease();
                                              return 54;
                                            }
                                            else
                                            {
                                              v27 = a1 == 0x6F6E537976616568 && a2 == 0xE900000000000077;
                                              if (v27 || (sub_1A6123CF8() & 1) != 0)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 55;
                                              }
                                              else
                                              {
                                                v28 = a1 == 0x6F6E537976616568 && a2 == 0xEE00747261745377;
                                                if (v28 || (sub_1A6123CF8() & 1) != 0)
                                                {
                                                  swift_bridgeObjectRelease();
                                                  return 56;
                                                }
                                                else
                                                {
                                                  v29 = a1 == 0x6F6E537976616568 && a2 == 0xED0000706F745377;
                                                  if (v29 || (sub_1A6123CF8() & 1) != 0)
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 57;
                                                  }
                                                  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A614F720
                                                         || (sub_1A6123CF8() & 1) != 0)
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 58;
                                                  }
                                                  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A614F740
                                                         || (sub_1A6123CF8() & 1) != 0)
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 59;
                                                  }
                                                  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A614F760
                                                         || (sub_1A6123CF8() & 1) != 0)
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 60;
                                                  }
                                                  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A614F780
                                                         || (sub_1A6123CF8() & 1) != 0)
                                                  {
                                                    swift_bridgeObjectRelease();
                                                    return 61;
                                                  }
                                                  else
                                                  {
                                                    v30 = a1 == 0x65486F54776F6E73 && a2 == 0xEF776F6E53797661;
                                                    if (v30 || (sub_1A6123CF8() & 1) != 0)
                                                    {
                                                      swift_bridgeObjectRelease();
                                                      return 62;
                                                    }
                                                    else
                                                    {
                                                      v31 = a1 == 0x6F6E537976616568 && a2 == 0xEF776F6E536F5477;
                                                      if (v31 || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 63;
                                                      }
                                                      else if (a1 == 0xD000000000000018 && a2 == 0x80000001A614F7A0
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 64;
                                                      }
                                                      else if (a1 == 0xD000000000000018 && a2 == 0x80000001A614F7C0
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 65;
                                                      }
                                                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001A614F7E0
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 66;
                                                      }
                                                      else if (a1 == 0xD000000000000014 && a2 == 0x80000001A614F800
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 67;
                                                      }
                                                      else if (a1 == 0xD000000000000017 && a2 == 0x80000001A614F820
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 68;
                                                      }
                                                      else if (a1 == 0xD000000000000017 && a2 == 0x80000001A614F840
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 69;
                                                      }
                                                      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A614F860
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 70;
                                                      }
                                                      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A614F880
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 71;
                                                      }
                                                      else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A614F8A0
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 72;
                                                      }
                                                      else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A614F8C0
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 73;
                                                      }
                                                      else if (a1 == 0xD000000000000018 && a2 == 0x80000001A614F8E0
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 74;
                                                      }
                                                      else if (a1 == 0xD000000000000018 && a2 == 0x80000001A614F900
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 75;
                                                      }
                                                      else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A614F920
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 76;
                                                      }
                                                      else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A614F940
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 77;
                                                      }
                                                      else if (a1 == 0xD000000000000018 && a2 == 0x80000001A614F960
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 78;
                                                      }
                                                      else if (a1 == 0xD000000000000018 && a2 == 0x80000001A614F980
                                                             || (sub_1A6123CF8() & 1) != 0)
                                                      {
                                                        swift_bridgeObjectRelease();
                                                        return 79;
                                                      }
                                                      else
                                                      {
                                                        v32 = a1 == 0x656C626973736F70 && a2 == 0xED00007465656C53;
                                                        if (v32 || (sub_1A6123CF8() & 1) != 0)
                                                        {
                                                          swift_bridgeObjectRelease();
                                                          return 80;
                                                        }
                                                        else if (a1 == 0xD000000000000012
                                                               && a2 == 0x80000001A614F9A0
                                                               || (sub_1A6123CF8() & 1) != 0)
                                                        {
                                                          swift_bridgeObjectRelease();
                                                          return 81;
                                                        }
                                                        else if (a1 == 0xD000000000000011
                                                               && a2 == 0x80000001A614F9C0
                                                               || (sub_1A6123CF8() & 1) != 0)
                                                        {
                                                          swift_bridgeObjectRelease();
                                                          return 82;
                                                        }
                                                        else if (a1 == 0xD000000000000016
                                                               && a2 == 0x80000001A614F9E0
                                                               || (sub_1A6123CF8() & 1) != 0)
                                                        {
                                                          swift_bridgeObjectRelease();
                                                          return 83;
                                                        }
                                                        else if (a1 == 0xD000000000000016
                                                               && a2 == 0x80000001A614FA00
                                                               || (sub_1A6123CF8() & 1) != 0)
                                                        {
                                                          swift_bridgeObjectRelease();
                                                          return 84;
                                                        }
                                                        else
                                                        {
                                                          v33 = a1 == 0x7465656C73 && a2 == 0xE500000000000000;
                                                          if (v33 || (sub_1A6123CF8() & 1) != 0)
                                                          {
                                                            swift_bridgeObjectRelease();
                                                            return 85;
                                                          }
                                                          else
                                                          {
                                                            v34 = a1 == 0x6174537465656C73
                                                               && a2 == 0xEA00000000007472;
                                                            if (v34 || (sub_1A6123CF8() & 1) != 0)
                                                            {
                                                              swift_bridgeObjectRelease();
                                                              return 86;
                                                            }
                                                            else
                                                            {
                                                              v35 = a1 == 0x6F74537465656C73
                                                                 && a2 == 0xE900000000000070;
                                                              if (v35 || (sub_1A6123CF8() & 1) != 0)
                                                              {
                                                                swift_bridgeObjectRelease();
                                                                return 87;
                                                              }
                                                              else
                                                              {
                                                                v36 = a1 == 0x6174537465656C73
                                                                   && a2 == 0xEE00706F74537472;
                                                                if (v36 || (sub_1A6123CF8() & 1) != 0)
                                                                {
                                                                  swift_bridgeObjectRelease();
                                                                  return 88;
                                                                }
                                                                else
                                                                {
                                                                  v37 = a1 == 0x6F74537465656C73
                                                                     && a2 == 0xEE00747261745370;
                                                                  if (v37 || (sub_1A6123CF8() & 1) != 0)
                                                                  {
                                                                    swift_bridgeObjectRelease();
                                                                    return 89;
                                                                  }
                                                                  else
                                                                  {
                                                                    v38 = a1 == 0x656C626973736F70
                                                                       && a2 == 0xEC0000006C696148;
                                                                    if (v38 || (sub_1A6123CF8() & 1) != 0)
                                                                    {
                                                                      swift_bridgeObjectRelease();
                                                                      return 90;
                                                                    }
                                                                    else if (a1 == 0xD000000000000011
                                                                           && a2 == 0x80000001A614FA20
                                                                           || (sub_1A6123CF8() & 1) != 0)
                                                                    {
                                                                      swift_bridgeObjectRelease();
                                                                      return 91;
                                                                    }
                                                                    else if (a1 == 0xD000000000000010
                                                                           && a2 == 0x80000001A614FA40
                                                                           || (sub_1A6123CF8() & 1) != 0)
                                                                    {
                                                                      swift_bridgeObjectRelease();
                                                                      return 92;
                                                                    }
                                                                    else if (a1 == 0xD000000000000015
                                                                           && a2 == 0x80000001A614FA60
                                                                           || (sub_1A6123CF8() & 1) != 0)
                                                                    {
                                                                      swift_bridgeObjectRelease();
                                                                      return 93;
                                                                    }
                                                                    else if (a1 == 0xD000000000000015
                                                                           && a2 == 0x80000001A614FA80
                                                                           || (sub_1A6123CF8() & 1) != 0)
                                                                    {
                                                                      swift_bridgeObjectRelease();
                                                                      return 94;
                                                                    }
                                                                    else
                                                                    {
                                                                      v39 = a1 == 1818845544
                                                                         && a2 == 0xE400000000000000;
                                                                      if (v39 || (sub_1A6123CF8() & 1) != 0)
                                                                      {
                                                                        swift_bridgeObjectRelease();
                                                                        return 95;
                                                                      }
                                                                      else
                                                                      {
                                                                        v40 = a1 == 0x726174536C696168
                                                                           && a2 == 0xE900000000000074;
                                                                        if (v40 || (sub_1A6123CF8() & 1) != 0)
                                                                        {
                                                                          swift_bridgeObjectRelease();
                                                                          return 96;
                                                                        }
                                                                        else
                                                                        {
                                                                          v41 = a1 == 0x706F74536C696168
                                                                             && a2 == 0xE800000000000000;
                                                                          if (v41 || (sub_1A6123CF8() & 1) != 0)
                                                                          {
                                                                            swift_bridgeObjectRelease();
                                                                            return 97;
                                                                          }
                                                                          else
                                                                          {
                                                                            v42 = a1 == 0x726174536C696168
                                                                               && a2 == 0xED0000706F745374;
                                                                            if (v42 || (sub_1A6123CF8() & 1) != 0)
                                                                            {
                                                                              swift_bridgeObjectRelease();
                                                                              return 98;
                                                                            }
                                                                            else
                                                                            {
                                                                              v43 = a1 == 0x706F74536C696168
                                                                                 && a2 == 0xED00007472617453;
                                                                              if (v43 || (sub_1A6123CF8() & 1) != 0)
                                                                              {
                                                                                swift_bridgeObjectRelease();
                                                                                return 99;
                                                                              }
                                                                              else if (a1 == 0x7261656C63
                                                                                     && a2 == 0xE500000000000000)
                                                                              {
                                                                                swift_bridgeObjectRelease();
                                                                                return 100;
                                                                              }
                                                                              else
                                                                              {
                                                                                v45 = sub_1A6123CF8();
                                                                                swift_bridgeObjectRelease();
                                                                                if ((v45 & 1) != 0)
                                                                                  return 100;
                                                                                else
                                                                                  return 101;
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A604A5C8()
{
  return 101;
}

uint64_t sub_1A604A5D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A604A610 + 4 * word_1A612DFF0[a1]))(0x656C626973736F70, 0xEF656C7A7A697244);
}

unint64_t sub_1A604A610()
{
  return 0xD000000000000014;
}

uint64_t sub_1A604AE60()
{
  return 1818845544;
}

void sub_1A604AE8C()
{
  JUMPOUT(0x1A604AE98);
}

uint64_t sub_1A604AEC4()
{
  return 0x7261656C63;
}

uint64_t sub_1A604AEFC()
{
  sub_1A604F6D0();
  return sub_1A6123DE8();
}

uint64_t sub_1A604AF24()
{
  sub_1A604F6D0();
  return sub_1A6123DF4();
}

uint64_t sub_1A604AF4C()
{
  unsigned __int8 *v0;

  return sub_1A604A5D0(*v0);
}

uint64_t sub_1A604AF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A60480FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A604AF78@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A604A5C8();
  *a1 = result;
  return result;
}

uint64_t sub_1A604AF9C()
{
  sub_1A604F694();
  return sub_1A6123DE8();
}

uint64_t sub_1A604AFC4()
{
  sub_1A604F694();
  return sub_1A6123DF4();
}

uint64_t sub_1A604AFEC()
{
  sub_1A6050D14();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B014()
{
  sub_1A6050D14();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B03C()
{
  sub_1A6050CD8();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B064()
{
  sub_1A6050CD8();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B08C()
{
  sub_1A6050C60();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B0B4()
{
  sub_1A6050C60();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B0DC()
{
  sub_1A6050C9C();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B104()
{
  sub_1A6050C9C();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B12C()
{
  sub_1A6050C24();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B154()
{
  sub_1A6050C24();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B17C()
{
  sub_1A6050990();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B1A4()
{
  sub_1A6050990();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B1CC()
{
  sub_1A60508A0();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B1F4()
{
  sub_1A60508A0();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B21C()
{
  sub_1A60506C0();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B244()
{
  sub_1A60506C0();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B26C()
{
  sub_1A60507B0();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B294()
{
  sub_1A60507B0();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B2BC()
{
  sub_1A60505D0();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B2E4()
{
  sub_1A60505D0();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B30C()
{
  sub_1A60503B4();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B334()
{
  sub_1A60503B4();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B35C()
{
  sub_1A6050378();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B384()
{
  sub_1A6050378();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B3AC()
{
  sub_1A6050300();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B3D4()
{
  sub_1A6050300();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B3FC()
{
  sub_1A605033C();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B424()
{
  sub_1A605033C();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B44C()
{
  sub_1A60502C4();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B474()
{
  sub_1A60502C4();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B49C()
{
  sub_1A6050030();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B4C4()
{
  sub_1A6050030();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B4EC()
{
  sub_1A604FF40();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B514()
{
  sub_1A604FF40();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B53C()
{
  sub_1A604FD60();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B564()
{
  sub_1A604FD60();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B58C()
{
  sub_1A604FE50();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B5B4()
{
  sub_1A604FE50();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B5DC()
{
  sub_1A604FC70();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B604()
{
  sub_1A604FC70();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B62C()
{
  sub_1A604F7FC();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B654()
{
  sub_1A604F7FC();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B67C()
{
  sub_1A604F7C0();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B6A4()
{
  sub_1A604F7C0();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B6CC()
{
  sub_1A604F748();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B6F4()
{
  sub_1A604F748();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B71C()
{
  sub_1A604F784();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B744()
{
  sub_1A604F784();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B76C()
{
  sub_1A604F70C();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B794()
{
  sub_1A604F70C();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B7BC()
{
  sub_1A6050ABC();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B7E4()
{
  sub_1A6050ABC();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B80C()
{
  sub_1A6050A80();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B834()
{
  sub_1A6050A80();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B85C()
{
  sub_1A60509CC();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B884()
{
  sub_1A60509CC();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B8AC()
{
  sub_1A6050A44();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B8D4()
{
  sub_1A6050A44();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B8FC()
{
  sub_1A6050A08();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B924()
{
  sub_1A6050A08();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B94C()
{
  sub_1A6050954();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B974()
{
  sub_1A6050954();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B99C()
{
  sub_1A6050864();
  return sub_1A6123DE8();
}

uint64_t sub_1A604B9C4()
{
  sub_1A6050864();
  return sub_1A6123DF4();
}

uint64_t sub_1A604B9EC()
{
  sub_1A6050684();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BA14()
{
  sub_1A6050684();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BA3C()
{
  sub_1A6050774();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BA64()
{
  sub_1A6050774();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BA8C()
{
  sub_1A6050594();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BAB4()
{
  sub_1A6050594();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BADC()
{
  sub_1A60508DC();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BB04()
{
  sub_1A60508DC();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BB2C()
{
  sub_1A60507EC();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BB54()
{
  sub_1A60507EC();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BB7C()
{
  sub_1A605060C();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BBA4()
{
  sub_1A605060C();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BBCC()
{
  sub_1A60506FC();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BBF4()
{
  sub_1A60506FC();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BC1C()
{
  sub_1A605051C();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BC44()
{
  sub_1A605051C();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BC6C()
{
  sub_1A605015C();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BC94()
{
  sub_1A605015C();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BCBC()
{
  sub_1A6050120();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BCE4()
{
  sub_1A6050120();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BD0C()
{
  sub_1A605006C();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BD34()
{
  sub_1A605006C();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BD5C()
{
  sub_1A60500E4();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BD84()
{
  sub_1A60500E4();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BDAC()
{
  sub_1A60500A8();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BDD4()
{
  sub_1A60500A8();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BDFC()
{
  sub_1A604FFF4();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BE24()
{
  sub_1A604FFF4();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BE4C()
{
  sub_1A604FF04();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BE74()
{
  sub_1A604FF04();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BE9C()
{
  sub_1A604FD24();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BEC4()
{
  sub_1A604FD24();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BEEC()
{
  sub_1A604FE14();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BF14()
{
  sub_1A604FE14();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BF3C()
{
  sub_1A604FC34();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BF64()
{
  sub_1A604FC34();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BF8C()
{
  sub_1A604FF7C();
  return sub_1A6123DE8();
}

uint64_t sub_1A604BFB4()
{
  sub_1A604FF7C();
  return sub_1A6123DF4();
}

uint64_t sub_1A604BFDC()
{
  sub_1A604FE8C();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C004()
{
  sub_1A604FE8C();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C02C()
{
  sub_1A604FCAC();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C054()
{
  sub_1A604FCAC();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C07C()
{
  sub_1A604FD9C();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C0A4()
{
  sub_1A604FD9C();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C0CC()
{
  sub_1A604FBBC();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C0F4()
{
  sub_1A604FBBC();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C11C()
{
  sub_1A6050E40();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C144()
{
  sub_1A6050E40();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C16C()
{
  sub_1A6050E04();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C194()
{
  sub_1A6050E04();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C1BC()
{
  sub_1A6050D8C();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C1E4()
{
  sub_1A6050D8C();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C20C()
{
  sub_1A6050DC8();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C234()
{
  sub_1A6050DC8();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C25C()
{
  sub_1A6050D50();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C284()
{
  sub_1A6050D50();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C2AC()
{
  sub_1A60504E0();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C2D4()
{
  sub_1A60504E0();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C2FC()
{
  sub_1A60504A4();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C324()
{
  sub_1A60504A4();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C34C()
{
  sub_1A605042C();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C374()
{
  sub_1A605042C();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C39C()
{
  sub_1A6050468();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C3C4()
{
  sub_1A6050468();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C3EC()
{
  sub_1A60503F0();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C414()
{
  sub_1A60503F0();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C43C()
{
  sub_1A604F928();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C464()
{
  sub_1A604F928();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C48C()
{
  sub_1A604F8EC();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C4B4()
{
  sub_1A604F8EC();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C4DC()
{
  sub_1A604F874();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C504()
{
  sub_1A604F874();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C52C()
{
  sub_1A604F8B0();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C554()
{
  sub_1A604F8B0();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C57C()
{
  sub_1A604F838();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C5A4()
{
  sub_1A604F838();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C5CC()
{
  sub_1A604FB80();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C5F4()
{
  sub_1A604FB80();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C61C()
{
  sub_1A604FB44();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C644()
{
  sub_1A604FB44();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C66C()
{
  sub_1A604FACC();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C694()
{
  sub_1A604FACC();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C6BC()
{
  sub_1A604FB08();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C6E4()
{
  sub_1A604FB08();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C70C()
{
  sub_1A604FA90();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C734()
{
  sub_1A604FA90();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C75C()
{
  sub_1A6050BE8();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C784()
{
  sub_1A6050BE8();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C7AC()
{
  sub_1A6050BAC();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C7D4()
{
  sub_1A6050BAC();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C7FC()
{
  sub_1A6050B34();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C824()
{
  sub_1A6050B34();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C84C()
{
  sub_1A6050B70();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C874()
{
  sub_1A6050B70();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C89C()
{
  sub_1A6050AF8();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C8C4()
{
  sub_1A6050AF8();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C8EC()
{
  sub_1A6050918();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C914()
{
  sub_1A6050918();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C93C()
{
  sub_1A6050828();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C964()
{
  sub_1A6050828();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C98C()
{
  sub_1A6050648();
  return sub_1A6123DE8();
}

uint64_t sub_1A604C9B4()
{
  sub_1A6050648();
  return sub_1A6123DF4();
}

uint64_t sub_1A604C9DC()
{
  sub_1A6050738();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CA04()
{
  sub_1A6050738();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CA2C()
{
  sub_1A6050558();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CA54()
{
  sub_1A6050558();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CA7C()
{
  sub_1A604FA54();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CAA4()
{
  sub_1A604FA54();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CACC()
{
  sub_1A604FA18();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CAF4()
{
  sub_1A604FA18();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CB1C()
{
  sub_1A604F9A0();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CB44()
{
  sub_1A604F9A0();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CB6C()
{
  sub_1A604F9DC();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CB94()
{
  sub_1A604F9DC();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CBBC()
{
  sub_1A604F964();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CBE4()
{
  sub_1A604F964();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CC0C()
{
  sub_1A6050288();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CC34()
{
  sub_1A6050288();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CC5C()
{
  sub_1A605024C();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CC84()
{
  sub_1A605024C();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CCAC()
{
  sub_1A60501D4();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CCD4()
{
  sub_1A60501D4();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CCFC()
{
  sub_1A6050210();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CD24()
{
  sub_1A6050210();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CD4C()
{
  sub_1A6050198();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CD74()
{
  sub_1A6050198();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CD9C()
{
  sub_1A604FFB8();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CDC4()
{
  sub_1A604FFB8();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CDEC()
{
  sub_1A604FEC8();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CE14()
{
  sub_1A604FEC8();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CE3C()
{
  sub_1A604FCE8();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CE64()
{
  sub_1A604FCE8();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CE8C()
{
  sub_1A604FDD8();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CEB4()
{
  sub_1A604FDD8();
  return sub_1A6123DF4();
}

uint64_t sub_1A604CEDC()
{
  sub_1A604FBF8();
  return sub_1A6123DE8();
}

uint64_t sub_1A604CF04()
{
  sub_1A604FBF8();
  return sub_1A6123DF4();
}

void NextHourToken.hashValue.getter()
{
  sub_1A6123D64();
  OUTLINED_FUNCTION_17_5();
  sub_1A6123D88();
  OUTLINED_FUNCTION_16();
}

void NextHourToken.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336[7];
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  _BYTE v342[8];
  _BYTE v343[8];
  uint64_t v344;
  _BYTE v345[8];
  uint64_t v346;
  _BYTE v347[8];
  uint64_t v348;
  uint64_t v349;
  _BYTE v350[8];
  _BYTE v351[8];
  uint64_t v352;
  _BYTE v353[8];
  uint64_t v354;
  _BYTE v355[8];
  uint64_t v356;
  _BYTE v357[8];
  uint64_t v358;
  uint64_t v359;
  _BYTE v360[8];
  _BYTE v361[8];
  uint64_t v362;
  _BYTE v363[8];
  uint64_t v364;
  _BYTE v365[8];
  uint64_t v366;
  _BYTE v367[8];
  uint64_t v368;
  _BYTE v369[8];
  uint64_t v370;
  _BYTE v371[8];
  uint64_t v372;
  _BYTE v373[8];
  uint64_t v374;
  _BYTE v375[8];
  uint64_t v376;
  _BYTE v377[8];
  uint64_t v378;
  _BYTE v379[8];
  uint64_t v380;
  _BYTE v381[8];
  uint64_t v382;
  _BYTE v383[8];
  uint64_t v384;
  _BYTE v385[8];
  uint64_t v386;
  _BYTE v387[8];
  uint64_t v388;
  _BYTE v389[8];
  uint64_t v390;
  _BYTE v391[8];
  uint64_t v392;
  _BYTE v393[8];
  uint64_t v394;
  _BYTE v395[8];
  uint64_t v396;
  _BYTE v397[8];
  uint64_t v398;
  _BYTE v399[8];
  _BYTE v400[8];
  _BYTE v401[8];
  _BYTE v402[8];
  _BYTE v403[8];
  _BYTE v404[8];
  _BYTE v405[8];
  _BYTE v406[8];
  _BYTE v407[8];
  _BYTE v408[8];
  _BYTE v409[8];
  _BYTE v410[8];
  _BYTE v411[8];
  _BYTE v412[8];
  _BYTE v413[8];
  _BYTE v414[8];
  _BYTE v415[8];
  _BYTE v416[8];
  _BYTE v417[8];
  _BYTE v418[8];
  _BYTE v419[8];
  _QWORD v420[2];
  _QWORD v421[2];
  _QWORD v422[2];
  _QWORD v423[2];
  _QWORD v424[2];
  _QWORD v425[3];
  uint64_t v426;
  uint64_t v427;
  _BYTE v428[8];
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814550);
  v425[0] = *(_QWORD *)(v3 - 8);
  v425[1] = v3;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_22(v5, v336[0]);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814558);
  OUTLINED_FUNCTION_78(v6, (uint64_t)v342);
  OUTLINED_FUNCTION_40(v7);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814560);
  v424[0] = *(_QWORD *)(v10 - 8);
  v424[1] = v10;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_215(v12, v336[0]);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814568);
  v423[0] = *(_QWORD *)(v13 - 8);
  v423[1] = v13;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_214(v15, v336[0]);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814570);
  v422[0] = *(_QWORD *)(v16 - 8);
  v422[1] = v16;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_17_16(v18, v336[0]);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814578);
  v421[0] = *(_QWORD *)(v19 - 8);
  v421[1] = v19;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_213(v21, v336[0]);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814580);
  v420[0] = *(_QWORD *)(v22 - 8);
  v420[1] = v22;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814588);
  OUTLINED_FUNCTION_78(v25, (uint64_t)&v431);
  OUTLINED_FUNCTION_40(v26);
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814590);
  OUTLINED_FUNCTION_78(v29, (uint64_t)&v430);
  OUTLINED_FUNCTION_40(v30);
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814598);
  OUTLINED_FUNCTION_78(v33, (uint64_t)&v429);
  OUTLINED_FUNCTION_40(v34);
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8145A0);
  OUTLINED_FUNCTION_78(v37, (uint64_t)v428);
  OUTLINED_FUNCTION_40(v38);
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8145A8);
  OUTLINED_FUNCTION_78(v41, (uint64_t)&v426);
  OUTLINED_FUNCTION_40(v42);
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8145B0);
  OUTLINED_FUNCTION_78(v45, (uint64_t)v425);
  OUTLINED_FUNCTION_40(v46);
  MEMORY[0x1E0C80A78](v47);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8145B8);
  OUTLINED_FUNCTION_78(v49, (uint64_t)v424);
  OUTLINED_FUNCTION_40(v50);
  MEMORY[0x1E0C80A78](v51);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8145C0);
  OUTLINED_FUNCTION_78(v53, (uint64_t)v423);
  OUTLINED_FUNCTION_40(v54);
  MEMORY[0x1E0C80A78](v55);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8145C8);
  OUTLINED_FUNCTION_78(v57, (uint64_t)v422);
  OUTLINED_FUNCTION_40(v58);
  MEMORY[0x1E0C80A78](v59);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8145D0);
  OUTLINED_FUNCTION_78(v61, (uint64_t)v421);
  OUTLINED_FUNCTION_40(v62);
  MEMORY[0x1E0C80A78](v63);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8145D8);
  OUTLINED_FUNCTION_78(v65, (uint64_t)v420);
  OUTLINED_FUNCTION_40(v66);
  MEMORY[0x1E0C80A78](v67);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8145E0);
  OUTLINED_FUNCTION_78(v69, (uint64_t)v419);
  OUTLINED_FUNCTION_40(v70);
  MEMORY[0x1E0C80A78](v71);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8145E8);
  OUTLINED_FUNCTION_78(v73, (uint64_t)v418);
  OUTLINED_FUNCTION_40(v74);
  MEMORY[0x1E0C80A78](v75);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0));
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8145F0);
  OUTLINED_FUNCTION_78(v77, (uint64_t)v417);
  OUTLINED_FUNCTION_40(v78);
  MEMORY[0x1E0C80A78](v79);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0));
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8145F8);
  OUTLINED_FUNCTION_78(v81, (uint64_t)v416);
  OUTLINED_FUNCTION_40(v82);
  MEMORY[0x1E0C80A78](v83);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814600);
  OUTLINED_FUNCTION_78(v85, (uint64_t)v415);
  OUTLINED_FUNCTION_40(v86);
  MEMORY[0x1E0C80A78](v87);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0));
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814608);
  OUTLINED_FUNCTION_78(v89, (uint64_t)v414);
  OUTLINED_FUNCTION_40(v90);
  MEMORY[0x1E0C80A78](v91);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0));
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814610);
  OUTLINED_FUNCTION_78(v93, (uint64_t)v413);
  OUTLINED_FUNCTION_40(v94);
  MEMORY[0x1E0C80A78](v95);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0));
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814618);
  OUTLINED_FUNCTION_78(v97, (uint64_t)v412);
  OUTLINED_FUNCTION_40(v98);
  MEMORY[0x1E0C80A78](v99);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0));
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814620);
  OUTLINED_FUNCTION_78(v101, (uint64_t)v411);
  OUTLINED_FUNCTION_40(v102);
  MEMORY[0x1E0C80A78](v103);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0));
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814628);
  OUTLINED_FUNCTION_78(v105, (uint64_t)v410);
  OUTLINED_FUNCTION_40(v106);
  MEMORY[0x1E0C80A78](v107);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0));
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814630);
  OUTLINED_FUNCTION_78(v109, (uint64_t)v409);
  OUTLINED_FUNCTION_40(v110);
  MEMORY[0x1E0C80A78](v111);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0));
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814638);
  OUTLINED_FUNCTION_78(v113, (uint64_t)v408);
  OUTLINED_FUNCTION_40(v114);
  MEMORY[0x1E0C80A78](v115);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0));
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814640);
  OUTLINED_FUNCTION_78(v117, (uint64_t)v407);
  OUTLINED_FUNCTION_40(v118);
  MEMORY[0x1E0C80A78](v119);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0));
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814648);
  OUTLINED_FUNCTION_78(v121, (uint64_t)v406);
  OUTLINED_FUNCTION_40(v122);
  MEMORY[0x1E0C80A78](v123);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v124 + 15) & 0xFFFFFFFFFFFFFFF0));
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814650);
  OUTLINED_FUNCTION_78(v125, (uint64_t)v405);
  OUTLINED_FUNCTION_40(v126);
  MEMORY[0x1E0C80A78](v127);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0));
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814658);
  OUTLINED_FUNCTION_78(v129, (uint64_t)v404);
  OUTLINED_FUNCTION_40(v130);
  MEMORY[0x1E0C80A78](v131);
  OUTLINED_FUNCTION_129((uint64_t)v336 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0));
  v398 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814660);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v398 - 8));
  MEMORY[0x1E0C80A78](v133);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v134);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814668);
  OUTLINED_FUNCTION_78(v135, (uint64_t)v403);
  OUTLINED_FUNCTION_40(v136);
  MEMORY[0x1E0C80A78](v137);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v138);
  v396 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814670);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v396 - 8));
  MEMORY[0x1E0C80A78](v139);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v140);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814678);
  OUTLINED_FUNCTION_78(v141, (uint64_t)v402);
  OUTLINED_FUNCTION_40(v142);
  MEMORY[0x1E0C80A78](v143);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v144);
  v394 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814680);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v394 - 8));
  MEMORY[0x1E0C80A78](v145);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v146);
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814688);
  OUTLINED_FUNCTION_78(v147, (uint64_t)v401);
  OUTLINED_FUNCTION_40(v148);
  MEMORY[0x1E0C80A78](v149);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v150);
  v392 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814690);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v392 - 8));
  MEMORY[0x1E0C80A78](v151);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v152);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814698);
  OUTLINED_FUNCTION_78(v153, (uint64_t)v400);
  OUTLINED_FUNCTION_40(v154);
  MEMORY[0x1E0C80A78](v155);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v156);
  v390 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8146A0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v390 - 8));
  MEMORY[0x1E0C80A78](v157);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v158);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8146A8);
  OUTLINED_FUNCTION_78(v159, (uint64_t)v399);
  OUTLINED_FUNCTION_40(v160);
  MEMORY[0x1E0C80A78](v161);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v162);
  v388 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8146B0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v388 - 8));
  MEMORY[0x1E0C80A78](v163);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v164);
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8146B8);
  OUTLINED_FUNCTION_78(v165, (uint64_t)v397);
  OUTLINED_FUNCTION_40(v166);
  MEMORY[0x1E0C80A78](v167);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v168);
  v386 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8146C0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v386 - 8));
  MEMORY[0x1E0C80A78](v169);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v170);
  v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8146C8);
  OUTLINED_FUNCTION_78(v171, (uint64_t)v395);
  OUTLINED_FUNCTION_40(v172);
  MEMORY[0x1E0C80A78](v173);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v174);
  v384 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8146D0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v384 - 8));
  MEMORY[0x1E0C80A78](v175);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v176);
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8146D8);
  OUTLINED_FUNCTION_78(v177, (uint64_t)v393);
  OUTLINED_FUNCTION_40(v178);
  MEMORY[0x1E0C80A78](v179);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v180);
  v382 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8146E0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v382 - 8));
  MEMORY[0x1E0C80A78](v181);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v182);
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8146E8);
  OUTLINED_FUNCTION_78(v183, (uint64_t)v391);
  OUTLINED_FUNCTION_40(v184);
  MEMORY[0x1E0C80A78](v185);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v186);
  v380 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8146F0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v380 - 8));
  MEMORY[0x1E0C80A78](v187);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v188);
  v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8146F8);
  OUTLINED_FUNCTION_78(v189, (uint64_t)v389);
  OUTLINED_FUNCTION_40(v190);
  MEMORY[0x1E0C80A78](v191);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v192);
  v378 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814700);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v378 - 8));
  MEMORY[0x1E0C80A78](v193);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v194);
  v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814708);
  OUTLINED_FUNCTION_78(v195, (uint64_t)v387);
  OUTLINED_FUNCTION_40(v196);
  MEMORY[0x1E0C80A78](v197);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v198);
  v376 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814710);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v376 - 8));
  MEMORY[0x1E0C80A78](v199);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v200);
  v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814718);
  OUTLINED_FUNCTION_78(v201, (uint64_t)v385);
  OUTLINED_FUNCTION_40(v202);
  MEMORY[0x1E0C80A78](v203);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v204);
  v374 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814720);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v374 - 8));
  MEMORY[0x1E0C80A78](v205);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v206);
  v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814728);
  OUTLINED_FUNCTION_78(v207, (uint64_t)v383);
  OUTLINED_FUNCTION_40(v208);
  MEMORY[0x1E0C80A78](v209);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v210);
  v372 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814730);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v372 - 8));
  MEMORY[0x1E0C80A78](v211);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v212);
  v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814738);
  OUTLINED_FUNCTION_78(v213, (uint64_t)v381);
  OUTLINED_FUNCTION_40(v214);
  MEMORY[0x1E0C80A78](v215);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v216);
  v370 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814740);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v370 - 8));
  MEMORY[0x1E0C80A78](v217);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v218);
  v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814748);
  OUTLINED_FUNCTION_78(v219, (uint64_t)v379);
  OUTLINED_FUNCTION_40(v220);
  MEMORY[0x1E0C80A78](v221);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v222);
  v368 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814750);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v368 - 8));
  MEMORY[0x1E0C80A78](v223);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v224);
  v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814758);
  OUTLINED_FUNCTION_78(v225, (uint64_t)v377);
  OUTLINED_FUNCTION_40(v226);
  MEMORY[0x1E0C80A78](v227);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v228);
  v366 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814760);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v366 - 8));
  MEMORY[0x1E0C80A78](v229);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v230);
  v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814768);
  OUTLINED_FUNCTION_78(v231, (uint64_t)v375);
  OUTLINED_FUNCTION_40(v232);
  MEMORY[0x1E0C80A78](v233);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v234);
  v364 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814770);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v364 - 8));
  MEMORY[0x1E0C80A78](v235);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v236);
  v237 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814778);
  OUTLINED_FUNCTION_78(v237, (uint64_t)v373);
  OUTLINED_FUNCTION_40(v238);
  MEMORY[0x1E0C80A78](v239);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v240);
  v362 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814780);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v362 - 8));
  MEMORY[0x1E0C80A78](v241);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v242);
  v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814788);
  OUTLINED_FUNCTION_78(v243, (uint64_t)v371);
  OUTLINED_FUNCTION_40(v244);
  MEMORY[0x1E0C80A78](v245);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v246);
  v359 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814790);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v359 - 8));
  MEMORY[0x1E0C80A78](v247);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v248);
  v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814798);
  OUTLINED_FUNCTION_78(v249, (uint64_t)v369);
  OUTLINED_FUNCTION_40(v250);
  MEMORY[0x1E0C80A78](v251);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v252);
  v358 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8147A0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v358 - 8));
  MEMORY[0x1E0C80A78](v253);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v254);
  v255 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8147A8);
  OUTLINED_FUNCTION_78(v255, (uint64_t)v367);
  OUTLINED_FUNCTION_40(v256);
  MEMORY[0x1E0C80A78](v257);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v258);
  v356 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8147B0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v356 - 8));
  MEMORY[0x1E0C80A78](v259);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v260);
  v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8147B8);
  OUTLINED_FUNCTION_78(v261, (uint64_t)v365);
  OUTLINED_FUNCTION_40(v262);
  MEMORY[0x1E0C80A78](v263);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v264);
  v354 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8147C0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v354 - 8));
  MEMORY[0x1E0C80A78](v265);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v266);
  v267 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8147C8);
  OUTLINED_FUNCTION_78(v267, (uint64_t)v363);
  OUTLINED_FUNCTION_40(v268);
  MEMORY[0x1E0C80A78](v269);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v270);
  v352 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8147D0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v352 - 8));
  MEMORY[0x1E0C80A78](v271);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v272);
  v273 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8147D8);
  OUTLINED_FUNCTION_78(v273, (uint64_t)v361);
  OUTLINED_FUNCTION_40(v274);
  MEMORY[0x1E0C80A78](v275);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v276);
  v277 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8147E0);
  OUTLINED_FUNCTION_78(v277, (uint64_t)v360);
  OUTLINED_FUNCTION_40(v278);
  MEMORY[0x1E0C80A78](v279);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v280);
  v349 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8147E8);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v349 - 8));
  MEMORY[0x1E0C80A78](v281);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v282);
  v348 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8147F0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v348 - 8));
  MEMORY[0x1E0C80A78](v283);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v284);
  v285 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8147F8);
  OUTLINED_FUNCTION_78(v285, (uint64_t)v357);
  OUTLINED_FUNCTION_40(v286);
  MEMORY[0x1E0C80A78](v287);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v288);
  v346 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814800);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v346 - 8));
  MEMORY[0x1E0C80A78](v289);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v290);
  v291 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814808);
  OUTLINED_FUNCTION_78(v291, (uint64_t)v355);
  OUTLINED_FUNCTION_40(v292);
  MEMORY[0x1E0C80A78](v293);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v294);
  v344 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814810);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v344 - 8));
  MEMORY[0x1E0C80A78](v295);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v296);
  v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814818);
  OUTLINED_FUNCTION_78(v297, (uint64_t)v353);
  OUTLINED_FUNCTION_40(v298);
  MEMORY[0x1E0C80A78](v299);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v300);
  v341 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814820);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v341 - 8));
  MEMORY[0x1E0C80A78](v301);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v302);
  v303 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814828);
  OUTLINED_FUNCTION_78(v303, (uint64_t)v351);
  OUTLINED_FUNCTION_40(v304);
  MEMORY[0x1E0C80A78](v305);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v306);
  v340 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814830);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v340 - 8));
  MEMORY[0x1E0C80A78](v307);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v308);
  v309 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814838);
  OUTLINED_FUNCTION_78(v309, (uint64_t)v350);
  OUTLINED_FUNCTION_40(v310);
  MEMORY[0x1E0C80A78](v311);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v312);
  v339 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814840);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v339 - 8));
  MEMORY[0x1E0C80A78](v313);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v314);
  v315 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814848);
  OUTLINED_FUNCTION_78(v315, (uint64_t)v347);
  OUTLINED_FUNCTION_40(v316);
  MEMORY[0x1E0C80A78](v317);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v318);
  v338 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814850);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v338 - 8));
  MEMORY[0x1E0C80A78](v319);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v320);
  v321 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814858);
  OUTLINED_FUNCTION_78(v321, (uint64_t)v345);
  OUTLINED_FUNCTION_40(v322);
  MEMORY[0x1E0C80A78](v323);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v324);
  v337 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814860);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v337 - 8));
  MEMORY[0x1E0C80A78](v325);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v326);
  v327 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814868);
  OUTLINED_FUNCTION_78(v327, (uint64_t)v343);
  OUTLINED_FUNCTION_40(v328);
  MEMORY[0x1E0C80A78](v329);
  OUTLINED_FUNCTION_72();
  v330 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814870);
  MEMORY[0x1E0C80A78](v330);
  OUTLINED_FUNCTION_0();
  v427 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814878);
  v425[2] = *(_QWORD *)(v427 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v331);
  OUTLINED_FUNCTION_0();
  v334 = v333 - v332;
  v335 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A604F694();
  v426 = v334;
  sub_1A6123DD0();
  __asm { BR              X9 }
}

void sub_1A604E630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 65) = 0;
  sub_1A6050E40();
  OUTLINED_FUNCTION_7_27();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 120) + 8))(v1, v0);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A604F694()
{
  unint64_t result;

  result = qword_1EE814880;
  if (!qword_1EE814880)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61332D0, &type metadata for NextHourToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814880);
  }
  return result;
}

unint64_t sub_1A604F6D0()
{
  unint64_t result;

  result = qword_1EE814888;
  if (!qword_1EE814888)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6133280, &type metadata for NextHourToken.ClearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814888);
  }
  return result;
}

unint64_t sub_1A604F70C()
{
  unint64_t result;

  result = qword_1EE814890;
  if (!qword_1EE814890)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6133230, &type metadata for NextHourToken.HailStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814890);
  }
  return result;
}

unint64_t sub_1A604F748()
{
  unint64_t result;

  result = qword_1EE814898;
  if (!qword_1EE814898)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61331E0, &type metadata for NextHourToken.HailStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814898);
  }
  return result;
}

unint64_t sub_1A604F784()
{
  unint64_t result;

  result = qword_1EE8148A0;
  if (!qword_1EE8148A0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6133190, &type metadata for NextHourToken.HailStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8148A0);
  }
  return result;
}

unint64_t sub_1A604F7C0()
{
  unint64_t result;

  result = qword_1EE8148A8;
  if (!qword_1EE8148A8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6133140, &type metadata for NextHourToken.HailStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8148A8);
  }
  return result;
}

unint64_t sub_1A604F7FC()
{
  unint64_t result;

  result = qword_1EE8148B0;
  if (!qword_1EE8148B0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61330F0, &type metadata for NextHourToken.HailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8148B0);
  }
  return result;
}

unint64_t sub_1A604F838()
{
  unint64_t result;

  result = qword_1EE8148B8;
  if (!qword_1EE8148B8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61330A0, &type metadata for NextHourToken.PossibleHailStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8148B8);
  }
  return result;
}

unint64_t sub_1A604F874()
{
  unint64_t result;

  result = qword_1EE8148C0;
  if (!qword_1EE8148C0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6133050, &type metadata for NextHourToken.PossibleHailStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8148C0);
  }
  return result;
}

unint64_t sub_1A604F8B0()
{
  unint64_t result;

  result = qword_1EE8148C8;
  if (!qword_1EE8148C8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6133000, &type metadata for NextHourToken.PossibleHailStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8148C8);
  }
  return result;
}

unint64_t sub_1A604F8EC()
{
  unint64_t result;

  result = qword_1EE8148D0;
  if (!qword_1EE8148D0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132FB0, &type metadata for NextHourToken.PossibleHailStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8148D0);
  }
  return result;
}

unint64_t sub_1A604F928()
{
  unint64_t result;

  result = qword_1EE8148D8;
  if (!qword_1EE8148D8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132F60, &type metadata for NextHourToken.PossibleHailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8148D8);
  }
  return result;
}

unint64_t sub_1A604F964()
{
  unint64_t result;

  result = qword_1EE8148E0;
  if (!qword_1EE8148E0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132F10, &type metadata for NextHourToken.SleetStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8148E0);
  }
  return result;
}

unint64_t sub_1A604F9A0()
{
  unint64_t result;

  result = qword_1EE8148E8;
  if (!qword_1EE8148E8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132EC0, &type metadata for NextHourToken.SleetStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8148E8);
  }
  return result;
}

unint64_t sub_1A604F9DC()
{
  unint64_t result;

  result = qword_1EE8148F0;
  if (!qword_1EE8148F0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132E70, &type metadata for NextHourToken.SleetStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8148F0);
  }
  return result;
}

unint64_t sub_1A604FA18()
{
  unint64_t result;

  result = qword_1EE8148F8;
  if (!qword_1EE8148F8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132E20, &type metadata for NextHourToken.SleetStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8148F8);
  }
  return result;
}

unint64_t sub_1A604FA54()
{
  unint64_t result;

  result = qword_1EE814900;
  if (!qword_1EE814900)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132DD0, &type metadata for NextHourToken.SleetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814900);
  }
  return result;
}

unint64_t sub_1A604FA90()
{
  unint64_t result;

  result = qword_1EE814908;
  if (!qword_1EE814908)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132D80, &type metadata for NextHourToken.PossibleSleetStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814908);
  }
  return result;
}

unint64_t sub_1A604FACC()
{
  unint64_t result;

  result = qword_1EE814910;
  if (!qword_1EE814910)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132D30, &type metadata for NextHourToken.PossibleSleetStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814910);
  }
  return result;
}

unint64_t sub_1A604FB08()
{
  unint64_t result;

  result = qword_1EE814918;
  if (!qword_1EE814918)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132CE0, &type metadata for NextHourToken.PossibleSleetStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814918);
  }
  return result;
}

unint64_t sub_1A604FB44()
{
  unint64_t result;

  result = qword_1EE814920;
  if (!qword_1EE814920)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132C90, &type metadata for NextHourToken.PossibleSleetStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814920);
  }
  return result;
}

unint64_t sub_1A604FB80()
{
  unint64_t result;

  result = qword_1EE814928;
  if (!qword_1EE814928)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132C40, &type metadata for NextHourToken.PossibleSleetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814928);
  }
  return result;
}

unint64_t sub_1A604FBBC()
{
  unint64_t result;

  result = qword_1EE814930;
  if (!qword_1EE814930)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132BF0, &type metadata for NextHourToken.HeavySnowToSnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814930);
  }
  return result;
}

unint64_t sub_1A604FBF8()
{
  unint64_t result;

  result = qword_1EE814938;
  if (!qword_1EE814938)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132BA0, &type metadata for NextHourToken.SnowToHeavySnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814938);
  }
  return result;
}

unint64_t sub_1A604FC34()
{
  unint64_t result;

  result = qword_1EE814940;
  if (!qword_1EE814940)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132B50, &type metadata for NextHourToken.HeavySnowToFlurriesStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814940);
  }
  return result;
}

unint64_t sub_1A604FC70()
{
  unint64_t result;

  result = qword_1EE814948;
  if (!qword_1EE814948)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132B00, &type metadata for NextHourToken.FlurriesToHeavySnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814948);
  }
  return result;
}

unint64_t sub_1A604FCAC()
{
  unint64_t result;

  result = qword_1EE814950;
  if (!qword_1EE814950)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132AB0, &type metadata for NextHourToken.HeavySnowToSnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814950);
  }
  return result;
}

unint64_t sub_1A604FCE8()
{
  unint64_t result;

  result = qword_1EE814958;
  if (!qword_1EE814958)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132A60, &type metadata for NextHourToken.SnowToHeavySnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814958);
  }
  return result;
}

unint64_t sub_1A604FD24()
{
  unint64_t result;

  result = qword_1EE814960;
  if (!qword_1EE814960)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132A10, &type metadata for NextHourToken.HeavySnowToFlurriesStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814960);
  }
  return result;
}

unint64_t sub_1A604FD60()
{
  unint64_t result;

  result = qword_1EE814968;
  if (!qword_1EE814968)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61329C0, &type metadata for NextHourToken.FlurriesToHeavySnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814968);
  }
  return result;
}

unint64_t sub_1A604FD9C()
{
  unint64_t result;

  result = qword_1EE814970;
  if (!qword_1EE814970)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132970, &type metadata for NextHourToken.HeavySnowToSnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814970);
  }
  return result;
}

unint64_t sub_1A604FDD8()
{
  unint64_t result;

  result = qword_1EE814978;
  if (!qword_1EE814978)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132920, &type metadata for NextHourToken.SnowToHeavySnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814978);
  }
  return result;
}

unint64_t sub_1A604FE14()
{
  unint64_t result;

  result = qword_1EE814980;
  if (!qword_1EE814980)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61328D0, &type metadata for NextHourToken.HeavySnowToFlurriesStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814980);
  }
  return result;
}

unint64_t sub_1A604FE50()
{
  unint64_t result;

  result = qword_1EE814988;
  if (!qword_1EE814988)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132880, &type metadata for NextHourToken.FlurriesToHeavySnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814988);
  }
  return result;
}

unint64_t sub_1A604FE8C()
{
  unint64_t result;

  result = qword_1EE814990;
  if (!qword_1EE814990)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132830, &type metadata for NextHourToken.HeavySnowToSnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814990);
  }
  return result;
}

unint64_t sub_1A604FEC8()
{
  unint64_t result;

  result = qword_1EE814998;
  if (!qword_1EE814998)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61327E0, &type metadata for NextHourToken.SnowToHeavySnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814998);
  }
  return result;
}

unint64_t sub_1A604FF04()
{
  unint64_t result;

  result = qword_1EE8149A0;
  if (!qword_1EE8149A0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132790, &type metadata for NextHourToken.HeavySnowToFlurriesStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8149A0);
  }
  return result;
}

unint64_t sub_1A604FF40()
{
  unint64_t result;

  result = qword_1EE8149A8;
  if (!qword_1EE8149A8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132740, &type metadata for NextHourToken.FlurriesToHeavySnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8149A8);
  }
  return result;
}

unint64_t sub_1A604FF7C()
{
  unint64_t result;

  result = qword_1EE8149B0;
  if (!qword_1EE8149B0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61326F0, &type metadata for NextHourToken.HeavySnowToSnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8149B0);
  }
  return result;
}

unint64_t sub_1A604FFB8()
{
  unint64_t result;

  result = qword_1EE8149B8;
  if (!qword_1EE8149B8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61326A0, &type metadata for NextHourToken.SnowToHeavySnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8149B8);
  }
  return result;
}

unint64_t sub_1A604FFF4()
{
  unint64_t result;

  result = qword_1EE8149C0;
  if (!qword_1EE8149C0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132650, &type metadata for NextHourToken.HeavySnowToFlurriesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8149C0);
  }
  return result;
}

unint64_t sub_1A6050030()
{
  unint64_t result;

  result = qword_1EE8149C8;
  if (!qword_1EE8149C8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132600, &type metadata for NextHourToken.FlurriesToHeavySnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8149C8);
  }
  return result;
}

unint64_t sub_1A605006C()
{
  unint64_t result;

  result = qword_1EE8149D0;
  if (!qword_1EE8149D0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61325B0, &type metadata for NextHourToken.HeavySnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8149D0);
  }
  return result;
}

unint64_t sub_1A60500A8()
{
  unint64_t result;

  result = qword_1EE8149D8;
  if (!qword_1EE8149D8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132560, &type metadata for NextHourToken.HeavySnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8149D8);
  }
  return result;
}

unint64_t sub_1A60500E4()
{
  unint64_t result;

  result = qword_1EE8149E0;
  if (!qword_1EE8149E0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132510, &type metadata for NextHourToken.HeavySnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8149E0);
  }
  return result;
}

unint64_t sub_1A6050120()
{
  unint64_t result;

  result = qword_1EE8149E8;
  if (!qword_1EE8149E8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61324C0, &type metadata for NextHourToken.HeavySnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8149E8);
  }
  return result;
}

unint64_t sub_1A605015C()
{
  unint64_t result;

  result = qword_1EE8149F0;
  if (!qword_1EE8149F0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132470, &type metadata for NextHourToken.HeavySnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8149F0);
  }
  return result;
}

unint64_t sub_1A6050198()
{
  unint64_t result;

  result = qword_1EE8149F8;
  if (!qword_1EE8149F8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132420, &type metadata for NextHourToken.SnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8149F8);
  }
  return result;
}

unint64_t sub_1A60501D4()
{
  unint64_t result;

  result = qword_1EE814A00;
  if (!qword_1EE814A00)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61323D0, &type metadata for NextHourToken.SnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A00);
  }
  return result;
}

unint64_t sub_1A6050210()
{
  unint64_t result;

  result = qword_1EE814A08;
  if (!qword_1EE814A08)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132380, &type metadata for NextHourToken.SnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A08);
  }
  return result;
}

unint64_t sub_1A605024C()
{
  unint64_t result;

  result = qword_1EE814A10;
  if (!qword_1EE814A10)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132330, &type metadata for NextHourToken.SnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A10);
  }
  return result;
}

unint64_t sub_1A6050288()
{
  unint64_t result;

  result = qword_1EE814A18;
  if (!qword_1EE814A18)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61322E0, &type metadata for NextHourToken.SnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A18);
  }
  return result;
}

unint64_t sub_1A60502C4()
{
  unint64_t result;

  result = qword_1EE814A20;
  if (!qword_1EE814A20)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132290, &type metadata for NextHourToken.FlurriesStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A20);
  }
  return result;
}

unint64_t sub_1A6050300()
{
  unint64_t result;

  result = qword_1EE814A28;
  if (!qword_1EE814A28)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132240, &type metadata for NextHourToken.FlurriesStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A28);
  }
  return result;
}

unint64_t sub_1A605033C()
{
  unint64_t result;

  result = qword_1EE814A30;
  if (!qword_1EE814A30)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61321F0, &type metadata for NextHourToken.FlurriesStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A30);
  }
  return result;
}

unint64_t sub_1A6050378()
{
  unint64_t result;

  result = qword_1EE814A38;
  if (!qword_1EE814A38)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61321A0, &type metadata for NextHourToken.FlurriesStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A38);
  }
  return result;
}

unint64_t sub_1A60503B4()
{
  unint64_t result;

  result = qword_1EE814A40;
  if (!qword_1EE814A40)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132150, &type metadata for NextHourToken.FlurriesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A40);
  }
  return result;
}

unint64_t sub_1A60503F0()
{
  unint64_t result;

  result = qword_1EE814A48;
  if (!qword_1EE814A48)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132100, &type metadata for NextHourToken.PossibleFlurriesStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A48);
  }
  return result;
}

unint64_t sub_1A605042C()
{
  unint64_t result;

  result = qword_1EE814A50;
  if (!qword_1EE814A50)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61320B0, &type metadata for NextHourToken.PossibleFlurriesStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A50);
  }
  return result;
}

unint64_t sub_1A6050468()
{
  unint64_t result;

  result = qword_1EE814A58;
  if (!qword_1EE814A58)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132060, &type metadata for NextHourToken.PossibleFlurriesStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A58);
  }
  return result;
}

unint64_t sub_1A60504A4()
{
  unint64_t result;

  result = qword_1EE814A60;
  if (!qword_1EE814A60)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6132010, &type metadata for NextHourToken.PossibleFlurriesStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A60);
  }
  return result;
}

unint64_t sub_1A60504E0()
{
  unint64_t result;

  result = qword_1EE814A68;
  if (!qword_1EE814A68)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131FC0, &type metadata for NextHourToken.PossibleFlurriesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A68);
  }
  return result;
}

unint64_t sub_1A605051C()
{
  unint64_t result;

  result = qword_1EE814A70;
  if (!qword_1EE814A70)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131F70, &type metadata for NextHourToken.HeavyRainToRainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A70);
  }
  return result;
}

unint64_t sub_1A6050558()
{
  unint64_t result;

  result = qword_1EE814A78;
  if (!qword_1EE814A78)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131F20, &type metadata for NextHourToken.RainToHeavyRainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A78);
  }
  return result;
}

unint64_t sub_1A6050594()
{
  unint64_t result;

  result = qword_1EE814A80;
  if (!qword_1EE814A80)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131ED0, &type metadata for NextHourToken.HeavyRainToDrizzleStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A80);
  }
  return result;
}

unint64_t sub_1A60505D0()
{
  unint64_t result;

  result = qword_1EE814A88;
  if (!qword_1EE814A88)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131E80, &type metadata for NextHourToken.DrizzleToHeavyRainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A88);
  }
  return result;
}

unint64_t sub_1A605060C()
{
  unint64_t result;

  result = qword_1EE814A90;
  if (!qword_1EE814A90)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131E30, &type metadata for NextHourToken.HeavyRainToRainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A90);
  }
  return result;
}

unint64_t sub_1A6050648()
{
  unint64_t result;

  result = qword_1EE814A98;
  if (!qword_1EE814A98)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131DE0, &type metadata for NextHourToken.RainToHeavyRainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814A98);
  }
  return result;
}

unint64_t sub_1A6050684()
{
  unint64_t result;

  result = qword_1EE814AA0;
  if (!qword_1EE814AA0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131D90, &type metadata for NextHourToken.HeavyRainToDrizzleStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814AA0);
  }
  return result;
}

unint64_t sub_1A60506C0()
{
  unint64_t result;

  result = qword_1EE814AA8;
  if (!qword_1EE814AA8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131D40, &type metadata for NextHourToken.DrizzleToHeavyRainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814AA8);
  }
  return result;
}

unint64_t sub_1A60506FC()
{
  unint64_t result;

  result = qword_1EE814AB0;
  if (!qword_1EE814AB0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131CF0, &type metadata for NextHourToken.HeavyRainToRainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814AB0);
  }
  return result;
}

unint64_t sub_1A6050738()
{
  unint64_t result;

  result = qword_1EE814AB8;
  if (!qword_1EE814AB8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131CA0, &type metadata for NextHourToken.RainToHeavyRainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814AB8);
  }
  return result;
}

unint64_t sub_1A6050774()
{
  unint64_t result;

  result = qword_1EE814AC0;
  if (!qword_1EE814AC0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131C50, &type metadata for NextHourToken.HeavyRainToDrizzleStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814AC0);
  }
  return result;
}

unint64_t sub_1A60507B0()
{
  unint64_t result;

  result = qword_1EE814AC8;
  if (!qword_1EE814AC8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131C00, &type metadata for NextHourToken.DrizzleToHeavyRainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814AC8);
  }
  return result;
}

unint64_t sub_1A60507EC()
{
  unint64_t result;

  result = qword_1EE814AD0;
  if (!qword_1EE814AD0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131BB0, &type metadata for NextHourToken.HeavyRainToRainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814AD0);
  }
  return result;
}

unint64_t sub_1A6050828()
{
  unint64_t result;

  result = qword_1EE814AD8;
  if (!qword_1EE814AD8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131B60, &type metadata for NextHourToken.RainToHeavyRainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814AD8);
  }
  return result;
}

unint64_t sub_1A6050864()
{
  unint64_t result;

  result = qword_1EE814AE0;
  if (!qword_1EE814AE0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131B10, &type metadata for NextHourToken.HeavyRainToDrizzleStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814AE0);
  }
  return result;
}

unint64_t sub_1A60508A0()
{
  unint64_t result;

  result = qword_1EE814AE8;
  if (!qword_1EE814AE8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131AC0, &type metadata for NextHourToken.DrizzleToHeavyRainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814AE8);
  }
  return result;
}

unint64_t sub_1A60508DC()
{
  unint64_t result;

  result = qword_1EE814AF0;
  if (!qword_1EE814AF0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131A70, &type metadata for NextHourToken.HeavyRainToRainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814AF0);
  }
  return result;
}

unint64_t sub_1A6050918()
{
  unint64_t result;

  result = qword_1EE814AF8;
  if (!qword_1EE814AF8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131A20, &type metadata for NextHourToken.RainToHeavyRainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814AF8);
  }
  return result;
}

unint64_t sub_1A6050954()
{
  unint64_t result;

  result = qword_1EE814B00;
  if (!qword_1EE814B00)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61319D0, &type metadata for NextHourToken.HeavyRainToDrizzleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B00);
  }
  return result;
}

unint64_t sub_1A6050990()
{
  unint64_t result;

  result = qword_1EE814B08;
  if (!qword_1EE814B08)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131980, &type metadata for NextHourToken.DrizzleToHeavyRainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B08);
  }
  return result;
}

unint64_t sub_1A60509CC()
{
  unint64_t result;

  result = qword_1EE814B10;
  if (!qword_1EE814B10)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131930, &type metadata for NextHourToken.HeavyRainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B10);
  }
  return result;
}

unint64_t sub_1A6050A08()
{
  unint64_t result;

  result = qword_1EE814B18;
  if (!qword_1EE814B18)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61318E0, &type metadata for NextHourToken.HeavyRainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B18);
  }
  return result;
}

unint64_t sub_1A6050A44()
{
  unint64_t result;

  result = qword_1EE814B20;
  if (!qword_1EE814B20)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131890, &type metadata for NextHourToken.HeavyRainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B20);
  }
  return result;
}

unint64_t sub_1A6050A80()
{
  unint64_t result;

  result = qword_1EE814B28;
  if (!qword_1EE814B28)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131840, &type metadata for NextHourToken.HeavyRainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B28);
  }
  return result;
}

unint64_t sub_1A6050ABC()
{
  unint64_t result;

  result = qword_1EE814B30;
  if (!qword_1EE814B30)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61317F0, &type metadata for NextHourToken.HeavyRainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B30);
  }
  return result;
}

unint64_t sub_1A6050AF8()
{
  unint64_t result;

  result = qword_1EE814B38;
  if (!qword_1EE814B38)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61317A0, &type metadata for NextHourToken.RainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B38);
  }
  return result;
}

unint64_t sub_1A6050B34()
{
  unint64_t result;

  result = qword_1EE814B40;
  if (!qword_1EE814B40)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131750, &type metadata for NextHourToken.RainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B40);
  }
  return result;
}

unint64_t sub_1A6050B70()
{
  unint64_t result;

  result = qword_1EE814B48;
  if (!qword_1EE814B48)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131700, &type metadata for NextHourToken.RainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B48);
  }
  return result;
}

unint64_t sub_1A6050BAC()
{
  unint64_t result;

  result = qword_1EE814B50;
  if (!qword_1EE814B50)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61316B0, &type metadata for NextHourToken.RainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B50);
  }
  return result;
}

unint64_t sub_1A6050BE8()
{
  unint64_t result;

  result = qword_1EE814B58;
  if (!qword_1EE814B58)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131660, &type metadata for NextHourToken.RainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B58);
  }
  return result;
}

unint64_t sub_1A6050C24()
{
  unint64_t result;

  result = qword_1EE814B60;
  if (!qword_1EE814B60)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131610, &type metadata for NextHourToken.DrizzleStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B60);
  }
  return result;
}

unint64_t sub_1A6050C60()
{
  unint64_t result;

  result = qword_1EE814B68;
  if (!qword_1EE814B68)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61315C0, &type metadata for NextHourToken.DrizzleStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B68);
  }
  return result;
}

unint64_t sub_1A6050C9C()
{
  unint64_t result;

  result = qword_1EE814B70;
  if (!qword_1EE814B70)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131570, &type metadata for NextHourToken.DrizzleStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B70);
  }
  return result;
}

unint64_t sub_1A6050CD8()
{
  unint64_t result;

  result = qword_1EE814B78;
  if (!qword_1EE814B78)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131520, &type metadata for NextHourToken.DrizzleStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B78);
  }
  return result;
}

unint64_t sub_1A6050D14()
{
  unint64_t result;

  result = qword_1EE814B80;
  if (!qword_1EE814B80)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61314D0, &type metadata for NextHourToken.DrizzleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B80);
  }
  return result;
}

unint64_t sub_1A6050D50()
{
  unint64_t result;

  result = qword_1EE814B88;
  if (!qword_1EE814B88)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131480, &type metadata for NextHourToken.PossibleDrizzleStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B88);
  }
  return result;
}

unint64_t sub_1A6050D8C()
{
  unint64_t result;

  result = qword_1EE814B90;
  if (!qword_1EE814B90)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131430, &type metadata for NextHourToken.PossibleDrizzleStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B90);
  }
  return result;
}

unint64_t sub_1A6050DC8()
{
  unint64_t result;

  result = qword_1EE814B98;
  if (!qword_1EE814B98)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61313E0, &type metadata for NextHourToken.PossibleDrizzleStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814B98);
  }
  return result;
}

unint64_t sub_1A6050E04()
{
  unint64_t result;

  result = qword_1EE814BA0;
  if (!qword_1EE814BA0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131390, &type metadata for NextHourToken.PossibleDrizzleStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814BA0);
  }
  return result;
}

unint64_t sub_1A6050E40()
{
  unint64_t result;

  result = qword_1EE814BA8;
  if (!qword_1EE814BA8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131340, &type metadata for NextHourToken.PossibleDrizzleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814BA8);
  }
  return result;
}

void NextHourToken.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  unint64_t v352;
  unint64_t v353;
  uint64_t v354;
  _QWORD *v355;
  _QWORD *v356;
  uint64_t v357[13];
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  _BYTE v363[8];
  _BYTE v364[8];
  uint64_t v365;
  _BYTE v366[8];
  uint64_t v367;
  _BYTE v368[8];
  _BYTE v369[8];
  uint64_t v370;
  _BYTE v371[8];
  uint64_t v372;
  _BYTE v373[8];
  uint64_t v374;
  _BYTE v375[8];
  uint64_t v376;
  _BYTE v377[8];
  uint64_t v378;
  _BYTE v379[8];
  uint64_t v380;
  _BYTE v381[8];
  uint64_t v382;
  _BYTE v383[8];
  _BYTE v384[8];
  uint64_t v385;
  _BYTE v386[8];
  uint64_t v387;
  _BYTE v388[8];
  uint64_t v389;
  _BYTE v390[8];
  uint64_t v391;
  _BYTE v392[8];
  uint64_t v393;
  _BYTE v394[8];
  uint64_t v395;
  _BYTE v396[8];
  uint64_t v397;
  _BYTE v398[8];
  uint64_t v399;
  _BYTE v400[8];
  uint64_t v401;
  _BYTE v402[8];
  uint64_t v403;
  _BYTE v404[8];
  uint64_t v405;
  _BYTE v406[8];
  uint64_t v407;
  _BYTE v408[8];
  uint64_t v409;
  _BYTE v410[8];
  uint64_t v411;
  _BYTE v412[8];
  uint64_t v413;
  _BYTE v414[8];
  uint64_t v415;
  _BYTE v416[8];
  uint64_t v417;
  _BYTE v418[8];
  uint64_t v419;
  _BYTE v420[8];
  uint64_t v421;
  _BYTE v422[8];
  _BYTE v423[8];
  _BYTE v424[8];
  _BYTE v425[8];
  _BYTE v426[8];
  _BYTE v427[8];
  _BYTE v428[8];
  _BYTE v429[8];
  _BYTE v430[8];
  _BYTE v431[8];
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  _QWORD *v446;
  uint64_t v447;

  v442 = a2;
  v421 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814BB0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v421 - 8));
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_22(v5, v357[0]);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814BB8);
  OUTLINED_FUNCTION_78(v6, (uint64_t)v363);
  OUTLINED_FUNCTION_40(v7);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_0();
  v441 = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814BC0);
  OUTLINED_FUNCTION_78(v10, (uint64_t)v431);
  OUTLINED_FUNCTION_40(v11);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_11_0();
  v440 = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814BC8);
  OUTLINED_FUNCTION_78(v14, (uint64_t)v430);
  OUTLINED_FUNCTION_40(v15);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_215(v17, v357[0]);
  v419 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814BD0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v419 - 8));
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_11_0();
  v439 = v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814BD8);
  OUTLINED_FUNCTION_78(v20, (uint64_t)v429);
  OUTLINED_FUNCTION_40(v21);
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_11_0();
  v438 = v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814BE0);
  OUTLINED_FUNCTION_78(v24, (uint64_t)v428);
  OUTLINED_FUNCTION_40(v25);
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_214(v27, v357[0]);
  v417 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814BE8);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v417 - 8));
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_11_0();
  v437 = v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814BF0);
  OUTLINED_FUNCTION_78(v30, (uint64_t)v427);
  OUTLINED_FUNCTION_40(v31);
  MEMORY[0x1E0C80A78](v32);
  OUTLINED_FUNCTION_11_0();
  v436 = v33;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814BF8);
  OUTLINED_FUNCTION_78(v34, (uint64_t)v426);
  OUTLINED_FUNCTION_40(v35);
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_17_16(v37, v357[0]);
  v415 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C00);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v415 - 8));
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_11_0();
  v435 = v39;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C08);
  OUTLINED_FUNCTION_78(v40, (uint64_t)v425);
  OUTLINED_FUNCTION_40(v41);
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_11_0();
  v434 = v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C10);
  OUTLINED_FUNCTION_78(v44, (uint64_t)v424);
  OUTLINED_FUNCTION_40(v45);
  MEMORY[0x1E0C80A78](v46);
  OUTLINED_FUNCTION_213(v47, v357[0]);
  v413 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C18);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v413 - 8));
  MEMORY[0x1E0C80A78](v48);
  OUTLINED_FUNCTION_11_0();
  v433 = v49;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C20);
  OUTLINED_FUNCTION_78(v50, (uint64_t)v423);
  OUTLINED_FUNCTION_40(v51);
  MEMORY[0x1E0C80A78](v52);
  OUTLINED_FUNCTION_11_0();
  v432 = v53;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C28);
  OUTLINED_FUNCTION_78(v54, (uint64_t)v422);
  OUTLINED_FUNCTION_40(v55);
  MEMORY[0x1E0C80A78](v56);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  v411 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C30);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v411 - 8));
  MEMORY[0x1E0C80A78](v58);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v59);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C38);
  OUTLINED_FUNCTION_78(v60, (uint64_t)&v421);
  OUTLINED_FUNCTION_40(v61);
  MEMORY[0x1E0C80A78](v62);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v63);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C40);
  OUTLINED_FUNCTION_78(v64, (uint64_t)v420);
  OUTLINED_FUNCTION_40(v65);
  MEMORY[0x1E0C80A78](v66);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0));
  v409 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C48);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v409 - 8));
  MEMORY[0x1E0C80A78](v68);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v69);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C50);
  OUTLINED_FUNCTION_78(v70, (uint64_t)&v419);
  OUTLINED_FUNCTION_40(v71);
  MEMORY[0x1E0C80A78](v72);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v73);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C58);
  OUTLINED_FUNCTION_78(v74, (uint64_t)v418);
  OUTLINED_FUNCTION_40(v75);
  MEMORY[0x1E0C80A78](v76);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0));
  v407 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C60);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v407 - 8));
  MEMORY[0x1E0C80A78](v78);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v79);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C68);
  OUTLINED_FUNCTION_78(v80, (uint64_t)&v417);
  OUTLINED_FUNCTION_40(v81);
  MEMORY[0x1E0C80A78](v82);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v83);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C70);
  OUTLINED_FUNCTION_78(v84, (uint64_t)v416);
  OUTLINED_FUNCTION_40(v85);
  MEMORY[0x1E0C80A78](v86);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0));
  v405 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C78);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v405 - 8));
  MEMORY[0x1E0C80A78](v88);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v89);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C80);
  OUTLINED_FUNCTION_78(v90, (uint64_t)&v415);
  OUTLINED_FUNCTION_40(v91);
  MEMORY[0x1E0C80A78](v92);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v93);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C88);
  OUTLINED_FUNCTION_78(v94, (uint64_t)v414);
  OUTLINED_FUNCTION_40(v95);
  MEMORY[0x1E0C80A78](v96);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0));
  v403 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C90);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v403 - 8));
  MEMORY[0x1E0C80A78](v98);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v99);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814C98);
  OUTLINED_FUNCTION_78(v100, (uint64_t)&v413);
  OUTLINED_FUNCTION_40(v101);
  MEMORY[0x1E0C80A78](v102);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v103);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814CA0);
  OUTLINED_FUNCTION_78(v104, (uint64_t)v412);
  OUTLINED_FUNCTION_40(v105);
  MEMORY[0x1E0C80A78](v106);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0));
  v401 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814CA8);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v401 - 8));
  MEMORY[0x1E0C80A78](v108);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v109);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814CB0);
  OUTLINED_FUNCTION_78(v110, (uint64_t)&v411);
  OUTLINED_FUNCTION_40(v111);
  MEMORY[0x1E0C80A78](v112);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v113);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814CB8);
  OUTLINED_FUNCTION_78(v114, (uint64_t)v410);
  OUTLINED_FUNCTION_40(v115);
  MEMORY[0x1E0C80A78](v116);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0));
  v399 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814CC0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v399 - 8));
  MEMORY[0x1E0C80A78](v118);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v119);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814CC8);
  OUTLINED_FUNCTION_78(v120, (uint64_t)&v409);
  OUTLINED_FUNCTION_40(v121);
  MEMORY[0x1E0C80A78](v122);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v123);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814CD0);
  OUTLINED_FUNCTION_78(v124, (uint64_t)v408);
  OUTLINED_FUNCTION_40(v125);
  MEMORY[0x1E0C80A78](v126);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0));
  v397 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814CD8);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v397 - 8));
  MEMORY[0x1E0C80A78](v128);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v129);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814CE0);
  OUTLINED_FUNCTION_78(v130, (uint64_t)&v407);
  OUTLINED_FUNCTION_40(v131);
  MEMORY[0x1E0C80A78](v132);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v133);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814CE8);
  OUTLINED_FUNCTION_78(v134, (uint64_t)v406);
  OUTLINED_FUNCTION_40(v135);
  MEMORY[0x1E0C80A78](v136);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v137 + 15) & 0xFFFFFFFFFFFFFFF0));
  v395 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814CF0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v395 - 8));
  MEMORY[0x1E0C80A78](v138);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v139);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814CF8);
  OUTLINED_FUNCTION_78(v140, (uint64_t)&v405);
  OUTLINED_FUNCTION_40(v141);
  MEMORY[0x1E0C80A78](v142);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v143);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D00);
  OUTLINED_FUNCTION_78(v144, (uint64_t)v404);
  OUTLINED_FUNCTION_40(v145);
  MEMORY[0x1E0C80A78](v146);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v147 + 15) & 0xFFFFFFFFFFFFFFF0));
  v393 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D08);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v393 - 8));
  MEMORY[0x1E0C80A78](v148);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v149);
  v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D10);
  OUTLINED_FUNCTION_78(v150, (uint64_t)&v403);
  OUTLINED_FUNCTION_40(v151);
  MEMORY[0x1E0C80A78](v152);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v153);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D18);
  OUTLINED_FUNCTION_78(v154, (uint64_t)v402);
  OUTLINED_FUNCTION_40(v155);
  MEMORY[0x1E0C80A78](v156);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v157 + 15) & 0xFFFFFFFFFFFFFFF0));
  v391 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D20);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v391 - 8));
  MEMORY[0x1E0C80A78](v158);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v159);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D28);
  OUTLINED_FUNCTION_78(v160, (uint64_t)&v401);
  OUTLINED_FUNCTION_40(v161);
  MEMORY[0x1E0C80A78](v162);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v163);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D30);
  OUTLINED_FUNCTION_78(v164, (uint64_t)v400);
  OUTLINED_FUNCTION_40(v165);
  MEMORY[0x1E0C80A78](v166);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v167 + 15) & 0xFFFFFFFFFFFFFFF0));
  v389 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D38);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v389 - 8));
  MEMORY[0x1E0C80A78](v168);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v169);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D40);
  OUTLINED_FUNCTION_78(v170, (uint64_t)&v399);
  OUTLINED_FUNCTION_40(v171);
  MEMORY[0x1E0C80A78](v172);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v173);
  v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D48);
  OUTLINED_FUNCTION_78(v174, (uint64_t)v398);
  OUTLINED_FUNCTION_40(v175);
  MEMORY[0x1E0C80A78](v176);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v177 + 15) & 0xFFFFFFFFFFFFFFF0));
  v387 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D50);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v387 - 8));
  MEMORY[0x1E0C80A78](v178);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v179);
  v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D58);
  OUTLINED_FUNCTION_78(v180, (uint64_t)&v397);
  OUTLINED_FUNCTION_40(v181);
  MEMORY[0x1E0C80A78](v182);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v183);
  v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D60);
  OUTLINED_FUNCTION_78(v184, (uint64_t)v396);
  OUTLINED_FUNCTION_40(v185);
  MEMORY[0x1E0C80A78](v186);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v187 + 15) & 0xFFFFFFFFFFFFFFF0));
  v385 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D68);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v385 - 8));
  MEMORY[0x1E0C80A78](v188);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v189);
  v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D70);
  OUTLINED_FUNCTION_78(v190, (uint64_t)&v395);
  OUTLINED_FUNCTION_40(v191);
  MEMORY[0x1E0C80A78](v192);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v193);
  v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D78);
  OUTLINED_FUNCTION_78(v194, (uint64_t)v394);
  OUTLINED_FUNCTION_40(v195);
  MEMORY[0x1E0C80A78](v196);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v197 + 15) & 0xFFFFFFFFFFFFFFF0));
  v382 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D80);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v382 - 8));
  MEMORY[0x1E0C80A78](v198);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v199);
  v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D88);
  OUTLINED_FUNCTION_78(v200, (uint64_t)&v393);
  OUTLINED_FUNCTION_40(v201);
  MEMORY[0x1E0C80A78](v202);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v203);
  v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D90);
  OUTLINED_FUNCTION_78(v204, (uint64_t)v392);
  OUTLINED_FUNCTION_40(v205);
  MEMORY[0x1E0C80A78](v206);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v207 + 15) & 0xFFFFFFFFFFFFFFF0));
  v380 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814D98);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v380 - 8));
  MEMORY[0x1E0C80A78](v208);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v209);
  v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814DA0);
  OUTLINED_FUNCTION_78(v210, (uint64_t)&v391);
  OUTLINED_FUNCTION_40(v211);
  MEMORY[0x1E0C80A78](v212);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v213);
  v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814DA8);
  OUTLINED_FUNCTION_78(v214, (uint64_t)v390);
  OUTLINED_FUNCTION_40(v215);
  MEMORY[0x1E0C80A78](v216);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v217 + 15) & 0xFFFFFFFFFFFFFFF0));
  v378 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814DB0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v378 - 8));
  MEMORY[0x1E0C80A78](v218);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v219);
  v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814DB8);
  OUTLINED_FUNCTION_78(v220, (uint64_t)&v389);
  OUTLINED_FUNCTION_40(v221);
  MEMORY[0x1E0C80A78](v222);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v223);
  v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814DC0);
  OUTLINED_FUNCTION_78(v224, (uint64_t)v388);
  OUTLINED_FUNCTION_40(v225);
  MEMORY[0x1E0C80A78](v226);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v227 + 15) & 0xFFFFFFFFFFFFFFF0));
  v376 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814DC8);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v376 - 8));
  MEMORY[0x1E0C80A78](v228);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v229);
  v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814DD0);
  OUTLINED_FUNCTION_78(v230, (uint64_t)&v387);
  OUTLINED_FUNCTION_40(v231);
  MEMORY[0x1E0C80A78](v232);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v233);
  v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814DD8);
  OUTLINED_FUNCTION_78(v234, (uint64_t)v386);
  OUTLINED_FUNCTION_40(v235);
  MEMORY[0x1E0C80A78](v236);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v237 + 15) & 0xFFFFFFFFFFFFFFF0));
  v374 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814DE0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v374 - 8));
  MEMORY[0x1E0C80A78](v238);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v239);
  v240 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814DE8);
  OUTLINED_FUNCTION_78(v240, (uint64_t)&v385);
  OUTLINED_FUNCTION_40(v241);
  MEMORY[0x1E0C80A78](v242);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v243);
  v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814DF0);
  OUTLINED_FUNCTION_78(v244, (uint64_t)v384);
  OUTLINED_FUNCTION_40(v245);
  MEMORY[0x1E0C80A78](v246);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v247 + 15) & 0xFFFFFFFFFFFFFFF0));
  v372 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814DF8);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v372 - 8));
  MEMORY[0x1E0C80A78](v248);
  OUTLINED_FUNCTION_11_0();
  v445 = v249;
  v250 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E00);
  OUTLINED_FUNCTION_78(v250, (uint64_t)v383);
  OUTLINED_FUNCTION_40(v251);
  MEMORY[0x1E0C80A78](v252);
  OUTLINED_FUNCTION_11_0();
  v444 = v253;
  v370 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E08);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v370 - 8));
  MEMORY[0x1E0C80A78](v254);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v255);
  v256 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E10);
  OUTLINED_FUNCTION_78(v256, (uint64_t)v381);
  OUTLINED_FUNCTION_40(v257);
  MEMORY[0x1E0C80A78](v258);
  OUTLINED_FUNCTION_11_0();
  v443 = v259;
  v260 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E18);
  OUTLINED_FUNCTION_78(v260, (uint64_t)&v380);
  OUTLINED_FUNCTION_40(v261);
  MEMORY[0x1E0C80A78](v262);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v263);
  v264 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E20);
  OUTLINED_FUNCTION_78(v264, (uint64_t)v379);
  OUTLINED_FUNCTION_40(v265);
  MEMORY[0x1E0C80A78](v266);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v267 + 15) & 0xFFFFFFFFFFFFFFF0));
  v367 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E28);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v367 - 8));
  MEMORY[0x1E0C80A78](v268);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v269);
  v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E30);
  OUTLINED_FUNCTION_78(v270, (uint64_t)&v378);
  OUTLINED_FUNCTION_40(v271);
  MEMORY[0x1E0C80A78](v272);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v273);
  v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E38);
  OUTLINED_FUNCTION_78(v274, (uint64_t)v377);
  OUTLINED_FUNCTION_40(v275);
  MEMORY[0x1E0C80A78](v276);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v277 + 15) & 0xFFFFFFFFFFFFFFF0));
  v365 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E40);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v365 - 8));
  MEMORY[0x1E0C80A78](v278);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v279);
  v280 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E48);
  OUTLINED_FUNCTION_78(v280, (uint64_t)&v376);
  OUTLINED_FUNCTION_40(v281);
  MEMORY[0x1E0C80A78](v282);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v283);
  v284 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E50);
  OUTLINED_FUNCTION_78(v284, (uint64_t)v375);
  OUTLINED_FUNCTION_40(v285);
  MEMORY[0x1E0C80A78](v286);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v287 + 15) & 0xFFFFFFFFFFFFFFF0));
  v362 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E58);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v362 - 8));
  MEMORY[0x1E0C80A78](v288);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v289);
  v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E60);
  OUTLINED_FUNCTION_78(v290, (uint64_t)&v374);
  OUTLINED_FUNCTION_40(v291);
  MEMORY[0x1E0C80A78](v292);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v293);
  v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E68);
  OUTLINED_FUNCTION_78(v294, (uint64_t)v373);
  OUTLINED_FUNCTION_40(v295);
  MEMORY[0x1E0C80A78](v296);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v297 + 15) & 0xFFFFFFFFFFFFFFF0));
  v361 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E70);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v361 - 8));
  MEMORY[0x1E0C80A78](v298);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v299);
  v300 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E78);
  OUTLINED_FUNCTION_78(v300, (uint64_t)&v372);
  OUTLINED_FUNCTION_40(v301);
  MEMORY[0x1E0C80A78](v302);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v303);
  v304 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E80);
  OUTLINED_FUNCTION_78(v304, (uint64_t)v371);
  OUTLINED_FUNCTION_40(v305);
  MEMORY[0x1E0C80A78](v306);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v307 + 15) & 0xFFFFFFFFFFFFFFF0));
  v360 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E88);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v360 - 8));
  MEMORY[0x1E0C80A78](v308);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v309);
  v310 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E90);
  OUTLINED_FUNCTION_78(v310, (uint64_t)v369);
  OUTLINED_FUNCTION_40(v311);
  MEMORY[0x1E0C80A78](v312);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v313);
  v314 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814E98);
  OUTLINED_FUNCTION_78(v314, (uint64_t)v368);
  OUTLINED_FUNCTION_40(v315);
  MEMORY[0x1E0C80A78](v316);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v317 + 15) & 0xFFFFFFFFFFFFFFF0));
  v359 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814EA0);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v359 - 8));
  MEMORY[0x1E0C80A78](v318);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v319);
  v320 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814EA8);
  OUTLINED_FUNCTION_78(v320, (uint64_t)&v367);
  OUTLINED_FUNCTION_40(v321);
  MEMORY[0x1E0C80A78](v322);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v323);
  v324 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814EB0);
  OUTLINED_FUNCTION_78(v324, (uint64_t)v366);
  OUTLINED_FUNCTION_40(v325);
  MEMORY[0x1E0C80A78](v326);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v327 + 15) & 0xFFFFFFFFFFFFFFF0));
  v358 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814EB8);
  OUTLINED_FUNCTION_40(*(_QWORD *)(v358 - 8));
  MEMORY[0x1E0C80A78](v328);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v329);
  v330 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814EC0);
  OUTLINED_FUNCTION_78(v330, (uint64_t)&v365);
  OUTLINED_FUNCTION_40(v331);
  MEMORY[0x1E0C80A78](v332);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v333);
  v334 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814EC8);
  OUTLINED_FUNCTION_78(v334, (uint64_t)v364);
  OUTLINED_FUNCTION_40(v335);
  MEMORY[0x1E0C80A78](v336);
  OUTLINED_FUNCTION_129((uint64_t)v357 - ((v337 + 15) & 0xFFFFFFFFFFFFFFF0));
  v338 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814ED0);
  v339 = *(_QWORD *)(v338 - 8);
  MEMORY[0x1E0C80A78](v338);
  OUTLINED_FUNCTION_0();
  v342 = v341 - v340;
  v343 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE814ED8);
  v344 = *(_QWORD *)(v343 - 8);
  MEMORY[0x1E0C80A78](v343);
  OUTLINED_FUNCTION_72();
  v345 = a1[3];
  v446 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v345);
  sub_1A604F694();
  v346 = v447;
  sub_1A6123DC4();
  if (!v346)
  {
    v357[4] = v342;
    v357[2] = v339;
    v357[3] = v338;
    v357[5] = v344;
    v447 = v2;
    v347 = sub_1A6123C50();
    v348 = *(_QWORD *)(v347 + 16);
    if (v348)
    {
      v357[1] = 0;
      v349 = *(unsigned __int8 *)(v347 + 32);
      sub_1A5FF62F0(1, v348, v347, v347 + 32, 0, (2 * v348) | 1);
      v351 = v350;
      v353 = v352;
      swift_bridgeObjectRelease();
      if (v351 == v353 >> 1)
        __asm { BR              X9 }
    }
    v354 = sub_1A6123B48();
    swift_allocError();
    v356 = v355;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8134C8);
    *v356 = &type metadata for NextHourToken;
    sub_1A6123BCC();
    sub_1A6123B3C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v354 - 8) + 104))(v356, *MEMORY[0x1E0DEC450], v354);
    swift_willThrow();
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v446);
  OUTLINED_FUNCTION_20();
}

void sub_1A6052704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_112_1();
  v2 = *(_QWORD *)(v1 - 912);
  OUTLINED_FUNCTION_3_27();
  if (!v0)
  {
    OUTLINED_FUNCTION_87();
    v3(v2, *(_QWORD *)(v1 - 2488));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    JUMPOUT(0x1A6053A90);
  }
  JUMPOUT(0x1A60526E0);
}

void sub_1A6052758()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2472));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A605278C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_96_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_32_10();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60527B8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_91_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2440));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60527EC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_86_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2424));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052820()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_81_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_29_1();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A605284C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_76_3();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2392));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052880()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_70_2();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2376));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60528B4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_26_12();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60528E0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_60_2();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2344));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052914()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_55_2();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2328));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052948()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_154_0();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_23_15();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052974()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_150_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2296));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60529A8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_146_0();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2280));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60529DC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_142_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_20_15();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052A08()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2248));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052A3C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_132_0();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2232));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052A70()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_128_0();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_52();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052A9C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_124_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2200));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052AD0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_120_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2184));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052B04()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_116_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_49_5();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052B30()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2152));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052B64()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_106_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2136));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052B98()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_3_27();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    OUTLINED_FUNCTION_87();
    v4(v1, *(_QWORD *)(v3 - 2112));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v3 - 136) = v2;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052BD0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_97_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_46_5();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052BFC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_92_1();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2080));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052C2C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_87_1();
  OUTLINED_FUNCTION_3_27();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    OUTLINED_FUNCTION_87();
    v4(v2, *(_QWORD *)(v3 - 2072));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v3 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052C64()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_82_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2056));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052C98()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_77_2();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2040));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052CCC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_71_2();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_41_6();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052CF8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_66_2();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2008));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052D2C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_61_2();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1992));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052D60()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_56_3();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_35_12();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052D8C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_155_0();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1960));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052DC0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_151_2();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1944));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052DF4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_147_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_33_4();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052E20()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_143_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1912));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052E54()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_139_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1896));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052E88()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_133_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_30_14();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052EB4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_129_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1864));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052EE8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_125_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1848));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052F1C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_121_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_27_10();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052F48()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_117_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1816));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052F7C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_113_0();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1800));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052FB0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_108_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_24_15();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6052FDC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_102_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1768));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053010()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_98_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1752));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053044()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_93_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_21_13();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053070()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_88_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1720));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60530A4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_83_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1704));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60530D8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_78_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_53_1();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053104()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1672));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053138()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_67_4();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1656));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A605316C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_62_3();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_50();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053198()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_57_5();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1624));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60531CC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_156_0();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1608));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053200()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_152_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_47_0();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A605322C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_148_2();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1576));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053260()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_144_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1560));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053294()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_140_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_44_5();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60532C0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1528));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60532F4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_130_0();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1512));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053328()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_126_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_42_5();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053354()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_122_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1480));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053388()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_118_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1464));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60533BC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_114_2();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_36_0();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60533E8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_109_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1432));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A605341C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_104_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1416));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053450()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_99_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_34_10();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A605347C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_94_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1384));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60534B0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_89_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1368));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60534E4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_31_9();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053510()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_79_2();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1336));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053544()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_74_2();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1320));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053578()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_69_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_28_1();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60535A4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_63_4();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1288));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60535D8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1272));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A605360C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_25_17();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053638()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_153_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1240));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A605366C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_149_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1224));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60536A0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_22_13();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60536CC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_141_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1192));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053700()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_135_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1176));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053734()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_131_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_54_1();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053760()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_0_31();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1144));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053794()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_123();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1128));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60537C8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_119_1();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_51_0();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60537F4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_115_2();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1096));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053828()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_110_1();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1080));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A605385C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_105_1();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_48_0();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053888()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_100_1();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1048));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60538BC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_95_1();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1032));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60538F0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_90_1();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_45_1();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A605391C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_85_1();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 1000));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053950()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_80_1();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 984));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053984()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_43_6();
    v5(v3, *(_QWORD *)(v4 - 256));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60539B0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_72_2();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 952));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A60539E4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_68_3();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 936));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053A18()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_59_5();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
  {
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_6_5();
    v4(v3, *(_QWORD *)(v2 - 2504));
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_13_23();
    **(_BYTE **)(v2 - 136) = v1;
  }
  JUMPOUT(0x1A60526ECLL);
}

void sub_1A6053A4C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_1_33();
  OUTLINED_FUNCTION_12_22();
  if (v0)
    JUMPOUT(0x1A6053A70);
  OUTLINED_FUNCTION_37_7();
  JUMPOUT(0x1A6053A80);
}

void sub_1A6053A9C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  NextHourToken.init(from:)(a1, a2);
}

void sub_1A6053AB0(_QWORD *a1)
{
  NextHourToken.encode(to:)(a1);
}

unint64_t sub_1A6053AC8()
{
  unint64_t result;

  result = qword_1EE814EE0;
  if (!qword_1EE814EE0)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for NextHourToken, &type metadata for NextHourToken);
    atomic_store(result, (unint64_t *)&qword_1EE814EE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for NextHourToken()
{
  return &type metadata for NextHourToken;
}

uint64_t _s10WeatherKit13NextHourTokenOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0x9C)
  {
    if (a2 + 100 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 100) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 101;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x65;
  v5 = v6 - 101;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s10WeatherKit13NextHourTokenOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 100 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 100) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x9C)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x9B)
    return ((uint64_t (*)(void))((char *)&loc_1A6053BF0 + 4 * byte_1A612E253[v4]))();
  *a1 = a2 + 100;
  return ((uint64_t (*)(void))((char *)sub_1A6053C24 + 4 * byte_1A612E24E[v4]))();
}

uint64_t sub_1A6053C24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6053C2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6053C34);
  return result;
}

uint64_t sub_1A6053C40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6053C48);
  *(_BYTE *)result = a2 + 100;
  return result;
}

uint64_t sub_1A6053C4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6053C54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NextHourToken.CodingKeys()
{
  return &type metadata for NextHourToken.CodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleDrizzleCodingKeys()
{
  return &type metadata for NextHourToken.PossibleDrizzleCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleDrizzleStartCodingKeys()
{
  return &type metadata for NextHourToken.PossibleDrizzleStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleDrizzleStopCodingKeys()
{
  return &type metadata for NextHourToken.PossibleDrizzleStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleDrizzleStartStopCodingKeys()
{
  return &type metadata for NextHourToken.PossibleDrizzleStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleDrizzleStopStartCodingKeys()
{
  return &type metadata for NextHourToken.PossibleDrizzleStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.DrizzleCodingKeys()
{
  return &type metadata for NextHourToken.DrizzleCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.DrizzleStartCodingKeys()
{
  return &type metadata for NextHourToken.DrizzleStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.DrizzleStopCodingKeys()
{
  return &type metadata for NextHourToken.DrizzleStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.DrizzleStartStopCodingKeys()
{
  return &type metadata for NextHourToken.DrizzleStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.DrizzleStopStartCodingKeys()
{
  return &type metadata for NextHourToken.DrizzleStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.RainCodingKeys()
{
  return &type metadata for NextHourToken.RainCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.RainStartCodingKeys()
{
  return &type metadata for NextHourToken.RainStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.RainStopCodingKeys()
{
  return &type metadata for NextHourToken.RainStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.RainStartStopCodingKeys()
{
  return &type metadata for NextHourToken.RainStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.RainStopStartCodingKeys()
{
  return &type metadata for NextHourToken.RainStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainStartCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainStopCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainStopStartCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainStartStopCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.DrizzleToHeavyRainCodingKeys()
{
  return &type metadata for NextHourToken.DrizzleToHeavyRainCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainToDrizzleCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainToDrizzleCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.RainToHeavyRainCodingKeys()
{
  return &type metadata for NextHourToken.RainToHeavyRainCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainToRainCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainToRainCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.DrizzleToHeavyRainStartCodingKeys()
{
  return &type metadata for NextHourToken.DrizzleToHeavyRainStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainToDrizzleStartCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainToDrizzleStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.RainToHeavyRainStartCodingKeys()
{
  return &type metadata for NextHourToken.RainToHeavyRainStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainToRainStartCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainToRainStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.DrizzleToHeavyRainStopCodingKeys()
{
  return &type metadata for NextHourToken.DrizzleToHeavyRainStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainToDrizzleStopCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainToDrizzleStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.RainToHeavyRainStopCodingKeys()
{
  return &type metadata for NextHourToken.RainToHeavyRainStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainToRainStopCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainToRainStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.DrizzleToHeavyRainStartStopCodingKeys()
{
  return &type metadata for NextHourToken.DrizzleToHeavyRainStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainToDrizzleStartStopCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainToDrizzleStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.RainToHeavyRainStartStopCodingKeys()
{
  return &type metadata for NextHourToken.RainToHeavyRainStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainToRainStartStopCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainToRainStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.DrizzleToHeavyRainStopStartCodingKeys()
{
  return &type metadata for NextHourToken.DrizzleToHeavyRainStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainToDrizzleStopStartCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainToDrizzleStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.RainToHeavyRainStopStartCodingKeys()
{
  return &type metadata for NextHourToken.RainToHeavyRainStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavyRainToRainStopStartCodingKeys()
{
  return &type metadata for NextHourToken.HeavyRainToRainStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleFlurriesCodingKeys()
{
  return &type metadata for NextHourToken.PossibleFlurriesCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleFlurriesStartCodingKeys()
{
  return &type metadata for NextHourToken.PossibleFlurriesStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleFlurriesStopCodingKeys()
{
  return &type metadata for NextHourToken.PossibleFlurriesStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleFlurriesStartStopCodingKeys()
{
  return &type metadata for NextHourToken.PossibleFlurriesStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleFlurriesStopStartCodingKeys()
{
  return &type metadata for NextHourToken.PossibleFlurriesStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.FlurriesCodingKeys()
{
  return &type metadata for NextHourToken.FlurriesCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.FlurriesStartCodingKeys()
{
  return &type metadata for NextHourToken.FlurriesStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.FlurriesStopCodingKeys()
{
  return &type metadata for NextHourToken.FlurriesStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.FlurriesStartStopCodingKeys()
{
  return &type metadata for NextHourToken.FlurriesStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.FlurriesStopStartCodingKeys()
{
  return &type metadata for NextHourToken.FlurriesStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SnowCodingKeys()
{
  return &type metadata for NextHourToken.SnowCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SnowStartCodingKeys()
{
  return &type metadata for NextHourToken.SnowStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SnowStopCodingKeys()
{
  return &type metadata for NextHourToken.SnowStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SnowStartStopCodingKeys()
{
  return &type metadata for NextHourToken.SnowStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SnowStopStartCodingKeys()
{
  return &type metadata for NextHourToken.SnowStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowStartCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowStopCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowStopStartCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowStartStopCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.FlurriesToHeavySnowCodingKeys()
{
  return &type metadata for NextHourToken.FlurriesToHeavySnowCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowToFlurriesCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowToFlurriesCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SnowToHeavySnowCodingKeys()
{
  return &type metadata for NextHourToken.SnowToHeavySnowCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowToSnowCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowToSnowCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.FlurriesToHeavySnowStartCodingKeys()
{
  return &type metadata for NextHourToken.FlurriesToHeavySnowStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowToFlurriesStartCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowToFlurriesStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SnowToHeavySnowStartCodingKeys()
{
  return &type metadata for NextHourToken.SnowToHeavySnowStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowToSnowStartCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowToSnowStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.FlurriesToHeavySnowStopCodingKeys()
{
  return &type metadata for NextHourToken.FlurriesToHeavySnowStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowToFlurriesStopCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowToFlurriesStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SnowToHeavySnowStopCodingKeys()
{
  return &type metadata for NextHourToken.SnowToHeavySnowStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowToSnowStopCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowToSnowStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.FlurriesToHeavySnowStartStopCodingKeys()
{
  return &type metadata for NextHourToken.FlurriesToHeavySnowStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowToFlurriesStartStopCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowToFlurriesStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SnowToHeavySnowStartStopCodingKeys()
{
  return &type metadata for NextHourToken.SnowToHeavySnowStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowToSnowStartStopCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowToSnowStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.FlurriesToHeavySnowStopStartCodingKeys()
{
  return &type metadata for NextHourToken.FlurriesToHeavySnowStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowToFlurriesStopStartCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowToFlurriesStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SnowToHeavySnowStopStartCodingKeys()
{
  return &type metadata for NextHourToken.SnowToHeavySnowStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HeavySnowToSnowStopStartCodingKeys()
{
  return &type metadata for NextHourToken.HeavySnowToSnowStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleSleetCodingKeys()
{
  return &type metadata for NextHourToken.PossibleSleetCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleSleetStartCodingKeys()
{
  return &type metadata for NextHourToken.PossibleSleetStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleSleetStopCodingKeys()
{
  return &type metadata for NextHourToken.PossibleSleetStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleSleetStartStopCodingKeys()
{
  return &type metadata for NextHourToken.PossibleSleetStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleSleetStopStartCodingKeys()
{
  return &type metadata for NextHourToken.PossibleSleetStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SleetCodingKeys()
{
  return &type metadata for NextHourToken.SleetCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SleetStartCodingKeys()
{
  return &type metadata for NextHourToken.SleetStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SleetStopCodingKeys()
{
  return &type metadata for NextHourToken.SleetStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SleetStartStopCodingKeys()
{
  return &type metadata for NextHourToken.SleetStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.SleetStopStartCodingKeys()
{
  return &type metadata for NextHourToken.SleetStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleHailCodingKeys()
{
  return &type metadata for NextHourToken.PossibleHailCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleHailStartCodingKeys()
{
  return &type metadata for NextHourToken.PossibleHailStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleHailStopCodingKeys()
{
  return &type metadata for NextHourToken.PossibleHailStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleHailStartStopCodingKeys()
{
  return &type metadata for NextHourToken.PossibleHailStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.PossibleHailStopStartCodingKeys()
{
  return &type metadata for NextHourToken.PossibleHailStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HailCodingKeys()
{
  return &type metadata for NextHourToken.HailCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HailStartCodingKeys()
{
  return &type metadata for NextHourToken.HailStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HailStopCodingKeys()
{
  return &type metadata for NextHourToken.HailStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HailStartStopCodingKeys()
{
  return &type metadata for NextHourToken.HailStartStopCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.HailStopStartCodingKeys()
{
  return &type metadata for NextHourToken.HailStopStartCodingKeys;
}

ValueMetadata *type metadata accessor for NextHourToken.ClearCodingKeys()
{
  return &type metadata for NextHourToken.ClearCodingKeys;
}

unint64_t sub_1A60542C4()
{
  unint64_t result;

  result = qword_1EE814EE8;
  if (!qword_1EE814EE8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131318, &type metadata for NextHourToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814EE8);
  }
  return result;
}

unint64_t sub_1A6054304()
{
  unint64_t result;

  result = qword_1EE814EF0;
  if (!qword_1EE814EF0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131238, &type metadata for NextHourToken.PossibleDrizzleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814EF0);
  }
  return result;
}

unint64_t sub_1A6054344()
{
  unint64_t result;

  result = qword_1EE814EF8;
  if (!qword_1EE814EF8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131260, &type metadata for NextHourToken.PossibleDrizzleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814EF8);
  }
  return result;
}

unint64_t sub_1A6054384()
{
  unint64_t result;

  result = qword_1EE814F00;
  if (!qword_1EE814F00)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61311E8, &type metadata for NextHourToken.PossibleDrizzleStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F00);
  }
  return result;
}

unint64_t sub_1A60543C4()
{
  unint64_t result;

  result = qword_1EE814F08;
  if (!qword_1EE814F08)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131210, &type metadata for NextHourToken.PossibleDrizzleStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F08);
  }
  return result;
}

unint64_t sub_1A6054404()
{
  unint64_t result;

  result = qword_1EE814F10;
  if (!qword_1EE814F10)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131198, &type metadata for NextHourToken.PossibleDrizzleStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F10);
  }
  return result;
}

unint64_t sub_1A6054444()
{
  unint64_t result;

  result = qword_1EE814F18;
  if (!qword_1EE814F18)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61311C0, &type metadata for NextHourToken.PossibleDrizzleStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F18);
  }
  return result;
}

unint64_t sub_1A6054484()
{
  unint64_t result;

  result = qword_1EE814F20;
  if (!qword_1EE814F20)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131148, &type metadata for NextHourToken.PossibleDrizzleStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F20);
  }
  return result;
}

unint64_t sub_1A60544C4()
{
  unint64_t result;

  result = qword_1EE814F28;
  if (!qword_1EE814F28)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131170, &type metadata for NextHourToken.PossibleDrizzleStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F28);
  }
  return result;
}

unint64_t sub_1A6054504()
{
  unint64_t result;

  result = qword_1EE814F30;
  if (!qword_1EE814F30)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61310F8, &type metadata for NextHourToken.PossibleDrizzleStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F30);
  }
  return result;
}

unint64_t sub_1A6054544()
{
  unint64_t result;

  result = qword_1EE814F38;
  if (!qword_1EE814F38)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131120, &type metadata for NextHourToken.PossibleDrizzleStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F38);
  }
  return result;
}

unint64_t sub_1A6054584()
{
  unint64_t result;

  result = qword_1EE814F40;
  if (!qword_1EE814F40)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61310A8, &type metadata for NextHourToken.DrizzleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F40);
  }
  return result;
}

unint64_t sub_1A60545C4()
{
  unint64_t result;

  result = qword_1EE814F48;
  if (!qword_1EE814F48)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61310D0, &type metadata for NextHourToken.DrizzleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F48);
  }
  return result;
}

unint64_t sub_1A6054604()
{
  unint64_t result;

  result = qword_1EE814F50;
  if (!qword_1EE814F50)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131058, &type metadata for NextHourToken.DrizzleStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F50);
  }
  return result;
}

unint64_t sub_1A6054644()
{
  unint64_t result;

  result = qword_1EE814F58;
  if (!qword_1EE814F58)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131080, &type metadata for NextHourToken.DrizzleStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F58);
  }
  return result;
}

unint64_t sub_1A6054684()
{
  unint64_t result;

  result = qword_1EE814F60;
  if (!qword_1EE814F60)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131008, &type metadata for NextHourToken.DrizzleStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F60);
  }
  return result;
}

unint64_t sub_1A60546C4()
{
  unint64_t result;

  result = qword_1EE814F68;
  if (!qword_1EE814F68)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131030, &type metadata for NextHourToken.DrizzleStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F68);
  }
  return result;
}

unint64_t sub_1A6054704()
{
  unint64_t result;

  result = qword_1EE814F70;
  if (!qword_1EE814F70)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130FB8, &type metadata for NextHourToken.DrizzleStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F70);
  }
  return result;
}

unint64_t sub_1A6054744()
{
  unint64_t result;

  result = qword_1EE814F78;
  if (!qword_1EE814F78)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130FE0, &type metadata for NextHourToken.DrizzleStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F78);
  }
  return result;
}

unint64_t sub_1A6054784()
{
  unint64_t result;

  result = qword_1EE814F80;
  if (!qword_1EE814F80)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130F68, &type metadata for NextHourToken.DrizzleStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F80);
  }
  return result;
}

unint64_t sub_1A60547C4()
{
  unint64_t result;

  result = qword_1EE814F88;
  if (!qword_1EE814F88)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130F90, &type metadata for NextHourToken.DrizzleStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F88);
  }
  return result;
}

unint64_t sub_1A6054804()
{
  unint64_t result;

  result = qword_1EE814F90;
  if (!qword_1EE814F90)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130F18, &type metadata for NextHourToken.RainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F90);
  }
  return result;
}

unint64_t sub_1A6054844()
{
  unint64_t result;

  result = qword_1EE814F98;
  if (!qword_1EE814F98)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130F40, &type metadata for NextHourToken.RainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814F98);
  }
  return result;
}

unint64_t sub_1A6054884()
{
  unint64_t result;

  result = qword_1EE814FA0;
  if (!qword_1EE814FA0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130EC8, &type metadata for NextHourToken.RainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814FA0);
  }
  return result;
}

unint64_t sub_1A60548C4()
{
  unint64_t result;

  result = qword_1EE814FA8;
  if (!qword_1EE814FA8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130EF0, &type metadata for NextHourToken.RainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814FA8);
  }
  return result;
}

unint64_t sub_1A6054904()
{
  unint64_t result;

  result = qword_1EE814FB0;
  if (!qword_1EE814FB0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130E78, &type metadata for NextHourToken.RainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814FB0);
  }
  return result;
}

unint64_t sub_1A6054944()
{
  unint64_t result;

  result = qword_1EE814FB8;
  if (!qword_1EE814FB8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130EA0, &type metadata for NextHourToken.RainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814FB8);
  }
  return result;
}

unint64_t sub_1A6054984()
{
  unint64_t result;

  result = qword_1EE814FC0;
  if (!qword_1EE814FC0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130E28, &type metadata for NextHourToken.RainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814FC0);
  }
  return result;
}

unint64_t sub_1A60549C4()
{
  unint64_t result;

  result = qword_1EE814FC8;
  if (!qword_1EE814FC8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130E50, &type metadata for NextHourToken.RainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814FC8);
  }
  return result;
}

unint64_t sub_1A6054A04()
{
  unint64_t result;

  result = qword_1EE814FD0;
  if (!qword_1EE814FD0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130DD8, &type metadata for NextHourToken.RainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814FD0);
  }
  return result;
}

unint64_t sub_1A6054A44()
{
  unint64_t result;

  result = qword_1EE814FD8;
  if (!qword_1EE814FD8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130E00, &type metadata for NextHourToken.RainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814FD8);
  }
  return result;
}

unint64_t sub_1A6054A84()
{
  unint64_t result;

  result = qword_1EE814FE0;
  if (!qword_1EE814FE0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130D88, &type metadata for NextHourToken.HeavyRainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814FE0);
  }
  return result;
}

unint64_t sub_1A6054AC4()
{
  unint64_t result;

  result = qword_1EE814FE8;
  if (!qword_1EE814FE8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130DB0, &type metadata for NextHourToken.HeavyRainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814FE8);
  }
  return result;
}

unint64_t sub_1A6054B04()
{
  unint64_t result;

  result = qword_1EE814FF0;
  if (!qword_1EE814FF0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130D38, &type metadata for NextHourToken.HeavyRainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814FF0);
  }
  return result;
}

unint64_t sub_1A6054B44()
{
  unint64_t result;

  result = qword_1EE814FF8;
  if (!qword_1EE814FF8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130D60, &type metadata for NextHourToken.HeavyRainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE814FF8);
  }
  return result;
}

unint64_t sub_1A6054B84()
{
  unint64_t result;

  result = qword_1EE815000;
  if (!qword_1EE815000)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130CE8, &type metadata for NextHourToken.HeavyRainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815000);
  }
  return result;
}

unint64_t sub_1A6054BC4()
{
  unint64_t result;

  result = qword_1EE815008;
  if (!qword_1EE815008)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130D10, &type metadata for NextHourToken.HeavyRainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815008);
  }
  return result;
}

unint64_t sub_1A6054C04()
{
  unint64_t result;

  result = qword_1EE815010;
  if (!qword_1EE815010)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130C98, &type metadata for NextHourToken.HeavyRainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815010);
  }
  return result;
}

unint64_t sub_1A6054C44()
{
  unint64_t result;

  result = qword_1EE815018;
  if (!qword_1EE815018)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130CC0, &type metadata for NextHourToken.HeavyRainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815018);
  }
  return result;
}

unint64_t sub_1A6054C84()
{
  unint64_t result;

  result = qword_1EE815020;
  if (!qword_1EE815020)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130C48, &type metadata for NextHourToken.HeavyRainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815020);
  }
  return result;
}

unint64_t sub_1A6054CC4()
{
  unint64_t result;

  result = qword_1EE815028;
  if (!qword_1EE815028)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130C70, &type metadata for NextHourToken.HeavyRainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815028);
  }
  return result;
}

unint64_t sub_1A6054D04()
{
  unint64_t result;

  result = qword_1EE815030;
  if (!qword_1EE815030)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130BF8, &type metadata for NextHourToken.DrizzleToHeavyRainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815030);
  }
  return result;
}

unint64_t sub_1A6054D44()
{
  unint64_t result;

  result = qword_1EE815038;
  if (!qword_1EE815038)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130C20, &type metadata for NextHourToken.DrizzleToHeavyRainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815038);
  }
  return result;
}

unint64_t sub_1A6054D84()
{
  unint64_t result;

  result = qword_1EE815040;
  if (!qword_1EE815040)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130BA8, &type metadata for NextHourToken.HeavyRainToDrizzleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815040);
  }
  return result;
}

unint64_t sub_1A6054DC4()
{
  unint64_t result;

  result = qword_1EE815048;
  if (!qword_1EE815048)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130BD0, &type metadata for NextHourToken.HeavyRainToDrizzleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815048);
  }
  return result;
}

unint64_t sub_1A6054E04()
{
  unint64_t result;

  result = qword_1EE815050;
  if (!qword_1EE815050)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130B58, &type metadata for NextHourToken.RainToHeavyRainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815050);
  }
  return result;
}

unint64_t sub_1A6054E44()
{
  unint64_t result;

  result = qword_1EE815058;
  if (!qword_1EE815058)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130B80, &type metadata for NextHourToken.RainToHeavyRainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815058);
  }
  return result;
}

unint64_t sub_1A6054E84()
{
  unint64_t result;

  result = qword_1EE815060;
  if (!qword_1EE815060)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130B08, &type metadata for NextHourToken.HeavyRainToRainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815060);
  }
  return result;
}

unint64_t sub_1A6054EC4()
{
  unint64_t result;

  result = qword_1EE815068;
  if (!qword_1EE815068)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130B30, &type metadata for NextHourToken.HeavyRainToRainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815068);
  }
  return result;
}

unint64_t sub_1A6054F04()
{
  unint64_t result;

  result = qword_1EE815070;
  if (!qword_1EE815070)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130AB8, &type metadata for NextHourToken.DrizzleToHeavyRainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815070);
  }
  return result;
}

unint64_t sub_1A6054F44()
{
  unint64_t result;

  result = qword_1EE815078;
  if (!qword_1EE815078)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130AE0, &type metadata for NextHourToken.DrizzleToHeavyRainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815078);
  }
  return result;
}

unint64_t sub_1A6054F84()
{
  unint64_t result;

  result = qword_1EE815080;
  if (!qword_1EE815080)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130A68, &type metadata for NextHourToken.HeavyRainToDrizzleStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815080);
  }
  return result;
}

unint64_t sub_1A6054FC4()
{
  unint64_t result;

  result = qword_1EE815088;
  if (!qword_1EE815088)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130A90, &type metadata for NextHourToken.HeavyRainToDrizzleStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815088);
  }
  return result;
}

unint64_t sub_1A6055004()
{
  unint64_t result;

  result = qword_1EE815090;
  if (!qword_1EE815090)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130A18, &type metadata for NextHourToken.RainToHeavyRainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815090);
  }
  return result;
}

unint64_t sub_1A6055044()
{
  unint64_t result;

  result = qword_1EE815098;
  if (!qword_1EE815098)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130A40, &type metadata for NextHourToken.RainToHeavyRainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815098);
  }
  return result;
}

unint64_t sub_1A6055084()
{
  unint64_t result;

  result = qword_1EE8150A0;
  if (!qword_1EE8150A0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61309C8, &type metadata for NextHourToken.HeavyRainToRainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8150A0);
  }
  return result;
}

unint64_t sub_1A60550C4()
{
  unint64_t result;

  result = qword_1EE8150A8;
  if (!qword_1EE8150A8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61309F0, &type metadata for NextHourToken.HeavyRainToRainStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8150A8);
  }
  return result;
}

unint64_t sub_1A6055104()
{
  unint64_t result;

  result = qword_1EE8150B0;
  if (!qword_1EE8150B0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130978, &type metadata for NextHourToken.DrizzleToHeavyRainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8150B0);
  }
  return result;
}

unint64_t sub_1A6055144()
{
  unint64_t result;

  result = qword_1EE8150B8;
  if (!qword_1EE8150B8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61309A0, &type metadata for NextHourToken.DrizzleToHeavyRainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8150B8);
  }
  return result;
}

unint64_t sub_1A6055184()
{
  unint64_t result;

  result = qword_1EE8150C0;
  if (!qword_1EE8150C0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130928, &type metadata for NextHourToken.HeavyRainToDrizzleStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8150C0);
  }
  return result;
}

unint64_t sub_1A60551C4()
{
  unint64_t result;

  result = qword_1EE8150C8;
  if (!qword_1EE8150C8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130950, &type metadata for NextHourToken.HeavyRainToDrizzleStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8150C8);
  }
  return result;
}

unint64_t sub_1A6055204()
{
  unint64_t result;

  result = qword_1EE8150D0;
  if (!qword_1EE8150D0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61308D8, &type metadata for NextHourToken.RainToHeavyRainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8150D0);
  }
  return result;
}

unint64_t sub_1A6055244()
{
  unint64_t result;

  result = qword_1EE8150D8;
  if (!qword_1EE8150D8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130900, &type metadata for NextHourToken.RainToHeavyRainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8150D8);
  }
  return result;
}

unint64_t sub_1A6055284()
{
  unint64_t result;

  result = qword_1EE8150E0;
  if (!qword_1EE8150E0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130888, &type metadata for NextHourToken.HeavyRainToRainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8150E0);
  }
  return result;
}

unint64_t sub_1A60552C4()
{
  unint64_t result;

  result = qword_1EE8150E8;
  if (!qword_1EE8150E8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61308B0, &type metadata for NextHourToken.HeavyRainToRainStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8150E8);
  }
  return result;
}

unint64_t sub_1A6055304()
{
  unint64_t result;

  result = qword_1EE8150F0;
  if (!qword_1EE8150F0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130838, &type metadata for NextHourToken.DrizzleToHeavyRainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8150F0);
  }
  return result;
}

unint64_t sub_1A6055344()
{
  unint64_t result;

  result = qword_1EE8150F8;
  if (!qword_1EE8150F8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130860, &type metadata for NextHourToken.DrizzleToHeavyRainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8150F8);
  }
  return result;
}

unint64_t sub_1A6055384()
{
  unint64_t result;

  result = qword_1EE815100;
  if (!qword_1EE815100)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61307E8, &type metadata for NextHourToken.HeavyRainToDrizzleStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815100);
  }
  return result;
}

unint64_t sub_1A60553C4()
{
  unint64_t result;

  result = qword_1EE815108;
  if (!qword_1EE815108)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130810, &type metadata for NextHourToken.HeavyRainToDrizzleStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815108);
  }
  return result;
}

unint64_t sub_1A6055404()
{
  unint64_t result;

  result = qword_1EE815110;
  if (!qword_1EE815110)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130798, &type metadata for NextHourToken.RainToHeavyRainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815110);
  }
  return result;
}

unint64_t sub_1A6055444()
{
  unint64_t result;

  result = qword_1EE815118;
  if (!qword_1EE815118)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61307C0, &type metadata for NextHourToken.RainToHeavyRainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815118);
  }
  return result;
}

unint64_t sub_1A6055484()
{
  unint64_t result;

  result = qword_1EE815120;
  if (!qword_1EE815120)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130748, &type metadata for NextHourToken.HeavyRainToRainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815120);
  }
  return result;
}

unint64_t sub_1A60554C4()
{
  unint64_t result;

  result = qword_1EE815128;
  if (!qword_1EE815128)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130770, &type metadata for NextHourToken.HeavyRainToRainStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815128);
  }
  return result;
}

unint64_t sub_1A6055504()
{
  unint64_t result;

  result = qword_1EE815130;
  if (!qword_1EE815130)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61306F8, &type metadata for NextHourToken.DrizzleToHeavyRainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815130);
  }
  return result;
}

unint64_t sub_1A6055544()
{
  unint64_t result;

  result = qword_1EE815138;
  if (!qword_1EE815138)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130720, &type metadata for NextHourToken.DrizzleToHeavyRainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815138);
  }
  return result;
}

unint64_t sub_1A6055584()
{
  unint64_t result;

  result = qword_1EE815140;
  if (!qword_1EE815140)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61306A8, &type metadata for NextHourToken.HeavyRainToDrizzleStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815140);
  }
  return result;
}

unint64_t sub_1A60555C4()
{
  unint64_t result;

  result = qword_1EE815148;
  if (!qword_1EE815148)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61306D0, &type metadata for NextHourToken.HeavyRainToDrizzleStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815148);
  }
  return result;
}

unint64_t sub_1A6055604()
{
  unint64_t result;

  result = qword_1EE815150;
  if (!qword_1EE815150)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130658, &type metadata for NextHourToken.RainToHeavyRainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815150);
  }
  return result;
}

unint64_t sub_1A6055644()
{
  unint64_t result;

  result = qword_1EE815158;
  if (!qword_1EE815158)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130680, &type metadata for NextHourToken.RainToHeavyRainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815158);
  }
  return result;
}

unint64_t sub_1A6055684()
{
  unint64_t result;

  result = qword_1EE815160;
  if (!qword_1EE815160)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130608, &type metadata for NextHourToken.HeavyRainToRainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815160);
  }
  return result;
}

unint64_t sub_1A60556C4()
{
  unint64_t result;

  result = qword_1EE815168;
  if (!qword_1EE815168)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130630, &type metadata for NextHourToken.HeavyRainToRainStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815168);
  }
  return result;
}

unint64_t sub_1A6055704()
{
  unint64_t result;

  result = qword_1EE815170;
  if (!qword_1EE815170)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61305B8, &type metadata for NextHourToken.PossibleFlurriesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815170);
  }
  return result;
}

unint64_t sub_1A6055744()
{
  unint64_t result;

  result = qword_1EE815178;
  if (!qword_1EE815178)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61305E0, &type metadata for NextHourToken.PossibleFlurriesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815178);
  }
  return result;
}

unint64_t sub_1A6055784()
{
  unint64_t result;

  result = qword_1EE815180;
  if (!qword_1EE815180)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130568, &type metadata for NextHourToken.PossibleFlurriesStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815180);
  }
  return result;
}

unint64_t sub_1A60557C4()
{
  unint64_t result;

  result = qword_1EE815188;
  if (!qword_1EE815188)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130590, &type metadata for NextHourToken.PossibleFlurriesStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815188);
  }
  return result;
}

unint64_t sub_1A6055804()
{
  unint64_t result;

  result = qword_1EE815190;
  if (!qword_1EE815190)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130518, &type metadata for NextHourToken.PossibleFlurriesStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815190);
  }
  return result;
}

unint64_t sub_1A6055844()
{
  unint64_t result;

  result = qword_1EE815198;
  if (!qword_1EE815198)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130540, &type metadata for NextHourToken.PossibleFlurriesStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815198);
  }
  return result;
}

unint64_t sub_1A6055884()
{
  unint64_t result;

  result = qword_1EE8151A0;
  if (!qword_1EE8151A0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61304C8, &type metadata for NextHourToken.PossibleFlurriesStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8151A0);
  }
  return result;
}

unint64_t sub_1A60558C4()
{
  unint64_t result;

  result = qword_1EE8151A8;
  if (!qword_1EE8151A8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61304F0, &type metadata for NextHourToken.PossibleFlurriesStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8151A8);
  }
  return result;
}

unint64_t sub_1A6055904()
{
  unint64_t result;

  result = qword_1EE8151B0;
  if (!qword_1EE8151B0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130478, &type metadata for NextHourToken.PossibleFlurriesStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8151B0);
  }
  return result;
}

unint64_t sub_1A6055944()
{
  unint64_t result;

  result = qword_1EE8151B8;
  if (!qword_1EE8151B8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61304A0, &type metadata for NextHourToken.PossibleFlurriesStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8151B8);
  }
  return result;
}

unint64_t sub_1A6055984()
{
  unint64_t result;

  result = qword_1EE8151C0;
  if (!qword_1EE8151C0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130428, &type metadata for NextHourToken.FlurriesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8151C0);
  }
  return result;
}

unint64_t sub_1A60559C4()
{
  unint64_t result;

  result = qword_1EE8151C8;
  if (!qword_1EE8151C8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130450, &type metadata for NextHourToken.FlurriesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8151C8);
  }
  return result;
}

unint64_t sub_1A6055A04()
{
  unint64_t result;

  result = qword_1EE8151D0;
  if (!qword_1EE8151D0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61303D8, &type metadata for NextHourToken.FlurriesStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8151D0);
  }
  return result;
}

unint64_t sub_1A6055A44()
{
  unint64_t result;

  result = qword_1EE8151D8;
  if (!qword_1EE8151D8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130400, &type metadata for NextHourToken.FlurriesStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8151D8);
  }
  return result;
}

unint64_t sub_1A6055A84()
{
  unint64_t result;

  result = qword_1EE8151E0;
  if (!qword_1EE8151E0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130388, &type metadata for NextHourToken.FlurriesStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8151E0);
  }
  return result;
}

unint64_t sub_1A6055AC4()
{
  unint64_t result;

  result = qword_1EE8151E8;
  if (!qword_1EE8151E8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61303B0, &type metadata for NextHourToken.FlurriesStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8151E8);
  }
  return result;
}

unint64_t sub_1A6055B04()
{
  unint64_t result;

  result = qword_1EE8151F0;
  if (!qword_1EE8151F0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130338, &type metadata for NextHourToken.FlurriesStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8151F0);
  }
  return result;
}

unint64_t sub_1A6055B44()
{
  unint64_t result;

  result = qword_1EE8151F8;
  if (!qword_1EE8151F8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130360, &type metadata for NextHourToken.FlurriesStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8151F8);
  }
  return result;
}

unint64_t sub_1A6055B84()
{
  unint64_t result;

  result = qword_1EE815200;
  if (!qword_1EE815200)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61302E8, &type metadata for NextHourToken.FlurriesStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815200);
  }
  return result;
}

unint64_t sub_1A6055BC4()
{
  unint64_t result;

  result = qword_1EE815208;
  if (!qword_1EE815208)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130310, &type metadata for NextHourToken.FlurriesStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815208);
  }
  return result;
}

unint64_t sub_1A6055C04()
{
  unint64_t result;

  result = qword_1EE815210;
  if (!qword_1EE815210)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130298, &type metadata for NextHourToken.SnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815210);
  }
  return result;
}

unint64_t sub_1A6055C44()
{
  unint64_t result;

  result = qword_1EE815218;
  if (!qword_1EE815218)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61302C0, &type metadata for NextHourToken.SnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815218);
  }
  return result;
}

unint64_t sub_1A6055C84()
{
  unint64_t result;

  result = qword_1EE815220;
  if (!qword_1EE815220)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130248, &type metadata for NextHourToken.SnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815220);
  }
  return result;
}

unint64_t sub_1A6055CC4()
{
  unint64_t result;

  result = qword_1EE815228;
  if (!qword_1EE815228)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130270, &type metadata for NextHourToken.SnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815228);
  }
  return result;
}

unint64_t sub_1A6055D04()
{
  unint64_t result;

  result = qword_1EE815230;
  if (!qword_1EE815230)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61301F8, &type metadata for NextHourToken.SnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815230);
  }
  return result;
}

unint64_t sub_1A6055D44()
{
  unint64_t result;

  result = qword_1EE815238;
  if (!qword_1EE815238)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130220, &type metadata for NextHourToken.SnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815238);
  }
  return result;
}

unint64_t sub_1A6055D84()
{
  unint64_t result;

  result = qword_1EE815240;
  if (!qword_1EE815240)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61301A8, &type metadata for NextHourToken.SnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815240);
  }
  return result;
}

unint64_t sub_1A6055DC4()
{
  unint64_t result;

  result = qword_1EE815248;
  if (!qword_1EE815248)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61301D0, &type metadata for NextHourToken.SnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815248);
  }
  return result;
}

unint64_t sub_1A6055E04()
{
  unint64_t result;

  result = qword_1EE815250;
  if (!qword_1EE815250)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130158, &type metadata for NextHourToken.SnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815250);
  }
  return result;
}

unint64_t sub_1A6055E44()
{
  unint64_t result;

  result = qword_1EE815258;
  if (!qword_1EE815258)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130180, &type metadata for NextHourToken.SnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815258);
  }
  return result;
}

unint64_t sub_1A6055E84()
{
  unint64_t result;

  result = qword_1EE815260;
  if (!qword_1EE815260)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130108, &type metadata for NextHourToken.HeavySnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815260);
  }
  return result;
}

unint64_t sub_1A6055EC4()
{
  unint64_t result;

  result = qword_1EE815268;
  if (!qword_1EE815268)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130130, &type metadata for NextHourToken.HeavySnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815268);
  }
  return result;
}

unint64_t sub_1A6055F04()
{
  unint64_t result;

  result = qword_1EE815270;
  if (!qword_1EE815270)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61300B8, &type metadata for NextHourToken.HeavySnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815270);
  }
  return result;
}

unint64_t sub_1A6055F44()
{
  unint64_t result;

  result = qword_1EE815278;
  if (!qword_1EE815278)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61300E0, &type metadata for NextHourToken.HeavySnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815278);
  }
  return result;
}

unint64_t sub_1A6055F84()
{
  unint64_t result;

  result = qword_1EE815280;
  if (!qword_1EE815280)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130068, &type metadata for NextHourToken.HeavySnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815280);
  }
  return result;
}

unint64_t sub_1A6055FC4()
{
  unint64_t result;

  result = qword_1EE815288;
  if (!qword_1EE815288)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130090, &type metadata for NextHourToken.HeavySnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815288);
  }
  return result;
}

unint64_t sub_1A6056004()
{
  unint64_t result;

  result = qword_1EE815290;
  if (!qword_1EE815290)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130018, &type metadata for NextHourToken.HeavySnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815290);
  }
  return result;
}

unint64_t sub_1A6056044()
{
  unint64_t result;

  result = qword_1EE815298;
  if (!qword_1EE815298)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6130040, &type metadata for NextHourToken.HeavySnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815298);
  }
  return result;
}

unint64_t sub_1A6056084()
{
  unint64_t result;

  result = qword_1EE8152A0;
  if (!qword_1EE8152A0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FFC8, &type metadata for NextHourToken.HeavySnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8152A0);
  }
  return result;
}

unint64_t sub_1A60560C4()
{
  unint64_t result;

  result = qword_1EE8152A8;
  if (!qword_1EE8152A8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FFF0, &type metadata for NextHourToken.HeavySnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8152A8);
  }
  return result;
}

unint64_t sub_1A6056104()
{
  unint64_t result;

  result = qword_1EE8152B0;
  if (!qword_1EE8152B0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FF78, &type metadata for NextHourToken.FlurriesToHeavySnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8152B0);
  }
  return result;
}

unint64_t sub_1A6056144()
{
  unint64_t result;

  result = qword_1EE8152B8;
  if (!qword_1EE8152B8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FFA0, &type metadata for NextHourToken.FlurriesToHeavySnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8152B8);
  }
  return result;
}

unint64_t sub_1A6056184()
{
  unint64_t result;

  result = qword_1EE8152C0;
  if (!qword_1EE8152C0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FF28, &type metadata for NextHourToken.HeavySnowToFlurriesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8152C0);
  }
  return result;
}

unint64_t sub_1A60561C4()
{
  unint64_t result;

  result = qword_1EE8152C8;
  if (!qword_1EE8152C8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FF50, &type metadata for NextHourToken.HeavySnowToFlurriesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8152C8);
  }
  return result;
}

unint64_t sub_1A6056204()
{
  unint64_t result;

  result = qword_1EE8152D0;
  if (!qword_1EE8152D0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FED8, &type metadata for NextHourToken.SnowToHeavySnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8152D0);
  }
  return result;
}

unint64_t sub_1A6056244()
{
  unint64_t result;

  result = qword_1EE8152D8;
  if (!qword_1EE8152D8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FF00, &type metadata for NextHourToken.SnowToHeavySnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8152D8);
  }
  return result;
}

unint64_t sub_1A6056284()
{
  unint64_t result;

  result = qword_1EE8152E0;
  if (!qword_1EE8152E0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FE88, &type metadata for NextHourToken.HeavySnowToSnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8152E0);
  }
  return result;
}

unint64_t sub_1A60562C4()
{
  unint64_t result;

  result = qword_1EE8152E8;
  if (!qword_1EE8152E8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FEB0, &type metadata for NextHourToken.HeavySnowToSnowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8152E8);
  }
  return result;
}

unint64_t sub_1A6056304()
{
  unint64_t result;

  result = qword_1EE8152F0;
  if (!qword_1EE8152F0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FE38, &type metadata for NextHourToken.FlurriesToHeavySnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8152F0);
  }
  return result;
}

unint64_t sub_1A6056344()
{
  unint64_t result;

  result = qword_1EE8152F8;
  if (!qword_1EE8152F8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FE60, &type metadata for NextHourToken.FlurriesToHeavySnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8152F8);
  }
  return result;
}

unint64_t sub_1A6056384()
{
  unint64_t result;

  result = qword_1EE815300;
  if (!qword_1EE815300)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FDE8, &type metadata for NextHourToken.HeavySnowToFlurriesStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815300);
  }
  return result;
}

unint64_t sub_1A60563C4()
{
  unint64_t result;

  result = qword_1EE815308;
  if (!qword_1EE815308)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FE10, &type metadata for NextHourToken.HeavySnowToFlurriesStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815308);
  }
  return result;
}

unint64_t sub_1A6056404()
{
  unint64_t result;

  result = qword_1EE815310;
  if (!qword_1EE815310)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FD98, &type metadata for NextHourToken.SnowToHeavySnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815310);
  }
  return result;
}

unint64_t sub_1A6056444()
{
  unint64_t result;

  result = qword_1EE815318;
  if (!qword_1EE815318)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FDC0, &type metadata for NextHourToken.SnowToHeavySnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815318);
  }
  return result;
}

unint64_t sub_1A6056484()
{
  unint64_t result;

  result = qword_1EE815320;
  if (!qword_1EE815320)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FD48, &type metadata for NextHourToken.HeavySnowToSnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815320);
  }
  return result;
}

unint64_t sub_1A60564C4()
{
  unint64_t result;

  result = qword_1EE815328;
  if (!qword_1EE815328)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FD70, &type metadata for NextHourToken.HeavySnowToSnowStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815328);
  }
  return result;
}

unint64_t sub_1A6056504()
{
  unint64_t result;

  result = qword_1EE815330;
  if (!qword_1EE815330)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FCF8, &type metadata for NextHourToken.FlurriesToHeavySnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815330);
  }
  return result;
}

unint64_t sub_1A6056544()
{
  unint64_t result;

  result = qword_1EE815338;
  if (!qword_1EE815338)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FD20, &type metadata for NextHourToken.FlurriesToHeavySnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815338);
  }
  return result;
}

unint64_t sub_1A6056584()
{
  unint64_t result;

  result = qword_1EE815340;
  if (!qword_1EE815340)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FCA8, &type metadata for NextHourToken.HeavySnowToFlurriesStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815340);
  }
  return result;
}

unint64_t sub_1A60565C4()
{
  unint64_t result;

  result = qword_1EE815348;
  if (!qword_1EE815348)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FCD0, &type metadata for NextHourToken.HeavySnowToFlurriesStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815348);
  }
  return result;
}

unint64_t sub_1A6056604()
{
  unint64_t result;

  result = qword_1EE815350;
  if (!qword_1EE815350)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FC58, &type metadata for NextHourToken.SnowToHeavySnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815350);
  }
  return result;
}

unint64_t sub_1A6056644()
{
  unint64_t result;

  result = qword_1EE815358;
  if (!qword_1EE815358)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FC80, &type metadata for NextHourToken.SnowToHeavySnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815358);
  }
  return result;
}

unint64_t sub_1A6056684()
{
  unint64_t result;

  result = qword_1EE815360;
  if (!qword_1EE815360)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FC08, &type metadata for NextHourToken.HeavySnowToSnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815360);
  }
  return result;
}

unint64_t sub_1A60566C4()
{
  unint64_t result;

  result = qword_1EE815368;
  if (!qword_1EE815368)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FC30, &type metadata for NextHourToken.HeavySnowToSnowStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815368);
  }
  return result;
}

unint64_t sub_1A6056704()
{
  unint64_t result;

  result = qword_1EE815370;
  if (!qword_1EE815370)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FBB8, &type metadata for NextHourToken.FlurriesToHeavySnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815370);
  }
  return result;
}

unint64_t sub_1A6056744()
{
  unint64_t result;

  result = qword_1EE815378;
  if (!qword_1EE815378)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FBE0, &type metadata for NextHourToken.FlurriesToHeavySnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815378);
  }
  return result;
}

unint64_t sub_1A6056784()
{
  unint64_t result;

  result = qword_1EE815380;
  if (!qword_1EE815380)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FB68, &type metadata for NextHourToken.HeavySnowToFlurriesStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815380);
  }
  return result;
}

unint64_t sub_1A60567C4()
{
  unint64_t result;

  result = qword_1EE815388;
  if (!qword_1EE815388)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FB90, &type metadata for NextHourToken.HeavySnowToFlurriesStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815388);
  }
  return result;
}

unint64_t sub_1A6056804()
{
  unint64_t result;

  result = qword_1EE815390;
  if (!qword_1EE815390)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FB18, &type metadata for NextHourToken.SnowToHeavySnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815390);
  }
  return result;
}

unint64_t sub_1A6056844()
{
  unint64_t result;

  result = qword_1EE815398;
  if (!qword_1EE815398)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FB40, &type metadata for NextHourToken.SnowToHeavySnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815398);
  }
  return result;
}

unint64_t sub_1A6056884()
{
  unint64_t result;

  result = qword_1EE8153A0;
  if (!qword_1EE8153A0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FAC8, &type metadata for NextHourToken.HeavySnowToSnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8153A0);
  }
  return result;
}

unint64_t sub_1A60568C4()
{
  unint64_t result;

  result = qword_1EE8153A8;
  if (!qword_1EE8153A8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FAF0, &type metadata for NextHourToken.HeavySnowToSnowStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8153A8);
  }
  return result;
}

unint64_t sub_1A6056904()
{
  unint64_t result;

  result = qword_1EE8153B0;
  if (!qword_1EE8153B0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FA78, &type metadata for NextHourToken.FlurriesToHeavySnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8153B0);
  }
  return result;
}

unint64_t sub_1A6056944()
{
  unint64_t result;

  result = qword_1EE8153B8;
  if (!qword_1EE8153B8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FAA0, &type metadata for NextHourToken.FlurriesToHeavySnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8153B8);
  }
  return result;
}

unint64_t sub_1A6056984()
{
  unint64_t result;

  result = qword_1EE8153C0;
  if (!qword_1EE8153C0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FA28, &type metadata for NextHourToken.HeavySnowToFlurriesStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8153C0);
  }
  return result;
}

unint64_t sub_1A60569C4()
{
  unint64_t result;

  result = qword_1EE8153C8;
  if (!qword_1EE8153C8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FA50, &type metadata for NextHourToken.HeavySnowToFlurriesStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8153C8);
  }
  return result;
}

unint64_t sub_1A6056A04()
{
  unint64_t result;

  result = qword_1EE8153D0;
  if (!qword_1EE8153D0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F9D8, &type metadata for NextHourToken.SnowToHeavySnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8153D0);
  }
  return result;
}

unint64_t sub_1A6056A44()
{
  unint64_t result;

  result = qword_1EE8153D8;
  if (!qword_1EE8153D8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612FA00, &type metadata for NextHourToken.SnowToHeavySnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8153D8);
  }
  return result;
}

unint64_t sub_1A6056A84()
{
  unint64_t result;

  result = qword_1EE8153E0;
  if (!qword_1EE8153E0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F988, &type metadata for NextHourToken.HeavySnowToSnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8153E0);
  }
  return result;
}

unint64_t sub_1A6056AC4()
{
  unint64_t result;

  result = qword_1EE8153E8;
  if (!qword_1EE8153E8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F9B0, &type metadata for NextHourToken.HeavySnowToSnowStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8153E8);
  }
  return result;
}

unint64_t sub_1A6056B04()
{
  unint64_t result;

  result = qword_1EE8153F0;
  if (!qword_1EE8153F0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F938, &type metadata for NextHourToken.PossibleSleetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8153F0);
  }
  return result;
}

unint64_t sub_1A6056B44()
{
  unint64_t result;

  result = qword_1EE8153F8;
  if (!qword_1EE8153F8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F960, &type metadata for NextHourToken.PossibleSleetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8153F8);
  }
  return result;
}

unint64_t sub_1A6056B84()
{
  unint64_t result;

  result = qword_1EE815400;
  if (!qword_1EE815400)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F8E8, &type metadata for NextHourToken.PossibleSleetStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815400);
  }
  return result;
}

unint64_t sub_1A6056BC4()
{
  unint64_t result;

  result = qword_1EE815408;
  if (!qword_1EE815408)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F910, &type metadata for NextHourToken.PossibleSleetStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815408);
  }
  return result;
}

unint64_t sub_1A6056C04()
{
  unint64_t result;

  result = qword_1EE815410;
  if (!qword_1EE815410)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F898, &type metadata for NextHourToken.PossibleSleetStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815410);
  }
  return result;
}

unint64_t sub_1A6056C44()
{
  unint64_t result;

  result = qword_1EE815418;
  if (!qword_1EE815418)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F8C0, &type metadata for NextHourToken.PossibleSleetStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815418);
  }
  return result;
}

unint64_t sub_1A6056C84()
{
  unint64_t result;

  result = qword_1EE815420;
  if (!qword_1EE815420)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F848, &type metadata for NextHourToken.PossibleSleetStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815420);
  }
  return result;
}

unint64_t sub_1A6056CC4()
{
  unint64_t result;

  result = qword_1EE815428;
  if (!qword_1EE815428)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F870, &type metadata for NextHourToken.PossibleSleetStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815428);
  }
  return result;
}

unint64_t sub_1A6056D04()
{
  unint64_t result;

  result = qword_1EE815430;
  if (!qword_1EE815430)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F7F8, &type metadata for NextHourToken.PossibleSleetStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815430);
  }
  return result;
}

unint64_t sub_1A6056D44()
{
  unint64_t result;

  result = qword_1EE815438;
  if (!qword_1EE815438)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F820, &type metadata for NextHourToken.PossibleSleetStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815438);
  }
  return result;
}

unint64_t sub_1A6056D84()
{
  unint64_t result;

  result = qword_1EE815440;
  if (!qword_1EE815440)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F7A8, &type metadata for NextHourToken.SleetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815440);
  }
  return result;
}

unint64_t sub_1A6056DC4()
{
  unint64_t result;

  result = qword_1EE815448;
  if (!qword_1EE815448)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F7D0, &type metadata for NextHourToken.SleetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815448);
  }
  return result;
}

unint64_t sub_1A6056E04()
{
  unint64_t result;

  result = qword_1EE815450;
  if (!qword_1EE815450)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F758, &type metadata for NextHourToken.SleetStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815450);
  }
  return result;
}

unint64_t sub_1A6056E44()
{
  unint64_t result;

  result = qword_1EE815458;
  if (!qword_1EE815458)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F780, &type metadata for NextHourToken.SleetStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815458);
  }
  return result;
}

unint64_t sub_1A6056E84()
{
  unint64_t result;

  result = qword_1EE815460;
  if (!qword_1EE815460)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F708, &type metadata for NextHourToken.SleetStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815460);
  }
  return result;
}

unint64_t sub_1A6056EC4()
{
  unint64_t result;

  result = qword_1EE815468;
  if (!qword_1EE815468)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F730, &type metadata for NextHourToken.SleetStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815468);
  }
  return result;
}

unint64_t sub_1A6056F04()
{
  unint64_t result;

  result = qword_1EE815470;
  if (!qword_1EE815470)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F6B8, &type metadata for NextHourToken.SleetStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815470);
  }
  return result;
}

unint64_t sub_1A6056F44()
{
  unint64_t result;

  result = qword_1EE815478;
  if (!qword_1EE815478)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F6E0, &type metadata for NextHourToken.SleetStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815478);
  }
  return result;
}

unint64_t sub_1A6056F84()
{
  unint64_t result;

  result = qword_1EE815480;
  if (!qword_1EE815480)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F668, &type metadata for NextHourToken.SleetStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815480);
  }
  return result;
}

unint64_t sub_1A6056FC4()
{
  unint64_t result;

  result = qword_1EE815488;
  if (!qword_1EE815488)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F690, &type metadata for NextHourToken.SleetStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815488);
  }
  return result;
}

unint64_t sub_1A6057004()
{
  unint64_t result;

  result = qword_1EE815490;
  if (!qword_1EE815490)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F618, &type metadata for NextHourToken.PossibleHailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815490);
  }
  return result;
}

unint64_t sub_1A6057044()
{
  unint64_t result;

  result = qword_1EE815498;
  if (!qword_1EE815498)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F640, &type metadata for NextHourToken.PossibleHailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815498);
  }
  return result;
}

unint64_t sub_1A6057084()
{
  unint64_t result;

  result = qword_1EE8154A0;
  if (!qword_1EE8154A0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F5C8, &type metadata for NextHourToken.PossibleHailStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8154A0);
  }
  return result;
}

unint64_t sub_1A60570C4()
{
  unint64_t result;

  result = qword_1EE8154A8;
  if (!qword_1EE8154A8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F5F0, &type metadata for NextHourToken.PossibleHailStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8154A8);
  }
  return result;
}

unint64_t sub_1A6057104()
{
  unint64_t result;

  result = qword_1EE8154B0;
  if (!qword_1EE8154B0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F578, &type metadata for NextHourToken.PossibleHailStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8154B0);
  }
  return result;
}

unint64_t sub_1A6057144()
{
  unint64_t result;

  result = qword_1EE8154B8;
  if (!qword_1EE8154B8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F5A0, &type metadata for NextHourToken.PossibleHailStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8154B8);
  }
  return result;
}

unint64_t sub_1A6057184()
{
  unint64_t result;

  result = qword_1EE8154C0;
  if (!qword_1EE8154C0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F528, &type metadata for NextHourToken.PossibleHailStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8154C0);
  }
  return result;
}

unint64_t sub_1A60571C4()
{
  unint64_t result;

  result = qword_1EE8154C8;
  if (!qword_1EE8154C8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F550, &type metadata for NextHourToken.PossibleHailStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8154C8);
  }
  return result;
}

unint64_t sub_1A6057204()
{
  unint64_t result;

  result = qword_1EE8154D0;
  if (!qword_1EE8154D0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F4D8, &type metadata for NextHourToken.PossibleHailStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8154D0);
  }
  return result;
}

unint64_t sub_1A6057244()
{
  unint64_t result;

  result = qword_1EE8154D8;
  if (!qword_1EE8154D8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F500, &type metadata for NextHourToken.PossibleHailStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8154D8);
  }
  return result;
}

unint64_t sub_1A6057284()
{
  unint64_t result;

  result = qword_1EE8154E0;
  if (!qword_1EE8154E0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F488, &type metadata for NextHourToken.HailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8154E0);
  }
  return result;
}

unint64_t sub_1A60572C4()
{
  unint64_t result;

  result = qword_1EE8154E8;
  if (!qword_1EE8154E8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F4B0, &type metadata for NextHourToken.HailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8154E8);
  }
  return result;
}

unint64_t sub_1A6057304()
{
  unint64_t result;

  result = qword_1EE8154F0;
  if (!qword_1EE8154F0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F438, &type metadata for NextHourToken.HailStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8154F0);
  }
  return result;
}

unint64_t sub_1A6057344()
{
  unint64_t result;

  result = qword_1EE8154F8;
  if (!qword_1EE8154F8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F460, &type metadata for NextHourToken.HailStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8154F8);
  }
  return result;
}

unint64_t sub_1A6057384()
{
  unint64_t result;

  result = qword_1EE815500;
  if (!qword_1EE815500)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F3E8, &type metadata for NextHourToken.HailStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815500);
  }
  return result;
}

unint64_t sub_1A60573C4()
{
  unint64_t result;

  result = qword_1EE815508;
  if (!qword_1EE815508)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F410, &type metadata for NextHourToken.HailStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815508);
  }
  return result;
}

unint64_t sub_1A6057404()
{
  unint64_t result;

  result = qword_1EE815510;
  if (!qword_1EE815510)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F398, &type metadata for NextHourToken.HailStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815510);
  }
  return result;
}

unint64_t sub_1A6057444()
{
  unint64_t result;

  result = qword_1EE815518;
  if (!qword_1EE815518)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F3C0, &type metadata for NextHourToken.HailStartStopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815518);
  }
  return result;
}

unint64_t sub_1A6057484()
{
  unint64_t result;

  result = qword_1EE815520;
  if (!qword_1EE815520)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F348, &type metadata for NextHourToken.HailStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815520);
  }
  return result;
}

unint64_t sub_1A60574C4()
{
  unint64_t result;

  result = qword_1EE815528;
  if (!qword_1EE815528)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F370, &type metadata for NextHourToken.HailStopStartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815528);
  }
  return result;
}

unint64_t sub_1A6057504()
{
  unint64_t result;

  result = qword_1EE815530;
  if (!qword_1EE815530)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F2F8, &type metadata for NextHourToken.ClearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815530);
  }
  return result;
}

unint64_t sub_1A6057544()
{
  unint64_t result;

  result = qword_1EE815538;
  if (!qword_1EE815538)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A612F320, &type metadata for NextHourToken.ClearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815538);
  }
  return result;
}

unint64_t sub_1A6057584()
{
  unint64_t result;

  result = qword_1EE815540;
  if (!qword_1EE815540)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6131288, &type metadata for NextHourToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815540);
  }
  return result;
}

unint64_t sub_1A60575C4()
{
  unint64_t result;

  result = qword_1EE815548;
  if (!qword_1EE815548)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61312B0, &type metadata for NextHourToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815548);
  }
  return result;
}

unint64_t OUTLINED_FUNCTION_102_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 46;
  return sub_1A6050378();
}

unint64_t OUTLINED_FUNCTION_115_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 88;
  return sub_1A604F9A0();
}

unint64_t OUTLINED_FUNCTION_118_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 65;
  return sub_1A604FF04();
}

unint64_t OUTLINED_FUNCTION_148_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 58;
  return sub_1A60500A8();
}

unint64_t OUTLINED_FUNCTION_152_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 57;
  return sub_1A60500E4();
}

unint64_t OUTLINED_FUNCTION_155_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 34;
  return sub_1A6050648();
}

unint64_t OUTLINED_FUNCTION_157_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 78;
  return sub_1A604FBF8();
}

uint64_t sub_1A6057654(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;

  v28 = a3;
  v6 = type metadata accessor for InstantWeather();
  v27 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v23 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = *(_QWORD *)(sub_1A6122540() - 8);
    v17 = (a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)));
    v26 = OBJC_IVAR____TtC10WeatherKit14WeatherService_modelFactory;
    v18 = *(_QWORD *)(v16 + 72);
    v23[1] = a1;
    v24 = v18;
    swift_bridgeObjectRetain();
    v19 = MEMORY[0x1E0DEE9D8];
    v25 = a2;
    while (1)
    {
      sub_1A5FE499C(v17, (uint64_t)v11);
      if (v3)
        break;
      sub_1A5F9FFD4((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for InstantWeather);
      sub_1A5F9FFD4((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for InstantWeather);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v19 = sub_1A610BAE4(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
      v21 = *(_QWORD *)(v19 + 16);
      v20 = *(_QWORD *)(v19 + 24);
      if (v21 >= v20 >> 1)
        v19 = sub_1A610BAE4(v20 > 1, v21 + 1, 1, v19);
      *(_QWORD *)(v19 + 16) = v21 + 1;
      sub_1A5F9FFD4((uint64_t)v8, v19+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v21, (uint64_t (*)(_QWORD))type metadata accessor for InstantWeather);
      v17 = ((char *)v17 + v24);
      if (!--v15)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    v19 = MEMORY[0x1E0DEE9D8];
LABEL_12:

  }
  return v19;
}

uint64_t sub_1A60578A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1, a2);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED193C90);
  sub_1A6123DB8();
  return swift_storeEnumTagMultiPayload();
}

void WeatherService.fetchWeather<A>(for:including:options:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Options;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char v50;
  uint64_t v51;

  OUTLINED_FUNCTION_6_2();
  v2 = v1;
  v45 = v3;
  v46 = v4;
  v47 = v5;
  v48 = v6;
  v8 = v7;
  v9 = *(_QWORD *)(OUTLINED_FUNCTION_374(v5, v7, v6, v3, v4, v1) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - v11;
  v44 = OUTLINED_FUNCTION_6();
  v42 = *(_QWORD *)(v44 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_11_0();
  v40 = v14;
  OUTLINED_FUNCTION_72_0();
  v43 = sub_1A6121D24();
  v41 = *(_QWORD *)(v43 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_11_0();
  v39 = v16;
  OUTLINED_FUNCTION_72_0();
  Options = type metadata accessor for InstantWeatherQueryOptions();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_23();
  v21 = v19 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v38 - v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192EB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_273_0();
  sub_1A5FCE5E0(v8, v2, v0);
  if (__swift_getEnumTagSinglePayload(v0, 1, Options) == 1)
  {
    OUTLINED_FUNCTION_149_0((uint64_t)v12, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
    v49 = v12;
    v51 = v2;
    sub_1A6057E18();
    OUTLINED_FUNCTION_34_2((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  }
  else
  {
    v26 = v45;
    v38 = v8;
    sub_1A5F9FFD4(v0, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for InstantWeatherQueryOptions);
    sub_1A5FC56D4((uint64_t)v24, v21, (uint64_t (*)(_QWORD))type metadata accessor for InstantWeatherQueryOptions);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE812E80) + 48);
      v28 = *(char **)v27;
      v29 = *(_BYTE *)(v27 + 8);
      v30 = v41;
      v31 = v39;
      v32 = v43;
      OUTLINED_FUNCTION_163(v39, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 32));
      v49 = v28;
      v50 = v29;
      v33 = (_QWORD *)OUTLINED_FUNCTION_65_5();
      v33[2] = v2;
      v33[3] = v26;
      v33[4] = v46;
      swift_retain();
      WeatherService.fetchInstantWeather<A>(for:dataSet:spanning:stride:with:completion:)();
      OUTLINED_FUNCTION_38();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
    }
    else
    {
      v34 = v42;
      v35 = v40;
      v36 = v44;
      OUTLINED_FUNCTION_315(v40, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 32));
      v37 = (_QWORD *)OUTLINED_FUNCTION_65_5();
      v37[2] = v2;
      v37[3] = v26;
      v37[4] = v46;
      swift_retain();
      WeatherService.fetchInstantWeather<A>(for:dataSet:at:with:completion:)();
      OUTLINED_FUNCTION_6_6();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
    }
    sub_1A5FA1740((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for InstantWeatherQueryOptions);
  }
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.fetchInstantWeather<A>(for:dataSet:spanning:stride:with:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  id v20;
  uint64_t v21;

  OUTLINED_FUNCTION_6_2();
  v2 = v1;
  v4 = v3;
  v21 = v5;
  v7 = v6;
  v9 = (void *)v8;
  v13 = OUTLINED_FUNCTION_245_0(v8, v6, v10, v11, v12, v5, v3, v1);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_113_1();
  OUTLINED_FUNCTION_33_9(v0, v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
  v16 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = (v15 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v2;
  OUTLINED_FUNCTION_33_9(v18 + v16, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
  *(_QWORD *)(v18 + v17) = v9;
  v19 = (uint64_t *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v19 = v21;
  v19[1] = v4;
  v20 = v9;
  OUTLINED_FUNCTION_33_6();
  WeatherService.fetchInstantWeather(for:spanning:stride:with:completion:)();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.fetchInstantWeather<A>(for:dataSet:at:with:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  OUTLINED_FUNCTION_6_2();
  v2 = v1;
  v4 = v3;
  v19 = v5;
  v7 = v6;
  v9 = v8;
  v12 = type metadata accessor for WeatherQuery(0, v1, v10, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_213_0();
  OUTLINED_FUNCTION_49_6(v0, v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  v15 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (v14 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v2;
  OUTLINED_FUNCTION_49_6(v17 + v15, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
  *(_QWORD *)(v17 + v16) = v9;
  v18 = (_QWORD *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v18 = v19;
  v18[1] = v4;
  v9;
  OUTLINED_FUNCTION_33_6();
  WeatherService.fetchInstantWeather(for:at:with:completion:)();
  OUTLINED_FUNCTION_7_10();
  OUTLINED_FUNCTION_0_0();
}

void sub_1A6057E18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  NSObject *v41;
  uint64_t v42;
  char **v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t);
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  int v69;
  _BOOL4 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  void *v79;
  NSObject *v80;
  const char *v81;
  uint64_t *v82;
  uint64_t v83;
  char **v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, uint64_t);
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t (*v94)(void);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  char *v112;
  uint64_t *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  void *v118;
  uint64_t v119;
  uint64_t *v120;
  void *v121;
  _QWORD *v122;
  int v123;
  void (*v124)(_QWORD, _QWORD);
  NSObject *v125;
  void (*v126)(_QWORD, _QWORD, _QWORD);
  void *v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD **v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t);
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char **v145;
  _QWORD *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  OUTLINED_FUNCTION_6_2();
  v2 = v1;
  v134 = v3;
  v135 = v4;
  v126 = (void (*)(_QWORD, _QWORD, _QWORD))v5;
  v7 = v6;
  v9 = v8;
  v146 = v0;
  v140 = *v0;
  v148 = v10;
  v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFELL);
  v150 = OUTLINED_FUNCTION_6();
  v143 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  OUTLINED_FUNCTION_209();
  v139 = v12;
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_129(v14);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_53();
  v136 = v16;
  v132 = v17;
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_53();
  v149 = v19;
  OUTLINED_FUNCTION_72_0();
  v20 = sub_1A6122708();
  v141 = *(_QWORD *)(v20 - 8);
  v142 = v20;
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_129(v21);
  v128 = v22;
  v24 = MEMORY[0x1E0C80A78](v23);
  v147 = (char *)&v122 - v27;
  v127 = v9;
  if (v2 == 1)
  {
    v28 = OUTLINED_FUNCTION_22_14(v24, *v11, v25, v26);
  }
  else
  {
    v29 = MEMORY[0x1E0C80A78](v24);
    if (v2)
    {
      v32 = v11;
      v33 = (uint64_t *)((char *)&v122 - ((8 * v2 + 15) & 0xFFFFFFFFFFFFFFF0));
      v34 = v2;
      do
      {
        v35 = *v32++;
        v29 = OUTLINED_FUNCTION_280_0(v29, v35, v30, v31);
        *v33++ = v29;
        --v34;
      }
      while (v34);
    }
    v28 = OUTLINED_FUNCTION_28_0();
  }
  v133 = &v122;
  v144 = v28;
  v138 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_129(v36);
  OUTLINED_FUNCTION_96_2((uint64_t)&v122);
  v130 = v37;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v122 - v39;
  _s21WeatherServiceRequestVMa();
  OUTLINED_FUNCTION_171_0((uint64_t)&v122);
  v125 = v41;
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_11_0();
  v145 = v43;
  OUTLINED_FUNCTION_239_0((uint64_t)&v122);
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_370((uint64_t)&v122);
  v151 = v2;
  if (v2)
  {
    v48 = (int *)(v144 + 32);
    v49 = v11;
    v50 = v7;
    v51 = v137;
    v52 = v2;
    do
    {
      if (v2 == 1)
        v53 = 0;
      else
        v53 = *v48;
      v55 = *v49++;
      v54 = v55;
      v56 = &v40[v53];
      v57 = *v50++;
      OUTLINED_FUNCTION_22_14(v45, v54, v46, v47);
      v58 = OUTLINED_FUNCTION_356();
      v45 = v59(v58, v57);
      *v51++ = (uint64_t)v56;
      v48 += 4;
      --v52;
      v2 = v151;
    }
    while (v52);
  }
  v60 = v127;
  sub_1A5FCE66C(v137, (uint64_t)v126, v2, v148, v145);
  (*(void (**)(char *, uint64_t))(v138 + 8))(v40, v144);
  sub_1A5FA3E70();
  v61 = v149;
  sub_1A6121F4C();
  if (qword_1ED193BE8 != -1)
    swift_once();
  v62 = OUTLINED_FUNCTION_24_1();
  __swift_project_value_buffer(v62, (uint64_t)qword_1ED19DB18);
  v63 = v143;
  v64 = *(void (**)(void (*)(_QWORD, _QWORD), uint64_t, uint64_t))(v143 + 16);
  v65 = (uint64_t)v136;
  v66 = v150;
  v64(v136, v61, v150);
  v137 = v60;
  v67 = sub_1A6123554();
  v68 = sub_1A6123A4C();
  v69 = v68;
  v70 = os_log_type_enabled(v67, v68);
  v126 = (void (*)(_QWORD, _QWORD, _QWORD))v64;
  if (v70)
  {
    v71 = OUTLINED_FUNCTION_16_2();
    v122 = (_QWORD *)OUTLINED_FUNCTION_26();
    v72 = OUTLINED_FUNCTION_16_2();
    v127 = (void *)v72;
    *(_DWORD *)v71 = 141558531;
    v152 = 1752392040;
    v153 = v72;
    sub_1A6123A88();
    *(_WORD *)(v71 + 12) = 2113;
    v125 = v67;
    v73 = v137;
    v152 = (uint64_t)v137;
    v74 = v137;
    v123 = v69;
    v75 = v74;
    sub_1A6123A88();
    *v122 = v73;

    *(_WORD *)(v71 + 22) = 2082;
    v76 = (uint64_t)v136;
    v64((void (*)(_QWORD, _QWORD))v124, (uint64_t)v136, v66);
    v77 = sub_1A612380C();
    v152 = sub_1A5FBE7E0(v77, v78, &v153);
    OUTLINED_FUNCTION_340();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_353(v76, *(uint64_t (**)(uint64_t, uint64_t))(v143 + 8));
    OUTLINED_FUNCTION_254_0();
    OUTLINED_FUNCTION_253(v79, v80, (os_log_type_t)v123, v81, (uint8_t *)v71);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_8();
  }
  v82 = v137;

  OUTLINED_FUNCTION_353(v65, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
  MEMORY[0x1E0C80A78](v83);
  v84 = v145;
  *(&v122 - 4) = v146;
  *(&v122 - 3) = v84;
  v85 = v137;
  v86 = (uint64_t)v147;
  *(&v122 - 2) = v137;
  *(&v122 - 1) = (_QWORD *)v86;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C40);
  OUTLINED_FUNCTION_324_0();
  v87 = v141;
  v88 = OUTLINED_FUNCTION_220_0();
  OUTLINED_FUNCTION_163(v88, v86, v89);
  v90 = (*(unsigned __int8 *)(v87 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  v91 = swift_allocObject();
  v92 = OUTLINED_FUNCTION_302_0(v91);
  OUTLINED_FUNCTION_163(v92 + v90, v63, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 32));
  v129 = v85;
  v93 = (void *)sub_1A61221E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C38);
  v137 = (uint64_t *)sub_1A6122204();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_22();

  OUTLINED_FUNCTION_294_0();
  v95 = v94();
  v98 = v131;
  v99 = v144;
  if (v151)
  {
    v100 = (int *)(v144 + 32);
    v101 = v151;
    do
    {
      if (v151 == 1)
        v102 = 0;
      else
        v102 = *v100;
      v103 = *v11++;
      ++v7;
      v104 = v98 + v102;
      v105 = OUTLINED_FUNCTION_22_14(v95, v103, v96, v97);
      v95 = OUTLINED_FUNCTION_36(v104, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 16));
      v100 += 4;
      --v101;
    }
    while (v101);
  }
  v106 = v143;
  v107 = (*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
  v108 = (v132 + v107 + 7) & 0xFFFFFFFFFFFFFFF8;
  v109 = v138;
  v110 = (*(unsigned __int8 *)(v138 + 80) + v108 + 8) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
  v111 = (v130 + v110 + 7) & 0xFFFFFFFFFFFFFFF8;
  v112 = (char *)swift_allocObject();
  *((_QWORD *)v112 + 2) = v151;
  *((_QWORD *)v112 + 3) = OUTLINED_FUNCTION_147_2();
  (*(void (**)(char *, uint64_t, uint64_t))(v106 + 32))(&v112[v107], v139, v150);
  v113 = v129;
  *(_QWORD *)&v112[v108] = v129;
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 32))(&v112[v110], v98, v99);
  v114 = &v112[v111];
  v116 = v134;
  v115 = v135;
  *(_QWORD *)v114 = v134;
  *((_QWORD *)v114 + 1) = v115;
  v117 = v113;
  OUTLINED_FUNCTION_53_0();
  v118 = (void *)sub_1A61221E0();
  sub_1A6122210();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_22();

  v119 = OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_302_0(v119);
  *((_QWORD *)v112 + 3) = OUTLINED_FUNCTION_147_2();
  *((_QWORD *)v112 + 4) = v117;
  *((_QWORD *)v112 + 5) = v116;
  *((_QWORD *)v112 + 6) = v115;
  v120 = v117;
  OUTLINED_FUNCTION_53_0();
  v121 = (void *)sub_1A61221E0();
  OUTLINED_FUNCTION_176();
  swift_release();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_22();

  v136(v149, v150);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v147, v142);
  sub_1A5FA1740((uint64_t)v145, (uint64_t (*)(_QWORD))_s21WeatherServiceRequestVMa);
  OUTLINED_FUNCTION_245();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A60586B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A60586D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

void WeatherService.fetchWeather<A, B>(for:including:_:options:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[8];
  uint64_t v22;
  char *v23;

  OUTLINED_FUNCTION_6_2();
  v21[4] = v1;
  v3 = v2;
  v5 = v4;
  v21[2] = v6;
  v21[3] = v7;
  v9 = v8;
  v11 = v10;
  v21[1] = v12;
  v13 = *(_QWORD *)(OUTLINED_FUNCTION_245_0(v12, v10, v8, v6, v7, v1, v4, v2) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v21 - v15;
  v19 = *(_QWORD *)(type metadata accessor for WeatherQuery(0, v5, v17, v18) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_126_2();
  OUTLINED_FUNCTION_83(v0, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16));
  v22 = v0;
  OUTLINED_FUNCTION_202((uint64_t)v16, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  v23 = v16;
  v21[6] = v5;
  v21[7] = v3;
  sub_1A6057E18();
  OUTLINED_FUNCTION_154((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  OUTLINED_FUNCTION_167_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.fetchWeather<A, B, C>(for:including:_:_:options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;

  OUTLINED_FUNCTION_6_2();
  v58 = v23;
  v25 = v24;
  v56 = v26;
  v57 = v27;
  v54 = v29;
  v55 = v28;
  v51 = v30;
  v52 = v31;
  v50 = a21;
  v53 = a22;
  v32 = *(_QWORD *)(OUTLINED_FUNCTION_22_14(v28, a22, v31, v29) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v50 - v34;
  v40 = *(_QWORD *)(OUTLINED_FUNCTION_13_24(v36, v37, v38, v39) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)&v50 - v42;
  v48 = *(_QWORD *)(OUTLINED_FUNCTION_10_27(v44, v45, v46, v47) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_163(v22, v51, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 16));
  v62 = v22;
  OUTLINED_FUNCTION_49_6((uint64_t)v43, v52, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 16));
  v63 = v43;
  OUTLINED_FUNCTION_202((uint64_t)v35, v54, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16));
  v64 = v35;
  v59 = v25;
  v60 = v50;
  v61 = v53;
  sub_1A6057E18();
  OUTLINED_FUNCTION_154((uint64_t)v35, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
  OUTLINED_FUNCTION_146((uint64_t)v43, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
  OUTLINED_FUNCTION_122(v22, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.fetchWeather<A, B, C, D>(for:including:_:_:_:options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t (*v70)(uint64_t, _QWORD);
  uint64_t v71[4];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;

  OUTLINED_FUNCTION_6_2();
  a19 = v24;
  a20 = v25;
  v82 = v26;
  v80 = v27;
  v81 = v28;
  v78 = v30;
  v79 = v29;
  v76 = v31;
  v74 = v32;
  v72 = v33;
  v34 = a21;
  v71[3] = a22;
  v35 = a23;
  v73 = a23;
  v77 = a24;
  v75 = OUTLINED_FUNCTION_22_14(v29, a24, v32, v31);
  v83 = *(_QWORD *)(v75 - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)v71 - v37;
  v43 = OUTLINED_FUNCTION_14_26(v39, v40, v41, v42);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v43 - 8));
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)v71 - v45;
  v51 = OUTLINED_FUNCTION_10_27(v47, v48, v49, v50);
  v52 = *(_QWORD *)(v51 - 8);
  OUTLINED_FUNCTION_274_0(v51, (uint64_t)&a15);
  v71[1] = v52;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v53);
  v55 = (char *)v71 - v54;
  v58 = *(_QWORD *)(type metadata accessor for WeatherQuery(0, v34, v56, v57) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v59);
  v61 = OUTLINED_FUNCTION_287_0(v60, v71[0]);
  OUTLINED_FUNCTION_315((uint64_t)v61, v72, v62);
  v88 = v35;
  OUTLINED_FUNCTION_33_9((uint64_t)v55, v74, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 16));
  v89 = v55;
  OUTLINED_FUNCTION_227_0();
  OUTLINED_FUNCTION_49_6((uint64_t)v46, v76, v63);
  v90 = v46;
  v64 = OUTLINED_FUNCTION_355();
  OUTLINED_FUNCTION_202(v64, v78, v65);
  v91 = v38;
  OUTLINED_FUNCTION_245();
  v84 = v34;
  v85 = v66;
  v86 = v73;
  v87 = v77;
  sub_1A6057E18();
  v67 = OUTLINED_FUNCTION_267_0();
  OUTLINED_FUNCTION_154(v67, v68);
  OUTLINED_FUNCTION_146((uint64_t)v46, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
  v69 = OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_97(v69, v70);
  OUTLINED_FUNCTION_36(v35, *(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.fetchWeather<A, B, C, D, E>(for:including:_:_:_:_:options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t (*v79)(uint64_t, _QWORD);
  _QWORD v80[2];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  _QWORD v105[2];
  uint64_t v106;

  OUTLINED_FUNCTION_6_2();
  a19 = v27;
  a20 = v28;
  v97 = v29;
  v96 = v30;
  v93 = v31;
  v90 = v32;
  v91 = v33;
  v87 = v34;
  v85 = v35;
  v36 = a22;
  v94 = v37;
  v95 = a21;
  v80[1] = a22;
  v83 = a23;
  v84 = a24;
  v88 = a25;
  v92 = a26;
  v89 = OUTLINED_FUNCTION_22_14(v37, a26, v34, v32);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v89 - 8));
  MEMORY[0x1E0C80A78](v38);
  v42 = OUTLINED_FUNCTION_9_23(v40, v41, (uint64_t)v80 - v39);
  OUTLINED_FUNCTION_78(v42, (uint64_t)&a12);
  v98 = v43;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)v80 - v45;
  v51 = OUTLINED_FUNCTION_13_24(v47, v48, v49, v50);
  v52 = *(_QWORD *)(v51 - 8);
  v80[0] = v51;
  v81 = v52;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v53);
  v55 = (char *)v80 - v54;
  v60 = OUTLINED_FUNCTION_10_27(v56, v57, v58, v59);
  v61 = *(_QWORD *)(v60 - 8);
  OUTLINED_FUNCTION_169_0(v60, (uint64_t)&v106);
  v82 = v61;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v62);
  v64 = (char *)v80 - v63;
  v69 = OUTLINED_FUNCTION_23_16(v65, v66, v67, v68);
  v70 = *(_QWORD *)(v69 - 8);
  OUTLINED_FUNCTION_170_0(v69, (uint64_t)&a11);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v71);
  OUTLINED_FUNCTION_152_2();
  OUTLINED_FUNCTION_97(v26, *(uint64_t (**)(uint64_t, _QWORD))(v70 + 16));
  v102 = v26;
  OUTLINED_FUNCTION_46_6((uint64_t)v64, *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v61 + 16));
  v103 = v64;
  OUTLINED_FUNCTION_33_9((uint64_t)v55, v90, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 16));
  v104 = v55;
  v72 = OUTLINED_FUNCTION_355();
  OUTLINED_FUNCTION_53_5(v72, v91, v73);
  v105[0] = v46;
  OUTLINED_FUNCTION_250_0();
  v74 = v86;
  OUTLINED_FUNCTION_83(v86, v93, v75);
  v105[1] = v74;
  OUTLINED_FUNCTION_116_2((uint64_t)v105);
  v99 = v84;
  v100 = v88;
  v101 = v92;
  sub_1A6057E18();
  OUTLINED_FUNCTION_167_0(v74, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
  v76 = OUTLINED_FUNCTION_267_0();
  OUTLINED_FUNCTION_55_0(v76, v77);
  OUTLINED_FUNCTION_97((uint64_t)v55, *(uint64_t (**)(uint64_t, _QWORD))(v81 + 8));
  v78 = OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_97(v78, v79);
  OUTLINED_FUNCTION_97(v26, *(uint64_t (**)(uint64_t, _QWORD))(v70 + 8));
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.fetchWeather<A, B, C, D, E, F>(for:including:_:_:_:_:_:options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t (*v76)(uint64_t, _QWORD);
  uint64_t v77;
  uint64_t (*v78)(uint64_t, _QWORD);
  uint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t (*v82)(uint64_t, _QWORD);
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t);
  uint64_t v85[2];
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[6];
  uint64_t v112;

  OUTLINED_FUNCTION_6_2();
  v106 = v28;
  v102 = v29;
  v100 = v30;
  v99 = v31;
  v96 = v32;
  v95 = v33;
  v93 = v34;
  v104 = a21;
  v105 = v35;
  v103 = a22;
  v87 = a23;
  v89 = a24;
  v92 = a25;
  v94 = a26;
  v97 = a27;
  v101 = a28;
  v98 = OUTLINED_FUNCTION_22_14(v35, a28, v33, v32);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v98 - 8));
  MEMORY[0x1E0C80A78](v36);
  v40 = OUTLINED_FUNCTION_8_24(v38, v39, (uint64_t)v85 - v37);
  v107 = *(_QWORD *)(v40 - 8);
  v108 = v40;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v41);
  v45 = OUTLINED_FUNCTION_9_23(v43, v44, (uint64_t)v85 - v42);
  v46 = *(_QWORD *)(v45 - 8);
  OUTLINED_FUNCTION_361(v45, (uint64_t)&v109);
  v86 = v46;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)v85 - v48;
  v54 = OUTLINED_FUNCTION_23_16(v50, v51, v52, v53);
  v55 = *(_QWORD *)(v54 - 8);
  OUTLINED_FUNCTION_170_0(v54, (uint64_t)v111);
  v88 = v55;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v56);
  v58 = (char *)v85 - v57;
  v63 = *(_QWORD *)(OUTLINED_FUNCTION_10_27(v59, v60, v61, v62) - 8);
  v90 = v63;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v64);
  v66 = (char *)v85 - v65;
  OUTLINED_FUNCTION_13_24(v67, v68, v69, v70);
  OUTLINED_FUNCTION_174_0();
  OUTLINED_FUNCTION_52_4(v71);
  v91 = v72;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v73);
  v75 = OUTLINED_FUNCTION_86_2(v74, v85[0]);
  OUTLINED_FUNCTION_97((uint64_t)v75, v76);
  v111[1] = a23;
  OUTLINED_FUNCTION_149_0((uint64_t)v66, v95, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 16));
  v111[2] = v66;
  OUTLINED_FUNCTION_53_5((uint64_t)v58, v96, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 16));
  v111[3] = v58;
  OUTLINED_FUNCTION_33_9((uint64_t)v49, v99, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 16));
  v111[4] = v49;
  v77 = OUTLINED_FUNCTION_235_0();
  OUTLINED_FUNCTION_97(v77, v78);
  v111[5] = v45;
  OUTLINED_FUNCTION_217_0();
  v79 = OUTLINED_FUNCTION_354();
  OUTLINED_FUNCTION_49_6(v79, v102, v80);
  v112 = v46;
  OUTLINED_FUNCTION_184_0((uint64_t)&v110);
  OUTLINED_FUNCTION_116_2((uint64_t)&v112);
  OUTLINED_FUNCTION_368();
  sub_1A6057E18();
  OUTLINED_FUNCTION_146(v46, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
  (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v45, v108);
  OUTLINED_FUNCTION_97((uint64_t)v49, *(uint64_t (**)(uint64_t, _QWORD))(v86 + 8));
  v81 = OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_97(v81, v82);
  v83 = OUTLINED_FUNCTION_135_2();
  OUTLINED_FUNCTION_34_2(v83, v84);
  OUTLINED_FUNCTION_97(a23, *(uint64_t (**)(uint64_t, _QWORD))(v91 + 8));
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.fetchWeather<A, B, C, D, E, F, G>(for:including:_:_:_:_:_:_:options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, _QWORD);
  uint64_t (*v100)(uint64_t, _QWORD);
  uint64_t v101;
  uint64_t (*v102)(uint64_t, _QWORD);
  uint64_t v103;
  uint64_t (*v104)(uint64_t, _QWORD);
  uint64_t v105;
  uint64_t (*v106)(uint64_t, _QWORD);
  _QWORD v107[2];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD v137[12];
  uint64_t v138;
  _QWORD v139[3];

  OUTLINED_FUNCTION_6_2();
  v130 = v30;
  v128 = v31;
  v127 = v32;
  v125 = v33;
  v122 = v34;
  v120 = v35;
  v118 = v36;
  v132 = a21;
  v133 = v37;
  v131 = a22;
  OUTLINED_FUNCTION_96_2(a23);
  v108 = a24;
  v111 = a25;
  v114 = a26;
  v116 = a27;
  v119 = a28;
  v124 = a29;
  v129 = a30;
  v126 = OUTLINED_FUNCTION_22_14(v38, a30, v39, v40);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v126 - 8));
  MEMORY[0x1E0C80A78](v41);
  v121 = (uint64_t)v107 - v42;
  v47 = OUTLINED_FUNCTION_13_24(v43, v44, v45, v46);
  OUTLINED_FUNCTION_78(v47, (uint64_t)&v138);
  OUTLINED_FUNCTION_1_34(v48);
  MEMORY[0x1E0C80A78](v49);
  v137[0] = OUTLINED_FUNCTION_8_24(v51, v52, (uint64_t)v107 - v50);
  v107[0] = *(_QWORD *)(v137[0] - 8);
  v53 = v107[0];
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v54);
  OUTLINED_FUNCTION_45_6();
  v136 = v55;
  v60 = OUTLINED_FUNCTION_23_16(v56, v57, v58, v59);
  v61 = *(_QWORD *)(v60 - 8);
  OUTLINED_FUNCTION_169_0(v60, (uint64_t)&v134);
  v109 = v61;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v62);
  OUTLINED_FUNCTION_45_6();
  v135 = v63;
  v68 = OUTLINED_FUNCTION_12_23(v64, v65, v66, v67);
  v69 = *(_QWORD *)(v68 - 8);
  OUTLINED_FUNCTION_361(v68, (uint64_t)v137);
  v110 = v69;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v70);
  v72 = (char *)v107 - v71;
  v77 = OUTLINED_FUNCTION_10_27(v73, v74, v75, v76);
  v78 = *(_QWORD *)(v77 - 8);
  v112 = v77;
  v113 = v78;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v79);
  v81 = (char *)v107 - v80;
  OUTLINED_FUNCTION_177_0(v82, v83, v84, v85);
  OUTLINED_FUNCTION_174_0();
  OUTLINED_FUNCTION_52_4(v86);
  v115 = v87;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v88);
  v90 = (char *)v107 - v89;
  OUTLINED_FUNCTION_97((uint64_t)v107 - v89, *(uint64_t (**)(uint64_t, _QWORD))(v91 + 16));
  v137[8] = v90;
  OUTLINED_FUNCTION_46_6((uint64_t)v81, *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v78 + 16));
  v137[9] = v81;
  OUTLINED_FUNCTION_315((uint64_t)v72, v122, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 16));
  v137[10] = v72;
  v92 = v135;
  OUTLINED_FUNCTION_49_6(v135, v125, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 16));
  v137[11] = v92;
  v93 = v136;
  OUTLINED_FUNCTION_97(v136, *(uint64_t (**)(uint64_t, _QWORD))(v53 + 16));
  v138 = v93;
  v94 = v117;
  v95 = OUTLINED_FUNCTION_298_0();
  OUTLINED_FUNCTION_49_6(v95, v128, v96);
  v139[0] = v53;
  v97 = v123;
  v98 = v121;
  OUTLINED_FUNCTION_143_0(v121, v130, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v123 + 16));
  v139[1] = v98;
  v137[1] = v108;
  v137[2] = v111;
  v137[3] = v114;
  v137[4] = v116;
  OUTLINED_FUNCTION_304_0((uint64_t)v139);
  v137[7] = v129;
  sub_1A6057E18();
  OUTLINED_FUNCTION_125_0(v98, *(uint64_t (**)(uint64_t, uint64_t))(v97 + 8));
  OUTLINED_FUNCTION_146(v53, *(uint64_t (**)(uint64_t, uint64_t))(v94 + 8));
  OUTLINED_FUNCTION_87();
  v99(v136, v137[0]);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v135, v100);
  v101 = OUTLINED_FUNCTION_135_2();
  OUTLINED_FUNCTION_97(v101, v102);
  v103 = OUTLINED_FUNCTION_200_0();
  OUTLINED_FUNCTION_97(v103, v104);
  v105 = OUTLINED_FUNCTION_201();
  OUTLINED_FUNCTION_97(v105, v106);
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.fetchWeather<A, B, C, D, E, F, G, H>(for:including:_:_:_:_:_:_:_:options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, _QWORD, _QWORD);
  uint64_t v102;
  uint64_t (*v103)(uint64_t, _QWORD);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t, _QWORD);
  uint64_t v113;
  uint64_t (*v114)(uint64_t, _QWORD);
  uint64_t v115;
  uint64_t (*v116)(uint64_t, _QWORD);
  uint64_t v117;
  uint64_t (*v118)(uint64_t, _QWORD);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD v149[2];
  uint64_t v150;
  uint64_t v151;
  _QWORD v152[9];
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;

  OUTLINED_FUNCTION_6_2();
  v147 = v32;
  v144 = v35;
  v141 = v36;
  v140 = v37;
  v136 = v38;
  v134 = v39;
  v132 = v40;
  v130 = v41;
  v146 = v42;
  OUTLINED_FUNCTION_145_2(a23);
  OUTLINED_FUNCTION_180(v43);
  OUTLINED_FUNCTION_146_1(v44);
  v143 = v45;
  v151 = a25;
  v122 = a26;
  v125 = a27;
  v127 = a28;
  v128 = a29;
  v133 = a30;
  v138 = a31;
  v142 = a32;
  v139 = OUTLINED_FUNCTION_22_14(v46, a32, v47, v48);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v139 - 8));
  MEMORY[0x1E0C80A78](v49);
  v135 = (char *)&v119 - v50;
  v55 = OUTLINED_FUNCTION_13_24(v51, v52, v53, v54);
  OUTLINED_FUNCTION_78(v55, (uint64_t)&v153);
  OUTLINED_FUNCTION_1_34(v56);
  MEMORY[0x1E0C80A78](v57);
  v61 = OUTLINED_FUNCTION_15_23(v59, v60, (uint64_t)&v119 - v58);
  v152[0] = *(_QWORD *)(v61 - 8);
  v152[1] = v61;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v62);
  v149[1] = (char *)&v119 - v63;
  v150 = OUTLINED_FUNCTION_11_22(v64, v65, v66, v67);
  v120 = *(_QWORD *)(v150 - 8);
  v68 = v120;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v69);
  v73 = OUTLINED_FUNCTION_19_16(v71, v72, (uint64_t)&v119 - v70);
  v74 = *(_QWORD *)(v73 - 8);
  OUTLINED_FUNCTION_170_0(v73, (uint64_t)&v146);
  v121 = v74;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v75);
  v79 = OUTLINED_FUNCTION_9_23(v77, v78, (uint64_t)&v119 - v76);
  v80 = *(_QWORD *)(v79 - 8);
  OUTLINED_FUNCTION_169_0(v79, (uint64_t)v149);
  v123 = v80;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v81);
  v83 = (char *)&v119 - v82;
  v88 = OUTLINED_FUNCTION_10_27(v84, v85, v86, v87);
  v89 = *(_QWORD *)(v88 - 8);
  OUTLINED_FUNCTION_240_0(v88, (uint64_t)&v150);
  v124 = v89;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v90);
  OUTLINED_FUNCTION_212_0(v91, v92, v93, v94);
  OUTLINED_FUNCTION_174_0();
  OUTLINED_FUNCTION_52_4(v95);
  v126 = v96;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v97);
  OUTLINED_FUNCTION_289_0();
  OUTLINED_FUNCTION_97(v33, *(uint64_t (**)(uint64_t, _QWORD))(v98 + 16));
  v154 = v33;
  OUTLINED_FUNCTION_46_6(v34, *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v89 + 16));
  v155 = v34;
  OUTLINED_FUNCTION_163((uint64_t)v83, v134, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 16));
  v156 = v83;
  v99 = v148;
  OUTLINED_FUNCTION_202(v148, v136, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 16));
  v157 = v99;
  v100 = OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_322(v100, v101);
  v102 = OUTLINED_FUNCTION_277();
  OUTLINED_FUNCTION_97(v102, v103);
  v158 = v99;
  v104 = v131;
  v105 = v129;
  OUTLINED_FUNCTION_315(v129, v144, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v131 + 16));
  v159 = v105;
  v106 = v137;
  v107 = OUTLINED_FUNCTION_365();
  OUTLINED_FUNCTION_53_5(v107, v143, v108);
  v160 = v68;
  v152[2] = v151;
  v152[3] = v122;
  OUTLINED_FUNCTION_309_0((uint64_t)v152);
  v152[6] = v128;
  v152[7] = v133;
  OUTLINED_FUNCTION_294_0();
  v152[8] = v110;
  v153 = v109;
  OUTLINED_FUNCTION_222_0();
  OUTLINED_FUNCTION_55_0(v68, *(uint64_t (**)(uint64_t, uint64_t))(v106 + 8));
  OUTLINED_FUNCTION_36(v105, *(uint64_t (**)(uint64_t, uint64_t))(v104 + 8));
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_202_0((uint64_t)&v145);
  v111 = OUTLINED_FUNCTION_341();
  OUTLINED_FUNCTION_97(v111, v112);
  v113 = OUTLINED_FUNCTION_200_0();
  OUTLINED_FUNCTION_97(v113, v114);
  v115 = OUTLINED_FUNCTION_201();
  OUTLINED_FUNCTION_97(v115, v116);
  v117 = OUTLINED_FUNCTION_267_0();
  OUTLINED_FUNCTION_97(v117, v118);
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.fetchWeather<A, B, C, D, E, F, G, H, I>(for:including:_:_:_:_:_:_:_:_:options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t (*v103)(uint64_t, _QWORD);
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t (*v109)(uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t, _QWORD);
  uint64_t v113;
  uint64_t (*v114)(uint64_t, _QWORD, _QWORD);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t (*v120)(uint64_t, _QWORD);
  uint64_t v121;
  uint64_t (*v122)(uint64_t, _QWORD);
  uint64_t v123;
  uint64_t (*v124)(uint64_t, _QWORD);
  uint64_t v125;
  uint64_t (*v126)(uint64_t, _QWORD);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD v157[3];
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  _QWORD v168[7];

  OUTLINED_FUNCTION_6_2();
  a19 = v35;
  a20 = v36;
  v158 = v34;
  v154 = v37;
  v152 = v38;
  v150 = v39;
  v149 = v40;
  v147 = v41;
  v144 = v42;
  v141 = v43;
  v157[2] = v44;
  OUTLINED_FUNCTION_145_2(a23);
  OUTLINED_FUNCTION_160_0(v45);
  OUTLINED_FUNCTION_214_0(a25);
  OUTLINED_FUNCTION_96_2(v46);
  v47 = a27;
  v131 = a27;
  v135 = a28;
  v137 = a29;
  v140 = a30;
  v48 = a31;
  v142 = a31;
  v148 = a32;
  v151 = a33;
  v155 = a34;
  v52 = OUTLINED_FUNCTION_22_14(v49, a34, v50, v51);
  OUTLINED_FUNCTION_78(v52, (uint64_t)v168);
  OUTLINED_FUNCTION_1_34(v53);
  MEMORY[0x1E0C80A78](v54);
  v146 = OUTLINED_FUNCTION_8_24(v56, v57, (uint64_t)&v127 - v55);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v146 - 8));
  MEMORY[0x1E0C80A78](v58);
  v164 = OUTLINED_FUNCTION_15_23(v60, v61, (uint64_t)&v127 - v59);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v164 - 8));
  MEMORY[0x1E0C80A78](v62);
  v66 = OUTLINED_FUNCTION_74_3(v64, v65, (uint64_t)&v127 - v63);
  v162 = *(_QWORD *)(v66 - 8);
  v163 = v66;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v67);
  v160 = (char *)&v127 - v68;
  v161 = OUTLINED_FUNCTION_10_27(v69, v70, v71, v72);
  v128 = *(_QWORD *)(v161 - 8);
  v73 = v128;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v74);
  v78 = OUTLINED_FUNCTION_9_23(v76, v77, (uint64_t)&v127 - v75);
  v79 = *(_QWORD *)(v78 - 8);
  v129 = v78;
  v130 = v79;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v80);
  v84 = OUTLINED_FUNCTION_19_16(v82, v83, (uint64_t)&v127 - v81);
  v85 = *(_QWORD *)(v84 - 8);
  v133 = v84;
  v134 = v85;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v86);
  OUTLINED_FUNCTION_210_0();
  v132 = v48;
  v91 = OUTLINED_FUNCTION_13_24(v87, v88, v89, v90);
  v92 = *(_QWORD *)(v91 - 8);
  OUTLINED_FUNCTION_274_0(v91, (uint64_t)&v159);
  v136 = v92;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v93);
  v95 = (char *)&v127 - v94;
  v98 = OUTLINED_FUNCTION_54_5(0, v96, v97, (uint64_t)&a18);
  v99 = *(_QWORD *)(v98 - 8);
  v138 = v98;
  v139 = v99;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v100);
  v102 = OUTLINED_FUNCTION_86_2(v101, v127);
  OUTLINED_FUNCTION_97((uint64_t)v102, v103);
  v165 = v47;
  OUTLINED_FUNCTION_258_0();
  OUTLINED_FUNCTION_49_6(v104, v105, v106);
  v166 = v95;
  OUTLINED_FUNCTION_33_9(v48, v147, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 16));
  v167 = v48;
  OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_236_0();
  OUTLINED_FUNCTION_83(v107, v108, v109);
  v168[0] = v85;
  v110 = v159;
  OUTLINED_FUNCTION_20_16(v159, v150, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v73 + 16));
  v168[1] = v110;
  v111 = OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_97(v111, v112);
  v168[2] = v110;
  OUTLINED_FUNCTION_227_0();
  v113 = OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_248_0(v113, v114);
  v168[3] = v110;
  v115 = v145;
  v116 = v143;
  OUTLINED_FUNCTION_53_5(v143, v153, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v145 + 16));
  v168[4] = v116;
  OUTLINED_FUNCTION_250_0();
  v117 = OUTLINED_FUNCTION_354();
  OUTLINED_FUNCTION_49_6(v117, v156, v118);
  v168[5] = v73;
  OUTLINED_FUNCTION_31_10((uint64_t)v157);
  OUTLINED_FUNCTION_222_0();
  OUTLINED_FUNCTION_146(v73, *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8));
  OUTLINED_FUNCTION_55_0(v116, *(uint64_t (**)(uint64_t, uint64_t))(v115 + 8));
  OUTLINED_FUNCTION_336_0(*(uint64_t (**)(_QWORD, _QWORD))(v84 + 8));
  (*(void (**)(char *, uint64_t))(v162 + 8))(v160, v163);
  v119 = OUTLINED_FUNCTION_266_0();
  OUTLINED_FUNCTION_97(v119, v120);
  v121 = OUTLINED_FUNCTION_342();
  OUTLINED_FUNCTION_97(v121, v122);
  OUTLINED_FUNCTION_97(v132, *(uint64_t (**)(uint64_t, _QWORD))(v134 + 8));
  v123 = OUTLINED_FUNCTION_267_0();
  OUTLINED_FUNCTION_97(v123, v124);
  v125 = OUTLINED_FUNCTION_160();
  OUTLINED_FUNCTION_97(v125, v126);
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.fetchWeather<A, B, C, D, E, F, G, H, I, J>(for:including:_:_:_:_:_:_:_:_:_:options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t, _QWORD, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(uint64_t, uint64_t, _QWORD);
  uint64_t v118;
  uint64_t (*v119)(uint64_t, uint64_t, _QWORD);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t, _QWORD, _QWORD);
  uint64_t v124;
  uint64_t (*v125)(uint64_t, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t (*v127)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v128)(uint64_t, _QWORD);
  uint64_t (*v129)(uint64_t, _QWORD);
  uint64_t v130;
  uint64_t (*v131)(uint64_t, _QWORD);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD v176[7];
  uint64_t v177;
  _QWORD v178[11];

  OUTLINED_FUNCTION_6_2();
  a19 = v37;
  a20 = v38;
  v163 = v36;
  v158 = v39;
  v155 = v40;
  v154 = v41;
  v152 = v42;
  v151 = v43;
  v149 = v44;
  v148 = v45;
  v162 = v46;
  OUTLINED_FUNCTION_214_0(a25);
  OUTLINED_FUNCTION_145_2(v47);
  OUTLINED_FUNCTION_215_0(v48);
  OUTLINED_FUNCTION_180(v49);
  OUTLINED_FUNCTION_146_1(v50);
  v157 = v51;
  OUTLINED_FUNCTION_96_2(a27);
  v52 = a28;
  v134 = a28;
  v139 = a29;
  v142 = a30;
  v146 = a31;
  v147 = a32;
  v150 = a33;
  v153 = a34;
  v53 = a35;
  v156 = a35;
  v160 = a36;
  v57 = OUTLINED_FUNCTION_22_14(v54, a36, v55, v56);
  OUTLINED_FUNCTION_78(v57, (uint64_t)v178);
  OUTLINED_FUNCTION_1_34(v58);
  MEMORY[0x1E0C80A78](v59);
  OUTLINED_FUNCTION_45_6();
  v63 = OUTLINED_FUNCTION_74_3(v60, v61, v62);
  OUTLINED_FUNCTION_78(v63, (uint64_t)v176);
  OUTLINED_FUNCTION_1_34(v64);
  MEMORY[0x1E0C80A78](v65);
  OUTLINED_FUNCTION_45_6();
  v173 = OUTLINED_FUNCTION_73_3(v66, v67, v68);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v173 - 8));
  MEMORY[0x1E0C80A78](v69);
  v167 = (char *)&v132 - v70;
  v171 = OUTLINED_FUNCTION_13_24(v71, v72, v73, v74);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v171 - 8));
  MEMORY[0x1E0C80A78](v75);
  v170 = OUTLINED_FUNCTION_19_16(v77, v78, (uint64_t)&v132 - v76);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v170 - 8));
  MEMORY[0x1E0C80A78](v79);
  v168 = OUTLINED_FUNCTION_9_23(v81, v82, (uint64_t)&v132 - v80);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v168 - 8));
  MEMORY[0x1E0C80A78](v83);
  v87 = OUTLINED_FUNCTION_15_23(v85, v86, (uint64_t)&v132 - v84);
  v88 = *(_QWORD *)(v87 - 8);
  v135 = v87;
  v136 = v88;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v89);
  OUTLINED_FUNCTION_210_0();
  v133 = v53;
  v94 = OUTLINED_FUNCTION_10_27(v90, v91, v92, v93);
  v95 = *(_QWORD *)(v94 - 8);
  OUTLINED_FUNCTION_274_0(v94, (uint64_t)&v161);
  v138 = v95;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v96);
  v98 = (char *)&v132 - v97;
  v103 = OUTLINED_FUNCTION_17_17(v99, v100, v101, v102);
  v104 = *(_QWORD *)(v103 - 8);
  OUTLINED_FUNCTION_240_0(v103, (uint64_t)&v162);
  v141 = v104;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v105);
  v107 = (char *)&v132 - v106;
  v140 = (uint64_t)&v132 - v106;
  v110 = OUTLINED_FUNCTION_54_5(0, v108, v109, (uint64_t)&a18);
  v111 = *(_QWORD *)(v110 - 8);
  v143 = v110;
  v144 = v111;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v112);
  OUTLINED_FUNCTION_126_2();
  OUTLINED_FUNCTION_97(v52, *(uint64_t (**)(uint64_t, _QWORD))(v113 + 16));
  v178[0] = v52;
  OUTLINED_FUNCTION_83((uint64_t)v107, v149, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 16));
  v178[1] = v107;
  v114 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v95 + 16);
  v137 = v98;
  OUTLINED_FUNCTION_46_6((uint64_t)v98, v114);
  v178[2] = v98;
  OUTLINED_FUNCTION_143_0(v53, v152, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 16));
  v178[3] = v53;
  OUTLINED_FUNCTION_183_0();
  v115 = OUTLINED_FUNCTION_350();
  OUTLINED_FUNCTION_20_16(v115, v116, v117);
  v178[4] = v104;
  v118 = OUTLINED_FUNCTION_242_0();
  OUTLINED_FUNCTION_20_16(v118, v155, v119);
  v178[5] = v104;
  v120 = v145;
  v121 = v166;
  OUTLINED_FUNCTION_20_16(v166, v158, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v145 + 16));
  v178[6] = v121;
  OUTLINED_FUNCTION_250_0();
  v122 = OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_323_0(v122, v123);
  v178[7] = v121;
  OUTLINED_FUNCTION_320_0();
  v124 = OUTLINED_FUNCTION_235_0();
  OUTLINED_FUNCTION_202(v124, v159, v125);
  v178[8] = v98;
  OUTLINED_FUNCTION_217_0();
  v126 = OUTLINED_FUNCTION_220_0();
  OUTLINED_FUNCTION_149_0(v126, v161, v127);
  v178[9] = v107;
  v174 = v172;
  v175 = v134;
  v176[0] = v139;
  v176[1] = v142;
  OUTLINED_FUNCTION_305((uint64_t)&v167);
  v176[4] = v150;
  v176[5] = v153;
  OUTLINED_FUNCTION_306_0((uint64_t)&v177);
  OUTLINED_FUNCTION_222_0();
  OUTLINED_FUNCTION_34_2((uint64_t)v107, *(uint64_t (**)(uint64_t, uint64_t))(v53 + 8));
  OUTLINED_FUNCTION_154((uint64_t)v98, *(uint64_t (**)(uint64_t, uint64_t))(v103 + 8));
  (*(void (**)(char *, uint64_t))(v87 + 8))(v167, v173);
  OUTLINED_FUNCTION_97(v166, *(uint64_t (**)(uint64_t, _QWORD))(v120 + 8));
  OUTLINED_FUNCTION_97(v165, *(uint64_t (**)(uint64_t, _QWORD))(v169 + 8));
  OUTLINED_FUNCTION_130_1();
  OUTLINED_FUNCTION_97(v164, v128);
  OUTLINED_FUNCTION_97(v133, *(uint64_t (**)(uint64_t, _QWORD))(v136 + 8));
  OUTLINED_FUNCTION_97((uint64_t)v137, *(uint64_t (**)(uint64_t, _QWORD))(v138 + 8));
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v140, v129);
  v130 = OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_97(v130, v131);
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.fetchWeather<A, B, C, D, E, F, G, H, I, J, K, L>(for:including:_:_:_:_:_:_:_:_:_:_:_:options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t (*v125)(uint64_t, _QWORD);
  uint64_t v126;
  uint64_t (*v127)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v128)(uint64_t, uint64_t, _QWORD);
  uint64_t v129;
  uint64_t (*v130)(uint64_t, uint64_t, _QWORD);
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t (*v135)(uint64_t, uint64_t, _QWORD);
  uint64_t v136;
  uint64_t (*v137)(uint64_t, uint64_t, _QWORD);
  uint64_t v138;
  uint64_t v139;
  uint64_t (*v140)(uint64_t, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t (*v143)(uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t (*v146)(uint64_t, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t (*v148)(uint64_t, _QWORD);
  uint64_t v149;
  uint64_t (*v150)(uint64_t, _QWORD);
  uint64_t (*v151)(uint64_t, _QWORD);
  uint64_t v152;
  uint64_t (*v153)(uint64_t, _QWORD);
  uint64_t (*v154)(uint64_t, _QWORD);
  uint64_t (*v155)(uint64_t, _QWORD);
  uint64_t v156;
  uint64_t (*v157)(uint64_t, _QWORD);
  uint64_t v158[3];
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD v185[4];
  _QWORD v186[6];
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;

  OUTLINED_FUNCTION_6_2();
  a19 = v41;
  a20 = v42;
  v187 = v40;
  v183 = v43;
  v180 = v44;
  v178 = v45;
  v176 = v46;
  v174 = v47;
  v173 = v48;
  v170 = v49;
  v186[5] = v50;
  v186[4] = a27;
  OUTLINED_FUNCTION_214_0(a28);
  OUTLINED_FUNCTION_292_0(v51);
  OUTLINED_FUNCTION_145_2(v52);
  OUTLINED_FUNCTION_215_0(v53);
  OUTLINED_FUNCTION_180(v54);
  OUTLINED_FUNCTION_146_1(v55);
  v181 = v56;
  OUTLINED_FUNCTION_239_0(a29);
  v200 = a30;
  v197 = a31;
  v161 = a32;
  v57 = a33;
  v164 = a33;
  v167 = a34;
  v168 = a35;
  v58 = a36;
  v172 = a36;
  v59 = a37;
  v175 = a37;
  v179 = a38;
  v60 = a39;
  v185[1] = a39;
  v186[0] = a40;
  v185[0] = OUTLINED_FUNCTION_22_14(v61, a40, v62, v63);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v185[0] - 8));
  MEMORY[0x1E0C80A78](v64);
  OUTLINED_FUNCTION_45_6();
  v177 = OUTLINED_FUNCTION_8_24(v65, v66, v67);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v177 - 8));
  MEMORY[0x1E0C80A78](v68);
  OUTLINED_FUNCTION_45_6();
  v72 = OUTLINED_FUNCTION_73_3(v69, v70, v71);
  OUTLINED_FUNCTION_78(v72, (uint64_t)&v191);
  OUTLINED_FUNCTION_1_34(v73);
  MEMORY[0x1E0C80A78](v74);
  OUTLINED_FUNCTION_45_6();
  v169 = v75;
  v201 = OUTLINED_FUNCTION_10_27(v76, v77, v78, v79);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v201 - 8));
  MEMORY[0x1E0C80A78](v80);
  v198 = OUTLINED_FUNCTION_9_23(v82, v83, (uint64_t)v158 - v81);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v198 - 8));
  MEMORY[0x1E0C80A78](v84);
  v190 = (char *)v158 - v85;
  v196 = OUTLINED_FUNCTION_13_24(v86, v87, v88, v89);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v196 - 8));
  MEMORY[0x1E0C80A78](v90);
  v194 = OUTLINED_FUNCTION_19_16(v92, v93, (uint64_t)v158 - v91);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v194 - 8));
  MEMORY[0x1E0C80A78](v94);
  v192 = OUTLINED_FUNCTION_15_23(v96, v97, (uint64_t)v158 - v95);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v192 - 8));
  MEMORY[0x1E0C80A78](v98);
  OUTLINED_FUNCTION_126_2();
  v158[0] = v60;
  v103 = OUTLINED_FUNCTION_72_3(v99, v100, v101, v102);
  v104 = *(_QWORD *)(v103 - 8);
  OUTLINED_FUNCTION_240_0(v103, (uint64_t)&v182);
  v158[2] = v104;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v105);
  v107 = OUTLINED_FUNCTION_64((uint64_t)v158 - v106);
  v110 = OUTLINED_FUNCTION_54_5(v107, v108, v109, (uint64_t)&a9);
  v111 = *(_QWORD *)(v110 - 8);
  OUTLINED_FUNCTION_169_0(v110, (uint64_t)v185);
  v160 = v111;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v112);
  OUTLINED_FUNCTION_113_1();
  v159 = v59;
  v115 = OUTLINED_FUNCTION_54_5(0, v113, v114, (uint64_t)&a13);
  v116 = *(_QWORD *)(v115 - 8);
  OUTLINED_FUNCTION_362(v115, (uint64_t)v186);
  v163 = v116;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v117);
  OUTLINED_FUNCTION_175_0();
  v162 = v57;
  OUTLINED_FUNCTION_54_5(0, v118, v119, (uint64_t)&a15);
  OUTLINED_FUNCTION_174_0();
  OUTLINED_FUNCTION_52_4(v120);
  v166 = v121;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v122);
  v124 = OUTLINED_FUNCTION_288_0(v123, v158[0]);
  v165 = v58;
  OUTLINED_FUNCTION_97((uint64_t)v124, v125);
  v211 = v58;
  OUTLINED_FUNCTION_202(v57, v173, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 16));
  v212 = v57;
  OUTLINED_FUNCTION_49_6(v59, v174, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 16));
  v213 = v59;
  v126 = OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_149_0(v126, v176, v127);
  OUTLINED_FUNCTION_326_0();
  OUTLINED_FUNCTION_20_16(v60, v178, v128);
  v214 = v60;
  v129 = OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_20_16(v129, v180, v130);
  v215 = v104;
  v131 = v189;
  OUTLINED_FUNCTION_20_16(v189, v183, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v195 + 16));
  v216 = v131;
  v132 = v190;
  OUTLINED_FUNCTION_317_0();
  OUTLINED_FUNCTION_20_16(v133, v134, v135);
  v217 = v132;
  OUTLINED_FUNCTION_183_0();
  v136 = OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_20_16(v136, v184, v137);
  v218 = v132;
  v138 = v171;
  v139 = OUTLINED_FUNCTION_354();
  OUTLINED_FUNCTION_53_5(v139, v185[2], v140);
  v219 = v60;
  OUTLINED_FUNCTION_250_0();
  OUTLINED_FUNCTION_298_0();
  OUTLINED_FUNCTION_271_0();
  OUTLINED_FUNCTION_33_9(v141, v142, v143);
  v220 = v103;
  OUTLINED_FUNCTION_320_0();
  OUTLINED_FUNCTION_220_0();
  OUTLINED_FUNCTION_258_0();
  OUTLINED_FUNCTION_202(v144, v145, v146);
  v221 = v110;
  v203 = v202;
  OUTLINED_FUNCTION_171_0(v200);
  OUTLINED_FUNCTION_294_0();
  OUTLINED_FUNCTION_96_2(v147);
  v204 = v161;
  v205 = v164;
  v206 = v167;
  v207 = v168;
  v208 = v172;
  v209 = v175;
  OUTLINED_FUNCTION_308_0((uint64_t)&v199);
  v210 = v186[0];
  OUTLINED_FUNCTION_222_0();
  OUTLINED_FUNCTION_154(v110, *(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
  OUTLINED_FUNCTION_375(v103, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
  OUTLINED_FUNCTION_55_0(v60, *(uint64_t (**)(uint64_t, uint64_t))(v138 + 8));
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v191, v148);
  v149 = OUTLINED_FUNCTION_347();
  OUTLINED_FUNCTION_97(v149, v150);
  OUTLINED_FUNCTION_97(v189, *(uint64_t (**)(uint64_t, _QWORD))(v195 + 8));
  OUTLINED_FUNCTION_97(v188, *(uint64_t (**)(uint64_t, _QWORD))(v193 + 8));
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v158[0], v151);
  v152 = OUTLINED_FUNCTION_345();
  OUTLINED_FUNCTION_97(v152, v153);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v159, v154);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v162, v155);
  v156 = OUTLINED_FUNCTION_344();
  OUTLINED_FUNCTION_97(v156, v157);
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.fetchWeather<each A>(for:including:options:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  _QWORD *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  OUTLINED_FUNCTION_6_2();
  v5 = v4;
  v7 = v6;
  v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFELL);
  v10 = 8 * v4;
  v41 = v8;
  v39 = v3;
  v40 = v11;
  v37 = v1;
  v38 = v2;
  if (v4 == 1)
  {
    v12 = OUTLINED_FUNCTION_22_14(v1, *v9, v2, v3);
  }
  else
  {
    MEMORY[0x1E0C80A78](v1);
    if (v5)
    {
      v16 = v9;
      v17 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
      v18 = v5;
      do
      {
        v19 = *v16++;
        v13 = OUTLINED_FUNCTION_280_0(v13, v19, v14, v15);
        *v17++ = v13;
        --v18;
      }
      while (v18);
    }
    v12 = OUTLINED_FUNCTION_28_0();
  }
  v42 = v12;
  v36 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_273_0();
  v35[1] = v35;
  MEMORY[0x1E0C80A78](v21);
  if (v5)
  {
    v25 = (int *)(v42 + 32);
    v26 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    v27 = v5;
    do
    {
      if (v5 == 1)
        v28 = 0;
      else
        v28 = *v25;
      v30 = *v9++;
      v29 = v30;
      v31 = v0 + v28;
      v32 = *v7++;
      OUTLINED_FUNCTION_22_14(v22, v29, v23, v24);
      v33 = OUTLINED_FUNCTION_356();
      v22 = v34(v33, v32);
      *v26++ = v31;
      v25 += 4;
      --v27;
    }
    while (v27);
  }
  sub_1A6057E18();
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v0, v42);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A605AB48(uint64_t a1, uint64_t a2, void *a3)
{
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  objc_msgSend(a3, sel_coordinate);
  return sub_1A61226C0();
}

uint64_t sub_1A605ABD0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5FA006C(*a1, a3, a4);
}

uint64_t sub_1A605AC04(uint64_t a1, uint64_t a2, _QWORD *a3, void *a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t TupleTypeMetadata;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int *v52;
  _QWORD *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  NSObject *v60;
  NSObject *v61;
  os_log_type_t v62;
  int v63;
  uint64_t v64;
  NSObject *v65;
  NSObject *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  int *v81;
  char *v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  int *v89;
  int v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  NSObject *v110;
  NSObject *v111;
  os_log_type_t v112;
  uint64_t v113;
  _QWORD *v114;
  NSObject *v115;
  void (*v116)(uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  void (*v124)(uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  NSObject *v127;
  uint64_t *v128;
  int v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(uint64_t);
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  int *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t *v146;
  uint64_t *v147;
  uint64_t *v148;
  uint64_t *v149;
  uint64_t *v150;
  uint64_t *v151;
  uint64_t *v152;
  char *v153;
  uint64_t v154;
  _QWORD *v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unsigned __int16 v169;
  char v170;
  char v171;

  v133 = a7;
  v155 = a3;
  v156 = a4;
  v157 = a1;
  v158 = a2;
  v141 = a9;
  v12 = 8 * a8;
  if (a8 == 1)
  {
    TupleTypeMetadata = swift_checkMetadataState();
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    if (a8)
    {
      v14 = (uint64_t *)(a9 & 0xFFFFFFFFFFFFFFFELL);
      v15 = (uint64_t *)((char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      v16 = a8;
      do
      {
        v17 = *v14++;
        *v15++ = v17;
        --v16;
      }
      while (v16);
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  v134 = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED193C90);
  v18 = &v126;
  v132 = sub_1A6123DB8();
  v131 = *(_QWORD *)(v132 - 8);
  MEMORY[0x1E0C80A78](v132);
  v130 = (char *)&v126 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192858);
  v152 = &v126;
  v21 = MEMORY[0x1E0C80A78](v20);
  v144 = (uint64_t)&v126 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = v12;
  v163 = a9 & 0xFFFFFFFFFFFFFFFELL;
  if (a8 == 1)
  {
    v25 = type metadata accessor for WeatherQuery(0, *(_QWORD *)(a9 & 0xFFFFFFFFFFFFFFFELL), v22, v23);
  }
  else
  {
    v26 = TupleTypeMetadata;
    MEMORY[0x1E0C80A78](v21);
    v29 = (uint64_t *)((char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    if (a8)
    {
      v30 = (uint64_t *)v163;
      v31 = v29;
      v32 = a8;
      do
      {
        v33 = *v30++;
        *v31++ = type metadata accessor for WeatherQuery(255, v33, v27, v28);
        --v32;
      }
      while (v32);
    }
    v25 = swift_getTupleTypeMetadata();
    TupleTypeMetadata = v26;
  }
  v34 = v25;
  v138 = *(_QWORD *)(v25 - 8);
  v35 = MEMORY[0x1E0C80A78](v25);
  v164 = (char *)&v126 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = &v126;
  v136 = *(_QWORD *)(TupleTypeMetadata - 8);
  v37 = MEMORY[0x1E0C80A78](v35);
  v135 = (char *)&v126 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = &v126;
  MEMORY[0x1E0C80A78](v37);
  v139 = (char *)&v126 - v39;
  v40 = _s24WeatherProductsContainerVMa();
  v149 = &v126;
  v140 = (int *)v40;
  MEMORY[0x1E0C80A78](v40);
  v162 = (uint64_t)&v126 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C38);
  v148 = &v126;
  v154 = v42;
  MEMORY[0x1E0C80A78](v42);
  v153 = (char *)&v126 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192878);
  v147 = &v126;
  MEMORY[0x1E0C80A78](v44);
  v160 = (uint64_t)&v126 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1A6121F58();
  v146 = &v126;
  v47 = *(_QWORD *)(v46 - 8);
  v48 = MEMORY[0x1E0C80A78](v46);
  v50 = (char *)&v126 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = &v126;
  MEMORY[0x1E0C80A78](v48);
  v165 = (char *)&v126 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a8)
  {
    v52 = (int *)(v34 + 32);
    v53 = v165;
    v54 = a8;
    do
    {
      if (a8 == 1)
        v55 = 0;
      else
        v55 = *v52;
      *v53++ = a5 + v55;
      v52 += 4;
      --v54;
    }
    while (v54);
  }
  v137 = TupleTypeMetadata;
  v142 = v34;
  sub_1A6121F4C();
  sub_1A6121E5C();
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v46);
  if (qword_1ED193BE8 != -1)
    swift_once();
  v58 = sub_1A612356C();
  v59 = (void *)__swift_project_value_buffer(v58, (uint64_t)qword_1ED19DB18);
  v60 = v156;
  v156 = v59;
  v61 = sub_1A6123554();
  v62 = sub_1A6123A4C();
  v63 = v62;
  if (os_log_type_enabled(v61, v62))
  {
    v64 = swift_slowAlloc();
    v155 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v64 = 141558531;
    v168 = 1752392040;
    v143 = &v126;
    sub_1A6123A88();
    *(_WORD *)(v64 + 12) = 2113;
    v168 = (uint64_t)v60;
    v65 = v60;
    v129 = v63;
    v66 = v65;
    sub_1A6123A88();
    v67 = v155;
    *v155 = v60;

    *(_WORD *)(v64 + 22) = 2050;
    v168 = v57;
    v18 = v143;
    sub_1A6123A88();
    _os_log_impl(&dword_1A5F87000, v61, (os_log_type_t)v129, "Got response for fetch of weather data + corresponding AQI scale; location=%{private,mask.hash}@, duration=%{public}f",
      (uint8_t *)v64,
      0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v67, -1, -1);
    MEMORY[0x1A85BB42C](v64, -1, -1);
  }
  else
  {

    v61 = v60;
  }
  v68 = v162;
  v69 = v160;

  v70 = *(int *)(v154 + 48);
  v71 = (uint64_t)&v153[v70];
  sub_1A606D5B0(v157 + v70, (uint64_t)&v153[v70], &qword_1ED192878);
  sub_1A606D5E0(v71, v69, &qword_1ED192878);
  v72 = swift_bridgeObjectRetain();
  v73 = v159;
  sub_1A5F974FC(v72, (uint64_t)v60, v69, v68);
  if (v73)
  {
    sub_1A5FAFD58(v69, &qword_1ED192878);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v159 = 0;
    v75 = swift_bridgeObjectRelease();
    v76 = MEMORY[0x1E0C80A78](v75);
    v78 = (char *)&v126 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
    v143 = v18;
    v128 = &v126;
    v127 = v60;
    v153 = v79;
    if (a8)
    {
      v80 = 0;
      v81 = (int *)(v137 + 32);
      v82 = v139;
      do
      {
        if (a8 == 1)
          v83 = 0;
        else
          v83 = *v81;
        *(_QWORD *)&v78[8 * v80++] = &v82[v83];
        v81 += 4;
      }
      while (a8 != v80);
      MEMORY[0x1E0C80A78](v76);
      v87 = (char *)&v126 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
      v88 = 0;
      v89 = (int *)(v142 + 32);
      do
      {
        if (a8 == 1)
          v90 = 0;
        else
          v90 = *v89;
        v91 = *(_QWORD *)&v165[8 * v88];
        v92 = &v164[v90];
        v93 = type metadata accessor for WeatherQuery(0, *(_QWORD *)(v163 + 8 * v88), v84, v85);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v92, v91, v93);
        *(_QWORD *)&v87[8 * v88++] = v92;
        v89 += 4;
      }
      while (a8 != v88);
    }
    else
    {
      v87 = &v171;
    }
    v165 = (char *)type metadata accessor for WeatherService();
    v94 = type metadata accessor for InstantWeather();
    __swift_storeEnumTagSinglePayload(v144, 1, 1, v94);
    v95 = v140[6];
    v96 = v162;
    v161 = v162 + v140[5];
    v163 = v162 + v95;
    v97 = v140[8];
    v158 = v162 + v140[7];
    v98 = v140[9];
    v99 = *(_QWORD **)(v162 + v140[10]);
    v157 = v162 + v97;
    v155 = (_QWORD *)(v162 + v98);
    v100 = v162 + v140[11];
    LOWORD(v97) = *(_WORD *)v100;
    v170 = *(_BYTE *)(v100 + 2);
    v169 = v97;
    v101 = v140[15];
    v102 = *(_QWORD *)(v162 + v140[16]);
    v103 = v140[17];
    v154 = v162 + v140[18];
    v104 = v162 + v140[20];
    v105 = v162 + v103;
    v106 = v162 + v101;
    v167 = *(_QWORD *)(v162 + v140[19]);
    v168 = v102;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v125 = v104;
    v107 = (uint64_t)v87;
    v108 = v144;
    v109 = v159;
    sub_1A603B0B0(v107, v96, v144, 0, v161, v163, v158, v99, (uint64_t)v78, v157, (uint64_t)v155, &v169, &v168, v154, &v167, v125, v105, v106, a8,
      v141);
    if (v109)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5FAFD58(v108, &qword_1ED192858);
      sub_1A5FA1740(v96, (uint64_t (*)(_QWORD))_s24WeatherProductsContainerVMa);
      sub_1A5FAFD58(v160, &qword_1ED192878);
      return (*(uint64_t (**)(char *, uint64_t))(v138 + 8))(v164, v142);
    }
    else
    {
      v159 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5FAFD58(v108, &qword_1ED192858);
      (*(void (**)(char *, uint64_t))(v138 + 8))(v164, v142);
      v110 = v127;
      v111 = sub_1A6123554();
      v112 = sub_1A6123A4C();
      if (os_log_type_enabled(v111, v112))
      {
        v113 = swift_slowAlloc();
        v114 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v113 = 141558275;
        v166 = 1752392040;
        sub_1A6123A88();
        *(_WORD *)(v113 + 12) = 2113;
        v166 = (uint64_t)v110;
        v115 = v110;
        sub_1A6123A88();
        *v114 = v110;

        _os_log_impl(&dword_1A5F87000, v111, v112, "Successfully created product tuple; location=%{private,mask.hash}@",
          (uint8_t *)v113,
          0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
        swift_arrayDestroy();
        MEMORY[0x1A85BB42C](v114, -1, -1);
        MEMORY[0x1A85BB42C](v113, -1, -1);
      }
      else
      {

        v111 = v110;
      }
      v116 = v134;
      v117 = v137;
      v118 = v132;
      v119 = v131;
      v120 = (uint64_t)v130;

      v121 = v136;
      v122 = (uint64_t)v135;
      v123 = v139;
      (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v135, v139, v117);
      sub_1A60578A8(v122, v117, v120);
      v124 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
      v124(v122, v117);
      v116(v120);
      (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v120, v118);
      sub_1A5FA1740(v162, (uint64_t (*)(_QWORD))_s24WeatherProductsContainerVMa);
      sub_1A5FAFD58(v160, &qword_1ED192878);
      return ((uint64_t (*)(char *, uint64_t))v124)(v123, v117);
    }
  }
}

uint64_t sub_1A605B928(void *a1, void *a2, void (*a3)(_QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  _BYTE v44[4];
  int v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD);
  uint64_t v51;
  uint64_t v52;

  if (a5 == 1)
  {
    swift_checkMetadataState();
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
    if (v8)
    {
      v12 = &v44[-v11];
      v13 = v8;
      do
      {
        v14 = *v9++;
        *v12++ = v14;
        --v13;
      }
      while (v13);
    }
    swift_getTupleTypeMetadata();
  }
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED193C90);
  v15 = sub_1A6123DB8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = &v44[-v17];
  if (qword_1ED193BE8 != -1)
    swift_once();
  v19 = sub_1A612356C();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED19DB18);
  v20 = a1;
  v21 = a1;
  v22 = a1;
  v23 = a2;
  v24 = a1;
  v25 = v23;
  v26 = sub_1A6123554();
  v27 = sub_1A6123A40();
  v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v29 = swift_slowAlloc();
    v48 = v16;
    v30 = v29;
    v31 = swift_slowAlloc();
    v46 = v26;
    v32 = (_QWORD *)v31;
    v33 = swift_slowAlloc();
    v47 = v33;
    *(_DWORD *)v30 = 141558787;
    v51 = 1752392040;
    v52 = v33;
    v49 = v15;
    sub_1A6123A88();
    *(_WORD *)(v30 + 12) = 2113;
    v45 = v28;
    v50 = a3;
    v51 = (uint64_t)v25;
    v34 = v25;
    sub_1A6123A88();
    *v32 = v25;

    *(_WORD *)(v30 + 22) = 2082;
    swift_getErrorValue();
    v35 = sub_1A6123D28();
    v51 = sub_1A5FBE7E0(v35, v36, &v52);
    sub_1A6123A88();
    swift_bridgeObjectRelease();

    *(_WORD *)(v30 + 32) = 2112;
    v37 = a1;
    v38 = _swift_stdlib_bridgeErrorToNSError();
    v51 = v38;
    v15 = v49;
    sub_1A6123A88();
    v32[1] = v38;
    a3 = v50;

    v39 = v46;
    _os_log_impl(&dword_1A5F87000, v46, (os_log_type_t)v45, "Encountered an error when fetching weather data subset; location=%{private,mask.hash}@,  error=%{public}s %@",
      (uint8_t *)v30,
      0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v32, -1, -1);
    v40 = v47;
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v40, -1, -1);
    v41 = v30;
    v16 = v48;
    MEMORY[0x1A85BB42C](v41, -1, -1);

  }
  else
  {

  }
  *v18 = a1;
  swift_storeEnumTagMultiPayload();
  v42 = a1;
  a3(v18);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_1A605BD48(_QWORD *a1, char a2, uint64_t a3, void *a4, void (*a5)(_QWORD *), uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  id v70;
  id v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  NSObject *v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  _QWORD *v91;
  NSObject *v92;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(_QWORD *);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unsigned __int16 v119;
  char v120;
  uint64_t v121;
  char *v122;

  v110 = a6;
  v111 = a5;
  v107 = a4;
  v100 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED193C90);
  v112 = sub_1A6123DB8();
  v109 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v108 = (char **)((char *)&v97 - v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194058);
  MEMORY[0x1E0C80A78](v11);
  v106 = (uint64_t)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192930);
  MEMORY[0x1E0C80A78](v13);
  v105 = (uint64_t)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1936F8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v97 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v97 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192858);
  MEMORY[0x1E0C80A78](v36);
  v114 = (uint64_t)&v97 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
  MEMORY[0x1E0C80A78](v38);
  v113 = (uint64_t)&v97 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for WeatherQuery(0, a7, v40, v41);
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v102 = (char *)&v97 - v42;
  v101 = a7;
  MEMORY[0x1E0C80A78](v43);
  v46 = (char *)&v97 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v68 = a1;
    if (qword_1ED193BE8 != -1)
      swift_once();
    v69 = sub_1A612356C();
    __swift_project_value_buffer(v69, (uint64_t)qword_1ED19DB18);
    sub_1A606D220(a1, 1);
    sub_1A606D220(a1, 1);
    v70 = v107;
    sub_1A606D220(a1, 1);
    v71 = v70;
    sub_1A606D220(a1, 1);
    v72 = sub_1A6123554();
    v73 = sub_1A6123A40();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = swift_slowAlloc();
      v75 = (_QWORD *)swift_slowAlloc();
      v76 = swift_slowAlloc();
      v114 = v76;
      *(_DWORD *)v74 = 141558787;
      v121 = 1752392040;
      v122 = (char *)v76;
      sub_1A6123A88();
      *(_WORD *)(v74 + 12) = 2113;
      v121 = (uint64_t)v71;
      v77 = v71;
      sub_1A6123A88();
      *v75 = v71;

      *(_WORD *)(v74 + 22) = 2082;
      swift_getErrorValue();
      v78 = sub_1A6123D28();
      v121 = sub_1A5FBE7E0(v78, v79, (uint64_t *)&v122);
      sub_1A6123A88();
      swift_bridgeObjectRelease();
      sub_1A606D22C(a1, 1);
      sub_1A606D22C(a1, 1);
      *(_WORD *)(v74 + 32) = 2112;
      v80 = a1;
      v81 = _swift_stdlib_bridgeErrorToNSError();
      v121 = v81;
      sub_1A6123A88();
      v75[1] = v81;
      sub_1A606D22C(a1, 1);
      sub_1A606D22C(a1, 1);
      _os_log_impl(&dword_1A5F87000, v72, v73, "Encountered an error when fetching weather data subset; location=%{private,mask.hash}@,  error=%{public}s %@",
        (uint8_t *)v74,
        0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
      swift_arrayDestroy();
      MEMORY[0x1A85BB42C](v75, -1, -1);
      v82 = v114;
      swift_arrayDestroy();
      MEMORY[0x1A85BB42C](v82, -1, -1);
      MEMORY[0x1A85BB42C](v74, -1, -1);
    }
    else
    {

      sub_1A606D22C(a1, 1);
      sub_1A606D22C(a1, 1);

    }
    v83 = v108;
    *v108 = a1;
    v84 = v112;
    swift_storeEnumTagMultiPayload();
    v85 = a1;
    v111(v83);
    sub_1A606D22C(a1, 1);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(v109 + 8))(v83, v84);
  }
  else
  {
    v98 = v44;
    v122 = v46;
    v97 = v46;
    v99 = type metadata accessor for WeatherService();
    v47 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v102, v100, v104);
    v121 = (uint64_t)v47;
    v48 = type metadata accessor for CurrentWeather();
    __swift_storeEnumTagSinglePayload(v113, 1, 1, v48);
    v49 = type metadata accessor for InstantWeather();
    __swift_storeEnumTagSinglePayload(v114, 1, 1, v49);
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
    __swift_storeEnumTagSinglePayload((uint64_t)v35, 1, 1, v50);
    v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 1, 1, v51);
    v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
    __swift_storeEnumTagSinglePayload((uint64_t)v29, 1, 1, v52);
    v53 = type metadata accessor for AirQuality();
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 1, 1, v53);
    v54 = type metadata accessor for WeatherChanges();
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 1, 1, v54);
    v120 = 0;
    v119 = 4;
    v118 = 0;
    v55 = type metadata accessor for HistoricalComparisons();
    __swift_storeEnumTagSinglePayload((uint64_t)v20, 1, 1, v55);
    v117 = 0;
    v56 = type metadata accessor for LocationInfo();
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 1, 1, v56);
    v57 = type metadata accessor for TideEvents();
    v58 = (uint64_t)v35;
    v59 = (uint64_t)v32;
    v60 = (uint64_t)v29;
    v61 = (uint64_t)v26;
    v62 = (uint64_t)v23;
    v63 = (uint64_t)v20;
    v64 = (uint64_t)v17;
    v65 = v105;
    __swift_storeEnumTagSinglePayload(v105, 1, 1, v57);
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194050);
    v67 = v106;
    __swift_storeEnumTagSinglePayload(v106, 1, 1, v66);
    v116 = v101;
    sub_1A603B0B0((uint64_t)&v121, v113, v114, a1, v58, v59, v60, 0, (uint64_t)&v122, v61, v62, &v119, &v118, v63, &v117, v64, v65, v67, 1,
      (uint64_t)&v116);
    sub_1A5FAFD58(v106, &qword_1ED194058);
    sub_1A5FAFD58(v105, &qword_1ED192930);
    sub_1A5FAFD58(v64, &qword_1ED1936F8);
    sub_1A5FAFD58(v63, &qword_1ED194020);
    sub_1A5FAFD58(v62, &qword_1ED193FF0);
    sub_1A5FAFD58(v61, &qword_1ED193508);
    sub_1A5FAFD58(v60, &qword_1ED193AA0);
    sub_1A5FAFD58(v59, &qword_1ED193AC8);
    sub_1A5FAFD58(v58, &qword_1ED192870);
    sub_1A5FAFD58(v114, &qword_1ED192858);
    sub_1A5FAFD58(v113, &qword_1ED192D38);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v102, v104);
    if (qword_1ED193BE8 != -1)
      swift_once();
    v86 = sub_1A612356C();
    __swift_project_value_buffer(v86, (uint64_t)qword_1ED19DB18);
    v87 = v107;
    v88 = sub_1A6123554();
    v89 = sub_1A6123A4C();
    if (os_log_type_enabled(v88, v89))
    {
      v90 = swift_slowAlloc();
      v91 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v90 = 141558275;
      v115 = 1752392040;
      sub_1A6123A88();
      *(_WORD *)(v90 + 12) = 2113;
      v115 = (uint64_t)v87;
      v92 = v87;
      sub_1A6123A88();
      *v91 = v87;

      _os_log_impl(&dword_1A5F87000, v88, v89, "Successfully created product tuple; location=%{private,mask.hash}@",
        (uint8_t *)v90,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
      swift_arrayDestroy();
      MEMORY[0x1A85BB42C](v91, -1, -1);
      MEMORY[0x1A85BB42C](v90, -1, -1);
    }
    else
    {

      v88 = v87;
    }
    v94 = v101;

    v95 = v108;
    v96 = (uint64_t)v97;
    sub_1A60578A8((uint64_t)v97, v94, (uint64_t)v108);
    v111(v95);
    (*(void (**)(_QWORD *, uint64_t))(v109 + 8))(v95, v112);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 8))(v96, v94);
  }
}

uint64_t sub_1A605CD28(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void (*v10)(_QWORD *);
  uint64_t v11;

  v6 = a2 & 1;
  v7 = *(_QWORD *)(v4 + 16);
  OUTLINED_FUNCTION_17_17((uint64_t)a1, a2, a3, a4);
  OUTLINED_FUNCTION_107_1();
  return sub_1A605BD48(a1, v6, v8, v9, v10, v11, v7);
}

void WeatherService.fetchInstantWeather(for:spanning:stride:with:completion:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_6_2();
  v22[0] = v2;
  v22[1] = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v22[2] = *v0;
  v10 = sub_1A6122720();
  v11 = *(_QWORD *)(v10 - 8);
  v23 = v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = OUTLINED_FUNCTION_291_0();
  v24 = *(_QWORD *)(v14 - 8);
  v25 = v14;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_54_0();
  v16 = *v7;
  LODWORD(v7) = *((unsigned __int8 *)v7 + 8);
  sub_1A605E320(v5, v1);
  *v13 = v16;
  v17 = (unsigned int *)MEMORY[0x1E0DC98D8];
  if (!(_DWORD)v7)
    v17 = (unsigned int *)MEMORY[0x1E0DC98D0];
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *v17, v10);
  v26 = v0;
  v27 = v22[0];
  v28 = v13;
  v29 = v9;
  v30 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190F48);
  sub_1A612224C();
  v18 = (_QWORD *)OUTLINED_FUNCTION_65_5();
  OUTLINED_FUNCTION_363(v18);
  OUTLINED_FUNCTION_53_0();
  v19 = (void *)sub_1A61221E0();
  sub_1A6122210();
  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_7_10();

  v20 = (_QWORD *)OUTLINED_FUNCTION_65_5();
  OUTLINED_FUNCTION_363(v20);
  OUTLINED_FUNCTION_53_0();
  v21 = (void *)sub_1A61221E0();
  sub_1A612221C();
  swift_release();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_6_6();

  OUTLINED_FUNCTION_34_2((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  OUTLINED_FUNCTION_352(v24);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A605CF48(uint64_t a1, uint64_t a2, void *a3, void (*a4)(_QWORD *), uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void **v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  uint64_t v62;
  id v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  id v90;
  uint64_t v92;
  NSObject *v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  _QWORD *v97;
  NSObject *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(_QWORD *);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned __int16 v132;
  char v133;
  uint64_t v134;
  char *v135;

  v125 = a5;
  v126 = a4;
  v122 = a3;
  v110 = (char *)a2;
  v112 = (char *)a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED193C90);
  v127 = sub_1A6123DB8();
  v124 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v123 = (uint64_t *)((char *)&v104 - v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194058);
  MEMORY[0x1E0C80A78](v8);
  v109 = (uint64_t)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192930);
  MEMORY[0x1E0C80A78](v10);
  v121 = (uint64_t)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1936F8);
  MEMORY[0x1E0C80A78](v12);
  v120 = (uint64_t)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
  MEMORY[0x1E0C80A78](v14);
  v119 = (uint64_t)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
  MEMORY[0x1E0C80A78](v16);
  v118 = (uint64_t)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  MEMORY[0x1E0C80A78](v18);
  v117 = (uint64_t)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  MEMORY[0x1E0C80A78](v26);
  v116 = (uint64_t)&v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192858);
  MEMORY[0x1E0C80A78](v28);
  v115 = (uint64_t)&v104 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for WeatherQuery(0, a6, v33, v34);
  v114 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v113 = (char *)&v104 - v36;
  v108 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v37);
  v111 = (char *)&v104 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for InstantWeather();
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v104 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE815668);
  MEMORY[0x1E0C80A78](v42);
  v44 = (void **)((char *)&v104 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A606D5B0((uint64_t)v112, (uint64_t)v44, qword_1EE815668);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v45 = *v44;
    if (qword_1ED193BE8 != -1)
      swift_once();
    v46 = sub_1A612356C();
    __swift_project_value_buffer(v46, (uint64_t)qword_1ED19DB18);
    v47 = v45;
    v48 = v45;
    v49 = v122;
    v50 = v45;
    v51 = v49;
    v52 = v45;
    v53 = sub_1A6123554();
    v54 = sub_1A6123A40();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = swift_slowAlloc();
      v56 = (_QWORD *)swift_slowAlloc();
      v57 = (char *)swift_slowAlloc();
      v122 = v57;
      *(_DWORD *)v55 = 141558787;
      v134 = 1752392040;
      v135 = v57;
      sub_1A6123A88();
      *(_WORD *)(v55 + 12) = 2113;
      v134 = (uint64_t)v51;
      v58 = v51;
      sub_1A6123A88();
      *v56 = v51;

      *(_WORD *)(v55 + 22) = 2082;
      swift_getErrorValue();
      v59 = sub_1A6123D28();
      v134 = sub_1A5FBE7E0(v59, v60, (uint64_t *)&v135);
      sub_1A6123A88();
      swift_bridgeObjectRelease();

      *(_WORD *)(v55 + 32) = 2112;
      v61 = v45;
      v62 = _swift_stdlib_bridgeErrorToNSError();
      v134 = v62;
      sub_1A6123A88();
      v56[1] = v62;

      _os_log_impl(&dword_1A5F87000, v53, v54, "Encountered an error when fetching weather data subset; location=%{private,mask.hash}@,  error=%{public}s %@",
        (uint8_t *)v55,
        0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
      swift_arrayDestroy();
      MEMORY[0x1A85BB42C](v56, -1, -1);
      v63 = v122;
      swift_arrayDestroy();
      MEMORY[0x1A85BB42C](v63, -1, -1);
      MEMORY[0x1A85BB42C](v55, -1, -1);
    }
    else
    {

    }
    v88 = v123;
    *v123 = v45;
    v89 = v127;
    swift_storeEnumTagMultiPayload();
    v90 = v45;
    v126(v88);

    return (*(uint64_t (**)(_QWORD *, uint64_t))(v124 + 8))(v88, v89);
  }
  else
  {
    sub_1A5F9FFD4((uint64_t)v44, (uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for InstantWeather);
    v135 = v111;
    v106 = type metadata accessor for WeatherService();
    v64 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
    v65 = v113;
    v107 = v35;
    v64(v113, v110, v35);
    v134 = (uint64_t)v65;
    v66 = type metadata accessor for CurrentWeather();
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 1, 1, v66);
    v112 = v41;
    v105 = v32;
    v67 = v115;
    sub_1A5FC56D4((uint64_t)v41, v115, (uint64_t (*)(_QWORD))type metadata accessor for InstantWeather);
    __swift_storeEnumTagSinglePayload(v67, 0, 1, v39);
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
    v69 = v116;
    __swift_storeEnumTagSinglePayload(v116, 1, 1, v68);
    v70 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
    __swift_storeEnumTagSinglePayload((uint64_t)v25, 1, 1, v70);
    v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
    __swift_storeEnumTagSinglePayload((uint64_t)v22, 1, 1, v71);
    v72 = type metadata accessor for AirQuality();
    v110 = v25;
    v73 = v22;
    v74 = v117;
    __swift_storeEnumTagSinglePayload(v117, 1, 1, v72);
    v75 = type metadata accessor for WeatherChanges();
    v76 = v118;
    __swift_storeEnumTagSinglePayload(v118, 1, 1, v75);
    v133 = 0;
    v132 = 4;
    v131 = 0;
    v77 = type metadata accessor for HistoricalComparisons();
    v78 = v119;
    __swift_storeEnumTagSinglePayload(v119, 1, 1, v77);
    v130 = 0;
    v79 = type metadata accessor for LocationInfo();
    v80 = v120;
    __swift_storeEnumTagSinglePayload(v120, 1, 1, v79);
    v81 = type metadata accessor for TideEvents();
    v82 = v121;
    __swift_storeEnumTagSinglePayload(v121, 1, 1, v81);
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194050);
    v84 = v109;
    __swift_storeEnumTagSinglePayload(v109, 1, 1, v83);
    v129 = a6;
    v103 = v78;
    v102 = v74;
    v85 = (uint64_t)v73;
    v86 = (uint64_t)v110;
    v87 = (uint64_t)v105;
    sub_1A603B0B0((uint64_t)&v134, (uint64_t)v105, v67, 0, v69, (uint64_t)v110, v85, 0, (uint64_t)&v135, v102, v76, &v132, &v131, v103, &v130, v80, v82, v84, 1,
      (uint64_t)&v129);
    sub_1A5FAFD58(v84, &qword_1ED194058);
    sub_1A5FAFD58(v121, &qword_1ED192930);
    sub_1A5FAFD58(v120, &qword_1ED1936F8);
    sub_1A5FAFD58(v119, &qword_1ED194020);
    sub_1A5FAFD58(v118, &qword_1ED193FF0);
    sub_1A5FAFD58(v117, &qword_1ED193508);
    sub_1A5FAFD58(v85, &qword_1ED193AA0);
    sub_1A5FAFD58(v86, &qword_1ED193AC8);
    sub_1A5FAFD58(v116, &qword_1ED192870);
    sub_1A5FAFD58(v115, &qword_1ED192858);
    sub_1A5FAFD58(v87, &qword_1ED192D38);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v107);
    if (qword_1ED193BE8 != -1)
      swift_once();
    v92 = sub_1A612356C();
    __swift_project_value_buffer(v92, (uint64_t)qword_1ED19DB18);
    v93 = v122;
    v94 = sub_1A6123554();
    v95 = sub_1A6123A4C();
    if (os_log_type_enabled(v94, v95))
    {
      v96 = swift_slowAlloc();
      v97 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v96 = 141558275;
      v128 = 1752392040;
      sub_1A6123A88();
      *(_WORD *)(v96 + 12) = 2113;
      v128 = (uint64_t)v93;
      v98 = v93;
      sub_1A6123A88();
      *v97 = v93;

      _os_log_impl(&dword_1A5F87000, v94, v95, "Successfully created product tuple; location=%{private,mask.hash}@",
        (uint8_t *)v96,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
      swift_arrayDestroy();
      MEMORY[0x1A85BB42C](v97, -1, -1);
      MEMORY[0x1A85BB42C](v96, -1, -1);
    }
    else
    {

      v94 = v93;
    }
    v99 = (uint64_t)v112;
    v100 = (uint64_t)v111;

    v101 = v123;
    sub_1A60578A8(v100, a6, (uint64_t)v123);
    v126(v101);
    (*(void (**)(_QWORD *, uint64_t))(v124 + 8))(v101, v127);
    sub_1A5FA1740(v99, (uint64_t (*)(_QWORD))type metadata accessor for InstantWeather);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v108 + 8))(v100, a6);
  }
}

uint64_t objectdestroy_5Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t Options;

  v6 = OUTLINED_FUNCTION_22_14(a1, *(_QWORD *)(v5 + 16), a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = v5 + v8;
  v11 = OUTLINED_FUNCTION_179();
  if (!OUTLINED_FUNCTION_231_0(v11))
    OUTLINED_FUNCTION_36(v5 + v8, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8));
  v12 = v10 + *(int *)(v6 + 28);
  if (!__swift_getEnumTagSinglePayload(v12, 1, v4))
    OUTLINED_FUNCTION_36(v12, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8));
  v13 = v10 + *(int *)(v6 + 44);
  Options = type metadata accessor for InstantWeatherQueryOptions();
  if (!__swift_getEnumTagSinglePayload(v13, 1, Options))
  {
    if (swift_getEnumCaseMultiPayload() != 1)
      v4 = OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_36(v13, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8));
  }

  OUTLINED_FUNCTION_90_2();
  return OUTLINED_FUNCTION_144_2();
}

uint64_t sub_1A605E170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(OUTLINED_FUNCTION_14_26(a1, a2, a3, a4) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A605CF48(a1, v4 + v8, *(void **)(v4 + v9), *(void (**)(_QWORD *))(v4 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v4 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v6);
}

void WeatherService.fetchInstantWeather(for:at:with:completion:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;

  OUTLINED_FUNCTION_6_2();
  v2 = v1;
  v8 = OUTLINED_FUNCTION_291_0();
  v3 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_24();
  sub_1A605E320(v2, v0);
  sub_1A6122540();
  sub_1A612224C();
  v4 = (_QWORD *)OUTLINED_FUNCTION_65_5();
  OUTLINED_FUNCTION_339(v4);
  OUTLINED_FUNCTION_33_6();
  v5 = (void *)sub_1A61221E0();
  sub_1A6122210();
  OUTLINED_FUNCTION_7_10();
  swift_release();

  v6 = (_QWORD *)OUTLINED_FUNCTION_65_5();
  OUTLINED_FUNCTION_339(v6);
  OUTLINED_FUNCTION_33_6();
  v7 = (void *)sub_1A61221E0();
  sub_1A612221C();
  swift_release();
  OUTLINED_FUNCTION_24_3();
  swift_release();

  OUTLINED_FUNCTION_318_0(v0, *(uint64_t (**)(uint64_t, _QWORD))(v3 + 8));
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A605E320@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int *Options;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v51[7];
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v56 = a2;
  v3 = sub_1A6123380();
  v53 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  MEMORY[0x1E0C80A78](v3);
  v55 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929D8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193020);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193BE0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192708);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192700);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192940);
  MEMORY[0x1E0C80A78](v20);
  v60 = (uint64_t)v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
  MEMORY[0x1E0C80A78](v22);
  v59 = (uint64_t)v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v58 = (uint64_t)v51 - v25;
  v26 = sub_1A6122618();
  MEMORY[0x1E0C80A78](v26);
  v57 = (char *)v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193BB8);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v51 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1929F0);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v51 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1A6121FA0();
  v51[3] = v35;
  v51[4] = v34;
  Options = (int *)type metadata accessor for WeatherServiceFetchOptions();
  v37 = (uint64_t)a1 + Options[5];
  v51[5] = v33;
  sub_1A606D5B0(v37, (uint64_t)v33, (uint64_t *)&unk_1ED1929F0);
  v38 = *a1;
  v51[1] = a1[1];
  v51[2] = v38;
  v39 = *(_WORD *)((_BYTE *)a1 + Options[6] + 8) & 0xFF00;
  v52 = v13;
  if (v39 == 768)
  {
    v40 = sub_1A6122738();
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 1, 1, v40);
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1A612272C();
    v41 = sub_1A6122738();
    __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v41);
  }
  sub_1A5FA3C90();
  v42 = sub_1A6121D24();
  __swift_storeEnumTagSinglePayload(v58, 1, 1, v42);
  __swift_storeEnumTagSinglePayload(v59, 1, 1, v42);
  v43 = sub_1A612275C();
  __swift_storeEnumTagSinglePayload(v60, 1, 1, v43);
  v44 = sub_1A6122768();
  v51[6] = v19;
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v44);
  v45 = sub_1A6122774();
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v45);
  sub_1A606D5B0((uint64_t)a1 + Options[9], (uint64_t)v10, &qword_1ED193020);
  v46 = type metadata accessor for WeatherNetworkActivity();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v46) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1A5FAFD58((uint64_t)v10, &qword_1ED193020);
    v47 = 1;
    v48 = (uint64_t)v52;
  }
  else
  {
    sub_1A606D5B0((uint64_t)&v10[*(int *)(v46 + 28)], (uint64_t)v7, &qword_1ED1929D8);
    swift_bridgeObjectRetain();
    v48 = (uint64_t)v52;
    sub_1A6123188();
    sub_1A5FA1740((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for WeatherNetworkActivity);
    v47 = 0;
  }
  v49 = sub_1A6123194();
  __swift_storeEnumTagSinglePayload(v48, v47, 1, v49);
  sub_1A6121FAC();
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v55, *MEMORY[0x1E0DCA8B0], v54);
  return sub_1A61226F0();
}

uint64_t sub_1A605E8CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  objc_msgSend(a4, sel_coordinate);
  return sub_1A6122678();
}

uint64_t sub_1A605E958()
{
  uint64_t v0;

  return sub_1A605E8CC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1A605E978(uint64_t *a1, uint64_t a2, void *a3, void (*a4)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t result;

  v5 = v4;
  v9 = *a1;
  swift_retain();
  result = sub_1A6057654(v9, a2, a3);
  if (!v5)
  {
    a4();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A605E9FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A605E978(a1, a2, *(void **)(v2 + 16), *(void (**)(void))(v2 + 24));
}

uint64_t sub_1A605EA18(void *a1, void *a2, uint64_t (*a3)(void *, uint64_t))
{
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  os_log_type_t type;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (qword_1ED193BE8 != -1)
    swift_once();
  v6 = sub_1A612356C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED19DB18);
  v7 = a1;
  v8 = a1;
  v9 = a1;
  v10 = a2;
  v11 = a1;
  v12 = v10;
  v13 = sub_1A6123554();
  v14 = sub_1A6123A40();
  if (os_log_type_enabled(v13, v14))
  {
    type = v14;
    v15 = swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    *(_DWORD *)v15 = 141558787;
    v25 = v23;
    sub_1A6123A88();
    *(_WORD *)(v15 + 12) = 2113;
    v17 = v12;
    sub_1A6123A88();
    *v16 = v12;

    *(_WORD *)(v15 + 22) = 2082;
    swift_getErrorValue();
    v18 = sub_1A6123D28();
    sub_1A5FBE7E0(v18, v19, &v25);
    sub_1A6123A88();
    swift_bridgeObjectRelease();

    *(_WORD *)(v15 + 32) = 2112;
    v20 = a1;
    v24 = _swift_stdlib_bridgeErrorToNSError();
    sub_1A6123A88();
    v16[1] = v24;

    _os_log_impl(&dword_1A5F87000, v13, type, "Encountered an error when fetching instant weather; location=%{private,mask.hash}@,  error=%{public}s %@",
      (uint8_t *)v15,
      0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v16, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v23, -1, -1);
    MEMORY[0x1A85BB42C](v15, -1, -1);
  }
  else
  {

  }
  return a3(a1, 1);
}

uint64_t sub_1A605ED2C()
{
  void *v0;
  void *v1;
  uint64_t (*v2)(void *, uint64_t);

  OUTLINED_FUNCTION_261_0();
  return sub_1A605EA18(v0, v1, v2);
}

uint64_t sub_1A605ED3C(uint64_t a1, uint64_t a2, void *a3)
{
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  objc_msgSend(a3, sel_coordinate);
  return sub_1A612266C();
}

uint64_t sub_1A605EDC0()
{
  uint64_t v0;

  return sub_1A605ED3C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1A605EDDC(NSObject *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *);

  v13 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE815668);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for InstantWeather();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5FE499C(a1, (uint64_t)v11);
  if (!v4)
  {
    sub_1A5FC56D4((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for InstantWeather);
    swift_storeEnumTagMultiPayload();
    v13(v8);
    sub_1A5FAFD58((uint64_t)v8, qword_1EE815668);
    sub_1A5FA1740((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for InstantWeather);
  }
}

void sub_1A605EF28(NSObject *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A605EDDC(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(char *))(v2 + 24));
}

void sub_1A605EF48()
{
  OUTLINED_FUNCTION_261_0();
  sub_1A606B4BC();
}

void WeatherService.cachedWeather<each A>(for:including:options:)()
{
  uint64_t v0;
  NSObject *v1;
  void (*v2)(NSObject *, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  _QWORD v34[2];
  uint64_t v35;
  NSObject *v36;
  void (*v37)(NSObject *, uint64_t);
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_6_2();
  v4 = v3;
  v6 = v5;
  v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFELL);
  v9 = 8 * v3;
  v38 = v7;
  v36 = v1;
  v37 = v2;
  v35 = v10;
  if (v3 == 1)
  {
    v11 = OUTLINED_FUNCTION_22_14((uint64_t)v1, *v8, (uint64_t)v2, 1);
  }
  else
  {
    MEMORY[0x1E0C80A78](v1);
    if (v4)
    {
      v15 = v8;
      v16 = (_QWORD *)((char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
      v17 = v4;
      do
      {
        v18 = *v15++;
        v12 = OUTLINED_FUNCTION_280_0(v12, v18, v13, v14);
        *v16++ = v12;
        --v17;
      }
      while (v17);
    }
    v11 = OUTLINED_FUNCTION_28_0();
  }
  v39 = v11;
  v34[1] = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_6_9();
  v34[0] = v34;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4)
  {
    v25 = (int *)(v39 + 32);
    v26 = (_QWORD *)((char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    v27 = v4;
    do
    {
      if (v4 == 1)
        v28 = 0;
      else
        v28 = *v25;
      v29 = *v8++;
      v30 = v0 + v28;
      v6 += 8;
      v31 = OUTLINED_FUNCTION_22_14(v21, v29, v22, v23);
      v21 = OUTLINED_FUNCTION_149(v30, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16));
      *v26++ = v30;
      v25 += 4;
      --v27;
    }
    while (v27);
  }
  sub_1A605F0FC(v36, (uint64_t)v24, v37, v4, v38, v35);
  v32 = OUTLINED_FUNCTION_268_0();
  v33(v32, v39);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A605F0FC@<X0>(NSObject *a1@<X0>, uint64_t a2@<X1>, void (*a3)(NSObject *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t TupleTypeMetadata;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  int *v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char **v73;
  NSObject *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(NSObject *, char *, uint64_t);
  uint64_t v82;
  NSObject *v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  NSObject *v89;
  NSObject *v90;
  uint64_t v91;
  unint64_t v92;
  NSObject *v93;
  NSObject *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  int *v109;
  char *v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  int *v119;
  int v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  NSObject *v139;
  NSObject *v140;
  os_log_type_t v141;
  uint64_t v142;
  _QWORD *v143;
  NSObject *v144;
  char *v145;
  char **v146;
  void (*v147)(char *, uint64_t);
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(uint64_t, uint64_t);
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  void (*v159)(char *, uint64_t);
  char *v160;
  int *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  NSObject *v167;
  uint64_t *v168;
  _QWORD *v169;
  _QWORD *v170;
  _QWORD *v171;
  _QWORD *v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(NSObject *, uint64_t);
  NSObject *v179;
  _QWORD *v180;
  _QWORD *v181;
  _QWORD *v182;
  _QWORD *v183;
  _QWORD *v184;
  _QWORD *v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  NSObject *v194;
  char *v195;
  uint64_t v196;
  char **v197;
  uint64_t v198;
  char *v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t v202;
  unsigned __int16 v203;
  char v204;
  uint64_t v205;
  uint64_t v206;
  char v207;

  v178 = a3;
  v174 = a6;
  v162 = *v6;
  v188 = a5;
  v10 = (uint64_t *)(a5 & 0xFFFFFFFFFFFFFFFELL);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1936F8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v155 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v155 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192858);
  MEMORY[0x1E0C80A78](v17);
  v164 = (uint64_t)&v155 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = 8 * a4;
  v165 = v13;
  if (a4 == 1)
  {
    TupleTypeMetadata = *v10;
  }
  else
  {
    MEMORY[0x1E0C80A78](v18);
    if (a4)
    {
      v22 = v10;
      v23 = (_QWORD **)((char *)&v155 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
      v24 = a4;
      do
      {
        v25 = *v22++;
        *v23++ = v25;
        --v24;
      }
      while (v24);
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  v179 = a1;
  v163 = v16;
  v173 = &v155;
  v187 = TupleTypeMetadata;
  v158 = *(_QWORD *)(TupleTypeMetadata - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata);
  v157 = (char *)&v155 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = &v155;
  MEMORY[0x1E0C80A78](v27);
  v160 = (char *)&v155 - v28;
  v29 = _s24WeatherProductsContainerVMa();
  v171 = &v155;
  v161 = (int *)v29;
  MEMORY[0x1E0C80A78](v29);
  v191 = (uint64_t)&v155 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192878);
  v170 = &v155;
  MEMORY[0x1E0C80A78](v31);
  v189 = (uint64_t)&v155 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1A6121F58();
  v169 = &v155;
  v198 = v33;
  v192 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v167 = ((char *)&v155 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v186 = &v155;
  MEMORY[0x1E0C80A78](v35);
  v37 = ((char *)&v155 - v36);
  v185 = &v155;
  MEMORY[0x1E0C80A78](v38);
  v193 = (char *)&v155 - v39;
  v40 = sub_1A6122708();
  v184 = &v155;
  v176 = v40;
  v175 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v195 = (char *)&v155 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = (uint64_t *)a2;
  v200 = v10;
  v194 = v37;
  if (a4 == 1)
  {
    v45 = type metadata accessor for WeatherQuery(0, *v10, v42, v43);
  }
  else
  {
    MEMORY[0x1E0C80A78](v41);
    if (a4)
    {
      v48 = v10;
      v49 = (uint64_t *)((char *)&v155 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
      v50 = a4;
      do
      {
        v51 = *v48++;
        *v49++ = type metadata accessor for WeatherQuery(255, v51, v46, v47);
        --v50;
      }
      while (v50);
    }
    v45 = swift_getTupleTypeMetadata();
  }
  v183 = &v155;
  v196 = v45;
  v177 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v199 = (char *)&v155 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = &v155;
  MEMORY[0x1E0C80A78](v53);
  v55 = (char *)&v155 - v54;
  v56 = _s21WeatherServiceRequestVMa();
  v181 = &v155;
  MEMORY[0x1E0C80A78](v56);
  v197 = (char **)((char *)&v155 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  v180 = &v155;
  MEMORY[0x1E0C80A78](v58);
  v166 = 8 * a4;
  v61 = (uint64_t *)((char *)&v155 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v201 = a4;
  if (a4)
  {
    v62 = (int *)(v196 + 32);
    v63 = v200;
    v64 = v168;
    v65 = v61;
    v66 = a4;
    do
    {
      if (a4 == 1)
        v67 = 0;
      else
        v67 = *v62;
      v69 = *v63++;
      v68 = v69;
      v70 = &v55[v67];
      v71 = *v64++;
      v72 = type metadata accessor for WeatherQuery(0, v68, v59, v60);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
      *v65++ = (uint64_t)v70;
      v62 += 4;
      --v66;
      a4 = v201;
    }
    while (v66);
  }
  v73 = v197;
  v74 = v179;
  v75 = v190;
  sub_1A5FCE66C(v61, (uint64_t)v178, a4, v188, v197);
  v159 = *(void (**)(char *, uint64_t))(v177 + 8);
  v159(v55, v196);
  v76 = (uint64_t)v195;
  sub_1A5FA3E70();
  v77 = v193;
  sub_1A6121F4C();
  if (qword_1ED193BE8 != -1)
    swift_once();
  v78 = sub_1A612356C();
  v79 = __swift_project_value_buffer(v78, (uint64_t)qword_1ED19DB18);
  v80 = v192;
  v81 = *(void (**)(NSObject *, char *, uint64_t))(v192 + 16);
  v82 = v198;
  v81(v194, v77, v198);
  v83 = v74;
  v177 = v79;
  v84 = sub_1A6123554();
  v85 = sub_1A6123A4C();
  v179 = v84;
  if (os_log_type_enabled(v84, v85))
  {
    v86 = swift_slowAlloc();
    v87 = (_QWORD *)swift_slowAlloc();
    v155 = v87;
    v88 = swift_slowAlloc();
    v156 = v88;
    *(_DWORD *)v86 = 141558531;
    v205 = 1752392040;
    v206 = v88;
    sub_1A6123A88();
    *(_WORD *)(v86 + 12) = 2113;
    v205 = (uint64_t)v83;
    v89 = v83;
    sub_1A6123A88();
    *v87 = v83;

    *(_WORD *)(v86 + 22) = 2082;
    v90 = v194;
    v81(v167, (char *)v194, v82);
    v91 = sub_1A612380C();
    v205 = sub_1A5FBE7E0(v91, v92, &v206);
    a4 = v201;
    sub_1A6123A88();
    v75 = v190;
    swift_bridgeObjectRelease();
    v178 = *(void (**)(NSObject *, uint64_t))(v192 + 8);
    v93 = v90;
    v73 = v197;
    v178(v93, v82);
    v94 = v179;
    _os_log_impl(&dword_1A5F87000, v179, v85, "About to fetch cached weather data; location=%{private,mask.hash}@, startTime=%{public}s",
      (uint8_t *)v86,
      0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
    v95 = v155;
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v95, -1, -1);
    v96 = v156;
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v96, -1, -1);
    v97 = v86;
    v76 = (uint64_t)v195;
    MEMORY[0x1A85BB42C](v97, -1, -1);

  }
  else
  {

    v178 = *(void (**)(NSObject *, uint64_t))(v80 + 8);
    v178(v194, v82);

  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v75 + 16), *(_QWORD *)(v75 + 40));
  swift_bridgeObjectRetain();
  -[NSObject coordinate](v83, sel_coordinate);
  v98 = sub_1A61226B4();
  swift_bridgeObjectRelease();
  if (v98)
  {
    v99 = v189;
    sub_1A6012F30(v98, (uint64_t)v83, v76, v189);
    v100 = v191;
    v194 = v83;
    sub_1A5F974FC(v98, (uint64_t)v83, v99, v191);
    v103 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v103);
    v107 = (char *)&v155 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
    v156 = v106;
    if (a4)
    {
      v108 = 0;
      v109 = (int *)(v187 + 32);
      v110 = v160;
      v111 = (uint64_t)v168;
      do
      {
        if (a4 == 1)
          v112 = 0;
        else
          v112 = *v109;
        *(_QWORD *)&v107[8 * v108++] = &v110[v112];
        v109 += 4;
      }
      while (a4 != v108);
      MEMORY[0x1E0C80A78](v104);
      v116 = (char *)&v155 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
      v117 = 0;
      v119 = (int *)(v118 + 32);
      do
      {
        if (a4 == 1)
          v120 = 0;
        else
          v120 = *v119;
        v121 = *(_QWORD *)(v111 + 8 * v117);
        v122 = &v199[v120];
        v123 = type metadata accessor for WeatherQuery(0, v200[v117], v113, v114);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v122, v121, v123);
        *(_QWORD *)&v116[8 * v117++] = v122;
        v119 += 4;
      }
      while (a4 != v117);
    }
    else
    {
      v116 = &v207;
    }
    v124 = type metadata accessor for InstantWeather();
    v125 = v164;
    __swift_storeEnumTagSinglePayload(v164, 1, 1, v124);
    v126 = v161;
    v127 = v161[6];
    v190 = v100 + v161[5];
    v200 = (uint64_t *)(v100 + v127);
    v128 = v161[8];
    v179 = (v100 + v161[7]);
    v129 = v161[9];
    v130 = *(_QWORD **)(v100 + v161[10]);
    v168 = (uint64_t *)(v100 + v128);
    v167 = (v100 + v129);
    v131 = v100 + v161[11];
    LOWORD(v128) = *(_WORD *)v131;
    v204 = *(_BYTE *)(v131 + 2);
    v203 = v128;
    v206 = *(_QWORD *)(v191 + v161[16]);
    v132 = type metadata accessor for HistoricalComparisons();
    v133 = (uint64_t)v163;
    __swift_storeEnumTagSinglePayload((uint64_t)v163, 1, 1, v132);
    v205 = 0;
    v134 = type metadata accessor for LocationInfo();
    v135 = (uint64_t)v165;
    __swift_storeEnumTagSinglePayload((uint64_t)v165, 1, 1, v134);
    v136 = v191 + v126[17];
    v137 = v191 + v126[15];
    v138 = v191;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A603B0B0((uint64_t)v116, v138, v125, 0, v190, (uint64_t)v200, (uint64_t)v179, v130, (uint64_t)v107, (uint64_t)v168, (uint64_t)v167, &v203, &v206, v133, &v205, v135, v136, v137, v201,
      v188);
    swift_bridgeObjectRelease();
    sub_1A5FAFD58(v135, &qword_1ED1936F8);
    sub_1A5FAFD58(v133, &qword_1ED194020);
    swift_bridgeObjectRelease();
    sub_1A5FAFD58(v125, &qword_1ED192858);
    v159(v199, v196);
    v139 = v194;
    v140 = sub_1A6123554();
    v141 = sub_1A6123A4C();
    if (os_log_type_enabled(v140, v141))
    {
      v142 = swift_slowAlloc();
      v143 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v142 = 141558275;
      v202 = 1752392040;
      sub_1A6123A88();
      *(_WORD *)(v142 + 12) = 2113;
      v202 = (uint64_t)v139;
      v144 = v139;
      v138 = v191;
      sub_1A6123A88();
      *v143 = v139;

      _os_log_impl(&dword_1A5F87000, v140, v141, "Successfully created product tuple; location=%{private,mask.hash}@",
        (uint8_t *)v142,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
      swift_arrayDestroy();
      MEMORY[0x1A85BB42C](v143, -1, -1);
      MEMORY[0x1A85BB42C](v142, -1, -1);
    }
    else
    {

    }
    v145 = v195;
    v146 = v197;
    v147 = (void (*)(char *, uint64_t))v178;

    sub_1A5FA1740(v138, (uint64_t (*)(_QWORD))_s24WeatherProductsContainerVMa);
    sub_1A5FAFD58(v189, &qword_1ED192878);
    v147(v193, v198);
    (*(void (**)(char *, uint64_t))(v175 + 8))(v145, v176);
    sub_1A5FA1740((uint64_t)v146, (uint64_t (*)(_QWORD))_s21WeatherServiceRequestVMa);
    v148 = v158;
    v149 = (uint64_t)v157;
    v150 = v160;
    v151 = v187;
    (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v157, v160, v187);
    v152 = v174;
    sub_1A60578A8(v149, v151, v174);
    v153 = *(void (**)(uint64_t, uint64_t))(v148 + 8);
    v153(v149, v151);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED193C90);
    v154 = sub_1A6123DB8();
    __swift_storeEnumTagSinglePayload(v152, 0, 1, v154);
    return ((uint64_t (*)(char *, uint64_t))v153)(v150, v151);
  }
  else
  {
    v178(v193, v198);
    (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v76, v176);
    sub_1A5FA1740((uint64_t)v73, (uint64_t (*)(_QWORD))_s21WeatherServiceRequestVMa);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED193C90);
    v101 = sub_1A6123DB8();
    return __swift_storeEnumTagSinglePayload(v174, 1, 1, v101);
  }
}

void WeatherService.cachedWeather<A>(for:including:options:)()
{
  uint64_t v0;
  void (*v1)(NSObject *, uint64_t);
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_328();
  v6 = v5;
  v9 = *(_QWORD *)(type metadata accessor for WeatherQuery(0, v8, v7, v8) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_210_0();
  OUTLINED_FUNCTION_149_0(v4, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  v11 = v0;
  v12 = v4;
  sub_1A605F0FC(v3, (uint64_t)&v12, v1, 1, (uint64_t)&v11, v6);
  OUTLINED_FUNCTION_34_2(v4, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.cachedWeather<A, B>(for:including:_:options:)()
{
  uint64_t v0;
  void (*v1)(NSObject *, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  NSObject *v26;
  void (*v27)(NSObject *, uint64_t);
  _QWORD v28[2];
  _QWORD v29[2];

  OUTLINED_FUNCTION_6_2();
  v27 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v25 = v11;
  v26 = v10;
  v12 = *(_QWORD *)(OUTLINED_FUNCTION_374((uint64_t)v10, v8, v6, (uint64_t)v1, v4, v2) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - v14;
  v20 = *(_QWORD *)(OUTLINED_FUNCTION_72_3(v16, v17, v18, v19) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v21);
  v23 = OUTLINED_FUNCTION_287_0(v22, v25);
  OUTLINED_FUNCTION_315((uint64_t)v23, v9, v24);
  v29[0] = v0;
  OUTLINED_FUNCTION_143_0((uint64_t)v15, v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
  v29[1] = v15;
  v28[0] = v5;
  v28[1] = v3;
  sub_1A605F0FC(v26, (uint64_t)v29, v27, 2, (uint64_t)v28, v25);
  OUTLINED_FUNCTION_125_0((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  OUTLINED_FUNCTION_36(v0, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.cachedWeather<A, B, C>(for:including:_:_:options:)()
{
  void (*v0)(NSObject *, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  void (*v37)(NSObject *, uint64_t);
  _QWORD v38[3];
  _QWORD v39[3];

  OUTLINED_FUNCTION_6_2();
  v37 = v0;
  v33 = v2;
  v34 = v1;
  v4 = v3;
  v30 = v3;
  v31 = v5;
  v7 = v6;
  v32 = v8;
  v35 = v10;
  v36 = v9;
  v11 = *(_QWORD *)(OUTLINED_FUNCTION_245_0((uint64_t)v9, v5, v8, v1, (uint64_t)v0, v6, v3, v2) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - v13;
  v19 = *(_QWORD *)(OUTLINED_FUNCTION_13_24(v15, v16, v17, v18) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v29 - v21;
  v27 = *(_QWORD *)(OUTLINED_FUNCTION_10_27(v23, v24, v25, v26) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v28);
  OUTLINED_FUNCTION_213_0();
  OUTLINED_FUNCTION_163(v4, v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 16));
  v39[0] = v4;
  OUTLINED_FUNCTION_33_9((uint64_t)v22, v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16));
  v39[1] = v22;
  OUTLINED_FUNCTION_143_0((uint64_t)v14, v34, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  v39[2] = v14;
  v38[0] = v7;
  v38[1] = v30;
  v38[2] = v33;
  sub_1A605F0FC(v36, (uint64_t)v39, v37, 3, (uint64_t)v38, v35);
  OUTLINED_FUNCTION_125_0((uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  OUTLINED_FUNCTION_375((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  OUTLINED_FUNCTION_122(v4, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.cachedWeather<A, B, C, D>(for:including:_:_:_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  void (*v25)(NSObject *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, _QWORD);
  _QWORD v64[7];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  void (*v75)(NSObject *, uint64_t);
  _QWORD v76[4];
  _QWORD v77[5];

  OUTLINED_FUNCTION_6_2();
  v64[6] = v22;
  v64[2] = v23;
  v74 = v24;
  v75 = v25;
  v72 = v26;
  v73 = v27;
  v68 = v28;
  v65 = v29;
  v66 = a21;
  v70 = v30;
  v71 = a22;
  v69 = OUTLINED_FUNCTION_22_14((uint64_t)v24, a22, v28, v30);
  v67 = *(_QWORD *)(v69 - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v64 - v32;
  v38 = OUTLINED_FUNCTION_10_27(v34, v35, v36, v37);
  OUTLINED_FUNCTION_96_2(*(_QWORD *)(v38 - 8));
  v64[1] = v39;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)v64 - v41;
  v47 = OUTLINED_FUNCTION_13_24(v43, v44, v45, v46);
  v48 = *(_QWORD *)(v47 - 8);
  v64[3] = v47;
  v64[4] = v48;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v49);
  v51 = (char *)v64 - v50;
  v56 = *(_QWORD *)(OUTLINED_FUNCTION_23_16(v52, v53, v54, v55) - 8);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v57);
  v59 = (char *)v64 - v58;
  OUTLINED_FUNCTION_149_0((uint64_t)v64 - v58, v65, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 16));
  v77[0] = v59;
  OUTLINED_FUNCTION_33_9((uint64_t)v51, v68, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 16));
  v77[1] = v51;
  OUTLINED_FUNCTION_227_0();
  OUTLINED_FUNCTION_83((uint64_t)v42, v70, v60);
  v77[2] = v42;
  v61 = v67;
  OUTLINED_FUNCTION_143_0((uint64_t)v33, v72, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 16));
  v77[3] = v33;
  OUTLINED_FUNCTION_368();
  v76[2] = v66;
  v76[3] = v71;
  sub_1A605F0FC(v74, (uint64_t)v77, v75, 4, (uint64_t)v76, v73);
  OUTLINED_FUNCTION_125_0((uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t))(v61 + 8));
  OUTLINED_FUNCTION_97((uint64_t)v42, *(uint64_t (**)(uint64_t, _QWORD))(v47 + 8));
  v62 = OUTLINED_FUNCTION_135_2();
  OUTLINED_FUNCTION_97(v62, v63);
  OUTLINED_FUNCTION_34_2((uint64_t)v59, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.cachedWeather<A, B, C, D, E>(for:including:_:_:_:_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(NSObject *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, _QWORD);
  uint64_t v77;
  uint64_t (*v78)(uint64_t, _QWORD);
  _QWORD v79[14];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  void (*v88)(NSObject *, uint64_t);
  uint64_t v89;
  _QWORD v90[5];
  _QWORD v91[3];
  _QWORD v92[2];
  uint64_t v93;

  OUTLINED_FUNCTION_6_2();
  a19 = v25;
  a20 = v26;
  v79[3] = v27;
  v88 = v28;
  v85 = v29;
  v82 = v30;
  v83 = v31;
  v79[12] = v32;
  v79[10] = v33;
  v86 = v35;
  v87 = v34;
  v79[6] = a21;
  v79[9] = a22;
  v79[13] = a23;
  v84 = a24;
  v36 = OUTLINED_FUNCTION_22_14((uint64_t)v34, a24, v32, v30);
  v80 = *(_QWORD *)(v36 - 8);
  v81 = v36;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v37);
  v89 = OUTLINED_FUNCTION_8_24(v39, v40, (uint64_t)v79 - v38);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v89 - 8));
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)v79 - v42;
  v48 = OUTLINED_FUNCTION_14_26(v44, v45, v46, v47);
  v49 = *(_QWORD *)(v48 - 8);
  OUTLINED_FUNCTION_362(v48, (uint64_t)v92);
  v79[2] = v49;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)v79 - v51;
  v57 = OUTLINED_FUNCTION_10_27(v53, v54, v55, v56);
  v58 = *(_QWORD *)(v57 - 8);
  OUTLINED_FUNCTION_361(v57, (uint64_t)&a9);
  v79[5] = v58;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v59);
  v61 = (char *)v79 - v60;
  v66 = OUTLINED_FUNCTION_13_24(v62, v63, v64, v65);
  v67 = *(_QWORD *)(v66 - 8);
  v79[7] = v66;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v68);
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_97(v24, *(uint64_t (**)(uint64_t, _QWORD))(v67 + 16));
  v91[0] = v24;
  OUTLINED_FUNCTION_46_6((uint64_t)v61, *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v58 + 16));
  v91[1] = v61;
  OUTLINED_FUNCTION_53_5((uint64_t)v52, v82, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 16));
  v91[2] = v52;
  OUTLINED_FUNCTION_217_0();
  v69(v43, v83, v89);
  v92[0] = v43;
  v70 = v80;
  v71 = OUTLINED_FUNCTION_235_0();
  OUTLINED_FUNCTION_315(v71, v85, v72);
  v92[1] = v49;
  OUTLINED_FUNCTION_304_0((uint64_t)&v93);
  OUTLINED_FUNCTION_245();
  v90[2] = v74;
  v90[3] = v73;
  v90[4] = v84;
  sub_1A605F0FC(v87, (uint64_t)v91, v88, 5, (uint64_t)v90, v86);
  OUTLINED_FUNCTION_36(v49, *(uint64_t (**)(uint64_t, uint64_t))(v70 + 8));
  (*(void (**)(char *, uint64_t))(v48 + 8))(v43, v89);
  v75 = OUTLINED_FUNCTION_135_2();
  OUTLINED_FUNCTION_97(v75, v76);
  v77 = OUTLINED_FUNCTION_268_0();
  OUTLINED_FUNCTION_97(v77, v78);
  OUTLINED_FUNCTION_97(v24, *(uint64_t (**)(uint64_t, _QWORD))(v67 + 8));
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.cachedWeather<A, B, C, D, E, F>(for:including:_:_:_:_:_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  void (*v28)(NSObject *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t (*v82)(uint64_t, _QWORD);
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t (*v88)(uint64_t, _QWORD);
  uint64_t v89;
  uint64_t (*v90)(uint64_t, _QWORD);
  uint64_t v91;
  uint64_t (*v92)(uint64_t, _QWORD);
  uint64_t v93[2];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  void (*v113)(NSObject *, uint64_t);
  uint64_t v114;
  _QWORD v115[4];
  uint64_t v116;
  uint64_t v117;
  _QWORD v118[2];
  _QWORD v119[5];

  OUTLINED_FUNCTION_6_2();
  a19 = v26;
  a20 = v27;
  v113 = v28;
  v110 = v29;
  v107 = v30;
  v108 = v31;
  v105 = v32;
  v103 = v33;
  v101 = v34;
  v111 = v36;
  v112 = v35;
  v37 = a21;
  v95 = a21;
  v97 = a22;
  v100 = a23;
  v102 = a24;
  v106 = a25;
  v109 = a26;
  v38 = OUTLINED_FUNCTION_22_14((uint64_t)v35, a26, v33, v32);
  OUTLINED_FUNCTION_78(v38, (uint64_t)&a18);
  OUTLINED_FUNCTION_1_34(v39);
  MEMORY[0x1E0C80A78](v40);
  v44 = OUTLINED_FUNCTION_15_23(v42, v43, (uint64_t)v93 - v41);
  OUTLINED_FUNCTION_78(v44, (uint64_t)&a10);
  v114 = v45;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v46);
  v50 = OUTLINED_FUNCTION_9_23(v48, v49, (uint64_t)v93 - v47);
  v51 = *(_QWORD *)(v50 - 8);
  v93[1] = v50;
  v94 = v51;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v52);
  v54 = (char *)v93 - v53;
  v59 = OUTLINED_FUNCTION_17_17(v55, v56, v57, v58);
  v60 = *(_QWORD *)(v59 - 8);
  OUTLINED_FUNCTION_274_0(v59, (uint64_t)&v117);
  v96 = v60;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v61);
  v63 = (char *)v93 - v62;
  v68 = OUTLINED_FUNCTION_10_27(v64, v65, v66, v67);
  v69 = *(_QWORD *)(v68 - 8);
  OUTLINED_FUNCTION_362(v68, (uint64_t)v119);
  v98 = v69;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v70);
  v72 = (char *)v93 - v71;
  OUTLINED_FUNCTION_13_24(v73, v74, v75, v76);
  OUTLINED_FUNCTION_174_0();
  OUTLINED_FUNCTION_52_4(v77);
  v99 = v78;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v79);
  v81 = OUTLINED_FUNCTION_86_2(v80, v93[0]);
  OUTLINED_FUNCTION_97((uint64_t)v81, v82);
  v118[0] = v37;
  OUTLINED_FUNCTION_46_6((uint64_t)v72, *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v69 + 16));
  v118[1] = v72;
  OUTLINED_FUNCTION_163((uint64_t)v63, v105, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 16));
  v119[0] = v63;
  OUTLINED_FUNCTION_53_5((uint64_t)v54, v107, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 16));
  v119[1] = v54;
  v83 = OUTLINED_FUNCTION_235_0();
  OUTLINED_FUNCTION_202(v83, v108, v84);
  v119[2] = v69;
  OUTLINED_FUNCTION_246_0();
  v85 = v104;
  OUTLINED_FUNCTION_163(v104, v110, v86);
  v119[3] = v85;
  OUTLINED_FUNCTION_184_0((uint64_t)&v116);
  v115[2] = v100;
  v115[3] = v102;
  v116 = v106;
  v117 = v109;
  sub_1A605F0FC(v112, (uint64_t)v118, v113, 6, (uint64_t)v115, v111);
  OUTLINED_FUNCTION_122(v85, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
  OUTLINED_FUNCTION_154(v69, *(uint64_t (**)(uint64_t, uint64_t))(v114 + 8));
  OUTLINED_FUNCTION_97((uint64_t)v54, *(uint64_t (**)(uint64_t, _QWORD))(v94 + 8));
  v87 = OUTLINED_FUNCTION_268_0();
  OUTLINED_FUNCTION_97(v87, v88);
  v89 = OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_97(v89, v90);
  v91 = OUTLINED_FUNCTION_160();
  OUTLINED_FUNCTION_97(v91, v92);
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.cachedWeather<A, B, C, D, E, F, G>(for:including:_:_:_:_:_:_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, _QWORD);
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t);
  uint64_t v106;
  uint64_t (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t (*v109)(uint64_t, _QWORD);
  uint64_t v110;
  uint64_t (*v111)(uint64_t, _QWORD);
  _BYTE v112[16];
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(NSObject *, uint64_t);
  NSObject *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD v138[5];
  uint64_t v139;
  _QWORD v140[6];
  _QWORD v141[4];

  OUTLINED_FUNCTION_6_2();
  a19 = v28;
  a20 = v29;
  v132 = v30;
  v131 = v31;
  v129 = v32;
  v128 = v33;
  v125 = v34;
  v124 = v35;
  v122 = v36;
  v134 = v37;
  OUTLINED_FUNCTION_96_2(v38);
  OUTLINED_FUNCTION_171_0(a21);
  v114 = a22;
  v116 = a23;
  v118 = a24;
  v120 = a25;
  v123 = a26;
  v127 = a27;
  v130 = a28;
  v42 = OUTLINED_FUNCTION_22_14(v39, a28, v40, v41);
  OUTLINED_FUNCTION_78(v42, (uint64_t)&a12);
  OUTLINED_FUNCTION_1_34(v43);
  MEMORY[0x1E0C80A78](v44);
  v48 = OUTLINED_FUNCTION_19_16(v46, v47, (uint64_t)&v112[-v45]);
  v138[0] = *(_QWORD *)(v48 - 8);
  v138[1] = v48;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v49);
  v121 = &v112[-v50];
  v55 = OUTLINED_FUNCTION_13_24(v51, v52, v53, v54);
  v136 = *(_QWORD *)(v55 - 8);
  v137 = v55;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v56);
  OUTLINED_FUNCTION_45_6();
  v135 = v57;
  v62 = OUTLINED_FUNCTION_11_22(v58, v59, v60, v61);
  v63 = *(_QWORD *)(v62 - 8);
  OUTLINED_FUNCTION_169_0(v62, (uint64_t)v138);
  v113 = v63;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v64);
  v66 = &v112[-v65];
  v71 = *(_QWORD *)(OUTLINED_FUNCTION_14_26(v67, v68, v69, v70) - 8);
  v115 = v71;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v72);
  v74 = &v112[-v73];
  v79 = OUTLINED_FUNCTION_10_27(v75, v76, v77, v78);
  v80 = *(_QWORD *)(v79 - 8);
  OUTLINED_FUNCTION_170_0(v79, (uint64_t)&v139);
  v117 = v80;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v81);
  v83 = &v112[-v82];
  OUTLINED_FUNCTION_177_0(v84, v85, v86, v87);
  OUTLINED_FUNCTION_174_0();
  OUTLINED_FUNCTION_52_4(v88);
  v119 = v89;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v90);
  v92 = &v112[-v91];
  OUTLINED_FUNCTION_97((uint64_t)&v112[-v91], *(uint64_t (**)(uint64_t, _QWORD))(v93 + 16));
  v140[2] = v92;
  OUTLINED_FUNCTION_46_6((uint64_t)v83, *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v80 + 16));
  v140[3] = v83;
  OUTLINED_FUNCTION_163((uint64_t)v74, v125, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 16));
  v140[4] = v74;
  OUTLINED_FUNCTION_149_0((uint64_t)v66, v128, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 16));
  v140[5] = v66;
  v94 = v135;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 16))(v135, v129, v137);
  v141[0] = v94;
  v95 = OUTLINED_FUNCTION_220_0();
  OUTLINED_FUNCTION_97(v95, v96);
  v141[1] = v80;
  v97 = v126;
  v98 = OUTLINED_FUNCTION_298_0();
  OUTLINED_FUNCTION_53_5(v98, v132, v99);
  v141[2] = v62;
  v138[2] = v114;
  v138[3] = v116;
  OUTLINED_FUNCTION_306_0((uint64_t)v140);
  OUTLINED_FUNCTION_116_2((uint64_t)v141);
  OUTLINED_FUNCTION_319_0();
  v140[1] = v100;
  OUTLINED_FUNCTION_245();
  sub_1A605F0FC(v134, v101, v133, 7, v102, v103);
  OUTLINED_FUNCTION_55_0(v62, *(uint64_t (**)(uint64_t, uint64_t))(v97 + 8));
  v104 = OUTLINED_FUNCTION_268_0();
  v105(v104);
  (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v135, v137);
  OUTLINED_FUNCTION_97((uint64_t)v66, *(uint64_t (**)(uint64_t, _QWORD))(v113 + 8));
  v106 = OUTLINED_FUNCTION_88_0();
  OUTLINED_FUNCTION_122(v106, v107);
  v108 = OUTLINED_FUNCTION_200_0();
  OUTLINED_FUNCTION_97(v108, v109);
  v110 = OUTLINED_FUNCTION_201();
  OUTLINED_FUNCTION_97(v110, v111);
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.cachedWeather<A, B, C, D, E, F, G, H>(for:including:_:_:_:_:_:_:_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)(uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t (*v102)(uint64_t, _QWORD, _QWORD);
  uint64_t v103;
  uint64_t (*v104)(uint64_t, _QWORD);
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  uint64_t (*v109)(uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t, _QWORD);
  uint64_t v115;
  uint64_t (*v116)(uint64_t, _QWORD);
  uint64_t v117;
  uint64_t (*v118)(uint64_t, _QWORD);
  _QWORD v119[3];
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(NSObject *, uint64_t);
  NSObject *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  _QWORD v147[11];
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD v153[3];

  OUTLINED_FUNCTION_6_2();
  v144 = v30;
  v141 = v33;
  v138 = v34;
  v137 = v35;
  v134 = v36;
  v132 = v37;
  v130 = v38;
  v128 = v39;
  v143 = v40;
  OUTLINED_FUNCTION_180(v41);
  OUTLINED_FUNCTION_146_1(v42);
  v140 = v43;
  v147[0] = a23;
  v120 = a24;
  v123 = a25;
  v125 = a26;
  v126 = a27;
  v131 = a28;
  v135 = a29;
  v139 = a30;
  v136 = OUTLINED_FUNCTION_22_14(v44, a30, v45, v46);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v136 - 8));
  MEMORY[0x1E0C80A78](v47);
  v133 = (uint64_t)v119 - v48;
  v53 = OUTLINED_FUNCTION_13_24(v49, v50, v51, v52);
  OUTLINED_FUNCTION_78(v53, (uint64_t)&v148);
  OUTLINED_FUNCTION_1_34(v54);
  MEMORY[0x1E0C80A78](v55);
  OUTLINED_FUNCTION_45_6();
  v127 = v56;
  v61 = OUTLINED_FUNCTION_72_3(v57, v58, v59, v60);
  v147[1] = *(_QWORD *)(v61 - 8);
  v147[2] = v61;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v62);
  v145 = (char *)v119 - v63;
  v146 = OUTLINED_FUNCTION_12_23(v64, v65, v66, v67);
  v119[0] = *(_QWORD *)(v146 - 8);
  v68 = v119[0];
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v69);
  v73 = OUTLINED_FUNCTION_15_23(v71, v72, (uint64_t)v119 - v70);
  v74 = *(_QWORD *)(v73 - 8);
  OUTLINED_FUNCTION_170_0(v73, (uint64_t)&v144);
  v119[2] = v74;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v75);
  v79 = OUTLINED_FUNCTION_8_24(v77, v78, (uint64_t)v119 - v76);
  v80 = *(_QWORD *)(v79 - 8);
  OUTLINED_FUNCTION_169_0(v79, (uint64_t)&v145);
  v121 = v80;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v81);
  v83 = (char *)v119 - v82;
  v88 = OUTLINED_FUNCTION_10_27(v84, v85, v86, v87);
  v89 = *(_QWORD *)(v88 - 8);
  OUTLINED_FUNCTION_240_0(v88, (uint64_t)v147);
  v122 = v89;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v90);
  OUTLINED_FUNCTION_212_0(v91, v92, v93, v94);
  OUTLINED_FUNCTION_174_0();
  OUTLINED_FUNCTION_52_4(v95);
  v124 = v96;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v97);
  OUTLINED_FUNCTION_152_2();
  OUTLINED_FUNCTION_97(v31, *(uint64_t (**)(uint64_t, _QWORD))(v98 + 16));
  v148 = v31;
  OUTLINED_FUNCTION_46_6(v32, *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v89 + 16));
  v149 = v32;
  OUTLINED_FUNCTION_83((uint64_t)v83, v132, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 16));
  v150 = v83;
  v99 = OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_143_0(v99, v134, v100);
  v151 = v89;
  v101 = OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_322(v101, v102);
  v103 = OUTLINED_FUNCTION_277();
  OUTLINED_FUNCTION_97(v103, v104);
  v152 = v89;
  v105 = v129;
  v106 = OUTLINED_FUNCTION_365();
  OUTLINED_FUNCTION_53_5(v106, v141, v107);
  v153[0] = v73;
  OUTLINED_FUNCTION_246_0();
  v108 = v133;
  OUTLINED_FUNCTION_315(v133, v140, v109);
  v153[1] = v108;
  v147[3] = v147[0];
  v147[4] = v120;
  v147[5] = v123;
  v147[6] = v125;
  v147[7] = v126;
  v147[8] = v131;
  OUTLINED_FUNCTION_116_2((uint64_t)v153);
  OUTLINED_FUNCTION_319_0();
  OUTLINED_FUNCTION_223_0(v143, v110, v142, 8, v111, v112);
  OUTLINED_FUNCTION_36(v108, *(uint64_t (**)(uint64_t, uint64_t))(v68 + 8));
  OUTLINED_FUNCTION_55_0(v73, *(uint64_t (**)(uint64_t, uint64_t))(v105 + 8));
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_202_0((uint64_t)&v143);
  v113 = OUTLINED_FUNCTION_341();
  OUTLINED_FUNCTION_97(v113, v114);
  v115 = OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_97(v115, v116);
  v117 = OUTLINED_FUNCTION_201();
  OUTLINED_FUNCTION_97(v117, v118);
  OUTLINED_FUNCTION_97(v31, *(uint64_t (**)(uint64_t, _QWORD))(v124 + 8));
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.cachedWeather<A, B, C, D, E, F, G, H, I>(for:including:_:_:_:_:_:_:_:_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t (*v102)(uint64_t, _QWORD);
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t (*v109)(uint64_t, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t (*v111)(uint64_t, uint64_t, _QWORD);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)(uint64_t, _QWORD, _QWORD);
  uint64_t v116;
  uint64_t (*v117)(uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);
  uint64_t v125;
  uint64_t (*v126)(uint64_t, _QWORD);
  uint64_t (*v127)(uint64_t, _QWORD);
  uint64_t v128;
  uint64_t (*v129)(uint64_t, _QWORD);
  uint64_t v130;
  uint64_t (*v131)(uint64_t, _QWORD);
  uint64_t v132[3];
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(NSObject *, uint64_t);
  NSObject *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  _QWORD v170[7];

  OUTLINED_FUNCTION_6_2();
  a19 = v34;
  a20 = v35;
  v160 = v32;
  v155 = v36;
  v153 = v37;
  v151 = v38;
  v149 = v39;
  v147 = v40;
  v145 = v41;
  v142 = v42;
  v159 = v43;
  OUTLINED_FUNCTION_160_0(v44);
  OUTLINED_FUNCTION_145_2(a23);
  v165 = v45;
  OUTLINED_FUNCTION_171_0(a25);
  v46 = a26;
  v136 = a26;
  v138 = a27;
  v141 = a28;
  v143 = a29;
  v148 = a30;
  v152 = a31;
  v156 = a32;
  v50 = OUTLINED_FUNCTION_22_14(v47, a32, v48, v49);
  OUTLINED_FUNCTION_78(v50, (uint64_t)v170);
  OUTLINED_FUNCTION_1_34(v51);
  MEMORY[0x1E0C80A78](v52);
  v150 = (char *)v132 - v53;
  v146 = OUTLINED_FUNCTION_72_3(v54, v55, v56, v57);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v146 - 8));
  MEMORY[0x1E0C80A78](v58);
  v144 = (char *)v132 - v59;
  v166 = OUTLINED_FUNCTION_13_24(v60, v61, v62, v63);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v166 - 8));
  MEMORY[0x1E0C80A78](v64);
  v164 = OUTLINED_FUNCTION_19_16(v66, v67, (uint64_t)v132 - v65);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v164 - 8));
  MEMORY[0x1E0C80A78](v68);
  v162 = (uint64_t)v132 - v69;
  v163 = OUTLINED_FUNCTION_10_27(v70, v71, v72, v73);
  v132[0] = *(_QWORD *)(v163 - 8);
  v74 = v132[0];
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v75);
  v79 = OUTLINED_FUNCTION_8_24(v77, v78, (uint64_t)v132 - v76);
  v80 = *(_QWORD *)(v79 - 8);
  OUTLINED_FUNCTION_170_0(v79, (uint64_t)&v158);
  v132[2] = v80;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v81);
  v85 = OUTLINED_FUNCTION_9_23(v83, v84, (uint64_t)v132 - v82);
  v86 = *(_QWORD *)(v85 - 8);
  v134 = v85;
  v135 = v86;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v87);
  OUTLINED_FUNCTION_273_0();
  v133 = v33;
  v90 = OUTLINED_FUNCTION_54_5(0, v88, v89, (uint64_t)&a17);
  v91 = *(_QWORD *)(v90 - 8);
  OUTLINED_FUNCTION_240_0(v90, (uint64_t)&v162);
  v137 = v91;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v92);
  v94 = (char *)v132 - v93;
  v97 = type metadata accessor for WeatherQuery(0, v165, v95, v96);
  v98 = *(_QWORD *)(v97 - 8);
  v139 = v97;
  v140 = v98;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v99);
  v101 = OUTLINED_FUNCTION_288_0(v100, v132[0]);
  OUTLINED_FUNCTION_97((uint64_t)v101, v102);
  v167 = v46;
  OUTLINED_FUNCTION_258_0();
  OUTLINED_FUNCTION_143_0(v103, v104, v105);
  v168 = v94;
  OUTLINED_FUNCTION_53_5(v33, v147, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 16));
  v169 = v33;
  v106 = v161;
  OUTLINED_FUNCTION_236_0();
  OUTLINED_FUNCTION_163(v107, v108, v109);
  v170[0] = v106;
  v110 = OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_20_16(v110, v151, v111);
  v170[1] = v106;
  OUTLINED_FUNCTION_245();
  v113 = v162;
  OUTLINED_FUNCTION_323_0(v162, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v112 + 16));
  v170[2] = v113;
  OUTLINED_FUNCTION_227_0();
  v114 = OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_248_0(v114, v115);
  v170[3] = v113;
  OUTLINED_FUNCTION_250_0();
  v116 = OUTLINED_FUNCTION_354();
  OUTLINED_FUNCTION_315(v116, v154, v117);
  v170[4] = v79;
  OUTLINED_FUNCTION_217_0();
  v118 = OUTLINED_FUNCTION_298_0();
  OUTLINED_FUNCTION_49_6(v118, v157, v119);
  v170[5] = v74;
  OUTLINED_FUNCTION_31_10((uint64_t)&a17);
  OUTLINED_FUNCTION_294_0();
  OUTLINED_FUNCTION_223_0(v159, v120, v158, 9, v121, v122);
  OUTLINED_FUNCTION_146(v74, *(uint64_t (**)(uint64_t, uint64_t))(v85 + 8));
  OUTLINED_FUNCTION_36(v79, *(uint64_t (**)(uint64_t, uint64_t))(v90 + 8));
  OUTLINED_FUNCTION_336_0(*(uint64_t (**)(_QWORD, _QWORD))(v33 + 8));
  OUTLINED_FUNCTION_245();
  v123 = OUTLINED_FUNCTION_266_0();
  v124(v123, v164);
  v125 = OUTLINED_FUNCTION_342();
  OUTLINED_FUNCTION_97(v125, v126);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v161, v127);
  OUTLINED_FUNCTION_97(v133, *(uint64_t (**)(uint64_t, _QWORD))(v135 + 8));
  v128 = OUTLINED_FUNCTION_135_2();
  OUTLINED_FUNCTION_97(v128, v129);
  v130 = OUTLINED_FUNCTION_200_0();
  OUTLINED_FUNCTION_97(v130, v131);
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.cachedWeather<A, B, C, D, E, F, G, H, I, J>(for:including:_:_:_:_:_:_:_:_:_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t (*v117)(uint64_t, _QWORD);
  uint64_t v118;
  uint64_t v119;
  uint64_t (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v125)(uint64_t, uint64_t, _QWORD);
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(uint64_t, uint64_t, _QWORD);
  uint64_t v129;
  uint64_t (*v130)(uint64_t, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t (*v132)(uint64_t, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t (*v135)(uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t (*v138)(uint64_t, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t (*v140)(uint64_t, uint64_t);
  uint64_t (*v141)(uint64_t, _QWORD);
  uint64_t (*v142)(uint64_t, _QWORD);
  uint64_t (*v143)(uint64_t, _QWORD);
  uint64_t (*v144)(uint64_t, _QWORD);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175[4];
  uint64_t v176;
  NSObject *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD v183[2];
  _QWORD v184[3];
  uint64_t v185;
  _QWORD v186[3];
  uint64_t v187;
  uint64_t v188;
  _QWORD v189[3];
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;

  OUTLINED_FUNCTION_6_2();
  a19 = v36;
  a20 = v37;
  v178 = v34;
  v174 = v38;
  v171 = v39;
  v169 = v40;
  v167 = v41;
  v166 = v42;
  v162 = v43;
  v161 = v44;
  v177 = v45;
  OUTLINED_FUNCTION_145_2(v46);
  OUTLINED_FUNCTION_215_0(v47);
  OUTLINED_FUNCTION_180(v48);
  OUTLINED_FUNCTION_146_1(v49);
  OUTLINED_FUNCTION_292_0(v50);
  OUTLINED_FUNCTION_96_2(v51);
  OUTLINED_FUNCTION_171_0(a26);
  v52 = a27;
  v151 = a27;
  v154 = a28;
  v159 = a29;
  v160 = a30;
  v163 = a31;
  v168 = a32;
  v53 = a33;
  v172 = a33;
  v175[1] = a34;
  v57 = OUTLINED_FUNCTION_22_14(v54, a34, v55, v56);
  OUTLINED_FUNCTION_78(v57, (uint64_t)v189);
  OUTLINED_FUNCTION_1_34(v58);
  MEMORY[0x1E0C80A78](v59);
  v63 = OUTLINED_FUNCTION_73_3(v61, v62, (uint64_t)&v145 - v60);
  OUTLINED_FUNCTION_78(v63, (uint64_t)&v187);
  OUTLINED_FUNCTION_1_34(v64);
  MEMORY[0x1E0C80A78](v65);
  v164 = (char *)&v145 - v66;
  v71 = OUTLINED_FUNCTION_13_24(v67, v68, v69, v70);
  OUTLINED_FUNCTION_78(v71, (uint64_t)v184);
  v185 = v72;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v73);
  v158 = OUTLINED_FUNCTION_9_23(v75, v76, (uint64_t)&v145 - v74);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v158 - 8));
  MEMORY[0x1E0C80A78](v77);
  v181 = (uint64_t)&v145 - v78;
  v184[0] = OUTLINED_FUNCTION_10_27(v79, v80, v81, v82);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v184[0] - 8));
  MEMORY[0x1E0C80A78](v83);
  v182 = OUTLINED_FUNCTION_8_24(v85, v86, (uint64_t)&v145 - v84);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v182 - 8));
  MEMORY[0x1E0C80A78](v87);
  OUTLINED_FUNCTION_273_0();
  v146 = v35;
  v92 = OUTLINED_FUNCTION_23_16(v88, v89, v90, v91);
  v93 = *(_QWORD *)(v92 - 8);
  v147 = v92;
  v148 = v93;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v94);
  v179 = (uint64_t)&v145 - v95;
  v100 = OUTLINED_FUNCTION_72_3(v96, v97, v98, v99);
  v101 = *(_QWORD *)(v100 - 8);
  OUTLINED_FUNCTION_240_0(v100, (uint64_t)v175);
  v150 = v101;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v102);
  OUTLINED_FUNCTION_289_0();
  v149 = v52;
  v105 = OUTLINED_FUNCTION_54_5(0, v103, v104, (uint64_t)&a17);
  v106 = *(_QWORD *)(v105 - 8);
  OUTLINED_FUNCTION_361(v105, (uint64_t)&v176);
  v153 = v106;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v107);
  v109 = (char *)&v145 - v108;
  v152 = (uint64_t)&v145 - v108;
  v112 = OUTLINED_FUNCTION_54_5(0, v110, v111, (uint64_t)&a18);
  v113 = *(_QWORD *)(v112 - 8);
  v156 = v112;
  v157 = v113;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v114);
  v116 = OUTLINED_FUNCTION_285_0(v115, v145);
  v155 = v53;
  OUTLINED_FUNCTION_97((uint64_t)v116, v117);
  v188 = v53;
  OUTLINED_FUNCTION_143_0((uint64_t)v109, v162, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 16));
  v189[0] = v109;
  OUTLINED_FUNCTION_271_0();
  OUTLINED_FUNCTION_53_5(v118, v119, v120);
  v189[1] = v52;
  v121 = v179;
  OUTLINED_FUNCTION_258_0();
  OUTLINED_FUNCTION_202(v122, v123, v124);
  v189[2] = v121;
  OUTLINED_FUNCTION_183_0();
  OUTLINED_FUNCTION_20_16(v35, v169, v125);
  v190 = v35;
  OUTLINED_FUNCTION_242_0();
  OUTLINED_FUNCTION_236_0();
  OUTLINED_FUNCTION_20_16(v126, v127, v128);
  v191 = v121;
  OUTLINED_FUNCTION_246_0();
  v129 = OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_83(v129, v174, v130);
  v192 = v121;
  v131 = OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_53_5(v131, v173, v132);
  v193 = v121;
  v133 = v165;
  v134 = OUTLINED_FUNCTION_235_0();
  OUTLINED_FUNCTION_143_0(v134, v175[0], v135);
  v194 = v35;
  v136 = v170;
  v137 = OUTLINED_FUNCTION_220_0();
  OUTLINED_FUNCTION_202(v137, v175[2], v138);
  v195 = v53;
  v186[0] = v184[2];
  v186[1] = v184[1];
  v186[2] = v151;
  v187 = v154;
  OUTLINED_FUNCTION_305((uint64_t)v183);
  OUTLINED_FUNCTION_309_0((uint64_t)&v185);
  OUTLINED_FUNCTION_184_0((uint64_t)&v188);
  OUTLINED_FUNCTION_223_0(v177, (uint64_t)&v188, (void (*)(NSObject *, uint64_t))v175[3], 10, (uint64_t)v186, v176);
  OUTLINED_FUNCTION_154(v53, *(uint64_t (**)(uint64_t, uint64_t))(v136 + 8));
  OUTLINED_FUNCTION_125_0(v35, *(uint64_t (**)(uint64_t, uint64_t))(v133 + 8));
  v139 = OUTLINED_FUNCTION_266_0();
  OUTLINED_FUNCTION_55_0(v139, v140);
  OUTLINED_FUNCTION_167_0(v181, *(uint64_t (**)(uint64_t, uint64_t))(v52 + 8));
  OUTLINED_FUNCTION_97(v180, *(uint64_t (**)(uint64_t, _QWORD))(v183[1] + 8));
  OUTLINED_FUNCTION_130_1();
  OUTLINED_FUNCTION_97(v146, v141);
  OUTLINED_FUNCTION_97(v179, *(uint64_t (**)(uint64_t, _QWORD))(v148 + 8));
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v149, v142);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v152, v143);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v155, v144);
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.cachedWeather<A, B, C, D, E, F, G, H, I, J, K>(for:including:_:_:_:_:_:_:_:_:_:_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (**v118)(uint64_t, uint64_t);
  uint64_t v119;
  uint64_t (*v120)(uint64_t, _QWORD);
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(uint64_t, uint64_t, _QWORD);
  uint64_t v128;
  uint64_t v129;
  uint64_t (*v130)(uint64_t, uint64_t, _QWORD);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)(uint64_t, uint64_t, _QWORD);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t (*v140)(uint64_t, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t (*v142)(uint64_t, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t (*v144)(uint64_t, _QWORD);
  uint64_t v145;
  uint64_t (*v146)(uint64_t, _QWORD);
  uint64_t v147;
  uint64_t (*v148)(uint64_t, _QWORD);
  uint64_t (*v149)(uint64_t, _QWORD);
  _QWORD v150[3];
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t (**v158)(uint64_t, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD v176[3];
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180[3];
  NSObject *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD v196[7];
  _QWORD v197[4];
  _QWORD v198[12];

  OUTLINED_FUNCTION_6_2();
  a19 = v37;
  a20 = v38;
  v182 = v36;
  v176[2] = v39;
  v175 = v40;
  v173 = v41;
  v171 = v42;
  v169 = v43;
  v167 = v44;
  v165 = v45;
  v181 = v46;
  OUTLINED_FUNCTION_145_2(v47);
  OUTLINED_FUNCTION_215_0(v48);
  OUTLINED_FUNCTION_180(v49);
  OUTLINED_FUNCTION_146_1(v50);
  OUTLINED_FUNCTION_292_0(v51);
  OUTLINED_FUNCTION_214_0(v52);
  OUTLINED_FUNCTION_239_0(v53);
  v192 = a27;
  v151 = a28;
  v54 = a29;
  v155 = a29;
  v55 = a30;
  v161 = a30;
  v56 = a31;
  v162 = a31;
  v57 = a32;
  v166 = a32;
  v170 = a33;
  v174 = a34;
  v177 = a35;
  v179 = a36;
  v61 = OUTLINED_FUNCTION_22_14(v58, a36, v59, v60);
  OUTLINED_FUNCTION_78(v61, (uint64_t)v197);
  OUTLINED_FUNCTION_1_34(v62);
  MEMORY[0x1E0C80A78](v63);
  OUTLINED_FUNCTION_45_6();
  v172 = OUTLINED_FUNCTION_15_23(v64, v65, v66);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v172 - 8));
  MEMORY[0x1E0C80A78](v67);
  OUTLINED_FUNCTION_45_6();
  v168 = v68;
  v195 = OUTLINED_FUNCTION_177_0(v69, v70, v71, v72);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v195 - 8));
  MEMORY[0x1E0C80A78](v73);
  OUTLINED_FUNCTION_45_6();
  v194 = OUTLINED_FUNCTION_9_23(v74, v75, v76);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v194 - 8));
  MEMORY[0x1E0C80A78](v77);
  v187 = (uint64_t)v150 - v78;
  v191 = OUTLINED_FUNCTION_10_27(v79, v80, v81, v82);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v191 - 8));
  MEMORY[0x1E0C80A78](v83);
  v190 = OUTLINED_FUNCTION_8_24(v85, v86, (uint64_t)v150 - v84);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v190 - 8));
  MEMORY[0x1E0C80A78](v87);
  v184 = (uint64_t)v150 - v88;
  v188 = OUTLINED_FUNCTION_72_3(v89, v90, v91, v92);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v188 - 8));
  MEMORY[0x1E0C80A78](v93);
  OUTLINED_FUNCTION_113_1();
  v150[0] = v57;
  v96 = type metadata accessor for WeatherQuery(0, v54, v94, v95);
  v97 = *(_QWORD *)(v96 - 8);
  OUTLINED_FUNCTION_169_0(v96, (uint64_t)v176);
  v150[2] = v97;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v98);
  v183 = (uint64_t)v150 - v99;
  v104 = OUTLINED_FUNCTION_13_24(v100, v101, v102, v103);
  v105 = *(_QWORD *)(v104 - 8);
  OUTLINED_FUNCTION_170_0(v104, (uint64_t)&v178);
  v153 = v105;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v106);
  OUTLINED_FUNCTION_126_2();
  v152 = v56;
  v109 = OUTLINED_FUNCTION_54_5(0, v107, v108, (uint64_t)&a14);
  v110 = *(_QWORD *)(v109 - 8);
  v156 = v109;
  v157 = v110;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v111);
  OUTLINED_FUNCTION_289_0();
  v154 = v55;
  v114 = OUTLINED_FUNCTION_54_5(0, v112, v113, (uint64_t)&a15);
  v115 = *(_QWORD *)(v114 - 8);
  v159 = v114;
  v160 = v115;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v116);
  v118 = (uint64_t (**)(uint64_t, uint64_t))((char *)v150 - v117);
  v120 = *(uint64_t (**)(uint64_t, _QWORD))(v119 + 16);
  v158 = v118;
  OUTLINED_FUNCTION_97((uint64_t)v118, v120);
  v198[0] = v118;
  OUTLINED_FUNCTION_83(v55, v167, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 16));
  v198[1] = v55;
  OUTLINED_FUNCTION_317_0();
  OUTLINED_FUNCTION_315(v121, v122, v123);
  v198[2] = v56;
  v124 = v183;
  OUTLINED_FUNCTION_202(v183, v171, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 16));
  v198[3] = v124;
  OUTLINED_FUNCTION_20_16(v57, v173, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v186 + 16));
  OUTLINED_FUNCTION_293_0();
  OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_271_0();
  OUTLINED_FUNCTION_20_16(v125, v126, v127);
  v198[5] = v124;
  OUTLINED_FUNCTION_183_0();
  v128 = OUTLINED_FUNCTION_350();
  OUTLINED_FUNCTION_20_16(v128, v129, v130);
  v198[6] = v124;
  OUTLINED_FUNCTION_320_0();
  v131 = v187;
  OUTLINED_FUNCTION_258_0();
  OUTLINED_FUNCTION_20_16(v132, v133, v134);
  v198[7] = v131;
  v135 = v164;
  v136 = v163;
  OUTLINED_FUNCTION_20_16(v163, v178, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v164 + 16));
  v198[8] = v136;
  OUTLINED_FUNCTION_227_0();
  v137 = v168;
  OUTLINED_FUNCTION_236_0();
  OUTLINED_FUNCTION_163(v138, v139, v140);
  v198[9] = v137;
  OUTLINED_FUNCTION_246_0();
  v141 = OUTLINED_FUNCTION_220_0();
  OUTLINED_FUNCTION_143_0(v141, v180[0], v142);
  v198[10] = v105;
  OUTLINED_FUNCTION_96_2(v193);
  v196[1] = v192;
  v196[2] = v151;
  OUTLINED_FUNCTION_221_0((uint64_t)v180);
  v196[5] = v143;
  v196[6] = v166;
  OUTLINED_FUNCTION_308_0((uint64_t)&v193);
  v197[2] = v177;
  v197[3] = v179;
  OUTLINED_FUNCTION_223_0(v181, (uint64_t)v198, (void (*)(NSObject *, uint64_t))v180[1], 11, (uint64_t)v196, v180[2]);
  OUTLINED_FUNCTION_125_0(v105, *(uint64_t (**)(uint64_t, uint64_t))(v55 + 8));
  OUTLINED_FUNCTION_122(v137, v118[1]);
  OUTLINED_FUNCTION_97(v136, *(uint64_t (**)(uint64_t, _QWORD))(v135 + 8));
  OUTLINED_FUNCTION_97(v187, *(uint64_t (**)(uint64_t, _QWORD))(v109 + 8));
  OUTLINED_FUNCTION_130_1();
  OUTLINED_FUNCTION_97(v185, v144);
  OUTLINED_FUNCTION_97(v184, *(uint64_t (**)(uint64_t, _QWORD))(v189 + 8));
  v145 = OUTLINED_FUNCTION_346();
  OUTLINED_FUNCTION_97(v145, v146);
  v147 = OUTLINED_FUNCTION_343();
  OUTLINED_FUNCTION_97(v147, v148);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v152, v149);
  OUTLINED_FUNCTION_97(v154, *(uint64_t (**)(uint64_t, _QWORD))(v157 + 8));
  OUTLINED_FUNCTION_97((uint64_t)v158, *(uint64_t (**)(uint64_t, _QWORD))(v160 + 8));
  OUTLINED_FUNCTION_0_0();
}

void WeatherService.cachedWeather<A, B, C, D, E, F, G, H, I, J, K, L>(for:including:_:_:_:_:_:_:_:_:_:_:_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t (*v132)(uint64_t, _QWORD);
  uint64_t v133;
  uint64_t (*v134)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v135)(uint64_t, uint64_t, _QWORD);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t (*v139)(uint64_t, uint64_t, _QWORD);
  uint64_t v140;
  uint64_t v141;
  uint64_t (*v142)(uint64_t, uint64_t, _QWORD);
  uint64_t v143;
  uint64_t (*v144)(uint64_t, uint64_t, _QWORD);
  uint64_t v145;
  uint64_t v146;
  uint64_t (*v147)(uint64_t, uint64_t, uint64_t);
  uint64_t v148;
  uint64_t (*v149)(uint64_t, uint64_t, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t (*v152)(uint64_t, uint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  uint64_t (*v155)(uint64_t, _QWORD);
  uint64_t (*v156)(uint64_t, _QWORD);
  uint64_t v157;
  uint64_t (*v158)(uint64_t, _QWORD);
  uint64_t (*v159)(uint64_t, _QWORD);
  uint64_t v160;
  uint64_t (*v161)(uint64_t, _QWORD);
  uint64_t v162;
  uint64_t (*v163)(uint64_t, _QWORD);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195[2];
  uint64_t v196;
  uint64_t v197;
  void (*v198)(NSObject *, uint64_t);
  uint64_t v199;
  NSObject *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD v217[8];
  _QWORD v218[4];
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;

  OUTLINED_FUNCTION_6_2();
  a19 = v40;
  a20 = v41;
  v201 = v38;
  v190 = v42;
  v188 = v43;
  v186 = v44;
  v185 = v45;
  v182 = v46;
  v181 = v47;
  v179 = v48;
  v200 = v49;
  OUTLINED_FUNCTION_214_0(v50);
  OUTLINED_FUNCTION_292_0(v51);
  OUTLINED_FUNCTION_145_2(v52);
  OUTLINED_FUNCTION_215_0(v53);
  OUTLINED_FUNCTION_180(v54);
  OUTLINED_FUNCTION_146_1(v55);
  v189 = v56;
  OUTLINED_FUNCTION_239_0(a27);
  v214 = a28;
  v212 = a29;
  v170 = a30;
  v57 = a31;
  v175 = a31;
  v177 = a32;
  v178 = a33;
  v180 = a34;
  v58 = a35;
  v184 = a35;
  v59 = a36;
  v187 = a36;
  v194 = a37;
  v196 = a38;
  v63 = OUTLINED_FUNCTION_22_14(v60, a38, v61, v62);
  OUTLINED_FUNCTION_78(v63, (uint64_t)v217);
  OUTLINED_FUNCTION_1_34(v64);
  MEMORY[0x1E0C80A78](v65);
  OUTLINED_FUNCTION_45_6();
  v69 = OUTLINED_FUNCTION_8_24(v66, v67, v68);
  OUTLINED_FUNCTION_78(v69, (uint64_t)&v213);
  OUTLINED_FUNCTION_1_34(v70);
  MEMORY[0x1E0C80A78](v71);
  OUTLINED_FUNCTION_45_6();
  v75 = OUTLINED_FUNCTION_73_3(v72, v73, v74);
  OUTLINED_FUNCTION_78(v75, (uint64_t)&v207);
  OUTLINED_FUNCTION_1_34(v76);
  MEMORY[0x1E0C80A78](v77);
  v211 = (uint64_t)&v164 - v78;
  v83 = OUTLINED_FUNCTION_13_24(v79, v80, v81, v82);
  OUTLINED_FUNCTION_78(v83, (uint64_t)&a14);
  OUTLINED_FUNCTION_1_34(v84);
  MEMORY[0x1E0C80A78](v85);
  v89 = OUTLINED_FUNCTION_74_3(v87, v88, (uint64_t)&v164 - v86);
  OUTLINED_FUNCTION_78(v89, (uint64_t)&a12);
  OUTLINED_FUNCTION_1_34(v90);
  MEMORY[0x1E0C80A78](v91);
  v204 = (char *)&v164 - v92;
  v210 = OUTLINED_FUNCTION_10_27(v93, v94, v95, v96);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v210 - 8));
  MEMORY[0x1E0C80A78](v97);
  v208 = OUTLINED_FUNCTION_19_16(v99, v100, (uint64_t)&v164 - v98);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v208 - 8));
  MEMORY[0x1E0C80A78](v101);
  v205 = OUTLINED_FUNCTION_15_23(v103, v104, (uint64_t)&v164 - v102);
  OUTLINED_FUNCTION_1_34(*(_QWORD *)(v205 - 8));
  MEMORY[0x1E0C80A78](v105);
  OUTLINED_FUNCTION_273_0();
  v165 = v39;
  v110 = OUTLINED_FUNCTION_14_26(v106, v107, v108, v109);
  v111 = *(_QWORD *)(v110 - 8);
  v166 = v110;
  v167 = v111;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v112);
  v114 = OUTLINED_FUNCTION_64((uint64_t)&v164 - v113);
  v117 = OUTLINED_FUNCTION_54_5(v114, v115, v116, (uint64_t)&a10);
  v118 = *(_QWORD *)(v117 - 8);
  OUTLINED_FUNCTION_274_0(v117, (uint64_t)&v193);
  v169 = v118;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v119);
  OUTLINED_FUNCTION_213_0();
  v168 = v58;
  v122 = OUTLINED_FUNCTION_54_5(0, v120, v121, (uint64_t)&a13);
  v123 = *(_QWORD *)(v122 - 8);
  v172 = v122;
  v173 = v123;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v124);
  OUTLINED_FUNCTION_175_0();
  v171 = v57;
  OUTLINED_FUNCTION_54_5(0, v125, v126, (uint64_t)&a15);
  OUTLINED_FUNCTION_174_0();
  OUTLINED_FUNCTION_52_4(v127);
  v176 = v128;
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v129);
  v131 = OUTLINED_FUNCTION_285_0(v130, v164);
  v174 = v59;
  OUTLINED_FUNCTION_97((uint64_t)v131, v132);
  v218[0] = v59;
  OUTLINED_FUNCTION_53_5(v57, v181, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v123 + 16));
  v218[1] = v57;
  OUTLINED_FUNCTION_163(v58, v182, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 16));
  v218[2] = v58;
  v133 = OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_83(v133, v185, v134);
  OUTLINED_FUNCTION_326_0();
  OUTLINED_FUNCTION_20_16(v39, v186, v135);
  v219 = v39;
  v136 = v202;
  OUTLINED_FUNCTION_317_0();
  OUTLINED_FUNCTION_20_16(v137, v138, v139);
  v220 = v136;
  v140 = v203;
  OUTLINED_FUNCTION_20_16(v203, v190, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v209 + 16));
  v221 = v140;
  v141 = OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_20_16(v141, v189, v142);
  v222 = v140;
  OUTLINED_FUNCTION_246_0();
  v143 = OUTLINED_FUNCTION_58_4();
  OUTLINED_FUNCTION_20_16(v143, v192, v144);
  v223 = v140;
  OUTLINED_FUNCTION_320_0();
  OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_271_0();
  OUTLINED_FUNCTION_315(v145, v146, v147);
  v224 = v111;
  OUTLINED_FUNCTION_217_0();
  v148 = v183;
  OUTLINED_FUNCTION_33_9(v183, v195[1], v149);
  v225 = v148;
  v150 = v191;
  v151 = OUTLINED_FUNCTION_365();
  OUTLINED_FUNCTION_49_6(v151, v197, v152);
  v226 = v57;
  v216 = v215;
  OUTLINED_FUNCTION_171_0(v214);
  OUTLINED_FUNCTION_96_2(v212);
  OUTLINED_FUNCTION_307_0((uint64_t)v195);
  v217[1] = v177;
  v217[2] = v178;
  OUTLINED_FUNCTION_348((uint64_t)&v210);
  v217[5] = v153;
  v217[6] = v194;
  v217[7] = v196;
  OUTLINED_FUNCTION_223_0(v200, (uint64_t)v218, v198, 12, (uint64_t)&v216, v199);
  OUTLINED_FUNCTION_146(v57, *(uint64_t (**)(uint64_t, uint64_t))(v150 + 8));
  OUTLINED_FUNCTION_375(v148, *(uint64_t (**)(uint64_t, uint64_t))(v122 + 8));
  OUTLINED_FUNCTION_36(v211, *(uint64_t (**)(uint64_t, uint64_t))(v110 + 8));
  OUTLINED_FUNCTION_97(v206, *(uint64_t (**)(uint64_t, _QWORD))(v123 + 8));
  v154 = OUTLINED_FUNCTION_347();
  OUTLINED_FUNCTION_97(v154, v155);
  OUTLINED_FUNCTION_97(v203, *(uint64_t (**)(uint64_t, _QWORD))(v209 + 8));
  OUTLINED_FUNCTION_97(v202, *(uint64_t (**)(uint64_t, _QWORD))(v207 + 8));
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v165, v156);
  v157 = OUTLINED_FUNCTION_345();
  OUTLINED_FUNCTION_97(v157, v158);
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v168, v159);
  v160 = OUTLINED_FUNCTION_346();
  OUTLINED_FUNCTION_97(v160, v161);
  v162 = OUTLINED_FUNCTION_344();
  OUTLINED_FUNCTION_97(v162, v163);
  OUTLINED_FUNCTION_0_0();
}

void sub_1A6062E0C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[6];
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v21 = a6;
  v22 = a7;
  v18[0] = a5;
  v20 = a4;
  v18[4] = a3;
  v18[3] = a2;
  v18[2] = a1;
  v23 = *v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE813928);
  v19 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v19 + 64);
  MEMORY[0x1E0C80A78](v8);
  v18[5] = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A6123260();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x1E0C80A78](v10);
  v26 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6123254();
  v31 = MEMORY[0x1E0DEE9D8];
  v12 = type metadata accessor for DayPrecipitationStatistics();
  sub_1A5FAF4C0(&qword_1ED190AF0, (void (*)(uint64_t))type metadata accessor for DayPrecipitationStatistics);
  v14 = v13;
  sub_1A5FAF4C0(&qword_1ED190AE0, (void (*)(uint64_t))type metadata accessor for DayPrecipitationStatistics);
  v16 = v15;
  sub_1A5FAF4C0(&qword_1ED190AE8, (void (*)(uint64_t))type metadata accessor for DayPrecipitationStatistics);
  v27 = v12;
  v28 = v14;
  v29 = v16;
  v30 = v17;
  type metadata accessor for DailyWeatherStatisticsQuery();
}

void sub_1A6062F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v16 = *(_QWORD *)(a1 - 8);
  v17 = MEMORY[0x1E0C80A78](a1);
  v19 = (char *)&a9 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))((char *)&a9 - v18, v10, a1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815558);
  sub_1A5FA3DEC(&qword_1EE815560, &qword_1EE815558);
  sub_1A600608C();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, a1);
  *(_QWORD *)(v14 - 176) = *(_QWORD *)(v14 - 296);
  *(_QWORD *)(v14 - 168) = v14 - 96;
  v20 = *(_QWORD *)(v14 - 280);
  *(_QWORD *)(v14 - 160) = *(_QWORD *)(v14 - 288);
  *(_QWORD *)(v14 - 152) = v20;
  v21 = *(_QWORD *)(v14 - 200);
  *(_QWORD *)(v14 - 144) = *(_QWORD *)(v14 - 272);
  *(_QWORD *)(v14 - 136) = v21;
  sub_1A61222DC();
  sub_1A612224C();
  *(_QWORD *)(v14 - 128) = v9;
  *(_QWORD *)(v14 - 120) = v12;
  *(_QWORD *)(v14 - 112) = v11;
  *(_QWORD *)(v14 - 104) = v13;
  type metadata accessor for DailyWeatherStatisticsQuery();
}

uint64_t sub_1A6063084(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  id v15;
  void *v16;

  v5 = *(_QWORD *)(v4 - 264);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v5, v1, a1);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 256) + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject();
  v9 = ((v7 + v2) & 0xFFFFFFFFFFFFFFF8) + v8;
  sub_1A606D5E0(v5, v8 + v7, qword_1EE813928);
  *(_BYTE *)(v8 + v7 + v2) = *(_DWORD *)(v4 - 244);
  v11 = *(_QWORD *)(v4 - 240);
  v10 = *(_QWORD *)(v4 - 232);
  *(_QWORD *)(v9 + 8) = v11;
  *(_QWORD *)(v9 + 16) = v10;
  v12 = v10;
  swift_retain();
  v13 = (void *)sub_1A61221E0();
  sub_1A6122210();
  swift_release();
  swift_release();

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v3;
  v14[3] = v11;
  v14[4] = v12;
  swift_retain();
  v15 = v3;
  v16 = (void *)sub_1A61221E0();
  sub_1A612221C();
  swift_release();
  swift_release();
  swift_release();

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 216) + 8))(*(_QWORD *)(v4 - 200), *(_QWORD *)(v4 - 208));
  return swift_bridgeObjectRelease();
}

void WeatherService.fetchDailyStatistics<each A>(for:start:end:shouldFilterOutLeapDay:including:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36[5];
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_163_0(v4, v5, v6, v7, v8);
  v42 = v11;
  v43 = v12;
  v47 = v9;
  v48 = v3;
  v49 = v14;
  v50 = v13;
  v41 = v15;
  v40 = v16;
  v51 = v10;
  v36[3] = v17;
  v36[2] = v18;
  if (v19)
  {
    OUTLINED_FUNCTION_35_13(*v10);
    type metadata accessor for DailyWeatherStatisticsQuery();
  }
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_22_11();
  if (v2)
  {
    OUTLINED_FUNCTION_164();
    OUTLINED_FUNCTION_57_6();
    type metadata accessor for DailyWeatherStatisticsQuery();
  }
  v44 = OUTLINED_FUNCTION_28_0();
  v20 = OUTLINED_FUNCTION_140_2(v44);
  MEMORY[0x1E0C80A78](v20);
  v21 = OUTLINED_FUNCTION_48_5((uint64_t)v36);
  v39 = v36;
  v38 = v21;
  v37 = *(_QWORD *)(v21 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v22);
  v24 = OUTLINED_FUNCTION_128_1(v23, v36[0]);
  v53 = MEMORY[0x1E0DEE9D8];
  v45 = 0;
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_59_6();
  sub_1A61222DC();
  v52 = OUTLINED_FUNCTION_303_0();
  if (v45)
  {
    OUTLINED_FUNCTION_138_1();
    OUTLINED_FUNCTION_87_2();
    type metadata accessor for DailyWeatherStatisticsQuery();
  }
  OUTLINED_FUNCTION_111_2();
  v25 = (_QWORD *)swift_allocObject();
  v26 = (char *)v25 + v1;
  v25[3] = OUTLINED_FUNCTION_99_2((uint64_t)v25);
  v25[4] = OUTLINED_FUNCTION_38_10();
  v25[5] = OUTLINED_FUNCTION_38_10();
  v27 = OUTLINED_FUNCTION_38_10();
  OUTLINED_FUNCTION_186_0(v27);
  *((_BYTE *)v25 + v0) = v40 & 1;
  v29 = v42;
  v28 = v43;
  *((_QWORD *)v26 + 1) = v42;
  *((_QWORD *)v26 + 2) = v28;
  OUTLINED_FUNCTION_53_0();
  v30 = (void *)sub_1A61221E0();
  OUTLINED_FUNCTION_120_2();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_22();

  v31 = (_QWORD *)OUTLINED_FUNCTION_3_2();
  v31[3] = OUTLINED_FUNCTION_99_2((uint64_t)v31);
  v31[4] = OUTLINED_FUNCTION_38_10();
  v31[5] = OUTLINED_FUNCTION_38_10();
  v32 = OUTLINED_FUNCTION_38_10();
  v33 = v47;
  v31[6] = v32;
  v31[7] = v33;
  v31[8] = v29;
  v31[9] = v28;
  OUTLINED_FUNCTION_53_0();
  v34 = v33;
  v35 = (void *)sub_1A61221E0();
  OUTLINED_FUNCTION_176();
  swift_release();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_22();

  OUTLINED_FUNCTION_97(v46, *(uint64_t (**)(uint64_t, _QWORD))(v37 + 8));
  OUTLINED_FUNCTION_260_0();
  OUTLINED_FUNCTION_197_0();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A6063538()
{
  return sub_1A6065FF0();
}

void sub_1A6063554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1A61222DC();
  MEMORY[0x1E0C80A78](v2);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815638);
  MEMORY[0x1E0C80A78](v1);
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813008);
  MEMORY[0x1E0C80A78](v0);
  type metadata accessor for DayPrecipitationStatistics();
  sub_1A5FAF4C0(&qword_1ED190AF0, (void (*)(uint64_t))type metadata accessor for DayPrecipitationStatistics);
  sub_1A5FAF4C0(&qword_1ED190AE0, (void (*)(uint64_t))type metadata accessor for DayPrecipitationStatistics);
  sub_1A5FAF4C0(&qword_1ED190AE8, (void (*)(uint64_t))type metadata accessor for DayPrecipitationStatistics);
  type metadata accessor for DailyWeatherStatisticsQuery();
}

void sub_1A60636C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v12[96];

  *(_QWORD *)(v5 - 160) = v12;
  v7 = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = &v12[-v9];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v7 + 16))(&v12[-v9], *(_QWORD *)(v5 - 152), a1, v8);
  sub_1A61222B8();
  v11 = *(_QWORD *)(v5 - 120);
  sub_1A600611C(v3, v1, a1);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 128) + 8))(v3, *(_QWORD *)(v5 - 72));
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, a1);
  if (!v11)
  {
    sub_1A606D5B0(v4, v2, &qword_1EE813008);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t))(v5 - 168))(v2);
    sub_1A5FAFD58(v2, &qword_1EE815638);
    sub_1A5FAFD58(v4, &qword_1EE813008);
  }
}

uint64_t sub_1A606380C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void (*a5)(char *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, unint64_t a11)
{
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t TupleTypeMetadata;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *);
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;

  v40 = a6;
  v41 = a5;
  LODWORD(v53) = a4;
  v52 = a2;
  v50 = a1;
  v12 = (uint64_t *)(a8 & 0xFFFFFFFFFFFFFFFELL);
  v13 = 8 * a7;
  v54 = 8 * a7;
  if (a7 == 1)
  {
    v14 = *(_QWORD *)(a9 & 0xFFFFFFFFFFFFFELL);
    v15 = *(_QWORD *)(a10 & 0xFFFFFFFFFFFFFELL);
    v16 = *(_QWORD *)(a11 & 0xFFFFFFFFFFFFFELL);
    v55 = *v12;
    v56 = v14;
    v57 = v15;
    v58 = v16;
    type metadata accessor for DailyWeatherStatistics();
  }
  v49 = a9;
  v51 = a10;
  v59 = a11;
  v47 = &v35;
  MEMORY[0x1E0C80A78](a1);
  v48 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a7)
  {
    v17 = *(_QWORD *)(v49 & 0xFFFFFFFFFFFFFFFELL);
    v18 = *(_QWORD *)(v51 & 0xFFFFFFFFFFFFFFFELL);
    v19 = *(_QWORD *)(v59 & 0xFFFFFFFFFFFFFFFELL);
    v55 = *v12;
    v56 = v17;
    v57 = v18;
    v58 = v19;
    type metadata accessor for DailyWeatherStatistics();
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v21 = v54;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED193C90);
  v22 = sub_1A6123DB8();
  v45 = &v35;
  v39 = v22;
  v38 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v37 = (char *)&v35 - v23;
  v24 = sub_1A61222DC();
  v44 = &v35;
  v48 = *(char **)(v24 - 8);
  v49 = v24;
  MEMORY[0x1E0C80A78](v24);
  v43 = &v35;
  v46 = TupleTypeMetadata;
  v36 = *(_QWORD *)(TupleTypeMetadata - 8);
  MEMORY[0x1E0C80A78](v25);
  v51 = (unint64_t)&v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = &v35;
  v28 = MEMORY[0x1E0C80A78](v27);
  v59 = (unint64_t)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v36;
  v30 = v37;
  v31 = v51;
  v32 = v46;
  (*(void (**)(char *, unint64_t, uint64_t, __n128))(v36 + 16))(v37, v51, v46, v28);
  v33 = v39;
  swift_storeEnumTagMultiPayload();
  v41(v30);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v33);
  return (*(uint64_t (**)(unint64_t, uint64_t))(v29 + 8))(v31, v32);
}

void sub_1A6063E54()
{
  objectdestroy_23Tm();
}

void sub_1A6063E60(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A6066A4C(a1, a2, (uint64_t (*)(uint64_t))type metadata accessor for DailyWeatherStatisticsQuery, (void (*)(uint64_t, uint64_t, char *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A606380C, a3);
}

uint64_t sub_1A6063E88(uint64_t a1)
{
  return sub_1A606586C(a1, type metadata accessor for DailyWeatherStatistics, "Encountered an error when fetching daily statistics. location=%{private,mask.hash}@, error=%{public}s");
}

void sub_1A6063E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v23[0] = a8;
  v33 = a7;
  v31 = a6;
  v23[6] = a5;
  v23[5] = a4;
  v23[3] = a3;
  v23[2] = a2;
  v41 = a1;
  v35 = a10;
  v34 = a9;
  v36 = *v10;
  v30 = sub_1A61220A8();
  v40 = *(_QWORD *)(v30 - 8);
  v32 = *(_QWORD *)(v40 + 64);
  MEMORY[0x1E0C80A78](v30);
  v28 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1A6121F58();
  v39 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v39 + 64);
  MEMORY[0x1E0C80A78](v27);
  v23[4] = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE813D80);
  v24 = *(_QWORD *)(v13 - 8);
  v25 = *(_QWORD *)(v24 + 64);
  MEMORY[0x1E0C80A78](v13);
  v23[1] = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A6123260();
  v37 = *(_QWORD *)(v15 - 8);
  v38 = v15;
  MEMORY[0x1E0C80A78](v15);
  v26 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6123254();
  v46 = MEMORY[0x1E0DEE9D8];
  v17 = type metadata accessor for DayPrecipitationSummary();
  sub_1A5FAF4C0(&qword_1ED191850, (void (*)(uint64_t))type metadata accessor for DayPrecipitationSummary);
  v19 = v18;
  sub_1A5FAF4C0(&qword_1ED191C78, (void (*)(uint64_t))type metadata accessor for DayPrecipitationSummary);
  v21 = v20;
  sub_1A5FAF4C0(&qword_1ED191C80, (void (*)(uint64_t))type metadata accessor for DayPrecipitationSummary);
  v42 = v17;
  v43 = v19;
  v44 = v21;
  v45 = v22;
  type metadata accessor for DailyWeatherSummaryQuery();
}

void sub_1A60640F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v17 = *(_QWORD *)(a1 - 8);
  v18 = MEMORY[0x1E0C80A78](a1);
  v20 = (char *)&a9 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))((char *)&a9 - v19, v12, a1, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815558);
  sub_1A5FA3DEC(&qword_1EE815560, &qword_1EE815558);
  sub_1A6032784();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, a1);
  *(_QWORD *)(v15 - 192) = *(_QWORD *)(v15 - 224);
  *(_QWORD *)(v15 - 184) = v15 - 96;
  v21 = *(_QWORD *)(v15 - 400);
  *(_QWORD *)(v15 - 176) = *(_QWORD *)(v15 - 216);
  *(_QWORD *)(v15 - 168) = v21;
  v22 = *(_QWORD *)(v15 - 376);
  *(_QWORD *)(v15 - 160) = *(_QWORD *)(v15 - 392);
  *(_QWORD *)(v15 - 152) = v22;
  *(_QWORD *)(v15 - 144) = *(_QWORD *)(v15 - 368);
  *(_QWORD *)(v15 - 136) = v10;
  sub_1A6122B70();
  *(_QWORD *)(v15 - 368) = sub_1A612224C();
  *(_QWORD *)(v15 - 128) = v9;
  *(_QWORD *)(v15 - 120) = v13;
  *(_QWORD *)(v15 - 112) = v14;
  *(_QWORD *)(v15 - 104) = v11;
  type metadata accessor for DailyWeatherSummaryQuery();
}

uint64_t sub_1A6064200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  id v22;
  void *v23;

  v3 = *(_QWORD *)(v2 - 408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v3, v1, a1);
  v4 = *(_QWORD *)(v2 - 240);
  v5 = *(_QWORD *)(v2 - 384);
  v6 = *(_QWORD *)(v2 - 336);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v5, *(_QWORD *)(v2 - 304), v6);
  v7 = *(_QWORD *)(v2 - 232);
  v8 = *(_QWORD *)(v2 - 328);
  v9 = *(_QWORD *)(v2 - 312);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 16))(v8, *(_QWORD *)(v2 - 288), v9);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 360) + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = (*(_QWORD *)(v2 - 352) + *(unsigned __int8 *)(v4 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v13 = (*(_QWORD *)(v2 - 320) + *(unsigned __int8 *)(v7 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = (*(_QWORD *)(v2 - 296) + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  sub_1A606D5E0(v3, v15 + v11, qword_1EE813D80);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 32))(v15 + v12, v5, v6);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 232) + 32))(v15 + v13, v8, v9);
  v16 = (_QWORD *)(v15 + v14);
  v17 = *(_QWORD *)(v2 - 280);
  v18 = *(_QWORD *)(v2 - 272);
  *v16 = v17;
  v16[1] = v18;
  swift_retain();
  v19 = (void *)sub_1A61221E0();
  sub_1A6122210();
  swift_release();
  swift_release();

  v20 = (_QWORD *)swift_allocObject();
  v21 = *(void **)(v2 - 216);
  v20[2] = v21;
  v20[3] = v17;
  v20[4] = v18;
  swift_retain();
  v22 = v21;
  v23 = (void *)sub_1A61221E0();
  sub_1A612221C();
  swift_release();
  swift_release();
  swift_release();

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 256) + 8))(*(_QWORD *)(v2 - 344), *(_QWORD *)(v2 - 248));
  return swift_bridgeObjectRelease();
}

void WeatherService.fetchDailySummary<each A>(for:start:end:startDate:timeZone:including:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  id v80;
  void *v81;
  uint64_t (*v82)(uint64_t, _QWORD);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  OUTLINED_FUNCTION_6_2();
  v101 = v28;
  v30 = v29;
  v32 = v31;
  v88 = v33;
  v87 = v34;
  v86 = v35;
  v85 = v36;
  v109 = v37;
  v107 = v27;
  v38 = *v27;
  v106 = OUTLINED_FUNCTION_114();
  v98 = *(_QWORD *)(v106 - 8);
  v39 = *(_QWORD *)(v98 + 64);
  MEMORY[0x1E0C80A78](v106);
  OUTLINED_FUNCTION_370((uint64_t)&v83);
  v40 = OUTLINED_FUNCTION_6();
  v41 = OUTLINED_FUNCTION_140_2(v40);
  MEMORY[0x1E0C80A78](v41);
  v110 = a23;
  v111 = a26;
  v112 = a27;
  v113 = a25;
  v108 = a24;
  v99 = v38;
  v97 = v42;
  v104 = (uint64_t)&v83 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = v30;
  v92 = v39;
  v91 = v32;
  v90 = v43;
  v102 = (uint64_t *)(a24 & 0xFFFFFFFFFFFFFFFELL);
  if (a23 == 1)
  {
    v44 = *(_QWORD *)(a25 & 0xFFFFFFFFFFFFFELL);
    v45 = *(_QWORD *)(a26 & 0xFFFFFFFFFFFFFELL);
    v46 = *(_QWORD *)(a27 & 0xFFFFFFFFFFFFFELL);
    v118 = *(_QWORD *)(a24 & 0xFFFFFFFFFFFFFFFELL);
    v119 = v44;
    v120 = v45;
    v121 = v46;
    OUTLINED_FUNCTION_224();
  }
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_70();
  if (a23)
  {
    v47 = *(_QWORD *)(v113 & 0xFFFFFFFFFFFFFFFELL);
    v48 = *(_QWORD *)(a26 & 0xFFFFFFFFFFFFFFFELL);
    v49 = *(_QWORD *)(a27 & 0xFFFFFFFFFFFFFFFELL);
    v118 = *v102;
    v119 = v47;
    v120 = v48;
    v121 = v49;
    type metadata accessor for DailyWeatherSummaryQuery();
  }
  v50 = v110;
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_239_0((uint64_t)&v83);
  v100 = v51;
  v89 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v84 = v52;
  v114 = (uint64_t)&v83 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1A6123260();
  v96 = &v83;
  v95 = v53;
  v94 = *(_QWORD *)(v53 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v54);
  OUTLINED_FUNCTION_283_0();
  v103 = v55;
  v56 = OUTLINED_FUNCTION_157_1();
  v117 = MEMORY[0x1E0DEE9D8];
  if (v50)
  {
    v116 = v113 & 0xFFFFFFFFFFFFFFFELL;
    v57 = *v102;
    v58 = *(_QWORD *)(v113 & 0xFFFFFFFFFFFFFFFELL);
    v116 = (v113 & 0xFFFFFFFFFFFFFFFELL) + 8;
    v59 = *(_QWORD *)(v111 & 0xFFFFFFFFFFFFFFFELL);
    v60 = *(_QWORD *)(v112 & 0xFFFFFFFFFFFFFFFELL);
    v118 = v57;
    v119 = v58;
    v120 = v59;
    v121 = v60;
    OUTLINED_FUNCTION_224();
  }
  v115 = a21;
  v116 = a22;
  MEMORY[0x1E0C80A78](v56);
  v61 = (char *)(&v83 - 10);
  *(&v83 - 8) = (uint64_t)v107;
  *(&v83 - 7) = (uint64_t)&v117;
  v62 = v85;
  *(&v83 - 6) = (uint64_t)v109;
  *(&v83 - 5) = v62;
  v63 = v87;
  *(&v83 - 4) = v86;
  *(&v83 - 3) = v63;
  v64 = v103;
  *(&v83 - 2) = v88;
  *(&v83 - 1) = v64;
  sub_1A6122B70();
  v88 = OUTLINED_FUNCTION_324_0();
  if (v110)
  {
    OUTLINED_FUNCTION_245();
    OUTLINED_FUNCTION_118_2();
    type metadata accessor for DailyWeatherSummaryQuery();
  }
  OUTLINED_FUNCTION_217_0();
  OUTLINED_FUNCTION_33_9(v104, v91, v65);
  v66 = v98;
  OUTLINED_FUNCTION_97(v105, *(uint64_t (**)(uint64_t, _QWORD))(v98 + 16));
  v67 = v89;
  v68 = (*(unsigned __int8 *)(v89 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  v69 = (v84 + *(unsigned __int8 *)(v32 + 80) + v68) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v70 = (v90 + *(unsigned __int8 *)(v66 + 80) + v69) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  v71 = (v92 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
  v72 = swift_allocObject();
  *(&v83 - 7) = OUTLINED_FUNCTION_230_0(v72);
  *(&v83 - 6) = OUTLINED_FUNCTION_195_0();
  *(&v83 - 5) = OUTLINED_FUNCTION_195_0();
  *(&v83 - 4) = OUTLINED_FUNCTION_195_0();
  OUTLINED_FUNCTION_20_16((uint64_t)&v61[v68], v114, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v67 + 32));
  OUTLINED_FUNCTION_33_9((uint64_t)&v61[v69], v104, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 32));
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(&v61[v70], v105, v106);
  v73 = &v61[v71];
  v75 = v115;
  v74 = v116;
  *(_QWORD *)v73 = v115;
  *((_QWORD *)v73 + 1) = v74;
  OUTLINED_FUNCTION_33_6();
  v76 = (void *)sub_1A61221E0();
  sub_1A6122210();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_38();

  v77 = OUTLINED_FUNCTION_3_2();
  *(&v83 - 7) = OUTLINED_FUNCTION_230_0(v77);
  *(&v83 - 6) = OUTLINED_FUNCTION_195_0();
  *(&v83 - 5) = OUTLINED_FUNCTION_195_0();
  v78 = OUTLINED_FUNCTION_195_0();
  v79 = v109;
  *(&v83 - 4) = v78;
  *(&v83 - 3) = (uint64_t)v79;
  *(&v83 - 2) = v75;
  *(&v83 - 1) = v74;
  OUTLINED_FUNCTION_33_6();
  v80 = v79;
  v81 = (void *)sub_1A61221E0();
  sub_1A612221C();
  swift_release();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_38();

  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v103, v82);
  OUTLINED_FUNCTION_260_0();
  OUTLINED_FUNCTION_197_0();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A6064AA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  swift_bridgeObjectRetain();
  objc_msgSend(a3, sel_coordinate);
  v4 = sub_1A612269C();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A6064B64()
{
  return sub_1A606CBC4();
}

void sub_1A6064B78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8155F8);
  MEMORY[0x1E0C80A78](v1);
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FD8);
  MEMORY[0x1E0C80A78](v0);
  type metadata accessor for DayPrecipitationSummary();
  sub_1A5FAF4C0(&qword_1ED191850, (void (*)(uint64_t))type metadata accessor for DayPrecipitationSummary);
  sub_1A5FAF4C0(&qword_1ED191C78, (void (*)(uint64_t))type metadata accessor for DayPrecipitationSummary);
  sub_1A5FAF4C0(&qword_1ED191C80, (void (*)(uint64_t))type metadata accessor for DayPrecipitationSummary);
  type metadata accessor for DailyWeatherSummaryQuery();
}

void sub_1A6064CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;

  v11 = *(_QWORD *)(a1 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))((char *)&a9 - v13, v9, a1, v12);
  sub_1A603280C();
}

void sub_1A6064D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v2);
  if (!v1)
  {
    sub_1A606D5B0(v4, v3, &qword_1EE812FD8);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t))(v6 - 136))(v3);
    sub_1A5FAFD58(v3, &qword_1EE8155F8);
    sub_1A5FAFD58(v4, &qword_1EE812FD8);
  }
}

uint64_t sub_1A6064DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, unint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t TupleTypeMetadata;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *);
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;

  v38 = a7;
  v39 = a6;
  v46 = a4;
  v47 = a5;
  v50 = a2;
  v45 = a1;
  v48 = (uint64_t *)(a9 & 0xFFFFFFFFFFFFFFFELL);
  if (a8 == 1)
  {
    v13 = *(_QWORD *)(a10 & 0xFFFFFFFFFFFFFELL);
    v14 = *(_QWORD *)(a11 & 0xFFFFFFFFFFFFFELL);
    v15 = *(_QWORD *)(a12 & 0xFFFFFFFFFFFFFELL);
    v52 = *(_QWORD *)(a9 & 0xFFFFFFFFFFFFFFFELL);
    v53 = v13;
    v54 = v14;
    v55 = v15;
    type metadata accessor for DailyWeatherSummary();
  }
  v49 = a11;
  v56 = a12;
  v43 = &v33;
  v44 = a10;
  MEMORY[0x1E0C80A78](a1);
  if (a8)
  {
    v16 = *(_QWORD *)(v44 & 0xFFFFFFFFFFFFFFFELL);
    v17 = *(_QWORD *)(v49 & 0xFFFFFFFFFFFFFFFELL);
    v18 = *(_QWORD *)(v56 & 0xFFFFFFFFFFFFFFFELL);
    v52 = *v48;
    v53 = v16;
    v54 = v17;
    v55 = v18;
    type metadata accessor for DailyWeatherSummary();
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v20 = v51;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED193C90);
  v21 = sub_1A6123DB8();
  v42 = &v33;
  v37 = v21;
  v36 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v34 = (char *)&v33 - v22;
  v41 = &v33;
  v43 = (uint64_t *)TupleTypeMetadata;
  v35 = *(_QWORD *)(TupleTypeMetadata - 8);
  MEMORY[0x1E0C80A78](v23);
  v49 = (unint64_t)&v33 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = &v33;
  v26 = MEMORY[0x1E0C80A78](v25);
  v56 = (unint64_t)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v35;
  v28 = v34;
  v29 = v49;
  v30 = v43;
  (*(void (**)(char *, unint64_t, uint64_t *, __n128))(v35 + 16))(v34, v49, v43, v26);
  v31 = v37;
  swift_storeEnumTagMultiPayload();
  v39(v28);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v31);
  return (*(uint64_t (**)(unint64_t, uint64_t *))(v27 + 8))(v29, v30);
}

void sub_1A6065320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_279_0();
  if (v4)
  {
    OUTLINED_FUNCTION_36_11(*v2);
    type metadata accessor for DailyWeatherSummaryQuery();
  }
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_24();
  if (v0)
  {
    OUTLINED_FUNCTION_275_0();
    OUTLINED_FUNCTION_168();
    type metadata accessor for DailyWeatherSummaryQuery();
  }
  v5 = *(_QWORD *)(OUTLINED_FUNCTION_28_0() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v13 = OUTLINED_FUNCTION_6();
  v8 = *(_QWORD *)(v13 - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_QWORD *)(OUTLINED_FUNCTION_114() - 8);
  v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  OUTLINED_FUNCTION_318_0(v1 + v6, *(uint64_t (**)(uint64_t, _QWORD))(v5 + 8));
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v1 + v9, v13);
  OUTLINED_FUNCTION_122(v1 + v12, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  OUTLINED_FUNCTION_90_2();
  swift_deallocObject();
  OUTLINED_FUNCTION_0_0();
}

void sub_1A6065460(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = v3[2];
  v5 = v3[3];
  v7 = (uint64_t *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  v9 = v3[4];
  v8 = v3[5];
  v10 = v3[6];
  v29 = a2;
  v27 = v5;
  v28 = a1;
  if (v6 == 1)
  {
    v11 = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFFELL);
    v30 = *v7;
    v31 = v11;
    OUTLINED_FUNCTION_263_0();
    type metadata accessor for DailyWeatherSummaryQuery();
  }
  v24 = v10;
  v25 = v8;
  v26 = v9;
  v23[1] = v23;
  v23[2] = a3;
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_12();
  if (v6)
  {
    OUTLINED_FUNCTION_194_0(*v7);
    type metadata accessor for DailyWeatherSummaryQuery();
  }
  v12 = OUTLINED_FUNCTION_28_0();
  v13 = v25;
  v14 = v26;
  v15 = v24;
  v16 = *(_QWORD *)(v12 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = *(_QWORD *)(v16 + 64);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_369();
  v20 = (v17 + v18 + v19) & ~v19;
  sub_1A61220A8();
  OUTLINED_FUNCTION_369();
  OUTLINED_FUNCTION_269_0();
  sub_1A6064DB4(v28, v29, (uint64_t)v3 + v17, (uint64_t)v3 + v20, (uint64_t)v3 + v21, *(void (**)(char *))((char *)v3 + v22), *(_QWORD *)((char *)v3 + v22 + 8), 0, v27, v14, v13, v15);
  OUTLINED_FUNCTION_63_5();
}

void sub_1A60655F4()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  const char *v3;
  const char *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  void (*v8)(_QWORD *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  os_log_type_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_6_2();
  v4 = v3;
  v6 = v5;
  v8 = (void (*)(_QWORD *))v7;
  OUTLINED_FUNCTION_255_0(v9, v10, v7, v11, v5);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_7();
  if (qword_1ED193BE8 != -1)
    swift_once();
  v13 = OUTLINED_FUNCTION_24_1();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED19DB18);
  v14 = v0;
  OUTLINED_FUNCTION_125_2();
  v15 = v14;
  OUTLINED_FUNCTION_125_2();
  v16 = sub_1A6123554();
  v17 = sub_1A6123A40();
  if (os_log_type_enabled(v16, v17))
  {
    v23 = v17;
    v18 = OUTLINED_FUNCTION_16_2();
    v22 = (_QWORD *)OUTLINED_FUNCTION_26();
    v24 = OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_192_0(v24, 7.2226e-34);
    sub_1A6123A88();
    *(_WORD *)(v18 + 12) = 2113;
    v19 = v15;
    sub_1A6123A88();
    *v22 = v15;

    *(_WORD *)(v18 + 22) = 2082;
    swift_getErrorValue();
    v20 = OUTLINED_FUNCTION_315_0();
    OUTLINED_FUNCTION_372(v20, v21);
    sub_1A6123A88();
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_81_2();
    OUTLINED_FUNCTION_81_2();
    OUTLINED_FUNCTION_253(&dword_1A5F87000, v16, v23, v4, (uint8_t *)v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_8();
  }

  OUTLINED_FUNCTION_81_2();
  OUTLINED_FUNCTION_81_2();

  *v2 = v1;
  OUTLINED_FUNCTION_331_0();
  OUTLINED_FUNCTION_125_2();
  v8(v2);
  sub_1A5FAFD58((uint64_t)v2, v6);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A6065858(uint64_t a1)
{
  return sub_1A606586C(a1, type metadata accessor for DailyWeatherSummary, "Encountered an error when fetching daily summary. location=%{private,mask.hash}@, error=%{public}s");
}

#error "1A6065898: call analysis failed (funcsize=15)"

void sub_1A60658A8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[6];
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v21 = a6;
  v22 = a7;
  v18[0] = a5;
  v20 = a4;
  v18[4] = a3;
  v18[3] = a2;
  v18[2] = a1;
  v23 = *v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815640);
  v19 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v19 + 64);
  MEMORY[0x1E0C80A78](v8);
  v18[5] = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A6123260();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x1E0C80A78](v10);
  v26 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6123254();
  v31 = MEMORY[0x1E0DEE9D8];
  v12 = type metadata accessor for HourTemperatureStatistics();
  sub_1A5FAF4C0(&qword_1ED190AD8, (void (*)(uint64_t))type metadata accessor for HourTemperatureStatistics);
  v14 = v13;
  sub_1A5FAF4C0(&qword_1ED190AC8, (void (*)(uint64_t))type metadata accessor for HourTemperatureStatistics);
  v16 = v15;
  sub_1A5FAF4C0(&qword_1ED190AD0, (void (*)(uint64_t))type metadata accessor for HourTemperatureStatistics);
  v27 = v12;
  v28 = v14;
  v29 = v16;
  v30 = v17;
  type metadata accessor for HourlyWeatherStatisticsQuery();
}

void sub_1A6065A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v16 = *(_QWORD *)(a1 - 8);
  v17 = MEMORY[0x1E0C80A78](a1);
  v19 = (char *)&a9 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))((char *)&a9 - v18, v10, a1, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815558);
  sub_1A5FA3DEC(&qword_1EE815560, &qword_1EE815558);
  sub_1A600608C();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, a1);
  *(_QWORD *)(v14 - 176) = *(_QWORD *)(v14 - 296);
  *(_QWORD *)(v14 - 168) = v14 - 96;
  v20 = *(_QWORD *)(v14 - 280);
  *(_QWORD *)(v14 - 160) = *(_QWORD *)(v14 - 288);
  *(_QWORD *)(v14 - 152) = v20;
  v21 = *(_QWORD *)(v14 - 200);
  *(_QWORD *)(v14 - 144) = *(_QWORD *)(v14 - 272);
  *(_QWORD *)(v14 - 136) = v21;
  sub_1A6122348();
  sub_1A612224C();
  *(_QWORD *)(v14 - 128) = v9;
  *(_QWORD *)(v14 - 120) = v12;
  *(_QWORD *)(v14 - 112) = v11;
  *(_QWORD *)(v14 - 104) = v13;
  type metadata accessor for HourlyWeatherStatisticsQuery();
}

uint64_t sub_1A6065B20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  id v15;
  void *v16;

  v5 = *(_QWORD *)(v4 - 264);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v5, v1, a1);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 256) + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject();
  v9 = ((v7 + v2) & 0xFFFFFFFFFFFFFFF8) + v8;
  sub_1A606D5E0(v5, v8 + v7, &qword_1EE815640);
  *(_BYTE *)(v8 + v7 + v2) = *(_DWORD *)(v4 - 244);
  v11 = *(_QWORD *)(v4 - 240);
  v10 = *(_QWORD *)(v4 - 232);
  *(_QWORD *)(v9 + 8) = v11;
  *(_QWORD *)(v9 + 16) = v10;
  v12 = v10;
  swift_retain();
  v13 = (void *)sub_1A61221E0();
  sub_1A6122210();
  swift_release();
  swift_release();

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v3;
  v14[3] = v11;
  v14[4] = v12;
  swift_retain();
  v15 = v3;
  v16 = (void *)sub_1A61221E0();
  sub_1A612221C();
  swift_release();
  swift_release();
  swift_release();

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 216) + 8))(*(_QWORD *)(v4 - 200), *(_QWORD *)(v4 - 208));
  return swift_bridgeObjectRelease();
}

void WeatherService.fetchHourlyStatistics<each A>(for:start:end:shouldFilterOutLeapDay:including:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36[5];
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_163_0(v4, v5, v6, v7, v8);
  v42 = v11;
  v43 = v12;
  v47 = v9;
  v48 = v3;
  v49 = v14;
  v50 = v13;
  v41 = v15;
  v40 = v16;
  v51 = v10;
  v36[3] = v17;
  v36[2] = v18;
  if (v19)
  {
    OUTLINED_FUNCTION_35_13(*v10);
    type metadata accessor for HourlyWeatherStatisticsQuery();
  }
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_22_11();
  if (v2)
  {
    OUTLINED_FUNCTION_164();
    OUTLINED_FUNCTION_57_6();
    type metadata accessor for HourlyWeatherStatisticsQuery();
  }
  v44 = OUTLINED_FUNCTION_28_0();
  v20 = OUTLINED_FUNCTION_140_2(v44);
  MEMORY[0x1E0C80A78](v20);
  v21 = OUTLINED_FUNCTION_48_5((uint64_t)v36);
  v39 = v36;
  v38 = v21;
  v37 = *(_QWORD *)(v21 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v22);
  v24 = OUTLINED_FUNCTION_128_1(v23, v36[0]);
  v53 = MEMORY[0x1E0DEE9D8];
  v45 = 0;
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_59_6();
  sub_1A6122348();
  v52 = OUTLINED_FUNCTION_303_0();
  if (v45)
  {
    OUTLINED_FUNCTION_138_1();
    OUTLINED_FUNCTION_87_2();
    type metadata accessor for HourlyWeatherStatisticsQuery();
  }
  OUTLINED_FUNCTION_111_2();
  v25 = (_QWORD *)swift_allocObject();
  v26 = (char *)v25 + v1;
  v25[3] = OUTLINED_FUNCTION_99_2((uint64_t)v25);
  v25[4] = OUTLINED_FUNCTION_38_10();
  v25[5] = OUTLINED_FUNCTION_38_10();
  v27 = OUTLINED_FUNCTION_38_10();
  OUTLINED_FUNCTION_186_0(v27);
  *((_BYTE *)v25 + v0) = v40 & 1;
  v29 = v42;
  v28 = v43;
  *((_QWORD *)v26 + 1) = v42;
  *((_QWORD *)v26 + 2) = v28;
  OUTLINED_FUNCTION_53_0();
  v30 = (void *)sub_1A61221E0();
  OUTLINED_FUNCTION_120_2();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_22();

  v31 = (_QWORD *)OUTLINED_FUNCTION_3_2();
  v31[3] = OUTLINED_FUNCTION_99_2((uint64_t)v31);
  v31[4] = OUTLINED_FUNCTION_38_10();
  v31[5] = OUTLINED_FUNCTION_38_10();
  v32 = OUTLINED_FUNCTION_38_10();
  v33 = v47;
  v31[6] = v32;
  v31[7] = v33;
  v31[8] = v29;
  v31[9] = v28;
  OUTLINED_FUNCTION_53_0();
  v34 = v33;
  v35 = (void *)sub_1A61221E0();
  OUTLINED_FUNCTION_176();
  swift_release();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_22();

  OUTLINED_FUNCTION_97(v46, *(uint64_t (**)(uint64_t, _QWORD))(v37 + 8));
  OUTLINED_FUNCTION_260_0();
  OUTLINED_FUNCTION_197_0();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A6065FD4()
{
  return sub_1A6065FF0();
}

uint64_t sub_1A6065FF0()
{
  _QWORD *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v0 = (_QWORD *)OUTLINED_FUNCTION_264_0();
  return sub_1A60675A8(v0, v1, v2, v3, v4, v5, v6);
}

void sub_1A606600C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1A6122348();
  MEMORY[0x1E0C80A78](v2);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815660);
  MEMORY[0x1E0C80A78](v1);
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190A10);
  MEMORY[0x1E0C80A78](v0);
  type metadata accessor for HourTemperatureStatistics();
  sub_1A5FAF4C0(&qword_1ED190AD8, (void (*)(uint64_t))type metadata accessor for HourTemperatureStatistics);
  sub_1A5FAF4C0(&qword_1ED190AC8, (void (*)(uint64_t))type metadata accessor for HourTemperatureStatistics);
  sub_1A5FAF4C0(&qword_1ED190AD0, (void (*)(uint64_t))type metadata accessor for HourTemperatureStatistics);
  type metadata accessor for HourlyWeatherStatisticsQuery();
}

void sub_1A6066178(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v12[96];

  *(_QWORD *)(v5 - 160) = v12;
  v7 = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = &v12[-v9];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v7 + 16))(&v12[-v9], *(_QWORD *)(v5 - 152), a1, v8);
  sub_1A6122324();
  v11 = *(_QWORD *)(v5 - 120);
  sub_1A600611C(v3, v1, a1);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 128) + 8))(v3, *(_QWORD *)(v5 - 72));
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, a1);
  if (!v11)
  {
    sub_1A606D5B0(v4, v2, &qword_1ED190A10);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t))(v5 - 168))(v2);
    sub_1A5FAFD58(v2, &qword_1EE815660);
    sub_1A5FAFD58(v4, &qword_1ED190A10);
  }
}

uint64_t sub_1A60662C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void (*a5)(char *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, unint64_t a11)
{
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t TupleTypeMetadata;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *);
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;

  v40 = a6;
  v41 = a5;
  LODWORD(v53) = a4;
  v52 = a2;
  v50 = a1;
  v12 = (uint64_t *)(a8 & 0xFFFFFFFFFFFFFFFELL);
  v13 = 8 * a7;
  v54 = 8 * a7;
  if (a7 == 1)
  {
    v14 = *(_QWORD *)(a9 & 0xFFFFFFFFFFFFFELL);
    v15 = *(_QWORD *)(a10 & 0xFFFFFFFFFFFFFELL);
    v16 = *(_QWORD *)(a11 & 0xFFFFFFFFFFFFFELL);
    v55 = *v12;
    v56 = v14;
    v57 = v15;
    v58 = v16;
    type metadata accessor for HourlyWeatherStatistics();
  }
  v49 = a9;
  v51 = a10;
  v59 = a11;
  v47 = &v35;
  MEMORY[0x1E0C80A78](a1);
  v48 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a7)
  {
    v17 = *(_QWORD *)(v49 & 0xFFFFFFFFFFFFFFFELL);
    v18 = *(_QWORD *)(v51 & 0xFFFFFFFFFFFFFFFELL);
    v19 = *(_QWORD *)(v59 & 0xFFFFFFFFFFFFFFFELL);
    v55 = *v12;
    v56 = v17;
    v57 = v18;
    v58 = v19;
    type metadata accessor for HourlyWeatherStatistics();
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v21 = v54;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED193C90);
  v22 = sub_1A6123DB8();
  v45 = &v35;
  v39 = v22;
  v38 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v37 = (char *)&v35 - v23;
  v24 = sub_1A6122348();
  v44 = &v35;
  v48 = *(char **)(v24 - 8);
  v49 = v24;
  MEMORY[0x1E0C80A78](v24);
  v43 = &v35;
  v46 = TupleTypeMetadata;
  v36 = *(_QWORD *)(TupleTypeMetadata - 8);
  MEMORY[0x1E0C80A78](v25);
  v51 = (unint64_t)&v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = &v35;
  v28 = MEMORY[0x1E0C80A78](v27);
  v59 = (unint64_t)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v36;
  v30 = v37;
  v31 = v51;
  v32 = v46;
  (*(void (**)(char *, unint64_t, uint64_t, __n128))(v36 + 16))(v37, v51, v46, v28);
  v33 = v39;
  swift_storeEnumTagMultiPayload();
  v41(v30);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v33);
  return (*(uint64_t (**)(unint64_t, uint64_t))(v29 + 8))(v31, v32);
}

void sub_1A606690C()
{
  objectdestroy_23Tm();
}

void objectdestroy_23Tm()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  _QWORD v24[4];

  OUTLINED_FUNCTION_6_2();
  v3 = v2;
  v4 = *(_QWORD *)(v0 + 16);
  v5 = (uint64_t *)(*(_QWORD *)(v0 + 24) & 0xFFFFFFFFFFFFFFFELL);
  if (v4 == 1)
  {
    v6 = OUTLINED_FUNCTION_36_11(*v5);
    v7 = v3(v6);
  }
  else
  {
    v23[1] = v23;
    MEMORY[0x1E0C80A78](v2);
    OUTLINED_FUNCTION_12();
    if (v4)
    {
      v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFELL);
      v12 = (uint64_t *)(v9 & 0xFFFFFFFFFFFFFFFELL);
      v13 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFELL);
      v14 = v1;
      v15 = v4;
      do
      {
        v17 = *v5++;
        v16 = v17;
        v19 = *v11++;
        v18 = v19;
        v21 = *v12++;
        v20 = v21;
        v22 = *v13++;
        v24[0] = v16;
        v24[1] = v18;
        v24[2] = v20;
        v24[3] = v22;
        *v14++ = ((uint64_t (*)(uint64_t, _QWORD *))v3)(255, v24);
        --v15;
      }
      while (v15);
    }
    v7 = OUTLINED_FUNCTION_28_0();
  }
  OUTLINED_FUNCTION_66(*(_QWORD *)(v7 - 8));
  swift_release();
  OUTLINED_FUNCTION_251_0();
  OUTLINED_FUNCTION_0_0();
}

void sub_1A6066A28(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1A6066A4C(a1, a2, (uint64_t (*)(uint64_t))type metadata accessor for HourlyWeatherStatisticsQuery, (void (*)(uint64_t, uint64_t, char *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A60662C4, a3);
}

void sub_1A6066A4C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, void (*a4)(uint64_t, uint64_t, char *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  char *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, char *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v21)(uint64_t, uint64_t, char *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, char *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v7 = a1;
  v9 = *((_QWORD *)v5 + 2);
  v8 = *((_QWORD *)v5 + 3);
  v10 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFELL);
  v11 = *((_QWORD *)v5 + 4);
  v12 = *((_QWORD *)v5 + 5);
  v13 = *((_QWORD *)v5 + 6);
  v43 = a5;
  v44 = a2;
  if (v9 == 1)
  {
    v14 = *(_QWORD *)(v11 & 0xFFFFFFFFFFFFFELL);
    v45 = *v10;
    v46 = v14;
    v15 = OUTLINED_FUNCTION_263_0();
    v17 = v16;
    v42 = 1;
    v19 = v18;
    v21 = v20;
    v22 = a3(v15);
    v23 = v44;
    v24 = v19;
    v9 = 1;
  }
  else
  {
    v40 = v13;
    v41 = v12;
    v42 = v11;
    v36 = a1;
    v37 = v8;
    v38 = a4;
    v35[1] = v35;
    MEMORY[0x1E0C80A78](a1);
    OUTLINED_FUNCTION_11_0();
    v39 = v25;
    if (v9)
    {
      v26 = v42 & 0xFFFFFFFFFFFFFFFELL;
      v27 = v41 & 0xFFFFFFFFFFFFFFFELL;
      v28 = v39;
      v29 = v40 & 0xFFFFFFFFFFFFFFFELL;
      v30 = v9;
      do
      {
        v31 = *v10++;
        v26 += 8;
        v27 += 8;
        v29 += 8;
        v32 = OUTLINED_FUNCTION_194_0(v31);
        *v28++ = a3(v32);
        --v30;
      }
      while (v30);
    }
    v22 = OUTLINED_FUNCTION_28_0();
    v7 = v36;
    v21 = v38;
    v8 = v37;
    v23 = v44;
    v24 = v41;
    v17 = v42;
    v13 = v40;
  }
  v33 = *(_QWORD *)(v22 - 8);
  v34 = (*(unsigned __int8 *)(v33 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v21(v7, v23, &v5[v34], v5[v34 + *(_QWORD *)(v33 + 64)], *(_QWORD *)&v5[((v34 + *(_QWORD *)(v33 + 64)) & 0xFFFFFFFFFFFFFFF8) + 8], *(_QWORD *)&v5[((v34 + *(_QWORD *)(v33 + 64)) & 0xFFFFFFFFFFFFFFF8) + 16], v9, v8, v17, v24, v13);
  OUTLINED_FUNCTION_63_5();
}

uint64_t sub_1A6066BE0(uint64_t a1)
{
  return sub_1A606586C(a1, type metadata accessor for HourlyWeatherStatistics, "Encountered an error when fetching hourly statistics. location=%{private,mask.hash}@, error=%{public}s");
}

void sub_1A6066BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[11];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v21 = a5;
  v22 = a6;
  v17[9] = a3;
  v17[8] = a2;
  v17[7] = a1;
  v23 = *v6;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815608);
  v7 = *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = v7;
  MEMORY[0x1E0C80A78](v18);
  v17[10] = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A6123260();
  v24 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  MEMORY[0x1E0C80A78](v9);
  v26 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6123254();
  v31 = MEMORY[0x1E0DEE9D8];
  v11 = type metadata accessor for MonthTemperatureStatistics();
  v17[5] = v11;
  sub_1A5FAF4C0(&qword_1ED190B18, (void (*)(uint64_t))type metadata accessor for MonthTemperatureStatistics);
  v13 = v12;
  v17[4] = v12;
  sub_1A5FAF4C0(&qword_1ED190B08, (void (*)(uint64_t))type metadata accessor for MonthTemperatureStatistics);
  v15 = v14;
  v17[3] = v14;
  sub_1A5FAF4C0(&qword_1ED190B10, (void (*)(uint64_t))type metadata accessor for MonthTemperatureStatistics);
  v17[2] = v16;
  v27 = v11;
  v28 = v13;
  v29 = v15;
  v30 = v16;
  type metadata accessor for MonthlyWeatherStatisticsQuery();
}

void sub_1A6066D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v12 = *(_QWORD *)(a1 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&a9 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))((char *)&a9 - v14, v9, a1, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815558);
  sub_1A5FA3DEC(&qword_1EE815560, &qword_1EE815558);
  sub_1A600608C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, a1);
  v16 = type metadata accessor for MonthPrecipitationStatistics();
  *(_QWORD *)(v10 - 344) = v16;
  sub_1A5FAF4C0(&qword_1ED190B30, (void (*)(uint64_t))type metadata accessor for MonthPrecipitationStatistics);
  v18 = v17;
  sub_1A5FAF4C0(&qword_1ED190B20, (void (*)(uint64_t))type metadata accessor for MonthPrecipitationStatistics);
  v20 = v19;
  sub_1A5FAF4C0(&qword_1ED190B28, (void (*)(uint64_t))type metadata accessor for MonthPrecipitationStatistics);
  *(_QWORD *)(v10 - 128) = v16;
  *(_QWORD *)(v10 - 120) = v18;
  *(_QWORD *)(v10 - 112) = v20;
  *(_QWORD *)(v10 - 104) = v21;
  type metadata accessor for MonthlyWeatherStatisticsQuery();
}

void sub_1A6066EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v12 = *(_QWORD *)(a1 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&a9 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))((char *)&a9 - v14, v9, a1, v13);
  sub_1A600608C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, a1);
  *(_QWORD *)(v10 - 176) = *(_QWORD *)(v10 - 304);
  *(_QWORD *)(v10 - 168) = v10 - 96;
  v16 = *(_QWORD *)(v10 - 288);
  *(_QWORD *)(v10 - 160) = *(_QWORD *)(v10 - 296);
  *(_QWORD *)(v10 - 152) = v16;
  v17 = *(_QWORD *)(v10 - 200);
  *(_QWORD *)(v10 - 144) = *(_QWORD *)(v10 - 280);
  *(_QWORD *)(v10 - 136) = v17;
  sub_1A6122570();
  sub_1A612224C();
  v18 = *(_QWORD *)(v10 - 320);
  *(_QWORD *)(v10 - 128) = *(_QWORD *)(v10 - 312);
  *(_QWORD *)(v10 - 120) = v18;
  v19 = *(_QWORD *)(v10 - 336);
  *(_QWORD *)(v10 - 112) = *(_QWORD *)(v10 - 328);
  *(_QWORD *)(v10 - 104) = v19;
  type metadata accessor for MonthlyWeatherStatisticsQuery();
}

void sub_1A6066F94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(*(_QWORD *)(v5 - 272), v1, a1);
  *(_QWORD *)(v5 - 128) = *(_QWORD *)(v5 - 344);
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v2;
  type metadata accessor for MonthlyWeatherStatisticsQuery();
}

uint64_t sub_1A6066FE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  id v15;
  void *v16;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 256) + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = (*(_QWORD *)(v5 - 248) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = swift_allocObject();
  sub_1A606D5E0(v3, v9 + v7, &qword_1EE815608);
  v10 = (_QWORD *)(v9 + v8);
  v12 = *(_QWORD *)(v5 - 240);
  v11 = *(_QWORD *)(v5 - 232);
  *v10 = v12;
  v10[1] = v11;
  swift_retain();
  v13 = (void *)sub_1A61221E0();
  sub_1A6122210();
  swift_release();
  swift_release();

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v4;
  v14[3] = v12;
  v14[4] = v11;
  swift_retain();
  v15 = v4;
  v16 = (void *)sub_1A61221E0();
  sub_1A612221C();
  swift_release();
  swift_release();
  swift_release();

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 216) + 8))(*(_QWORD *)(v5 - 200), *(_QWORD *)(v5 - 208));
  return swift_bridgeObjectRelease();
}

void WeatherService.fetchMonthlyStatistics<each A>(for:start:end:including:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  _QWORD *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t (*v52)(uint64_t, _QWORD);
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;

  OUTLINED_FUNCTION_6_2();
  v28 = v27;
  v62 = v29;
  v65 = v23;
  v66 = v25;
  v30 = *v23;
  v59 = v31;
  v60 = v32;
  v67 = a23;
  v68 = a22;
  v58 = v26;
  v69 = a21;
  v57 = v30;
  v71 = v26 & 0xFFFFFFFFFFFFFFFELL;
  v53[2] = v33;
  v53[1] = v34;
  if (v27 == 1)
  {
    OUTLINED_FUNCTION_35_13(*(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFFELL));
    type metadata accessor for MonthlyWeatherStatisticsQuery();
  }
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_22_11();
  if (v28)
  {
    OUTLINED_FUNCTION_57_6();
    type metadata accessor for MonthlyWeatherStatisticsQuery();
  }
  v61 = OUTLINED_FUNCTION_28_0();
  v54 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  OUTLINED_FUNCTION_48_5((uint64_t)v53);
  OUTLINED_FUNCTION_171_0((uint64_t)v53);
  v56 = v35;
  v55 = *(_QWORD *)(v35 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_283_0();
  v64 = v37;
  v38 = OUTLINED_FUNCTION_157_1();
  v73 = MEMORY[0x1E0DEE9D8];
  v63 = 0;
  MEMORY[0x1E0C80A78](v38);
  sub_1A6122570();
  v72 = OUTLINED_FUNCTION_303_0();
  if (v63)
  {
    OUTLINED_FUNCTION_118_2();
    type metadata accessor for MonthlyWeatherStatisticsQuery();
  }
  v39 = v54;
  v40 = (*(unsigned __int8 *)(v54 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v41 = (v53[0] + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  v42 = swift_allocObject();
  OUTLINED_FUNCTION_302_0(v42);
  *((_QWORD *)v24 + 3) = OUTLINED_FUNCTION_147_2();
  *((_QWORD *)v24 + 4) = OUTLINED_FUNCTION_38_10();
  *((_QWORD *)v24 + 5) = OUTLINED_FUNCTION_38_10();
  *((_QWORD *)v24 + 6) = OUTLINED_FUNCTION_38_10();
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(&v24[v40], v70, v61);
  v43 = &v24[v41];
  v45 = v59;
  v44 = v60;
  *(_QWORD *)v43 = v59;
  *((_QWORD *)v43 + 1) = v44;
  swift_retain();
  v46 = (void *)sub_1A61221E0();
  OUTLINED_FUNCTION_120_2();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_22();

  v47 = OUTLINED_FUNCTION_3_2();
  OUTLINED_FUNCTION_302_0(v47);
  *((_QWORD *)v24 + 3) = OUTLINED_FUNCTION_147_2();
  *((_QWORD *)v24 + 4) = OUTLINED_FUNCTION_38_10();
  *((_QWORD *)v24 + 5) = OUTLINED_FUNCTION_38_10();
  v48 = OUTLINED_FUNCTION_38_10();
  v49 = v66;
  *((_QWORD *)v24 + 6) = v48;
  *((_QWORD *)v24 + 7) = v49;
  *((_QWORD *)v24 + 8) = v45;
  *((_QWORD *)v24 + 9) = v44;
  swift_retain();
  v50 = v49;
  v51 = (void *)sub_1A61221E0();
  OUTLINED_FUNCTION_176();
  swift_release();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_22();

  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_97(v64, v52);
  OUTLINED_FUNCTION_260_0();
  OUTLINED_FUNCTION_197_0();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A60675A8(_QWORD *a1, uint64_t *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v13 = a1[5];
  v14 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v13);
  v15 = *a2;
  swift_bridgeObjectRetain();
  objc_msgSend(a3, sel_coordinate);
  v16 = a7(v15, a4, a5, a6, v13, v14);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1A606765C()
{
  return sub_1A6065FF0();
}

void sub_1A6067678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[10];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;

  v15[2] = a5;
  v15[3] = a4;
  v15[9] = a1;
  v15[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815618);
  MEMORY[0x1E0C80A78](v15[0]);
  v15[1] = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815578);
  MEMORY[0x1E0C80A78](v20);
  v27 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MonthTemperatureStatistics();
  sub_1A5FAF4C0(&qword_1ED190B18, (void (*)(uint64_t))type metadata accessor for MonthTemperatureStatistics);
  v18 = v9;
  sub_1A5FAF4C0(&qword_1ED190B08, (void (*)(uint64_t))type metadata accessor for MonthTemperatureStatistics);
  v17 = v10;
  sub_1A5FAF4C0(&qword_1ED190B10, (void (*)(uint64_t))type metadata accessor for MonthTemperatureStatistics);
  v16 = v11;
  v25 = a3;
  v15[8] = type metadata accessor for MonthPrecipitationStatistics();
  sub_1A5FAF4C0(&qword_1ED190B30, (void (*)(uint64_t))type metadata accessor for MonthPrecipitationStatistics);
  v15[7] = v12;
  sub_1A5FAF4C0(&qword_1ED190B20, (void (*)(uint64_t))type metadata accessor for MonthPrecipitationStatistics);
  v15[6] = v13;
  sub_1A5FAF4C0(&qword_1ED190B28, (void (*)(uint64_t))type metadata accessor for MonthPrecipitationStatistics);
  v15[5] = v14;
  v26 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE815608) + 48);
  v15[4] = *(_QWORD *)(a2 + OBJC_IVAR____TtC10WeatherKit14WeatherService_modelFactory);
  v21 = v19;
  v22 = v18;
  v23 = v17;
  v24 = v16;
  type metadata accessor for MonthlyWeatherStatisticsQuery();
}

void sub_1A606789C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[96];

  v7 = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = &v15[-v9];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v7 + 16))(&v15[-v9], v2, a1, v8);
  sub_1A6016670(*(_QWORD *)(v5 - 184), *(_QWORD *)(v5 - 224), a1);
  if (v1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, a1);
    if ((v3 & 1) == 0)
    {
      v13 = *(_QWORD *)(v5 - 160);
      *(_QWORD *)(v5 - 136) = *(_QWORD *)(v5 - 152);
      *(_QWORD *)(v5 - 128) = v13;
      v14 = *(_QWORD *)(v5 - 176);
      *(_QWORD *)(v5 - 120) = *(_QWORD *)(v5 - 168);
      *(_QWORD *)(v5 - 112) = v14;
      type metadata accessor for MonthlyWeatherStatistics();
    }
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, a1);
    if ((v4 & 1) == 0)
      JUMPOUT(0x1A6067838);
    v11 = *(_QWORD *)(v5 - 72);
    v12 = *(_QWORD *)(v5 - 248);
    sub_1A606D5B0(v11, v12, &qword_1EE815578);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t))(v5 - 232))(v12);
    sub_1A5FAFD58(v12, &qword_1EE815618);
    sub_1A5FAFD58(v11, &qword_1EE815578);
  }
}

uint64_t sub_1A6067A04(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, unint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *);
  uint64_t *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v49 = a3;
  v37 = a5;
  v38 = a4;
  v47 = a2;
  v48 = 8 * a6;
  v44 = a1;
  v45 = (uint64_t *)(a7 & 0xFFFFFFFFFFFFFFFELL);
  if (a6 == 1)
  {
    v11 = *(_QWORD *)(a8 & 0xFFFFFFFFFFFFFELL);
    v12 = *(_QWORD *)(a9 & 0xFFFFFFFFFFFFFELL);
    v13 = *(_QWORD *)(a10 & 0xFFFFFFFFFFFFFELL);
    v50 = *(_QWORD *)(a7 & 0xFFFFFFFFFFFFFFFELL);
    v51 = v11;
    v52 = v12;
    v53 = v13;
    type metadata accessor for MonthlyWeatherStatistics();
  }
  v46 = a9;
  v54 = a10;
  v43 = &v32;
  MEMORY[0x1E0C80A78](a1);
  if (a6)
  {
    v15 = *(_QWORD *)(a8 & 0xFFFFFFFFFFFFFFFELL);
    v16 = *(_QWORD *)(v46 & 0xFFFFFFFFFFFFFFFELL);
    v17 = *(_QWORD *)(v54 & 0xFFFFFFFFFFFFFFFELL);
    v50 = *v45;
    v51 = v15;
    v52 = v16;
    v53 = v17;
    type metadata accessor for MonthlyWeatherStatistics();
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v19 = v48;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED193C90);
  v20 = sub_1A6123DB8();
  v41 = &v32;
  v35 = *(_QWORD *)(v20 - 8);
  v36 = v20;
  MEMORY[0x1E0C80A78](v20);
  v33 = (char *)&v32 - v21;
  v40 = &v32;
  v42 = TupleTypeMetadata;
  v34 = *(_QWORD *)(TupleTypeMetadata - 8);
  MEMORY[0x1E0C80A78](v22);
  v46 = (unint64_t)&v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = &v32;
  v25 = MEMORY[0x1E0C80A78](v24);
  v54 = (unint64_t)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v34;
  v27 = v33;
  v28 = v46;
  v29 = v42;
  (*(void (**)(char *, unint64_t, uint64_t, __n128))(v34 + 16))(v33, v46, v42, v25);
  v30 = v36;
  swift_storeEnumTagMultiPayload();
  v38(v27);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v27, v30);
  return (*(uint64_t (**)(unint64_t, uint64_t))(v26 + 8))(v28, v29);
}

void sub_1A6067F54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_279_0();
  if (v3)
  {
    OUTLINED_FUNCTION_36_11(*v1);
    type metadata accessor for MonthlyWeatherStatisticsQuery();
  }
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_24();
  if (v0)
  {
    OUTLINED_FUNCTION_275_0();
    OUTLINED_FUNCTION_168();
    type metadata accessor for MonthlyWeatherStatisticsQuery();
  }
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_218_0();
  OUTLINED_FUNCTION_66(v4);
  OUTLINED_FUNCTION_90_2();
  OUTLINED_FUNCTION_251_0();
  OUTLINED_FUNCTION_0_0();
}

void sub_1A6068008(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(char *);
  uint64_t v18;
  unint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = v3[2];
  v5 = v3[3];
  v7 = (uint64_t *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  v8 = v3[4];
  v9 = v3[6];
  v27 = v3[5];
  if (v6 == 1)
  {
    v10 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFELL);
    v28 = *v7;
    v29 = v10;
    OUTLINED_FUNCTION_263_0();
    type metadata accessor for MonthlyWeatherStatisticsQuery();
  }
  v25 = v9;
  v26 = v8;
  v20[2] = a3;
  v21 = a1;
  v22 = a2;
  v23 = v5;
  v24 = v4;
  v20[1] = v20;
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_12();
  if (v6)
  {
    OUTLINED_FUNCTION_194_0(*v7);
    type metadata accessor for MonthlyWeatherStatisticsQuery();
  }
  OUTLINED_FUNCTION_28_0();
  v11 = v23;
  v13 = v21;
  v12 = v22;
  v14 = v26;
  v15 = v25;
  OUTLINED_FUNCTION_159_0();
  sub_1A6067A04(v13, v12, v16, v17, v18, 0, v11, v14, v19, v15);
  OUTLINED_FUNCTION_63_5();
}

void sub_1A6068168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,const char *a23)
{
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  const char *v58;
  uint64_t v59;
  _QWORD **v60;
  uint64_t v61;
  void (*v62)(uint64_t *);
  id v63;
  uint64_t v64;
  uint64_t v65;

  OUTLINED_FUNCTION_6_2();
  v61 = v27;
  v62 = v26;
  v63 = v28;
  v29 = v24;
  v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFELL);
  if (v25 == 1)
  {
    OUTLINED_FUNCTION_241(*v31);
    swift_checkMetadataState();
  }
  else
  {
    v32 = v25;
    v60 = &v57;
    MEMORY[0x1E0C80A78](v24);
    OUTLINED_FUNCTION_7();
    if (v36)
    {
      v37 = v33 & 0xFFFFFFFFFFFFFFFELL;
      v38 = v34 & 0xFFFFFFFFFFFFFFFELL;
      v39 = v35 & 0xFFFFFFFFFFFFFFFELL;
      v40 = v23;
      v41 = v32;
      do
      {
        v42 = *v31++;
        v37 += 8;
        v38 += 8;
        v39 += 8;
        *v40++ = OUTLINED_FUNCTION_241(v42);
        --v41;
      }
      while (v41);
    }
    OUTLINED_FUNCTION_28_0();
  }
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED193C90);
  v43 = (_QWORD *)sub_1A6123DB8();
  v44 = *(v43 - 1);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_152_2();
  if (qword_1ED193BE8 != -1)
    swift_once();
  v46 = OUTLINED_FUNCTION_24_1();
  __swift_project_value_buffer(v46, (uint64_t)qword_1ED19DB18);
  v47 = v63;
  OUTLINED_FUNCTION_360();
  v48 = v47;
  OUTLINED_FUNCTION_360();
  v49 = sub_1A6123554();
  v50 = sub_1A6123A40();
  if (os_log_type_enabled(v49, v50))
  {
    v58 = a23;
    v51 = OUTLINED_FUNCTION_16_2();
    v60 = (_QWORD **)v44;
    v52 = v51;
    v57 = (_QWORD *)OUTLINED_FUNCTION_26();
    v53 = OUTLINED_FUNCTION_16_2();
    v59 = v53;
    *(_DWORD *)v52 = 141558531;
    OUTLINED_FUNCTION_329_0(v53);
    v63 = v43;
    sub_1A6123A88();
    *(_WORD *)(v52 + 12) = 2113;
    v64 = (uint64_t)v48;
    v54 = v48;
    sub_1A6123A88();
    *v57 = v48;

    *(_WORD *)(v52 + 22) = 2082;
    swift_getErrorValue();
    v55 = sub_1A6123D28();
    v64 = sub_1A5FBE7E0(v55, v56, &v65);
    sub_1A6123A88();
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_272_0();
    OUTLINED_FUNCTION_272_0();
    OUTLINED_FUNCTION_253(&dword_1A5F87000, v49, v50, v58, (uint8_t *)v52);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_8();
  }

  OUTLINED_FUNCTION_272_0();
  OUTLINED_FUNCTION_272_0();

  *v23 = v29;
  OUTLINED_FUNCTION_331_0();
  OUTLINED_FUNCTION_360();
  v62(v23);
  OUTLINED_FUNCTION_125_0((uint64_t)v23, *(uint64_t (**)(uint64_t, uint64_t))(v44 + 8));
  OUTLINED_FUNCTION_0_0();
}

uint64_t objectdestroy_26Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A60684E8(uint64_t a1)
{
  return sub_1A606586C(a1, type metadata accessor for MonthlyWeatherStatistics, "Encountered an error when fetching monthly statistics. location=%{private,mask.hash}@, error=%{public}s");
}

uint64_t static WeatherService.statisticsPastDaysToFetch.getter()
{
  OUTLINED_FUNCTION_2_20();
  return qword_1EE815550;
}

uint64_t static WeatherService.statisticsPastDaysToFetch.setter(uint64_t a1)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_2_20();
  qword_1EE815550 = a1;
  return result;
}

void static WeatherService.statisticsPastDaysToFetch.modify()
{
  OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_51();
}

void WeatherService.fetchStatistics(for:calendar:options:timeZone:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(_QWORD);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  void (*v78)(_QWORD);
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t);
  uint64_t v92;
  uint64_t v93;
  void (*v94)(_QWORD);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(uint64_t, _QWORD);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t (*v120)(uint64_t, uint64_t, uint64_t);
  void (*v121)(uint64_t, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  void *v134;
  uint64_t v135;
  _QWORD *v136;
  id v137;
  void *v138;
  void (*v139)(void);
  uint64_t v140;
  NSObject *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unsigned int v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(_QWORD);
  void (*v180)(uint64_t, uint64_t);
  void (*v181)(_QWORD);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;

  OUTLINED_FUNCTION_6_2();
  a19 = v25;
  a20 = v26;
  v152 = v27;
  v151 = v28;
  v149 = v29;
  v31 = v30;
  v168 = v32;
  v165 = v21;
  v150 = *v21;
  v154 = OUTLINED_FUNCTION_179();
  v153 = *(_QWORD *)(v154 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_151();
  v166 = v34;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_34_0();
  v173 = v36;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_53();
  v175 = v38;
  OUTLINED_FUNCTION_72_0();
  v160 = sub_1A61220A8();
  v159 = *(_QWORD *)(v160 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_64(v40);
  v171 = sub_1A6122048();
  v178 = *(_QWORD *)(v171 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_54_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_151();
  v148 = v43;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_34_0();
  v146 = v45;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v46);
  OUTLINED_FUNCTION_34_0();
  v161 = v47;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v48);
  OUTLINED_FUNCTION_34_0();
  v157 = v49;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v50);
  OUTLINED_FUNCTION_53();
  v170 = v51;
  v52 = OUTLINED_FUNCTION_6();
  v53 = *(_QWORD **)(v52 - 8);
  v54 = v53[8];
  MEMORY[0x1E0C80A78](v52);
  OUTLINED_FUNCTION_108_2();
  MEMORY[0x1E0C80A78](v55);
  OUTLINED_FUNCTION_213_0();
  MEMORY[0x1E0C80A78](v56);
  OUTLINED_FUNCTION_143_2();
  OUTLINED_FUNCTION_108_2();
  MEMORY[0x1E0C80A78](v57);
  OUTLINED_FUNCTION_143_2();
  v172 = v58;
  OUTLINED_FUNCTION_123_0();
  MEMORY[0x1E0C80A78](v59);
  OUTLINED_FUNCTION_143_2();
  OUTLINED_FUNCTION_108_2();
  MEMORY[0x1E0C80A78](v60);
  OUTLINED_FUNCTION_143_2();
  OUTLINED_FUNCTION_108_2();
  MEMORY[0x1E0C80A78](v61);
  v63 = (char *)&v140 - v62;
  MEMORY[0x1E0C80A78](v64);
  OUTLINED_FUNCTION_143_2();
  OUTLINED_FUNCTION_108_2();
  MEMORY[0x1E0C80A78](v65);
  OUTLINED_FUNCTION_143_2();
  v167 = v66;
  OUTLINED_FUNCTION_123_0();
  MEMORY[0x1E0C80A78](v67);
  OUTLINED_FUNCTION_143_2();
  OUTLINED_FUNCTION_108_2();
  MEMORY[0x1E0C80A78](v68);
  OUTLINED_FUNCTION_143_2();
  v177 = v69;
  OUTLINED_FUNCTION_123_0();
  MEMORY[0x1E0C80A78](v70);
  OUTLINED_FUNCTION_143_2();
  v179 = v71;
  OUTLINED_FUNCTION_123_0();
  MEMORY[0x1E0C80A78](v72);
  OUTLINED_FUNCTION_210_0();
  MEMORY[0x1E0C80A78](v73);
  OUTLINED_FUNCTION_126_2();
  MEMORY[0x1E0C80A78](v74);
  OUTLINED_FUNCTION_45_6();
  v163 = v75;
  sub_1A6121F4C();
  sub_1A6121F28();
  v182 = v31;
  sub_1A6121FE8();
  v76 = (void (*)(uint64_t, uint64_t))v53[1];
  v76(v24, v52);
  if (qword_1ED193BE8 != -1)
    swift_once();
  v77 = OUTLINED_FUNCTION_24_1();
  __swift_project_value_buffer(v77, (uint64_t)qword_1ED19DB18);
  v78 = (void (*)(_QWORD))v53[2];
  v174 = v22;
  v181 = v78;
  ((void (*)(void (*)(_QWORD), uint64_t, uint64_t))v78)(v179, v22, v52);
  v79 = v168;
  v80 = sub_1A6123554();
  v81 = sub_1A6123A4C();
  v155 = v81;
  v82 = os_log_type_enabled(v80, v81);
  v168 = v63;
  v180 = v76;
  v176 = v53;
  v164 = v20;
  v145 = v79;
  v169 = v23;
  if (v82)
  {
    v83 = OUTLINED_FUNCTION_16_2();
    v84 = (_QWORD *)OUTLINED_FUNCTION_26();
    v142 = v84;
    v85 = OUTLINED_FUNCTION_16_2();
    v143 = v85;
    *(_DWORD *)v83 = 141558531;
    OUTLINED_FUNCTION_329_0(v85);
    sub_1A6123A88();
    *(_WORD *)(v83 + 12) = 2113;
    v141 = v80;
    v183 = (uint64_t)v79;
    v86 = v79;
    sub_1A6123A88();
    *v84 = v79;

    *(_WORD *)(v83 + 22) = 2082;
    v87 = (uint64_t)v179;
    ((void (*)(uint64_t, void (*)(_QWORD), uint64_t))v181)(v24, v179, v52);
    v88 = sub_1A612380C();
    v183 = sub_1A5FBE7E0(v88, v89, &v184);
    OUTLINED_FUNCTION_340();
    OUTLINED_FUNCTION_27();
    OUTLINED_FUNCTION_129_2(v87);
    OUTLINED_FUNCTION_253(&dword_1A5F87000, v141, (os_log_type_t)v155, "About to fetch weather statistics data; location=%{private,mask.hash}@, startTime=%{public}s",
      (uint8_t *)v83);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_8();
  }

  v76((uint64_t)v179, v52);
  v90 = v171;
  v91 = v181;
  v92 = v170;
  v93 = v178;
  v94 = *(void (**)(_QWORD))(v178 + 104);
  v155 = *MEMORY[0x1E0CB1140];
  v179 = v94;
  v94(v23);
  v95 = v174;
  OUTLINED_FUNCTION_112_2();
  v96 = v170;
  v178 = *(_QWORD *)(v93 + 8);
  ((void (*)(uint64_t, uint64_t))v178)(v23, v90);
  v97 = OUTLINED_FUNCTION_188((uint64_t)&v185);
  v91(v97);
  OUTLINED_FUNCTION_6_3(v96);
  v98 = v167;
  if (v99)
  {
    sub_1A6121EEC();
    OUTLINED_FUNCTION_129_2(v92);
    sub_1A5FAFD58(v96, &qword_1ED1929C8);
  }
  else
  {
    OUTLINED_FUNCTION_129_2(v92);
    OUTLINED_FUNCTION_33_9(v177, v96, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v176[4]);
  }
  LODWORD(v170) = *MEMORY[0x1E0CB1130];
  OUTLINED_FUNCTION_155_1(v23, v170);
  v100 = v157;
  OUTLINED_FUNCTION_112_2();
  OUTLINED_FUNCTION_162();
  ((void (*)(uint64_t, uint64_t, uint64_t))v91)(v156, v95, v52);
  OUTLINED_FUNCTION_6_3(v100);
  if (v99)
  {
    sub_1A6121EEC();
    OUTLINED_FUNCTION_100_2();
    sub_1A5FAFD58(v100, &qword_1ED1929C8);
  }
  else
  {
    OUTLINED_FUNCTION_100_2();
    OUTLINED_FUNCTION_33_9(v98, v100, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v176[4]);
  }
  v101 = v158;
  v102 = v182;
  sub_1A612203C();
  sub_1A6121F4C();
  sub_1A612206C();
  OUTLINED_FUNCTION_115(v24);
  OUTLINED_FUNCTION_130_1();
  OUTLINED_FUNCTION_97(v101, v103);
  v104 = v171;
  OUTLINED_FUNCTION_155_1(v23, v155);
  OUTLINED_FUNCTION_319_0();
  v105 = v102;
  v107 = v106;
  sub_1A6122018();
  OUTLINED_FUNCTION_162();
  v108 = OUTLINED_FUNCTION_188((uint64_t)&a10);
  v181(v108);
  OUTLINED_FUNCTION_6_3(v107);
  if (v99)
  {
    sub_1A6121EEC();
    OUTLINED_FUNCTION_115(v105);
    sub_1A5FAFD58(v107, &qword_1ED1929C8);
  }
  else
  {
    OUTLINED_FUNCTION_115(v105);
    OUTLINED_FUNCTION_33_9((uint64_t)v168, v107, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v176[4]);
  }
  v109 = v162;
  OUTLINED_FUNCTION_334(v24, v177);
  OUTLINED_FUNCTION_166_0(v109);
  OUTLINED_FUNCTION_234_0();
  v110 = v169;
  OUTLINED_FUNCTION_155_1(v169, v170);
  OUTLINED_FUNCTION_2_20();
  if (qword_1EE815550 == 0x8000000000000000)
  {
    __break(1u);
  }
  else
  {
    v111 = v146;
    OUTLINED_FUNCTION_112_2();
    v112 = v111;
    OUTLINED_FUNCTION_162();
    v113 = v144;
    OUTLINED_FUNCTION_166_0(v144);
    OUTLINED_FUNCTION_6_3(v112);
    if (v99)
    {
      v114 = v172;
      sub_1A6121EEC();
      OUTLINED_FUNCTION_129_2(v113);
      v115 = v114;
      v110 = v169;
      sub_1A5FAFD58(v112, &qword_1ED1929C8);
    }
    else
    {
      OUTLINED_FUNCTION_129_2(v113);
      v115 = v172;
      OUTLINED_FUNCTION_33_9(v172, v112, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v176[4]);
    }
    v162 = v54;
    OUTLINED_FUNCTION_334(v24, v115);
    OUTLINED_FUNCTION_166_0(v109);
    OUTLINED_FUNCTION_234_0();
    OUTLINED_FUNCTION_155_1(v110, v170);
    v116 = v104;
    v117 = v148;
    OUTLINED_FUNCTION_112_2();
    ((void (*)(uint64_t, uint64_t))v178)(v110, v116);
    OUTLINED_FUNCTION_166_0(v147);
    OUTLINED_FUNCTION_6_3(v117);
    if (v99)
    {
      v115 = v164;
      sub_1A6121EEC();
      OUTLINED_FUNCTION_100_2();
      sub_1A5FAFD58(v117, &qword_1ED1929C8);
      v118 = v176;
    }
    else
    {
      OUTLINED_FUNCTION_100_2();
      v118 = v176;
      v119 = OUTLINED_FUNCTION_58_4();
      OUTLINED_FUNCTION_33_9(v119, v117, v120);
    }
    v121 = (void (*)(uint64_t, uint64_t, uint64_t))v181;
    ((void (*)(uint64_t, uint64_t, uint64_t))v181)(v24, v172, v52);
    v121(v109, v115, v52);
    v122 = v166;
    v123 = OUTLINED_FUNCTION_234_0();
    MEMORY[0x1E0C80A78](v123);
    v124 = v145;
    *(&v140 - 6) = (uint64_t)v165;
    *(&v140 - 5) = (uint64_t)v124;
    v125 = v149;
    *(&v140 - 4) = v175;
    *(&v140 - 3) = v125;
    v126 = v173;
    *(&v140 - 2) = v122;
    *(&v140 - 1) = v126;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815568);
    OUTLINED_FUNCTION_324_0();
    v121(v24, v163, v52);
    v127 = (*((unsigned __int8 *)v118 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v118 + 80);
    v128 = (v162 + v127 + 7) & 0xFFFFFFFFFFFFFFF8;
    v129 = swift_allocObject();
    OUTLINED_FUNCTION_33_9(v129 + v127, v24, (uint64_t (*)(uint64_t, uint64_t, uint64_t))v118[4]);
    *(_QWORD *)(v129 + v128) = v124;
    v130 = (_QWORD *)(v129 + ((v128 + 15) & 0xFFFFFFFFFFFFFFF8));
    v131 = v151;
    v132 = v152;
    *v130 = v151;
    v130[1] = v132;
    v133 = v124;
    OUTLINED_FUNCTION_53_0();
    v134 = (void *)sub_1A61221E0();
    v135 = sub_1A6122210();
    OUTLINED_FUNCTION_24_3();
    OUTLINED_FUNCTION_38();

    v136 = (_QWORD *)OUTLINED_FUNCTION_65_5();
    v136[2] = v133;
    v136[3] = v131;
    v136[4] = v132;
    v137 = v133;
    OUTLINED_FUNCTION_53_0();
    v138 = (void *)sub_1A61221E0();
    sub_1A612221C();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_38();

    OUTLINED_FUNCTION_115(v164);
    OUTLINED_FUNCTION_115(v172);
    OUTLINED_FUNCTION_115((uint64_t)v168);
    OUTLINED_FUNCTION_115(v167);
    OUTLINED_FUNCTION_115(v177);
    OUTLINED_FUNCTION_115(v174);
    OUTLINED_FUNCTION_115(v163);
    v139 = *(void (**)(void))(v153 + 8);
    OUTLINED_FUNCTION_254_0();
    v139();
    ((void (*)(uint64_t, uint64_t))v139)(v173, v135);
    ((void (*)(uint64_t, uint64_t))v139)(v175, v135);
    OUTLINED_FUNCTION_0_0();
  }
}

uint64_t sub_1A60691DC(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, char *, uint64_t);
  void (*v49)(uint64_t, char *, uint64_t);
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;

  v44 = a6;
  v42 = a5;
  v43 = a2;
  v53 = a4;
  v51 = a3;
  v45 = a1;
  v6 = sub_1A61220A8();
  v7 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v39 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A6121D24();
  v10 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815580);
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v36 = v12;
  v52(v12, (uint64_t)v51, v9);
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v51((char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v53, v6);
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = *(unsigned __int8 *)(v7 + 80);
  v15 = (v13 + 32) & ~v13;
  v16 = (v11 + v14 + v15) & ~v14;
  v46 = v15;
  v47 = v16;
  v50 = v13 | v14 | 7;
  v41 = v16 + v8;
  v17 = swift_allocObject();
  v18 = (void *)v43;
  *(_QWORD *)(v17 + 16) = v45;
  *(_QWORD *)(v17 + 24) = v18;
  v49 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v19 = v12;
  v20 = v37;
  v49(v17 + v15, v19, v37);
  v48 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v21 = v38;
  v22 = v39;
  v48(v17 + v16, v39, v38);
  swift_retain();
  v23 = v18;
  v43 = sub_1A61221EC();
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815598);
  v24 = v36;
  v52(v36, v42, v20);
  v25 = v22;
  v51(v22, v53, v21);
  v26 = swift_allocObject();
  v28 = v45;
  v27 = v46;
  *(_QWORD *)(v26 + 16) = v45;
  *(_QWORD *)(v26 + 24) = v23;
  v49(v26 + v27, v24, v20);
  v48(v26 + v47, v25, v21);
  swift_retain();
  v29 = v23;
  v42 = sub_1A61221EC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8155B0);
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v28;
  *(_QWORD *)(v30 + 24) = v29;
  swift_retain();
  v31 = v29;
  sub_1A61221EC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8155C8);
  v52(v24, v44, v20);
  v51(v25, v53, v21);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v28;
  *(_QWORD *)(v32 + 24) = v31;
  v49(v32 + v46, v24, v20);
  v48(v32 + v47, v25, v21);
  swift_retain();
  v33 = v31;
  sub_1A61221EC();
  v34 = sub_1A6122240();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v34;
}

uint64_t sub_1A60695A8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(char *, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = OUTLINED_FUNCTION_264_0();
  return sub_1A60691DC(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_1A60695C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  v5[9] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815640);
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A6069628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_208_0();
  v2 = OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_91_2(v2);
  OUTLINED_FUNCTION_190_0(*(int *)(v1 + 52));
  v3 = (_QWORD *)OUTLINED_FUNCTION_69_2();
  *(_QWORD *)(v0 + 88) = v3;
  v4 = OUTLINED_FUNCTION_79_3(v3);
  return OUTLINED_FUNCTION_68_4(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A6069694()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_50_4();
  if (!v1)
    sub_1A5FAFD58(*(_QWORD *)(v0 + 80), &qword_1EE815640);
  OUTLINED_FUNCTION_67_0();
  return OUTLINED_FUNCTION_24_0();
}

uint64_t sub_1A60696E0(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_132_1(a1, &qword_1EE815640);
  OUTLINED_FUNCTION_36_1();
  return OUTLINED_FUNCTION_25(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1A6069718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[12] = a5;
  v6[13] = v5;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815640);
  v6[14] = swift_task_alloc();
  type metadata accessor for StatisticsSpanFactory();
  v6[15] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1A606979C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_110_2();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_206_0(v2);
  sub_1A60FA840(v1);
  OUTLINED_FUNCTION_189_0();
  type metadata accessor for HourTemperatureStatistics();
  OUTLINED_FUNCTION_204_0(&qword_1ED190AD8);
  OUTLINED_FUNCTION_204_0(&qword_1ED190AC8);
  OUTLINED_FUNCTION_204_0(&qword_1ED190AD0);
  OUTLINED_FUNCTION_134_1(v3);
  type metadata accessor for HourlyWeatherStatisticsQuery();
}

uint64_t sub_1A6069860(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_205_0(a1);
  *(_QWORD *)(v2 + 56) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v4 = OUTLINED_FUNCTION_121_2(v3);
  return sub_1A606C0E0(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A60698A8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A5FA1740(*(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for StatisticsSpanFactory);
  OUTLINED_FUNCTION_132_1(v1, &qword_1EE815640);
  OUTLINED_FUNCTION_327_0();
  OUTLINED_FUNCTION_31_1();
  return OUTLINED_FUNCTION_16_23(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1A60698EC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_139_2();
  if (!v1)
    sub_1A5FAFD58(*(_QWORD *)(v0 + 112), &qword_1EE815640);
  OUTLINED_FUNCTION_67_0();
  return OUTLINED_FUNCTION_24_0();
}

uint64_t sub_1A6069938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  v5[9] = __swift_instantiateConcreteTypeFromMangledName(qword_1EE813928);
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A60699A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_208_0();
  v2 = OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_91_2(v2);
  OUTLINED_FUNCTION_190_0(*(int *)(v1 + 52));
  v3 = (_QWORD *)OUTLINED_FUNCTION_69_2();
  *(_QWORD *)(v0 + 88) = v3;
  v4 = OUTLINED_FUNCTION_79_3(v3);
  return OUTLINED_FUNCTION_68_4(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A6069A0C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_50_4();
  if (!v1)
    sub_1A5FAFD58(*(_QWORD *)(v0 + 80), qword_1EE813928);
  OUTLINED_FUNCTION_67_0();
  return OUTLINED_FUNCTION_24_0();
}

uint64_t sub_1A6069A58(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_132_1(a1, qword_1EE813928);
  OUTLINED_FUNCTION_36_1();
  return OUTLINED_FUNCTION_25(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1A6069A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[12] = a5;
  v6[13] = v5;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE813928);
  v6[14] = swift_task_alloc();
  type metadata accessor for StatisticsSpanFactory();
  v6[15] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1A6069B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_110_2();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_206_0(v2);
  sub_1A60FA4F4(v1);
  OUTLINED_FUNCTION_189_0();
  type metadata accessor for DayPrecipitationStatistics();
  OUTLINED_FUNCTION_204_0(&qword_1ED190AF0);
  OUTLINED_FUNCTION_204_0(&qword_1ED190AE0);
  OUTLINED_FUNCTION_204_0(&qword_1ED190AE8);
  OUTLINED_FUNCTION_134_1(v3);
  type metadata accessor for DailyWeatherStatisticsQuery();
}

uint64_t sub_1A6069BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_205_0(a1);
  *(_QWORD *)(v2 + 56) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v4 = OUTLINED_FUNCTION_121_2(v3);
  return sub_1A606B9D8(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A6069C20()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_1A5FA1740(*(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for StatisticsSpanFactory);
  OUTLINED_FUNCTION_36_1();
  OUTLINED_FUNCTION_31_1();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_196_0();
  return OUTLINED_FUNCTION_16_23(v1);
}

uint64_t sub_1A6069C5C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A5FA1740(*(_QWORD *)(v0 + 120), (uint64_t (*)(_QWORD))type metadata accessor for StatisticsSpanFactory);
  OUTLINED_FUNCTION_132_1(v1, qword_1EE813928);
  OUTLINED_FUNCTION_327_0();
  OUTLINED_FUNCTION_31_1();
  return OUTLINED_FUNCTION_16_23(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1A6069CA0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_139_2();
  if (!v1)
    sub_1A5FAFD58(*(_QWORD *)(v0 + 112), qword_1EE813928);
  OUTLINED_FUNCTION_67_0();
  return OUTLINED_FUNCTION_24_0();
}

uint64_t sub_1A6069CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v3[9] = __swift_instantiateConcreteTypeFromMangledName(qword_1EE813A70);
  v3[10] = swift_task_alloc();
  v3[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813A68);
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A6069D78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void (**v10)();
  void (**v11)();
  _QWORD *v12;
  uint64_t (*v14)(_QWORD *, _QWORD, uint64_t, uint64_t, _QWORD *);

  v2 = v0[11];
  v1 = v0[12];
  v4 = v0[9];
  v3 = v0[10];
  v5 = v0[6];
  v6 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE815578) + 48);
  v0[2] = v5;
  v0[3] = v6;
  v7 = *MEMORY[0x1E0DCA550];
  v8 = OUTLINED_FUNCTION_1_17();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104);
  v9(v1, v7, v8);
  v10 = (void (**)())(v1 + *(int *)(v2 + 52));
  *v10 = sub_1A60164E0;
  v10[1] = 0;
  v0[4] = v1;
  v9(v3, *MEMORY[0x1E0DCA558], v8);
  v11 = (void (**)())(v3 + *(int *)(v4 + 52));
  *v11 = sub_1A601654C;
  v11[1] = 0;
  v0[5] = v3;
  v12 = (_QWORD *)OUTLINED_FUNCTION_69_2();
  v0[13] = v12;
  *v12 = v0;
  v12[1] = sub_1A6069E98;
  return v14(v0 + 2, v0[8], 1, 12, v0 + 4);
}

uint64_t sub_1A6069E98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    sub_1A5FAFD58(*(_QWORD *)(v2 + 80), qword_1EE813A70);
    OUTLINED_FUNCTION_132_1(v3, &qword_1EE813A68);
  }
  OUTLINED_FUNCTION_67_0();
  return OUTLINED_FUNCTION_24_0();
}

uint64_t sub_1A6069F10()
{
  uint64_t (*v0)(void);

  swift_task_dealloc();
  OUTLINED_FUNCTION_36_1();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_196_0();
  return OUTLINED_FUNCTION_25(v0);
}

uint64_t sub_1A6069F40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_127(a1, qword_1EE813A70);
  OUTLINED_FUNCTION_132_1(v2, &qword_1EE813A68);
  OUTLINED_FUNCTION_36_1();
  OUTLINED_FUNCTION_31_1();
  return OUTLINED_FUNCTION_16_23(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1A6069F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[22] = a5;
  v6[23] = v5;
  v6[20] = a3;
  v6[21] = a4;
  v6[18] = a1;
  v6[19] = a2;
  v6[24] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815608);
  v6[25] = swift_task_alloc();
  v6[26] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815578);
  v6[27] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1A606A01C()
{
  _QWORD *v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_110_2();
  if ((unint64_t)(v0[21] - 13) >= 0xFFFFFFFFFFFFFFF4
    && (unint64_t)(v0[20] - 13) >= 0xFFFFFFFFFFFFFFF4)
  {
    v0[28] = type metadata accessor for MonthTemperatureStatistics();
    OUTLINED_FUNCTION_82_2(&qword_1ED190B18);
    v0[29] = v2;
    OUTLINED_FUNCTION_82_2(&qword_1ED190B08);
    v0[30] = v3;
    OUTLINED_FUNCTION_82_2(&qword_1ED190B10);
    v0[31] = v4;
    OUTLINED_FUNCTION_98_2(v4);
    type metadata accessor for MonthlyWeatherStatisticsQuery();
  }
  __break(1u);
}

uint64_t sub_1A606A1EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 304) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_31_1();
  if (!v0)
    sub_1A5FAFD58(*(_QWORD *)(v2 + 200), &qword_1EE815608);
  OUTLINED_FUNCTION_67_0();
  return OUTLINED_FUNCTION_75_3();
}

uint64_t sub_1A606A25C(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_127(a1, &qword_1EE815608);
  OUTLINED_FUNCTION_36_1();
  OUTLINED_FUNCTION_31_1();
  return OUTLINED_FUNCTION_16_23(*(uint64_t (**)(void))(v1 + 8));
}

void sub_1A606A29C()
{
  _OWORD *v0;
  __int128 v1;

  v1 = v0[15];
  v0[5] = v0[14];
  v0[6] = v1;
  type metadata accessor for MonthlyWeatherStatistics();
}

void sub_1A606A2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10)
{
  uint64_t v10;

  OUTLINED_FUNCTION_92_2(a1);
  *(_OWORD *)(v10 + 112) = a10;
  *(_OWORD *)(v10 + 128) = a9;
  type metadata accessor for MonthlyWeatherStatistics();
}

uint64_t sub_1A606A318(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
  OUTLINED_FUNCTION_36_1();
  OUTLINED_FUNCTION_31_1();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_196_0();
  return v3();
}

uint64_t sub_1A606A354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = a5;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  v5[9] = __swift_instantiateConcreteTypeFromMangledName(qword_1EE813D80);
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A606A3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_208_0();
  v2 = OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_91_2(v2);
  OUTLINED_FUNCTION_190_0(*(int *)(v1 + 52));
  v3 = (_QWORD *)OUTLINED_FUNCTION_69_2();
  *(_QWORD *)(v0 + 88) = v3;
  v4 = OUTLINED_FUNCTION_79_3(v3);
  return OUTLINED_FUNCTION_68_4(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A606A428()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_50_4();
  if (!v1)
    sub_1A5FAFD58(*(_QWORD *)(v0 + 80), qword_1EE813D80);
  OUTLINED_FUNCTION_67_0();
  return OUTLINED_FUNCTION_24_0();
}

uint64_t sub_1A606A474()
{
  uint64_t (*v0)(void);

  swift_task_dealloc();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_196_0();
  return OUTLINED_FUNCTION_25(v0);
}

uint64_t sub_1A606A49C(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_132_1(a1, qword_1EE813D80);
  OUTLINED_FUNCTION_36_1();
  return OUTLINED_FUNCTION_25(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1A606A4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6[18] = a5;
  v6[19] = v5;
  v6[16] = a3;
  v6[17] = a4;
  v6[14] = a1;
  v6[15] = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE813D80);
  v6[20] = swift_task_alloc();
  v6[21] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE812FD8);
  v6[22] = swift_task_alloc();
  v7 = sub_1A6122060();
  v6[23] = v7;
  v6[24] = *(_QWORD *)(v7 - 8);
  v6[25] = swift_task_alloc();
  v8 = sub_1A6121F58();
  v6[26] = v8;
  v6[27] = *(_QWORD *)(v8 - 8);
  v6[28] = swift_task_alloc();
  v6[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1929F0);
  v6[30] = swift_task_alloc();
  v9 = sub_1A61220A8();
  v6[31] = v9;
  v6[32] = *(_QWORD *)(v9 - 8);
  v6[33] = swift_task_alloc();
  v6[34] = swift_task_alloc();
  v10 = sub_1A6121EA4();
  v6[35] = v10;
  v6[36] = *(_QWORD *)(v10 - 8);
  v6[37] = swift_task_alloc();
  v11 = sub_1A6121E80();
  v6[38] = v11;
  v6[39] = *(_QWORD *)(v11 - 8);
  v6[40] = swift_task_alloc();
  v12 = sub_1A6121E68();
  v6[41] = v12;
  v6[42] = *(_QWORD *)(v12 - 8);
  v6[43] = swift_task_alloc();
  v13 = sub_1A6121E74();
  v6[44] = v13;
  v6[45] = *(_QWORD *)(v13 - 8);
  v6[46] = swift_task_alloc();
  v6[47] = swift_task_alloc();
  v14 = sub_1A6121EE0();
  v6[48] = v14;
  v6[49] = *(_QWORD *)(v14 - 8);
  v6[50] = swift_task_alloc();
  v6[51] = swift_task_alloc();
  v6[52] = swift_task_alloc();
  v6[53] = swift_task_alloc();
  v6[54] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1A606A728()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  void (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;

  v2 = v0[42];
  v1 = v0[43];
  v4 = v0[40];
  v3 = v0[41];
  v5 = v0[38];
  v6 = v0[39];
  v7 = v0[36];
  v8 = v0[35];
  v9 = v0[30];
  v37 = v0[37];
  v38 = v0[31];
  v35 = *MEMORY[0x1E0CB05F0];
  v36 = *(void (**)(_QWORD))(v0[45] + 104);
  v36(v0[47]);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0CB05E0], v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, *MEMORY[0x1E0CB0600], v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v37, *MEMORY[0x1E0CB0628], v8);
  sub_1A6122078();
  if (__swift_getEnumTagSinglePayload(v9, 1, v38) != 1)
  {
    v10 = v0[52];
    v11 = v0[50];
    v12 = v0[51];
    v24 = v0[49];
    v25 = v0[53];
    v13 = v0[46];
    v26 = v0[32];
    v27 = v0[31];
    v28 = v0[44];
    v14 = v0[29];
    v30 = v0[33];
    v31 = v0[27];
    v32 = v0[26];
    v33 = v0[25];
    v34 = v0[24];
    v29 = v0[17];
    (*(void (**)(_QWORD, _QWORD))(v26 + 32))(v0[34], v0[30]);
    sub_1A6121E8C();
    sub_1A6121EBC();
    v0[55] = *(_QWORD *)(v24 + 8);
    OUTLINED_FUNCTION_226_0(v11);
    sub_1A6121EC8();
    OUTLINED_FUNCTION_226_0(v12);
    sub_1A6121EB0();
    OUTLINED_FUNCTION_226_0(v10);
    ((void (*)(uint64_t, _QWORD, uint64_t))v36)(v13, v35, v28);
    sub_1A6121E98();
    v15 = OUTLINED_FUNCTION_268_0();
    OUTLINED_FUNCTION_34_2(v15, v16);
    OUTLINED_FUNCTION_226_0(v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v30, v29, v27);
    sub_1A6121ED4();
    sub_1A6121D18();
    sub_1A5FAF4C0(&qword_1EE8155E8, (void (*)(uint64_t))MEMORY[0x1E0CB0670]);
    OUTLINED_FUNCTION_238_0();
    v17 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v0[56] = v17;
    v17(v14, v32);
    v0[57] = v0[11];
    sub_1A6121D00();
    OUTLINED_FUNCTION_238_0();
    v17(v14, v32);
    v0[58] = v0[13];
    sub_1A6122000();
    sub_1A6121D18();
    sub_1A6121FE8();
    v17(v14, v32);
    OUTLINED_FUNCTION_318_0(v33, *(uint64_t (**)(uint64_t, _QWORD))(v34 + 8));
    v18 = type metadata accessor for DayPrecipitationSummary();
    v0[59] = v18;
    OUTLINED_FUNCTION_325_0(&qword_1ED191850);
    v20 = v19;
    v0[60] = v19;
    OUTLINED_FUNCTION_325_0(&qword_1ED191C78);
    v22 = v21;
    v0[61] = v21;
    OUTLINED_FUNCTION_325_0(&qword_1ED191C80);
    v0[62] = v23;
    v0[2] = v18;
    v0[3] = v20;
    v0[4] = v22;
    v0[5] = v23;
    type metadata accessor for DailyWeatherSummaryQuery();
  }
  __break(1u);
}

uint64_t sub_1A606ABB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 520) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_31_1();
  if (!v0)
    sub_1A5FAFD58(*(_QWORD *)(v2 + 160), qword_1EE813D80);
  OUTLINED_FUNCTION_67_0();
  return swift_task_switch();
}

void sub_1A606AC48()
{
  _OWORD *v0;
  __int128 v1;

  v1 = *(_OWORD *)((char *)v0 + 488);
  v0[3] = *(_OWORD *)((char *)v0 + 472);
  v0[4] = v1;
  type metadata accessor for DailyWeatherSummary();
}

uint64_t sub_1A606ACF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v6, a1);
  OUTLINED_FUNCTION_226_0(v3);
  v4(v1, v5);
  OUTLINED_FUNCTION_36_1();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_196_0();
  return v7();
}

uint64_t sub_1A606ADCC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 440);
  v2 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 384);
  (*(void (**)(_QWORD, _QWORD))(v0 + 448))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 208));
  v4 = v1(v2, v3);
  OUTLINED_FUNCTION_132_1(v4, qword_1EE813D80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_36_1();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A606AF1C(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, _BYTE *, uint64_t), void *a4, void (*a5)(_BYTE *), uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  int *v15;
  uint64_t v16;
  _BYTE *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  id v38;
  id v39;
  _QWORD *v40;
  _BYTE *v41;
  uint64_t v42;
  unint64_t v43;
  void (*v44)(_BYTE *, uint64_t);
  os_log_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE v48[4];
  int v49;
  uint64_t v50;
  os_log_t v51;
  uint64_t v52;
  _BYTE *v53;
  void (*v54)(_BYTE *, _BYTE *, uint64_t);
  id v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  void (*v60)(_BYTE *);
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;

  v59 = a6;
  v60 = a5;
  v54 = a3;
  v55 = a4;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815570);
  MEMORY[0x1E0C80A78](v57);
  v58 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v56 = sub_1A6121F58();
  v8 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v53 = &v48[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v61 = &v48[-v11];
  MEMORY[0x1E0C80A78](v12);
  v14 = &v48[-v13];
  v15 = (int *)type metadata accessor for WeatherStatisticsModel();
  MEMORY[0x1E0C80A78](v15);
  v17 = &v48[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE815568);
  v19 = a1 + v18[12];
  v20 = a1 + v18[16];
  v21 = a1 + v18[20];
  v22 = v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE815578) + 48);
  sub_1A606D5B0(a1, (uint64_t)v17, &qword_1ED190A10);
  sub_1A606D5B0(v19, (uint64_t)&v17[v15[5]], &qword_1EE813008);
  sub_1A606D5B0(v21, (uint64_t)&v17[v15[6]], &qword_1EE812FF8);
  sub_1A606D5B0(v22, (uint64_t)&v17[v15[7]], &qword_1EE812FE8);
  v23 = v15[8];
  v24 = v14;
  sub_1A606D5B0(v20, (uint64_t)&v17[v23], &qword_1EE812FD8);
  sub_1A6121F4C();
  sub_1A6121F34();
  v26 = v25;
  if (qword_1ED193BE8 != -1)
    swift_once();
  v27 = sub_1A612356C();
  __swift_project_value_buffer(v27, (uint64_t)qword_1ED19DB18);
  v28 = v61;
  v29 = v56;
  v54 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16);
  v54(v61, v14, v56);
  v30 = v55;
  v31 = sub_1A6123554();
  v32 = sub_1A6123A4C();
  v33 = v32;
  if (os_log_type_enabled(v31, v32))
  {
    v34 = swift_slowAlloc();
    v50 = v8;
    v51 = v31;
    v35 = v34;
    v36 = (_QWORD *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v52 = v37;
    *(_DWORD *)v35 = 141558787;
    v62 = 1752392040;
    v63 = v37;
    v55 = v24;
    sub_1A6123A88();
    *(_WORD *)(v35 + 12) = 2113;
    v62 = (uint64_t)v30;
    v38 = v30;
    v49 = v33;
    v39 = v38;
    sub_1A6123A88();
    v40 = v36;
    *v36 = v30;

    *(_WORD *)(v35 + 22) = 2082;
    v41 = v61;
    v54(v53, v61, v29);
    v42 = sub_1A612380C();
    v62 = sub_1A5FBE7E0(v42, v43, &v63);
    sub_1A6123A88();
    swift_bridgeObjectRelease();
    v44 = *(void (**)(_BYTE *, uint64_t))(v50 + 8);
    v44(v41, v29);
    *(_WORD *)(v35 + 32) = 2050;
    v62 = v26;
    v24 = v55;
    sub_1A6123A88();
    v45 = v51;
    _os_log_impl(&dword_1A5F87000, v51, (os_log_type_t)v49, "Finished fetching weather statistics data; location=%{private,mask.hash}@, endTime=%{public}s, duration=%{public}fs",
      (uint8_t *)v35,
      0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v40, -1, -1);
    v46 = v52;
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v46, -1, -1);
    MEMORY[0x1A85BB42C](v35, -1, -1);

  }
  else
  {

    v44 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
    v44(v28, v29);

  }
  v47 = v58;
  sub_1A5FC56D4((uint64_t)v17, (uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for WeatherStatisticsModel);
  swift_storeEnumTagMultiPayload();
  v60(v47);
  sub_1A5FAFD58((uint64_t)v47, &qword_1EE815570);
  v44(v24, v29);
  sub_1A5FA1740((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for WeatherStatisticsModel);
}

uint64_t sub_1A606B424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_218_0();
  OUTLINED_FUNCTION_66(v2);

  OUTLINED_FUNCTION_90_2();
  return OUTLINED_FUNCTION_18_3();
}

void sub_1A606B484()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_BYTE *, _BYTE *, uint64_t);
  void *v3;
  void (*v4)(_BYTE *);
  uint64_t v5;

  OUTLINED_FUNCTION_216_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_107_1();
  v0 = OUTLINED_FUNCTION_182_0();
  sub_1A606AF1C(v0, v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_366();
}

void sub_1A606B4BC()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  const char *v3;
  const char *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  void (*v8)(_QWORD *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  NSObject *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_6_2();
  v4 = v3;
  v6 = v5;
  v8 = (void (*)(_QWORD *))v7;
  OUTLINED_FUNCTION_255_0(v9, v10, v7, v11, v5);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_7();
  if (qword_1ED193BE8 != -1)
    swift_once();
  v13 = OUTLINED_FUNCTION_24_1();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED19DB18);
  OUTLINED_FUNCTION_125_2();
  OUTLINED_FUNCTION_125_2();
  OUTLINED_FUNCTION_125_2();
  v14 = v0;
  OUTLINED_FUNCTION_125_2();
  v15 = v14;
  v16 = sub_1A6123554();
  v17 = sub_1A6123A40();
  if (os_log_type_enabled(v16, v17))
  {
    v24 = v4;
    v18 = OUTLINED_FUNCTION_26();
    v22 = (_QWORD *)OUTLINED_FUNCTION_26();
    v25 = OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_192_0(v25, 7.2227e-34);
    sub_1A6123A88();
    *(_WORD *)(v18 + 12) = 2113;
    v23 = v16;
    v19 = v15;
    sub_1A6123A88();
    *v22 = v15;

    *(_WORD *)(v18 + 22) = 2082;
    swift_getErrorValue();
    v20 = OUTLINED_FUNCTION_315_0();
    OUTLINED_FUNCTION_372(v20, v21);
    sub_1A6123A88();
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_81_2();
    OUTLINED_FUNCTION_81_2();
    *(_WORD *)(v18 + 32) = 2112;
    OUTLINED_FUNCTION_125_2();
    v26 = _swift_stdlib_bridgeErrorToNSError();
    sub_1A6123A88();
    v22[1] = v26;
    OUTLINED_FUNCTION_81_2();
    OUTLINED_FUNCTION_81_2();
    _os_log_impl(&dword_1A5F87000, v23, v17, v24, (uint8_t *)v18, 0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_8();
  }

  OUTLINED_FUNCTION_81_2();
  OUTLINED_FUNCTION_81_2();
  OUTLINED_FUNCTION_81_2();
  OUTLINED_FUNCTION_81_2();

  *v2 = v1;
  OUTLINED_FUNCTION_331_0();
  OUTLINED_FUNCTION_125_2();
  v8(v2);
  sub_1A5FAFD58((uint64_t)v2, v6);
  OUTLINED_FUNCTION_0_0();
}

void sub_1A606B778()
{
  OUTLINED_FUNCTION_261_0();
  sub_1A606B4BC();
}

void sub_1A606B7A0()
{
  uint64_t *v0;
  unsigned int *v1;
  unsigned int *v2;
  void (*v3)(uint64_t, uint64_t, char *, char *);
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  unsigned int *v39;
  unsigned int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, char *, char *);

  OUTLINED_FUNCTION_6_2();
  v39 = v1;
  v40 = v2;
  v43 = v4;
  v44 = v3;
  v6 = v5;
  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_23();
  v12 = v10 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v39 - v14;
  v16 = OUTLINED_FUNCTION_6();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_23();
  v20 = v18 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v39 - v22;
  v24 = v6(0);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v39 - v28;
  v30 = *v0;
  v41 = v0[1];
  v42 = v30;
  v32 = *(void (**)(char *, _QWORD))(v31 + 104);
  if ((v0[2] & 1) != 0)
  {
    v32(v27, *v40);
    v33 = OUTLINED_FUNCTION_373();
    sub_1A606D5B0(v8 + *(int *)(v33 + 48), v12, &qword_1ED1929C8);
    if (__swift_getEnumTagSinglePayload(v12, 1, v16) == 1)
    {
      sub_1A6121F28();
      sub_1A5FAFD58(v12, &qword_1ED1929C8);
    }
    else
    {
      OUTLINED_FUNCTION_83(v20, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32));
    }
    v35 = v42;
    v36 = v41;
    v37 = v27;
    v38 = (char *)v20;
  }
  else
  {
    v32((char *)&v39 - v28, *v39);
    v34 = OUTLINED_FUNCTION_373();
    sub_1A606D5B0(v8 + *(int *)(v34 + 48), (uint64_t)v15, &qword_1ED1929C8);
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16) == 1)
    {
      sub_1A6121F28();
      sub_1A5FAFD58((uint64_t)v15, &qword_1ED1929C8);
    }
    else
    {
      OUTLINED_FUNCTION_83((uint64_t)v23, (uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32));
    }
    v35 = v42;
    v36 = v41;
    v37 = v29;
    v38 = v23;
  }
  v44(v35, v36, v37, v38);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1A606B9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 112) = a6;
  *(_QWORD *)(v7 + 120) = v6;
  *(_BYTE *)(v7 + 208) = a5;
  *(_QWORD *)(v7 + 96) = a3;
  *(_QWORD *)(v7 + 104) = a4;
  *(_QWORD *)(v7 + 80) = a1;
  *(_QWORD *)(v7 + 88) = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE813928);
  *(_QWORD *)(v7 + 128) = swift_task_alloc();
  *(_QWORD *)(v7 + 136) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813008);
  *(_QWORD *)(v7 + 144) = swift_task_alloc();
  return swift_task_switch();
}

void sub_1A606BA68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_110_2();
  OUTLINED_FUNCTION_233_0();
  v0[19] = type metadata accessor for DayPrecipitationStatistics();
  OUTLINED_FUNCTION_82_2(&qword_1ED190AF0);
  v0[20] = v1;
  OUTLINED_FUNCTION_82_2(&qword_1ED190AE0);
  v0[21] = v2;
  OUTLINED_FUNCTION_82_2(&qword_1ED190AE8);
  v0[22] = v3;
  OUTLINED_FUNCTION_98_2(v3);
  type metadata accessor for DailyWeatherStatisticsQuery();
}

uint64_t sub_1A606BAF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _QWORD *v11;

  OUTLINED_FUNCTION_93_2(a1);
  v2 = OUTLINED_FUNCTION_297_1();
  OUTLINED_FUNCTION_154_1(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 192) = v11;
  *v11 = v1;
  v11[1] = sub_1A606BB54;
  OUTLINED_FUNCTION_295();
  OUTLINED_FUNCTION_67_0();
  return OUTLINED_FUNCTION_32_11();
}

uint64_t sub_1A606BB54()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_148_3();
  OUTLINED_FUNCTION_31_1();
  if (!v0)
    sub_1A5FAFD58(*(_QWORD *)(v1 + 128), qword_1EE813928);
  OUTLINED_FUNCTION_67_0();
  return OUTLINED_FUNCTION_75_3();
}

uint64_t sub_1A606BBA8(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_127(a1, qword_1EE813928);
  OUTLINED_FUNCTION_36_1();
  OUTLINED_FUNCTION_31_1();
  return OUTLINED_FUNCTION_16_23(*(uint64_t (**)(void))(v1 + 8));
}

void sub_1A606BBE8()
{
  OUTLINED_FUNCTION_122_2();
  type metadata accessor for DailyWeatherStatistics();
}

uint64_t sub_1A606BC08(uint64_t a1)
{
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_92_2(a1);
  OUTLINED_FUNCTION_36_1();
  OUTLINED_FUNCTION_31_1();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_196_0();
  return OUTLINED_FUNCTION_181(v1);
}

void sub_1A606BC20()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815630);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE813928);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for DayPrecipitationStatistics();
  sub_1A5FAF4C0(&qword_1ED190AF0, (void (*)(uint64_t))type metadata accessor for DayPrecipitationStatistics);
  sub_1A5FAF4C0(&qword_1ED190AE0, (void (*)(uint64_t))type metadata accessor for DayPrecipitationStatistics);
  sub_1A5FAF4C0(&qword_1ED190AE8, (void (*)(uint64_t))type metadata accessor for DayPrecipitationStatistics);
  type metadata accessor for DailyWeatherStatisticsQuery();
}

void sub_1A606BD40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v3, v1, a1);
  *(_QWORD *)(v6 - 112) = v3;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16))(v4, *(_QWORD *)(v6 - 160), v2);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v8 + v7, v4, v2);
  sub_1A6062E0C(*(_QWORD *)(v6 - 152), *(_QWORD *)(v6 - 144), *(_QWORD *)(v6 - 128), *(_DWORD *)(v6 - 116), v6 - 112, (uint64_t)sub_1A606CF34, v8);
}

void sub_1A606BDC8()
{
  uint64_t v0;

  swift_release();
  sub_1A5FAFD58(v0, qword_1EE813928);
}

void sub_1A606BE00()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8155F0);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE813D80);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for DayPrecipitationSummary();
  sub_1A5FAF4C0(&qword_1ED191850, (void (*)(uint64_t))type metadata accessor for DayPrecipitationSummary);
  sub_1A5FAF4C0(&qword_1ED191C78, (void (*)(uint64_t))type metadata accessor for DayPrecipitationSummary);
  sub_1A5FAF4C0(&qword_1ED191C80, (void (*)(uint64_t))type metadata accessor for DayPrecipitationSummary);
  type metadata accessor for DailyWeatherSummaryQuery();
}

void sub_1A606BF24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v4, v3, a1);
  *(_QWORD *)(v6 - 112) = v4;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v6 - 184), v5);
  v7 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v8 + v7, v1, v5);
  sub_1A6063E9C(*(_QWORD *)(v6 - 168), *(_QWORD *)(v6 - 160), *(_QWORD *)(v6 - 144), *(_QWORD *)(v6 - 136), *(_QWORD *)(v6 - 128), *(_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 176), v6 - 112, (uint64_t)sub_1A606CBA8, v8);
}

void sub_1A606BFB4()
{
  uint64_t v0;

  swift_release();
  sub_1A5FAFD58(v0, qword_1EE813D80);
}

uint64_t sub_1A606BFF0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_12();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_54_0();
  sub_1A606D5B0(a1, v6, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    return sub_1A612392C();
  }
  else
  {
    sub_1A606D5E0(v6, v5, a3);
    __swift_instantiateConcreteTypeFromMangledName(a5);
    return sub_1A6123938();
  }
}

uint64_t sub_1A606C0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 112) = a6;
  *(_QWORD *)(v7 + 120) = v6;
  *(_BYTE *)(v7 + 208) = a5;
  *(_QWORD *)(v7 + 96) = a3;
  *(_QWORD *)(v7 + 104) = a4;
  *(_QWORD *)(v7 + 80) = a1;
  *(_QWORD *)(v7 + 88) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815640);
  *(_QWORD *)(v7 + 128) = swift_task_alloc();
  *(_QWORD *)(v7 + 136) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190A10);
  *(_QWORD *)(v7 + 144) = swift_task_alloc();
  return swift_task_switch();
}

void sub_1A606C170()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_110_2();
  OUTLINED_FUNCTION_233_0();
  v0[19] = type metadata accessor for HourTemperatureStatistics();
  OUTLINED_FUNCTION_82_2(&qword_1ED190AD8);
  v0[20] = v1;
  OUTLINED_FUNCTION_82_2(&qword_1ED190AC8);
  v0[21] = v2;
  OUTLINED_FUNCTION_82_2(&qword_1ED190AD0);
  v0[22] = v3;
  OUTLINED_FUNCTION_98_2(v3);
  type metadata accessor for HourlyWeatherStatisticsQuery();
}

uint64_t sub_1A606C1F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _QWORD *v11;

  OUTLINED_FUNCTION_93_2(a1);
  v2 = OUTLINED_FUNCTION_297_1();
  OUTLINED_FUNCTION_154_1(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 192) = v11;
  *v11 = v1;
  v11[1] = sub_1A606C25C;
  OUTLINED_FUNCTION_295();
  OUTLINED_FUNCTION_67_0();
  return OUTLINED_FUNCTION_32_11();
}

uint64_t sub_1A606C25C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_148_3();
  OUTLINED_FUNCTION_31_1();
  if (!v0)
    sub_1A5FAFD58(*(_QWORD *)(v1 + 128), &qword_1EE815640);
  OUTLINED_FUNCTION_67_0();
  return OUTLINED_FUNCTION_75_3();
}

uint64_t sub_1A606C2B0(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_127(a1, &qword_1EE815640);
  OUTLINED_FUNCTION_36_1();
  OUTLINED_FUNCTION_31_1();
  return OUTLINED_FUNCTION_16_23(*(uint64_t (**)(void))(v1 + 8));
}

void sub_1A606C2F0()
{
  OUTLINED_FUNCTION_122_2();
  type metadata accessor for HourlyWeatherStatistics();
}

uint64_t sub_1A606C310(uint64_t a1)
{
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_92_2(a1);
  OUTLINED_FUNCTION_36_1();
  OUTLINED_FUNCTION_31_1();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_196_0();
  return OUTLINED_FUNCTION_181(v1);
}

void sub_1A606C328()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815658);
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815640);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for HourTemperatureStatistics();
  sub_1A5FAF4C0(&qword_1ED190AD8, (void (*)(uint64_t))type metadata accessor for HourTemperatureStatistics);
  sub_1A5FAF4C0(&qword_1ED190AC8, (void (*)(uint64_t))type metadata accessor for HourTemperatureStatistics);
  sub_1A5FAF4C0(&qword_1ED190AD0, (void (*)(uint64_t))type metadata accessor for HourTemperatureStatistics);
  type metadata accessor for HourlyWeatherStatisticsQuery();
}

void sub_1A606C448(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v3, v1, a1);
  *(_QWORD *)(v6 - 112) = v3;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16))(v4, *(_QWORD *)(v6 - 160), v2);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v8 + v7, v4, v2);
  sub_1A60658A8(*(_QWORD *)(v6 - 152), *(_QWORD *)(v6 - 144), *(_QWORD *)(v6 - 128), *(_DWORD *)(v6 - 116), v6 - 112, (uint64_t)sub_1A606D030, v8);
}

void sub_1A606C4D0()
{
  uint64_t v0;

  swift_release();
  sub_1A5FAFD58(v0, &qword_1EE815640);
}

void sub_1A606C508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v23 = a2;
  v24 = a5;
  v21 = a3;
  v22 = a4;
  v20 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815610);
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v18 = v5;
  v19 = v6;
  MEMORY[0x1E0C80A78](v5);
  v17 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815608);
  MEMORY[0x1E0C80A78](v8);
  v16 = type metadata accessor for MonthTemperatureStatistics();
  sub_1A5FAF4C0(&qword_1ED190B18, (void (*)(uint64_t))type metadata accessor for MonthTemperatureStatistics);
  v15 = v9;
  sub_1A5FAF4C0(&qword_1ED190B08, (void (*)(uint64_t))type metadata accessor for MonthTemperatureStatistics);
  v11 = v10;
  sub_1A5FAF4C0(&qword_1ED190B10, (void (*)(uint64_t))type metadata accessor for MonthTemperatureStatistics);
  v13 = v12;
  v14[1] = type metadata accessor for MonthPrecipitationStatistics();
  sub_1A5FAF4C0(&qword_1ED190B30, (void (*)(uint64_t))type metadata accessor for MonthPrecipitationStatistics);
  sub_1A5FAF4C0(&qword_1ED190B20, (void (*)(uint64_t))type metadata accessor for MonthPrecipitationStatistics);
  sub_1A5FAF4C0(&qword_1ED190B28, (void (*)(uint64_t))type metadata accessor for MonthPrecipitationStatistics);
  v25 = v16;
  v26 = v15;
  v27 = v11;
  v28 = v13;
  type metadata accessor for MonthlyWeatherStatisticsQuery();
}

void sub_1A606C6A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v3, v5, a1);
  *(_QWORD *)(v6 - 104) = v2;
  *(_QWORD *)(v6 - 96) = v3;
  *(_QWORD *)(v6 - 128) = *(_QWORD *)(v6 - 216);
  *(_QWORD *)(v6 - 120) = v4;
  *(_QWORD *)(v6 - 112) = v1;
  type metadata accessor for MonthlyWeatherStatisticsQuery();
}

void sub_1A606C6E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v3, a1);
  *(_QWORD *)(v4 - 88) = v1;
  v6 = *(_QWORD *)(v4 - 192);
  v5 = *(_QWORD *)(v4 - 184);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v6, *(_QWORD *)(v4 - 168), v5);
  v7 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v8 + v7, v6, v5);
  sub_1A6066BF4(*(_QWORD *)(v4 - 160), *(_QWORD *)(v4 - 152), *(_QWORD *)(v4 - 136), v4 - 96, (uint64_t)sub_1A606CDD8, v8);
}

void sub_1A606C770()
{
  uint64_t v0;

  swift_release();
  sub_1A5FAFD58(v0, &qword_1EE815608);
}

_QWORD *_s6ErrorsOwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s6ErrorsOwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s6ErrorsOwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ErrorsOwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ErrorsOwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherService.Errors()
{
  return &type metadata for WeatherService.Errors;
}

uint64_t sub_1A606C8D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_179();
  OUTLINED_FUNCTION_71_3();
  OUTLINED_FUNCTION_61_3();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_357(v0);
  v2 = OUTLINED_FUNCTION_80_2(v1);
  return sub_1A60695C0(v2, v3, v4, v5, v6);
}

uint64_t sub_1A606C938()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_179();
  OUTLINED_FUNCTION_71_3();
  OUTLINED_FUNCTION_61_3();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_357(v0);
  v2 = OUTLINED_FUNCTION_80_2(v1);
  return sub_1A6069938(v2, v3, v4, v5, v6);
}

uint64_t sub_1A606C998()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A606C9C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = swift_task_alloc();
  v7 = (_QWORD *)OUTLINED_FUNCTION_357(v6);
  *v7 = v2;
  v7[1] = sub_1A6078CB4;
  return sub_1A6069CEC(a1, v5, v4);
}

uint64_t objectdestroy_53Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  OUTLINED_FUNCTION_6_2();
  v1 = *(_QWORD *)(OUTLINED_FUNCTION_179() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  OUTLINED_FUNCTION_114();
  swift_release();

  OUTLINED_FUNCTION_36(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_150_2();
  OUTLINED_FUNCTION_313_0();
  return swift_deallocObject();
}

uint64_t sub_1A606CAC8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_179();
  OUTLINED_FUNCTION_71_3();
  OUTLINED_FUNCTION_61_3();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_357(v0);
  v2 = OUTLINED_FUNCTION_80_2(v1);
  return sub_1A606A354(v2, v3, v4, v5, v6);
}

uint64_t sub_1A606CB28()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_25(*(uint64_t (**)(void))(v2 + 8));
}

void sub_1A606CB68()
{
  sub_1A606BE00();
}

uint64_t sub_1A606CB9C()
{
  return objectdestroy_73Tm(&qword_1EE8155F0);
}

uint64_t sub_1A606CBA8()
{
  return sub_1A606D04C();
}

uint64_t sub_1A606CBC4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v0 = OUTLINED_FUNCTION_264_0();
  return sub_1A6064AA4(v0, v1, v2);
}

uint64_t sub_1A606CBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EE813D80) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(OUTLINED_FUNCTION_6() - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(OUTLINED_FUNCTION_114() - 8);
  v8 = (((((v2 + 16) & ~v2) + v3 + v5) & ~v5) + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  OUTLINED_FUNCTION_1_17();
  v9 = OUTLINED_FUNCTION_267_0();
  v10(v9);
  OUTLINED_FUNCTION_90_2();
  OUTLINED_FUNCTION_150_2();
  OUTLINED_FUNCTION_122(v0 + v8, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  OUTLINED_FUNCTION_90_2();
  return swift_deallocObject();
}

void sub_1A606CCF0()
{
  OUTLINED_FUNCTION_216_0();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE813D80);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_369();
  sub_1A61220A8();
  OUTLINED_FUNCTION_369();
  OUTLINED_FUNCTION_269_0();
  OUTLINED_FUNCTION_182_0();
  sub_1A6064B78();
}

void sub_1A606CD94()
{
  OUTLINED_FUNCTION_261_0();
  sub_1A60655F4();
}

void sub_1A606CDBC(uint64_t a1)
{
  uint64_t *v1;

  sub_1A606C508(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1A606CDCC()
{
  return objectdestroy_73Tm(&qword_1EE815610);
}

uint64_t sub_1A606CDD8()
{
  return sub_1A606D04C();
}

uint64_t sub_1A606CDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815608);
  OUTLINED_FUNCTION_281_0();
  v3 = v0 + v2;
  v4 = OUTLINED_FUNCTION_1_17();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE813A68);
  OUTLINED_FUNCTION_90_2();
  v5(v3 + *(int *)(v1 + 48), v4);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE813A70);
  OUTLINED_FUNCTION_90_2();
  OUTLINED_FUNCTION_90_2();
  OUTLINED_FUNCTION_313_0();
  return OUTLINED_FUNCTION_144_2();
}

void sub_1A606CEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_216_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815608);
  OUTLINED_FUNCTION_159_0();
  v0 = OUTLINED_FUNCTION_182_0();
  sub_1A6067678(v0, v1, v2, v3, v4);
}

void sub_1A606CEE8()
{
  OUTLINED_FUNCTION_366();
}

void sub_1A606CEF4()
{
  OUTLINED_FUNCTION_261_0();
  sub_1A60655F4();
}

uint64_t sub_1A606CF1C(uint64_t a1)
{
  return sub_1A606CFB8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A606BC20);
}

uint64_t sub_1A606CF28()
{
  return objectdestroy_73Tm(&qword_1EE815630);
}

uint64_t sub_1A606CF34()
{
  return sub_1A606D04C();
}

uint64_t sub_1A606CF50()
{
  return objectdestroy_107Tm(qword_1EE813928);
}

uint64_t sub_1A606CF5C(uint64_t a1, uint64_t a2)
{
  return sub_1A606D144(a1, a2, qword_1EE813928, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD))sub_1A6063554);
}

void sub_1A606CF84()
{
  OUTLINED_FUNCTION_261_0();
  sub_1A60655F4();
}

uint64_t sub_1A606CFAC(uint64_t a1)
{
  return sub_1A606CFB8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A606C328);
}

uint64_t sub_1A606CFB8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1A606CFD0()
{
  return objectdestroy_73Tm(&qword_1EE815658);
}

uint64_t objectdestroy_73Tm(uint64_t *a1)
{
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_66(*(_QWORD *)(v1 - 8));
  return swift_deallocObject();
}

uint64_t sub_1A606D030()
{
  return sub_1A606D04C();
}

uint64_t sub_1A606D04C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  OUTLINED_FUNCTION_328();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(v5) - 8) + 80);
  return sub_1A606BFF0(v4, v1 + ((v6 + 16) & ~v6), v2, v0, v3);
}

uint64_t sub_1A606D0A8()
{
  return objectdestroy_107Tm(&qword_1EE815640);
}

uint64_t objectdestroy_107Tm(uint64_t *a1)
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_281_0();
  v1 = OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_352(*(_QWORD *)(v1 - 8));
  OUTLINED_FUNCTION_90_2();
  swift_release();
  OUTLINED_FUNCTION_313_0();
  return OUTLINED_FUNCTION_18_3();
}

uint64_t sub_1A606D120(uint64_t a1, uint64_t a2)
{
  return sub_1A606D144(a1, a2, &qword_1EE815640, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD))sub_1A606600C);
}

uint64_t sub_1A606D144(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;

  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return a4(a1, a2, v4 + v9, *(unsigned __int8 *)(v4 + v9 + *(_QWORD *)(v8 + 64)), *(_QWORD *)(((v9 + *(_QWORD *)(v8 + 64)) & 0xFFFFFFFFFFFFFFF8) + v4 + 8), *(_QWORD *)(((v9 + *(_QWORD *)(v8 + 64)) & 0xFFFFFFFFFFFFFFF8) + v4 + 16));
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A606D1F8()
{
  OUTLINED_FUNCTION_261_0();
  sub_1A60655F4();
}

id sub_1A606D220(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_1A606D22C(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_1A606D238()
{
  uint64_t v0;

  return sub_1A605AB48(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1A606D254()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_291_0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);

  OUTLINED_FUNCTION_36(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return OUTLINED_FUNCTION_18_3();
}

uint64_t sub_1A606D2B4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A6122708() - 8) + 80);
  return sub_1A5FA006C(*a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

void sub_1A606D310()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[2];

  OUTLINED_FUNCTION_6_2();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = (uint64_t *)(*(_QWORD *)(v0 + 24) & 0xFFFFFFFFFFFFFFFELL);
  v4 = OUTLINED_FUNCTION_6();
  v7 = *(_QWORD *)(v4 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  if (v2 == 1)
  {
    OUTLINED_FUNCTION_22_14(v4, *v3, v5, v6);
  }
  else
  {
    v18[1] = v18;
    MEMORY[0x1E0C80A78](v4);
    OUTLINED_FUNCTION_12();
    if (v2)
    {
      v13 = v1;
      v14 = v2;
      do
      {
        v15 = *v3++;
        v10 = OUTLINED_FUNCTION_280_0(v10, v15, v11, v12);
        *v13++ = v10;
        --v14;
      }
      while (v14);
    }
    OUTLINED_FUNCTION_28_0();
  }
  v16 = (v8 + 32) & ~v8;
  v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_36(v0 + v16, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));

  OUTLINED_FUNCTION_150_2();
  OUTLINED_FUNCTION_90_2();
  swift_deallocObject();
  OUTLINED_FUNCTION_0_0();
}

void sub_1A606D438(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a3;
  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFELL);
  v10 = OUTLINED_FUNCTION_6();
  v13 = *(_QWORD *)(v10 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 64);
  if (v7 == 1)
  {
    v16 = type metadata accessor for WeatherQuery(0, *v9, v11, v12);
  }
  else
  {
    v28 = a1;
    v29 = a2;
    v30 = v4;
    v27[1] = v27;
    MEMORY[0x1E0C80A78](v10);
    OUTLINED_FUNCTION_54_0();
    if (v7)
    {
      v19 = v4;
      v20 = v7;
      do
      {
        v21 = *v9++;
        *v19++ = type metadata accessor for WeatherQuery(255, v21, v17, v18);
        --v20;
      }
      while (v20);
    }
    v16 = OUTLINED_FUNCTION_28_0();
    a1 = v28;
    a2 = v29;
  }
  v22 = (v14 + 32) & ~v14;
  v23 = (v15 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)(v16 - 8);
  v25 = (v23 + *(unsigned __int8 *)(v24 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v26 = (*(_QWORD *)(v24 + 64) + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A605AC04(a1, a2, (_QWORD *)(v3 + v22), *(void **)(v3 + v23), v3 + v25, *(void (**)(uint64_t))(v3 + v26), *(_QWORD *)(v3 + v26 + 8), v7, v8);
  OUTLINED_FUNCTION_63_5();
}

uint64_t sub_1A606D574()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A606D5A0(void *a1)
{
  uint64_t v1;

  return sub_1A605B928(a1, *(void **)(v1 + 32), *(void (**)(_QWORD))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16));
}

void sub_1A606D5B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_8_0(a1, a2, a3);
  OUTLINED_FUNCTION_149(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  OUTLINED_FUNCTION_51();
}

void sub_1A606D5E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_8_0(a1, a2, a3);
  OUTLINED_FUNCTION_149(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  OUTLINED_FUNCTION_51();
}

uint64_t *sub_1A606D610(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  int *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  int *v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  int *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  int *v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  int *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t);
  int *v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  int *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  void (*v152)(char *, char *, uint64_t);
  int *v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  int *v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, char *, uint64_t);
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  int *v216;
  uint64_t v217;
  _QWORD *v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  void (*v226)(char *, char *, uint64_t);
  int *v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  _QWORD *v233;
  _QWORD *v234;
  int *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  void (*v241)(char *, char *, uint64_t);
  int *v242;
  uint64_t v243;
  _QWORD *v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  char *v251;
  char *v252;
  int *v253;
  uint64_t v254;
  uint64_t v255;
  void (*v256)(char *, char *, uint64_t);
  uint64_t v257;
  char *v258;
  char *v259;
  int *v260;
  uint64_t v261;
  _QWORD *v262;
  _QWORD *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  char *v268;
  uint64_t v269;
  void (*v270)(char *, char *, uint64_t);
  int *v271;
  uint64_t v272;
  char *v273;
  char *v274;
  int *v275;
  uint64_t v276;
  uint64_t v277;
  void (*v278)(char *, char *, uint64_t);
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  uint64_t v298;
  uint64_t v300;
  void (*v301)(char *, char *, uint64_t);
  uint64_t v302;
  void (*v303)(char *, char *);
  void (*v304)(char *, char *, uint64_t);
  uint64_t v305;
  uint64_t v306;
  void (*__dst)(uint64_t *, uint64_t *);
  char *__dsta;
  uint64_t v309;
  uint64_t v310;
  int *v311;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = (int *)type metadata accessor for CurrentWeather();
    v311 = v6;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = sub_1A6121F58();
      __dst = *(void (**)(uint64_t *, uint64_t *))(*(_QWORD *)(v10 - 8) + 16);
      v309 = v10;
      __dst(a1, a2);
      *(uint64_t *)((char *)a1 + v7[5]) = *(uint64_t *)((char *)a2 + v7[5]);
      *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      v11 = v7[9];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
      *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
      v14 = v7[11];
      v15 = (uint64_t *)((char *)a1 + v14);
      v16 = (uint64_t *)((char *)a2 + v14);
      v17 = v16[1];
      *v15 = *v16;
      v15[1] = v17;
      v18 = v7[12];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      swift_bridgeObjectRetain();
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
      v301 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      v301(v19, v20, v21);
      *(uint64_t *)((char *)a1 + v7[13]) = *(uint64_t *)((char *)a2 + v7[13]);
      v22 = v7[14];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
      v303 = *(void (**)(char *, char *))(*(_QWORD *)(v25 - 8) + 16);
      v305 = v25;
      v303(v23, v24);
      v26 = v7[15];
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      *((_BYTE *)a1 + v7[16]) = *((_BYTE *)a2 + v7[16]);
      v30 = v7[17];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
      v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
      v34(v31, v32, v33);
      v35 = (int *)type metadata accessor for PrecipitationAmount();
      v34(&v31[v35[5]], &v32[v35[5]], v33);
      v34(&v31[v35[6]], &v32[v35[6]], v33);
      v34(&v31[v35[7]], &v32[v35[7]], v33);
      v34(&v31[v35[8]], &v32[v35[8]], v33);
      v34(&v31[v35[9]], &v32[v35[9]], v33);
      v36 = v7[18];
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v34((char *)a1 + v36, (char *)a2 + v36, v33);
      v34(&v37[v35[5]], &v38[v35[5]], v33);
      v34(&v37[v35[6]], &v38[v35[6]], v33);
      v34(&v37[v35[7]], &v38[v35[7]], v33);
      v34(&v37[v35[8]], &v38[v35[8]], v33);
      v34(&v37[v35[9]], &v38[v35[9]], v33);
      v39 = v7[19];
      v40 = (char *)a1 + v39;
      v41 = (char *)a2 + v39;
      v34((char *)a1 + v39, (char *)a2 + v39, v33);
      v42 = (int *)type metadata accessor for PrecipitationAmountByType();
      v34(&v40[v42[5]], &v41[v42[5]], v33);
      v34(&v40[v42[6]], &v41[v42[6]], v33);
      v34(&v40[v42[7]], &v41[v42[7]], v33);
      v34(&v40[v42[8]], &v41[v42[8]], v33);
      v43 = v42[9];
      v44 = &v40[v43];
      v45 = &v41[v43];
      v34(v44, &v41[v43], v33);
      v46 = (int *)type metadata accessor for SnowfallAmount();
      v34(&v44[v46[5]], &v45[v46[5]], v33);
      v34(&v44[v46[6]], &v45[v46[6]], v33);
      v34(&v44[v46[7]], &v45[v46[7]], v33);
      v34(&v44[v46[8]], &v45[v46[8]], v33);
      v34(&v44[v46[9]], &v45[v46[9]], v33);
      v47 = v7[20];
      v48 = (char *)a1 + v47;
      v49 = (char *)a2 + v47;
      v34((char *)a1 + v47, (char *)a2 + v47, v33);
      v34(&v48[v42[5]], &v49[v42[5]], v33);
      v34(&v48[v42[6]], &v49[v42[6]], v33);
      v34(&v48[v42[7]], &v49[v42[7]], v33);
      v34(&v48[v42[8]], &v49[v42[8]], v33);
      v50 = v42[9];
      v51 = &v48[v50];
      v52 = &v49[v50];
      v34(v51, v52, v33);
      v34(&v51[v46[5]], &v52[v46[5]], v33);
      v34(&v51[v46[6]], &v52[v46[6]], v33);
      v34(&v51[v46[7]], &v52[v46[7]], v33);
      v34(&v51[v46[8]], &v52[v46[8]], v33);
      v34(&v51[v46[9]], &v52[v46[9]], v33);
      v53 = v7[21];
      v54 = (char *)a1 + v53;
      v55 = (char *)a2 + v53;
      v34((char *)a1 + v53, (char *)a2 + v53, v33);
      v34(&v54[v42[5]], &v55[v42[5]], v33);
      v34(&v54[v42[6]], &v55[v42[6]], v33);
      v34(&v54[v42[7]], &v55[v42[7]], v33);
      v34(&v54[v42[8]], &v55[v42[8]], v33);
      v56 = v42[9];
      v57 = &v54[v56];
      v58 = &v55[v56];
      v34(v57, v58, v33);
      v34(&v57[v46[5]], &v58[v46[5]], v33);
      v34(&v57[v46[6]], &v58[v46[6]], v33);
      v34(&v57[v46[7]], &v58[v46[7]], v33);
      v34(&v57[v46[8]], &v58[v46[8]], v33);
      v34(&v57[v46[9]], &v58[v46[9]], v33);
      v59 = v7[22];
      v60 = (char *)a1 + v59;
      v61 = (char *)a2 + v59;
      v34((char *)a1 + v59, (char *)a2 + v59, v33);
      v34(&v60[v42[5]], &v61[v42[5]], v33);
      v34(&v60[v42[6]], &v61[v42[6]], v33);
      v34(&v60[v42[7]], &v61[v42[7]], v33);
      v34(&v60[v42[8]], &v61[v42[8]], v33);
      v62 = v42[9];
      v63 = &v60[v62];
      v64 = &v61[v62];
      v34(v63, v64, v33);
      v34(&v63[v46[5]], &v64[v46[5]], v33);
      v34(&v63[v46[6]], &v64[v46[6]], v33);
      v34(&v63[v46[7]], &v64[v46[7]], v33);
      v34(&v63[v46[8]], &v64[v46[8]], v33);
      v34(&v63[v46[9]], &v64[v46[9]], v33);
      v65 = v7[23];
      v66 = (char *)a1 + v65;
      v67 = (char *)a2 + v65;
      v34((char *)a1 + v65, (char *)a2 + v65, v33);
      v34(&v66[v42[5]], &v67[v42[5]], v33);
      v34(&v66[v42[6]], &v67[v42[6]], v33);
      v34(&v66[v42[7]], &v67[v42[7]], v33);
      v34(&v66[v42[8]], &v67[v42[8]], v33);
      v68 = v42[9];
      v69 = &v66[v68];
      v70 = &v67[v68];
      v34(v69, v70, v33);
      v34(&v69[v46[5]], &v70[v46[5]], v33);
      v34(&v69[v46[6]], &v70[v46[6]], v33);
      v34(&v69[v46[7]], &v70[v46[7]], v33);
      v34(&v69[v46[8]], &v70[v46[8]], v33);
      v34(&v69[v46[9]], &v70[v46[9]], v33);
      v71 = v7[24];
      v72 = (char *)a1 + v71;
      v73 = (char *)a2 + v71;
      v34((char *)a1 + v71, (char *)a2 + v71, v33);
      v34(&v72[v42[5]], &v73[v42[5]], v33);
      v34(&v72[v42[6]], &v73[v42[6]], v33);
      v34(&v72[v42[7]], &v73[v42[7]], v33);
      v34(&v72[v42[8]], &v73[v42[8]], v33);
      v74 = v42[9];
      v75 = &v72[v74];
      v76 = &v73[v74];
      v34(v75, v76, v33);
      v34(&v75[v46[5]], &v76[v46[5]], v33);
      v34(&v75[v46[6]], &v76[v46[6]], v33);
      v34(&v75[v46[7]], &v76[v46[7]], v33);
      v34(&v75[v46[8]], &v76[v46[8]], v33);
      v34(&v75[v46[9]], &v76[v46[9]], v33);
      v77 = v7[25];
      v78 = (char *)a1 + v77;
      v79 = (char *)a2 + v77;
      *(_QWORD *)v78 = *(_QWORD *)v79;
      v78[8] = v79[8];
      *((_BYTE *)a1 + v7[26]) = *((_BYTE *)a2 + v7[26]);
      v301((char *)a1 + v7[27], (char *)a2 + v7[27], v21);
      v301((char *)a1 + v7[28], (char *)a2 + v7[28], v21);
      v80 = v7[29];
      v81 = (char *)a1 + v80;
      v82 = (char *)a2 + v80;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v80, 1, v21))
      {
        v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        v301(v81, v82, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v21);
      }
      v84 = v7[30];
      v85 = (char *)a1 + v84;
      v86 = (char *)a2 + v84;
      v6 = v311;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v84, 1, v21))
      {
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        v301(v85, v86, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v21);
      }
      v88 = v7[31];
      v89 = (char *)a1 + v88;
      v90 = (char *)a2 + v88;
      *(_QWORD *)v89 = *(_QWORD *)v90;
      v89[8] = v90[8];
      v34((char *)a1 + v7[32], (char *)a2 + v7[32], v33);
      v91 = v7[33];
      v92 = (char *)a1 + v91;
      v93 = (char *)a2 + v91;
      *((_BYTE *)a1 + v91) = *((_BYTE *)a2 + v91);
      v94 = (int *)type metadata accessor for Wind();
      v95 = v94[5];
      v96 = &v92[v95];
      v97 = &v93[v95];
      v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
      ((void (*)(char *, char *, uint64_t))v303)(&v92[v94[6]], &v93[v94[6]], v305);
      v99 = v94[7];
      v100 = &v92[v99];
      v101 = &v93[v99];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v93[v99], 1, v305))
      {
        v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
        memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v303)(v100, v101, v305);
        __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v305);
      }
      v103 = v7[34];
      v104 = (char *)a1 + v103;
      v105 = (char *)a2 + v103;
      ((void (*)(char *, char *, uint64_t))__dst)((char *)a1 + v103, (char *)a2 + v103, v309);
      v106 = (int *)type metadata accessor for WeatherMetadata();
      ((void (*)(char *, char *, uint64_t))__dst)(&v104[v106[5]], &v105[v106[5]], v309);
      *(_QWORD *)&v104[v106[6]] = *(_QWORD *)&v105[v106[6]];
      *(_QWORD *)&v104[v106[7]] = *(_QWORD *)&v105[v106[7]];
      *(_QWORD *)&v104[v106[8]] = *(_QWORD *)&v105[v106[8]];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v7);
    }
    v107 = v6[5];
    v108 = (uint64_t *)((char *)a1 + v107);
    v109 = (uint64_t *)((char *)a2 + v107);
    v110 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, (uint64_t)v110))
    {
      v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
      memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    }
    else
    {
      *v108 = *v109;
      v112 = v110[13];
      v113 = (char *)v108 + v112;
      v114 = (char *)v109 + v112;
      v115 = sub_1A6121F58();
      v116 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16);
      swift_bridgeObjectRetain();
      v116(v113, v114, v115);
      v117 = (int *)type metadata accessor for WeatherMetadata();
      v116(&v113[v117[5]], &v114[v117[5]], v115);
      v6 = v311;
      *(_QWORD *)&v113[v117[6]] = *(_QWORD *)&v114[v117[6]];
      *(_QWORD *)&v113[v117[7]] = *(_QWORD *)&v114[v117[7]];
      *(_QWORD *)&v113[v117[8]] = *(_QWORD *)&v114[v117[8]];
      v118 = v110[14];
      v119 = (_QWORD *)((char *)v108 + v118);
      v120 = (_QWORD *)((char *)v109 + v118);
      v121 = v120[1];
      *v119 = *v120;
      v119[1] = v121;
      *(_QWORD *)((char *)v108 + v110[15]) = *(_QWORD *)((char *)v109 + v110[15]);
      *(_QWORD *)((char *)v108 + v110[16]) = *(_QWORD *)((char *)v109 + v110[16]);
      v122 = v110[17];
      v123 = (char *)v108 + v122;
      v124 = (char *)v109 + v122;
      v123[16] = v124[16];
      *(_OWORD *)v123 = *(_OWORD *)v124;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, (uint64_t)v110);
    }
    v125 = v6[6];
    v126 = (uint64_t *)((char *)a1 + v125);
    v127 = (uint64_t *)((char *)a2 + v125);
    v128 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
    if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, (uint64_t)v128))
    {
      v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
      memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
    }
    else
    {
      *v126 = *v127;
      v130 = v128[13];
      v131 = (char *)v126 + v130;
      v132 = (char *)v127 + v130;
      v133 = sub_1A6121F58();
      v134 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 16);
      swift_bridgeObjectRetain();
      v134(v131, v132, v133);
      v135 = (int *)type metadata accessor for WeatherMetadata();
      v134(&v131[v135[5]], &v132[v135[5]], v133);
      v6 = v311;
      *(_QWORD *)&v131[v135[6]] = *(_QWORD *)&v132[v135[6]];
      *(_QWORD *)&v131[v135[7]] = *(_QWORD *)&v132[v135[7]];
      *(_QWORD *)&v131[v135[8]] = *(_QWORD *)&v132[v135[8]];
      v136 = v128[14];
      v137 = (_QWORD *)((char *)v126 + v136);
      v138 = (_QWORD *)((char *)v127 + v136);
      v139 = v138[1];
      *v137 = *v138;
      v137[1] = v139;
      *(_QWORD *)((char *)v126 + v128[15]) = *(_QWORD *)((char *)v127 + v128[15]);
      *(_QWORD *)((char *)v126 + v128[16]) = *(_QWORD *)((char *)v127 + v128[16]);
      v140 = v128[17];
      v141 = (char *)v126 + v140;
      v142 = (char *)v127 + v140;
      v141[16] = v142[16];
      *(_OWORD *)v141 = *(_OWORD *)v142;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, (uint64_t)v128);
    }
    v143 = v6[7];
    v144 = (uint64_t *)((char *)a1 + v143);
    v145 = (uint64_t *)((char *)a2 + v143);
    v146 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
    if (__swift_getEnumTagSinglePayload((uint64_t)v145, 1, (uint64_t)v146))
    {
      v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
      memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
    }
    else
    {
      *v144 = *v145;
      v148 = v146[13];
      v149 = (char *)v144 + v148;
      v150 = (char *)v145 + v148;
      v151 = sub_1A6121F58();
      v152 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16);
      swift_bridgeObjectRetain();
      v152(v149, v150, v151);
      v153 = (int *)type metadata accessor for WeatherMetadata();
      v152(&v149[v153[5]], &v150[v153[5]], v151);
      v6 = v311;
      *(_QWORD *)&v149[v153[6]] = *(_QWORD *)&v150[v153[6]];
      *(_QWORD *)&v149[v153[7]] = *(_QWORD *)&v150[v153[7]];
      *(_QWORD *)&v149[v153[8]] = *(_QWORD *)&v150[v153[8]];
      v154 = v146[14];
      v155 = (_QWORD *)((char *)v144 + v154);
      v156 = (_QWORD *)((char *)v145 + v154);
      v157 = v156[1];
      *v155 = *v156;
      v155[1] = v157;
      *(_QWORD *)((char *)v144 + v146[15]) = *(_QWORD *)((char *)v145 + v146[15]);
      *(_QWORD *)((char *)v144 + v146[16]) = *(_QWORD *)((char *)v145 + v146[16]);
      v158 = v146[17];
      v159 = (char *)v144 + v158;
      v160 = (char *)v145 + v158;
      v159[16] = v160[16];
      *(_OWORD *)v159 = *(_OWORD *)v160;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v144, 0, 1, (uint64_t)v146);
    }
    v161 = v6[8];
    v162 = (char *)a1 + v161;
    v163 = (char *)a2 + v161;
    v164 = (int *)type metadata accessor for AirQuality();
    if (__swift_getEnumTagSinglePayload((uint64_t)v163, 1, (uint64_t)v164))
    {
      v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
      memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
    }
    else
    {
      v166 = sub_1A6121F58();
      v167 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 16);
      v167(v162, v163, v166);
      v304 = v167;
      v306 = v166;
      v167(&v162[v164[5]], &v163[v164[5]], v166);
      v168 = v164[6];
      v169 = &v162[v168];
      v170 = &v163[v168];
      v302 = *((_QWORD *)v170 + 1);
      *(_QWORD *)v169 = *(_QWORD *)v170;
      *((_QWORD *)v169 + 1) = v302;
      v171 = v164[7];
      v172 = &v162[v171];
      v173 = &v163[v171];
      v174 = *((_QWORD *)v173 + 1);
      *(_QWORD *)v172 = *(_QWORD *)v173;
      *((_QWORD *)v172 + 1) = v174;
      v175 = *((_QWORD *)v173 + 3);
      *((_QWORD *)v172 + 2) = *((_QWORD *)v173 + 2);
      *((_QWORD *)v172 + 3) = v175;
      v176 = *((_QWORD *)v173 + 5);
      *((_QWORD *)v172 + 4) = *((_QWORD *)v173 + 4);
      *((_QWORD *)v172 + 5) = v176;
      v177 = *((_QWORD *)v173 + 7);
      *((_QWORD *)v172 + 6) = *((_QWORD *)v173 + 6);
      *((_QWORD *)v172 + 7) = v177;
      v178 = *((_QWORD *)v173 + 9);
      *((_QWORD *)v172 + 8) = *((_QWORD *)v173 + 8);
      *((_QWORD *)v172 + 9) = v178;
      v172[80] = v173[80];
      *(_OWORD *)(v172 + 88) = *(_OWORD *)(v173 + 88);
      v300 = *((_QWORD *)v173 + 14);
      *((_QWORD *)v172 + 13) = *((_QWORD *)v173 + 13);
      *((_QWORD *)v172 + 14) = v300;
      *(_QWORD *)&v162[v164[8]] = *(_QWORD *)&v163[v164[8]];
      v179 = v164[9];
      v180 = &v162[v179];
      v181 = &v163[v179];
      v182 = *((_QWORD *)v181 + 1);
      *(_QWORD *)v180 = *(_QWORD *)v181;
      *((_QWORD *)v180 + 1) = v182;
      *((_OWORD *)v180 + 1) = *((_OWORD *)v181 + 1);
      v183 = *((_QWORD *)v181 + 5);
      *((_QWORD *)v180 + 4) = *((_QWORD *)v181 + 4);
      *((_QWORD *)v180 + 5) = v183;
      *((_QWORD *)v180 + 6) = *((_QWORD *)v181 + 6);
      *(_OWORD *)(v180 + 56) = *(_OWORD *)(v181 + 56);
      v184 = *((_QWORD *)v181 + 10);
      *((_QWORD *)v180 + 9) = *((_QWORD *)v181 + 9);
      *((_QWORD *)v180 + 10) = v184;
      v162[v164[10]] = v163[v164[10]];
      v185 = v164[11];
      __dsta = &v162[v185];
      v186 = &v163[v185];
      v310 = type metadata accessor for ProviderAttribution();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v186, 1, v310))
      {
        v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
        memcpy(__dsta, v186, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
        v6 = v311;
      }
      else
      {
        v188 = *((_QWORD *)v186 + 1);
        *(_QWORD *)__dsta = *(_QWORD *)v186;
        *((_QWORD *)__dsta + 1) = v188;
        v189 = *(int *)(v310 + 20);
        v190 = &__dsta[v189];
        v191 = &v186[v189];
        v192 = sub_1A6121DF0();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v191, 1, v192))
        {
          v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
          memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v193 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v190, v191, v192);
          __swift_storeEnumTagSinglePayload((uint64_t)v190, 0, 1, v192);
        }
        v6 = v311;
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v310);
      }
      v194 = v164[12];
      v195 = &v162[v194];
      v196 = &v163[v194];
      v197 = sub_1A6121DF0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 16))(v195, v196, v197);
      *(_QWORD *)&v162[v164[13]] = *(_QWORD *)&v163[v164[13]];
      v198 = v164[14];
      v199 = &v162[v198];
      v200 = &v163[v198];
      v201 = type metadata accessor for AirPollutant();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v200, 1, v201))
      {
        v202 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
        memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
      }
      else
      {
        *v199 = *v200;
        v203 = *(int *)(v201 + 20);
        v204 = &v199[v203];
        v205 = &v200[v203];
        type metadata accessor for AirPollutantMeasurement();
        if (swift_getEnumCaseMultiPayload() == 1)
          v206 = &qword_1ED190B60;
        else
          v206 = &qword_1ED1922B8;
        v207 = __swift_instantiateConcreteTypeFromMangledName(v206);
        v208 = v205;
        v6 = v311;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 16))(v204, v208, v207);
        swift_storeEnumTagMultiPayload();
        v199[*(int *)(v201 + 24)] = v200[*(int *)(v201 + 24)];
        __swift_storeEnumTagSinglePayload((uint64_t)v199, 0, 1, v201);
      }
      v162[v164[15]] = v163[v164[15]];
      v209 = v164[16];
      v210 = &v162[v209];
      v211 = &v163[v209];
      *v210 = *v211;
      v212 = *((_QWORD *)v211 + 2);
      *((_QWORD *)v210 + 1) = *((_QWORD *)v211 + 1);
      *((_QWORD *)v210 + 2) = v212;
      v213 = v164[17];
      v214 = &v162[v213];
      v215 = &v163[v213];
      swift_bridgeObjectRetain();
      v304(v214, v215, v306);
      v216 = (int *)type metadata accessor for WeatherMetadata();
      v304(&v214[v216[5]], &v215[v216[5]], v306);
      *(_QWORD *)&v214[v216[6]] = *(_QWORD *)&v215[v216[6]];
      *(_QWORD *)&v214[v216[7]] = *(_QWORD *)&v215[v216[7]];
      *(_QWORD *)&v214[v216[8]] = *(_QWORD *)&v215[v216[8]];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v162, 0, 1, (uint64_t)v164);
    }
    v217 = v6[9];
    v218 = (uint64_t *)((char *)a1 + v217);
    v219 = (uint64_t *)((char *)a2 + v217);
    v220 = type metadata accessor for WeatherChanges();
    if (__swift_getEnumTagSinglePayload((uint64_t)v219, 1, v220))
    {
      v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
      memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v221 - 8) + 64));
    }
    else
    {
      *v218 = *v219;
      v222 = *(int *)(v220 + 20);
      v223 = (char *)v218 + v222;
      v224 = (char *)v219 + v222;
      v225 = sub_1A6121F58();
      v226 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v225 - 8) + 16);
      swift_bridgeObjectRetain();
      v226(v223, v224, v225);
      v227 = (int *)type metadata accessor for WeatherMetadata();
      v226(&v223[v227[5]], &v224[v227[5]], v225);
      *(_QWORD *)&v223[v227[6]] = *(_QWORD *)&v224[v227[6]];
      *(_QWORD *)&v223[v227[7]] = *(_QWORD *)&v224[v227[7]];
      *(_QWORD *)&v223[v227[8]] = *(_QWORD *)&v224[v227[8]];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v218, 0, 1, v220);
    }
    v228 = v6[11];
    *(uint64_t *)((char *)a1 + v6[10]) = *(uint64_t *)((char *)a2 + v6[10]);
    v229 = (char *)a1 + v228;
    v230 = (char *)a2 + v228;
    *(_WORD *)v229 = *(_WORD *)v230;
    v229[2] = v230[2];
    v231 = v6[13];
    *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
    *((_BYTE *)a1 + v231) = *((_BYTE *)a2 + v231);
    v232 = v6[15];
    *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
    v233 = (uint64_t *)((char *)a1 + v232);
    v234 = (uint64_t *)((char *)a2 + v232);
    swift_bridgeObjectRetain();
    v235 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED194050);
    if (__swift_getEnumTagSinglePayload((uint64_t)v234, 1, (uint64_t)v235))
    {
      v236 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194058);
      memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v236 - 8) + 64));
    }
    else
    {
      *v233 = *v234;
      v237 = v235[13];
      v238 = (char *)v233 + v237;
      v239 = (char *)v234 + v237;
      v240 = sub_1A6121F58();
      v241 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 16);
      swift_bridgeObjectRetain();
      v241(v238, v239, v240);
      v242 = (int *)type metadata accessor for WeatherMetadata();
      v241(&v238[v242[5]], &v239[v242[5]], v240);
      v6 = v311;
      *(_QWORD *)&v238[v242[6]] = *(_QWORD *)&v239[v242[6]];
      *(_QWORD *)&v238[v242[7]] = *(_QWORD *)&v239[v242[7]];
      *(_QWORD *)&v238[v242[8]] = *(_QWORD *)&v239[v242[8]];
      v243 = v235[14];
      v244 = (_QWORD *)((char *)v233 + v243);
      v245 = (_QWORD *)((char *)v234 + v243);
      v246 = v245[1];
      *v244 = *v245;
      v244[1] = v246;
      *(_QWORD *)((char *)v233 + v235[15]) = *(_QWORD *)((char *)v234 + v235[15]);
      *(_QWORD *)((char *)v233 + v235[16]) = *(_QWORD *)((char *)v234 + v235[16]);
      v247 = v235[17];
      v248 = (char *)v233 + v247;
      v249 = (char *)v234 + v247;
      v248[16] = v249[16];
      *(_OWORD *)v248 = *(_OWORD *)v249;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v233, 0, 1, (uint64_t)v235);
    }
    v250 = v6[17];
    *(uint64_t *)((char *)a1 + v6[16]) = *(uint64_t *)((char *)a2 + v6[16]);
    v251 = (char *)a1 + v250;
    v252 = (char *)a2 + v250;
    v253 = (int *)type metadata accessor for TideEvents();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v252, 1, (uint64_t)v253))
    {
      v254 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192930);
      memcpy(v251, v252, *(_QWORD *)(*(_QWORD *)(v254 - 8) + 64));
    }
    else
    {
      v255 = sub_1A6121F58();
      v256 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v255 - 8) + 16);
      v256(v251, v252, v255);
      *(_QWORD *)&v251[v253[5]] = *(_QWORD *)&v252[v253[5]];
      *(_QWORD *)&v251[v253[6]] = *(_QWORD *)&v252[v253[6]];
      *(_OWORD *)&v251[v253[7]] = *(_OWORD *)&v252[v253[7]];
      v257 = v253[8];
      v258 = &v251[v257];
      v259 = &v252[v257];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v256(v258, v259, v255);
      v260 = (int *)type metadata accessor for WeatherMetadata();
      v256(&v258[v260[5]], &v259[v260[5]], v255);
      *(_QWORD *)&v258[v260[6]] = *(_QWORD *)&v259[v260[6]];
      *(_QWORD *)&v258[v260[7]] = *(_QWORD *)&v259[v260[7]];
      *(_QWORD *)&v258[v260[8]] = *(_QWORD *)&v259[v260[8]];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v251, 0, 1, (uint64_t)v253);
    }
    v261 = v6[18];
    v262 = (uint64_t *)((char *)a1 + v261);
    v263 = (uint64_t *)((char *)a2 + v261);
    v264 = type metadata accessor for HistoricalComparisons();
    if (__swift_getEnumTagSinglePayload((uint64_t)v263, 1, v264))
    {
      v265 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
      memcpy(v262, v263, *(_QWORD *)(*(_QWORD *)(v265 - 8) + 64));
    }
    else
    {
      *v262 = *v263;
      v266 = *(int *)(v264 + 20);
      v267 = (char *)v262 + v266;
      v268 = (char *)v263 + v266;
      v269 = sub_1A6121F58();
      v270 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v269 - 8) + 16);
      swift_bridgeObjectRetain();
      v270(v267, v268, v269);
      v271 = (int *)type metadata accessor for WeatherMetadata();
      v270(&v267[v271[5]], &v268[v271[5]], v269);
      *(_QWORD *)&v267[v271[6]] = *(_QWORD *)&v268[v271[6]];
      *(_QWORD *)&v267[v271[7]] = *(_QWORD *)&v268[v271[7]];
      *(_QWORD *)&v267[v271[8]] = *(_QWORD *)&v268[v271[8]];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v262, 0, 1, v264);
    }
    v272 = v6[20];
    *(uint64_t *)((char *)a1 + v6[19]) = *(uint64_t *)((char *)a2 + v6[19]);
    v273 = (char *)a1 + v272;
    v274 = (char *)a2 + v272;
    v275 = (int *)type metadata accessor for LocationInfo();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v274, 1, (uint64_t)v275))
    {
      v276 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1936F8);
      memcpy(v273, v274, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
    }
    else
    {
      v277 = sub_1A6121F58();
      v278 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v277 - 8) + 16);
      v278(v273, v274, v277);
      v278(&v273[v275[5]], &v274[v275[5]], v277);
      v279 = v275[6];
      v280 = &v273[v279];
      v281 = &v274[v279];
      v282 = *((_QWORD *)v281 + 1);
      *(_QWORD *)v280 = *(_QWORD *)v281;
      *((_QWORD *)v280 + 1) = v282;
      v283 = v275[7];
      v284 = &v273[v283];
      v285 = &v274[v283];
      v286 = *((_QWORD *)v285 + 1);
      *(_QWORD *)v284 = *(_QWORD *)v285;
      *((_QWORD *)v284 + 1) = v286;
      v287 = v275[8];
      v288 = &v273[v287];
      v289 = &v274[v287];
      v290 = *((_QWORD *)v289 + 1);
      *(_QWORD *)v288 = *(_QWORD *)v289;
      *((_QWORD *)v288 + 1) = v290;
      v291 = v275[9];
      v292 = &v273[v291];
      v293 = &v274[v291];
      v294 = *((_QWORD *)v293 + 1);
      *(_QWORD *)v292 = *(_QWORD *)v293;
      *((_QWORD *)v292 + 1) = v294;
      v295 = v275[10];
      v296 = &v273[v295];
      v297 = &v274[v295];
      v298 = *((_QWORD *)v297 + 1);
      *(_QWORD *)v296 = *(_QWORD *)v297;
      *((_QWORD *)v296 + 1) = v298;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v273, 0, 1, (uint64_t)v275);
    }
  }
  return a1;
}

char *sub_1A606EFE0(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  int *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  int *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  int *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  int *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  int *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t);
  int *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  int *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  void (*v152)(char *, char *, uint64_t);
  int *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  int *v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, char *, uint64_t);
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  int *v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  void (*v224)(char *, char *, uint64_t);
  int *v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  int *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  void (*v239)(char *, char *, uint64_t);
  int *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  char *v249;
  char *v250;
  int *v251;
  uint64_t v252;
  uint64_t v253;
  void (*v254)(char *, char *, uint64_t);
  uint64_t v255;
  char *v256;
  char *v257;
  int *v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  void (*v268)(char *, char *, uint64_t);
  int *v269;
  uint64_t v270;
  char *v271;
  char *v272;
  int *v273;
  uint64_t v274;
  uint64_t v275;
  void (*v276)(char *, char *, uint64_t);
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  char *v294;
  char *v295;
  uint64_t v296;
  uint64_t v298;
  uint64_t v299;
  void (*v300)(char *, char *);
  void *v301;
  char *v302;
  void *__dst;
  char *__dsta;
  void (*v305)(char *, char *);
  void (*v306)(char *, char *, uint64_t);
  uint64_t v307;
  uint64_t v308;
  void (*v309)(char *, char *, uint64_t);
  char *v310;
  int *v311;

  v6 = (int *)type metadata accessor for CurrentWeather();
  v311 = a3;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_1A6121F58();
    v305 = *(void (**)(char *, char *))(*(_QWORD *)(v8 - 8) + 16);
    v307 = v8;
    v305(a1, a2);
    *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    v9 = v6[9];
    v10 = &a1[v9];
    v11 = &a2[v9];
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    a1[v6[10]] = a2[v6[10]];
    v12 = v6[11];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = v6[12];
    v17 = &a1[v16];
    v18 = &a2[v16];
    swift_bridgeObjectRetain();
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    v309 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    v309(v17, v18, v19);
    *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
    v20 = v6[14];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
    v300 = *(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16);
    __dst = (void *)v23;
    v300(v21, v22);
    v24 = v6[15];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    a1[v6[16]] = a2[v6[16]];
    v28 = v6[17];
    v29 = &a1[v28];
    v30 = &a2[v28];
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    v32(v29, v30, v31);
    v33 = (int *)type metadata accessor for PrecipitationAmount();
    v32(&v29[v33[5]], &v30[v33[5]], v31);
    v32(&v29[v33[6]], &v30[v33[6]], v31);
    v32(&v29[v33[7]], &v30[v33[7]], v31);
    v32(&v29[v33[8]], &v30[v33[8]], v31);
    v32(&v29[v33[9]], &v30[v33[9]], v31);
    v34 = v6[18];
    v35 = &a1[v34];
    v36 = &a2[v34];
    v32(&a1[v34], &a2[v34], v31);
    v32(&v35[v33[5]], &v36[v33[5]], v31);
    v32(&v35[v33[6]], &v36[v33[6]], v31);
    v32(&v35[v33[7]], &v36[v33[7]], v31);
    v32(&v35[v33[8]], &v36[v33[8]], v31);
    v32(&v35[v33[9]], &v36[v33[9]], v31);
    v37 = v6[19];
    v38 = &a1[v37];
    v39 = &a2[v37];
    v32(&a1[v37], &a2[v37], v31);
    v40 = (int *)type metadata accessor for PrecipitationAmountByType();
    v32(&v38[v40[5]], &v39[v40[5]], v31);
    v32(&v38[v40[6]], &v39[v40[6]], v31);
    v32(&v38[v40[7]], &v39[v40[7]], v31);
    v32(&v38[v40[8]], &v39[v40[8]], v31);
    v41 = v40[9];
    v42 = &v38[v41];
    v43 = &v39[v41];
    v32(v42, v43, v31);
    v44 = a1;
    v45 = (int *)type metadata accessor for SnowfallAmount();
    v32(&v42[v45[5]], &v43[v45[5]], v31);
    v32(&v42[v45[6]], &v43[v45[6]], v31);
    v32(&v42[v45[7]], &v43[v45[7]], v31);
    v32(&v42[v45[8]], &v43[v45[8]], v31);
    v32(&v42[v45[9]], &v43[v45[9]], v31);
    v46 = v6[20];
    v47 = &v44[v46];
    v48 = &a2[v46];
    v32(&v44[v46], &a2[v46], v31);
    v32(&v47[v40[5]], &v48[v40[5]], v31);
    v32(&v47[v40[6]], &v48[v40[6]], v31);
    v32(&v47[v40[7]], &v48[v40[7]], v31);
    v32(&v47[v40[8]], &v48[v40[8]], v31);
    v49 = v40[9];
    v50 = &v47[v49];
    v51 = &v48[v49];
    v32(v50, v51, v31);
    v32(&v50[v45[5]], &v51[v45[5]], v31);
    v32(&v50[v45[6]], &v51[v45[6]], v31);
    v32(&v50[v45[7]], &v51[v45[7]], v31);
    v32(&v50[v45[8]], &v51[v45[8]], v31);
    v32(&v50[v45[9]], &v51[v45[9]], v31);
    v52 = v6[21];
    v53 = &v44[v52];
    v54 = &a2[v52];
    v32(&v44[v52], &a2[v52], v31);
    v32(&v53[v40[5]], &v54[v40[5]], v31);
    v32(&v53[v40[6]], &v54[v40[6]], v31);
    v32(&v53[v40[7]], &v54[v40[7]], v31);
    v32(&v53[v40[8]], &v54[v40[8]], v31);
    v55 = v40[9];
    v56 = &v53[v55];
    v57 = &v54[v55];
    v32(v56, v57, v31);
    v32(&v56[v45[5]], &v57[v45[5]], v31);
    v32(&v56[v45[6]], &v57[v45[6]], v31);
    v32(&v56[v45[7]], &v57[v45[7]], v31);
    v32(&v56[v45[8]], &v57[v45[8]], v31);
    v32(&v56[v45[9]], &v57[v45[9]], v31);
    v58 = v6[22];
    v59 = &v44[v58];
    v60 = &a2[v58];
    v32(&v44[v58], &a2[v58], v31);
    v32(&v59[v40[5]], &v60[v40[5]], v31);
    v32(&v59[v40[6]], &v60[v40[6]], v31);
    v32(&v59[v40[7]], &v60[v40[7]], v31);
    v32(&v59[v40[8]], &v60[v40[8]], v31);
    v61 = v40[9];
    v62 = &v59[v61];
    v63 = &v60[v61];
    v32(v62, v63, v31);
    v32(&v62[v45[5]], &v63[v45[5]], v31);
    v32(&v62[v45[6]], &v63[v45[6]], v31);
    v32(&v62[v45[7]], &v63[v45[7]], v31);
    v32(&v62[v45[8]], &v63[v45[8]], v31);
    v32(&v62[v45[9]], &v63[v45[9]], v31);
    v64 = v6[23];
    v65 = &v44[v64];
    v66 = &a2[v64];
    v32(&v44[v64], &a2[v64], v31);
    v32(&v65[v40[5]], &v66[v40[5]], v31);
    v32(&v65[v40[6]], &v66[v40[6]], v31);
    v32(&v65[v40[7]], &v66[v40[7]], v31);
    v32(&v65[v40[8]], &v66[v40[8]], v31);
    v67 = v40[9];
    v68 = &v65[v67];
    v69 = &v66[v67];
    v32(v68, v69, v31);
    v32(&v68[v45[5]], &v69[v45[5]], v31);
    v32(&v68[v45[6]], &v69[v45[6]], v31);
    v32(&v68[v45[7]], &v69[v45[7]], v31);
    v32(&v68[v45[8]], &v69[v45[8]], v31);
    v32(&v68[v45[9]], &v69[v45[9]], v31);
    v70 = v6[24];
    v71 = &v44[v70];
    v72 = &a2[v70];
    v32(&v44[v70], &a2[v70], v31);
    v32(&v71[v40[5]], &v72[v40[5]], v31);
    v32(&v71[v40[6]], &v72[v40[6]], v31);
    v32(&v71[v40[7]], &v72[v40[7]], v31);
    v32(&v71[v40[8]], &v72[v40[8]], v31);
    v73 = v40[9];
    v74 = &v71[v73];
    v75 = &v72[v73];
    v32(v74, v75, v31);
    v32(&v74[v45[5]], &v75[v45[5]], v31);
    v32(&v74[v45[6]], &v75[v45[6]], v31);
    v32(&v74[v45[7]], &v75[v45[7]], v31);
    v32(&v74[v45[8]], &v75[v45[8]], v31);
    v76 = v45[9];
    a1 = v44;
    v32(&v74[v76], &v75[v76], v31);
    v77 = v6[25];
    v78 = &v44[v77];
    v79 = &a2[v77];
    *(_QWORD *)v78 = *(_QWORD *)v79;
    v78[8] = v79[8];
    v44[v6[26]] = a2[v6[26]];
    v309(&v44[v6[27]], &a2[v6[27]], v19);
    v309(&v44[v6[28]], &a2[v6[28]], v19);
    v80 = v6[29];
    v81 = &v44[v80];
    v82 = &a2[v80];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v80], 1, v19))
    {
      v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    }
    else
    {
      v309(v81, v82, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v19);
    }
    v84 = v6[30];
    v85 = &v44[v84];
    v86 = &a2[v84];
    a3 = v311;
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v84], 1, v19))
    {
      v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
      memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      v309(v85, v86, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v19);
    }
    v88 = v6[31];
    v89 = &v44[v88];
    v90 = &a2[v88];
    *(_QWORD *)v89 = *(_QWORD *)v90;
    v89[8] = v90[8];
    v32(&v44[v6[32]], &a2[v6[32]], v31);
    v91 = v6[33];
    v92 = &v44[v91];
    v93 = &a2[v91];
    v44[v91] = a2[v91];
    v94 = (int *)type metadata accessor for Wind();
    v95 = v94[5];
    v96 = &v92[v95];
    v97 = &v93[v95];
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
    ((void (*)(char *, char *, void *))v300)(&v92[v94[6]], &v93[v94[6]], __dst);
    v99 = v94[7];
    v100 = &v92[v99];
    v101 = &v93[v99];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v93[v99], 1, (uint64_t)__dst))
    {
      v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
      memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, void *))v300)(v100, v101, __dst);
      __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, (uint64_t)__dst);
    }
    v103 = v6[34];
    v104 = &v44[v103];
    v105 = &a2[v103];
    ((void (*)(char *, char *, uint64_t))v305)(&v44[v103], &a2[v103], v307);
    v106 = (int *)type metadata accessor for WeatherMetadata();
    ((void (*)(char *, char *, uint64_t))v305)(&v104[v106[5]], &v105[v106[5]], v307);
    *(_QWORD *)&v104[v106[6]] = *(_QWORD *)&v105[v106[6]];
    *(_QWORD *)&v104[v106[7]] = *(_QWORD *)&v105[v106[7]];
    *(_QWORD *)&v104[v106[8]] = *(_QWORD *)&v105[v106[8]];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  v107 = a3[5];
  v108 = &a1[v107];
  v109 = &a2[v107];
  v110 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, (uint64_t)v110))
  {
    v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v108 = *(_QWORD *)v109;
    v112 = v110[13];
    v113 = &v108[v112];
    v114 = &v109[v112];
    v115 = sub_1A6121F58();
    v116 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16);
    swift_bridgeObjectRetain();
    v116(v113, v114, v115);
    v117 = (int *)type metadata accessor for WeatherMetadata();
    v116(&v113[v117[5]], &v114[v117[5]], v115);
    a3 = v311;
    *(_QWORD *)&v113[v117[6]] = *(_QWORD *)&v114[v117[6]];
    *(_QWORD *)&v113[v117[7]] = *(_QWORD *)&v114[v117[7]];
    *(_QWORD *)&v113[v117[8]] = *(_QWORD *)&v114[v117[8]];
    v118 = v110[14];
    v119 = &v108[v118];
    v120 = &v109[v118];
    v121 = *((_QWORD *)v120 + 1);
    *(_QWORD *)v119 = *(_QWORD *)v120;
    *((_QWORD *)v119 + 1) = v121;
    *(_QWORD *)&v108[v110[15]] = *(_QWORD *)&v109[v110[15]];
    *(_QWORD *)&v108[v110[16]] = *(_QWORD *)&v109[v110[16]];
    v122 = v110[17];
    v123 = &v108[v122];
    v124 = &v109[v122];
    v123[16] = v124[16];
    *(_OWORD *)v123 = *(_OWORD *)v124;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, (uint64_t)v110);
  }
  v125 = a3[6];
  v126 = &a1[v125];
  v127 = &a2[v125];
  v128 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, (uint64_t)v128))
  {
    v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
    memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v126 = *(_QWORD *)v127;
    v130 = v128[13];
    v131 = &v126[v130];
    v132 = &v127[v130];
    v133 = sub_1A6121F58();
    v134 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 16);
    swift_bridgeObjectRetain();
    v134(v131, v132, v133);
    v135 = (int *)type metadata accessor for WeatherMetadata();
    v134(&v131[v135[5]], &v132[v135[5]], v133);
    a3 = v311;
    *(_QWORD *)&v131[v135[6]] = *(_QWORD *)&v132[v135[6]];
    *(_QWORD *)&v131[v135[7]] = *(_QWORD *)&v132[v135[7]];
    *(_QWORD *)&v131[v135[8]] = *(_QWORD *)&v132[v135[8]];
    v136 = v128[14];
    v137 = &v126[v136];
    v138 = &v127[v136];
    v139 = *((_QWORD *)v138 + 1);
    *(_QWORD *)v137 = *(_QWORD *)v138;
    *((_QWORD *)v137 + 1) = v139;
    *(_QWORD *)&v126[v128[15]] = *(_QWORD *)&v127[v128[15]];
    *(_QWORD *)&v126[v128[16]] = *(_QWORD *)&v127[v128[16]];
    v140 = v128[17];
    v141 = &v126[v140];
    v142 = &v127[v140];
    v141[16] = v142[16];
    *(_OWORD *)v141 = *(_OWORD *)v142;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, (uint64_t)v128);
  }
  v143 = a3[7];
  v144 = &a1[v143];
  v145 = &a2[v143];
  v146 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  if (__swift_getEnumTagSinglePayload((uint64_t)v145, 1, (uint64_t)v146))
  {
    v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
    memcpy(v144, v145, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v144 = *(_QWORD *)v145;
    v148 = v146[13];
    v149 = &v144[v148];
    v150 = &v145[v148];
    v151 = sub_1A6121F58();
    v152 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16);
    swift_bridgeObjectRetain();
    v152(v149, v150, v151);
    v153 = (int *)type metadata accessor for WeatherMetadata();
    v152(&v149[v153[5]], &v150[v153[5]], v151);
    a3 = v311;
    *(_QWORD *)&v149[v153[6]] = *(_QWORD *)&v150[v153[6]];
    *(_QWORD *)&v149[v153[7]] = *(_QWORD *)&v150[v153[7]];
    *(_QWORD *)&v149[v153[8]] = *(_QWORD *)&v150[v153[8]];
    v154 = v146[14];
    v155 = &v144[v154];
    v156 = &v145[v154];
    v157 = *((_QWORD *)v156 + 1);
    *(_QWORD *)v155 = *(_QWORD *)v156;
    *((_QWORD *)v155 + 1) = v157;
    *(_QWORD *)&v144[v146[15]] = *(_QWORD *)&v145[v146[15]];
    *(_QWORD *)&v144[v146[16]] = *(_QWORD *)&v145[v146[16]];
    v158 = v146[17];
    v159 = &v144[v158];
    v160 = &v145[v158];
    v159[16] = v160[16];
    *(_OWORD *)v159 = *(_OWORD *)v160;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v144, 0, 1, (uint64_t)v146);
  }
  v161 = a3[8];
  v162 = &a1[v161];
  v163 = &a2[v161];
  v164 = (int *)type metadata accessor for AirQuality();
  if (__swift_getEnumTagSinglePayload((uint64_t)v163, 1, (uint64_t)v164))
  {
    v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
    memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
  }
  else
  {
    v310 = a1;
    v166 = sub_1A6121F58();
    v167 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 16);
    v167(v162, v163, v166);
    v306 = v167;
    v308 = v166;
    v167(&v162[v164[5]], &v163[v164[5]], v166);
    v168 = v164[6];
    v169 = &v162[v168];
    v170 = &v163[v168];
    v301 = (void *)*((_QWORD *)v170 + 1);
    *(_QWORD *)v169 = *(_QWORD *)v170;
    *((_QWORD *)v169 + 1) = v301;
    v171 = v164[7];
    v172 = &v162[v171];
    v173 = &v163[v171];
    v174 = *((_QWORD *)v173 + 1);
    *(_QWORD *)v172 = *(_QWORD *)v173;
    *((_QWORD *)v172 + 1) = v174;
    v175 = *((_QWORD *)v173 + 3);
    *((_QWORD *)v172 + 2) = *((_QWORD *)v173 + 2);
    *((_QWORD *)v172 + 3) = v175;
    v176 = *((_QWORD *)v173 + 5);
    *((_QWORD *)v172 + 4) = *((_QWORD *)v173 + 4);
    *((_QWORD *)v172 + 5) = v176;
    v177 = *((_QWORD *)v173 + 7);
    *((_QWORD *)v172 + 6) = *((_QWORD *)v173 + 6);
    *((_QWORD *)v172 + 7) = v177;
    v178 = *((_QWORD *)v173 + 9);
    *((_QWORD *)v172 + 8) = *((_QWORD *)v173 + 8);
    *((_QWORD *)v172 + 9) = v178;
    v172[80] = v173[80];
    *(_OWORD *)(v172 + 88) = *(_OWORD *)(v173 + 88);
    v299 = *((_QWORD *)v173 + 14);
    *((_QWORD *)v172 + 13) = *((_QWORD *)v173 + 13);
    *((_QWORD *)v172 + 14) = v299;
    *(_QWORD *)&v162[v164[8]] = *(_QWORD *)&v163[v164[8]];
    v179 = v164[9];
    v180 = &v162[v179];
    v181 = &v163[v179];
    v182 = *((_QWORD *)v181 + 1);
    *(_QWORD *)v180 = *(_QWORD *)v181;
    *((_QWORD *)v180 + 1) = v182;
    *((_OWORD *)v180 + 1) = *((_OWORD *)v181 + 1);
    v183 = *((_QWORD *)v181 + 5);
    *((_QWORD *)v180 + 4) = *((_QWORD *)v181 + 4);
    *((_QWORD *)v180 + 5) = v183;
    *((_QWORD *)v180 + 6) = *((_QWORD *)v181 + 6);
    *(_OWORD *)(v180 + 56) = *(_OWORD *)(v181 + 56);
    v184 = *((_QWORD *)v181 + 10);
    *((_QWORD *)v180 + 9) = *((_QWORD *)v181 + 9);
    *((_QWORD *)v180 + 10) = v184;
    v162[v164[10]] = v163[v164[10]];
    v185 = v164[11];
    __dsta = &v162[v185];
    v186 = &v163[v185];
    v298 = type metadata accessor for ProviderAttribution();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v186, 1, v298))
    {
      v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
      memcpy(__dsta, v186, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
      a1 = v310;
    }
    else
    {
      v188 = *((_QWORD *)v186 + 1);
      *(_QWORD *)__dsta = *(_QWORD *)v186;
      *((_QWORD *)__dsta + 1) = v188;
      v189 = *(int *)(v298 + 20);
      v302 = &__dsta[v189];
      v190 = &v186[v189];
      v191 = sub_1A6121DF0();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v190, 1, v191))
      {
        v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
        memcpy(v302, v190, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v302, v190, v191);
        __swift_storeEnumTagSinglePayload((uint64_t)v302, 0, 1, v191);
      }
      a1 = v310;
      __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v298);
    }
    v193 = v164[12];
    v194 = &v162[v193];
    v195 = &v163[v193];
    v196 = sub_1A6121DF0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(v194, v195, v196);
    *(_QWORD *)&v162[v164[13]] = *(_QWORD *)&v163[v164[13]];
    v197 = v164[14];
    v198 = &v162[v197];
    v199 = &v163[v197];
    v200 = type metadata accessor for AirPollutant();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v199, 1, v200))
    {
      v201 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
      memcpy(v198, v199, *(_QWORD *)(*(_QWORD *)(v201 - 8) + 64));
    }
    else
    {
      *v198 = *v199;
      v202 = *(int *)(v200 + 20);
      v203 = &v198[v202];
      v204 = &v199[v202];
      type metadata accessor for AirPollutantMeasurement();
      if (swift_getEnumCaseMultiPayload() == 1)
        v205 = &qword_1ED190B60;
      else
        v205 = &qword_1ED1922B8;
      v206 = __swift_instantiateConcreteTypeFromMangledName(v205);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 16))(v203, v204, v206);
      a1 = v310;
      swift_storeEnumTagMultiPayload();
      v198[*(int *)(v200 + 24)] = v199[*(int *)(v200 + 24)];
      __swift_storeEnumTagSinglePayload((uint64_t)v198, 0, 1, v200);
    }
    v162[v164[15]] = v163[v164[15]];
    v207 = v164[16];
    v208 = &v162[v207];
    v209 = &v163[v207];
    *v208 = *v209;
    v210 = *((_QWORD *)v209 + 2);
    *((_QWORD *)v208 + 1) = *((_QWORD *)v209 + 1);
    *((_QWORD *)v208 + 2) = v210;
    v211 = v164[17];
    v212 = &v162[v211];
    v213 = &v163[v211];
    swift_bridgeObjectRetain();
    v306(v212, v213, v308);
    v214 = (int *)type metadata accessor for WeatherMetadata();
    v306(&v212[v214[5]], &v213[v214[5]], v308);
    *(_QWORD *)&v212[v214[6]] = *(_QWORD *)&v213[v214[6]];
    *(_QWORD *)&v212[v214[7]] = *(_QWORD *)&v213[v214[7]];
    *(_QWORD *)&v212[v214[8]] = *(_QWORD *)&v213[v214[8]];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v162, 0, 1, (uint64_t)v164);
    a3 = v311;
  }
  v215 = a3[9];
  v216 = &a1[v215];
  v217 = &a2[v215];
  v218 = type metadata accessor for WeatherChanges();
  if (__swift_getEnumTagSinglePayload((uint64_t)v217, 1, v218))
  {
    v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
    memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v216 = *(_QWORD *)v217;
    v220 = *(int *)(v218 + 20);
    v221 = &v216[v220];
    v222 = &v217[v220];
    v223 = sub_1A6121F58();
    v224 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 16);
    swift_bridgeObjectRetain();
    v224(v221, v222, v223);
    v225 = (int *)type metadata accessor for WeatherMetadata();
    v224(&v221[v225[5]], &v222[v225[5]], v223);
    *(_QWORD *)&v221[v225[6]] = *(_QWORD *)&v222[v225[6]];
    *(_QWORD *)&v221[v225[7]] = *(_QWORD *)&v222[v225[7]];
    *(_QWORD *)&v221[v225[8]] = *(_QWORD *)&v222[v225[8]];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v216, 0, 1, v218);
  }
  v226 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  v227 = &a1[v226];
  v228 = &a2[v226];
  *(_WORD *)v227 = *(_WORD *)v228;
  v227[2] = v228[2];
  v229 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v229] = a2[v229];
  v230 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  v231 = &a1[v230];
  v232 = &a2[v230];
  swift_bridgeObjectRetain();
  v233 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED194050);
  if (__swift_getEnumTagSinglePayload((uint64_t)v232, 1, (uint64_t)v233))
  {
    v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194058);
    memcpy(v231, v232, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v231 = *(_QWORD *)v232;
    v235 = v233[13];
    v236 = &v231[v235];
    v237 = &v232[v235];
    v238 = sub_1A6121F58();
    v239 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v238 - 8) + 16);
    swift_bridgeObjectRetain();
    v239(v236, v237, v238);
    v240 = (int *)type metadata accessor for WeatherMetadata();
    v239(&v236[v240[5]], &v237[v240[5]], v238);
    a3 = v311;
    *(_QWORD *)&v236[v240[6]] = *(_QWORD *)&v237[v240[6]];
    *(_QWORD *)&v236[v240[7]] = *(_QWORD *)&v237[v240[7]];
    *(_QWORD *)&v236[v240[8]] = *(_QWORD *)&v237[v240[8]];
    v241 = v233[14];
    v242 = &v231[v241];
    v243 = &v232[v241];
    v244 = *((_QWORD *)v243 + 1);
    *(_QWORD *)v242 = *(_QWORD *)v243;
    *((_QWORD *)v242 + 1) = v244;
    *(_QWORD *)&v231[v233[15]] = *(_QWORD *)&v232[v233[15]];
    *(_QWORD *)&v231[v233[16]] = *(_QWORD *)&v232[v233[16]];
    v245 = v233[17];
    v246 = &v231[v245];
    v247 = &v232[v245];
    v246[16] = v247[16];
    *(_OWORD *)v246 = *(_OWORD *)v247;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v231, 0, 1, (uint64_t)v233);
  }
  v248 = a3[17];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  v249 = &a1[v248];
  v250 = &a2[v248];
  v251 = (int *)type metadata accessor for TideEvents();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v250, 1, (uint64_t)v251))
  {
    v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192930);
    memcpy(v249, v250, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
  }
  else
  {
    v253 = sub_1A6121F58();
    v254 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v253 - 8) + 16);
    v254(v249, v250, v253);
    *(_QWORD *)&v249[v251[5]] = *(_QWORD *)&v250[v251[5]];
    *(_QWORD *)&v249[v251[6]] = *(_QWORD *)&v250[v251[6]];
    *(_OWORD *)&v249[v251[7]] = *(_OWORD *)&v250[v251[7]];
    v255 = v251[8];
    v256 = &v249[v255];
    v257 = &v250[v255];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v254(v256, v257, v253);
    v258 = (int *)type metadata accessor for WeatherMetadata();
    v254(&v256[v258[5]], &v257[v258[5]], v253);
    *(_QWORD *)&v256[v258[6]] = *(_QWORD *)&v257[v258[6]];
    *(_QWORD *)&v256[v258[7]] = *(_QWORD *)&v257[v258[7]];
    *(_QWORD *)&v256[v258[8]] = *(_QWORD *)&v257[v258[8]];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v249, 0, 1, (uint64_t)v251);
  }
  v259 = a3[18];
  v260 = &a1[v259];
  v261 = &a2[v259];
  v262 = type metadata accessor for HistoricalComparisons();
  if (__swift_getEnumTagSinglePayload((uint64_t)v261, 1, v262))
  {
    v263 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
    memcpy(v260, v261, *(_QWORD *)(*(_QWORD *)(v263 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v260 = *(_QWORD *)v261;
    v264 = *(int *)(v262 + 20);
    v265 = &v260[v264];
    v266 = &v261[v264];
    v267 = sub_1A6121F58();
    v268 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v267 - 8) + 16);
    swift_bridgeObjectRetain();
    v268(v265, v266, v267);
    v269 = (int *)type metadata accessor for WeatherMetadata();
    v268(&v265[v269[5]], &v266[v269[5]], v267);
    *(_QWORD *)&v265[v269[6]] = *(_QWORD *)&v266[v269[6]];
    *(_QWORD *)&v265[v269[7]] = *(_QWORD *)&v266[v269[7]];
    *(_QWORD *)&v265[v269[8]] = *(_QWORD *)&v266[v269[8]];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v260, 0, 1, v262);
  }
  v270 = a3[20];
  *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
  v271 = &a1[v270];
  v272 = &a2[v270];
  v273 = (int *)type metadata accessor for LocationInfo();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v272, 1, (uint64_t)v273))
  {
    v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1936F8);
    memcpy(v271, v272, *(_QWORD *)(*(_QWORD *)(v274 - 8) + 64));
  }
  else
  {
    v275 = sub_1A6121F58();
    v276 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v275 - 8) + 16);
    v276(v271, v272, v275);
    v276(&v271[v273[5]], &v272[v273[5]], v275);
    v277 = v273[6];
    v278 = &v271[v277];
    v279 = &v272[v277];
    v280 = *((_QWORD *)v279 + 1);
    *(_QWORD *)v278 = *(_QWORD *)v279;
    *((_QWORD *)v278 + 1) = v280;
    v281 = v273[7];
    v282 = &v271[v281];
    v283 = &v272[v281];
    v284 = *((_QWORD *)v283 + 1);
    *(_QWORD *)v282 = *(_QWORD *)v283;
    *((_QWORD *)v282 + 1) = v284;
    v285 = v273[8];
    v286 = &v271[v285];
    v287 = &v272[v285];
    v288 = *((_QWORD *)v287 + 1);
    *(_QWORD *)v286 = *(_QWORD *)v287;
    *((_QWORD *)v286 + 1) = v288;
    v289 = v273[9];
    v290 = &v271[v289];
    v291 = &v272[v289];
    v292 = *((_QWORD *)v291 + 1);
    *(_QWORD *)v290 = *(_QWORD *)v291;
    *((_QWORD *)v290 + 1) = v292;
    v293 = v273[10];
    v294 = &v271[v293];
    v295 = &v272[v293];
    v296 = *((_QWORD *)v295 + 1);
    *(_QWORD *)v294 = *(_QWORD *)v295;
    *((_QWORD *)v294 + 1) = v296;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v271, 0, 1, (uint64_t)v273);
  }
  return a1;
}

_BYTE *sub_1A60709A4(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  _BYTE *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  _BYTE *v46;
  int *v47;
  uint64_t v48;
  char *v49;
  _BYTE *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  _BYTE *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  _BYTE *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  _BYTE *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  _BYTE *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  _BYTE *v112;
  int *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  int *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  _BYTE *v124;
  int *v125;
  uint64_t v126;
  char *v127;
  _BYTE *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  _BYTE *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  _BYTE *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  _BYTE *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  _BYTE *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  _BYTE *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  int v163;
  uint64_t v164;
  char *v165;
  _BYTE *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  _BYTE *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  _BYTE *v174;
  int *v175;
  uint64_t v176;
  char *v177;
  _BYTE *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  _BYTE *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  _BYTE *v186;
  int *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  int v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  _BYTE *v197;
  uint64_t v198;
  char *v199;
  _BYTE *v200;
  int *v201;
  uint64_t v202;
  char *v203;
  _BYTE *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  _BYTE *v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  _BYTE *v213;
  int *v214;
  uint64_t v215;
  _QWORD *v216;
  _QWORD *v217;
  int *v218;
  int v219;
  int v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  void (*v225)(char *, char *, uint64_t);
  int *v226;
  uint64_t v227;
  _QWORD *v228;
  _QWORD *v229;
  uint64_t v230;
  char *v231;
  char *v232;
  char v233;
  uint64_t v234;
  uint64_t v235;
  _QWORD *v236;
  _QWORD *v237;
  int *v238;
  int v239;
  int v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  void (*v245)(char *, char *, uint64_t);
  int *v246;
  uint64_t v247;
  _QWORD *v248;
  _QWORD *v249;
  uint64_t v250;
  char *v251;
  char *v252;
  char v253;
  uint64_t v254;
  uint64_t v255;
  _QWORD *v256;
  _QWORD *v257;
  int *v258;
  int v259;
  int v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  void (*v265)(char *, char *, uint64_t);
  int *v266;
  uint64_t v267;
  _QWORD *v268;
  _QWORD *v269;
  uint64_t v270;
  char *v271;
  char *v272;
  char v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  char *v277;
  int *v278;
  int v279;
  int v280;
  uint64_t v281;
  void (*v282)(char *, _BYTE *, uint64_t);
  uint64_t v283;
  char *v284;
  char *v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  char *v290;
  char *v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  void (*v303)(char *, char *, uint64_t);
  int *v304;
  uint64_t v305;
  _QWORD *v306;
  _QWORD *v307;
  uint64_t v308;
  char *v309;
  char *v310;
  __int128 v311;
  uint64_t v312;
  char *v313;
  char *v314;
  uint64_t v315;
  void (*v316)(char *, char *, uint64_t);
  int *v317;
  uint64_t v318;
  _QWORD *v319;
  _QWORD *v320;
  uint64_t v321;
  char *v322;
  char *v323;
  __int128 v324;
  uint64_t v325;
  char *v326;
  char *v327;
  uint64_t v328;
  void (*v329)(char *, char *, uint64_t);
  int *v330;
  uint64_t v331;
  _QWORD *v332;
  _QWORD *v333;
  uint64_t v334;
  char *v335;
  char *v336;
  __int128 v337;
  uint64_t v338;
  void (*v339)(char *, char *, uint64_t);
  uint64_t v340;
  char *v341;
  char *v342;
  uint64_t v343;
  char *v344;
  char *v345;
  uint64_t v346;
  char *v347;
  char *v348;
  uint64_t v349;
  char *v350;
  char *v351;
  uint64_t v352;
  int v353;
  uint64_t v354;
  char *v355;
  char *v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  char *v361;
  uint64_t v362;
  uint64_t v363;
  size_t v364;
  void *v365;
  const void *v366;
  uint64_t v367;
  char *v368;
  _BYTE *v369;
  uint64_t v370;
  uint64_t v371;
  char *v372;
  _BYTE *v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  _BYTE *v377;
  _BYTE *v378;
  uint64_t *v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  char *v383;
  uint64_t v384;
  char *v385;
  _BYTE *v386;
  int *v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  int v392;
  int v393;
  uint64_t v394;
  char *v395;
  char *v396;
  uint64_t v397;
  uint64_t v398;
  char *v399;
  char *v400;
  uint64_t v401;
  int v402;
  uint64_t v403;
  _BYTE *v404;
  _BYTE *v405;
  uint64_t *v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  char *v410;
  char *v411;
  uint64_t v412;
  char *v413;
  char *v414;
  int *v415;
  uint64_t v416;
  _QWORD *v417;
  _QWORD *v418;
  uint64_t v419;
  int v420;
  int v421;
  uint64_t v422;
  char *v423;
  char *v424;
  uint64_t v425;
  void (*v426)(char *, char *, uint64_t);
  int *v427;
  uint64_t v428;
  uint64_t v429;
  char *v430;
  char *v431;
  __int16 v432;
  uint64_t v433;
  _QWORD *v434;
  _QWORD *v435;
  int *v436;
  int v437;
  int v438;
  uint64_t v439;
  char *v440;
  char *v441;
  uint64_t v442;
  void (*v443)(char *, char *, uint64_t);
  int *v444;
  uint64_t v445;
  _QWORD *v446;
  _QWORD *v447;
  uint64_t v448;
  char *v449;
  char *v450;
  char v451;
  uint64_t v452;
  uint64_t v453;
  char *v454;
  char *v455;
  int *v456;
  int v457;
  int v458;
  uint64_t v459;
  void (*v460)(char *, char *, uint64_t);
  uint64_t v461;
  char *v462;
  char *v463;
  int *v464;
  uint64_t v465;
  uint64_t v466;
  _QWORD *v467;
  _QWORD *v468;
  uint64_t v469;
  int v470;
  int v471;
  uint64_t v472;
  char *v473;
  char *v474;
  uint64_t v475;
  void (*v476)(char *, char *, uint64_t);
  int *v477;
  uint64_t v478;
  uint64_t v479;
  char *v480;
  char *v481;
  int *v482;
  int v483;
  int v484;
  uint64_t v485;
  void (*v486)(char *, char *, uint64_t);
  uint64_t v487;
  char *v488;
  char *v489;
  uint64_t v490;
  char *v491;
  char *v492;
  uint64_t v493;
  char *v494;
  char *v495;
  uint64_t v496;
  char *v497;
  char *v498;
  uint64_t v499;
  char *v500;
  char *v501;
  uint64_t v502;
  uint64_t v504;
  char *v505;
  char *v506;
  uint64_t v507;
  void (*v508)(char *, char *, uint64_t);
  int *v509;
  uint64_t v510;
  char *v511;
  char *v512;
  uint64_t v513;
  void (*v514)(char *, char *, uint64_t);
  int *v515;
  uint64_t v516;
  _QWORD *v517;
  _QWORD *v518;
  uint64_t v519;
  char *v520;
  char *v521;
  __int128 v522;
  uint64_t v523;
  void (*v524)(char *, char *, uint64_t);
  uint64_t v525;
  char *v526;
  char *v527;
  uint64_t v528;
  char *v529;
  char *v530;
  int *v531;
  uint64_t v532;
  char *v533;
  char *v534;
  uint64_t v535;
  void (*v536)(char *, char *, uint64_t);
  int *v537;
  uint64_t v538;
  void (*v539)(char *, char *, uint64_t);
  uint64_t v540;
  char *v541;
  char *v542;
  uint64_t v543;
  char *v544;
  char *v545;
  uint64_t v546;
  char *v547;
  char *v548;
  uint64_t v549;
  char *v550;
  char *v551;
  uint64_t v552;
  char *v553;
  char *v554;
  uint64_t v555;
  _BYTE *v556;
  _BYTE *v557;
  uint64_t *v558;
  uint64_t v559;
  uint64_t v560;
  char *__dst;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  void (*v565)(char *, _BYTE *, uint64_t);
  void (*v566)(_BYTE *, _BYTE *);
  void (*v567)(_BYTE *, _BYTE *);
  uint64_t v568;
  uint64_t v569;
  void (*v570)(char *, char *, uint64_t);
  void (*v571)(char *, char *, uint64_t);
  uint64_t v572;
  void (*v573)(char *, char *);
  void (*v574)(char *, char *);
  _BYTE *v575;
  _BYTE *v576;
  uint64_t v577;
  void (*v578)(char *, char *, uint64_t);
  _BYTE *v579;
  _BYTE *v580;
  int *v581;

  v6 = (int *)type metadata accessor for CurrentWeather();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6);
  v581 = a3;
  if (!EnumTagSinglePayload)
  {
    if (v8)
    {
      sub_1A5FA1740((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
      goto LABEL_7;
    }
    v88 = sub_1A6121F58();
    v567 = *(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v88 - 8) + 24);
    v569 = v88;
    v567(a1, a2);
    *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    v89 = v6[9];
    v90 = &a1[v89];
    v91 = &a2[v89];
    *v90 = *v91;
    v90[1] = v91[1];
    v90[2] = v91[2];
    a1[v6[10]] = a2[v6[10]];
    v92 = v6[11];
    v93 = &a1[v92];
    v94 = &a2[v92];
    *v93 = *v94;
    v93[1] = v94[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v95 = v6[12];
    v96 = &a1[v95];
    v97 = &a2[v95];
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    v564 = *(_QWORD *)(v98 - 8);
    v578 = *(void (**)(char *, char *, uint64_t))(v564 + 24);
    v578(v96, v97, v98);
    *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
    v99 = v6[14];
    v100 = &a1[v99];
    v101 = &a2[v99];
    v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
    v563 = *(_QWORD *)(v102 - 8);
    v572 = v102;
    v574 = *(void (**)(char *, char *))(v563 + 24);
    v574(v100, v101);
    v103 = v6[15];
    v104 = &a1[v103];
    v105 = &a2[v103];
    v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 24))(v104, v105, v106);
    a1[v6[16]] = a2[v6[16]];
    v107 = v6[17];
    v108 = &a1[v107];
    v109 = &a2[v107];
    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 24);
    v111(v108, v109, v110);
    v112 = a1;
    v113 = (int *)type metadata accessor for PrecipitationAmount();
    v111(&v108[v113[5]], &v109[v113[5]], v110);
    v111(&v108[v113[6]], &v109[v113[6]], v110);
    v111(&v108[v113[7]], &v109[v113[7]], v110);
    v111(&v108[v113[8]], &v109[v113[8]], v110);
    v111(&v108[v113[9]], &v109[v113[9]], v110);
    v114 = v6[18];
    v115 = &v112[v114];
    v116 = &a2[v114];
    v111(&v112[v114], &a2[v114], v110);
    v111(&v115[v113[5]], &v116[v113[5]], v110);
    v111(&v115[v113[6]], &v116[v113[6]], v110);
    v111(&v115[v113[7]], &v116[v113[7]], v110);
    v111(&v115[v113[8]], &v116[v113[8]], v110);
    v111(&v115[v113[9]], &v116[v113[9]], v110);
    v117 = v6[19];
    v118 = &v112[v117];
    v119 = &a2[v117];
    v111(&v112[v117], &a2[v117], v110);
    v120 = (int *)type metadata accessor for PrecipitationAmountByType();
    v111(&v118[v120[5]], &v119[v120[5]], v110);
    v111(&v118[v120[6]], &v119[v120[6]], v110);
    v111(&v118[v120[7]], &v119[v120[7]], v110);
    v111(&v118[v120[8]], &v119[v120[8]], v110);
    v121 = v120[9];
    v122 = &v118[v121];
    v123 = &v119[v121];
    v111(v122, v123, v110);
    v124 = a2;
    v125 = (int *)type metadata accessor for SnowfallAmount();
    v111(&v122[v125[5]], &v123[v125[5]], v110);
    v111(&v122[v125[6]], &v123[v125[6]], v110);
    v111(&v122[v125[7]], &v123[v125[7]], v110);
    v111(&v122[v125[8]], &v123[v125[8]], v110);
    v111(&v122[v125[9]], &v123[v125[9]], v110);
    v126 = v6[20];
    v127 = &v112[v126];
    v128 = &v124[v126];
    v111(&v112[v126], &v124[v126], v110);
    v111(&v127[v120[5]], &v128[v120[5]], v110);
    v111(&v127[v120[6]], &v128[v120[6]], v110);
    v111(&v127[v120[7]], &v128[v120[7]], v110);
    v111(&v127[v120[8]], &v128[v120[8]], v110);
    v129 = v120[9];
    v130 = &v127[v129];
    v131 = &v128[v129];
    v111(v130, v131, v110);
    v111(&v130[v125[5]], &v131[v125[5]], v110);
    v111(&v130[v125[6]], &v131[v125[6]], v110);
    v111(&v130[v125[7]], &v131[v125[7]], v110);
    v111(&v130[v125[8]], &v131[v125[8]], v110);
    v111(&v130[v125[9]], &v131[v125[9]], v110);
    v132 = v6[21];
    v133 = &v112[v132];
    v134 = &v124[v132];
    v111(&v112[v132], &v124[v132], v110);
    v111(&v133[v120[5]], &v134[v120[5]], v110);
    v111(&v133[v120[6]], &v134[v120[6]], v110);
    v111(&v133[v120[7]], &v134[v120[7]], v110);
    v111(&v133[v120[8]], &v134[v120[8]], v110);
    v135 = v120[9];
    v136 = &v133[v135];
    v137 = &v134[v135];
    v111(v136, v137, v110);
    v111(&v136[v125[5]], &v137[v125[5]], v110);
    v111(&v136[v125[6]], &v137[v125[6]], v110);
    v111(&v136[v125[7]], &v137[v125[7]], v110);
    v111(&v136[v125[8]], &v137[v125[8]], v110);
    v111(&v136[v125[9]], &v137[v125[9]], v110);
    v138 = v6[22];
    v139 = &v112[v138];
    v140 = &v124[v138];
    v111(&v112[v138], &v124[v138], v110);
    v111(&v139[v120[5]], &v140[v120[5]], v110);
    v111(&v139[v120[6]], &v140[v120[6]], v110);
    v111(&v139[v120[7]], &v140[v120[7]], v110);
    v111(&v139[v120[8]], &v140[v120[8]], v110);
    v141 = v120[9];
    v142 = &v139[v141];
    v143 = &v140[v141];
    v111(v142, v143, v110);
    v111(&v142[v125[5]], &v143[v125[5]], v110);
    v111(&v142[v125[6]], &v143[v125[6]], v110);
    v111(&v142[v125[7]], &v143[v125[7]], v110);
    v111(&v142[v125[8]], &v143[v125[8]], v110);
    v111(&v142[v125[9]], &v143[v125[9]], v110);
    v144 = v6[23];
    v145 = &v112[v144];
    v146 = &v124[v144];
    v111(&v112[v144], &v124[v144], v110);
    v111(&v145[v120[5]], &v146[v120[5]], v110);
    v111(&v145[v120[6]], &v146[v120[6]], v110);
    v111(&v145[v120[7]], &v146[v120[7]], v110);
    v111(&v145[v120[8]], &v146[v120[8]], v110);
    v147 = v120[9];
    v148 = &v145[v147];
    v149 = &v146[v147];
    v111(v148, v149, v110);
    v111(&v148[v125[5]], &v149[v125[5]], v110);
    v111(&v148[v125[6]], &v149[v125[6]], v110);
    v111(&v148[v125[7]], &v149[v125[7]], v110);
    v111(&v148[v125[8]], &v149[v125[8]], v110);
    v111(&v148[v125[9]], &v149[v125[9]], v110);
    v150 = v6[24];
    v151 = &v112[v150];
    v152 = &v124[v150];
    v111(&v112[v150], &v124[v150], v110);
    v111(&v151[v120[5]], &v152[v120[5]], v110);
    v111(&v151[v120[6]], &v152[v120[6]], v110);
    v111(&v151[v120[7]], &v152[v120[7]], v110);
    v111(&v151[v120[8]], &v152[v120[8]], v110);
    v153 = v120[9];
    a1 = v112;
    v154 = &v151[v153];
    v155 = &v152[v153];
    v111(v154, v155, v110);
    v111(&v154[v125[5]], &v155[v125[5]], v110);
    v111(&v154[v125[6]], &v155[v125[6]], v110);
    v111(&v154[v125[7]], &v155[v125[7]], v110);
    v111(&v154[v125[8]], &v155[v125[8]], v110);
    v156 = v125[9];
    a2 = v124;
    v111(&v154[v156], &v155[v156], v110);
    v157 = v6[25];
    v158 = &v112[v157];
    v159 = &v124[v157];
    *(_QWORD *)v158 = *(_QWORD *)v159;
    v158[8] = v159[8];
    v112[v6[26]] = v124[v6[26]];
    v578(&v112[v6[27]], &v124[v6[27]], v98);
    v578(&v112[v6[28]], &v124[v6[28]], v98);
    v160 = v6[29];
    v161 = &v112[v160];
    v162 = &v124[v160];
    LODWORD(v112) = __swift_getEnumTagSinglePayload((uint64_t)&v112[v160], 1, v98);
    v163 = __swift_getEnumTagSinglePayload((uint64_t)v162, 1, v98);
    if ((_DWORD)v112)
    {
      if (!v163)
      {
        (*(void (**)(char *, char *, uint64_t))(v564 + 16))(v161, v162, v98);
        __swift_storeEnumTagSinglePayload((uint64_t)v161, 0, 1, v98);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v163)
      {
        v578(v161, v162, v98);
LABEL_22:
        v189 = v6[30];
        v190 = &a1[v189];
        v191 = &v124[v189];
        v192 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v189], 1, v98);
        v193 = __swift_getEnumTagSinglePayload((uint64_t)v191, 1, v98);
        if (v192)
        {
          if (!v193)
          {
            (*(void (**)(char *, char *, uint64_t))(v564 + 16))(v190, v191, v98);
            __swift_storeEnumTagSinglePayload((uint64_t)v190, 0, 1, v98);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v193)
          {
            v578(v190, v191, v98);
LABEL_28:
            v195 = v6[31];
            v196 = &a1[v195];
            v197 = &v124[v195];
            *(_QWORD *)v196 = *(_QWORD *)v197;
            v196[8] = v197[8];
            v111(&a1[v6[32]], &v124[v6[32]], v110);
            v198 = v6[33];
            v199 = &a1[v198];
            v200 = &v124[v198];
            a1[v198] = v124[v198];
            v201 = (int *)type metadata accessor for Wind();
            v202 = v201[5];
            v203 = &v199[v202];
            v204 = &v200[v202];
            v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
            (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v205 - 8) + 24))(v203, v204, v205);
            ((void (*)(char *, _BYTE *, uint64_t))v574)(&v199[v201[6]], &v200[v201[6]], v572);
            v206 = v201[7];
            v207 = &v199[v206];
            v208 = &v200[v206];
            LODWORD(v204) = __swift_getEnumTagSinglePayload((uint64_t)&v199[v206], 1, v572);
            v209 = __swift_getEnumTagSinglePayload((uint64_t)v208, 1, v572);
            if ((_DWORD)v204)
            {
              if (!v209)
              {
                (*(void (**)(char *, _BYTE *, uint64_t))(v563 + 16))(v207, v208, v572);
                __swift_storeEnumTagSinglePayload((uint64_t)v207, 0, 1, v572);
LABEL_34:
                a3 = v581;
                v211 = v6[34];
                v212 = &a1[v211];
                v213 = &v124[v211];
                ((void (*)(_BYTE *, _BYTE *, uint64_t))v567)(&a1[v211], &v124[v211], v569);
                v214 = (int *)type metadata accessor for WeatherMetadata();
                ((void (*)(char *, _BYTE *, uint64_t))v567)(&v212[v214[5]], &v213[v214[5]], v569);
                *(_QWORD *)&v212[v214[6]] = *(_QWORD *)&v213[v214[6]];
                *(_QWORD *)&v212[v214[7]] = *(_QWORD *)&v213[v214[7]];
                *(_QWORD *)&v212[v214[8]] = *(_QWORD *)&v213[v214[8]];
                swift_retain();
                swift_release();
                goto LABEL_35;
              }
            }
            else
            {
              if (!v209)
              {
                ((void (*)(char *, _BYTE *, uint64_t))v574)(v207, v208, v572);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v563 + 8))(v207, v572);
            }
            v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
            memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v564 + 8))(v190, v98);
        }
        v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
        memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v564 + 8))(v161, v98);
    }
    v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
    goto LABEL_22;
  }
  if (v8)
  {
LABEL_7:
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_35;
  }
  v9 = sub_1A6121F58();
  v566 = *(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v9 - 8) + 16);
  v568 = v9;
  v566(a1, a2);
  *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
  *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  v10 = v6[9];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_QWORD *)v12 + 2);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_QWORD *)v11 + 2) = v13;
  a1[v6[10]] = a2[v6[10]];
  v14 = v6[11];
  v15 = &a1[v14];
  v16 = &a2[v14];
  *v15 = *v16;
  v15[1] = v16[1];
  v17 = v6[12];
  v18 = &a1[v17];
  v19 = &a2[v17];
  swift_bridgeObjectRetain();
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v571 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v571(v18, v19, v20);
  *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
  v21 = v6[14];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
  v573 = *(void (**)(char *, char *))(*(_QWORD *)(v24 - 8) + 16);
  v577 = v24;
  v573(v22, v23);
  v25 = v6[15];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  a1[v6[16]] = a2[v6[16]];
  v29 = v6[17];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
  v33(v30, v31, v32);
  v34 = a1;
  v35 = (int *)type metadata accessor for PrecipitationAmount();
  v33(&v30[v35[5]], &v31[v35[5]], v32);
  v33(&v30[v35[6]], &v31[v35[6]], v32);
  v33(&v30[v35[7]], &v31[v35[7]], v32);
  v33(&v30[v35[8]], &v31[v35[8]], v32);
  v33(&v30[v35[9]], &v31[v35[9]], v32);
  v36 = v6[18];
  v37 = &v34[v36];
  v38 = &a2[v36];
  v33(&v34[v36], &a2[v36], v32);
  v33(&v37[v35[5]], &v38[v35[5]], v32);
  v33(&v37[v35[6]], &v38[v35[6]], v32);
  v33(&v37[v35[7]], &v38[v35[7]], v32);
  v33(&v37[v35[8]], &v38[v35[8]], v32);
  v33(&v37[v35[9]], &v38[v35[9]], v32);
  v39 = v6[19];
  v40 = &v34[v39];
  v41 = &a2[v39];
  v33(&v34[v39], &a2[v39], v32);
  v42 = (int *)type metadata accessor for PrecipitationAmountByType();
  v33(&v40[v42[5]], &v41[v42[5]], v32);
  v33(&v40[v42[6]], &v41[v42[6]], v32);
  v33(&v40[v42[7]], &v41[v42[7]], v32);
  v33(&v40[v42[8]], &v41[v42[8]], v32);
  v43 = v42[9];
  v44 = &v40[v43];
  v45 = &v41[v43];
  v33(v44, v45, v32);
  v46 = a2;
  v47 = (int *)type metadata accessor for SnowfallAmount();
  v33(&v44[v47[5]], &v45[v47[5]], v32);
  v33(&v44[v47[6]], &v45[v47[6]], v32);
  v33(&v44[v47[7]], &v45[v47[7]], v32);
  v33(&v44[v47[8]], &v45[v47[8]], v32);
  v33(&v44[v47[9]], &v45[v47[9]], v32);
  v48 = v6[20];
  v49 = &v34[v48];
  v50 = &v46[v48];
  v33(&v34[v48], &v46[v48], v32);
  v33(&v49[v42[5]], &v50[v42[5]], v32);
  v33(&v49[v42[6]], &v50[v42[6]], v32);
  v33(&v49[v42[7]], &v50[v42[7]], v32);
  v33(&v49[v42[8]], &v50[v42[8]], v32);
  v51 = v42[9];
  v52 = &v49[v51];
  v53 = &v50[v51];
  v33(v52, v53, v32);
  v33(&v52[v47[5]], &v53[v47[5]], v32);
  v33(&v52[v47[6]], &v53[v47[6]], v32);
  v33(&v52[v47[7]], &v53[v47[7]], v32);
  v33(&v52[v47[8]], &v53[v47[8]], v32);
  v33(&v52[v47[9]], &v53[v47[9]], v32);
  v54 = v6[21];
  v55 = &v34[v54];
  v56 = &v46[v54];
  v33(&v34[v54], &v46[v54], v32);
  v33(&v55[v42[5]], &v56[v42[5]], v32);
  v33(&v55[v42[6]], &v56[v42[6]], v32);
  v33(&v55[v42[7]], &v56[v42[7]], v32);
  v33(&v55[v42[8]], &v56[v42[8]], v32);
  v57 = v42[9];
  v58 = &v55[v57];
  v59 = &v56[v57];
  v33(v58, v59, v32);
  v33(&v58[v47[5]], &v59[v47[5]], v32);
  v33(&v58[v47[6]], &v59[v47[6]], v32);
  v33(&v58[v47[7]], &v59[v47[7]], v32);
  v33(&v58[v47[8]], &v59[v47[8]], v32);
  v33(&v58[v47[9]], &v59[v47[9]], v32);
  v60 = v6[22];
  v61 = &v34[v60];
  v62 = &v46[v60];
  v33(&v34[v60], &v46[v60], v32);
  v33(&v61[v42[5]], &v62[v42[5]], v32);
  v33(&v61[v42[6]], &v62[v42[6]], v32);
  v33(&v61[v42[7]], &v62[v42[7]], v32);
  v33(&v61[v42[8]], &v62[v42[8]], v32);
  v63 = v42[9];
  v64 = &v61[v63];
  v65 = &v62[v63];
  v33(v64, v65, v32);
  v33(&v64[v47[5]], &v65[v47[5]], v32);
  v33(&v64[v47[6]], &v65[v47[6]], v32);
  v33(&v64[v47[7]], &v65[v47[7]], v32);
  v33(&v64[v47[8]], &v65[v47[8]], v32);
  v33(&v64[v47[9]], &v65[v47[9]], v32);
  v66 = v6[23];
  v67 = &v34[v66];
  v68 = &v46[v66];
  v33(&v34[v66], &v46[v66], v32);
  v33(&v67[v42[5]], &v68[v42[5]], v32);
  v33(&v67[v42[6]], &v68[v42[6]], v32);
  v33(&v67[v42[7]], &v68[v42[7]], v32);
  v33(&v67[v42[8]], &v68[v42[8]], v32);
  v69 = v42[9];
  v70 = &v67[v69];
  v71 = &v68[v69];
  v33(v70, v71, v32);
  v33(&v70[v47[5]], &v71[v47[5]], v32);
  v33(&v70[v47[6]], &v71[v47[6]], v32);
  v33(&v70[v47[7]], &v71[v47[7]], v32);
  v33(&v70[v47[8]], &v71[v47[8]], v32);
  v33(&v70[v47[9]], &v71[v47[9]], v32);
  v72 = v6[24];
  v73 = &v34[v72];
  v74 = &v46[v72];
  v33(&v34[v72], &v46[v72], v32);
  v33(&v73[v42[5]], &v74[v42[5]], v32);
  v33(&v73[v42[6]], &v74[v42[6]], v32);
  v33(&v73[v42[7]], &v74[v42[7]], v32);
  v33(&v73[v42[8]], &v74[v42[8]], v32);
  v75 = v42[9];
  a1 = v34;
  v76 = &v73[v75];
  v77 = &v74[v75];
  v33(v76, v77, v32);
  v33(&v76[v47[5]], &v77[v47[5]], v32);
  v33(&v76[v47[6]], &v77[v47[6]], v32);
  v33(&v76[v47[7]], &v77[v47[7]], v32);
  v33(&v76[v47[8]], &v77[v47[8]], v32);
  v78 = v47[9];
  a2 = v46;
  v33(&v76[v78], &v77[v78], v32);
  v79 = v6[25];
  v80 = &v34[v79];
  v81 = &v46[v79];
  v82 = *(_QWORD *)v81;
  v80[8] = v81[8];
  *(_QWORD *)v80 = v82;
  v34[v6[26]] = v46[v6[26]];
  v571(&v34[v6[27]], &v46[v6[27]], v20);
  v571(&v34[v6[28]], &v46[v6[28]], v20);
  v83 = v6[29];
  v84 = &v34[v83];
  v85 = &v46[v83];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v46[v83], 1, v20))
  {
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    v571(v84, v85, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v84, 0, 1, v20);
  }
  v164 = v6[30];
  v165 = &v34[v164];
  v166 = &v46[v164];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v46[v164], 1, v20))
  {
    v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
  }
  else
  {
    v571(v165, v166, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v165, 0, 1, v20);
  }
  v168 = v6[31];
  v169 = &v34[v168];
  v170 = &v46[v168];
  v171 = *(_QWORD *)v170;
  v169[8] = v170[8];
  *(_QWORD *)v169 = v171;
  v33(&v34[v6[32]], &v46[v6[32]], v32);
  v172 = v6[33];
  v173 = &v34[v172];
  v174 = &v46[v172];
  v34[v172] = v46[v172];
  v175 = (int *)type metadata accessor for Wind();
  v176 = v175[5];
  v177 = &v173[v176];
  v178 = &v174[v176];
  v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v177, v178, v179);
  ((void (*)(char *, _BYTE *, uint64_t))v573)(&v173[v175[6]], &v174[v175[6]], v577);
  v180 = v175[7];
  v181 = &v173[v180];
  v182 = &v174[v180];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v174[v180], 1, v577))
  {
    v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
    memcpy(v181, v182, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, _BYTE *, uint64_t))v573)(v181, v182, v577);
    __swift_storeEnumTagSinglePayload((uint64_t)v181, 0, 1, v577);
  }
  a3 = v581;
  v184 = v6[34];
  v185 = &a1[v184];
  v186 = &v46[v184];
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v566)(&a1[v184], &v46[v184], v568);
  v187 = (int *)type metadata accessor for WeatherMetadata();
  ((void (*)(char *, _BYTE *, uint64_t))v566)(&v185[v187[5]], &v186[v187[5]], v568);
  *(_QWORD *)&v185[v187[6]] = *(_QWORD *)&v186[v187[6]];
  *(_QWORD *)&v185[v187[7]] = *(_QWORD *)&v186[v187[7]];
  *(_QWORD *)&v185[v187[8]] = *(_QWORD *)&v186[v187[8]];
  swift_retain();
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
LABEL_35:
  v215 = a3[5];
  v216 = &a1[v215];
  v217 = &a2[v215];
  v218 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  v219 = __swift_getEnumTagSinglePayload((uint64_t)v216, 1, (uint64_t)v218);
  v220 = __swift_getEnumTagSinglePayload((uint64_t)v217, 1, (uint64_t)v218);
  if (v219)
  {
    if (!v220)
    {
      *v216 = *v217;
      v221 = v218[13];
      v222 = (char *)v216 + v221;
      v223 = (char *)v217 + v221;
      v224 = sub_1A6121F58();
      v225 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 16);
      swift_bridgeObjectRetain();
      v225(v222, v223, v224);
      v226 = (int *)type metadata accessor for WeatherMetadata();
      v225(&v222[v226[5]], &v223[v226[5]], v224);
      a3 = v581;
      *(_QWORD *)&v222[v226[6]] = *(_QWORD *)&v223[v226[6]];
      *(_QWORD *)&v222[v226[7]] = *(_QWORD *)&v223[v226[7]];
      *(_QWORD *)&v222[v226[8]] = *(_QWORD *)&v223[v226[8]];
      v227 = v218[14];
      v228 = (_QWORD *)((char *)v216 + v227);
      v229 = (_QWORD *)((char *)v217 + v227);
      *v228 = *v229;
      v228[1] = v229[1];
      *(_QWORD *)((char *)v216 + v218[15]) = *(_QWORD *)((char *)v217 + v218[15]);
      *(_QWORD *)((char *)v216 + v218[16]) = *(_QWORD *)((char *)v217 + v218[16]);
      v230 = v218[17];
      v231 = (char *)v216 + v230;
      v232 = (char *)v217 + v230;
      v233 = v232[16];
      *(_OWORD *)v231 = *(_OWORD *)v232;
      v231[16] = v233;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v216, 0, 1, (uint64_t)v218);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v220)
  {
    sub_1A5FAFD58((uint64_t)v216, &qword_1ED193AE0);
LABEL_40:
    v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
    goto LABEL_41;
  }
  *v216 = *v217;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v299 = v218[13];
  v300 = (char *)v216 + v299;
  v301 = (char *)v217 + v299;
  v302 = sub_1A6121F58();
  v303 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v302 - 8) + 24);
  v303(v300, v301, v302);
  v304 = (int *)type metadata accessor for WeatherMetadata();
  v303(&v300[v304[5]], &v301[v304[5]], v302);
  a3 = v581;
  *(_QWORD *)&v300[v304[6]] = *(_QWORD *)&v301[v304[6]];
  *(_QWORD *)&v300[v304[7]] = *(_QWORD *)&v301[v304[7]];
  *(_QWORD *)&v300[v304[8]] = *(_QWORD *)&v301[v304[8]];
  swift_retain();
  swift_release();
  v305 = v218[14];
  v306 = (_QWORD *)((char *)v216 + v305);
  v307 = (_QWORD *)((char *)v217 + v305);
  *v306 = *v307;
  v306[1] = v307[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v216 + v218[15]) = *(_QWORD *)((char *)v217 + v218[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v216 + v218[16]) = *(_QWORD *)((char *)v217 + v218[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v308 = v218[17];
  v309 = (char *)v216 + v308;
  v310 = (char *)v217 + v308;
  v311 = *(_OWORD *)v310;
  v309[16] = v310[16];
  *(_OWORD *)v309 = v311;
LABEL_41:
  v235 = a3[6];
  v236 = &a1[v235];
  v237 = &a2[v235];
  v238 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  v239 = __swift_getEnumTagSinglePayload((uint64_t)v236, 1, (uint64_t)v238);
  v240 = __swift_getEnumTagSinglePayload((uint64_t)v237, 1, (uint64_t)v238);
  if (v239)
  {
    if (!v240)
    {
      *v236 = *v237;
      v241 = v238[13];
      v242 = (char *)v236 + v241;
      v243 = (char *)v237 + v241;
      v244 = sub_1A6121F58();
      v245 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 16);
      swift_bridgeObjectRetain();
      v245(v242, v243, v244);
      v246 = (int *)type metadata accessor for WeatherMetadata();
      v245(&v242[v246[5]], &v243[v246[5]], v244);
      a3 = v581;
      *(_QWORD *)&v242[v246[6]] = *(_QWORD *)&v243[v246[6]];
      *(_QWORD *)&v242[v246[7]] = *(_QWORD *)&v243[v246[7]];
      *(_QWORD *)&v242[v246[8]] = *(_QWORD *)&v243[v246[8]];
      v247 = v238[14];
      v248 = (_QWORD *)((char *)v236 + v247);
      v249 = (_QWORD *)((char *)v237 + v247);
      *v248 = *v249;
      v248[1] = v249[1];
      *(_QWORD *)((char *)v236 + v238[15]) = *(_QWORD *)((char *)v237 + v238[15]);
      *(_QWORD *)((char *)v236 + v238[16]) = *(_QWORD *)((char *)v237 + v238[16]);
      v250 = v238[17];
      v251 = (char *)v236 + v250;
      v252 = (char *)v237 + v250;
      v253 = v252[16];
      *(_OWORD *)v251 = *(_OWORD *)v252;
      v251[16] = v253;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v236, 0, 1, (uint64_t)v238);
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  if (v240)
  {
    sub_1A5FAFD58((uint64_t)v236, (uint64_t *)&unk_1ED193AB8);
LABEL_46:
    v254 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
    memcpy(v236, v237, *(_QWORD *)(*(_QWORD *)(v254 - 8) + 64));
    goto LABEL_47;
  }
  *v236 = *v237;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v312 = v238[13];
  v313 = (char *)v236 + v312;
  v314 = (char *)v237 + v312;
  v315 = sub_1A6121F58();
  v316 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v315 - 8) + 24);
  v316(v313, v314, v315);
  v317 = (int *)type metadata accessor for WeatherMetadata();
  v316(&v313[v317[5]], &v314[v317[5]], v315);
  a3 = v581;
  *(_QWORD *)&v313[v317[6]] = *(_QWORD *)&v314[v317[6]];
  *(_QWORD *)&v313[v317[7]] = *(_QWORD *)&v314[v317[7]];
  *(_QWORD *)&v313[v317[8]] = *(_QWORD *)&v314[v317[8]];
  swift_retain();
  swift_release();
  v318 = v238[14];
  v319 = (_QWORD *)((char *)v236 + v318);
  v320 = (_QWORD *)((char *)v237 + v318);
  *v319 = *v320;
  v319[1] = v320[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v236 + v238[15]) = *(_QWORD *)((char *)v237 + v238[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v236 + v238[16]) = *(_QWORD *)((char *)v237 + v238[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v321 = v238[17];
  v322 = (char *)v236 + v321;
  v323 = (char *)v237 + v321;
  v324 = *(_OWORD *)v323;
  v322[16] = v323[16];
  *(_OWORD *)v322 = v324;
LABEL_47:
  v255 = a3[7];
  v256 = &a1[v255];
  v257 = &a2[v255];
  v258 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  v259 = __swift_getEnumTagSinglePayload((uint64_t)v256, 1, (uint64_t)v258);
  v260 = __swift_getEnumTagSinglePayload((uint64_t)v257, 1, (uint64_t)v258);
  if (v259)
  {
    if (!v260)
    {
      *v256 = *v257;
      v261 = v258[13];
      v262 = (char *)v256 + v261;
      v263 = (char *)v257 + v261;
      v264 = sub_1A6121F58();
      v265 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v264 - 8) + 16);
      swift_bridgeObjectRetain();
      v265(v262, v263, v264);
      v266 = (int *)type metadata accessor for WeatherMetadata();
      v265(&v262[v266[5]], &v263[v266[5]], v264);
      a3 = v581;
      *(_QWORD *)&v262[v266[6]] = *(_QWORD *)&v263[v266[6]];
      *(_QWORD *)&v262[v266[7]] = *(_QWORD *)&v263[v266[7]];
      *(_QWORD *)&v262[v266[8]] = *(_QWORD *)&v263[v266[8]];
      v267 = v258[14];
      v268 = (_QWORD *)((char *)v256 + v267);
      v269 = (_QWORD *)((char *)v257 + v267);
      *v268 = *v269;
      v268[1] = v269[1];
      *(_QWORD *)((char *)v256 + v258[15]) = *(_QWORD *)((char *)v257 + v258[15]);
      *(_QWORD *)((char *)v256 + v258[16]) = *(_QWORD *)((char *)v257 + v258[16]);
      v270 = v258[17];
      v271 = (char *)v256 + v270;
      v272 = (char *)v257 + v270;
      v273 = v272[16];
      *(_OWORD *)v271 = *(_OWORD *)v272;
      v271[16] = v273;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v256, 0, 1, (uint64_t)v258);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v260)
  {
    sub_1A5FAFD58((uint64_t)v256, (uint64_t *)&unk_1ED193A90);
LABEL_52:
    v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
    memcpy(v256, v257, *(_QWORD *)(*(_QWORD *)(v274 - 8) + 64));
    goto LABEL_53;
  }
  *v256 = *v257;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v325 = v258[13];
  v326 = (char *)v256 + v325;
  v327 = (char *)v257 + v325;
  v328 = sub_1A6121F58();
  v329 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v328 - 8) + 24);
  v329(v326, v327, v328);
  v330 = (int *)type metadata accessor for WeatherMetadata();
  v329(&v326[v330[5]], &v327[v330[5]], v328);
  a3 = v581;
  *(_QWORD *)&v326[v330[6]] = *(_QWORD *)&v327[v330[6]];
  *(_QWORD *)&v326[v330[7]] = *(_QWORD *)&v327[v330[7]];
  *(_QWORD *)&v326[v330[8]] = *(_QWORD *)&v327[v330[8]];
  swift_retain();
  swift_release();
  v331 = v258[14];
  v332 = (_QWORD *)((char *)v256 + v331);
  v333 = (_QWORD *)((char *)v257 + v331);
  *v332 = *v333;
  v332[1] = v333[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v256 + v258[15]) = *(_QWORD *)((char *)v257 + v258[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v256 + v258[16]) = *(_QWORD *)((char *)v257 + v258[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v334 = v258[17];
  v335 = (char *)v256 + v334;
  v336 = (char *)v257 + v334;
  v337 = *(_OWORD *)v336;
  v335[16] = v336[16];
  *(_OWORD *)v335 = v337;
LABEL_53:
  v275 = a3[8];
  v276 = &a1[v275];
  v277 = &a2[v275];
  v278 = (int *)type metadata accessor for AirQuality();
  v279 = __swift_getEnumTagSinglePayload((uint64_t)v276, 1, (uint64_t)v278);
  v280 = __swift_getEnumTagSinglePayload((uint64_t)v277, 1, (uint64_t)v278);
  if (!v279)
  {
    if (v280)
    {
      sub_1A5FA1740((uint64_t)v276, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
      goto LABEL_59;
    }
    v576 = a2;
    v580 = a1;
    v338 = sub_1A6121F58();
    v339 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v338 - 8) + 24);
    v339(v276, v277, v338);
    v570 = v339;
    v339(&v276[v278[5]], &v277[v278[5]], v338);
    v340 = v278[6];
    v341 = &v276[v340];
    v342 = &v277[v340];
    *v341 = *v342;
    v341[1] = v342[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v343 = v278[7];
    v344 = &v276[v343];
    v345 = &v277[v343];
    *(_QWORD *)v344 = *(_QWORD *)&v277[v343];
    *((_QWORD *)v344 + 1) = *(_QWORD *)&v277[v343 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v344 + 2) = *((_QWORD *)v345 + 2);
    *((_QWORD *)v344 + 3) = *((_QWORD *)v345 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v344 + 4) = *((_QWORD *)v345 + 4);
    *((_QWORD *)v344 + 5) = *((_QWORD *)v345 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v344 + 6) = *((_QWORD *)v345 + 6);
    *((_QWORD *)v344 + 7) = *((_QWORD *)v345 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v344 + 8) = *((_QWORD *)v345 + 8);
    *((_QWORD *)v344 + 9) = *((_QWORD *)v345 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v344[80] = v345[80];
    *((_QWORD *)v344 + 11) = *((_QWORD *)v345 + 11);
    *((_QWORD *)v344 + 12) = *((_QWORD *)v345 + 12);
    *((_QWORD *)v344 + 13) = *((_QWORD *)v345 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v344 + 14) = *((_QWORD *)v345 + 14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v276[v278[8]] = *(_QWORD *)&v277[v278[8]];
    v346 = v278[9];
    v347 = &v276[v346];
    v348 = &v277[v346];
    *v347 = *(_QWORD *)&v277[v346];
    v347[1] = *(_QWORD *)&v277[v346 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v347[2] = v348[2];
    v347[3] = v348[3];
    v347[4] = v348[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v347[5] = v348[5];
    v347[6] = v348[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v347[7] = v348[7];
    v347[8] = v348[8];
    v347[9] = v348[9];
    v347[10] = v348[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v276[v278[10]] = v277[v278[10]];
    v349 = v278[11];
    v350 = &v276[v349];
    v351 = &v277[v349];
    v352 = type metadata accessor for ProviderAttribution();
    LODWORD(v339) = __swift_getEnumTagSinglePayload((uint64_t)v350, 1, v352);
    v353 = __swift_getEnumTagSinglePayload((uint64_t)v351, 1, v352);
    if ((_DWORD)v339)
    {
      if (!v353)
      {
        *v350 = *v351;
        v350[1] = v351[1];
        v354 = *(int *)(v352 + 20);
        v355 = (char *)v350 + v354;
        v356 = (char *)v351 + v354;
        v357 = sub_1A6121DF0();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v356, 1, v357))
        {
          v358 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
          memcpy(v355, v356, *(_QWORD *)(*(_QWORD *)(v358 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(v355, v356, v357);
          __swift_storeEnumTagSinglePayload((uint64_t)v355, 0, 1, v357);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v350, 0, 1, v352);
LABEL_90:
        v394 = v278[12];
        v395 = &v276[v394];
        v396 = &v277[v394];
        v397 = sub_1A6121DF0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v397 - 8) + 24))(v395, v396, v397);
        *(_QWORD *)&v276[v278[13]] = *(_QWORD *)&v277[v278[13]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v398 = v278[14];
        v399 = &v276[v398];
        v400 = &v277[v398];
        v401 = type metadata accessor for AirPollutant();
        LODWORD(v395) = __swift_getEnumTagSinglePayload((uint64_t)v399, 1, v401);
        v402 = __swift_getEnumTagSinglePayload((uint64_t)v400, 1, v401);
        if ((_DWORD)v395)
        {
          if (!v402)
          {
            *v399 = *v400;
            v403 = *(int *)(v401 + 20);
            v404 = &v399[v403];
            v405 = &v400[v403];
            type metadata accessor for AirPollutantMeasurement();
            if (swift_getEnumCaseMultiPayload() == 1)
              v406 = &qword_1ED190B60;
            else
              v406 = &qword_1ED1922B8;
            v407 = __swift_instantiateConcreteTypeFromMangledName(v406);
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v407 - 8) + 16))(v404, v405, v407);
            swift_storeEnumTagMultiPayload();
            v399[*(int *)(v401 + 24)] = v400[*(int *)(v401 + 24)];
            __swift_storeEnumTagSinglePayload((uint64_t)v399, 0, 1, v401);
            goto LABEL_99;
          }
        }
        else
        {
          if (!v402)
          {
            *v399 = *v400;
            if (v580 != v576)
            {
              v555 = *(int *)(v401 + 20);
              v556 = &v400[v555];
              v557 = &v399[v555];
              sub_1A5FA1740((uint64_t)&v399[v555], (uint64_t (*)(_QWORD))type metadata accessor for AirPollutantMeasurement);
              type metadata accessor for AirPollutantMeasurement();
              if (swift_getEnumCaseMultiPayload() == 1)
                v558 = &qword_1ED190B60;
              else
                v558 = &qword_1ED1922B8;
              v559 = __swift_instantiateConcreteTypeFromMangledName(v558);
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v559 - 8) + 16))(v557, v556, v559);
              swift_storeEnumTagMultiPayload();
            }
            v399[*(int *)(v401 + 24)] = v400[*(int *)(v401 + 24)];
            goto LABEL_99;
          }
          sub_1A5FA1740((uint64_t)v399, (uint64_t (*)(_QWORD))type metadata accessor for AirPollutant);
        }
        v408 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
        memcpy(v399, v400, *(_QWORD *)(*(_QWORD *)(v408 - 8) + 64));
LABEL_99:
        a2 = v576;
        a1 = v580;
        a3 = v581;
        v276[v278[15]] = v277[v278[15]];
        v409 = v278[16];
        v410 = &v276[v409];
        v411 = &v277[v409];
        *v410 = *v411;
        *((_QWORD *)v410 + 1) = *((_QWORD *)v411 + 1);
        *((_QWORD *)v410 + 2) = *((_QWORD *)v411 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v412 = v278[17];
        v413 = &v276[v412];
        v414 = &v277[v412];
        v570(&v276[v412], &v277[v412], v338);
        v415 = (int *)type metadata accessor for WeatherMetadata();
        v570(&v413[v415[5]], &v414[v415[5]], v338);
        *(_QWORD *)&v413[v415[6]] = *(_QWORD *)&v414[v415[6]];
        *(_QWORD *)&v413[v415[7]] = *(_QWORD *)&v414[v415[7]];
        *(_QWORD *)&v413[v415[8]] = *(_QWORD *)&v414[v415[8]];
        swift_retain();
        swift_release();
        goto LABEL_100;
      }
    }
    else
    {
      if (!v353)
      {
        *v350 = *v351;
        v350[1] = v351[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v388 = *(int *)(v352 + 20);
        v389 = (uint64_t)v350 + v388;
        v390 = (uint64_t)v351 + v388;
        v391 = sub_1A6121DF0();
        v392 = __swift_getEnumTagSinglePayload(v389, 1, v391);
        v393 = __swift_getEnumTagSinglePayload(v390, 1, v391);
        if (v392)
        {
          if (!v393)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v391 - 8) + 16))(v389, v390, v391);
            __swift_storeEnumTagSinglePayload(v389, 0, 1, v391);
            goto LABEL_90;
          }
        }
        else
        {
          v560 = *(_QWORD *)(v391 - 8);
          if (!v393)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v560 + 24))(v389, v390, v391);
            goto LABEL_90;
          }
          (*(void (**)(uint64_t, uint64_t))(v560 + 8))(v389, v391);
        }
        v364 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8) - 8) + 64);
        v365 = (void *)v389;
        v366 = (const void *)v390;
LABEL_72:
        memcpy(v365, v366, v364);
        goto LABEL_90;
      }
      sub_1A5FA1740((uint64_t)v350, (uint64_t (*)(_QWORD))type metadata accessor for ProviderAttribution);
    }
    v364 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330) - 8) + 64);
    v365 = v350;
    v366 = v351;
    goto LABEL_72;
  }
  if (v280)
  {
LABEL_59:
    v298 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
    memcpy(v276, v277, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
    goto LABEL_100;
  }
  v575 = a2;
  v579 = a1;
  v281 = sub_1A6121F58();
  v282 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v281 - 8) + 16);
  v282(v276, v277, v281);
  v562 = v281;
  v565 = v282;
  v282(&v276[v278[5]], &v277[v278[5]], v281);
  v283 = v278[6];
  v284 = &v276[v283];
  v285 = &v277[v283];
  *v284 = *v285;
  v284[1] = v285[1];
  v286 = v278[7];
  v287 = &v276[v286];
  v288 = &v277[v286];
  *(_QWORD *)v287 = *(_QWORD *)v288;
  *((_QWORD *)v287 + 1) = *((_QWORD *)v288 + 1);
  *((_QWORD *)v287 + 2) = *((_QWORD *)v288 + 2);
  *((_QWORD *)v287 + 3) = *((_QWORD *)v288 + 3);
  *((_QWORD *)v287 + 4) = *((_QWORD *)v288 + 4);
  *((_QWORD *)v287 + 5) = *((_QWORD *)v288 + 5);
  *((_QWORD *)v287 + 6) = *((_QWORD *)v288 + 6);
  *((_QWORD *)v287 + 7) = *((_QWORD *)v288 + 7);
  *((_QWORD *)v287 + 8) = *((_QWORD *)v288 + 8);
  *((_QWORD *)v287 + 9) = *((_QWORD *)v288 + 9);
  v287[80] = v288[80];
  *(_OWORD *)(v287 + 88) = *(_OWORD *)(v288 + 88);
  *((_QWORD *)v287 + 13) = *((_QWORD *)v288 + 13);
  *((_QWORD *)v287 + 14) = *((_QWORD *)v288 + 14);
  *(_QWORD *)&v276[v278[8]] = *(_QWORD *)&v277[v278[8]];
  v289 = v278[9];
  v290 = &v276[v289];
  v291 = &v277[v289];
  *(_QWORD *)v290 = *(_QWORD *)v291;
  *((_QWORD *)v290 + 1) = *((_QWORD *)v291 + 1);
  *((_QWORD *)v290 + 2) = *((_QWORD *)v291 + 2);
  *((_QWORD *)v290 + 3) = *((_QWORD *)v291 + 3);
  *((_QWORD *)v290 + 4) = *((_QWORD *)v291 + 4);
  *((_QWORD *)v290 + 5) = *((_QWORD *)v291 + 5);
  *((_QWORD *)v290 + 6) = *((_QWORD *)v291 + 6);
  *(_OWORD *)(v290 + 56) = *(_OWORD *)(v291 + 56);
  *((_QWORD *)v290 + 9) = *((_QWORD *)v291 + 9);
  *((_QWORD *)v290 + 10) = *((_QWORD *)v291 + 10);
  v276[v278[10]] = v277[v278[10]];
  v292 = v278[11];
  __dst = &v276[v292];
  v293 = &v277[v292];
  v294 = type metadata accessor for ProviderAttribution();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v293, 1, v294))
  {
    v295 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
    memcpy(__dst, v293, *(_QWORD *)(*(_QWORD *)(v295 - 8) + 64));
    a2 = v575;
    v296 = v277;
    v297 = v281;
  }
  else
  {
    *__dst = *v293;
    __dst[1] = v293[1];
    v359 = *(int *)(v294 + 20);
    v360 = (char *)__dst + v359;
    v361 = (char *)v293 + v359;
    v362 = sub_1A6121DF0();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v361, 1, v362))
    {
      v363 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
      memcpy(v360, v361, *(_QWORD *)(*(_QWORD *)(v363 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v362 - 8) + 16))(v360, v361, v362);
      __swift_storeEnumTagSinglePayload((uint64_t)v360, 0, 1, v362);
    }
    a2 = v575;
    v296 = v277;
    v297 = v562;
    __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v294);
  }
  v367 = v278[12];
  v368 = &v276[v367];
  v369 = &v296[v367];
  v370 = sub_1A6121DF0();
  (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v368, v369, v370);
  *(_QWORD *)&v276[v278[13]] = *(_QWORD *)&v296[v278[13]];
  v371 = v278[14];
  v372 = &v276[v371];
  v373 = &v296[v371];
  v374 = type metadata accessor for AirPollutant();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v373, 1, v374))
  {
    v375 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
    memcpy(v372, v373, *(_QWORD *)(*(_QWORD *)(v375 - 8) + 64));
  }
  else
  {
    *v372 = *v373;
    v376 = *(int *)(v374 + 20);
    v377 = &v372[v376];
    v378 = &v373[v376];
    type metadata accessor for AirPollutantMeasurement();
    if (swift_getEnumCaseMultiPayload() == 1)
      v379 = &qword_1ED190B60;
    else
      v379 = &qword_1ED1922B8;
    v380 = __swift_instantiateConcreteTypeFromMangledName(v379);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v380 - 8) + 16))(v377, v378, v380);
    v296 = v277;
    swift_storeEnumTagMultiPayload();
    v372[*(int *)(v374 + 24)] = v373[*(int *)(v374 + 24)];
    __swift_storeEnumTagSinglePayload((uint64_t)v372, 0, 1, v374);
  }
  a1 = v579;
  a3 = v581;
  v276[v278[15]] = v296[v278[15]];
  v381 = v278[16];
  v382 = &v276[v381];
  v383 = &v296[v381];
  *v382 = *v383;
  *((_QWORD *)v382 + 1) = *((_QWORD *)v383 + 1);
  *((_QWORD *)v382 + 2) = *((_QWORD *)v383 + 2);
  v384 = v278[17];
  v385 = &v276[v384];
  v386 = &v296[v384];
  swift_bridgeObjectRetain();
  v565(v385, v386, v297);
  v387 = (int *)type metadata accessor for WeatherMetadata();
  v565(&v385[v387[5]], &v386[v387[5]], v297);
  *(_QWORD *)&v385[v387[6]] = *(_QWORD *)&v386[v387[6]];
  *(_QWORD *)&v385[v387[7]] = *(_QWORD *)&v386[v387[7]];
  *(_QWORD *)&v385[v387[8]] = *(_QWORD *)&v386[v387[8]];
  swift_retain();
  __swift_storeEnumTagSinglePayload((uint64_t)v276, 0, 1, (uint64_t)v278);
LABEL_100:
  v416 = a3[9];
  v417 = &a1[v416];
  v418 = &a2[v416];
  v419 = type metadata accessor for WeatherChanges();
  v420 = __swift_getEnumTagSinglePayload((uint64_t)v417, 1, v419);
  v421 = __swift_getEnumTagSinglePayload((uint64_t)v418, 1, v419);
  if (v420)
  {
    if (!v421)
    {
      *v417 = *v418;
      v422 = *(int *)(v419 + 20);
      v423 = (char *)v417 + v422;
      v424 = (char *)v418 + v422;
      v425 = sub_1A6121F58();
      v426 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v425 - 8) + 16);
      swift_bridgeObjectRetain();
      v426(v423, v424, v425);
      v427 = (int *)type metadata accessor for WeatherMetadata();
      v426(&v423[v427[5]], &v424[v427[5]], v425);
      *(_QWORD *)&v423[v427[6]] = *(_QWORD *)&v424[v427[6]];
      *(_QWORD *)&v423[v427[7]] = *(_QWORD *)&v424[v427[7]];
      *(_QWORD *)&v423[v427[8]] = *(_QWORD *)&v424[v427[8]];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v417, 0, 1, v419);
      goto LABEL_106;
    }
    goto LABEL_105;
  }
  if (v421)
  {
    sub_1A5FA1740((uint64_t)v417, (uint64_t (*)(_QWORD))type metadata accessor for WeatherChanges);
LABEL_105:
    v428 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
    memcpy(v417, v418, *(_QWORD *)(*(_QWORD *)(v428 - 8) + 64));
    goto LABEL_106;
  }
  *v417 = *v418;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v504 = *(int *)(v419 + 20);
  v505 = (char *)v417 + v504;
  v506 = (char *)v418 + v504;
  v507 = sub_1A6121F58();
  v508 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v507 - 8) + 24);
  v508(v505, v506, v507);
  v509 = (int *)type metadata accessor for WeatherMetadata();
  v508(&v505[v509[5]], &v506[v509[5]], v507);
  *(_QWORD *)&v505[v509[6]] = *(_QWORD *)&v506[v509[6]];
  *(_QWORD *)&v505[v509[7]] = *(_QWORD *)&v506[v509[7]];
  *(_QWORD *)&v505[v509[8]] = *(_QWORD *)&v506[v509[8]];
  swift_retain();
  swift_release();
LABEL_106:
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v429 = a3[11];
  v430 = &a1[v429];
  v431 = &a2[v429];
  v432 = *(_WORD *)v431;
  v430[2] = v431[2];
  *(_WORD *)v430 = v432;
  a1[a3[12]] = a2[a3[12]];
  a1[a3[13]] = a2[a3[13]];
  a1[a3[14]] = a2[a3[14]];
  v433 = a3[15];
  v434 = &a1[v433];
  v435 = &a2[v433];
  v436 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED194050);
  v437 = __swift_getEnumTagSinglePayload((uint64_t)v434, 1, (uint64_t)v436);
  v438 = __swift_getEnumTagSinglePayload((uint64_t)v435, 1, (uint64_t)v436);
  if (v437)
  {
    if (!v438)
    {
      *v434 = *v435;
      v439 = v436[13];
      v440 = (char *)v434 + v439;
      v441 = (char *)v435 + v439;
      v442 = sub_1A6121F58();
      v443 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v442 - 8) + 16);
      swift_bridgeObjectRetain();
      v443(v440, v441, v442);
      v444 = (int *)type metadata accessor for WeatherMetadata();
      v443(&v440[v444[5]], &v441[v444[5]], v442);
      a3 = v581;
      *(_QWORD *)&v440[v444[6]] = *(_QWORD *)&v441[v444[6]];
      *(_QWORD *)&v440[v444[7]] = *(_QWORD *)&v441[v444[7]];
      *(_QWORD *)&v440[v444[8]] = *(_QWORD *)&v441[v444[8]];
      v445 = v436[14];
      v446 = (_QWORD *)((char *)v434 + v445);
      v447 = (_QWORD *)((char *)v435 + v445);
      *v446 = *v447;
      v446[1] = v447[1];
      *(_QWORD *)((char *)v434 + v436[15]) = *(_QWORD *)((char *)v435 + v436[15]);
      *(_QWORD *)((char *)v434 + v436[16]) = *(_QWORD *)((char *)v435 + v436[16]);
      v448 = v436[17];
      v449 = (char *)v434 + v448;
      v450 = (char *)v435 + v448;
      v451 = v450[16];
      *(_OWORD *)v449 = *(_OWORD *)v450;
      v449[16] = v451;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v434, 0, 1, (uint64_t)v436);
      goto LABEL_112;
    }
    goto LABEL_111;
  }
  if (v438)
  {
    sub_1A5FAFD58((uint64_t)v434, &qword_1ED194050);
LABEL_111:
    v452 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194058);
    memcpy(v434, v435, *(_QWORD *)(*(_QWORD *)(v452 - 8) + 64));
    goto LABEL_112;
  }
  *v434 = *v435;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v510 = v436[13];
  v511 = (char *)v434 + v510;
  v512 = (char *)v435 + v510;
  v513 = sub_1A6121F58();
  v514 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v513 - 8) + 24);
  v514(v511, v512, v513);
  v515 = (int *)type metadata accessor for WeatherMetadata();
  v514(&v511[v515[5]], &v512[v515[5]], v513);
  a3 = v581;
  *(_QWORD *)&v511[v515[6]] = *(_QWORD *)&v512[v515[6]];
  *(_QWORD *)&v511[v515[7]] = *(_QWORD *)&v512[v515[7]];
  *(_QWORD *)&v511[v515[8]] = *(_QWORD *)&v512[v515[8]];
  swift_retain();
  swift_release();
  v516 = v436[14];
  v517 = (_QWORD *)((char *)v434 + v516);
  v518 = (_QWORD *)((char *)v435 + v516);
  *v517 = *v518;
  v517[1] = v518[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v434 + v436[15]) = *(_QWORD *)((char *)v435 + v436[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v434 + v436[16]) = *(_QWORD *)((char *)v435 + v436[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v519 = v436[17];
  v520 = (char *)v434 + v519;
  v521 = (char *)v435 + v519;
  v522 = *(_OWORD *)v521;
  v520[16] = v521[16];
  *(_OWORD *)v520 = v522;
LABEL_112:
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v453 = a3[17];
  v454 = &a1[v453];
  v455 = &a2[v453];
  v456 = (int *)type metadata accessor for TideEvents();
  v457 = __swift_getEnumTagSinglePayload((uint64_t)v454, 1, (uint64_t)v456);
  v458 = __swift_getEnumTagSinglePayload((uint64_t)v455, 1, (uint64_t)v456);
  if (v457)
  {
    if (!v458)
    {
      v459 = sub_1A6121F58();
      v460 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v459 - 8) + 16);
      v460(v454, v455, v459);
      *(_QWORD *)&v454[v456[5]] = *(_QWORD *)&v455[v456[5]];
      *(_QWORD *)&v454[v456[6]] = *(_QWORD *)&v455[v456[6]];
      *(_OWORD *)&v454[v456[7]] = *(_OWORD *)&v455[v456[7]];
      v461 = v456[8];
      v462 = &v454[v461];
      v463 = &v455[v461];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v460(v462, v463, v459);
      v464 = (int *)type metadata accessor for WeatherMetadata();
      v460(&v462[v464[5]], &v463[v464[5]], v459);
      *(_QWORD *)&v462[v464[6]] = *(_QWORD *)&v463[v464[6]];
      *(_QWORD *)&v462[v464[7]] = *(_QWORD *)&v463[v464[7]];
      *(_QWORD *)&v462[v464[8]] = *(_QWORD *)&v463[v464[8]];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v454, 0, 1, (uint64_t)v456);
      goto LABEL_118;
    }
    goto LABEL_117;
  }
  if (v458)
  {
    sub_1A5FA1740((uint64_t)v454, (uint64_t (*)(_QWORD))type metadata accessor for TideEvents);
LABEL_117:
    v465 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192930);
    memcpy(v454, v455, *(_QWORD *)(*(_QWORD *)(v465 - 8) + 64));
    goto LABEL_118;
  }
  v523 = sub_1A6121F58();
  v524 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v523 - 8) + 24);
  v524(v454, v455, v523);
  *(_QWORD *)&v454[v456[5]] = *(_QWORD *)&v455[v456[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v454[v456[6]] = *(_QWORD *)&v455[v456[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v525 = v456[7];
  v526 = &v454[v525];
  v527 = &v455[v525];
  *(_QWORD *)v526 = *(_QWORD *)v527;
  *((_QWORD *)v526 + 1) = *((_QWORD *)v527 + 1);
  v528 = v456[8];
  v529 = &v454[v528];
  v530 = &v455[v528];
  v524(&v454[v528], &v455[v528], v523);
  v531 = (int *)type metadata accessor for WeatherMetadata();
  v524(&v529[v531[5]], &v530[v531[5]], v523);
  *(_QWORD *)&v529[v531[6]] = *(_QWORD *)&v530[v531[6]];
  *(_QWORD *)&v529[v531[7]] = *(_QWORD *)&v530[v531[7]];
  *(_QWORD *)&v529[v531[8]] = *(_QWORD *)&v530[v531[8]];
  swift_retain();
  swift_release();
LABEL_118:
  v466 = a3[18];
  v467 = &a1[v466];
  v468 = &a2[v466];
  v469 = type metadata accessor for HistoricalComparisons();
  v470 = __swift_getEnumTagSinglePayload((uint64_t)v467, 1, v469);
  v471 = __swift_getEnumTagSinglePayload((uint64_t)v468, 1, v469);
  if (v470)
  {
    if (!v471)
    {
      *v467 = *v468;
      v472 = *(int *)(v469 + 20);
      v473 = (char *)v467 + v472;
      v474 = (char *)v468 + v472;
      v475 = sub_1A6121F58();
      v476 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v475 - 8) + 16);
      swift_bridgeObjectRetain();
      v476(v473, v474, v475);
      v477 = (int *)type metadata accessor for WeatherMetadata();
      v476(&v473[v477[5]], &v474[v477[5]], v475);
      *(_QWORD *)&v473[v477[6]] = *(_QWORD *)&v474[v477[6]];
      *(_QWORD *)&v473[v477[7]] = *(_QWORD *)&v474[v477[7]];
      *(_QWORD *)&v473[v477[8]] = *(_QWORD *)&v474[v477[8]];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v467, 0, 1, v469);
      goto LABEL_124;
    }
    goto LABEL_123;
  }
  if (v471)
  {
    sub_1A5FA1740((uint64_t)v467, (uint64_t (*)(_QWORD))type metadata accessor for HistoricalComparisons);
LABEL_123:
    v478 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
    memcpy(v467, v468, *(_QWORD *)(*(_QWORD *)(v478 - 8) + 64));
    goto LABEL_124;
  }
  *v467 = *v468;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v532 = *(int *)(v469 + 20);
  v533 = (char *)v467 + v532;
  v534 = (char *)v468 + v532;
  v535 = sub_1A6121F58();
  v536 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v535 - 8) + 24);
  v536(v533, v534, v535);
  v537 = (int *)type metadata accessor for WeatherMetadata();
  v536(&v533[v537[5]], &v534[v537[5]], v535);
  *(_QWORD *)&v533[v537[6]] = *(_QWORD *)&v534[v537[6]];
  *(_QWORD *)&v533[v537[7]] = *(_QWORD *)&v534[v537[7]];
  *(_QWORD *)&v533[v537[8]] = *(_QWORD *)&v534[v537[8]];
  swift_retain();
  swift_release();
LABEL_124:
  *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v479 = a3[20];
  v480 = &a1[v479];
  v481 = &a2[v479];
  v482 = (int *)type metadata accessor for LocationInfo();
  v483 = __swift_getEnumTagSinglePayload((uint64_t)v480, 1, (uint64_t)v482);
  v484 = __swift_getEnumTagSinglePayload((uint64_t)v481, 1, (uint64_t)v482);
  if (!v483)
  {
    if (!v484)
    {
      v538 = sub_1A6121F58();
      v539 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v538 - 8) + 24);
      v539(v480, v481, v538);
      v539(&v480[v482[5]], &v481[v482[5]], v538);
      v540 = v482[6];
      v541 = &v480[v540];
      v542 = &v481[v540];
      *(_QWORD *)v541 = *(_QWORD *)v542;
      *((_QWORD *)v541 + 1) = *((_QWORD *)v542 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v543 = v482[7];
      v544 = &v480[v543];
      v545 = &v481[v543];
      *(_QWORD *)v544 = *(_QWORD *)v545;
      *((_QWORD *)v544 + 1) = *((_QWORD *)v545 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v546 = v482[8];
      v547 = &v480[v546];
      v548 = &v481[v546];
      *(_QWORD *)v547 = *(_QWORD *)v548;
      *((_QWORD *)v547 + 1) = *((_QWORD *)v548 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v549 = v482[9];
      v550 = &v480[v549];
      v551 = &v481[v549];
      *(_QWORD *)v550 = *(_QWORD *)v551;
      *((_QWORD *)v550 + 1) = *((_QWORD *)v551 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v552 = v482[10];
      v553 = &v480[v552];
      v554 = &v481[v552];
      *(_QWORD *)v553 = *(_QWORD *)v554;
      *((_QWORD *)v553 + 1) = *((_QWORD *)v554 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A5FA1740((uint64_t)v480, (uint64_t (*)(_QWORD))type metadata accessor for LocationInfo);
    goto LABEL_129;
  }
  if (v484)
  {
LABEL_129:
    v502 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1936F8);
    memcpy(v480, v481, *(_QWORD *)(*(_QWORD *)(v502 - 8) + 64));
    return a1;
  }
  v485 = sub_1A6121F58();
  v486 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v485 - 8) + 16);
  v486(v480, v481, v485);
  v486(&v480[v482[5]], &v481[v482[5]], v485);
  v487 = v482[6];
  v488 = &v480[v487];
  v489 = &v481[v487];
  *(_QWORD *)v488 = *(_QWORD *)v489;
  *((_QWORD *)v488 + 1) = *((_QWORD *)v489 + 1);
  v490 = v482[7];
  v491 = &v480[v490];
  v492 = &v481[v490];
  *(_QWORD *)v491 = *(_QWORD *)v492;
  *((_QWORD *)v491 + 1) = *((_QWORD *)v492 + 1);
  v493 = v482[8];
  v494 = &v480[v493];
  v495 = &v481[v493];
  *(_QWORD *)v494 = *(_QWORD *)v495;
  *((_QWORD *)v494 + 1) = *((_QWORD *)v495 + 1);
  v496 = v482[9];
  v497 = &v480[v496];
  v498 = &v481[v496];
  *(_QWORD *)v497 = *(_QWORD *)v498;
  *((_QWORD *)v497 + 1) = *((_QWORD *)v498 + 1);
  v499 = v482[10];
  v500 = &v480[v499];
  v501 = &v481[v499];
  *(_QWORD *)v500 = *(_QWORD *)v501;
  *((_QWORD *)v500 + 1) = *((_QWORD *)v501 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v480, 0, 1, (uint64_t)v482);
  return a1;
}

char *sub_1A60740E4(char *a1, char *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  int *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  int *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  int *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  int *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  void (*v125)(char *, char *, uint64_t);
  int *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  char *v133;
  int *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  void (*v140)(char *, char *, uint64_t);
  int *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  int *v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(char *, char *, uint64_t);
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  int *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  void (*v193)(char *, char *, uint64_t);
  int *v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  int *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  void (*v208)(char *, char *, uint64_t);
  int *v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  char *v214;
  char *v215;
  int *v216;
  uint64_t v217;
  uint64_t v218;
  void (*v219)(char *, char *, uint64_t);
  uint64_t v220;
  char *v221;
  char *v222;
  int *v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  void (*v233)(char *, char *, uint64_t);
  int *v234;
  uint64_t v235;
  char *v236;
  char *v237;
  int *v238;
  uint64_t v239;
  uint64_t v240;
  void (*v241)(char *, char *, uint64_t);
  void (*v243)(char *, char *, uint64_t);
  void (*v244)(char *, char *);
  uint64_t v245;
  void (*v246)(char *, char *);
  void (*v247)(char *, char *, uint64_t);
  uint64_t v248;
  uint64_t v249;
  int *v250;

  v6 = (int *)type metadata accessor for CurrentWeather();
  v250 = a3;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_1A6121F58();
    v246 = *(void (**)(char *, char *))(*(_QWORD *)(v8 - 8) + 32);
    v248 = v8;
    v246(a1, a2);
    *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    v9 = v6[9];
    v10 = &a1[v9];
    v11 = &a2[v9];
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    a1[v6[10]] = a2[v6[10]];
    *(_OWORD *)&a1[v6[11]] = *(_OWORD *)&a2[v6[11]];
    v12 = v6[12];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    v243 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
    v243(v13, v14, v15);
    *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
    v16 = v6[14];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
    v244 = *(void (**)(char *, char *))(*(_QWORD *)(v19 - 8) + 32);
    v245 = v19;
    v244(v17, v18);
    v20 = v6[15];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    a1[v6[16]] = a2[v6[16]];
    v24 = v6[17];
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32);
    v28(v25, v26, v27);
    v29 = (int *)type metadata accessor for PrecipitationAmount();
    v28(&v25[v29[5]], &v26[v29[5]], v27);
    v28(&v25[v29[6]], &v26[v29[6]], v27);
    v28(&v25[v29[7]], &v26[v29[7]], v27);
    v28(&v25[v29[8]], &v26[v29[8]], v27);
    v28(&v25[v29[9]], &v26[v29[9]], v27);
    v30 = v6[18];
    v31 = &a1[v30];
    v32 = &a2[v30];
    v28(&a1[v30], &a2[v30], v27);
    v28(&v31[v29[5]], &v32[v29[5]], v27);
    v28(&v31[v29[6]], &v32[v29[6]], v27);
    v28(&v31[v29[7]], &v32[v29[7]], v27);
    v28(&v31[v29[8]], &v32[v29[8]], v27);
    v28(&v31[v29[9]], &v32[v29[9]], v27);
    v33 = v6[19];
    v34 = &a1[v33];
    v35 = &a2[v33];
    v28(&a1[v33], &a2[v33], v27);
    v36 = (int *)type metadata accessor for PrecipitationAmountByType();
    v28(&v34[v36[5]], &v35[v36[5]], v27);
    v28(&v34[v36[6]], &v35[v36[6]], v27);
    v28(&v34[v36[7]], &v35[v36[7]], v27);
    v28(&v34[v36[8]], &v35[v36[8]], v27);
    v37 = v36[9];
    v38 = &v34[v37];
    v39 = &v35[v37];
    v28(v38, &v35[v37], v27);
    v40 = (int *)type metadata accessor for SnowfallAmount();
    v28(&v38[v40[5]], &v39[v40[5]], v27);
    v28(&v38[v40[6]], &v39[v40[6]], v27);
    v28(&v38[v40[7]], &v39[v40[7]], v27);
    v28(&v38[v40[8]], &v39[v40[8]], v27);
    v28(&v38[v40[9]], &v39[v40[9]], v27);
    v41 = v6[20];
    v42 = &a1[v41];
    v43 = &a2[v41];
    v28(&a1[v41], &a2[v41], v27);
    v28(&v42[v36[5]], &v43[v36[5]], v27);
    v28(&v42[v36[6]], &v43[v36[6]], v27);
    v28(&v42[v36[7]], &v43[v36[7]], v27);
    v28(&v42[v36[8]], &v43[v36[8]], v27);
    v44 = v36[9];
    v45 = &v42[v44];
    v46 = &v43[v44];
    v28(v45, v46, v27);
    v28(&v45[v40[5]], &v46[v40[5]], v27);
    v28(&v45[v40[6]], &v46[v40[6]], v27);
    v28(&v45[v40[7]], &v46[v40[7]], v27);
    v28(&v45[v40[8]], &v46[v40[8]], v27);
    v28(&v45[v40[9]], &v46[v40[9]], v27);
    v47 = v6[21];
    v48 = &a1[v47];
    v49 = &a2[v47];
    v28(&a1[v47], &a2[v47], v27);
    v28(&v48[v36[5]], &v49[v36[5]], v27);
    v28(&v48[v36[6]], &v49[v36[6]], v27);
    v28(&v48[v36[7]], &v49[v36[7]], v27);
    v28(&v48[v36[8]], &v49[v36[8]], v27);
    v50 = v36[9];
    v51 = &v48[v50];
    v52 = &v49[v50];
    v28(v51, v52, v27);
    v28(&v51[v40[5]], &v52[v40[5]], v27);
    v28(&v51[v40[6]], &v52[v40[6]], v27);
    v28(&v51[v40[7]], &v52[v40[7]], v27);
    v28(&v51[v40[8]], &v52[v40[8]], v27);
    v28(&v51[v40[9]], &v52[v40[9]], v27);
    v53 = v6[22];
    v54 = &a1[v53];
    v55 = &a2[v53];
    v28(&a1[v53], &a2[v53], v27);
    v28(&v54[v36[5]], &v55[v36[5]], v27);
    v28(&v54[v36[6]], &v55[v36[6]], v27);
    v28(&v54[v36[7]], &v55[v36[7]], v27);
    v28(&v54[v36[8]], &v55[v36[8]], v27);
    v56 = v36[9];
    v57 = &v54[v56];
    v58 = &v55[v56];
    v28(v57, v58, v27);
    v28(&v57[v40[5]], &v58[v40[5]], v27);
    v28(&v57[v40[6]], &v58[v40[6]], v27);
    v28(&v57[v40[7]], &v58[v40[7]], v27);
    v28(&v57[v40[8]], &v58[v40[8]], v27);
    v28(&v57[v40[9]], &v58[v40[9]], v27);
    v59 = v6[23];
    v60 = &a1[v59];
    v61 = &a2[v59];
    v28(&a1[v59], &a2[v59], v27);
    v28(&v60[v36[5]], &v61[v36[5]], v27);
    v28(&v60[v36[6]], &v61[v36[6]], v27);
    v28(&v60[v36[7]], &v61[v36[7]], v27);
    v28(&v60[v36[8]], &v61[v36[8]], v27);
    v62 = v36[9];
    v63 = &v60[v62];
    v64 = &v61[v62];
    v28(v63, v64, v27);
    v28(&v63[v40[5]], &v64[v40[5]], v27);
    v28(&v63[v40[6]], &v64[v40[6]], v27);
    v28(&v63[v40[7]], &v64[v40[7]], v27);
    v28(&v63[v40[8]], &v64[v40[8]], v27);
    v28(&v63[v40[9]], &v64[v40[9]], v27);
    v65 = v6[24];
    v66 = &a1[v65];
    v67 = &a2[v65];
    v28(&a1[v65], &a2[v65], v27);
    v28(&v66[v36[5]], &v67[v36[5]], v27);
    v28(&v66[v36[6]], &v67[v36[6]], v27);
    v28(&v66[v36[7]], &v67[v36[7]], v27);
    v28(&v66[v36[8]], &v67[v36[8]], v27);
    v68 = v36[9];
    v69 = &v66[v68];
    v70 = &v67[v68];
    v28(v69, v70, v27);
    v28(&v69[v40[5]], &v70[v40[5]], v27);
    v28(&v69[v40[6]], &v70[v40[6]], v27);
    v28(&v69[v40[7]], &v70[v40[7]], v27);
    v28(&v69[v40[8]], &v70[v40[8]], v27);
    v28(&v69[v40[9]], &v70[v40[9]], v27);
    v71 = v6[25];
    v72 = &a1[v71];
    v73 = &a2[v71];
    *(_QWORD *)v72 = *(_QWORD *)v73;
    v72[8] = v73[8];
    a1[v6[26]] = a2[v6[26]];
    v243(&a1[v6[27]], &a2[v6[27]], v15);
    v243(&a1[v6[28]], &a2[v6[28]], v15);
    v74 = v6[29];
    v75 = &a1[v74];
    v76 = &a2[v74];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v74], 1, v15))
    {
      v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
      memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      v243(v75, v76, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v15);
    }
    v78 = v6[30];
    v79 = &a1[v78];
    v80 = &a2[v78];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v78], 1, v15))
    {
      v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
      memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      v243(v79, v80, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v15);
    }
    v82 = v6[31];
    v83 = &a1[v82];
    v84 = &a2[v82];
    *(_QWORD *)v83 = *(_QWORD *)v84;
    v83[8] = v84[8];
    v28(&a1[v6[32]], &a2[v6[32]], v27);
    v85 = v6[33];
    v86 = &a1[v85];
    v87 = &a2[v85];
    a1[v85] = a2[v85];
    v88 = (int *)type metadata accessor for Wind();
    v89 = v88[5];
    v90 = &v86[v89];
    v91 = &v87[v89];
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v90, v91, v92);
    ((void (*)(char *, char *, uint64_t))v244)(&v86[v88[6]], &v87[v88[6]], v245);
    v93 = v88[7];
    v94 = &v86[v93];
    v95 = &v87[v93];
    a3 = v250;
    if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v245))
    {
      v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
      memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v244)(v94, v95, v245);
      __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v245);
    }
    v97 = v6[34];
    v98 = &a1[v97];
    v99 = &a2[v97];
    ((void (*)(char *, char *, uint64_t))v246)(&a1[v97], &a2[v97], v248);
    v100 = (int *)type metadata accessor for WeatherMetadata();
    ((void (*)(char *, char *, uint64_t))v246)(&v98[v100[5]], &v99[v100[5]], v248);
    *(_QWORD *)&v98[v100[6]] = *(_QWORD *)&v99[v100[6]];
    *(_QWORD *)&v98[v100[7]] = *(_QWORD *)&v99[v100[7]];
    *(_QWORD *)&v98[v100[8]] = *(_QWORD *)&v99[v100[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  v101 = a3[5];
  v102 = &a1[v101];
  v103 = &a2[v101];
  v104 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, (uint64_t)v104))
  {
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v102 = *(_QWORD *)v103;
    v106 = v104[13];
    v107 = &v102[v106];
    v108 = &v103[v106];
    v109 = sub_1A6121F58();
    v110 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32);
    v110(v107, v108, v109);
    v111 = (int *)type metadata accessor for WeatherMetadata();
    v110(&v107[v111[5]], &v108[v111[5]], v109);
    *(_QWORD *)&v107[v111[6]] = *(_QWORD *)&v108[v111[6]];
    *(_QWORD *)&v107[v111[7]] = *(_QWORD *)&v108[v111[7]];
    v112 = v111[8];
    a3 = v250;
    *(_QWORD *)&v107[v112] = *(_QWORD *)&v108[v112];
    *(_OWORD *)&v102[v104[14]] = *(_OWORD *)&v103[v104[14]];
    *(_QWORD *)&v102[v104[15]] = *(_QWORD *)&v103[v104[15]];
    *(_QWORD *)&v102[v104[16]] = *(_QWORD *)&v103[v104[16]];
    v113 = v104[17];
    v114 = &v102[v113];
    v115 = &v103[v113];
    v114[16] = v115[16];
    *(_OWORD *)v114 = *(_OWORD *)v115;
    __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, (uint64_t)v104);
  }
  v116 = a3[6];
  v117 = &a1[v116];
  v118 = &a2[v116];
  v119 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v118, 1, (uint64_t)v119))
  {
    v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
    memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v117 = *(_QWORD *)v118;
    v121 = v119[13];
    v122 = &v117[v121];
    v123 = &v118[v121];
    v124 = sub_1A6121F58();
    v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32);
    v125(v122, v123, v124);
    v126 = (int *)type metadata accessor for WeatherMetadata();
    v125(&v122[v126[5]], &v123[v126[5]], v124);
    *(_QWORD *)&v122[v126[6]] = *(_QWORD *)&v123[v126[6]];
    *(_QWORD *)&v122[v126[7]] = *(_QWORD *)&v123[v126[7]];
    v127 = v126[8];
    a3 = v250;
    *(_QWORD *)&v122[v127] = *(_QWORD *)&v123[v127];
    *(_OWORD *)&v117[v119[14]] = *(_OWORD *)&v118[v119[14]];
    *(_QWORD *)&v117[v119[15]] = *(_QWORD *)&v118[v119[15]];
    *(_QWORD *)&v117[v119[16]] = *(_QWORD *)&v118[v119[16]];
    v128 = v119[17];
    v129 = &v117[v128];
    v130 = &v118[v128];
    v129[16] = v130[16];
    *(_OWORD *)v129 = *(_OWORD *)v130;
    __swift_storeEnumTagSinglePayload((uint64_t)v117, 0, 1, (uint64_t)v119);
  }
  v131 = a3[7];
  v132 = &a1[v131];
  v133 = &a2[v131];
  v134 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1, (uint64_t)v134))
  {
    v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
    memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v132 = *(_QWORD *)v133;
    v136 = v134[13];
    v137 = &v132[v136];
    v138 = &v133[v136];
    v139 = sub_1A6121F58();
    v140 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 32);
    v140(v137, v138, v139);
    v141 = (int *)type metadata accessor for WeatherMetadata();
    v140(&v137[v141[5]], &v138[v141[5]], v139);
    *(_QWORD *)&v137[v141[6]] = *(_QWORD *)&v138[v141[6]];
    *(_QWORD *)&v137[v141[7]] = *(_QWORD *)&v138[v141[7]];
    v142 = v141[8];
    a3 = v250;
    *(_QWORD *)&v137[v142] = *(_QWORD *)&v138[v142];
    *(_OWORD *)&v132[v134[14]] = *(_OWORD *)&v133[v134[14]];
    *(_QWORD *)&v132[v134[15]] = *(_QWORD *)&v133[v134[15]];
    *(_QWORD *)&v132[v134[16]] = *(_QWORD *)&v133[v134[16]];
    v143 = v134[17];
    v144 = &v132[v143];
    v145 = &v133[v143];
    v144[16] = v145[16];
    *(_OWORD *)v144 = *(_OWORD *)v145;
    __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, (uint64_t)v134);
  }
  v146 = a3[8];
  v147 = &a1[v146];
  v148 = &a2[v146];
  v149 = (int *)type metadata accessor for AirQuality();
  if (__swift_getEnumTagSinglePayload((uint64_t)v148, 1, (uint64_t)v149))
  {
    v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
    memcpy(v147, v148, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
  }
  else
  {
    v151 = sub_1A6121F58();
    v152 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 32);
    v152(v147, v148, v151);
    v247 = v152;
    v249 = v151;
    v152(&v147[v149[5]], &v148[v149[5]], v151);
    *(_OWORD *)&v147[v149[6]] = *(_OWORD *)&v148[v149[6]];
    memcpy(&v147[v149[7]], &v148[v149[7]], 0x78uLL);
    *(_QWORD *)&v147[v149[8]] = *(_QWORD *)&v148[v149[8]];
    memcpy(&v147[v149[9]], &v148[v149[9]], 0x58uLL);
    v147[v149[10]] = v148[v149[10]];
    v153 = v149[11];
    v154 = &v147[v153];
    v155 = &v148[v153];
    v156 = type metadata accessor for ProviderAttribution();
    if (__swift_getEnumTagSinglePayload((uint64_t)v155, 1, v156))
    {
      v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
      memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v154 = *(_OWORD *)v155;
      v158 = *(int *)(v156 + 20);
      v159 = &v154[v158];
      v160 = &v155[v158];
      v161 = sub_1A6121DF0();
      if (__swift_getEnumTagSinglePayload((uint64_t)v160, 1, v161))
      {
        v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
        memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 32))(v159, v160, v161);
        __swift_storeEnumTagSinglePayload((uint64_t)v159, 0, 1, v161);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v154, 0, 1, v156);
    }
    v163 = v149[12];
    v164 = &v147[v163];
    v165 = &v148[v163];
    v166 = sub_1A6121DF0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v164, v165, v166);
    *(_QWORD *)&v147[v149[13]] = *(_QWORD *)&v148[v149[13]];
    v167 = v149[14];
    v168 = &v147[v167];
    v169 = &v148[v167];
    v170 = type metadata accessor for AirPollutant();
    if (__swift_getEnumTagSinglePayload((uint64_t)v169, 1, v170))
    {
      v171 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
      memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
    }
    else
    {
      *v168 = *v169;
      v172 = *(int *)(v170 + 20);
      v173 = &v168[v172];
      v174 = &v169[v172];
      type metadata accessor for AirPollutantMeasurement();
      if (swift_getEnumCaseMultiPayload() == 1)
        v175 = &qword_1ED190B60;
      else
        v175 = &qword_1ED1922B8;
      v176 = __swift_instantiateConcreteTypeFromMangledName(v175);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(v173, v174, v176);
      swift_storeEnumTagMultiPayload();
      v168[*(int *)(v170 + 24)] = v169[*(int *)(v170 + 24)];
      __swift_storeEnumTagSinglePayload((uint64_t)v168, 0, 1, v170);
    }
    a3 = v250;
    v147[v149[15]] = v148[v149[15]];
    v177 = v149[16];
    v178 = &v147[v177];
    v179 = &v148[v177];
    *(_OWORD *)v178 = *(_OWORD *)v179;
    *((_QWORD *)v178 + 2) = *((_QWORD *)v179 + 2);
    v180 = v149[17];
    v181 = &v147[v180];
    v182 = &v148[v180];
    v247(&v147[v180], v182, v249);
    v183 = (int *)type metadata accessor for WeatherMetadata();
    v247(&v181[v183[5]], &v182[v183[5]], v249);
    *(_QWORD *)&v181[v183[6]] = *(_QWORD *)&v182[v183[6]];
    *(_QWORD *)&v181[v183[7]] = *(_QWORD *)&v182[v183[7]];
    *(_QWORD *)&v181[v183[8]] = *(_QWORD *)&v182[v183[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)v147, 0, 1, (uint64_t)v149);
  }
  v184 = a3[9];
  v185 = &a1[v184];
  v186 = &a2[v184];
  v187 = type metadata accessor for WeatherChanges();
  if (__swift_getEnumTagSinglePayload((uint64_t)v186, 1, v187))
  {
    v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
    memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v185 = *(_QWORD *)v186;
    v189 = *(int *)(v187 + 20);
    v190 = &v185[v189];
    v191 = &v186[v189];
    v192 = sub_1A6121F58();
    v193 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32);
    v193(v190, v191, v192);
    v194 = (int *)type metadata accessor for WeatherMetadata();
    v193(&v190[v194[5]], &v191[v194[5]], v192);
    *(_QWORD *)&v190[v194[6]] = *(_QWORD *)&v191[v194[6]];
    *(_QWORD *)&v190[v194[7]] = *(_QWORD *)&v191[v194[7]];
    *(_QWORD *)&v190[v194[8]] = *(_QWORD *)&v191[v194[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)v185, 0, 1, v187);
  }
  v195 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  v196 = &a1[v195];
  v197 = &a2[v195];
  *(_WORD *)v196 = *(_WORD *)v197;
  v196[2] = v197[2];
  v198 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v198] = a2[v198];
  v199 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  v200 = &a1[v199];
  v201 = &a2[v199];
  v202 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED194050);
  if (__swift_getEnumTagSinglePayload((uint64_t)v201, 1, (uint64_t)v202))
  {
    v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194058);
    memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v200 = *(_QWORD *)v201;
    v204 = v202[13];
    v205 = &v200[v204];
    v206 = &v201[v204];
    v207 = sub_1A6121F58();
    v208 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 32);
    v208(v205, v206, v207);
    v209 = (int *)type metadata accessor for WeatherMetadata();
    v208(&v205[v209[5]], &v206[v209[5]], v207);
    a3 = v250;
    *(_QWORD *)&v205[v209[6]] = *(_QWORD *)&v206[v209[6]];
    *(_QWORD *)&v205[v209[7]] = *(_QWORD *)&v206[v209[7]];
    *(_QWORD *)&v205[v209[8]] = *(_QWORD *)&v206[v209[8]];
    *(_OWORD *)&v200[v202[14]] = *(_OWORD *)&v201[v202[14]];
    *(_QWORD *)&v200[v202[15]] = *(_QWORD *)&v201[v202[15]];
    *(_QWORD *)&v200[v202[16]] = *(_QWORD *)&v201[v202[16]];
    v210 = v202[17];
    v211 = &v200[v210];
    v212 = &v201[v210];
    v211[16] = v212[16];
    *(_OWORD *)v211 = *(_OWORD *)v212;
    __swift_storeEnumTagSinglePayload((uint64_t)v200, 0, 1, (uint64_t)v202);
  }
  v213 = a3[17];
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  v214 = &a1[v213];
  v215 = &a2[v213];
  v216 = (int *)type metadata accessor for TideEvents();
  if (__swift_getEnumTagSinglePayload((uint64_t)v215, 1, (uint64_t)v216))
  {
    v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192930);
    memcpy(v214, v215, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
  }
  else
  {
    v218 = sub_1A6121F58();
    v219 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 32);
    v219(v214, v215, v218);
    *(_QWORD *)&v214[v216[5]] = *(_QWORD *)&v215[v216[5]];
    *(_QWORD *)&v214[v216[6]] = *(_QWORD *)&v215[v216[6]];
    *(_OWORD *)&v214[v216[7]] = *(_OWORD *)&v215[v216[7]];
    v220 = v216[8];
    v221 = &v214[v220];
    v222 = &v215[v220];
    v219(&v214[v220], v222, v218);
    v223 = (int *)type metadata accessor for WeatherMetadata();
    v219(&v221[v223[5]], &v222[v223[5]], v218);
    *(_QWORD *)&v221[v223[6]] = *(_QWORD *)&v222[v223[6]];
    *(_QWORD *)&v221[v223[7]] = *(_QWORD *)&v222[v223[7]];
    *(_QWORD *)&v221[v223[8]] = *(_QWORD *)&v222[v223[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)v214, 0, 1, (uint64_t)v216);
  }
  v224 = a3[18];
  v225 = &a1[v224];
  v226 = &a2[v224];
  v227 = type metadata accessor for HistoricalComparisons();
  if (__swift_getEnumTagSinglePayload((uint64_t)v226, 1, v227))
  {
    v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
    memcpy(v225, v226, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v225 = *(_QWORD *)v226;
    v229 = *(int *)(v227 + 20);
    v230 = &v225[v229];
    v231 = &v226[v229];
    v232 = sub_1A6121F58();
    v233 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 32);
    v233(v230, v231, v232);
    v234 = (int *)type metadata accessor for WeatherMetadata();
    v233(&v230[v234[5]], &v231[v234[5]], v232);
    *(_QWORD *)&v230[v234[6]] = *(_QWORD *)&v231[v234[6]];
    *(_QWORD *)&v230[v234[7]] = *(_QWORD *)&v231[v234[7]];
    *(_QWORD *)&v230[v234[8]] = *(_QWORD *)&v231[v234[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)v225, 0, 1, v227);
  }
  v235 = a3[20];
  *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
  v236 = &a1[v235];
  v237 = &a2[v235];
  v238 = (int *)type metadata accessor for LocationInfo();
  if (__swift_getEnumTagSinglePayload((uint64_t)v237, 1, (uint64_t)v238))
  {
    v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1936F8);
    memcpy(v236, v237, *(_QWORD *)(*(_QWORD *)(v239 - 8) + 64));
  }
  else
  {
    v240 = sub_1A6121F58();
    v241 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 32);
    v241(v236, v237, v240);
    v241(&v236[v238[5]], &v237[v238[5]], v240);
    *(_OWORD *)&v236[v238[6]] = *(_OWORD *)&v237[v238[6]];
    *(_OWORD *)&v236[v238[7]] = *(_OWORD *)&v237[v238[7]];
    *(_OWORD *)&v236[v238[8]] = *(_OWORD *)&v237[v238[8]];
    *(_OWORD *)&v236[v238[9]] = *(_OWORD *)&v237[v238[9]];
    *(_OWORD *)&v236[v238[10]] = *(_OWORD *)&v237[v238[10]];
    __swift_storeEnumTagSinglePayload((uint64_t)v236, 0, 1, (uint64_t)v238);
  }
  return a1;
}

_BYTE *sub_1A6075834(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  int *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  int *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  int v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  int *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  int *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  int v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  int *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  int *v203;
  uint64_t v204;
  _QWORD *v205;
  _QWORD *v206;
  int *v207;
  int v208;
  int v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  void (*v214)(char *, char *, uint64_t);
  int *v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  _QWORD *v221;
  _QWORD *v222;
  int *v223;
  int v224;
  int v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  void (*v230)(char *, char *, uint64_t);
  int *v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  _QWORD *v238;
  int *v239;
  int v240;
  int v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  void (*v246)(char *, char *, uint64_t);
  int *v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  _BYTE *v254;
  int *v255;
  int v256;
  int v257;
  uint64_t v258;
  void (*v259)(char *, char *, uint64_t);
  uint64_t v260;
  char *v261;
  _OWORD *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  char *v268;
  uint64_t v269;
  void (*v270)(char *, char *, uint64_t);
  int *v271;
  uint64_t v272;
  _QWORD *v273;
  uint64_t *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  char *v281;
  char *v282;
  uint64_t v283;
  void (*v284)(char *, char *, uint64_t);
  int *v285;
  uint64_t v286;
  _QWORD *v287;
  uint64_t *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  char *v295;
  char *v296;
  uint64_t v297;
  void (*v298)(char *, char *, uint64_t);
  int *v299;
  uint64_t v300;
  _QWORD *v301;
  uint64_t *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char *v306;
  char *v307;
  uint64_t v308;
  void (*v309)(char *, _BYTE *, uint64_t);
  uint64_t v310;
  char *v311;
  uint64_t *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  int v333;
  uint64_t v334;
  void *v335;
  const void *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  size_t v344;
  void *v345;
  const void *v346;
  uint64_t v347;
  char *v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  char *v352;
  _BYTE *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  char *v357;
  _BYTE *v358;
  uint64_t *v359;
  uint64_t v360;
  uint64_t v361;
  char *v362;
  char *v363;
  uint64_t v364;
  char *v365;
  char *v366;
  int *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  int v373;
  int v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  char *v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  char *v383;
  uint64_t v384;
  int v385;
  uint64_t v386;
  char *v387;
  char *v388;
  uint64_t *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  char *v393;
  char *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  char *v398;
  char *v399;
  int *v400;
  uint64_t v401;
  _QWORD *v402;
  _QWORD *v403;
  uint64_t v404;
  int v405;
  int v406;
  uint64_t v407;
  char *v408;
  char *v409;
  uint64_t v410;
  void (*v411)(char *, char *, uint64_t);
  int *v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  char *v416;
  char *v417;
  uint64_t v418;
  uint64_t v419;
  _QWORD *v420;
  _QWORD *v421;
  int *v422;
  int v423;
  int v424;
  uint64_t v425;
  char *v426;
  char *v427;
  uint64_t v428;
  void (*v429)(char *, char *, uint64_t);
  int *v430;
  uint64_t v431;
  char *v432;
  char *v433;
  uint64_t v434;
  uint64_t v435;
  char *v436;
  char *v437;
  int *v438;
  int v439;
  int v440;
  uint64_t v441;
  void (*v442)(char *, char *, uint64_t);
  uint64_t v443;
  char *v444;
  char *v445;
  int *v446;
  uint64_t v447;
  uint64_t v448;
  _QWORD *v449;
  _QWORD *v450;
  uint64_t v451;
  int v452;
  int v453;
  uint64_t v454;
  char *v455;
  char *v456;
  uint64_t v457;
  void (*v458)(char *, char *, uint64_t);
  int *v459;
  uint64_t v460;
  uint64_t v461;
  char *v462;
  char *v463;
  int *v464;
  int v465;
  int v466;
  uint64_t v467;
  void (*v468)(char *, char *, uint64_t);
  uint64_t v469;
  uint64_t v471;
  char *v472;
  char *v473;
  uint64_t v474;
  void (*v475)(char *, char *, uint64_t);
  int *v476;
  uint64_t v477;
  char *v478;
  char *v479;
  uint64_t v480;
  void (*v481)(char *, char *, uint64_t);
  int *v482;
  uint64_t v483;
  _QWORD *v484;
  uint64_t *v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  char *v489;
  char *v490;
  uint64_t v491;
  void (*v492)(char *, char *, uint64_t);
  uint64_t v493;
  char *v494;
  char *v495;
  int *v496;
  uint64_t v497;
  char *v498;
  char *v499;
  uint64_t v500;
  void (*v501)(char *, char *, uint64_t);
  int *v502;
  uint64_t v503;
  void (*v504)(char *, char *, uint64_t);
  uint64_t v505;
  char *v506;
  char *v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  char *v511;
  char *v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  char *v516;
  char *v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  char *v521;
  char *v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  char *v526;
  char *v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  char *v531;
  char *v532;
  uint64_t *v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  void (*v540)(_BYTE *, _BYTE *);
  void (*v541)(_BYTE *, _BYTE *);
  uint64_t v542;
  uint64_t v543;
  void (*v544)(char *, char *, uint64_t);
  void (*v545)(char *, char *, uint64_t);
  void (*v546)(char *, char *, uint64_t);
  void (*v547)(char *, char *, uint64_t);
  void (*v548)(char *, char *);
  void (*v549)(char *, char *);
  uint64_t v550;
  uint64_t v551;
  int *v552;

  v6 = (int *)type metadata accessor for CurrentWeather();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, (uint64_t)v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, (uint64_t)v6);
  v552 = a3;
  if (!EnumTagSinglePayload)
  {
    if (v8)
    {
      sub_1A5FA1740((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
      goto LABEL_7;
    }
    v79 = sub_1A6121F58();
    v541 = *(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v79 - 8) + 40);
    v543 = v79;
    v541(a1, a2);
    *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
    *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
    *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
    *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
    v80 = v6[9];
    v81 = &a1[v80];
    v82 = &a2[v80];
    *(_OWORD *)v81 = *(_OWORD *)v82;
    *((_QWORD *)v81 + 2) = *((_QWORD *)v82 + 2);
    a1[v6[10]] = a2[v6[10]];
    v83 = v6[11];
    v84 = &a1[v83];
    v85 = (uint64_t *)&a2[v83];
    v87 = *v85;
    v86 = v85[1];
    *v84 = v87;
    v84[1] = v86;
    swift_bridgeObjectRelease();
    v88 = v6[12];
    v89 = &a1[v88];
    v90 = &a2[v88];
    v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    v537 = *(_QWORD *)(v91 - 8);
    v545 = *(void (**)(char *, char *, uint64_t))(v537 + 40);
    v545(v89, v90, v91);
    *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
    v92 = v6[14];
    v93 = &a1[v92];
    v94 = &a2[v92];
    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
    v536 = *(_QWORD *)(v95 - 8);
    v539 = v95;
    v549 = *(void (**)(char *, char *))(v536 + 40);
    v549(v93, v94);
    v96 = v6[15];
    v97 = &a1[v96];
    v98 = &a2[v96];
    v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 40))(v97, v98, v99);
    a1[v6[16]] = a2[v6[16]];
    v100 = v6[17];
    v101 = &a1[v100];
    v102 = &a2[v100];
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    v104 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 40);
    v104(v101, v102, v103);
    v105 = (int *)type metadata accessor for PrecipitationAmount();
    v104(&v101[v105[5]], &v102[v105[5]], v103);
    v104(&v101[v105[6]], &v102[v105[6]], v103);
    v104(&v101[v105[7]], &v102[v105[7]], v103);
    v104(&v101[v105[8]], &v102[v105[8]], v103);
    v104(&v101[v105[9]], &v102[v105[9]], v103);
    v106 = v6[18];
    v107 = &a1[v106];
    v108 = &a2[v106];
    v104(&a1[v106], &a2[v106], v103);
    v104(&v107[v105[5]], &v108[v105[5]], v103);
    v104(&v107[v105[6]], &v108[v105[6]], v103);
    v104(&v107[v105[7]], &v108[v105[7]], v103);
    v104(&v107[v105[8]], &v108[v105[8]], v103);
    v104(&v107[v105[9]], &v108[v105[9]], v103);
    v109 = v6[19];
    v110 = &a1[v109];
    v111 = &a2[v109];
    v104(&a1[v109], &a2[v109], v103);
    v112 = (int *)type metadata accessor for PrecipitationAmountByType();
    v104(&v110[v112[5]], &v111[v112[5]], v103);
    v104(&v110[v112[6]], &v111[v112[6]], v103);
    v104(&v110[v112[7]], &v111[v112[7]], v103);
    v104(&v110[v112[8]], &v111[v112[8]], v103);
    v113 = v112[9];
    v114 = &v110[v113];
    v115 = &v111[v113];
    v104(v114, &v111[v113], v103);
    v116 = (int *)type metadata accessor for SnowfallAmount();
    v104(&v114[v116[5]], &v115[v116[5]], v103);
    v104(&v114[v116[6]], &v115[v116[6]], v103);
    v104(&v114[v116[7]], &v115[v116[7]], v103);
    v104(&v114[v116[8]], &v115[v116[8]], v103);
    v104(&v114[v116[9]], &v115[v116[9]], v103);
    v117 = v6[20];
    v118 = &a1[v117];
    v119 = &a2[v117];
    v104(&a1[v117], &a2[v117], v103);
    v104(&v118[v112[5]], &v119[v112[5]], v103);
    v104(&v118[v112[6]], &v119[v112[6]], v103);
    v104(&v118[v112[7]], &v119[v112[7]], v103);
    v104(&v118[v112[8]], &v119[v112[8]], v103);
    v120 = v112[9];
    v121 = &v118[v120];
    v122 = &v119[v120];
    v104(v121, v122, v103);
    v104(&v121[v116[5]], &v122[v116[5]], v103);
    v104(&v121[v116[6]], &v122[v116[6]], v103);
    v104(&v121[v116[7]], &v122[v116[7]], v103);
    v104(&v121[v116[8]], &v122[v116[8]], v103);
    v104(&v121[v116[9]], &v122[v116[9]], v103);
    v123 = v6[21];
    v124 = &a1[v123];
    v125 = &a2[v123];
    v104(&a1[v123], &a2[v123], v103);
    v104(&v124[v112[5]], &v125[v112[5]], v103);
    v104(&v124[v112[6]], &v125[v112[6]], v103);
    v104(&v124[v112[7]], &v125[v112[7]], v103);
    v104(&v124[v112[8]], &v125[v112[8]], v103);
    v126 = v112[9];
    v127 = &v124[v126];
    v128 = &v125[v126];
    v104(v127, v128, v103);
    v104(&v127[v116[5]], &v128[v116[5]], v103);
    v104(&v127[v116[6]], &v128[v116[6]], v103);
    v104(&v127[v116[7]], &v128[v116[7]], v103);
    v104(&v127[v116[8]], &v128[v116[8]], v103);
    v104(&v127[v116[9]], &v128[v116[9]], v103);
    v129 = v6[22];
    v130 = &a1[v129];
    v131 = &a2[v129];
    v104(&a1[v129], &a2[v129], v103);
    v104(&v130[v112[5]], &v131[v112[5]], v103);
    v104(&v130[v112[6]], &v131[v112[6]], v103);
    v104(&v130[v112[7]], &v131[v112[7]], v103);
    v104(&v130[v112[8]], &v131[v112[8]], v103);
    v132 = v112[9];
    v133 = &v130[v132];
    v134 = &v131[v132];
    v104(v133, v134, v103);
    v104(&v133[v116[5]], &v134[v116[5]], v103);
    v104(&v133[v116[6]], &v134[v116[6]], v103);
    v104(&v133[v116[7]], &v134[v116[7]], v103);
    v104(&v133[v116[8]], &v134[v116[8]], v103);
    v104(&v133[v116[9]], &v134[v116[9]], v103);
    v135 = v6[23];
    v136 = &a1[v135];
    v137 = &a2[v135];
    v104(&a1[v135], &a2[v135], v103);
    v104(&v136[v112[5]], &v137[v112[5]], v103);
    v104(&v136[v112[6]], &v137[v112[6]], v103);
    v104(&v136[v112[7]], &v137[v112[7]], v103);
    v104(&v136[v112[8]], &v137[v112[8]], v103);
    v138 = v112[9];
    v139 = &v136[v138];
    v140 = &v137[v138];
    v104(v139, v140, v103);
    v104(&v139[v116[5]], &v140[v116[5]], v103);
    v104(&v139[v116[6]], &v140[v116[6]], v103);
    v104(&v139[v116[7]], &v140[v116[7]], v103);
    v104(&v139[v116[8]], &v140[v116[8]], v103);
    v104(&v139[v116[9]], &v140[v116[9]], v103);
    v141 = v6[24];
    v142 = &a1[v141];
    v143 = &a2[v141];
    v104(&a1[v141], &a2[v141], v103);
    v104(&v142[v112[5]], &v143[v112[5]], v103);
    v104(&v142[v112[6]], &v143[v112[6]], v103);
    v104(&v142[v112[7]], &v143[v112[7]], v103);
    v104(&v142[v112[8]], &v143[v112[8]], v103);
    v144 = v112[9];
    v145 = &v142[v144];
    v146 = &v143[v144];
    v104(v145, v146, v103);
    v104(&v145[v116[5]], &v146[v116[5]], v103);
    v104(&v145[v116[6]], &v146[v116[6]], v103);
    v104(&v145[v116[7]], &v146[v116[7]], v103);
    v104(&v145[v116[8]], &v146[v116[8]], v103);
    v104(&v145[v116[9]], &v146[v116[9]], v103);
    v147 = v6[25];
    v148 = &a1[v147];
    v149 = &a2[v147];
    *(_QWORD *)v148 = *(_QWORD *)v149;
    v148[8] = v149[8];
    a1[v6[26]] = a2[v6[26]];
    v545(&a1[v6[27]], &a2[v6[27]], v91);
    v545(&a1[v6[28]], &a2[v6[28]], v91);
    v150 = v6[29];
    v151 = &a1[v150];
    v152 = &a2[v150];
    LODWORD(v145) = __swift_getEnumTagSinglePayload((uint64_t)&a1[v150], 1, v91);
    v153 = __swift_getEnumTagSinglePayload((uint64_t)v152, 1, v91);
    if ((_DWORD)v145)
    {
      if (!v153)
      {
        (*(void (**)(char *, char *, uint64_t))(v537 + 32))(v151, v152, v91);
        __swift_storeEnumTagSinglePayload((uint64_t)v151, 0, 1, v91);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v153)
      {
        v545(v151, v152, v91);
LABEL_22:
        v178 = v6[30];
        v179 = &a1[v178];
        v180 = &a2[v178];
        v181 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v178], 1, v91);
        v182 = __swift_getEnumTagSinglePayload((uint64_t)v180, 1, v91);
        if (v181)
        {
          if (!v182)
          {
            (*(void (**)(char *, char *, uint64_t))(v537 + 32))(v179, v180, v91);
            __swift_storeEnumTagSinglePayload((uint64_t)v179, 0, 1, v91);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v182)
          {
            v545(v179, v180, v91);
LABEL_28:
            a3 = v552;
            v184 = v6[31];
            v185 = &a1[v184];
            v186 = &a2[v184];
            *(_QWORD *)v185 = *(_QWORD *)v186;
            v185[8] = v186[8];
            v104(&a1[v6[32]], &a2[v6[32]], v103);
            v187 = v6[33];
            v188 = &a1[v187];
            v189 = &a2[v187];
            a1[v187] = a2[v187];
            v190 = (int *)type metadata accessor for Wind();
            v191 = v190[5];
            v192 = &v188[v191];
            v193 = &v189[v191];
            v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 40))(v192, v193, v194);
            ((void (*)(char *, char *, uint64_t))v549)(&v188[v190[6]], &v189[v190[6]], v539);
            v195 = v190[7];
            v196 = &v188[v195];
            v197 = &v189[v195];
            LODWORD(v190) = __swift_getEnumTagSinglePayload((uint64_t)&v188[v195], 1, v539);
            v198 = __swift_getEnumTagSinglePayload((uint64_t)v197, 1, v539);
            if ((_DWORD)v190)
            {
              if (!v198)
              {
                (*(void (**)(char *, char *, uint64_t))(v536 + 32))(v196, v197, v539);
                __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v539);
LABEL_34:
                v200 = v6[34];
                v201 = &a1[v200];
                v202 = &a2[v200];
                ((void (*)(_BYTE *, _BYTE *, uint64_t))v541)(&a1[v200], &a2[v200], v543);
                v203 = (int *)type metadata accessor for WeatherMetadata();
                ((void (*)(char *, char *, uint64_t))v541)(&v201[v203[5]], &v202[v203[5]], v543);
                *(_QWORD *)&v201[v203[6]] = *(_QWORD *)&v202[v203[6]];
                *(_QWORD *)&v201[v203[7]] = *(_QWORD *)&v202[v203[7]];
                *(_QWORD *)&v201[v203[8]] = *(_QWORD *)&v202[v203[8]];
                swift_release();
                goto LABEL_35;
              }
            }
            else
            {
              if (!v198)
              {
                ((void (*)(char *, char *, uint64_t))v549)(v196, v197, v539);
                goto LABEL_34;
              }
              (*(void (**)(char *, uint64_t))(v536 + 8))(v196, v539);
            }
            v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
            memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v537 + 8))(v179, v91);
        }
        v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
        memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v537 + 8))(v151, v91);
    }
    v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
    goto LABEL_22;
  }
  if (v8)
  {
LABEL_7:
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    goto LABEL_35;
  }
  v9 = sub_1A6121F58();
  v540 = *(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)(v9 - 8) + 32);
  v542 = v9;
  v540(a1, a2);
  *(_QWORD *)&a1[v6[5]] = *(_QWORD *)&a2[v6[5]];
  *(_QWORD *)&a1[v6[6]] = *(_QWORD *)&a2[v6[6]];
  *(_QWORD *)&a1[v6[7]] = *(_QWORD *)&a2[v6[7]];
  *(_QWORD *)&a1[v6[8]] = *(_QWORD *)&a2[v6[8]];
  v10 = v6[9];
  v11 = &a1[v10];
  v12 = &a2[v10];
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
  a1[v6[10]] = a2[v6[10]];
  *(_OWORD *)&a1[v6[11]] = *(_OWORD *)&a2[v6[11]];
  v13 = v6[12];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v544 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v544(v14, v15, v16);
  *(_QWORD *)&a1[v6[13]] = *(_QWORD *)&a2[v6[13]];
  v17 = v6[14];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v538 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
  v548 = *(void (**)(char *, char *))(*(_QWORD *)(v538 - 8) + 32);
  v548(v18, v19);
  v20 = v6[15];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  a1[v6[16]] = a2[v6[16]];
  v24 = v6[17];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32);
  v28(v25, v26, v27);
  v29 = (int *)type metadata accessor for PrecipitationAmount();
  v28(&v25[v29[5]], &v26[v29[5]], v27);
  v28(&v25[v29[6]], &v26[v29[6]], v27);
  v28(&v25[v29[7]], &v26[v29[7]], v27);
  v28(&v25[v29[8]], &v26[v29[8]], v27);
  v28(&v25[v29[9]], &v26[v29[9]], v27);
  v30 = v6[18];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v28(&a1[v30], &a2[v30], v27);
  v28(&v31[v29[5]], &v32[v29[5]], v27);
  v28(&v31[v29[6]], &v32[v29[6]], v27);
  v28(&v31[v29[7]], &v32[v29[7]], v27);
  v28(&v31[v29[8]], &v32[v29[8]], v27);
  v28(&v31[v29[9]], &v32[v29[9]], v27);
  v33 = v6[19];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v28(&a1[v33], &a2[v33], v27);
  v36 = (int *)type metadata accessor for PrecipitationAmountByType();
  v28(&v34[v36[5]], &v35[v36[5]], v27);
  v28(&v34[v36[6]], &v35[v36[6]], v27);
  v28(&v34[v36[7]], &v35[v36[7]], v27);
  v28(&v34[v36[8]], &v35[v36[8]], v27);
  v37 = v36[9];
  v38 = &v34[v37];
  v39 = &v35[v37];
  v28(v38, &v35[v37], v27);
  v40 = (int *)type metadata accessor for SnowfallAmount();
  v28(&v38[v40[5]], &v39[v40[5]], v27);
  v28(&v38[v40[6]], &v39[v40[6]], v27);
  v28(&v38[v40[7]], &v39[v40[7]], v27);
  v28(&v38[v40[8]], &v39[v40[8]], v27);
  v28(&v38[v40[9]], &v39[v40[9]], v27);
  v41 = v6[20];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v28(&a1[v41], &a2[v41], v27);
  v28(&v42[v36[5]], &v43[v36[5]], v27);
  v28(&v42[v36[6]], &v43[v36[6]], v27);
  v28(&v42[v36[7]], &v43[v36[7]], v27);
  v28(&v42[v36[8]], &v43[v36[8]], v27);
  v44 = v36[9];
  v45 = &v42[v44];
  v46 = &v43[v44];
  v28(v45, v46, v27);
  v28(&v45[v40[5]], &v46[v40[5]], v27);
  v28(&v45[v40[6]], &v46[v40[6]], v27);
  v28(&v45[v40[7]], &v46[v40[7]], v27);
  v28(&v45[v40[8]], &v46[v40[8]], v27);
  v28(&v45[v40[9]], &v46[v40[9]], v27);
  v47 = v6[21];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v28(&a1[v47], &a2[v47], v27);
  v28(&v48[v36[5]], &v49[v36[5]], v27);
  v28(&v48[v36[6]], &v49[v36[6]], v27);
  v28(&v48[v36[7]], &v49[v36[7]], v27);
  v28(&v48[v36[8]], &v49[v36[8]], v27);
  v50 = v36[9];
  v51 = &v48[v50];
  v52 = &v49[v50];
  v28(v51, v52, v27);
  v28(&v51[v40[5]], &v52[v40[5]], v27);
  v28(&v51[v40[6]], &v52[v40[6]], v27);
  v28(&v51[v40[7]], &v52[v40[7]], v27);
  v28(&v51[v40[8]], &v52[v40[8]], v27);
  v28(&v51[v40[9]], &v52[v40[9]], v27);
  v53 = v6[22];
  v54 = &a1[v53];
  v55 = &a2[v53];
  v28(&a1[v53], &a2[v53], v27);
  v28(&v54[v36[5]], &v55[v36[5]], v27);
  v28(&v54[v36[6]], &v55[v36[6]], v27);
  v28(&v54[v36[7]], &v55[v36[7]], v27);
  v28(&v54[v36[8]], &v55[v36[8]], v27);
  v56 = v36[9];
  v57 = &v54[v56];
  v58 = &v55[v56];
  v28(v57, v58, v27);
  v28(&v57[v40[5]], &v58[v40[5]], v27);
  v28(&v57[v40[6]], &v58[v40[6]], v27);
  v28(&v57[v40[7]], &v58[v40[7]], v27);
  v28(&v57[v40[8]], &v58[v40[8]], v27);
  v28(&v57[v40[9]], &v58[v40[9]], v27);
  v59 = v6[23];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v28(&a1[v59], &a2[v59], v27);
  v28(&v60[v36[5]], &v61[v36[5]], v27);
  v28(&v60[v36[6]], &v61[v36[6]], v27);
  v28(&v60[v36[7]], &v61[v36[7]], v27);
  v28(&v60[v36[8]], &v61[v36[8]], v27);
  v62 = v36[9];
  v63 = &v60[v62];
  v64 = &v61[v62];
  v28(v63, v64, v27);
  v28(&v63[v40[5]], &v64[v40[5]], v27);
  v28(&v63[v40[6]], &v64[v40[6]], v27);
  v28(&v63[v40[7]], &v64[v40[7]], v27);
  v28(&v63[v40[8]], &v64[v40[8]], v27);
  v28(&v63[v40[9]], &v64[v40[9]], v27);
  v65 = v6[24];
  v66 = &a1[v65];
  v67 = &a2[v65];
  v28(&a1[v65], &a2[v65], v27);
  v28(&v66[v36[5]], &v67[v36[5]], v27);
  v28(&v66[v36[6]], &v67[v36[6]], v27);
  v28(&v66[v36[7]], &v67[v36[7]], v27);
  v28(&v66[v36[8]], &v67[v36[8]], v27);
  v68 = v36[9];
  v69 = &v66[v68];
  v70 = &v67[v68];
  v28(v69, v70, v27);
  v28(&v69[v40[5]], &v70[v40[5]], v27);
  v28(&v69[v40[6]], &v70[v40[6]], v27);
  v28(&v69[v40[7]], &v70[v40[7]], v27);
  v28(&v69[v40[8]], &v70[v40[8]], v27);
  v28(&v69[v40[9]], &v70[v40[9]], v27);
  v71 = v6[25];
  v72 = &a1[v71];
  v73 = &a2[v71];
  *(_QWORD *)v72 = *(_QWORD *)v73;
  v72[8] = v73[8];
  a1[v6[26]] = a2[v6[26]];
  v544(&a1[v6[27]], &a2[v6[27]], v16);
  v544(&a1[v6[28]], &a2[v6[28]], v16);
  v74 = v6[29];
  v75 = &a1[v74];
  v76 = &a2[v74];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v74], 1, v16))
  {
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    v544(v75, v76, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v75, 0, 1, v16);
  }
  a3 = v552;
  v154 = v6[30];
  v155 = &a1[v154];
  v156 = &a2[v154];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v154], 1, v16))
  {
    v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
  }
  else
  {
    v544(v155, v156, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v155, 0, 1, v16);
  }
  v158 = v6[31];
  v159 = &a1[v158];
  v160 = &a2[v158];
  *(_QWORD *)v159 = *(_QWORD *)v160;
  v159[8] = v160[8];
  v28(&a1[v6[32]], &a2[v6[32]], v27);
  v161 = v6[33];
  v162 = &a1[v161];
  v163 = &a2[v161];
  a1[v161] = a2[v161];
  v164 = (int *)type metadata accessor for Wind();
  v165 = v164[5];
  v166 = &v162[v165];
  v167 = &v163[v165];
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 32))(v166, v167, v168);
  ((void (*)(char *, char *, uint64_t))v548)(&v162[v164[6]], &v163[v164[6]], v538);
  v169 = v164[7];
  v170 = &v162[v169];
  v171 = &v163[v169];
  if (__swift_getEnumTagSinglePayload((uint64_t)&v163[v169], 1, v538))
  {
    v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
    memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v548)(v170, v171, v538);
    __swift_storeEnumTagSinglePayload((uint64_t)v170, 0, 1, v538);
  }
  v173 = v6[34];
  v174 = &a1[v173];
  v175 = &a2[v173];
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v540)(&a1[v173], &a2[v173], v542);
  v176 = (int *)type metadata accessor for WeatherMetadata();
  ((void (*)(char *, char *, uint64_t))v540)(&v174[v176[5]], &v175[v176[5]], v542);
  *(_QWORD *)&v174[v176[6]] = *(_QWORD *)&v175[v176[6]];
  *(_QWORD *)&v174[v176[7]] = *(_QWORD *)&v175[v176[7]];
  *(_QWORD *)&v174[v176[8]] = *(_QWORD *)&v175[v176[8]];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, (uint64_t)v6);
LABEL_35:
  v204 = a3[5];
  v205 = &a1[v204];
  v206 = &a2[v204];
  v207 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  v208 = __swift_getEnumTagSinglePayload((uint64_t)v205, 1, (uint64_t)v207);
  v209 = __swift_getEnumTagSinglePayload((uint64_t)v206, 1, (uint64_t)v207);
  if (v208)
  {
    if (!v209)
    {
      *v205 = *v206;
      v210 = v207[13];
      v211 = (char *)v205 + v210;
      v212 = (char *)v206 + v210;
      v213 = sub_1A6121F58();
      v214 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 32);
      v214(v211, v212, v213);
      v215 = (int *)type metadata accessor for WeatherMetadata();
      v214(&v211[v215[5]], &v212[v215[5]], v213);
      a3 = v552;
      *(_QWORD *)&v211[v215[6]] = *(_QWORD *)&v212[v215[6]];
      *(_QWORD *)&v211[v215[7]] = *(_QWORD *)&v212[v215[7]];
      *(_QWORD *)&v211[v215[8]] = *(_QWORD *)&v212[v215[8]];
      *(_OWORD *)((char *)v205 + v207[14]) = *(_OWORD *)((char *)v206 + v207[14]);
      *(_QWORD *)((char *)v205 + v207[15]) = *(_QWORD *)((char *)v206 + v207[15]);
      *(_QWORD *)((char *)v205 + v207[16]) = *(_QWORD *)((char *)v206 + v207[16]);
      v216 = v207[17];
      v217 = (char *)v205 + v216;
      v218 = (char *)v206 + v216;
      v217[16] = v218[16];
      *(_OWORD *)v217 = *(_OWORD *)v218;
      __swift_storeEnumTagSinglePayload((uint64_t)v205, 0, 1, (uint64_t)v207);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v209)
  {
    sub_1A5FAFD58((uint64_t)v205, &qword_1ED193AE0);
LABEL_40:
    v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
    goto LABEL_41;
  }
  *v205 = *v206;
  swift_bridgeObjectRelease();
  v266 = v207[13];
  v267 = (char *)v205 + v266;
  v268 = (char *)v206 + v266;
  v269 = sub_1A6121F58();
  v270 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v269 - 8) + 40);
  v270(v267, v268, v269);
  v271 = (int *)type metadata accessor for WeatherMetadata();
  v270(&v267[v271[5]], &v268[v271[5]], v269);
  a3 = v552;
  *(_QWORD *)&v267[v271[6]] = *(_QWORD *)&v268[v271[6]];
  *(_QWORD *)&v267[v271[7]] = *(_QWORD *)&v268[v271[7]];
  *(_QWORD *)&v267[v271[8]] = *(_QWORD *)&v268[v271[8]];
  swift_release();
  v272 = v207[14];
  v273 = (_QWORD *)((char *)v205 + v272);
  v274 = (_QWORD *)((char *)v206 + v272);
  v276 = *v274;
  v275 = v274[1];
  *v273 = v276;
  v273[1] = v275;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v205 + v207[15]) = *(_QWORD *)((char *)v206 + v207[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v205 + v207[16]) = *(_QWORD *)((char *)v206 + v207[16]);
  swift_bridgeObjectRelease();
  v277 = v207[17];
  v278 = (char *)v205 + v277;
  v279 = (char *)v206 + v277;
  *(_OWORD *)v278 = *(_OWORD *)v279;
  v278[16] = v279[16];
LABEL_41:
  v220 = a3[6];
  v221 = &a1[v220];
  v222 = &a2[v220];
  v223 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  v224 = __swift_getEnumTagSinglePayload((uint64_t)v221, 1, (uint64_t)v223);
  v225 = __swift_getEnumTagSinglePayload((uint64_t)v222, 1, (uint64_t)v223);
  if (v224)
  {
    if (!v225)
    {
      *v221 = *v222;
      v226 = v223[13];
      v227 = (char *)v221 + v226;
      v228 = (char *)v222 + v226;
      v229 = sub_1A6121F58();
      v230 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v229 - 8) + 32);
      v230(v227, v228, v229);
      v231 = (int *)type metadata accessor for WeatherMetadata();
      v230(&v227[v231[5]], &v228[v231[5]], v229);
      a3 = v552;
      *(_QWORD *)&v227[v231[6]] = *(_QWORD *)&v228[v231[6]];
      *(_QWORD *)&v227[v231[7]] = *(_QWORD *)&v228[v231[7]];
      *(_QWORD *)&v227[v231[8]] = *(_QWORD *)&v228[v231[8]];
      *(_OWORD *)((char *)v221 + v223[14]) = *(_OWORD *)((char *)v222 + v223[14]);
      *(_QWORD *)((char *)v221 + v223[15]) = *(_QWORD *)((char *)v222 + v223[15]);
      *(_QWORD *)((char *)v221 + v223[16]) = *(_QWORD *)((char *)v222 + v223[16]);
      v232 = v223[17];
      v233 = (char *)v221 + v232;
      v234 = (char *)v222 + v232;
      v233[16] = v234[16];
      *(_OWORD *)v233 = *(_OWORD *)v234;
      __swift_storeEnumTagSinglePayload((uint64_t)v221, 0, 1, (uint64_t)v223);
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  if (v225)
  {
    sub_1A5FAFD58((uint64_t)v221, (uint64_t *)&unk_1ED193AB8);
LABEL_46:
    v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
    memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
    goto LABEL_47;
  }
  *v221 = *v222;
  swift_bridgeObjectRelease();
  v280 = v223[13];
  v281 = (char *)v221 + v280;
  v282 = (char *)v222 + v280;
  v283 = sub_1A6121F58();
  v284 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v283 - 8) + 40);
  v284(v281, v282, v283);
  v285 = (int *)type metadata accessor for WeatherMetadata();
  v284(&v281[v285[5]], &v282[v285[5]], v283);
  a3 = v552;
  *(_QWORD *)&v281[v285[6]] = *(_QWORD *)&v282[v285[6]];
  *(_QWORD *)&v281[v285[7]] = *(_QWORD *)&v282[v285[7]];
  *(_QWORD *)&v281[v285[8]] = *(_QWORD *)&v282[v285[8]];
  swift_release();
  v286 = v223[14];
  v287 = (_QWORD *)((char *)v221 + v286);
  v288 = (_QWORD *)((char *)v222 + v286);
  v290 = *v288;
  v289 = v288[1];
  *v287 = v290;
  v287[1] = v289;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v221 + v223[15]) = *(_QWORD *)((char *)v222 + v223[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v221 + v223[16]) = *(_QWORD *)((char *)v222 + v223[16]);
  swift_bridgeObjectRelease();
  v291 = v223[17];
  v292 = (char *)v221 + v291;
  v293 = (char *)v222 + v291;
  *(_OWORD *)v292 = *(_OWORD *)v293;
  v292[16] = v293[16];
LABEL_47:
  v236 = a3[7];
  v237 = &a1[v236];
  v238 = &a2[v236];
  v239 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  v240 = __swift_getEnumTagSinglePayload((uint64_t)v237, 1, (uint64_t)v239);
  v241 = __swift_getEnumTagSinglePayload((uint64_t)v238, 1, (uint64_t)v239);
  if (v240)
  {
    if (!v241)
    {
      *v237 = *v238;
      v242 = v239[13];
      v243 = (char *)v237 + v242;
      v244 = (char *)v238 + v242;
      v245 = sub_1A6121F58();
      v246 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32);
      v246(v243, v244, v245);
      v247 = (int *)type metadata accessor for WeatherMetadata();
      v246(&v243[v247[5]], &v244[v247[5]], v245);
      a3 = v552;
      *(_QWORD *)&v243[v247[6]] = *(_QWORD *)&v244[v247[6]];
      *(_QWORD *)&v243[v247[7]] = *(_QWORD *)&v244[v247[7]];
      *(_QWORD *)&v243[v247[8]] = *(_QWORD *)&v244[v247[8]];
      *(_OWORD *)((char *)v237 + v239[14]) = *(_OWORD *)((char *)v238 + v239[14]);
      *(_QWORD *)((char *)v237 + v239[15]) = *(_QWORD *)((char *)v238 + v239[15]);
      *(_QWORD *)((char *)v237 + v239[16]) = *(_QWORD *)((char *)v238 + v239[16]);
      v248 = v239[17];
      v249 = (char *)v237 + v248;
      v250 = (char *)v238 + v248;
      v249[16] = v250[16];
      *(_OWORD *)v249 = *(_OWORD *)v250;
      __swift_storeEnumTagSinglePayload((uint64_t)v237, 0, 1, (uint64_t)v239);
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  if (v241)
  {
    sub_1A5FAFD58((uint64_t)v237, (uint64_t *)&unk_1ED193A90);
LABEL_52:
    v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
    memcpy(v237, v238, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
    goto LABEL_53;
  }
  *v237 = *v238;
  swift_bridgeObjectRelease();
  v294 = v239[13];
  v295 = (char *)v237 + v294;
  v296 = (char *)v238 + v294;
  v297 = sub_1A6121F58();
  v298 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 40);
  v298(v295, v296, v297);
  v299 = (int *)type metadata accessor for WeatherMetadata();
  v298(&v295[v299[5]], &v296[v299[5]], v297);
  a3 = v552;
  *(_QWORD *)&v295[v299[6]] = *(_QWORD *)&v296[v299[6]];
  *(_QWORD *)&v295[v299[7]] = *(_QWORD *)&v296[v299[7]];
  *(_QWORD *)&v295[v299[8]] = *(_QWORD *)&v296[v299[8]];
  swift_release();
  v300 = v239[14];
  v301 = (_QWORD *)((char *)v237 + v300);
  v302 = (_QWORD *)((char *)v238 + v300);
  v304 = *v302;
  v303 = v302[1];
  *v301 = v304;
  v301[1] = v303;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v237 + v239[15]) = *(_QWORD *)((char *)v238 + v239[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v237 + v239[16]) = *(_QWORD *)((char *)v238 + v239[16]);
  swift_bridgeObjectRelease();
  v305 = v239[17];
  v306 = (char *)v237 + v305;
  v307 = (char *)v238 + v305;
  *(_OWORD *)v306 = *(_OWORD *)v307;
  v306[16] = v307[16];
LABEL_53:
  v252 = a3[8];
  v253 = &a1[v252];
  v254 = &a2[v252];
  v255 = (int *)type metadata accessor for AirQuality();
  v256 = __swift_getEnumTagSinglePayload((uint64_t)v253, 1, (uint64_t)v255);
  v257 = __swift_getEnumTagSinglePayload((uint64_t)v254, 1, (uint64_t)v255);
  if (!v256)
  {
    if (v257)
    {
      sub_1A5FA1740((uint64_t)v253, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
      goto LABEL_59;
    }
    v308 = sub_1A6121F58();
    v309 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v308 - 8) + 40);
    v309(v253, v254, v308);
    v547 = v309;
    v551 = v308;
    v309(&v253[v255[5]], &v254[v255[5]], v308);
    v310 = v255[6];
    v311 = &v253[v310];
    v312 = (uint64_t *)&v254[v310];
    v314 = *v312;
    v313 = v312[1];
    *(_QWORD *)v311 = v314;
    *((_QWORD *)v311 + 1) = v313;
    swift_bridgeObjectRelease();
    v315 = v255[7];
    v316 = &v253[v315];
    v317 = &v254[v315];
    v318 = *(_QWORD *)&v254[v315 + 8];
    *(_QWORD *)v316 = *(_QWORD *)&v254[v315];
    *((_QWORD *)v316 + 1) = v318;
    swift_bridgeObjectRelease();
    v319 = *((_QWORD *)v317 + 3);
    *((_QWORD *)v316 + 2) = *((_QWORD *)v317 + 2);
    *((_QWORD *)v316 + 3) = v319;
    swift_bridgeObjectRelease();
    v320 = *((_QWORD *)v317 + 5);
    *((_QWORD *)v316 + 4) = *((_QWORD *)v317 + 4);
    *((_QWORD *)v316 + 5) = v320;
    swift_bridgeObjectRelease();
    v321 = *((_QWORD *)v317 + 7);
    *((_QWORD *)v316 + 6) = *((_QWORD *)v317 + 6);
    *((_QWORD *)v316 + 7) = v321;
    swift_bridgeObjectRelease();
    v322 = *((_QWORD *)v317 + 9);
    *((_QWORD *)v316 + 8) = *((_QWORD *)v317 + 8);
    *((_QWORD *)v316 + 9) = v322;
    swift_bridgeObjectRelease();
    v316[80] = v317[80];
    *(_OWORD *)(v316 + 88) = *(_OWORD *)(v317 + 88);
    *((_QWORD *)v316 + 13) = *((_QWORD *)v317 + 13);
    swift_bridgeObjectRelease();
    *((_QWORD *)v316 + 14) = *((_QWORD *)v317 + 14);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v253[v255[8]] = *(_QWORD *)&v254[v255[8]];
    v323 = v255[9];
    v324 = &v253[v323];
    v325 = &v254[v323];
    v326 = *(_QWORD *)&v254[v323 + 8];
    *(_QWORD *)v324 = *(_QWORD *)&v254[v323];
    *((_QWORD *)v324 + 1) = v326;
    swift_bridgeObjectRelease();
    *((_OWORD *)v324 + 1) = *((_OWORD *)v325 + 1);
    *((_QWORD *)v324 + 4) = *((_QWORD *)v325 + 4);
    swift_bridgeObjectRelease();
    v327 = *((_QWORD *)v325 + 6);
    *((_QWORD *)v324 + 5) = *((_QWORD *)v325 + 5);
    *((_QWORD *)v324 + 6) = v327;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v324 + 56) = *(_OWORD *)(v325 + 56);
    v328 = *((_QWORD *)v325 + 10);
    *((_QWORD *)v324 + 9) = *((_QWORD *)v325 + 9);
    *((_QWORD *)v324 + 10) = v328;
    swift_bridgeObjectRelease();
    v253[v255[10]] = v254[v255[10]];
    v329 = v255[11];
    v330 = (uint64_t)&v253[v329];
    v331 = (uint64_t)&v254[v329];
    v332 = type metadata accessor for ProviderAttribution();
    LODWORD(v324) = __swift_getEnumTagSinglePayload(v330, 1, v332);
    v333 = __swift_getEnumTagSinglePayload(v331, 1, v332);
    if ((_DWORD)v324)
    {
      if (!v333)
      {
        *(_OWORD *)v330 = *(_OWORD *)v331;
        v334 = *(int *)(v332 + 20);
        v335 = (void *)(v330 + v334);
        v336 = (const void *)(v331 + v334);
        v337 = sub_1A6121DF0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v336, 1, v337))
        {
          v338 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
          memcpy(v335, v336, *(_QWORD *)(*(_QWORD *)(v338 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v337 - 8) + 32))(v335, v336, v337);
          __swift_storeEnumTagSinglePayload((uint64_t)v335, 0, 1, v337);
        }
        v375 = v330;
        v376 = v332;
        goto LABEL_90;
      }
    }
    else
    {
      if (!v333)
      {
        v368 = *(_QWORD *)(v331 + 8);
        *(_QWORD *)v330 = *(_QWORD *)v331;
        *(_QWORD *)(v330 + 8) = v368;
        swift_bridgeObjectRelease();
        v369 = *(int *)(v332 + 20);
        v370 = v330 + v369;
        v371 = v331 + v369;
        v372 = sub_1A6121DF0();
        v373 = __swift_getEnumTagSinglePayload(v370, 1, v372);
        v374 = __swift_getEnumTagSinglePayload(v371, 1, v372);
        if (v373)
        {
          if (!v374)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v372 - 8) + 32))(v370, v371, v372);
            v375 = v370;
            v376 = v372;
LABEL_90:
            __swift_storeEnumTagSinglePayload(v375, 0, 1, v376);
            goto LABEL_91;
          }
        }
        else
        {
          v535 = *(_QWORD *)(v372 - 8);
          if (!v374)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v535 + 40))(v370, v371, v372);
LABEL_91:
            v377 = v255[12];
            v378 = &v253[v377];
            v379 = &v254[v377];
            v380 = sub_1A6121DF0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v380 - 8) + 40))(v378, v379, v380);
            *(_QWORD *)&v253[v255[13]] = *(_QWORD *)&v254[v255[13]];
            swift_bridgeObjectRelease();
            v381 = v255[14];
            v382 = &v253[v381];
            v383 = &v254[v381];
            v384 = type metadata accessor for AirPollutant();
            LODWORD(v378) = __swift_getEnumTagSinglePayload((uint64_t)v382, 1, v384);
            v385 = __swift_getEnumTagSinglePayload((uint64_t)v383, 1, v384);
            if ((_DWORD)v378)
            {
              if (!v385)
              {
                *v382 = *v383;
                v386 = *(int *)(v384 + 20);
                v387 = &v382[v386];
                v388 = &v383[v386];
                type metadata accessor for AirPollutantMeasurement();
                if (swift_getEnumCaseMultiPayload() == 1)
                  v389 = &qword_1ED190B60;
                else
                  v389 = &qword_1ED1922B8;
                v390 = __swift_instantiateConcreteTypeFromMangledName(v389);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v390 - 8) + 32))(v387, v388, v390);
                swift_storeEnumTagMultiPayload();
                v382[*(int *)(v384 + 24)] = v383[*(int *)(v384 + 24)];
                __swift_storeEnumTagSinglePayload((uint64_t)v382, 0, 1, v384);
                goto LABEL_100;
              }
            }
            else
            {
              if (!v385)
              {
                *v382 = *v383;
                if (a1 != a2)
                {
                  v530 = *(int *)(v384 + 20);
                  v531 = &v383[v530];
                  v532 = &v382[v530];
                  sub_1A5FA1740((uint64_t)&v382[v530], (uint64_t (*)(_QWORD))type metadata accessor for AirPollutantMeasurement);
                  type metadata accessor for AirPollutantMeasurement();
                  if (swift_getEnumCaseMultiPayload() == 1)
                    v533 = &qword_1ED190B60;
                  else
                    v533 = &qword_1ED1922B8;
                  v534 = __swift_instantiateConcreteTypeFromMangledName(v533);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v534 - 8) + 32))(v532, v531, v534);
                  swift_storeEnumTagMultiPayload();
                }
                v382[*(int *)(v384 + 24)] = v383[*(int *)(v384 + 24)];
                goto LABEL_100;
              }
              sub_1A5FA1740((uint64_t)v382, (uint64_t (*)(_QWORD))type metadata accessor for AirPollutant);
            }
            v391 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
            memcpy(v382, v383, *(_QWORD *)(*(_QWORD *)(v391 - 8) + 64));
LABEL_100:
            a3 = v552;
            v253[v255[15]] = v254[v255[15]];
            v392 = v255[16];
            v393 = &v253[v392];
            v394 = &v254[v392];
            *v393 = *v394;
            v396 = *((_QWORD *)v394 + 1);
            v395 = *((_QWORD *)v394 + 2);
            *((_QWORD *)v393 + 1) = v396;
            *((_QWORD *)v393 + 2) = v395;
            swift_bridgeObjectRelease();
            v397 = v255[17];
            v398 = &v253[v397];
            v399 = &v254[v397];
            v547(v398, &v254[v397], v551);
            v400 = (int *)type metadata accessor for WeatherMetadata();
            v547(&v398[v400[5]], &v399[v400[5]], v551);
            *(_QWORD *)&v398[v400[6]] = *(_QWORD *)&v399[v400[6]];
            *(_QWORD *)&v398[v400[7]] = *(_QWORD *)&v399[v400[7]];
            *(_QWORD *)&v398[v400[8]] = *(_QWORD *)&v399[v400[8]];
            swift_release();
            goto LABEL_101;
          }
          (*(void (**)(uint64_t, uint64_t))(v535 + 8))(v370, v372);
        }
        v344 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8) - 8) + 64);
        v345 = (void *)v370;
        v346 = (const void *)v371;
LABEL_72:
        memcpy(v345, v346, v344);
        goto LABEL_91;
      }
      sub_1A5FA1740(v330, (uint64_t (*)(_QWORD))type metadata accessor for ProviderAttribution);
    }
    v344 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330) - 8) + 64);
    v345 = (void *)v330;
    v346 = (const void *)v331;
    goto LABEL_72;
  }
  if (v257)
  {
LABEL_59:
    v265 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
    memcpy(v253, v254, *(_QWORD *)(*(_QWORD *)(v265 - 8) + 64));
    goto LABEL_101;
  }
  v258 = sub_1A6121F58();
  v259 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 32);
  v259(v253, v254, v258);
  v546 = v259;
  v259(&v253[v255[5]], &v254[v255[5]], v258);
  *(_OWORD *)&v253[v255[6]] = *(_OWORD *)&v254[v255[6]];
  memcpy(&v253[v255[7]], &v254[v255[7]], 0x78uLL);
  *(_QWORD *)&v253[v255[8]] = *(_QWORD *)&v254[v255[8]];
  memcpy(&v253[v255[9]], &v254[v255[9]], 0x58uLL);
  v253[v255[10]] = v254[v255[10]];
  v260 = v255[11];
  v261 = &v253[v260];
  v262 = &v254[v260];
  v263 = type metadata accessor for ProviderAttribution();
  v550 = v258;
  if (__swift_getEnumTagSinglePayload((uint64_t)v262, 1, v263))
  {
    v264 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
    memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v264 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v261 = *v262;
    v339 = *(int *)(v263 + 20);
    v340 = &v261[v339];
    v341 = (char *)v262 + v339;
    v342 = sub_1A6121DF0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v341, 1, v342))
    {
      v343 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
      memcpy(v340, v341, *(_QWORD *)(*(_QWORD *)(v343 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v342 - 8) + 32))(v340, v341, v342);
      __swift_storeEnumTagSinglePayload((uint64_t)v340, 0, 1, v342);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v261, 0, 1, v263);
  }
  v347 = v255[12];
  v348 = &v253[v347];
  v349 = &v254[v347];
  v350 = sub_1A6121DF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v350 - 8) + 32))(v348, v349, v350);
  *(_QWORD *)&v253[v255[13]] = *(_QWORD *)&v254[v255[13]];
  v351 = v255[14];
  v352 = &v253[v351];
  v353 = &v254[v351];
  v354 = type metadata accessor for AirPollutant();
  if (__swift_getEnumTagSinglePayload((uint64_t)v353, 1, v354))
  {
    v355 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
    memcpy(v352, v353, *(_QWORD *)(*(_QWORD *)(v355 - 8) + 64));
  }
  else
  {
    *v352 = *v353;
    v356 = *(int *)(v354 + 20);
    v357 = &v352[v356];
    v358 = &v353[v356];
    type metadata accessor for AirPollutantMeasurement();
    if (swift_getEnumCaseMultiPayload() == 1)
      v359 = &qword_1ED190B60;
    else
      v359 = &qword_1ED1922B8;
    v360 = __swift_instantiateConcreteTypeFromMangledName(v359);
    (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v360 - 8) + 32))(v357, v358, v360);
    swift_storeEnumTagMultiPayload();
    v352[*(int *)(v354 + 24)] = v353[*(int *)(v354 + 24)];
    __swift_storeEnumTagSinglePayload((uint64_t)v352, 0, 1, v354);
  }
  a3 = v552;
  v253[v255[15]] = v254[v255[15]];
  v361 = v255[16];
  v362 = &v253[v361];
  v363 = &v254[v361];
  *(_OWORD *)v362 = *(_OWORD *)v363;
  *((_QWORD *)v362 + 2) = *((_QWORD *)v363 + 2);
  v364 = v255[17];
  v365 = &v253[v364];
  v366 = &v254[v364];
  v546(&v253[v364], v366, v550);
  v367 = (int *)type metadata accessor for WeatherMetadata();
  v546(&v365[v367[5]], &v366[v367[5]], v550);
  *(_QWORD *)&v365[v367[6]] = *(_QWORD *)&v366[v367[6]];
  *(_QWORD *)&v365[v367[7]] = *(_QWORD *)&v366[v367[7]];
  *(_QWORD *)&v365[v367[8]] = *(_QWORD *)&v366[v367[8]];
  __swift_storeEnumTagSinglePayload((uint64_t)v253, 0, 1, (uint64_t)v255);
LABEL_101:
  v401 = a3[9];
  v402 = &a1[v401];
  v403 = &a2[v401];
  v404 = type metadata accessor for WeatherChanges();
  v405 = __swift_getEnumTagSinglePayload((uint64_t)v402, 1, v404);
  v406 = __swift_getEnumTagSinglePayload((uint64_t)v403, 1, v404);
  if (v405)
  {
    if (!v406)
    {
      *v402 = *v403;
      v407 = *(int *)(v404 + 20);
      v408 = (char *)v402 + v407;
      v409 = (char *)v403 + v407;
      v410 = sub_1A6121F58();
      v411 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v410 - 8) + 32);
      v411(v408, v409, v410);
      v412 = (int *)type metadata accessor for WeatherMetadata();
      v411(&v408[v412[5]], &v409[v412[5]], v410);
      *(_QWORD *)&v408[v412[6]] = *(_QWORD *)&v409[v412[6]];
      *(_QWORD *)&v408[v412[7]] = *(_QWORD *)&v409[v412[7]];
      *(_QWORD *)&v408[v412[8]] = *(_QWORD *)&v409[v412[8]];
      __swift_storeEnumTagSinglePayload((uint64_t)v402, 0, 1, v404);
      goto LABEL_107;
    }
    goto LABEL_106;
  }
  if (v406)
  {
    sub_1A5FA1740((uint64_t)v402, (uint64_t (*)(_QWORD))type metadata accessor for WeatherChanges);
LABEL_106:
    v413 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
    memcpy(v402, v403, *(_QWORD *)(*(_QWORD *)(v413 - 8) + 64));
    goto LABEL_107;
  }
  *v402 = *v403;
  swift_bridgeObjectRelease();
  v471 = *(int *)(v404 + 20);
  v472 = (char *)v402 + v471;
  v473 = (char *)v403 + v471;
  v474 = sub_1A6121F58();
  v475 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v474 - 8) + 40);
  v475(v472, v473, v474);
  v476 = (int *)type metadata accessor for WeatherMetadata();
  v475(&v472[v476[5]], &v473[v476[5]], v474);
  *(_QWORD *)&v472[v476[6]] = *(_QWORD *)&v473[v476[6]];
  *(_QWORD *)&v472[v476[7]] = *(_QWORD *)&v473[v476[7]];
  *(_QWORD *)&v472[v476[8]] = *(_QWORD *)&v473[v476[8]];
  swift_release();
LABEL_107:
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  v414 = a3[11];
  v415 = a3[12];
  v416 = &a1[v414];
  v417 = &a2[v414];
  *(_WORD *)v416 = *(_WORD *)v417;
  v416[2] = v417[2];
  a1[v415] = a2[v415];
  v418 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  a1[v418] = a2[v418];
  v419 = a3[15];
  v420 = &a1[v419];
  v421 = &a2[v419];
  v422 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED194050);
  v423 = __swift_getEnumTagSinglePayload((uint64_t)v420, 1, (uint64_t)v422);
  v424 = __swift_getEnumTagSinglePayload((uint64_t)v421, 1, (uint64_t)v422);
  if (v423)
  {
    if (!v424)
    {
      *v420 = *v421;
      v425 = v422[13];
      v426 = (char *)v420 + v425;
      v427 = (char *)v421 + v425;
      v428 = sub_1A6121F58();
      v429 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v428 - 8) + 32);
      v429(v426, v427, v428);
      v430 = (int *)type metadata accessor for WeatherMetadata();
      v429(&v426[v430[5]], &v427[v430[5]], v428);
      a3 = v552;
      *(_QWORD *)&v426[v430[6]] = *(_QWORD *)&v427[v430[6]];
      *(_QWORD *)&v426[v430[7]] = *(_QWORD *)&v427[v430[7]];
      *(_QWORD *)&v426[v430[8]] = *(_QWORD *)&v427[v430[8]];
      *(_OWORD *)((char *)v420 + v422[14]) = *(_OWORD *)((char *)v421 + v422[14]);
      *(_QWORD *)((char *)v420 + v422[15]) = *(_QWORD *)((char *)v421 + v422[15]);
      *(_QWORD *)((char *)v420 + v422[16]) = *(_QWORD *)((char *)v421 + v422[16]);
      v431 = v422[17];
      v432 = (char *)v420 + v431;
      v433 = (char *)v421 + v431;
      v432[16] = v433[16];
      *(_OWORD *)v432 = *(_OWORD *)v433;
      __swift_storeEnumTagSinglePayload((uint64_t)v420, 0, 1, (uint64_t)v422);
      goto LABEL_113;
    }
    goto LABEL_112;
  }
  if (v424)
  {
    sub_1A5FAFD58((uint64_t)v420, &qword_1ED194050);
LABEL_112:
    v434 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194058);
    memcpy(v420, v421, *(_QWORD *)(*(_QWORD *)(v434 - 8) + 64));
    goto LABEL_113;
  }
  *v420 = *v421;
  swift_bridgeObjectRelease();
  v477 = v422[13];
  v478 = (char *)v420 + v477;
  v479 = (char *)v421 + v477;
  v480 = sub_1A6121F58();
  v481 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v480 - 8) + 40);
  v481(v478, v479, v480);
  v482 = (int *)type metadata accessor for WeatherMetadata();
  v481(&v478[v482[5]], &v479[v482[5]], v480);
  a3 = v552;
  *(_QWORD *)&v478[v482[6]] = *(_QWORD *)&v479[v482[6]];
  *(_QWORD *)&v478[v482[7]] = *(_QWORD *)&v479[v482[7]];
  *(_QWORD *)&v478[v482[8]] = *(_QWORD *)&v479[v482[8]];
  swift_release();
  v483 = v422[14];
  v484 = (_QWORD *)((char *)v420 + v483);
  v485 = (_QWORD *)((char *)v421 + v483);
  v487 = *v485;
  v486 = v485[1];
  *v484 = v487;
  v484[1] = v486;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v420 + v422[15]) = *(_QWORD *)((char *)v421 + v422[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v420 + v422[16]) = *(_QWORD *)((char *)v421 + v422[16]);
  swift_bridgeObjectRelease();
  v488 = v422[17];
  v489 = (char *)v420 + v488;
  v490 = (char *)v421 + v488;
  *(_OWORD *)v489 = *(_OWORD *)v490;
  v489[16] = v490[16];
LABEL_113:
  *(_QWORD *)&a1[a3[16]] = *(_QWORD *)&a2[a3[16]];
  swift_bridgeObjectRelease();
  v435 = a3[17];
  v436 = &a1[v435];
  v437 = &a2[v435];
  v438 = (int *)type metadata accessor for TideEvents();
  v439 = __swift_getEnumTagSinglePayload((uint64_t)v436, 1, (uint64_t)v438);
  v440 = __swift_getEnumTagSinglePayload((uint64_t)v437, 1, (uint64_t)v438);
  if (v439)
  {
    if (!v440)
    {
      v441 = sub_1A6121F58();
      v442 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v441 - 8) + 32);
      v442(v436, v437, v441);
      *(_QWORD *)&v436[v438[5]] = *(_QWORD *)&v437[v438[5]];
      *(_QWORD *)&v436[v438[6]] = *(_QWORD *)&v437[v438[6]];
      *(_OWORD *)&v436[v438[7]] = *(_OWORD *)&v437[v438[7]];
      v443 = v438[8];
      v444 = &v436[v443];
      v445 = &v437[v443];
      v442(&v436[v443], v445, v441);
      v446 = (int *)type metadata accessor for WeatherMetadata();
      v442(&v444[v446[5]], &v445[v446[5]], v441);
      *(_QWORD *)&v444[v446[6]] = *(_QWORD *)&v445[v446[6]];
      *(_QWORD *)&v444[v446[7]] = *(_QWORD *)&v445[v446[7]];
      *(_QWORD *)&v444[v446[8]] = *(_QWORD *)&v445[v446[8]];
      __swift_storeEnumTagSinglePayload((uint64_t)v436, 0, 1, (uint64_t)v438);
      goto LABEL_119;
    }
    goto LABEL_118;
  }
  if (v440)
  {
    sub_1A5FA1740((uint64_t)v436, (uint64_t (*)(_QWORD))type metadata accessor for TideEvents);
LABEL_118:
    v447 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192930);
    memcpy(v436, v437, *(_QWORD *)(*(_QWORD *)(v447 - 8) + 64));
    goto LABEL_119;
  }
  v491 = sub_1A6121F58();
  v492 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v491 - 8) + 40);
  v492(v436, v437, v491);
  *(_QWORD *)&v436[v438[5]] = *(_QWORD *)&v437[v438[5]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v436[v438[6]] = *(_QWORD *)&v437[v438[6]];
  swift_bridgeObjectRelease();
  *(_OWORD *)&v436[v438[7]] = *(_OWORD *)&v437[v438[7]];
  v493 = v438[8];
  v494 = &v436[v493];
  v495 = &v437[v493];
  v492(v494, v495, v491);
  v496 = (int *)type metadata accessor for WeatherMetadata();
  v492(&v494[v496[5]], &v495[v496[5]], v491);
  *(_QWORD *)&v494[v496[6]] = *(_QWORD *)&v495[v496[6]];
  *(_QWORD *)&v494[v496[7]] = *(_QWORD *)&v495[v496[7]];
  *(_QWORD *)&v494[v496[8]] = *(_QWORD *)&v495[v496[8]];
  swift_release();
LABEL_119:
  v448 = a3[18];
  v449 = &a1[v448];
  v450 = &a2[v448];
  v451 = type metadata accessor for HistoricalComparisons();
  v452 = __swift_getEnumTagSinglePayload((uint64_t)v449, 1, v451);
  v453 = __swift_getEnumTagSinglePayload((uint64_t)v450, 1, v451);
  if (v452)
  {
    if (!v453)
    {
      *v449 = *v450;
      v454 = *(int *)(v451 + 20);
      v455 = (char *)v449 + v454;
      v456 = (char *)v450 + v454;
      v457 = sub_1A6121F58();
      v458 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v457 - 8) + 32);
      v458(v455, v456, v457);
      v459 = (int *)type metadata accessor for WeatherMetadata();
      v458(&v455[v459[5]], &v456[v459[5]], v457);
      *(_QWORD *)&v455[v459[6]] = *(_QWORD *)&v456[v459[6]];
      *(_QWORD *)&v455[v459[7]] = *(_QWORD *)&v456[v459[7]];
      *(_QWORD *)&v455[v459[8]] = *(_QWORD *)&v456[v459[8]];
      __swift_storeEnumTagSinglePayload((uint64_t)v449, 0, 1, v451);
      goto LABEL_125;
    }
    goto LABEL_124;
  }
  if (v453)
  {
    sub_1A5FA1740((uint64_t)v449, (uint64_t (*)(_QWORD))type metadata accessor for HistoricalComparisons);
LABEL_124:
    v460 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
    memcpy(v449, v450, *(_QWORD *)(*(_QWORD *)(v460 - 8) + 64));
    goto LABEL_125;
  }
  *v449 = *v450;
  swift_bridgeObjectRelease();
  v497 = *(int *)(v451 + 20);
  v498 = (char *)v449 + v497;
  v499 = (char *)v450 + v497;
  v500 = sub_1A6121F58();
  v501 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v500 - 8) + 40);
  v501(v498, v499, v500);
  v502 = (int *)type metadata accessor for WeatherMetadata();
  v501(&v498[v502[5]], &v499[v502[5]], v500);
  *(_QWORD *)&v498[v502[6]] = *(_QWORD *)&v499[v502[6]];
  *(_QWORD *)&v498[v502[7]] = *(_QWORD *)&v499[v502[7]];
  *(_QWORD *)&v498[v502[8]] = *(_QWORD *)&v499[v502[8]];
  swift_release();
LABEL_125:
  *(_QWORD *)&a1[a3[19]] = *(_QWORD *)&a2[a3[19]];
  swift_bridgeObjectRelease();
  v461 = a3[20];
  v462 = &a1[v461];
  v463 = &a2[v461];
  v464 = (int *)type metadata accessor for LocationInfo();
  v465 = __swift_getEnumTagSinglePayload((uint64_t)v462, 1, (uint64_t)v464);
  v466 = __swift_getEnumTagSinglePayload((uint64_t)v463, 1, (uint64_t)v464);
  if (!v465)
  {
    if (!v466)
    {
      v503 = sub_1A6121F58();
      v504 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v503 - 8) + 40);
      v504(v462, v463, v503);
      v504(&v462[v464[5]], &v463[v464[5]], v503);
      v505 = v464[6];
      v506 = &v462[v505];
      v507 = &v463[v505];
      v509 = *(_QWORD *)v507;
      v508 = *((_QWORD *)v507 + 1);
      *(_QWORD *)v506 = v509;
      *((_QWORD *)v506 + 1) = v508;
      swift_bridgeObjectRelease();
      v510 = v464[7];
      v511 = &v462[v510];
      v512 = &v463[v510];
      v514 = *(_QWORD *)v512;
      v513 = *((_QWORD *)v512 + 1);
      *(_QWORD *)v511 = v514;
      *((_QWORD *)v511 + 1) = v513;
      swift_bridgeObjectRelease();
      v515 = v464[8];
      v516 = &v462[v515];
      v517 = &v463[v515];
      v519 = *(_QWORD *)v517;
      v518 = *((_QWORD *)v517 + 1);
      *(_QWORD *)v516 = v519;
      *((_QWORD *)v516 + 1) = v518;
      swift_bridgeObjectRelease();
      v520 = v464[9];
      v521 = &v462[v520];
      v522 = &v463[v520];
      v524 = *(_QWORD *)v522;
      v523 = *((_QWORD *)v522 + 1);
      *(_QWORD *)v521 = v524;
      *((_QWORD *)v521 + 1) = v523;
      swift_bridgeObjectRelease();
      v525 = v464[10];
      v526 = &v462[v525];
      v527 = &v463[v525];
      v529 = *(_QWORD *)v527;
      v528 = *((_QWORD *)v527 + 1);
      *(_QWORD *)v526 = v529;
      *((_QWORD *)v526 + 1) = v528;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1A5FA1740((uint64_t)v462, (uint64_t (*)(_QWORD))type metadata accessor for LocationInfo);
    goto LABEL_130;
  }
  if (v466)
  {
LABEL_130:
    v469 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1936F8);
    memcpy(v462, v463, *(_QWORD *)(*(_QWORD *)(v469 - 8) + 64));
    return a1;
  }
  v467 = sub_1A6121F58();
  v468 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v467 - 8) + 32);
  v468(v462, v463, v467);
  v468(&v462[v464[5]], &v463[v464[5]], v467);
  *(_OWORD *)&v462[v464[6]] = *(_OWORD *)&v463[v464[6]];
  *(_OWORD *)&v462[v464[7]] = *(_OWORD *)&v463[v464[7]];
  *(_OWORD *)&v462[v464[8]] = *(_OWORD *)&v463[v464[8]];
  *(_OWORD *)&v462[v464[9]] = *(_OWORD *)&v463[v464[9]];
  *(_OWORD *)&v462[v464[10]] = *(_OWORD *)&v463[v464[10]];
  __swift_storeEnumTagSinglePayload((uint64_t)v462, 0, 1, (uint64_t)v464);
  return a1;
}

uint64_t sub_1A6078958()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6078964(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
  OUTLINED_FUNCTION_14_0();
  if (v9)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  OUTLINED_FUNCTION_14_0();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_34:
    v8 = a1 + v11;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
  OUTLINED_FUNCTION_14_0();
  if (v12)
  {
    v7 = v13;
    v11 = a3[6];
    goto LABEL_34;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
  OUTLINED_FUNCTION_14_0();
  if (v14)
  {
    v7 = v15;
    v11 = a3[7];
    goto LABEL_34;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  OUTLINED_FUNCTION_14_0();
  if (v16)
  {
    v7 = v17;
    v11 = a3[8];
    goto LABEL_34;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
  OUTLINED_FUNCTION_14_0();
  if (v18)
  {
    v7 = v19;
    v11 = a3[9];
    goto LABEL_34;
  }
  if ((_DWORD)a2 != 2147483646)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194058);
    OUTLINED_FUNCTION_14_0();
    if (v9)
    {
      v7 = v23;
      v11 = a3[15];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192930);
      OUTLINED_FUNCTION_14_0();
      if (v24)
      {
        v7 = v25;
        v11 = a3[17];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
        OUTLINED_FUNCTION_14_0();
        if (v26)
        {
          v7 = v27;
          v11 = a3[18];
        }
        else
        {
          v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1936F8);
          v11 = a3[20];
        }
      }
    }
    goto LABEL_34;
  }
  v20 = *(_QWORD *)(a1 + a3[10]);
  if (v20 >= 0xFFFFFFFF)
    LODWORD(v20) = -1;
  v21 = v20 - 1;
  if (v21 < 0)
    v21 = -1;
  return (v21 + 1);
}

uint64_t sub_1A6078B0C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1A6078B18(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
  OUTLINED_FUNCTION_13();
  if (v11)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    OUTLINED_FUNCTION_13();
    if (v11)
    {
      v9 = v12;
      v13 = a4[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
      OUTLINED_FUNCTION_13();
      if (v14)
      {
        v9 = v15;
        v13 = a4[6];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
        OUTLINED_FUNCTION_13();
        if (v16)
        {
          v9 = v17;
          v13 = a4[7];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
          OUTLINED_FUNCTION_13();
          if (v18)
          {
            v9 = v19;
            v13 = a4[8];
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
            OUTLINED_FUNCTION_13();
            if (v20)
            {
              v9 = v21;
              v13 = a4[9];
            }
            else
            {
              if (a3 == 2147483646)
              {
                *(_QWORD *)(a1 + a4[10]) = a2;
                return;
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194058);
              OUTLINED_FUNCTION_13();
              if (v11)
              {
                v9 = v22;
                v13 = a4[15];
              }
              else
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192930);
                OUTLINED_FUNCTION_13();
                if (v23)
                {
                  v9 = v24;
                  v13 = a4[17];
                }
                else
                {
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194020);
                  OUTLINED_FUNCTION_13();
                  if (v25)
                  {
                    v9 = v26;
                    v13 = a4[18];
                  }
                  else
                  {
                    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1936F8);
                    v13 = a4[20];
                  }
                }
              }
            }
          }
        }
      }
    }
    v10 = a1 + v13;
  }
  __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t OUTLINED_FUNCTION_118_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 120) = v0;
  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v3;
  return 0;
}

uint64_t OUTLINED_FUNCTION_148_3()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 200) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_155_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 152))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_157_1()
{
  return sub_1A6123254();
}

void OUTLINED_FUNCTION_180(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_182_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_184_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 - 256);
  v3 = *(_QWORD *)(v1 - 384);
  *(_QWORD *)(v1 - 184) = v2;
  *(_QWORD *)(v1 - 176) = v3;
}

uint64_t OUTLINED_FUNCTION_185_0()
{
  uint64_t v0;

  return v0 - 160;
}

uint64_t OUTLINED_FUNCTION_186_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 48) = a1;
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v2 + 32))(v3 + v1, *(_QWORD *)(v4 - 160), *(_QWORD *)(v4 - 240));
}

uint64_t OUTLINED_FUNCTION_188@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_189_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_192_0(uint64_t result, float a2)
{
  float *v2;
  uint64_t v3;

  *v2 = a2;
  *(_QWORD *)(v3 - 96) = 1752392040;
  *(_QWORD *)(v3 - 88) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_194_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 96) = a1;
  *(_QWORD *)(v4 - 88) = v1;
  *(_QWORD *)(v4 - 80) = v2;
  *(_QWORD *)(v4 - 72) = v3;
  return 255;
}

uint64_t OUTLINED_FUNCTION_202_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 - 256) + 8))(*(_QWORD *)(v1 - 264), *(_QWORD *)(v1 - 248));
}

uint64_t OUTLINED_FUNCTION_205_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_206_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

void OUTLINED_FUNCTION_208_0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_212_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for WeatherQuery(0, *(_QWORD *)(v4 - 240), a3, a4);
}

void OUTLINED_FUNCTION_214_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

void OUTLINED_FUNCTION_215_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_220_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

void OUTLINED_FUNCTION_221_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 - 256);
  v3 = *(_QWORD *)(v1 - 624);
  *(_QWORD *)(v1 - 240) = v2;
  *(_QWORD *)(v1 - 232) = v3;
}

void OUTLINED_FUNCTION_222_0()
{
  sub_1A6057E18();
}

uint64_t OUTLINED_FUNCTION_223_0@<X0>(NSObject *a1@<X0>, uint64_t a2@<X1>, void (*a3)(NSObject *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1A605F0FC(a1, a2, a3, a4, a5, a6);
}

void OUTLINED_FUNCTION_224()
{
  type metadata accessor for DailyWeatherSummaryQuery();
}

uint64_t OUTLINED_FUNCTION_226_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_230_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  return swift_allocateMetadataPack();
}

uint64_t OUTLINED_FUNCTION_234_0()
{
  return sub_1A6121D0C();
}

uint64_t OUTLINED_FUNCTION_235_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t OUTLINED_FUNCTION_238_0()
{
  return sub_1A6121F40();
}

void OUTLINED_FUNCTION_239_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 288) = a1;
}

uint64_t OUTLINED_FUNCTION_240_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_245_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return type metadata accessor for WeatherQuery(0, a8, a3, a4);
}

unint64_t OUTLINED_FUNCTION_247_0()
{
  return 0xD000000000000016;
}

uint64_t OUTLINED_FUNCTION_248_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 368), *(_QWORD *)(v2 - 240));
}

uint64_t OUTLINED_FUNCTION_249_0()
{
  return 0x6E776F6E6B6E75;
}

uint64_t OUTLINED_FUNCTION_255_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return __swift_instantiateConcreteTypeFromMangledName(a5);
}

uint64_t OUTLINED_FUNCTION_260_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_263_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 80) = v0;
  *(_QWORD *)(v2 - 72) = v1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_266_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 296);
}

uint64_t OUTLINED_FUNCTION_268_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_272_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_274_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

char *OUTLINED_FUNCTION_287_0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - a1;
}

char *OUTLINED_FUNCTION_288_0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_291_0()
{
  return sub_1A6122708();
}

void OUTLINED_FUNCTION_292_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

void OUTLINED_FUNCTION_293_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = v0;
}

uint64_t OUTLINED_FUNCTION_296_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_297_1()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_301_0(int a1)
{
  uint64_t v1;

  *(_DWORD *)(v1 - 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_302_0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_303_0()
{
  return sub_1A612224C();
}

void OUTLINED_FUNCTION_305(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 - 256);
  v3 = *(_QWORD *)(v1 - 544);
  *(_QWORD *)(v1 - 216) = v2;
  *(_QWORD *)(v1 - 208) = v3;
}

void OUTLINED_FUNCTION_308_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 - 256);
  v3 = *(_QWORD *)(v1 - 504);
  *(_QWORD *)(v1 - 208) = v2;
  *(_QWORD *)(v1 - 200) = v3;
}

void OUTLINED_FUNCTION_309_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 - 256);
  v3 = *(_QWORD *)(v1 - 464);
  *(_QWORD *)(v1 - 200) = v2;
  *(_QWORD *)(v1 - 192) = v3;
}

uint64_t OUTLINED_FUNCTION_311_0@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t OUTLINED_FUNCTION_313_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_315_0()
{
  return sub_1A6123D28();
}

uint64_t OUTLINED_FUNCTION_316_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return __swift_storeEnumTagSinglePayload(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_318_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 136));
}

uint64_t OUTLINED_FUNCTION_321_0()
{
  return 0x6C62616C69617661;
}

uint64_t OUTLINED_FUNCTION_323_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, *(_QWORD *)(v2 - 256), *(_QWORD *)(v3 - 256));
}

void OUTLINED_FUNCTION_325_0(_QWORD *a1)
{
  void (*v1)(uint64_t);

  sub_1A5FAF4C0(a1, v1);
}

uint64_t OUTLINED_FUNCTION_327_0()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_330()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1A5FAFD58(v1 - 152, v0);
}

uint64_t OUTLINED_FUNCTION_332_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_334(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 136))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_335()
{
  uint64_t v0;

  return v0 - 128;
}

void OUTLINED_FUNCTION_337_0()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1A5FAFD58(v1 - 120, v0);
}

uint64_t OUTLINED_FUNCTION_338()
{
  uint64_t v0;

  return v0 - 120;
}

id OUTLINED_FUNCTION_339(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  a1[2] = v3;
  a1[3] = v2;
  a1[4] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_340()
{
  return sub_1A6123A88();
}

uint64_t OUTLINED_FUNCTION_342()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 304);
}

uint64_t OUTLINED_FUNCTION_345()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 416);
}

uint64_t OUTLINED_FUNCTION_346()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 736);
}

void OUTLINED_FUNCTION_348(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 - 256);
  *(_QWORD *)(v2 - 224) = v1;
  *(_QWORD *)(v2 - 216) = v3;
}

uint64_t OUTLINED_FUNCTION_350()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t OUTLINED_FUNCTION_352@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_353@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 232) = a2;
  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_354()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t OUTLINED_FUNCTION_355()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_356()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_358()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_361@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_362@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

id OUTLINED_FUNCTION_363(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  a1[2] = v3;
  a1[3] = v1;
  a1[4] = v2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_365()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

void OUTLINED_FUNCTION_367(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1A606D5B0(a1, a2, v2);
}

void OUTLINED_FUNCTION_368()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 256);
  *(_QWORD *)(v0 - 152) = *(_QWORD *)(v0 - 288);
  *(_QWORD *)(v0 - 144) = v1;
}

uint64_t OUTLINED_FUNCTION_372(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1A5FBE7E0(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return type metadata accessor for WeatherQuery(0, a6, a3, a4);
}

uint64_t OUTLINED_FUNCTION_375@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void HourlyWeatherStatistics.init(hours:baselineStartDate:metadata:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  OUTLINED_FUNCTION_6_25();
}

uint64_t sub_1A6079440(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v3 + *(int *)(a1 + 52);
  v6 = OUTLINED_FUNCTION_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, v2, v6);
  return sub_1A5FA7D50(v1, v3 + *(int *)(a1 + 56));
}

uint64_t static HourlyWeatherStatistics.== infix(_:_:)()
{
  if ((sub_1A6123914() & 1) != 0)
    OUTLINED_FUNCTION_6_25();
  return 0;
}

uint64_t HourlyWeatherStatistics.hours.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HourlyWeatherStatistics.hours.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*HourlyWeatherStatistics.hours.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t HourlyWeatherStatistics.baselineStartDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 52);
  v5 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_30(a2, v4, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 16));
}

uint64_t HourlyWeatherStatistics.baselineStartDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 52);
  v5 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_30(v4, a1, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 40));
}

uint64_t (*HourlyWeatherStatistics.baselineStartDate.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t HourlyWeatherStatistics.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A5FBFA40(v2 + *(int *)(a1 + 56), a2);
}

uint64_t HourlyWeatherStatistics.metadata.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5FF2038(a1, v2 + *(int *)(a2 + 56));
}

uint64_t (*HourlyWeatherStatistics.metadata.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t HourlyWeatherStatistics.startIndex.getter()
{
  return sub_1A61238D8();
}

void HourlyWeatherStatistics.endIndex.getter()
{
  JUMPOUT(0x1A85BAAB4);
}

uint64_t HourlyWeatherStatistics.subscript.getter()
{
  return sub_1A6123920();
}

uint64_t sub_1A6079650(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7372756F68 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A614FBB0 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_1A6123CF8();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A6079790(char a1)
{
  if (!a1)
    return 0x7372756F68;
  if (a1 == 1)
    return 0xD000000000000011;
  return 0x617461646174656DLL;
}

BOOL sub_1A60797E8(char *a1, char *a2)
{
  return sub_1A5FC6C10(*a1, *a2);
}

uint64_t sub_1A6079800()
{
  return sub_1A5FC6E9C();
}

uint64_t sub_1A6079810()
{
  return _s10WeatherKit0A6ChangeV9DirectionO4hash4intoys6HasherVz_tF_0();
}

uint64_t sub_1A6079820()
{
  sub_1A6123D64();
  _s10WeatherKit0A6ChangeV9DirectionO4hash4intoys6HasherVz_tF_0();
  return sub_1A6123D88();
}

uint64_t sub_1A6079868()
{
  char *v0;

  return sub_1A6079790(*v0);
}

uint64_t sub_1A6079878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6079650(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A60798A8()
{
  return sub_1A5FC6EE0();
}

uint64_t sub_1A60798CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5FCFC18();
  *a1 = result;
  return result;
}

uint64_t sub_1A60798FC(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A61337C0, a1);
  return sub_1A6123DE8();
}

uint64_t sub_1A6079930(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A61337C0, a1);
  return sub_1A6123DF4();
}

void HourlyWeatherStatistics.encode(to:)()
{
  OUTLINED_FUNCTION_5_27();
}

void sub_1A60799A4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  MEMORY[0x1A85BB36C](&unk_1A61337C0, a1);
  v4 = sub_1A6123CD4();
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1A6123DD0();
  *(_QWORD *)(v3 - 112) = *v2;
  *(_BYTE *)(v3 - 65) = 0;
  sub_1A6123908();
  *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 144);
  OUTLINED_FUNCTION_9_2();
}

void sub_1A6079A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 - 128);
  sub_1A6123CC8();
  if (!v4)
  {
    *(_BYTE *)(v3 - 112) = 1;
    sub_1A6121F58();
    sub_1A5FCAA84(&qword_1ED191698, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_0_32();
    *(_BYTE *)(v3 - 112) = 2;
    type metadata accessor for WeatherMetadata();
    sub_1A5FCAA84(&qword_1ED191718, (uint64_t (*)(uint64_t))type metadata accessor for WeatherMetadata, (uint64_t)&protocol conformance descriptor for WeatherMetadata);
    OUTLINED_FUNCTION_0_32();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  OUTLINED_FUNCTION_20();
}

void type metadata accessor for HourlyWeatherStatistics.CodingKeys()
{
  JUMPOUT(0x1A85BB2E8);
}

void HourlyWeatherStatistics.init(from:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for WeatherMetadata();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_11_0();
  v1 = sub_1A6121F58();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_5_27();
}

void sub_1A6079BF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1A85BB36C](&unk_1A61337C0, a1);
  v6 = sub_1A6123C5C();
  *(_QWORD *)(v5 - 144) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 160) = v3;
  *(_QWORD *)(v5 - 152) = v1;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for HourlyWeatherStatistics();
}

void sub_1A6079C64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 - 200) = a1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v3 - 136) = v2;
  v5 = *(_QWORD *)(v3 - 128);
  sub_1A6123DC4();
  if (!v5)
  {
    *(_QWORD *)(v3 - 232) = v4;
    *(_QWORD *)(v3 - 128) = v1;
    sub_1A6123908();
    *(_BYTE *)(v3 - 65) = 0;
    *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 152);
    OUTLINED_FUNCTION_9_2();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  OUTLINED_FUNCTION_20();
}

void sub_1A6079EC4()
{
  HourlyWeatherStatistics.init(from:)();
}

void sub_1A6079EE4()
{
  HourlyWeatherStatistics.encode(to:)();
}

uint64_t sub_1A6079EF8()
{
  return static HourlyWeatherStatistics.== infix(_:_:)();
}

void sub_1A6079F08()
{
  JUMPOUT(0x1A85BB36CLL);
}

uint64_t sub_1A6079F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A607A180(a1, a2, a3, MEMORY[0x1E0DEB8B8]);
}

uint64_t sub_1A6079F24(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85BB36C](&protocol conformance descriptor for HourlyWeatherStatistics<A>);
  return MEMORY[0x1A85BB36C](MEMORY[0x1E0DEDE40], a1, &v3);
}

uint64_t sub_1A6079F6C()
{
  return sub_1A6123974();
}

uint64_t sub_1A6079F7C()
{
  return sub_1A612398C();
}

void sub_1A6079F88()
{
  JUMPOUT(0x1A85BB36CLL);
}

uint64_t sub_1A6079F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A607A180(a1, a2, a3, MEMORY[0x1E0DEB890]);
}

uint64_t sub_1A6079FA4(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85BB36C](&protocol conformance descriptor for HourlyWeatherStatistics<A>);
  return MEMORY[0x1A85BB36C](MEMORY[0x1E0DEDE28], a1, &v3);
}

uint64_t sub_1A6079FEC()
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for HourlyWeatherStatistics<A>);
  return sub_1A6123968();
}

_QWORD *sub_1A607A03C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A607A398(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB508]);
}

uint64_t sub_1A607A048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for HourlyWeatherStatistics<A>, a3);
  return sub_1A6123974();
}

uint64_t sub_1A607A0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for HourlyWeatherStatistics<A>, a4);
  return sub_1A6123950();
}

uint64_t sub_1A607A110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for HourlyWeatherStatistics<A>, a3);
  return sub_1A612398C();
}

void sub_1A607A164()
{
  JUMPOUT(0x1A85BB36CLL);
}

uint64_t sub_1A607A174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A607A180(a1, a2, a3, MEMORY[0x1E0DEB8C0]);
}

uint64_t sub_1A607A180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  _QWORD v8[2];

  v6 = sub_1A5FF2D50();
  v8[0] = MEMORY[0x1E0DEB458];
  v8[1] = v6;
  return MEMORY[0x1A85BB36C](a4, a1, v8);
}

void sub_1A607A1C8()
{
  JUMPOUT(0x1A85BB36CLL);
}

uint64_t sub_1A607A1D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = HourlyWeatherStatistics.startIndex.getter();
  *a1 = result;
  return result;
}

void sub_1A607A1FC()
{
  HourlyWeatherStatistics.endIndex.getter();
}

uint64_t sub_1A607A210(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

void (*sub_1A607A220(_QWORD *a1, uint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1A607A27C(v6, *a2, a3);
  return sub_1A5F8A82C;
}

void (*sub_1A607A27C(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = malloc(*(_QWORD *)(v4 + 64));
  HourlyWeatherStatistics.subscript.getter();
  return sub_1A5F8A854;
}

uint64_t sub_1A607A2EC(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for HourlyWeatherStatistics<A>, a1);
  return sub_1A6123980();
}

uint64_t sub_1A607A33C()
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for HourlyWeatherStatistics<A>);
  return sub_1A612395C();
}

_QWORD *sub_1A607A38C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A607A398(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB500]);
}

_QWORD *sub_1A607A398(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  v7 = MEMORY[0x1A85BB36C](&protocol conformance descriptor for HourlyWeatherStatistics<A>);
  result = a4(&v9, a1, a2, v7, MEMORY[0x1E0DEB458]);
  *a1 = v9;
  return result;
}

uint64_t sub_1A607A3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *(_QWORD *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v2, a1);
  v6 = HourlyWeatherStatistics.startIndex.getter();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, a1);
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for HourlyWeatherStatistics<A>, a1);
  result = sub_1A6123B60();
  *(_QWORD *)(a2 + *(int *)(result + 36)) = v6;
  return result;
}

uint64_t sub_1A607A488(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for HourlyWeatherStatistics<A>, a1);
  return sub_1A61239A4();
}

uint64_t sub_1A607A4BC(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for HourlyWeatherStatistics<A>, a1);
  return sub_1A61239D4();
}

char *sub_1A607A4F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (char *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = (char *)a1;
    v8 = *(int *)(a3 + 52);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A6121F58();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 56);
    v14 = &v7[v13];
    v15 = (char *)a2 + v13;
    v12(&v7[v13], (char *)a2 + v13, v11);
    v16 = (int *)type metadata accessor for WeatherMetadata();
    v12(&v14[v16[5]], &v15[v16[5]], v11);
    *(_QWORD *)&v14[v16[6]] = *(_QWORD *)&v15[v16[6]];
    *(_QWORD *)&v14[v16[7]] = *(_QWORD *)&v15[v16[7]];
    *(_QWORD *)&v14[v16[8]] = *(_QWORD *)&v15[v16[8]];
  }
  swift_retain();
  return v7;
}

uint64_t sub_1A607A5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 52);
  v5 = sub_1A6121F58();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = a1 + *(int *)(a2 + 56);
  v6(v7, v5);
  v8 = type metadata accessor for WeatherMetadata();
  v6(v7 + *(int *)(v8 + 20), v5);
  return swift_release();
}

char *sub_1A607A690(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;

  *(_QWORD *)a1 = *a2;
  v6 = *(int *)(a3 + 52);
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1A6121F58();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 56);
  v12 = &a1[v11];
  v13 = (char *)a2 + v11;
  v10(&a1[v11], v13, v9);
  v14 = (int *)type metadata accessor for WeatherMetadata();
  v10(&v12[v14[5]], &v13[v14[5]], v9);
  *(_QWORD *)&v12[v14[6]] = *(_QWORD *)&v13[v14[6]];
  *(_QWORD *)&v12[v14[7]] = *(_QWORD *)&v13[v14[7]];
  *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
  swift_retain();
  return a1;
}

char *sub_1A607A774(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;

  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 52);
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1A6121F58();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 56);
  v12 = &a1[v11];
  v13 = (char *)a2 + v11;
  v10(&a1[v11], v13, v9);
  v14 = (int *)type metadata accessor for WeatherMetadata();
  v10(&v12[v14[5]], &v13[v14[5]], v9);
  *(_QWORD *)&v12[v14[6]] = *(_QWORD *)&v13[v14[6]];
  *(_QWORD *)&v12[v14[7]] = *(_QWORD *)&v13[v14[7]];
  *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1A607A86C(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;

  *(_QWORD *)a1 = *a2;
  v6 = *(int *)(a3 + 52);
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1A6121F58();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 56);
  v12 = &a1[v11];
  v13 = (char *)a2 + v11;
  v10(&a1[v11], v13, v9);
  v14 = (int *)type metadata accessor for WeatherMetadata();
  v10(&v12[v14[5]], &v13[v14[5]], v9);
  *(_QWORD *)&v12[v14[6]] = *(_QWORD *)&v13[v14[6]];
  *(_QWORD *)&v12[v14[7]] = *(_QWORD *)&v13[v14[7]];
  *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
  return a1;
}

char *sub_1A607A944(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;

  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 52);
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1A6121F58();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 56);
  v12 = &a1[v11];
  v13 = (char *)a2 + v11;
  v10(&a1[v11], v13, v9);
  v14 = (int *)type metadata accessor for WeatherMetadata();
  v10(&v12[v14[5]], &v13[v14[5]], v9);
  *(_QWORD *)&v12[v14[6]] = *(_QWORD *)&v13[v14[6]];
  *(_QWORD *)&v12[v14[7]] = *(_QWORD *)&v13[v14[7]];
  *(_QWORD *)&v12[v14[8]] = *(_QWORD *)&v13[v14[8]];
  swift_release();
  return a1;
}

uint64_t sub_1A607AA2C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_6();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 52);
    }
    else
    {
      v9 = type metadata accessor for WeatherMetadata();
      v10 = *(int *)(a3 + 56);
    }
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + v10, a2, v9);
  }
}

_QWORD *sub_1A607AAC0(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_6();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 52);
    }
    else
    {
      v9 = type metadata accessor for WeatherMetadata();
      v10 = *(int *)(a4 + 56);
    }
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A607AB50(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A607AB9C + 4 * byte_1A6133425[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A607ABD0 + 4 * byte_1A6133420[v4]))();
}

uint64_t sub_1A607ABD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A607ABD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A607ABE0);
  return result;
}

uint64_t sub_1A607ABEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A607ABF4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A607ABF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A607AC00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A607AC0C()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A607AC1C()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A607AC2C()
{
  JUMPOUT(0x1A85BB36CLL);
}

void Weather.currentWeather.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1A5F89964(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
}

uint64_t Weather.currentWeather.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1A60353B8(a1, v1);
}

uint64_t (*Weather.currentWeather.modify())()
{
  return GEOLocationCoordinate2DMake;
}

void Weather.minuteForecast.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_61(v0 + *(int *)(v1 + 20), v2, &qword_1ED192870);
  OUTLINED_FUNCTION_51();
}

uint64_t type metadata accessor for Weather()
{
  uint64_t result;

  result = qword_1EE815770;
  if (!qword_1EE815770)
    return swift_getSingletonMetadata();
  return result;
}

void Weather.minuteForecast.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_63(v1, v0 + *(int *)(v1 + 20), &qword_1ED192870);
  OUTLINED_FUNCTION_51();
}

double (*Weather.minuteForecast.modify())(double, double)
{
  OUTLINED_FUNCTION_1_35();
  return GEOLocationCoordinate2DMake;
}

void Weather.hourlyForecast.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_61(v0 + *(int *)(v1 + 24), v2, (uint64_t *)&unk_1ED193AB8);
  OUTLINED_FUNCTION_51();
}

void Weather.hourlyForecast.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_63(v1, v0 + *(int *)(v1 + 24), (uint64_t *)&unk_1ED193AB8);
  OUTLINED_FUNCTION_51();
}

double (*Weather.hourlyForecast.modify())(double, double)
{
  OUTLINED_FUNCTION_1_35();
  return GEOLocationCoordinate2DMake;
}

void Weather.dailyForecast.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_61(v0 + *(int *)(v1 + 28), v2, (uint64_t *)&unk_1ED193A90);
  OUTLINED_FUNCTION_51();
}

void Weather.dailyForecast.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_63(v1, v0 + *(int *)(v1 + 28), (uint64_t *)&unk_1ED193A90);
  OUTLINED_FUNCTION_51();
}

double (*Weather.dailyForecast.modify())(double, double)
{
  OUTLINED_FUNCTION_1_35();
  return GEOLocationCoordinate2DMake;
}

uint64_t Weather.weatherAlerts.getter()
{
  OUTLINED_FUNCTION_1_35();
  return swift_bridgeObjectRetain();
}

void Weather.weatherAlerts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_1_35() + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_9();
}

double (*Weather.weatherAlerts.modify())(double, double)
{
  OUTLINED_FUNCTION_1_35();
  return GEOLocationCoordinate2DMake;
}

void Weather.availability.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 *v3;
  __int16 v4;

  v3 = (__int16 *)(v1 + *(int *)(OUTLINED_FUNCTION_1_35() + 36));
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + 2);
  *(_WORD *)a1 = v4;
  *(_BYTE *)(a1 + 2) = (_BYTE)v3;
  OUTLINED_FUNCTION_51();
}

void Weather.availability.setter(__int16 *a1)
{
  uint64_t v1;
  __int16 v2;
  char v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 2);
  v4 = v1 + *(int *)(OUTLINED_FUNCTION_1_35() + 36);
  *(_WORD *)v4 = v2;
  *(_BYTE *)(v4 + 2) = v3;
  OUTLINED_FUNCTION_9();
}

double (*Weather.availability.modify())(double, double)
{
  OUTLINED_FUNCTION_1_35();
  return GEOLocationCoordinate2DMake;
}

void Weather.airQuality.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_61(v0 + *(int *)(v1 + 40), v2, &qword_1ED193508);
  OUTLINED_FUNCTION_51();
}

void Weather.airQuality.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_63(v1, v0 + *(int *)(v1 + 40), &qword_1ED193508);
  OUTLINED_FUNCTION_51();
}

double (*Weather.airQuality.modify())(double, double)
{
  OUTLINED_FUNCTION_1_35();
  return GEOLocationCoordinate2DMake;
}

void Weather.weatherChanges.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_61(v0 + *(int *)(v1 + 44), v2, &qword_1ED193FF0);
  OUTLINED_FUNCTION_51();
}

void Weather.weatherChanges.setter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_1_35();
  OUTLINED_FUNCTION_63(v1, v0 + *(int *)(v1 + 44), &qword_1ED193FF0);
  OUTLINED_FUNCTION_51();
}

double (*Weather.weatherChanges.modify())(double, double)
{
  OUTLINED_FUNCTION_1_35();
  return GEOLocationCoordinate2DMake;
}

uint64_t Weather.news.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_1_35() + 48));
  return swift_bridgeObjectRetain();
}

void Weather.init(currentWeather:minuteForecast:hourlyForecast:dailyForecast:weatherAlerts:availability:airQuality:weatherChanges:news:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, __int16 *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t *a10)
{
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int16 v31;
  uint64_t v34;

  v30 = *((_BYTE *)a6 + 2);
  v31 = *a6;
  v34 = *a10;
  v15 = (int *)OUTLINED_FUNCTION_1_35();
  v16 = a9 + v15[5];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  OUTLINED_FUNCTION_21(v16, v18, v19, v17);
  v20 = v15[8];
  *(_QWORD *)(a9 + v20) = 0;
  v21 = a9 + v15[10];
  v22 = OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_21(v21, v23, v24, v22);
  v25 = a9 + v15[11];
  v26 = OUTLINED_FUNCTION_57_4();
  OUTLINED_FUNCTION_21(v25, v27, v28, v26);
  sub_1A5FA6658(a1, a9, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
  sub_1A5FA2CA8(a2, v16, &qword_1ED192870);
  sub_1A5FA3C64(a3, a9 + v15[6], (uint64_t *)&unk_1ED193AB8);
  sub_1A5FA3C64(a4, a9 + v15[7], (uint64_t *)&unk_1ED193A90);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v20) = a5;
  v29 = a9 + v15[9];
  *(_WORD *)v29 = v31;
  *(_BYTE *)(v29 + 2) = v30;
  sub_1A5FA2CA8(a7, v21, &qword_1ED193508);
  sub_1A5FA2CA8(a8, v25, &qword_1ED193FF0);
  *(_QWORD *)(a9 + v15[12]) = v34;
}

uint64_t sub_1A607B1FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v14;

  v2 = a1 == 0x57746E6572727563 && a2 == 0xEE00726568746165;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F466574756E696DLL && a2 == 0xEE00747361636572;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6F46796C72756F68 && a2 == 0xEE00747361636572;
      if (v7 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x726F46796C696164 && a2 == 0xED00007473616365;
        if (v8 || (sub_1A6123CF8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x4172656874616577 && a2 == 0xED0000737472656CLL;
          if (v9 || (sub_1A6123CF8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6962616C69617661 && a2 == 0xEC0000007974696CLL;
            if (v10 || (sub_1A6123CF8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x696C617551726961 && a2 == 0xEA00000000007974;
              if (v11 || (sub_1A6123CF8() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x4372656874616577 && a2 == 0xEE007365676E6168;
                if (v12 || (sub_1A6123CF8() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 1937204590 && a2 == 0xE400000000000000)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v14 = sub_1A6123CF8();
                  swift_bridgeObjectRelease();
                  if ((v14 & 1) != 0)
                    return 8;
                  else
                    return 9;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1A607B66C()
{
  return 9;
}

uint64_t sub_1A607B674(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A607B6B4 + 4 * byte_1A6133810[a1]))(0x57746E6572727563, 0xEE00726568746165);
}

uint64_t sub_1A607B6B4()
{
  return 0x6F466574756E696DLL;
}

uint64_t sub_1A607B6E8()
{
  return 0x726F46796C696164;
}

uint64_t sub_1A607B70C()
{
  return 0x4172656874616577;
}

uint64_t sub_1A607B730()
{
  return 0x6962616C69617661;
}

uint64_t sub_1A607B750()
{
  return 0x696C617551726961;
}

uint64_t sub_1A607B76C()
{
  return 0x4372656874616577;
}

uint64_t sub_1A607B790()
{
  return 1937204590;
}

uint64_t sub_1A607B7A0()
{
  unsigned __int8 *v0;

  return sub_1A607B674(*v0);
}

uint64_t sub_1A607B7A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A607B1FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A607B7CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A607B66C();
  *a1 = result;
  return result;
}

uint64_t sub_1A607B7F0()
{
  sub_1A607CE7C();
  return sub_1A6123DE8();
}

uint64_t sub_1A607B818()
{
  sub_1A607CE7C();
  return sub_1A6123DF4();
}

void static Weather.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  char v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;

  v102 = OUTLINED_FUNCTION_57_4();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_28_14(v7, v95);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191AE0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_72();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_151();
  v99 = v10;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v11);
  v109 = (char *)&v95 - v12;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v13);
  v104 = (uint64_t)&v95 - v14;
  v106 = OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_11_0();
  v100 = v16;
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190CC0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_11_0();
  v107 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_151();
  v103 = v20;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v21);
  v108 = (uint64_t)&v95 - v22;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v23);
  v110 = (uint64_t)&v95 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190E38);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_27_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v95 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v95 - v35;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v95 - v38;
  if ((static CurrentWeather.== infix(_:_:)(a1, a2) & 1) == 0)
    goto LABEL_53;
  v95 = v2;
  v40 = OUTLINED_FUNCTION_1_35();
  v41 = *(int *)(v40 + 20);
  v96 = a1;
  v42 = a1 + v41;
  v43 = (int *)v40;
  OUTLINED_FUNCTION_35_14(v42, (uint64_t)v39);
  v44 = v43[5];
  v97 = a2;
  OUTLINED_FUNCTION_35_14(a2 + v44, (uint64_t)v36);
  v45 = v3 + *(int *)(v29 + 48);
  OUTLINED_FUNCTION_35_14((uint64_t)v39, v3);
  OUTLINED_FUNCTION_35_14((uint64_t)v36, v45);
  OUTLINED_FUNCTION_26_2(v3, 1, v25);
  if (!v48)
  {
    OUTLINED_FUNCTION_61(v3, v46, &qword_1ED192870);
    OUTLINED_FUNCTION_26_2(v45, 1, v25);
    v47 = v110;
    if (!v48)
    {
      sub_1A5FA3C64(v45, (uint64_t)v28, &qword_1ED193AE0);
      v51 = sub_1A6027E08((uint64_t)v33, (uint64_t)v28);
      OUTLINED_FUNCTION_18_0((uint64_t)v28);
      OUTLINED_FUNCTION_77((uint64_t)v36);
      OUTLINED_FUNCTION_77((uint64_t)v39);
      OUTLINED_FUNCTION_18_0((uint64_t)v33);
      OUTLINED_FUNCTION_77(v3);
      if ((v51 & 1) == 0)
        goto LABEL_53;
      goto LABEL_13;
    }
    OUTLINED_FUNCTION_18_0((uint64_t)v36);
    OUTLINED_FUNCTION_18_0((uint64_t)v39);
    sub_1A5FAFD58((uint64_t)v33, &qword_1ED193AE0);
LABEL_10:
    v49 = &qword_1ED190E38;
    v50 = v3;
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_40_0((uint64_t)v36);
  OUTLINED_FUNCTION_40_0((uint64_t)v39);
  OUTLINED_FUNCTION_26_2(v45, 1, v25);
  v47 = v110;
  if (!v48)
    goto LABEL_10;
  sub_1A5FAFD58(v3, &qword_1ED192870);
LABEL_13:
  v53 = v96;
  v52 = v97;
  if ((sub_1A5FB2094(v96 + v43[6], v97 + v43[6]) & 1) != 0 && (sub_1A5FB20A8(v53 + v43[7], v52 + v43[7]) & 1) != 0)
  {
    v54 = v43;
    v55 = v43[8];
    v56 = *(_QWORD *)(v52 + v55);
    if (*(_QWORD *)(v53 + v55))
    {
      v57 = v95;
      v58 = (uint64_t)v109;
      if (!v56)
        goto LABEL_53;
      swift_bridgeObjectRetain();
      v59 = swift_bridgeObjectRetain();
      sub_1A5FC8174(v59, v56, v60, v61, v62, v63, v64, v65, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105,
        v106);
      v67 = v66;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v67 & 1) == 0)
        goto LABEL_53;
    }
    else
    {
      v57 = v95;
      v58 = (uint64_t)v109;
      if (v56)
        goto LABEL_53;
    }
    sub_1A5FB1724();
    if ((v68 & 1) == 0)
      goto LABEL_53;
    sub_1A5FB1724();
    if ((v69 & 1) == 0)
      goto LABEL_53;
    sub_1A5FB1724();
    if ((v70 & 1) == 0)
      goto LABEL_53;
    OUTLINED_FUNCTION_16_0(v53 + v54[10], v47);
    v71 = v108;
    OUTLINED_FUNCTION_16_0(v52 + v54[10], v108);
    v72 = v107;
    v73 = v107 + *(int *)(v105 + 48);
    OUTLINED_FUNCTION_16_0(v47, v107);
    v110 = v73;
    OUTLINED_FUNCTION_16_0(v71, v73);
    v74 = v106;
    OUTLINED_FUNCTION_26_2(v72, 1, v106);
    if (v48)
    {
      OUTLINED_FUNCTION_18_0(v71);
      OUTLINED_FUNCTION_18_0(v47);
      OUTLINED_FUNCTION_26_2(v110, 1, v74);
      v75 = v104;
      if (v48)
      {
        sub_1A5FAFD58(v72, &qword_1ED193508);
        goto LABEL_33;
      }
    }
    else
    {
      v76 = v103;
      sub_1A5FA25BC(v72, v103, &qword_1ED193508);
      v77 = v110;
      OUTLINED_FUNCTION_26_2(v110, 1, v74);
      if (!v78)
      {
        v79 = v77;
        v80 = v47;
        v81 = v100;
        sub_1A5FA6658(v79, v100, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
        LODWORD(v110) = static AirQuality.== infix(_:_:)(v76, v81);
        sub_1A5FA1740(v81, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
        OUTLINED_FUNCTION_77(v108);
        OUTLINED_FUNCTION_77(v80);
        v75 = v104;
        sub_1A5FA1740(v76, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
        OUTLINED_FUNCTION_77(v72);
        if ((v110 & 1) == 0)
          goto LABEL_53;
LABEL_33:
        OUTLINED_FUNCTION_16_0(v53 + v54[11], v75);
        OUTLINED_FUNCTION_16_0(v52 + v54[11], v58);
        v82 = v57 + *(int *)(v101 + 48);
        OUTLINED_FUNCTION_16_0(v75, v57);
        OUTLINED_FUNCTION_16_0(v58, v82);
        v83 = v102;
        OUTLINED_FUNCTION_26_2(v57, 1, v102);
        if (v48)
        {
          OUTLINED_FUNCTION_18_0(v58);
          OUTLINED_FUNCTION_18_0(v75);
          OUTLINED_FUNCTION_26_2(v82, 1, v83);
          if (v48)
          {
            sub_1A5FAFD58(v57, &qword_1ED193FF0);
            goto LABEL_38;
          }
        }
        else
        {
          v87 = v99;
          sub_1A5FA25BC(v57, v99, &qword_1ED193FF0);
          OUTLINED_FUNCTION_26_2(v82, 1, v83);
          if (!v88)
          {
            v89 = v82;
            v90 = v98;
            sub_1A5FA6658(v89, v98, (uint64_t (*)(_QWORD))type metadata accessor for WeatherChanges);
            sub_1A5FC8474();
            if ((v91 & 1) != 0)
            {
              static WeatherMetadata.== infix(_:_:)(v87 + *(int *)(v83 + 20), v90 + *(int *)(v83 + 20));
              v92 = v90;
              v94 = v93;
              sub_1A5FA1740(v92, (uint64_t (*)(_QWORD))type metadata accessor for WeatherChanges);
              OUTLINED_FUNCTION_77(v58);
              OUTLINED_FUNCTION_77(v75);
              sub_1A5FA1740(v87, (uint64_t (*)(_QWORD))type metadata accessor for WeatherChanges);
              OUTLINED_FUNCTION_77(v57);
              if ((v94 & 1) == 0)
                goto LABEL_53;
LABEL_38:
              v84 = v54[12];
              v85 = *(_QWORD *)(v53 + v84);
              v86 = *(_QWORD *)(v52 + v84);
              if (v85)
              {
                if (v86)
                {
                  swift_bridgeObjectRetain_n();
                  swift_bridgeObjectRetain();
                  sub_1A5FC73E0(v85, v86);
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  goto LABEL_53;
                }
                swift_bridgeObjectRetain();
              }
              else if (!v86)
              {
                goto LABEL_53;
              }
              swift_bridgeObjectRelease();
              goto LABEL_53;
            }
            sub_1A5FA1740(v90, (uint64_t (*)(_QWORD))type metadata accessor for WeatherChanges);
            OUTLINED_FUNCTION_18_0(v58);
            OUTLINED_FUNCTION_18_0(v75);
            sub_1A5FA1740(v87, (uint64_t (*)(_QWORD))type metadata accessor for WeatherChanges);
            v50 = v57;
            v49 = &qword_1ED193FF0;
LABEL_11:
            sub_1A5FAFD58(v50, v49);
            goto LABEL_53;
          }
          OUTLINED_FUNCTION_40_0(v58);
          OUTLINED_FUNCTION_40_0(v75);
          sub_1A5FA1740(v87, (uint64_t (*)(_QWORD))type metadata accessor for WeatherChanges);
        }
        v49 = &qword_1ED191AE0;
        v50 = v57;
        goto LABEL_11;
      }
      OUTLINED_FUNCTION_40_0(v108);
      OUTLINED_FUNCTION_40_0(v47);
      sub_1A5FA1740(v76, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
    }
    v49 = &qword_1ED190CC0;
    v50 = v72;
    goto LABEL_11;
  }
LABEL_53:
  OUTLINED_FUNCTION_0_0();
}

void Weather.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8156F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_12();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A607CE7C();
  sub_1A6123DD0();
  type metadata accessor for CurrentWeather();
  sub_1A5FAF4C0(&qword_1ED1916E8, (void (*)(uint64_t))type metadata accessor for CurrentWeather);
  OUTLINED_FUNCTION_19_17();
  OUTLINED_FUNCTION_13_0();
  if (!v1)
  {
    type metadata accessor for Weather();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_30_10(&qword_1ED1914A8);
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_30_10(&qword_1ED1914A0);
    OUTLINED_FUNCTION_10_28();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_30_10(&qword_1ED191498);
    OUTLINED_FUNCTION_10_28();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192648);
    sub_1A6027E90(&qword_1ED1914F0, &qword_1ED1910B0, (uint64_t)&protocol conformance descriptor for WeatherAlert, MEMORY[0x1E0DEAF10]);
    OUTLINED_FUNCTION_7_2();
    sub_1A6036F70();
    OUTLINED_FUNCTION_13_0();
    type metadata accessor for AirQuality();
    sub_1A5FAF4C0(&qword_1ED1910E8, (void (*)(uint64_t))type metadata accessor for AirQuality);
    OUTLINED_FUNCTION_7_2();
    type metadata accessor for WeatherChanges();
    sub_1A5FAF4C0(&qword_1EE813EF8, (void (*)(uint64_t))type metadata accessor for WeatherChanges);
    OUTLINED_FUNCTION_7_2();
    sub_1A607CEB8();
    OUTLINED_FUNCTION_7_2();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  OUTLINED_FUNCTION_20();
}

void Weather.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_0();
  v37 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_11_0();
  v38 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_11_0();
  v39 = v9;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_11_0();
  v40 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_11_0();
  v41 = v13;
  type metadata accessor for CurrentWeather();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_28_14(v15, v35);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815708);
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_72();
  v16 = (int *)type metadata accessor for Weather();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_12();
  v19 = v2 + *(int *)(v18 + 20);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  v47 = v19;
  v21 = OUTLINED_FUNCTION_37_8();
  __swift_storeEnumTagSinglePayload(v21, v22, v23, v20);
  v45 = v16[8];
  *(_QWORD *)(v2 + v45) = 0;
  v24 = v2 + v16[10];
  v25 = type metadata accessor for AirQuality();
  v44 = v24;
  v26 = OUTLINED_FUNCTION_37_8();
  __swift_storeEnumTagSinglePayload(v26, v27, v28, v25);
  v48 = v2;
  v29 = v2 + v16[11];
  v30 = type metadata accessor for WeatherChanges();
  v31 = OUTLINED_FUNCTION_37_8();
  __swift_storeEnumTagSinglePayload(v31, v32, v33, v30);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A607CE7C();
  sub_1A6123DC4();
  if (v46)
  {
    OUTLINED_FUNCTION_49_7();
    sub_1A5FAFD58(v47, &qword_1ED192870);
    swift_bridgeObjectRelease();
    sub_1A5FAFD58(v44, &qword_1ED193508);
    sub_1A5FAFD58(v29, &qword_1ED193FF0);
  }
  else
  {
    sub_1A5FAF4C0(&qword_1EE813D28, (void (*)(uint64_t))type metadata accessor for CurrentWeather);
    OUTLINED_FUNCTION_19_17();
    sub_1A6123C44();
    sub_1A5FA6658(v42, v48, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
    sub_1A5FA3DEC(&qword_1EE813D30, &qword_1ED193AE0);
    OUTLINED_FUNCTION_19_17();
    sub_1A6123BFC();
    sub_1A5FA2CA8(v41, v47, &qword_1ED192870);
    sub_1A5FA3DEC(&qword_1EE813D38, (uint64_t *)&unk_1ED193AB8);
    OUTLINED_FUNCTION_19_17();
    OUTLINED_FUNCTION_26_13();
    sub_1A5FA3C64(v40, v48 + MEMORY[0x18], (uint64_t *)&unk_1ED193AB8);
    LOBYTE(v49) = 3;
    sub_1A5FA3DEC(&qword_1EE813D40, (uint64_t *)&unk_1ED193A90);
    OUTLINED_FUNCTION_19_17();
    OUTLINED_FUNCTION_26_13();
    sub_1A5FA3C64(v39, v48 + MEMORY[0x1C], (uint64_t *)&unk_1ED193A90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192648);
    sub_1A6027E90(&qword_1EE813D50, &qword_1EE813D58, (uint64_t)&protocol conformance descriptor for WeatherAlert, MEMORY[0x1E0DEAF40]);
    OUTLINED_FUNCTION_18_2();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v48 + v45) = v49;
    sub_1A6037068();
    OUTLINED_FUNCTION_26_13();
    v34 = v48 + v16[9];
    *(_WORD *)v34 = v49;
    *(_BYTE *)(v34 + 2) = BYTE2(v49);
    sub_1A5FAF4C0(&qword_1EE813D48, (void (*)(uint64_t))type metadata accessor for AirQuality);
    OUTLINED_FUNCTION_19_17();
    sub_1A6123BFC();
    sub_1A5FA2CA8(v38, v44, &qword_1ED193508);
    LOBYTE(v49) = 7;
    sub_1A5FAF4C0(&qword_1EE813F18, (void (*)(uint64_t))type metadata accessor for WeatherChanges);
    OUTLINED_FUNCTION_19_17();
    OUTLINED_FUNCTION_18_2();
    sub_1A5FA2CA8(v37, v29, &qword_1ED193FF0);
    sub_1A607CEF4();
    OUTLINED_FUNCTION_18_2();
    OUTLINED_FUNCTION_16_24();
    *(_QWORD *)(v48 + v16[12]) = v49;
    sub_1A5F89964(v48, a2, (uint64_t (*)(_QWORD))type metadata accessor for Weather);
    OUTLINED_FUNCTION_49_7();
    sub_1A5FA1740(v48, (uint64_t (*)(_QWORD))type metadata accessor for Weather);
  }
  OUTLINED_FUNCTION_20();
}

void sub_1A607CB18(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  Weather.init(from:)(a1, a2);
}

void sub_1A607CB2C(_QWORD *a1)
{
  Weather.encode(to:)(a1);
}

void Weather.isExpired.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;

  v3 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_0();
  v29 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_27_9();
  v10 = sub_1A6121F58();
  v11 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_33_10();
  type metadata accessor for CurrentWeather();
  v13 = type metadata accessor for WeatherMetadata();
  sub_1A5FAF4C0(&qword_1ED191E98, v11);
  v15 = v14;
  v30 = OUTLINED_FUNCTION_44_6();
  v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  OUTLINED_FUNCTION_45_7();
  v17 = (int *)OUTLINED_FUNCTION_1_35();
  v18 = v3;
  sub_1A5FA25BC(v3 + v17[10], v2, &qword_1ED193508);
  v19 = OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_26_2(v2, 1, v19);
  v32 = v16;
  v33 = v15;
  v31 = v13;
  if (v20)
  {
    sub_1A5FAFD58(v2, &qword_1ED193508);
    HIDWORD(v28) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_33_10();
    HIDWORD(v28) = OUTLINED_FUNCTION_44_6() ^ 1;
    OUTLINED_FUNCTION_45_7();
    sub_1A5FA1740(v2, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
  }
  v21 = &qword_1ED192870;
  sub_1A5FA25BC(v18 + v17[5], (uint64_t)v8, &qword_1ED192870);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  OUTLINED_FUNCTION_26_2((uint64_t)v8, 1, v22);
  v23 = v29;
  if (!v20)
  {
    OUTLINED_FUNCTION_33_10();
    sub_1A61237AC();
    v32(v1, v10);
    v21 = &qword_1ED193AE0;
  }
  sub_1A5FAFD58((uint64_t)v8, v21);
  v25 = *(_QWORD *)(v18 + v17[8]);
  if (v25)
    Array<A>.isExpired.getter(v25);
  v26 = v32;
  OUTLINED_FUNCTION_61(v18 + v17[11], v24, &qword_1ED193FF0);
  v27 = OUTLINED_FUNCTION_57_4();
  OUTLINED_FUNCTION_26_2(v23, 1, v27);
  if (v20)
  {
    sub_1A5FAFD58(v23, &qword_1ED193FF0);
  }
  else
  {
    OUTLINED_FUNCTION_33_10();
    sub_1A61237AC();
    v26(v1, v10);
    sub_1A5FA1740(v23, (uint64_t (*)(_QWORD))type metadata accessor for WeatherChanges);
  }
  OUTLINED_FUNCTION_34_11();
  OUTLINED_FUNCTION_0_0();
}

unint64_t sub_1A607CE7C()
{
  unint64_t result;

  result = qword_1EE8156F8;
  if (!qword_1EE8156F8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61339EC, &type metadata for Weather.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8156F8);
  }
  return result;
}

unint64_t sub_1A607CEB8()
{
  unint64_t result;

  result = qword_1EE815700;
  if (!qword_1EE815700)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for News, &type metadata for News);
    atomic_store(result, (unint64_t *)&qword_1EE815700);
  }
  return result;
}

unint64_t sub_1A607CEF4()
{
  unint64_t result;

  result = qword_1EE815710;
  if (!qword_1EE815710)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for News, &type metadata for News);
    atomic_store(result, (unint64_t *)&qword_1EE815710);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Weather(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  int *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  int *v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  int *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  int *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  int *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  int *v156;
  uint64_t v157;
  uint64_t v158;
  void (*v159)(char *, char *, uint64_t);
  int *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t *v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  _QWORD *v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  void (*__dst)(char *, char *);
  char *__dsta;
  uint64_t v225;
  int *v226;
  uint64_t v227;
  void (*v228)(char *, char *, uint64_t);
  void (*v229)(char *, char *, uint64_t);
  _QWORD *v231;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v80 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v80 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v227 = sub_1A6121F58();
    v228 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 16);
    ((void (*)(_QWORD *, _QWORD *))v228)(a1, v3);
    v6 = (int *)type metadata accessor for CurrentWeather();
    *(_QWORD *)((char *)a1 + v6[5]) = *(_QWORD *)((char *)v3 + v6[5]);
    *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)v3 + v6[6]);
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)v3 + v6[7]);
    *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)v3 + v6[8]);
    v7 = v6[9];
    v8 = (char *)a1 + v7;
    v9 = (char *)v3 + v7;
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
    *((_BYTE *)a1 + v6[10]) = *((_BYTE *)v3 + v6[10]);
    v10 = v6[11];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)v3 + v10);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = v6[12];
    v15 = (char *)a1 + v14;
    v16 = (char *)v3 + v14;
    swift_bridgeObjectRetain();
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
    v229 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v229(v15, v16, v17);
    *(_QWORD *)((char *)a1 + v6[13]) = *(_QWORD *)((char *)v3 + v6[13]);
    v18 = v6[14];
    v19 = (char *)a1 + v18;
    v20 = (char *)v3 + v18;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
    __dst = *(void (**)(char *, char *))(*(_QWORD *)(v21 - 8) + 16);
    v225 = v21;
    __dst(v19, v20);
    v22 = v6[15];
    v23 = (char *)a1 + v22;
    v24 = (char *)v3 + v22;
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    *((_BYTE *)a1 + v6[16]) = *((_BYTE *)v3 + v6[16]);
    v26 = v6[17];
    v27 = (char *)a1 + v26;
    v28 = (char *)v3 + v26;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
    v30(v27, v28, v29);
    v31 = (int *)type metadata accessor for PrecipitationAmount();
    v30(&v27[v31[5]], &v28[v31[5]], v29);
    v30(&v27[v31[6]], &v28[v31[6]], v29);
    v30(&v27[v31[7]], &v28[v31[7]], v29);
    v30(&v27[v31[8]], &v28[v31[8]], v29);
    v30(&v27[v31[9]], &v28[v31[9]], v29);
    v32 = v6[18];
    v33 = (char *)a1 + v32;
    v34 = (char *)v3 + v32;
    v30((char *)a1 + v32, (char *)v3 + v32, v29);
    v30(&v33[v31[5]], &v34[v31[5]], v29);
    v30(&v33[v31[6]], &v34[v31[6]], v29);
    v30(&v33[v31[7]], &v34[v31[7]], v29);
    v30(&v33[v31[8]], &v34[v31[8]], v29);
    v30(&v33[v31[9]], &v34[v31[9]], v29);
    v35 = v6[19];
    v36 = (char *)a1 + v35;
    v37 = (char *)v3 + v35;
    v30((char *)a1 + v35, (char *)v3 + v35, v29);
    v38 = (int *)type metadata accessor for PrecipitationAmountByType();
    v30(&v36[v38[5]], &v37[v38[5]], v29);
    v30(&v36[v38[6]], &v37[v38[6]], v29);
    v30(&v36[v38[7]], &v37[v38[7]], v29);
    v30(&v36[v38[8]], &v37[v38[8]], v29);
    v39 = v38[9];
    v40 = &v36[v39];
    v41 = &v37[v39];
    v30(v40, v41, v29);
    v42 = (int *)type metadata accessor for SnowfallAmount();
    v30(&v40[v42[5]], &v41[v42[5]], v29);
    v30(&v40[v42[6]], &v41[v42[6]], v29);
    v30(&v40[v42[7]], &v41[v42[7]], v29);
    v30(&v40[v42[8]], &v41[v42[8]], v29);
    v30(&v40[v42[9]], &v41[v42[9]], v29);
    v43 = v6[20];
    v44 = (char *)a1 + v43;
    v45 = (char *)v3 + v43;
    v30((char *)a1 + v43, (char *)v3 + v43, v29);
    v30(&v44[v38[5]], &v45[v38[5]], v29);
    v30(&v44[v38[6]], &v45[v38[6]], v29);
    v30(&v44[v38[7]], &v45[v38[7]], v29);
    v30(&v44[v38[8]], &v45[v38[8]], v29);
    v46 = v38[9];
    v47 = &v44[v46];
    v48 = &v45[v46];
    v30(v47, v48, v29);
    v30(&v47[v42[5]], &v48[v42[5]], v29);
    v30(&v47[v42[6]], &v48[v42[6]], v29);
    v30(&v47[v42[7]], &v48[v42[7]], v29);
    v30(&v47[v42[8]], &v48[v42[8]], v29);
    v30(&v47[v42[9]], &v48[v42[9]], v29);
    v49 = v6[21];
    v50 = (char *)a1 + v49;
    v51 = (char *)v3 + v49;
    v30((char *)a1 + v49, (char *)v3 + v49, v29);
    v30(&v50[v38[5]], &v51[v38[5]], v29);
    v30(&v50[v38[6]], &v51[v38[6]], v29);
    v30(&v50[v38[7]], &v51[v38[7]], v29);
    v30(&v50[v38[8]], &v51[v38[8]], v29);
    v52 = v38[9];
    v53 = &v50[v52];
    v54 = &v51[v52];
    v30(v53, v54, v29);
    v30(&v53[v42[5]], &v54[v42[5]], v29);
    v30(&v53[v42[6]], &v54[v42[6]], v29);
    v30(&v53[v42[7]], &v54[v42[7]], v29);
    v30(&v53[v42[8]], &v54[v42[8]], v29);
    v30(&v53[v42[9]], &v54[v42[9]], v29);
    v55 = v6[22];
    v56 = (char *)a1 + v55;
    v57 = (char *)v3 + v55;
    v30((char *)a1 + v55, (char *)v3 + v55, v29);
    v30(&v56[v38[5]], &v57[v38[5]], v29);
    v30(&v56[v38[6]], &v57[v38[6]], v29);
    v30(&v56[v38[7]], &v57[v38[7]], v29);
    v30(&v56[v38[8]], &v57[v38[8]], v29);
    v58 = v38[9];
    v59 = &v56[v58];
    v60 = &v57[v58];
    v30(v59, v60, v29);
    v30(&v59[v42[5]], &v60[v42[5]], v29);
    v30(&v59[v42[6]], &v60[v42[6]], v29);
    v30(&v59[v42[7]], &v60[v42[7]], v29);
    v30(&v59[v42[8]], &v60[v42[8]], v29);
    v30(&v59[v42[9]], &v60[v42[9]], v29);
    v61 = v6[23];
    v62 = (char *)a1 + v61;
    v63 = (char *)v3 + v61;
    v30((char *)a1 + v61, (char *)v3 + v61, v29);
    v30(&v62[v38[5]], &v63[v38[5]], v29);
    v30(&v62[v38[6]], &v63[v38[6]], v29);
    v30(&v62[v38[7]], &v63[v38[7]], v29);
    v30(&v62[v38[8]], &v63[v38[8]], v29);
    v64 = v38[9];
    v65 = &v62[v64];
    v66 = &v63[v64];
    v30(v65, v66, v29);
    v30(&v65[v42[5]], &v66[v42[5]], v29);
    v30(&v65[v42[6]], &v66[v42[6]], v29);
    v30(&v65[v42[7]], &v66[v42[7]], v29);
    v30(&v65[v42[8]], &v66[v42[8]], v29);
    v30(&v65[v42[9]], &v66[v42[9]], v29);
    v67 = v6[24];
    v68 = (char *)a1 + v67;
    v69 = (char *)v3 + v67;
    v30((char *)a1 + v67, (char *)v3 + v67, v29);
    v30(&v68[v38[5]], &v69[v38[5]], v29);
    v30(&v68[v38[6]], &v69[v38[6]], v29);
    v30(&v68[v38[7]], &v69[v38[7]], v29);
    v30(&v68[v38[8]], &v69[v38[8]], v29);
    v70 = v38[9];
    v71 = &v68[v70];
    v72 = &v69[v70];
    v30(v71, v72, v29);
    v30(&v71[v42[5]], &v72[v42[5]], v29);
    v30(&v71[v42[6]], &v72[v42[6]], v29);
    v30(&v71[v42[7]], &v72[v42[7]], v29);
    v30(&v71[v42[8]], &v72[v42[8]], v29);
    v30(&v71[v42[9]], &v72[v42[9]], v29);
    v73 = v6[25];
    v74 = (char *)a1 + v73;
    v75 = (char *)v3 + v73;
    *(_QWORD *)v74 = *(_QWORD *)v75;
    v74[8] = v75[8];
    *((_BYTE *)a1 + v6[26]) = *((_BYTE *)v3 + v6[26]);
    v229((char *)a1 + v6[27], (char *)v3 + v6[27], v17);
    v229((char *)a1 + v6[28], (char *)v3 + v6[28], v17);
    v76 = v6[29];
    v77 = (char *)a1 + v76;
    v78 = (char *)v3 + v76;
    v231 = v3;
    if (__swift_getEnumTagSinglePayload((uint64_t)v3 + v76, 1, v17))
    {
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      v229(v77, v78, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v77, 0, 1, v17);
    }
    v81 = v228;
    v82 = v6[30];
    v83 = (char *)a1 + v82;
    v84 = (char *)v3 + v82;
    if (__swift_getEnumTagSinglePayload((uint64_t)v3 + v82, 1, v17))
    {
      v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
      memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      v229(v83, v84, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v17);
    }
    v86 = v6[31];
    v87 = (char *)a1 + v86;
    v88 = (char *)v3 + v86;
    *(_QWORD *)v87 = *(_QWORD *)v88;
    v87[8] = v88[8];
    v30((char *)a1 + v6[32], (char *)v3 + v6[32], v29);
    v89 = v6[33];
    v90 = (char *)a1 + v89;
    v91 = (char *)v3 + v89;
    *((_BYTE *)a1 + v89) = *((_BYTE *)v3 + v89);
    v92 = (int *)type metadata accessor for Wind();
    v93 = v92[5];
    v94 = &v90[v93];
    v95 = &v91[v93];
    v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v94, v95, v96);
    ((void (*)(char *, char *, uint64_t))__dst)(&v90[v92[6]], &v91[v92[6]], v225);
    v97 = v92[7];
    v98 = &v90[v97];
    v99 = &v91[v97];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v91[v97], 1, v225))
    {
      v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
      memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))__dst)(v98, v99, v225);
      __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, v225);
    }
    v101 = v6[34];
    v102 = (char *)a1 + v101;
    v103 = (char *)v3 + v101;
    v228((char *)a1 + v101, (char *)v3 + v101, v227);
    v104 = (int *)type metadata accessor for WeatherMetadata();
    v228(&v102[v104[5]], &v103[v104[5]], v227);
    *(_QWORD *)&v102[v104[6]] = *(_QWORD *)&v103[v104[6]];
    *(_QWORD *)&v102[v104[7]] = *(_QWORD *)&v103[v104[7]];
    *(_QWORD *)&v102[v104[8]] = *(_QWORD *)&v103[v104[8]];
    v105 = a3[5];
    v106 = (_QWORD *)((char *)a1 + v105);
    v107 = (_QWORD *)((char *)v3 + v105);
    swift_retain();
    v108 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v107, 1, (uint64_t)v108))
    {
      v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
      memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
    }
    else
    {
      *v106 = *v107;
      v110 = v108[13];
      v111 = (char *)v106 + v110;
      v112 = (char *)v107 + v110;
      swift_bridgeObjectRetain();
      v228(v111, v112, v227);
      v228(&v111[v104[5]], &v112[v104[5]], v227);
      *(_QWORD *)&v111[v104[6]] = *(_QWORD *)&v112[v104[6]];
      *(_QWORD *)&v111[v104[7]] = *(_QWORD *)&v112[v104[7]];
      *(_QWORD *)&v111[v104[8]] = *(_QWORD *)&v112[v104[8]];
      v113 = v108[14];
      v114 = (_QWORD *)((char *)v106 + v113);
      v115 = (_QWORD *)((char *)v107 + v113);
      v116 = v115[1];
      *v114 = *v115;
      v114[1] = v116;
      *(_QWORD *)((char *)v106 + v108[15]) = *(_QWORD *)((char *)v107 + v108[15]);
      *(_QWORD *)((char *)v106 + v108[16]) = *(_QWORD *)((char *)v107 + v108[16]);
      v117 = v108[17];
      v118 = (char *)v106 + v117;
      v119 = (char *)v107 + v117;
      v118[16] = v119[16];
      *(_OWORD *)v118 = *(_OWORD *)v119;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v81 = v228;
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, (uint64_t)v108);
    }
    v120 = a3[6];
    v121 = (char *)a1 + v120;
    v122 = (char *)v3 + v120;
    *(_QWORD *)((char *)a1 + v120) = *(_QWORD *)((char *)v3 + v120);
    swift_bridgeObjectRetain();
    v123 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
    v124 = v123[13];
    v125 = &v121[v124];
    v126 = &v122[v124];
    v81(&v121[v124], &v122[v124], v227);
    v81(&v125[v104[5]], &v126[v104[5]], v227);
    *(_QWORD *)&v125[v104[6]] = *(_QWORD *)&v126[v104[6]];
    *(_QWORD *)&v125[v104[7]] = *(_QWORD *)&v126[v104[7]];
    *(_QWORD *)&v125[v104[8]] = *(_QWORD *)&v126[v104[8]];
    v127 = v123[14];
    v128 = &v121[v127];
    v129 = &v122[v127];
    v130 = *((_QWORD *)v129 + 1);
    *(_QWORD *)v128 = *(_QWORD *)v129;
    *((_QWORD *)v128 + 1) = v130;
    *(_QWORD *)&v121[v123[15]] = *(_QWORD *)&v122[v123[15]];
    *(_QWORD *)&v121[v123[16]] = *(_QWORD *)&v122[v123[16]];
    v131 = v123[17];
    v132 = &v121[v131];
    v133 = &v122[v131];
    *(_OWORD *)v132 = *(_OWORD *)v133;
    v132[16] = v133[16];
    v134 = a3[7];
    v135 = (char *)a1 + v134;
    v136 = (char *)v3 + v134;
    *(_QWORD *)((char *)a1 + v134) = *(_QWORD *)((char *)v3 + v134);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v137 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
    v138 = v137[13];
    v139 = &v135[v138];
    v140 = &v136[v138];
    v81(&v135[v138], &v136[v138], v227);
    v81(&v139[v104[5]], &v140[v104[5]], v227);
    *(_QWORD *)&v139[v104[6]] = *(_QWORD *)&v140[v104[6]];
    *(_QWORD *)&v139[v104[7]] = *(_QWORD *)&v140[v104[7]];
    v226 = v104;
    *(_QWORD *)&v139[v104[8]] = *(_QWORD *)&v140[v104[8]];
    v141 = v137[14];
    v142 = &v135[v141];
    v143 = &v136[v141];
    v144 = *((_QWORD *)v143 + 1);
    *(_QWORD *)v142 = *(_QWORD *)v143;
    *((_QWORD *)v142 + 1) = v144;
    *(_QWORD *)&v135[v137[15]] = *(_QWORD *)&v136[v137[15]];
    *(_QWORD *)&v135[v137[16]] = *(_QWORD *)&v136[v137[16]];
    v145 = v137[17];
    v146 = &v135[v145];
    v147 = &v136[v145];
    v148 = *(_OWORD *)v147;
    v146[16] = v147[16];
    v149 = a3[8];
    v150 = a3[9];
    v151 = *(_QWORD *)((char *)v3 + v149);
    *(_OWORD *)v146 = v148;
    *(_QWORD *)((char *)a1 + v149) = v151;
    v152 = (char *)a1 + v150;
    *(_WORD *)v152 = *(_WORD *)((char *)v3 + v150);
    v152[2] = *((_BYTE *)v3 + v150 + 2);
    v153 = a3[10];
    v154 = (char *)a1 + v153;
    v155 = (char *)v3 + v153;
    v156 = (int *)type metadata accessor for AirQuality();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v155, 1, (uint64_t)v156))
    {
      v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
      memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
      v158 = v227;
      v159 = v228;
      v160 = a3;
    }
    else
    {
      v228(v154, v155, v227);
      v228(&v154[v156[5]], &v155[v156[5]], v227);
      v161 = v156[6];
      v162 = &v154[v161];
      v163 = &v155[v161];
      v221 = *((_QWORD *)v163 + 1);
      *(_QWORD *)v162 = *(_QWORD *)v163;
      *((_QWORD *)v162 + 1) = v221;
      v164 = v156[7];
      v165 = &v154[v164];
      v166 = &v155[v164];
      v167 = *((_QWORD *)v166 + 1);
      *(_QWORD *)v165 = *(_QWORD *)v166;
      *((_QWORD *)v165 + 1) = v167;
      v168 = *((_QWORD *)v166 + 3);
      *((_QWORD *)v165 + 2) = *((_QWORD *)v166 + 2);
      *((_QWORD *)v165 + 3) = v168;
      v169 = *((_QWORD *)v166 + 5);
      *((_QWORD *)v165 + 4) = *((_QWORD *)v166 + 4);
      *((_QWORD *)v165 + 5) = v169;
      v170 = *((_QWORD *)v166 + 7);
      *((_QWORD *)v165 + 6) = *((_QWORD *)v166 + 6);
      *((_QWORD *)v165 + 7) = v170;
      v171 = *((_QWORD *)v166 + 9);
      *((_QWORD *)v165 + 8) = *((_QWORD *)v166 + 8);
      *((_QWORD *)v165 + 9) = v171;
      v165[80] = v166[80];
      *(_OWORD *)(v165 + 88) = *(_OWORD *)(v166 + 88);
      v220 = *((_QWORD *)v166 + 14);
      *((_QWORD *)v165 + 13) = *((_QWORD *)v166 + 13);
      *((_QWORD *)v165 + 14) = v220;
      *(_QWORD *)&v154[v156[8]] = *(_QWORD *)&v155[v156[8]];
      v172 = v156[9];
      v173 = &v154[v172];
      v174 = &v155[v172];
      v175 = *((_QWORD *)v174 + 1);
      *(_QWORD *)v173 = *(_QWORD *)v174;
      *((_QWORD *)v173 + 1) = v175;
      *((_OWORD *)v173 + 1) = *((_OWORD *)v174 + 1);
      v176 = *((_QWORD *)v174 + 5);
      *((_QWORD *)v173 + 4) = *((_QWORD *)v174 + 4);
      *((_QWORD *)v173 + 5) = v176;
      *((_QWORD *)v173 + 6) = *((_QWORD *)v174 + 6);
      *(_OWORD *)(v173 + 56) = *(_OWORD *)(v174 + 56);
      v177 = *((_QWORD *)v174 + 10);
      *((_QWORD *)v173 + 9) = *((_QWORD *)v174 + 9);
      *((_QWORD *)v173 + 10) = v177;
      v154[v156[10]] = v155[v156[10]];
      v178 = v156[11];
      __dsta = &v154[v178];
      v179 = &v155[v178];
      v180 = type metadata accessor for ProviderAttribution();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v181 = v180;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v179, 1, v180))
      {
        v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
        memcpy(__dsta, v179, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
        v158 = v227;
        v3 = v231;
      }
      else
      {
        v183 = *((_QWORD *)v179 + 1);
        *(_QWORD *)__dsta = *(_QWORD *)v179;
        *((_QWORD *)__dsta + 1) = v183;
        v222 = v181;
        v184 = *(int *)(v181 + 20);
        v185 = &__dsta[v184];
        v186 = &v179[v184];
        v187 = sub_1A6121DF0();
        swift_bridgeObjectRetain();
        v3 = v231;
        if (__swift_getEnumTagSinglePayload((uint64_t)v186, 1, v187))
        {
          v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
          memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v185, v186, v187);
          __swift_storeEnumTagSinglePayload((uint64_t)v185, 0, 1, v187);
        }
        v158 = v227;
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v222);
      }
      v189 = v156[12];
      v190 = &v154[v189];
      v191 = &v155[v189];
      v192 = sub_1A6121DF0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v190, v191, v192);
      *(_QWORD *)&v154[v156[13]] = *(_QWORD *)&v155[v156[13]];
      v193 = v156[14];
      v194 = &v154[v193];
      v195 = &v155[v193];
      v196 = type metadata accessor for AirPollutant();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v195, 1, v196))
      {
        v197 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
        memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v197 - 8) + 64));
      }
      else
      {
        *v194 = *v195;
        v198 = *(int *)(v196 + 20);
        v199 = &v194[v198];
        v200 = &v195[v198];
        type metadata accessor for AirPollutantMeasurement();
        if (swift_getEnumCaseMultiPayload() == 1)
          v201 = &qword_1ED190B60;
        else
          v201 = &qword_1ED1922B8;
        v202 = __swift_instantiateConcreteTypeFromMangledName(v201);
        v203 = v200;
        v158 = v227;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 16))(v199, v203, v202);
        swift_storeEnumTagMultiPayload();
        v194[*(int *)(v196 + 24)] = v195[*(int *)(v196 + 24)];
        __swift_storeEnumTagSinglePayload((uint64_t)v194, 0, 1, v196);
      }
      v154[v156[15]] = v155[v156[15]];
      v204 = v156[16];
      v205 = &v154[v204];
      v206 = &v155[v204];
      *v205 = *v206;
      v207 = *((_QWORD *)v206 + 2);
      *((_QWORD *)v205 + 1) = *((_QWORD *)v206 + 1);
      *((_QWORD *)v205 + 2) = v207;
      v208 = v156[17];
      v209 = &v154[v208];
      v210 = &v155[v208];
      swift_bridgeObjectRetain();
      v159 = v228;
      v228(v209, v210, v158);
      v228(&v209[v226[5]], &v210[v226[5]], v158);
      *(_QWORD *)&v209[v226[6]] = *(_QWORD *)&v210[v226[6]];
      *(_QWORD *)&v209[v226[7]] = *(_QWORD *)&v210[v226[7]];
      *(_QWORD *)&v209[v226[8]] = *(_QWORD *)&v210[v226[8]];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v154, 0, 1, (uint64_t)v156);
      v160 = a3;
    }
    v211 = v160[11];
    v212 = (_QWORD *)((char *)a1 + v211);
    v213 = (_QWORD *)((char *)v3 + v211);
    v214 = type metadata accessor for WeatherChanges();
    if (__swift_getEnumTagSinglePayload((uint64_t)v213, 1, v214))
    {
      v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
      memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
    }
    else
    {
      *v212 = *v213;
      v216 = *(int *)(v214 + 20);
      v217 = (char *)v212 + v216;
      v218 = (char *)v213 + v216;
      swift_bridgeObjectRetain();
      v159(v217, v218, v158);
      v159(&v217[v226[5]], &v218[v226[5]], v158);
      *(_QWORD *)&v217[v226[6]] = *(_QWORD *)&v218[v226[6]];
      *(_QWORD *)&v217[v226[7]] = *(_QWORD *)&v218[v226[7]];
      *(_QWORD *)&v217[v226[8]] = *(_QWORD *)&v218[v226[8]];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v212, 0, 1, v214);
    }
    *(_QWORD *)((char *)a1 + v160[12]) = *(_QWORD *)((char *)v3 + v160[12]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Weather(uint64_t a1, int *a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  int *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v65)(uint64_t, uint64_t);
  void (*v66)(uint64_t);
  uint64_t v67;

  v3 = sub_1A6121F58();
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(a1, v3);
  v5 = (int *)type metadata accessor for CurrentWeather();
  swift_bridgeObjectRelease();
  v6 = a1 + v5[12];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v65 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v65(v6, v7);
  v8 = a1 + v5[14];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
  v66 = *(void (**)(uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v67 = v9;
  v66(v8);
  v10 = a1 + v5[15];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = a1 + v5[17];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v14(v12, v13);
  v15 = (int *)type metadata accessor for PrecipitationAmount();
  v14(v12 + v15[5], v13);
  v14(v12 + v15[6], v13);
  v14(v12 + v15[7], v13);
  v14(v12 + v15[8], v13);
  v14(v12 + v15[9], v13);
  v16 = a1 + v5[18];
  v14(v16, v13);
  v14(v16 + v15[5], v13);
  v14(v16 + v15[6], v13);
  v14(v16 + v15[7], v13);
  v14(v16 + v15[8], v13);
  v14(v16 + v15[9], v13);
  v17 = a1 + v5[19];
  v14(v17, v13);
  v18 = (int *)type metadata accessor for PrecipitationAmountByType();
  v14(v17 + v18[5], v13);
  v14(v17 + v18[6], v13);
  v14(v17 + v18[7], v13);
  v14(v17 + v18[8], v13);
  v19 = v17 + v18[9];
  v14(v19, v13);
  v20 = (int *)type metadata accessor for SnowfallAmount();
  v14(v19 + v20[5], v13);
  v14(v19 + v20[6], v13);
  v14(v19 + v20[7], v13);
  v14(v19 + v20[8], v13);
  v14(v19 + v20[9], v13);
  v21 = a1 + v5[20];
  v14(v21, v13);
  v14(v21 + v18[5], v13);
  v14(v21 + v18[6], v13);
  v14(v21 + v18[7], v13);
  v14(v21 + v18[8], v13);
  v22 = v21 + v18[9];
  v14(v22, v13);
  v14(v22 + v20[5], v13);
  v14(v22 + v20[6], v13);
  v14(v22 + v20[7], v13);
  v14(v22 + v20[8], v13);
  v14(v22 + v20[9], v13);
  v23 = a1 + v5[21];
  v14(v23, v13);
  v14(v23 + v18[5], v13);
  v14(v23 + v18[6], v13);
  v14(v23 + v18[7], v13);
  v14(v23 + v18[8], v13);
  v24 = v23 + v18[9];
  v14(v24, v13);
  v14(v24 + v20[5], v13);
  v14(v24 + v20[6], v13);
  v14(v24 + v20[7], v13);
  v14(v24 + v20[8], v13);
  v14(v24 + v20[9], v13);
  v25 = a1 + v5[22];
  v14(v25, v13);
  v14(v25 + v18[5], v13);
  v14(v25 + v18[6], v13);
  v14(v25 + v18[7], v13);
  v14(v25 + v18[8], v13);
  v26 = v25 + v18[9];
  v14(v26, v13);
  v14(v26 + v20[5], v13);
  v14(v26 + v20[6], v13);
  v14(v26 + v20[7], v13);
  v14(v26 + v20[8], v13);
  v14(v26 + v20[9], v13);
  v27 = a1 + v5[23];
  v14(v27, v13);
  v14(v27 + v18[5], v13);
  v14(v27 + v18[6], v13);
  v14(v27 + v18[7], v13);
  v14(v27 + v18[8], v13);
  v28 = v27 + v18[9];
  v14(v28, v13);
  v14(v28 + v20[5], v13);
  v14(v28 + v20[6], v13);
  v14(v28 + v20[7], v13);
  v14(v28 + v20[8], v13);
  v14(v28 + v20[9], v13);
  v29 = a1 + v5[24];
  v14(v29, v13);
  v14(v29 + v18[5], v13);
  v14(v29 + v18[6], v13);
  v14(v29 + v18[7], v13);
  v14(v29 + v18[8], v13);
  v30 = v29 + v18[9];
  v14(v30, v13);
  v14(v30 + v20[5], v13);
  v14(v30 + v20[6], v13);
  v14(v30 + v20[7], v13);
  v14(v30 + v20[8], v13);
  v14(v30 + v20[9], v13);
  v65(a1 + v5[27], v7);
  v65(a1 + v5[28], v7);
  v31 = a1 + v5[29];
  if (!__swift_getEnumTagSinglePayload(v31, 1, v7))
    v65(v31, v7);
  v32 = a1 + v5[30];
  if (!__swift_getEnumTagSinglePayload(v32, 1, v7))
    v65(v32, v7);
  v14(a1 + v5[32], v13);
  v33 = a1 + v5[33];
  v34 = (int *)type metadata accessor for Wind();
  v35 = v33 + v34[5];
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
  ((void (*)(uint64_t, uint64_t))v66)(v33 + v34[6], v67);
  v37 = v33 + v34[7];
  if (!__swift_getEnumTagSinglePayload(v37, 1, v67))
    ((void (*)(uint64_t, uint64_t))v66)(v37, v67);
  v38 = a1 + v5[34];
  v4(v38, v3);
  v39 = type metadata accessor for WeatherMetadata();
  v4(v38 + *(int *)(v39 + 20), v3);
  swift_release();
  v40 = a1 + a2[5];
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  if (!__swift_getEnumTagSinglePayload(v40, 1, v41))
  {
    swift_bridgeObjectRelease();
    v42 = v40 + *(int *)(v41 + 52);
    v4(v42, v3);
    v4(v42 + *(int *)(v39 + 20), v3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v43 = a1 + a2[6];
  swift_bridgeObjectRelease();
  v44 = v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8) + 52);
  v4(v44, v3);
  v4(v44 + *(int *)(v39 + 20), v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v45 = a1 + a2[7];
  swift_bridgeObjectRelease();
  v46 = v45 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90) + 52);
  v4(v46, v3);
  v4(v46 + *(int *)(v39 + 20), v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v47 = a1 + a2[10];
  v48 = (int *)type metadata accessor for AirQuality();
  if (!__swift_getEnumTagSinglePayload(v47, 1, (uint64_t)v48))
  {
    v4(v47, v3);
    v4(v47 + v48[5], v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v49 = v47 + v48[11];
    v50 = type metadata accessor for ProviderAttribution();
    if (!__swift_getEnumTagSinglePayload(v49, 1, v50))
    {
      swift_bridgeObjectRelease();
      v51 = v49 + *(int *)(v50 + 20);
      v52 = sub_1A6121DF0();
      if (!__swift_getEnumTagSinglePayload(v51, 1, v52))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
    }
    v53 = v47 + v48[12];
    v54 = sub_1A6121DF0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
    swift_bridgeObjectRelease();
    v55 = v47 + v48[14];
    v56 = type metadata accessor for AirPollutant();
    if (!__swift_getEnumTagSinglePayload(v55, 1, v56))
    {
      v57 = v55 + *(int *)(v56 + 20);
      type metadata accessor for AirPollutantMeasurement();
      if (swift_getEnumCaseMultiPayload() == 1)
        v58 = &qword_1ED190B60;
      else
        v58 = &qword_1ED1922B8;
      v59 = __swift_instantiateConcreteTypeFromMangledName(v58);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v57, v59);
    }
    swift_bridgeObjectRelease();
    v60 = v47 + v48[17];
    v4(v60, v3);
    v4(v60 + *(int *)(v39 + 20), v3);
    swift_release();
  }
  v61 = a1 + a2[11];
  v62 = type metadata accessor for WeatherChanges();
  if (!__swift_getEnumTagSinglePayload(v61, 1, v62))
  {
    swift_bridgeObjectRelease();
    v63 = v61 + *(int *)(v62 + 20);
    v4(v63, v3);
    v4(v63 + *(int *)(v39 + 20), v3);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Weather(uint64_t a1, uint64_t a2, int *a3)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  const void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  int *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 *v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  int *v156;
  uint64_t v157;
  uint64_t v158;
  int *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t *v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  _QWORD *v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v222;
  void (*v223)(uint64_t, uint64_t, uint64_t);
  uint64_t v224;
  uint64_t v225;
  void (*v226)(uint64_t, uint64_t);
  int *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  void (*v231)(uint64_t, uint64_t);
  uint64_t v233;

  v228 = sub_1A6121F58();
  v231 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v228 - 8) + 16);
  v231(a1, a2);
  v5 = (int *)type metadata accessor for CurrentWeather();
  *(_QWORD *)(a1 + v5[5]) = *(_QWORD *)(a2 + v5[5]);
  *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
  *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
  *(_QWORD *)(a1 + v5[8]) = *(_QWORD *)(a2 + v5[8]);
  v6 = v5[9];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_BYTE *)(a1 + v5[10]) = *(_BYTE *)(a2 + v5[10]);
  v9 = v5[11];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = v5[12];
  v14 = a1 + v13;
  v15 = a2 + v13;
  swift_bridgeObjectRetain();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v223 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v223(v14, v15, v16);
  *(_QWORD *)(a1 + v5[13]) = *(_QWORD *)(a2 + v5[13]);
  v17 = v5[14];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
  v226 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v229 - 8) + 16);
  v226(v18, v19);
  v20 = v5[15];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  *(_BYTE *)(a1 + v5[16]) = *(_BYTE *)(a2 + v5[16]);
  v24 = v5[17];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  v28(v25, v26, v27);
  v29 = (int *)type metadata accessor for PrecipitationAmount();
  v28(v25 + v29[5], v26 + v29[5], v27);
  v28(v25 + v29[6], v26 + v29[6], v27);
  v28(v25 + v29[7], v26 + v29[7], v27);
  v28(v25 + v29[8], v26 + v29[8], v27);
  v28(v25 + v29[9], v26 + v29[9], v27);
  v30 = v5[18];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v28(a1 + v30, a2 + v30, v27);
  v28(v31 + v29[5], v32 + v29[5], v27);
  v28(v31 + v29[6], v32 + v29[6], v27);
  v28(v31 + v29[7], v32 + v29[7], v27);
  v28(v31 + v29[8], v32 + v29[8], v27);
  v28(v31 + v29[9], v32 + v29[9], v27);
  v33 = v5[19];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v28(a1 + v33, a2 + v33, v27);
  v36 = (int *)type metadata accessor for PrecipitationAmountByType();
  v28(v34 + v36[5], v35 + v36[5], v27);
  v28(v34 + v36[6], v35 + v36[6], v27);
  v28(v34 + v36[7], v35 + v36[7], v27);
  v28(v34 + v36[8], v35 + v36[8], v27);
  v37 = v36[9];
  v38 = v34 + v37;
  v39 = v35 + v37;
  v28(v38, v39, v27);
  v40 = (int *)type metadata accessor for SnowfallAmount();
  v28(v38 + v40[5], v39 + v40[5], v27);
  v28(v38 + v40[6], v39 + v40[6], v27);
  v28(v38 + v40[7], v39 + v40[7], v27);
  v28(v38 + v40[8], v39 + v40[8], v27);
  v28(v38 + v40[9], v39 + v40[9], v27);
  v41 = v5[20];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v28(a1 + v41, a2 + v41, v27);
  v28(v42 + v36[5], v43 + v36[5], v27);
  v28(v42 + v36[6], v43 + v36[6], v27);
  v28(v42 + v36[7], v43 + v36[7], v27);
  v28(v42 + v36[8], v43 + v36[8], v27);
  v44 = v36[9];
  v45 = v42 + v44;
  v46 = v43 + v44;
  v28(v45, v46, v27);
  v28(v45 + v40[5], v46 + v40[5], v27);
  v28(v45 + v40[6], v46 + v40[6], v27);
  v28(v45 + v40[7], v46 + v40[7], v27);
  v28(v45 + v40[8], v46 + v40[8], v27);
  v28(v45 + v40[9], v46 + v40[9], v27);
  v47 = v5[21];
  v48 = a1 + v47;
  v49 = a2 + v47;
  v28(a1 + v47, a2 + v47, v27);
  v28(v48 + v36[5], v49 + v36[5], v27);
  v28(v48 + v36[6], v49 + v36[6], v27);
  v28(v48 + v36[7], v49 + v36[7], v27);
  v28(v48 + v36[8], v49 + v36[8], v27);
  v50 = v36[9];
  v51 = v48 + v50;
  v52 = v49 + v50;
  v28(v51, v52, v27);
  v28(v51 + v40[5], v52 + v40[5], v27);
  v28(v51 + v40[6], v52 + v40[6], v27);
  v28(v51 + v40[7], v52 + v40[7], v27);
  v28(v51 + v40[8], v52 + v40[8], v27);
  v28(v51 + v40[9], v52 + v40[9], v27);
  v53 = v5[22];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v28(a1 + v53, a2 + v53, v27);
  v28(v54 + v36[5], v55 + v36[5], v27);
  v28(v54 + v36[6], v55 + v36[6], v27);
  v28(v54 + v36[7], v55 + v36[7], v27);
  v28(v54 + v36[8], v55 + v36[8], v27);
  v56 = v36[9];
  v57 = v54 + v56;
  v58 = v55 + v56;
  v28(v57, v58, v27);
  v28(v57 + v40[5], v58 + v40[5], v27);
  v28(v57 + v40[6], v58 + v40[6], v27);
  v28(v57 + v40[7], v58 + v40[7], v27);
  v28(v57 + v40[8], v58 + v40[8], v27);
  v28(v57 + v40[9], v58 + v40[9], v27);
  v59 = v5[23];
  v60 = a1 + v59;
  v61 = a2 + v59;
  v28(a1 + v59, a2 + v59, v27);
  v28(v60 + v36[5], v61 + v36[5], v27);
  v28(v60 + v36[6], v61 + v36[6], v27);
  v28(v60 + v36[7], v61 + v36[7], v27);
  v28(v60 + v36[8], v61 + v36[8], v27);
  v62 = v36[9];
  v63 = v60 + v62;
  v64 = v61 + v62;
  v28(v63, v64, v27);
  v28(v63 + v40[5], v64 + v40[5], v27);
  v28(v63 + v40[6], v64 + v40[6], v27);
  v28(v63 + v40[7], v64 + v40[7], v27);
  v28(v63 + v40[8], v64 + v40[8], v27);
  v28(v63 + v40[9], v64 + v40[9], v27);
  v65 = v5[24];
  v66 = a1 + v65;
  v67 = a2 + v65;
  v28(a1 + v65, a2 + v65, v27);
  v28(v66 + v36[5], v67 + v36[5], v27);
  v28(v66 + v36[6], v67 + v36[6], v27);
  v28(v66 + v36[7], v67 + v36[7], v27);
  v28(v66 + v36[8], v67 + v36[8], v27);
  v68 = v36[9];
  v69 = v66 + v68;
  v70 = v67 + v68;
  v28(v69, v70, v27);
  v28(v69 + v40[5], v70 + v40[5], v27);
  v28(v69 + v40[6], v70 + v40[6], v27);
  v28(v69 + v40[7], v70 + v40[7], v27);
  v28(v69 + v40[8], v70 + v40[8], v27);
  v71 = a2;
  v28(v69 + v40[9], v70 + v40[9], v27);
  v72 = v5[25];
  v73 = a1 + v72;
  v74 = a2 + v72;
  *(_QWORD *)v73 = *(_QWORD *)v74;
  *(_BYTE *)(v73 + 8) = *(_BYTE *)(v74 + 8);
  *(_BYTE *)(a1 + v5[26]) = *(_BYTE *)(a2 + v5[26]);
  v223(a1 + v5[27], a2 + v5[27], v16);
  v223(a1 + v5[28], a2 + v5[28], v16);
  v75 = v5[29];
  v76 = (void *)(a1 + v75);
  v77 = (const void *)(a2 + v75);
  if (__swift_getEnumTagSinglePayload(a2 + v75, 1, v16))
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    v223((uint64_t)v76, (uint64_t)v77, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v16);
  }
  v79 = v228;
  v80 = v5[30];
  v81 = (void *)(a1 + v80);
  v82 = (const void *)(a2 + v80);
  if (__swift_getEnumTagSinglePayload(a2 + v80, 1, v16))
  {
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
  }
  else
  {
    v223((uint64_t)v81, (uint64_t)v82, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v16);
  }
  v84 = v5[31];
  v85 = a1 + v84;
  v86 = a2 + v84;
  *(_QWORD *)v85 = *(_QWORD *)v86;
  *(_BYTE *)(v85 + 8) = *(_BYTE *)(v86 + 8);
  v28(a1 + v5[32], a2 + v5[32], v27);
  v87 = v5[33];
  v88 = a1 + v87;
  v89 = v71 + v87;
  *(_BYTE *)(a1 + v87) = *(_BYTE *)(v71 + v87);
  v90 = (int *)type metadata accessor for Wind();
  v91 = v90[5];
  v92 = v88 + v91;
  v93 = v89 + v91;
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v92, v93, v94);
  ((void (*)(uint64_t, uint64_t, uint64_t))v226)(v88 + v90[6], v89 + v90[6], v229);
  v95 = v90[7];
  v96 = (void *)(v88 + v95);
  v97 = (const void *)(v89 + v95);
  if (__swift_getEnumTagSinglePayload(v89 + v95, 1, v229))
  {
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
  }
  else
  {
    ((void (*)(void *, const void *, uint64_t))v226)(v96, v97, v229);
    __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v229);
  }
  v99 = v5[34];
  v100 = a1 + v99;
  v101 = v71 + v99;
  ((void (*)(uint64_t, uint64_t, uint64_t))v231)(a1 + v99, v71 + v99, v228);
  v102 = v71;
  v103 = (int *)type metadata accessor for WeatherMetadata();
  ((void (*)(uint64_t, uint64_t, uint64_t))v231)(v100 + v103[5], v101 + v103[5], v228);
  *(_QWORD *)(v100 + v103[6]) = *(_QWORD *)(v101 + v103[6]);
  *(_QWORD *)(v100 + v103[7]) = *(_QWORD *)(v101 + v103[7]);
  *(_QWORD *)(v100 + v103[8]) = *(_QWORD *)(v101 + v103[8]);
  v104 = a3[5];
  v230 = a1;
  v105 = (_QWORD *)(a1 + v104);
  v233 = v102;
  v106 = (_QWORD *)(v102 + v104);
  swift_retain();
  v107 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v106, 1, (uint64_t)v107))
  {
    v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
  }
  else
  {
    *v105 = *v106;
    v109 = v107[13];
    v110 = (char *)v105 + v109;
    v111 = (char *)v106 + v109;
    swift_bridgeObjectRetain();
    ((void (*)(char *, char *, uint64_t))v231)(v110, v111, v228);
    ((void (*)(char *, char *, uint64_t))v231)(&v110[v103[5]], &v111[v103[5]], v228);
    *(_QWORD *)&v110[v103[6]] = *(_QWORD *)&v111[v103[6]];
    *(_QWORD *)&v110[v103[7]] = *(_QWORD *)&v111[v103[7]];
    *(_QWORD *)&v110[v103[8]] = *(_QWORD *)&v111[v103[8]];
    v112 = v107[14];
    v113 = (_QWORD *)((char *)v105 + v112);
    v114 = (_QWORD *)((char *)v106 + v112);
    v115 = v114[1];
    *v113 = *v114;
    v113[1] = v115;
    *(_QWORD *)((char *)v105 + v107[15]) = *(_QWORD *)((char *)v106 + v107[15]);
    *(_QWORD *)((char *)v105 + v107[16]) = *(_QWORD *)((char *)v106 + v107[16]);
    v116 = v107[17];
    v117 = (char *)v105 + v116;
    v118 = (char *)v106 + v116;
    v117[16] = v118[16];
    *(_OWORD *)v117 = *(_OWORD *)v118;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v79 = v228;
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, (uint64_t)v107);
  }
  v119 = a3[6];
  v120 = a1 + v119;
  v121 = v233 + v119;
  *(_QWORD *)(a1 + v119) = *(_QWORD *)(v233 + v119);
  swift_bridgeObjectRetain();
  v122 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  v123 = v122[13];
  v124 = v120 + v123;
  v125 = v121 + v123;
  ((void (*)(uint64_t, uint64_t, uint64_t))v231)(v120 + v123, v121 + v123, v79);
  ((void (*)(uint64_t, uint64_t, uint64_t))v231)(v124 + v103[5], v125 + v103[5], v79);
  *(_QWORD *)(v124 + v103[6]) = *(_QWORD *)(v125 + v103[6]);
  *(_QWORD *)(v124 + v103[7]) = *(_QWORD *)(v125 + v103[7]);
  *(_QWORD *)(v124 + v103[8]) = *(_QWORD *)(v125 + v103[8]);
  v126 = v122[14];
  v127 = (_QWORD *)(v120 + v126);
  v128 = (_QWORD *)(v121 + v126);
  v129 = v128[1];
  *v127 = *v128;
  v127[1] = v129;
  *(_QWORD *)(v120 + v122[15]) = *(_QWORD *)(v121 + v122[15]);
  *(_QWORD *)(v120 + v122[16]) = *(_QWORD *)(v121 + v122[16]);
  v130 = v122[17];
  v131 = v120 + v130;
  v132 = v121 + v130;
  *(_OWORD *)v131 = *(_OWORD *)v132;
  *(_BYTE *)(v131 + 16) = *(_BYTE *)(v132 + 16);
  v133 = a3[7];
  v134 = a1 + v133;
  v135 = v233 + v133;
  *(_QWORD *)(a1 + v133) = *(_QWORD *)(v233 + v133);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v136 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  v137 = v136[13];
  v138 = v134 + v137;
  v139 = v135 + v137;
  ((void (*)(uint64_t, uint64_t, uint64_t))v231)(v134 + v137, v135 + v137, v79);
  ((void (*)(uint64_t, uint64_t, uint64_t))v231)(v138 + v103[5], v139 + v103[5], v79);
  *(_QWORD *)(v138 + v103[6]) = *(_QWORD *)(v139 + v103[6]);
  *(_QWORD *)(v138 + v103[7]) = *(_QWORD *)(v139 + v103[7]);
  v227 = v103;
  v140 = v79;
  *(_QWORD *)(v138 + v103[8]) = *(_QWORD *)(v139 + v103[8]);
  v141 = v136[14];
  v142 = (_QWORD *)(v134 + v141);
  v143 = (_QWORD *)(v135 + v141);
  v144 = v143[1];
  *v142 = *v143;
  v142[1] = v144;
  *(_QWORD *)(v134 + v136[15]) = *(_QWORD *)(v135 + v136[15]);
  *(_QWORD *)(v134 + v136[16]) = *(_QWORD *)(v135 + v136[16]);
  v145 = v136[17];
  v146 = v134 + v145;
  v147 = (__int128 *)(v135 + v145);
  v148 = *v147;
  *(_BYTE *)(v146 + 16) = *((_BYTE *)v147 + 16);
  v149 = a3[8];
  v150 = a3[9];
  v151 = *(_QWORD *)(v233 + v149);
  *(_OWORD *)v146 = v148;
  *(_QWORD *)(a1 + v149) = v151;
  v152 = a1 + v150;
  *(_WORD *)v152 = *(_WORD *)(v233 + v150);
  *(_BYTE *)(v152 + 2) = *(_BYTE *)(v233 + v150 + 2);
  v153 = a3[10];
  v154 = (char *)(a1 + v153);
  v155 = (char *)(v233 + v153);
  v156 = (int *)type metadata accessor for AirQuality();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v155, 1, (uint64_t)v156))
  {
    v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
    memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
    v158 = v233;
    v159 = a3;
    v160 = v140;
    v161 = v230;
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v231)(v154, v155, v79);
    ((void (*)(char *, char *, uint64_t))v231)(&v154[v156[5]], &v155[v156[5]], v79);
    v162 = v156[6];
    v163 = &v154[v162];
    v164 = &v155[v162];
    v224 = *((_QWORD *)v164 + 1);
    *(_QWORD *)v163 = *(_QWORD *)v164;
    *((_QWORD *)v163 + 1) = v224;
    v165 = v156[7];
    v166 = &v154[v165];
    v167 = &v155[v165];
    v168 = *((_QWORD *)v167 + 1);
    *(_QWORD *)v166 = *(_QWORD *)v167;
    *((_QWORD *)v166 + 1) = v168;
    v169 = *((_QWORD *)v167 + 3);
    *((_QWORD *)v166 + 2) = *((_QWORD *)v167 + 2);
    *((_QWORD *)v166 + 3) = v169;
    v170 = *((_QWORD *)v167 + 5);
    *((_QWORD *)v166 + 4) = *((_QWORD *)v167 + 4);
    *((_QWORD *)v166 + 5) = v170;
    v171 = *((_QWORD *)v167 + 7);
    *((_QWORD *)v166 + 6) = *((_QWORD *)v167 + 6);
    *((_QWORD *)v166 + 7) = v171;
    v172 = *((_QWORD *)v167 + 9);
    *((_QWORD *)v166 + 8) = *((_QWORD *)v167 + 8);
    *((_QWORD *)v166 + 9) = v172;
    v166[80] = v167[80];
    *(_OWORD *)(v166 + 88) = *(_OWORD *)(v167 + 88);
    v222 = *((_QWORD *)v167 + 14);
    *((_QWORD *)v166 + 13) = *((_QWORD *)v167 + 13);
    *((_QWORD *)v166 + 14) = v222;
    *(_QWORD *)&v154[v156[8]] = *(_QWORD *)&v155[v156[8]];
    v173 = v156[9];
    v174 = &v154[v173];
    v175 = &v155[v173];
    v176 = *((_QWORD *)v175 + 1);
    *(_QWORD *)v174 = *(_QWORD *)v175;
    *((_QWORD *)v174 + 1) = v176;
    *((_OWORD *)v174 + 1) = *((_OWORD *)v175 + 1);
    v177 = *((_QWORD *)v175 + 5);
    *((_QWORD *)v174 + 4) = *((_QWORD *)v175 + 4);
    *((_QWORD *)v174 + 5) = v177;
    *((_QWORD *)v174 + 6) = *((_QWORD *)v175 + 6);
    *(_OWORD *)(v174 + 56) = *(_OWORD *)(v175 + 56);
    v178 = *((_QWORD *)v175 + 10);
    *((_QWORD *)v174 + 9) = *((_QWORD *)v175 + 9);
    *((_QWORD *)v174 + 10) = v178;
    v154[v156[10]] = v155[v156[10]];
    v179 = v156[11];
    v180 = &v154[v179];
    v181 = &v155[v179];
    v182 = type metadata accessor for ProviderAttribution();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v181, 1, v182))
    {
      v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
      memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
      v158 = v233;
    }
    else
    {
      v184 = v182;
      v185 = *((_QWORD *)v181 + 1);
      *(_QWORD *)v180 = *(_QWORD *)v181;
      *((_QWORD *)v180 + 1) = v185;
      v225 = v184;
      v186 = *(int *)(v184 + 20);
      v187 = &v180[v186];
      v188 = &v181[v186];
      v189 = sub_1A6121DF0();
      swift_bridgeObjectRetain();
      v158 = v233;
      if (__swift_getEnumTagSinglePayload((uint64_t)v188, 1, v189))
      {
        v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
        memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v187, v188, v189);
        __swift_storeEnumTagSinglePayload((uint64_t)v187, 0, 1, v189);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v180, 0, 1, v225);
    }
    v191 = v156[12];
    v192 = &v154[v191];
    v193 = &v155[v191];
    v194 = sub_1A6121DF0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v192, v193, v194);
    *(_QWORD *)&v154[v156[13]] = *(_QWORD *)&v155[v156[13]];
    v195 = v156[14];
    v196 = &v154[v195];
    v197 = &v155[v195];
    v198 = type metadata accessor for AirPollutant();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v197, 1, v198))
    {
      v199 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
      memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
    }
    else
    {
      *v196 = *v197;
      v200 = *(int *)(v198 + 20);
      v201 = &v196[v200];
      v202 = &v197[v200];
      type metadata accessor for AirPollutantMeasurement();
      if (swift_getEnumCaseMultiPayload() == 1)
        v203 = &qword_1ED190B60;
      else
        v203 = &qword_1ED1922B8;
      v204 = __swift_instantiateConcreteTypeFromMangledName(v203);
      v205 = v202;
      v158 = v233;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 16))(v201, v205, v204);
      swift_storeEnumTagMultiPayload();
      v196[*(int *)(v198 + 24)] = v197[*(int *)(v198 + 24)];
      __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v198);
    }
    v159 = a3;
    v154[v156[15]] = v155[v156[15]];
    v206 = v156[16];
    v207 = &v154[v206];
    v208 = &v155[v206];
    *v207 = *v208;
    v209 = *((_QWORD *)v208 + 2);
    *((_QWORD *)v207 + 1) = *((_QWORD *)v208 + 1);
    *((_QWORD *)v207 + 2) = v209;
    v210 = v156[17];
    v211 = &v154[v210];
    v212 = &v155[v210];
    swift_bridgeObjectRetain();
    v160 = v228;
    ((void (*)(char *, char *, uint64_t))v231)(v211, v212, v228);
    v103 = v227;
    ((void (*)(char *, char *, uint64_t))v231)(&v211[v227[5]], &v212[v227[5]], v228);
    *(_QWORD *)&v211[v227[6]] = *(_QWORD *)&v212[v227[6]];
    *(_QWORD *)&v211[v227[7]] = *(_QWORD *)&v212[v227[7]];
    *(_QWORD *)&v211[v227[8]] = *(_QWORD *)&v212[v227[8]];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v154, 0, 1, (uint64_t)v156);
    v161 = v230;
  }
  v213 = v159[11];
  v214 = (_QWORD *)(v161 + v213);
  v215 = (_QWORD *)(v158 + v213);
  v216 = type metadata accessor for WeatherChanges();
  if (__swift_getEnumTagSinglePayload((uint64_t)v215, 1, v216))
  {
    v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
    memcpy(v214, v215, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
  }
  else
  {
    *v214 = *v215;
    v218 = *(int *)(v216 + 20);
    v219 = (char *)v214 + v218;
    v220 = (char *)v215 + v218;
    swift_bridgeObjectRetain();
    ((void (*)(char *, char *, uint64_t))v231)(v219, v220, v160);
    ((void (*)(char *, char *, uint64_t))v231)(&v219[v103[5]], &v220[v103[5]], v160);
    v161 = v230;
    *(_QWORD *)&v219[v103[6]] = *(_QWORD *)&v220[v103[6]];
    *(_QWORD *)&v219[v103[7]] = *(_QWORD *)&v220[v103[7]];
    *(_QWORD *)&v219[v103[8]] = *(_QWORD *)&v220[v103[8]];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v214, 0, 1, v216);
  }
  *(_QWORD *)(v161 + v159[12]) = *(_QWORD *)(v158 + v159[12]);
  swift_bridgeObjectRetain();
  return v161;
}

uint64_t assignWithCopy for Weather(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const void *v77;
  int EnumTagSinglePayload;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const void *v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  const void *v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int *v105;
  int *v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  int *v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  __int128 *v148;
  __int128 v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int *v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  __int128 *v163;
  __int128 v164;
  uint64_t v165;
  _BYTE *v166;
  _BYTE *v167;
  uint64_t v168;
  _BYTE *v169;
  char *v170;
  int *v171;
  int v172;
  void (*v173)(char *, char *, uint64_t);
  uint64_t v174;
  _QWORD *v175;
  char *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  _QWORD *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  int *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  _QWORD *v198;
  char *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  _QWORD *v203;
  char *v204;
  uint64_t v205;
  int v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  int v241;
  int v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  int v253;
  int *v254;
  uint64_t v255;
  char *v256;
  char *v257;
  char *v258;
  uint64_t *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  _QWORD *v269;
  _QWORD *v270;
  uint64_t v271;
  int v272;
  int v273;
  uint64_t v274;
  char *v275;
  char *v276;
  void (*v277)(char *, char *, uint64_t);
  uint64_t v278;
  uint64_t v280;
  char *v281;
  char *v282;
  uint64_t v283;
  char *v284;
  char *v285;
  uint64_t *v286;
  uint64_t v287;
  uint64_t v288;
  void (*v289)(char *, char *, uint64_t);
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  int *v294;
  char *v295;
  void (*v296)(uint64_t, uint64_t);
  int *v297;
  uint64_t v298;
  void (*v299)(uint64_t, uint64_t, uint64_t);
  char *v300;
  char *v301;
  uint64_t v302;
  void (*v303)(uint64_t, uint64_t);
  uint64_t v304;

  v5 = sub_1A6121F58();
  v291 = *(_QWORD *)(v5 - 8);
  v303 = *(void (**)(uint64_t, uint64_t))(v291 + 24);
  v304 = v5;
  v303(a1, a2);
  v6 = (int *)type metadata accessor for CurrentWeather();
  *(_QWORD *)(a1 + v6[5]) = *(_QWORD *)(a2 + v6[5]);
  *(_QWORD *)(a1 + v6[6]) = *(_QWORD *)(a2 + v6[6]);
  *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
  *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
  v7 = v6[9];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  v10 = v6[11];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = v6[12];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v292 = *(_QWORD *)(v16 - 8);
  v299 = *(void (**)(uint64_t, uint64_t, uint64_t))(v292 + 24);
  v299(v14, v15, v16);
  *(_QWORD *)(a1 + v6[13]) = *(_QWORD *)(a2 + v6[13]);
  v17 = v6[14];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
  v290 = *(_QWORD *)(v20 - 8);
  v293 = v20;
  v296 = *(void (**)(uint64_t, uint64_t))(v290 + 24);
  v296(v18, v19);
  v21 = v6[15];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  *(_BYTE *)(a1 + v6[16]) = *(_BYTE *)(a2 + v6[16]);
  v25 = v6[17];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 24);
  v29(v26, v27, v28);
  v30 = (int *)type metadata accessor for PrecipitationAmount();
  v29(v26 + v30[5], v27 + v30[5], v28);
  v29(v26 + v30[6], v27 + v30[6], v28);
  v29(v26 + v30[7], v27 + v30[7], v28);
  v29(v26 + v30[8], v27 + v30[8], v28);
  v29(v26 + v30[9], v27 + v30[9], v28);
  v31 = v6[18];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v29(a1 + v31, a2 + v31, v28);
  v29(v32 + v30[5], v33 + v30[5], v28);
  v29(v32 + v30[6], v33 + v30[6], v28);
  v29(v32 + v30[7], v33 + v30[7], v28);
  v29(v32 + v30[8], v33 + v30[8], v28);
  v29(v32 + v30[9], v33 + v30[9], v28);
  v34 = v6[19];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v29(a1 + v34, a2 + v34, v28);
  v37 = (int *)type metadata accessor for PrecipitationAmountByType();
  v29(v35 + v37[5], v36 + v37[5], v28);
  v29(v35 + v37[6], v36 + v37[6], v28);
  v29(v35 + v37[7], v36 + v37[7], v28);
  v29(v35 + v37[8], v36 + v37[8], v28);
  v38 = v37[9];
  v39 = v35 + v38;
  v40 = v36 + v38;
  v29(v39, v40, v28);
  v41 = (int *)type metadata accessor for SnowfallAmount();
  v29(v39 + v41[5], v40 + v41[5], v28);
  v29(v39 + v41[6], v40 + v41[6], v28);
  v29(v39 + v41[7], v40 + v41[7], v28);
  v29(v39 + v41[8], v40 + v41[8], v28);
  v29(v39 + v41[9], v40 + v41[9], v28);
  v42 = v6[20];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v29(a1 + v42, a2 + v42, v28);
  v29(v43 + v37[5], v44 + v37[5], v28);
  v29(v43 + v37[6], v44 + v37[6], v28);
  v29(v43 + v37[7], v44 + v37[7], v28);
  v29(v43 + v37[8], v44 + v37[8], v28);
  v45 = v37[9];
  v46 = v43 + v45;
  v47 = v44 + v45;
  v29(v46, v47, v28);
  v29(v46 + v41[5], v47 + v41[5], v28);
  v29(v46 + v41[6], v47 + v41[6], v28);
  v29(v46 + v41[7], v47 + v41[7], v28);
  v29(v46 + v41[8], v47 + v41[8], v28);
  v29(v46 + v41[9], v47 + v41[9], v28);
  v48 = v6[21];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v29(a1 + v48, a2 + v48, v28);
  v29(v49 + v37[5], v50 + v37[5], v28);
  v29(v49 + v37[6], v50 + v37[6], v28);
  v29(v49 + v37[7], v50 + v37[7], v28);
  v29(v49 + v37[8], v50 + v37[8], v28);
  v51 = v37[9];
  v52 = v49 + v51;
  v53 = v50 + v51;
  v29(v52, v53, v28);
  v29(v52 + v41[5], v53 + v41[5], v28);
  v29(v52 + v41[6], v53 + v41[6], v28);
  v29(v52 + v41[7], v53 + v41[7], v28);
  v29(v52 + v41[8], v53 + v41[8], v28);
  v29(v52 + v41[9], v53 + v41[9], v28);
  v54 = v6[22];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v29(a1 + v54, a2 + v54, v28);
  v29(v55 + v37[5], v56 + v37[5], v28);
  v29(v55 + v37[6], v56 + v37[6], v28);
  v29(v55 + v37[7], v56 + v37[7], v28);
  v29(v55 + v37[8], v56 + v37[8], v28);
  v57 = v37[9];
  v58 = v55 + v57;
  v59 = v56 + v57;
  v29(v58, v59, v28);
  v29(v58 + v41[5], v59 + v41[5], v28);
  v29(v58 + v41[6], v59 + v41[6], v28);
  v29(v58 + v41[7], v59 + v41[7], v28);
  v29(v58 + v41[8], v59 + v41[8], v28);
  v29(v58 + v41[9], v59 + v41[9], v28);
  v60 = v6[23];
  v61 = a1 + v60;
  v62 = a2 + v60;
  v29(a1 + v60, a2 + v60, v28);
  v29(v61 + v37[5], v62 + v37[5], v28);
  v29(v61 + v37[6], v62 + v37[6], v28);
  v29(v61 + v37[7], v62 + v37[7], v28);
  v29(v61 + v37[8], v62 + v37[8], v28);
  v63 = v37[9];
  v64 = v61 + v63;
  v65 = v62 + v63;
  v29(v64, v65, v28);
  v29(v64 + v41[5], v65 + v41[5], v28);
  v29(v64 + v41[6], v65 + v41[6], v28);
  v29(v64 + v41[7], v65 + v41[7], v28);
  v29(v64 + v41[8], v65 + v41[8], v28);
  v29(v64 + v41[9], v65 + v41[9], v28);
  v66 = v6[24];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v29(a1 + v66, a2 + v66, v28);
  v29(v67 + v37[5], v68 + v37[5], v28);
  v29(v67 + v37[6], v68 + v37[6], v28);
  v29(v67 + v37[7], v68 + v37[7], v28);
  v29(v67 + v37[8], v68 + v37[8], v28);
  v69 = v37[9];
  v70 = v67 + v69;
  v71 = v68 + v69;
  v29(v70, v71, v28);
  v29(v70 + v41[5], v71 + v41[5], v28);
  v29(v70 + v41[6], v71 + v41[6], v28);
  v29(v70 + v41[7], v71 + v41[7], v28);
  v29(v70 + v41[8], v71 + v41[8], v28);
  v29(v70 + v41[9], v71 + v41[9], v28);
  v72 = v6[25];
  v73 = a1 + v72;
  v74 = a2 + v72;
  *(_QWORD *)v73 = *(_QWORD *)v74;
  *(_BYTE *)(v73 + 8) = *(_BYTE *)(v74 + 8);
  *(_BYTE *)(a1 + v6[26]) = *(_BYTE *)(a2 + v6[26]);
  v299(a1 + v6[27], a2 + v6[27], v16);
  v299(a1 + v6[28], a2 + v6[28], v16);
  v75 = v6[29];
  v76 = (void *)(a1 + v75);
  v77 = (const void *)(a2 + v75);
  LODWORD(v37) = __swift_getEnumTagSinglePayload(a1 + v75, 1, v16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v77, 1, v16);
  if ((_DWORD)v37)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v292 + 16))(v76, v77, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
    (*(void (**)(void *, uint64_t))(v292 + 8))(v76, v16);
LABEL_6:
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_7;
  }
  v299((uint64_t)v76, (uint64_t)v77, v16);
LABEL_7:
  v80 = v6[30];
  v81 = (void *)(a1 + v80);
  v82 = (const void *)(a2 + v80);
  v83 = __swift_getEnumTagSinglePayload(a1 + v80, 1, v16);
  v84 = __swift_getEnumTagSinglePayload((uint64_t)v82, 1, v16);
  if (v83)
  {
    if (!v84)
    {
      (*(void (**)(void *, const void *, uint64_t))(v292 + 16))(v81, v82, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v84)
  {
    (*(void (**)(void *, uint64_t))(v292 + 8))(v81, v16);
LABEL_12:
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    goto LABEL_13;
  }
  v299((uint64_t)v81, (uint64_t)v82, v16);
LABEL_13:
  v86 = v6[31];
  v87 = a1 + v86;
  v88 = a2 + v86;
  *(_QWORD *)v87 = *(_QWORD *)v88;
  *(_BYTE *)(v87 + 8) = *(_BYTE *)(v88 + 8);
  v29(a1 + v6[32], a2 + v6[32], v28);
  v89 = v6[33];
  v90 = a1 + v89;
  v91 = a2 + v89;
  *(_BYTE *)(a1 + v89) = *(_BYTE *)(a2 + v89);
  v92 = (int *)type metadata accessor for Wind();
  v93 = v92[5];
  v94 = v90 + v93;
  v95 = v91 + v93;
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 24))(v94, v95, v96);
  ((void (*)(uint64_t, uint64_t, uint64_t))v296)(v90 + v92[6], v91 + v92[6], v293);
  v97 = v92[7];
  v98 = (void *)(v90 + v97);
  v99 = (const void *)(v91 + v97);
  LODWORD(v95) = __swift_getEnumTagSinglePayload(v90 + v97, 1, v293);
  v100 = __swift_getEnumTagSinglePayload((uint64_t)v99, 1, v293);
  if ((_DWORD)v95)
  {
    if (!v100)
    {
      (*(void (**)(void *, const void *, uint64_t))(v290 + 16))(v98, v99, v293);
      __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, v293);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v100)
  {
    (*(void (**)(void *, uint64_t))(v290 + 8))(v98, v293);
LABEL_18:
    v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
    goto LABEL_19;
  }
  ((void (*)(void *, const void *, uint64_t))v296)(v98, v99, v293);
LABEL_19:
  v102 = v6[34];
  v103 = a1 + v102;
  v104 = a2 + v102;
  ((void (*)(uint64_t, uint64_t, uint64_t))v303)(a1 + v102, a2 + v102, v304);
  v105 = (int *)type metadata accessor for WeatherMetadata();
  ((void (*)(uint64_t, uint64_t, uint64_t))v303)(v103 + v105[5], v104 + v105[5], v304);
  *(_QWORD *)(v103 + v105[6]) = *(_QWORD *)(v104 + v105[6]);
  *(_QWORD *)(v103 + v105[7]) = *(_QWORD *)(v104 + v105[7]);
  *(_QWORD *)(v103 + v105[8]) = *(_QWORD *)(v104 + v105[8]);
  swift_retain();
  swift_release();
  v106 = a3;
  v107 = a3[5];
  v108 = (_QWORD *)(a1 + v107);
  v109 = (_QWORD *)(a2 + v107);
  v110 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  LODWORD(v103) = __swift_getEnumTagSinglePayload((uint64_t)v108, 1, (uint64_t)v110);
  v111 = __swift_getEnumTagSinglePayload((uint64_t)v109, 1, (uint64_t)v110);
  v298 = a2;
  v302 = a1;
  if ((_DWORD)v103)
  {
    if (v111)
    {
      v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
      memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      v113 = v304;
    }
    else
    {
      *v108 = *v109;
      v115 = v110[13];
      v116 = (char *)v108 + v115;
      v117 = (char *)v109 + v115;
      v118 = *(void (**)(char *, char *, uint64_t))(v291 + 16);
      swift_bridgeObjectRetain();
      v113 = v304;
      v118(v116, v117, v304);
      v118(&v116[v105[5]], &v117[v105[5]], v304);
      *(_QWORD *)&v116[v105[6]] = *(_QWORD *)&v117[v105[6]];
      *(_QWORD *)&v116[v105[7]] = *(_QWORD *)&v117[v105[7]];
      *(_QWORD *)&v116[v105[8]] = *(_QWORD *)&v117[v105[8]];
      v119 = v110[14];
      v120 = (_QWORD *)((char *)v108 + v119);
      v121 = (_QWORD *)((char *)v109 + v119);
      *v120 = *v121;
      v120[1] = v121[1];
      *(_QWORD *)((char *)v108 + v110[15]) = *(_QWORD *)((char *)v109 + v110[15]);
      *(_QWORD *)((char *)v108 + v110[16]) = *(_QWORD *)((char *)v109 + v110[16]);
      v122 = v110[17];
      v123 = (char *)v108 + v122;
      v124 = (char *)v109 + v122;
      v125 = v124[16];
      *(_OWORD *)v123 = *(_OWORD *)v124;
      v123[16] = v125;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, (uint64_t)v110);
    }
  }
  else if (v111)
  {
    sub_1A5FAFD58((uint64_t)v108, &qword_1ED193AE0);
    v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    v113 = v304;
  }
  else
  {
    *v108 = *v109;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v126 = v110[13];
    v127 = (char *)v108 + v126;
    v128 = (char *)v109 + v126;
    ((void (*)(char *, char *, uint64_t))v303)((char *)v108 + v126, (char *)v109 + v126, v304);
    ((void (*)(char *, char *, uint64_t))v303)(&v127[v105[5]], &v128[v105[5]], v304);
    v106 = a3;
    *(_QWORD *)&v127[v105[6]] = *(_QWORD *)&v128[v105[6]];
    *(_QWORD *)&v127[v105[7]] = *(_QWORD *)&v128[v105[7]];
    v113 = v304;
    *(_QWORD *)&v127[v105[8]] = *(_QWORD *)&v128[v105[8]];
    swift_retain();
    swift_release();
    v129 = v110[14];
    v130 = (_QWORD *)((char *)v108 + v129);
    v131 = (_QWORD *)((char *)v109 + v129);
    *v130 = *v131;
    v130[1] = v131[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v108 + v110[15]) = *(_QWORD *)((char *)v109 + v110[15]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v108 + v110[16]) = *(_QWORD *)((char *)v109 + v110[16]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v132 = v110[17];
    v133 = (char *)v108 + v132;
    v134 = (char *)v109 + v132;
    v135 = *(_OWORD *)v134;
    v133[16] = v134[16];
    *(_OWORD *)v133 = v135;
  }
  v136 = v106[6];
  v137 = v302 + v136;
  v138 = a2 + v136;
  *(_QWORD *)(v302 + v136) = *(_QWORD *)(a2 + v136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v139 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  v140 = v139[13];
  v141 = v137 + v140;
  v142 = v138 + v140;
  ((void (*)(uint64_t, uint64_t, uint64_t))v303)(v137 + v140, v138 + v140, v113);
  ((void (*)(uint64_t, uint64_t, uint64_t))v303)(v141 + v105[5], v142 + v105[5], v113);
  *(_QWORD *)(v141 + v105[6]) = *(_QWORD *)(v142 + v105[6]);
  *(_QWORD *)(v141 + v105[7]) = *(_QWORD *)(v142 + v105[7]);
  *(_QWORD *)(v141 + v105[8]) = *(_QWORD *)(v142 + v105[8]);
  swift_retain();
  swift_release();
  v143 = v139[14];
  v144 = (_QWORD *)(v137 + v143);
  v145 = (_QWORD *)(v138 + v143);
  *v144 = *v145;
  v144[1] = v145[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v137 + v139[15]) = *(_QWORD *)(v138 + v139[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v137 + v139[16]) = *(_QWORD *)(v138 + v139[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v146 = v139[17];
  v147 = v137 + v146;
  v148 = (__int128 *)(v138 + v146);
  v149 = *v148;
  *(_BYTE *)(v147 + 16) = *((_BYTE *)v148 + 16);
  *(_OWORD *)v147 = v149;
  v150 = a3[7];
  v151 = v302 + v150;
  v152 = a2 + v150;
  *(_QWORD *)(v302 + v150) = *(_QWORD *)(a2 + v150);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v153 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  v154 = v153[13];
  v155 = v151 + v154;
  v156 = v152 + v154;
  ((void (*)(uint64_t, uint64_t, uint64_t))v303)(v151 + v154, v152 + v154, v113);
  ((void (*)(uint64_t, uint64_t, uint64_t))v303)(v155 + v105[5], v156 + v105[5], v113);
  v157 = a3;
  *(_QWORD *)(v155 + v105[6]) = *(_QWORD *)(v156 + v105[6]);
  *(_QWORD *)(v155 + v105[7]) = *(_QWORD *)(v156 + v105[7]);
  *(_QWORD *)(v155 + v105[8]) = *(_QWORD *)(v156 + v105[8]);
  swift_retain();
  swift_release();
  v158 = v153[14];
  v159 = (_QWORD *)(v151 + v158);
  v160 = (_QWORD *)(v152 + v158);
  *v159 = *v160;
  v159[1] = v160[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v151 + v153[15]) = *(_QWORD *)(v152 + v153[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v151 + v153[16]) = *(_QWORD *)(v152 + v153[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v161 = v153[17];
  v162 = v151 + v161;
  v163 = (__int128 *)(v152 + v161);
  v164 = *v163;
  *(_BYTE *)(v162 + 16) = *((_BYTE *)v163 + 16);
  *(_OWORD *)v162 = v164;
  *(_QWORD *)(v302 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v165 = a3[9];
  v166 = (_BYTE *)(v302 + v165);
  v167 = (_BYTE *)(a2 + v165);
  *v166 = *v167;
  v166[1] = v167[1];
  v166[2] = v167[2];
  v168 = a3[10];
  v169 = (_BYTE *)(v302 + v168);
  v170 = (char *)(a2 + v168);
  v171 = (int *)type metadata accessor for AirQuality();
  LODWORD(v153) = __swift_getEnumTagSinglePayload((uint64_t)v169, 1, (uint64_t)v171);
  v172 = __swift_getEnumTagSinglePayload((uint64_t)v170, 1, (uint64_t)v171);
  if (!(_DWORD)v153)
  {
    if (v172)
    {
      sub_1A5FA1740((uint64_t)v169, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
      goto LABEL_35;
    }
    v297 = v105;
    ((void (*)(_BYTE *, char *, uint64_t))v303)(v169, v170, v304);
    ((void (*)(_BYTE *, char *, uint64_t))v303)(&v169[v171[5]], &v170[v171[5]], v304);
    v191 = v171[6];
    v192 = &v169[v191];
    v193 = &v170[v191];
    *v192 = *(_QWORD *)v193;
    v192[1] = *((_QWORD *)v193 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v194 = v171[7];
    v195 = &v169[v194];
    v301 = v170;
    v196 = &v170[v194];
    *(_QWORD *)v195 = *(_QWORD *)v196;
    *((_QWORD *)v195 + 1) = *((_QWORD *)v196 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v195 + 2) = *((_QWORD *)v196 + 2);
    *((_QWORD *)v195 + 3) = *((_QWORD *)v196 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v195 + 4) = *((_QWORD *)v196 + 4);
    *((_QWORD *)v195 + 5) = *((_QWORD *)v196 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v195 + 6) = *((_QWORD *)v196 + 6);
    *((_QWORD *)v195 + 7) = *((_QWORD *)v196 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v195 + 8) = *((_QWORD *)v196 + 8);
    *((_QWORD *)v195 + 9) = *((_QWORD *)v196 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v195[80] = v196[80];
    *((_QWORD *)v195 + 11) = *((_QWORD *)v196 + 11);
    *((_QWORD *)v195 + 12) = *((_QWORD *)v196 + 12);
    *((_QWORD *)v195 + 13) = *((_QWORD *)v196 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v195 + 14) = *((_QWORD *)v196 + 14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v169[v171[8]] = *(_QWORD *)&v301[v171[8]];
    v197 = v171[9];
    v198 = &v169[v197];
    v199 = &v301[v197];
    *v198 = *(_QWORD *)&v301[v197];
    v198[1] = *(_QWORD *)&v301[v197 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v198[2] = *((_QWORD *)v199 + 2);
    v198[3] = *((_QWORD *)v199 + 3);
    v198[4] = *((_QWORD *)v199 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v198[5] = *((_QWORD *)v199 + 5);
    v198[6] = *((_QWORD *)v199 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v198[7] = *((_QWORD *)v199 + 7);
    v198[8] = *((_QWORD *)v199 + 8);
    v198[9] = *((_QWORD *)v199 + 9);
    v200 = *((_QWORD *)v199 + 10);
    v201 = v301;
    v198[10] = v200;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v169[v171[10]] = v301[v171[10]];
    v202 = v171[11];
    v203 = &v169[v202];
    v204 = &v301[v202];
    v205 = type metadata accessor for ProviderAttribution();
    LODWORD(v198) = __swift_getEnumTagSinglePayload((uint64_t)v203, 1, v205);
    v206 = __swift_getEnumTagSinglePayload((uint64_t)v204, 1, v205);
    if ((_DWORD)v198)
    {
      if (!v206)
      {
        *v203 = *(_QWORD *)v204;
        v203[1] = *((_QWORD *)v204 + 1);
        v207 = *(int *)(v205 + 20);
        v208 = (char *)v203 + v207;
        v209 = &v204[v207];
        v210 = sub_1A6121DF0();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v209, 1, v210))
        {
          v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
          memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 16))(v208, v209, v210);
          __swift_storeEnumTagSinglePayload((uint64_t)v208, 0, 1, v210);
        }
        v201 = v301;
        v243 = (uint64_t)v203;
        v244 = v205;
        goto LABEL_60;
      }
    }
    else
    {
      if (!v206)
      {
        *v203 = *(_QWORD *)v204;
        v203[1] = *((_QWORD *)v204 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v239 = *(int *)(v205 + 20);
        v203 = (_QWORD *)((char *)v203 + v239);
        v204 += v239;
        v240 = sub_1A6121DF0();
        v241 = __swift_getEnumTagSinglePayload((uint64_t)v203, 1, v240);
        v242 = __swift_getEnumTagSinglePayload((uint64_t)v204, 1, v240);
        if (v241)
        {
          v201 = v301;
          if (!v242)
          {
            (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 16))(v203, v204, v240);
            v243 = (uint64_t)v203;
            v244 = v240;
LABEL_60:
            __swift_storeEnumTagSinglePayload(v243, 0, 1, v244);
            goto LABEL_61;
          }
        }
        else
        {
          v288 = *(_QWORD *)(v240 - 8);
          v201 = v301;
          if (!v242)
          {
            (*(void (**)(_QWORD *, char *, uint64_t))(v288 + 24))(v203, v204, v240);
LABEL_61:
            v245 = v171[12];
            v246 = &v169[v245];
            v247 = &v201[v245];
            v248 = sub_1A6121DF0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 24))(v246, v247, v248);
            *(_QWORD *)&v169[v171[13]] = *(_QWORD *)&v201[v171[13]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v249 = v171[14];
            v250 = &v169[v249];
            v251 = &v201[v249];
            v252 = type metadata accessor for AirPollutant();
            LODWORD(v246) = __swift_getEnumTagSinglePayload((uint64_t)v250, 1, v252);
            v253 = __swift_getEnumTagSinglePayload((uint64_t)v251, 1, v252);
            v254 = v171;
            if ((_DWORD)v246)
            {
              if (!v253)
              {
                *v250 = *v251;
                v255 = *(int *)(v252 + 20);
                v256 = &v250[v255];
                v257 = v251;
                v258 = &v251[v255];
                type metadata accessor for AirPollutantMeasurement();
                if (swift_getEnumCaseMultiPayload() == 1)
                  v259 = &qword_1ED190B60;
                else
                  v259 = &qword_1ED1922B8;
                v260 = __swift_instantiateConcreteTypeFromMangledName(v259);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v260 - 8) + 16))(v256, v258, v260);
                v201 = v301;
                swift_storeEnumTagMultiPayload();
                v250[*(int *)(v252 + 24)] = v257[*(int *)(v252 + 24)];
                __swift_storeEnumTagSinglePayload((uint64_t)v250, 0, 1, v252);
                goto LABEL_70;
              }
            }
            else
            {
              if (!v253)
              {
                *v250 = *v251;
                if (v302 != a2)
                {
                  v283 = *(int *)(v252 + 20);
                  v284 = &v251[v283];
                  v295 = v251;
                  v285 = &v250[v283];
                  sub_1A5FA1740((uint64_t)&v250[v283], (uint64_t (*)(_QWORD))type metadata accessor for AirPollutantMeasurement);
                  type metadata accessor for AirPollutantMeasurement();
                  if (swift_getEnumCaseMultiPayload() == 1)
                    v286 = &qword_1ED190B60;
                  else
                    v286 = &qword_1ED1922B8;
                  v287 = __swift_instantiateConcreteTypeFromMangledName(v286);
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v287 - 8) + 16))(v285, v284, v287);
                  v251 = v295;
                  v201 = v301;
                  swift_storeEnumTagMultiPayload();
                }
                v250[*(int *)(v252 + 24)] = v251[*(int *)(v252 + 24)];
                goto LABEL_70;
              }
              sub_1A5FA1740((uint64_t)v250, (uint64_t (*)(_QWORD))type metadata accessor for AirPollutant);
            }
            v261 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
            memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
LABEL_70:
            v190 = v304;
            v105 = v297;
            v169[v254[15]] = v201[v254[15]];
            v262 = v254[16];
            v263 = &v169[v262];
            v264 = &v201[v262];
            *v263 = *v264;
            *((_QWORD *)v263 + 1) = *((_QWORD *)v264 + 1);
            *((_QWORD *)v263 + 2) = *((_QWORD *)v264 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v265 = v254[17];
            v266 = &v169[v265];
            v267 = &v201[v265];
            ((void (*)(_BYTE *, char *, uint64_t))v303)(&v169[v265], &v201[v265], v304);
            ((void (*)(char *, char *, uint64_t))v303)(&v266[v105[5]], &v267[v105[5]], v304);
            *(_QWORD *)&v266[v297[6]] = *(_QWORD *)&v267[v297[6]];
            *(_QWORD *)&v266[v297[7]] = *(_QWORD *)&v267[v297[7]];
            *(_QWORD *)&v266[v297[8]] = *(_QWORD *)&v267[v297[8]];
            swift_retain();
            swift_release();
            v157 = a3;
            goto LABEL_71;
          }
          (*(void (**)(_QWORD *, uint64_t))(v288 + 8))(v203, v240);
        }
        v217 = &qword_1ED1940B8;
LABEL_45:
        v218 = __swift_instantiateConcreteTypeFromMangledName(v217);
        memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
        goto LABEL_61;
      }
      sub_1A5FA1740((uint64_t)v203, (uint64_t (*)(_QWORD))type metadata accessor for ProviderAttribution);
    }
    v217 = &qword_1ED192330;
    goto LABEL_45;
  }
  if (v172)
  {
LABEL_35:
    v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
    memcpy(v169, v170, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
    v190 = v304;
    goto LABEL_71;
  }
  v173 = *(void (**)(char *, char *, uint64_t))(v291 + 16);
  v173(v169, v170, v304);
  v289 = v173;
  v173(&v169[v171[5]], &v170[v171[5]], v304);
  v174 = v171[6];
  v175 = &v169[v174];
  v176 = &v170[v174];
  *v175 = *(_QWORD *)v176;
  v175[1] = *((_QWORD *)v176 + 1);
  v177 = v171[7];
  v178 = &v169[v177];
  v179 = &v170[v177];
  *(_QWORD *)v178 = *(_QWORD *)v179;
  *((_QWORD *)v178 + 1) = *((_QWORD *)v179 + 1);
  *((_QWORD *)v178 + 2) = *((_QWORD *)v179 + 2);
  *((_QWORD *)v178 + 3) = *((_QWORD *)v179 + 3);
  *((_QWORD *)v178 + 4) = *((_QWORD *)v179 + 4);
  *((_QWORD *)v178 + 5) = *((_QWORD *)v179 + 5);
  *((_QWORD *)v178 + 6) = *((_QWORD *)v179 + 6);
  *((_QWORD *)v178 + 7) = *((_QWORD *)v179 + 7);
  *((_QWORD *)v178 + 8) = *((_QWORD *)v179 + 8);
  *((_QWORD *)v178 + 9) = *((_QWORD *)v179 + 9);
  v178[80] = v179[80];
  *(_OWORD *)(v178 + 88) = *(_OWORD *)(v179 + 88);
  *((_QWORD *)v178 + 13) = *((_QWORD *)v179 + 13);
  *((_QWORD *)v178 + 14) = *((_QWORD *)v179 + 14);
  *(_QWORD *)&v169[v171[8]] = *(_QWORD *)&v170[v171[8]];
  v180 = v171[9];
  v181 = &v169[v180];
  v182 = &v170[v180];
  *(_QWORD *)v181 = *(_QWORD *)v182;
  *((_QWORD *)v181 + 1) = *((_QWORD *)v182 + 1);
  *((_QWORD *)v181 + 2) = *((_QWORD *)v182 + 2);
  *((_QWORD *)v181 + 3) = *((_QWORD *)v182 + 3);
  *((_QWORD *)v181 + 4) = *((_QWORD *)v182 + 4);
  *((_QWORD *)v181 + 5) = *((_QWORD *)v182 + 5);
  *((_QWORD *)v181 + 6) = *((_QWORD *)v182 + 6);
  *(_OWORD *)(v181 + 56) = *(_OWORD *)(v182 + 56);
  *((_QWORD *)v181 + 9) = *((_QWORD *)v182 + 9);
  *((_QWORD *)v181 + 10) = *((_QWORD *)v182 + 10);
  v169[v171[10]] = v170[v171[10]];
  v294 = v171;
  v183 = v171[11];
  v184 = &v169[v183];
  v300 = v170;
  v185 = &v170[v183];
  v186 = type metadata accessor for ProviderAttribution();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v185, 1, v186))
  {
    v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
    memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
    v188 = a3;
  }
  else
  {
    *v184 = *(_QWORD *)v185;
    v184[1] = *((_QWORD *)v185 + 1);
    v212 = *(int *)(v186 + 20);
    v213 = (char *)v184 + v212;
    v214 = &v185[v212];
    v215 = sub_1A6121DF0();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v214, 1, v215))
    {
      v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
      memcpy(v213, v214, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 16))(v213, v214, v215);
      __swift_storeEnumTagSinglePayload((uint64_t)v213, 0, 1, v215);
    }
    v188 = a3;
    v170 = v300;
    __swift_storeEnumTagSinglePayload((uint64_t)v184, 0, 1, v186);
  }
  v219 = v294[12];
  v220 = &v169[v219];
  v221 = &v170[v219];
  v222 = sub_1A6121DF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(v220, v221, v222);
  *(_QWORD *)&v169[v294[13]] = *(_QWORD *)&v170[v294[13]];
  v223 = v294[14];
  v224 = &v169[v223];
  v225 = &v170[v223];
  v226 = type metadata accessor for AirPollutant();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v225, 1, v226))
  {
    v227 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
    memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
    v190 = v304;
    a2 = v298;
    v157 = v188;
  }
  else
  {
    *v224 = *v225;
    v228 = *(int *)(v226 + 20);
    v229 = &v224[v228];
    v230 = &v225[v228];
    type metadata accessor for AirPollutantMeasurement();
    if (swift_getEnumCaseMultiPayload() == 1)
      v231 = &qword_1ED190B60;
    else
      v231 = &qword_1ED1922B8;
    v232 = __swift_instantiateConcreteTypeFromMangledName(v231);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(v229, v230, v232);
    v157 = a3;
    swift_storeEnumTagMultiPayload();
    v224[*(int *)(v226 + 24)] = v225[*(int *)(v226 + 24)];
    __swift_storeEnumTagSinglePayload((uint64_t)v224, 0, 1, v226);
    v190 = v304;
    a2 = v298;
  }
  v169[v294[15]] = v300[v294[15]];
  v233 = v294[16];
  v234 = &v169[v233];
  v235 = &v300[v233];
  *v234 = *v235;
  *((_QWORD *)v234 + 1) = *((_QWORD *)v235 + 1);
  *((_QWORD *)v234 + 2) = *((_QWORD *)v235 + 2);
  v236 = v294[17];
  v237 = &v169[v236];
  v238 = &v300[v236];
  swift_bridgeObjectRetain();
  v289(v237, v238, v190);
  v289(&v237[v105[5]], &v238[v105[5]], v190);
  *(_QWORD *)&v237[v105[6]] = *(_QWORD *)&v238[v105[6]];
  *(_QWORD *)&v237[v105[7]] = *(_QWORD *)&v238[v105[7]];
  *(_QWORD *)&v237[v105[8]] = *(_QWORD *)&v238[v105[8]];
  swift_retain();
  __swift_storeEnumTagSinglePayload((uint64_t)v169, 0, 1, (uint64_t)v294);
LABEL_71:
  v268 = v157[11];
  v269 = (_QWORD *)(v302 + v268);
  v270 = (_QWORD *)(a2 + v268);
  v271 = type metadata accessor for WeatherChanges();
  v272 = __swift_getEnumTagSinglePayload((uint64_t)v269, 1, v271);
  v273 = __swift_getEnumTagSinglePayload((uint64_t)v270, 1, v271);
  if (!v272)
  {
    if (!v273)
    {
      *v269 = *v270;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v280 = *(int *)(v271 + 20);
      v281 = (char *)v269 + v280;
      v282 = (char *)v270 + v280;
      ((void (*)(char *, char *, uint64_t))v303)((char *)v269 + v280, (char *)v270 + v280, v190);
      ((void (*)(char *, char *, uint64_t))v303)(&v281[v105[5]], &v282[v105[5]], v190);
      *(_QWORD *)&v281[v105[6]] = *(_QWORD *)&v282[v105[6]];
      *(_QWORD *)&v281[v105[7]] = *(_QWORD *)&v282[v105[7]];
      *(_QWORD *)&v281[v105[8]] = *(_QWORD *)&v282[v105[8]];
      swift_retain();
      swift_release();
      goto LABEL_77;
    }
    sub_1A5FA1740((uint64_t)v269, (uint64_t (*)(_QWORD))type metadata accessor for WeatherChanges);
    goto LABEL_76;
  }
  if (v273)
  {
LABEL_76:
    v278 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
    memcpy(v269, v270, *(_QWORD *)(*(_QWORD *)(v278 - 8) + 64));
    goto LABEL_77;
  }
  *v269 = *v270;
  v274 = *(int *)(v271 + 20);
  v275 = (char *)v269 + v274;
  v276 = (char *)v270 + v274;
  v277 = *(void (**)(char *, char *, uint64_t))(v291 + 16);
  swift_bridgeObjectRetain();
  v277(v275, v276, v190);
  v277(&v275[v105[5]], &v276[v105[5]], v190);
  *(_QWORD *)&v275[v105[6]] = *(_QWORD *)&v276[v105[6]];
  *(_QWORD *)&v275[v105[7]] = *(_QWORD *)&v276[v105[7]];
  *(_QWORD *)&v275[v105[8]] = *(_QWORD *)&v276[v105[8]];
  swift_retain();
  __swift_storeEnumTagSinglePayload((uint64_t)v269, 0, 1, v271);
LABEL_77:
  *(_QWORD *)(v302 + v157[12]) = *(_QWORD *)(a2 + v157[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v302;
}

uint64_t initializeWithTake for Weather(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  const void *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  const void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int *v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  int *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  int *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  _QWORD *v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  int *v177;
  char *v178;
  char *v179;
  uint64_t v181;
  void (*v182)(uint64_t, uint64_t, uint64_t);
  char *v183;
  void (*v184)(uint64_t, uint64_t);
  uint64_t v185;
  void (*v186)(uint64_t, uint64_t);
  uint64_t v187;

  v5 = sub_1A6121F58();
  v186 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
  v187 = v5;
  v186(a1, a2);
  v6 = (int *)type metadata accessor for CurrentWeather();
  *(_QWORD *)(a1 + v6[5]) = *(_QWORD *)(a2 + v6[5]);
  *(_QWORD *)(a1 + v6[6]) = *(_QWORD *)(a2 + v6[6]);
  *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
  *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
  v7 = v6[9];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
  v10 = v6[12];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v182 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v182(v11, v12, v13);
  *(_QWORD *)(a1 + v6[13]) = *(_QWORD *)(a2 + v6[13]);
  v14 = v6[14];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
  v184 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v181 - 8) + 32);
  v184(v15, v16);
  v17 = v6[15];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  *(_BYTE *)(a1 + v6[16]) = *(_BYTE *)(a2 + v6[16]);
  v21 = v6[17];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  v26 = (int *)type metadata accessor for PrecipitationAmount();
  v25(v22 + v26[5], v23 + v26[5], v24);
  v25(v22 + v26[6], v23 + v26[6], v24);
  v25(v22 + v26[7], v23 + v26[7], v24);
  v25(v22 + v26[8], v23 + v26[8], v24);
  v25(v22 + v26[9], v23 + v26[9], v24);
  v27 = v6[18];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v25(a1 + v27, a2 + v27, v24);
  v25(v28 + v26[5], v29 + v26[5], v24);
  v25(v28 + v26[6], v29 + v26[6], v24);
  v25(v28 + v26[7], v29 + v26[7], v24);
  v25(v28 + v26[8], v29 + v26[8], v24);
  v25(v28 + v26[9], v29 + v26[9], v24);
  v30 = v6[19];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v25(a1 + v30, a2 + v30, v24);
  v33 = (int *)type metadata accessor for PrecipitationAmountByType();
  v25(v31 + v33[5], v32 + v33[5], v24);
  v25(v31 + v33[6], v32 + v33[6], v24);
  v25(v31 + v33[7], v32 + v33[7], v24);
  v25(v31 + v33[8], v32 + v33[8], v24);
  v34 = v33[9];
  v35 = v31 + v34;
  v36 = v32 + v34;
  v25(v35, v32 + v34, v24);
  v37 = (int *)type metadata accessor for SnowfallAmount();
  v25(v35 + v37[5], v36 + v37[5], v24);
  v25(v35 + v37[6], v36 + v37[6], v24);
  v25(v35 + v37[7], v36 + v37[7], v24);
  v25(v35 + v37[8], v36 + v37[8], v24);
  v25(v35 + v37[9], v36 + v37[9], v24);
  v38 = v6[20];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v25(a1 + v38, a2 + v38, v24);
  v25(v39 + v33[5], v40 + v33[5], v24);
  v25(v39 + v33[6], v40 + v33[6], v24);
  v25(v39 + v33[7], v40 + v33[7], v24);
  v25(v39 + v33[8], v40 + v33[8], v24);
  v41 = v33[9];
  v42 = v39 + v41;
  v43 = v40 + v41;
  v25(v42, v43, v24);
  v25(v42 + v37[5], v43 + v37[5], v24);
  v25(v42 + v37[6], v43 + v37[6], v24);
  v25(v42 + v37[7], v43 + v37[7], v24);
  v25(v42 + v37[8], v43 + v37[8], v24);
  v25(v42 + v37[9], v43 + v37[9], v24);
  v44 = v6[21];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v25(a1 + v44, a2 + v44, v24);
  v25(v45 + v33[5], v46 + v33[5], v24);
  v25(v45 + v33[6], v46 + v33[6], v24);
  v25(v45 + v33[7], v46 + v33[7], v24);
  v25(v45 + v33[8], v46 + v33[8], v24);
  v47 = v33[9];
  v48 = v45 + v47;
  v49 = v46 + v47;
  v25(v48, v49, v24);
  v25(v48 + v37[5], v49 + v37[5], v24);
  v25(v48 + v37[6], v49 + v37[6], v24);
  v25(v48 + v37[7], v49 + v37[7], v24);
  v25(v48 + v37[8], v49 + v37[8], v24);
  v25(v48 + v37[9], v49 + v37[9], v24);
  v50 = v6[22];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v25(a1 + v50, a2 + v50, v24);
  v25(v51 + v33[5], v52 + v33[5], v24);
  v25(v51 + v33[6], v52 + v33[6], v24);
  v25(v51 + v33[7], v52 + v33[7], v24);
  v25(v51 + v33[8], v52 + v33[8], v24);
  v53 = v33[9];
  v54 = v51 + v53;
  v55 = v52 + v53;
  v25(v54, v55, v24);
  v25(v54 + v37[5], v55 + v37[5], v24);
  v25(v54 + v37[6], v55 + v37[6], v24);
  v25(v54 + v37[7], v55 + v37[7], v24);
  v25(v54 + v37[8], v55 + v37[8], v24);
  v25(v54 + v37[9], v55 + v37[9], v24);
  v56 = v6[23];
  v57 = a1 + v56;
  v58 = a2 + v56;
  v25(a1 + v56, a2 + v56, v24);
  v25(v57 + v33[5], v58 + v33[5], v24);
  v25(v57 + v33[6], v58 + v33[6], v24);
  v25(v57 + v33[7], v58 + v33[7], v24);
  v25(v57 + v33[8], v58 + v33[8], v24);
  v59 = v33[9];
  v60 = v57 + v59;
  v61 = v58 + v59;
  v25(v60, v61, v24);
  v25(v60 + v37[5], v61 + v37[5], v24);
  v25(v60 + v37[6], v61 + v37[6], v24);
  v25(v60 + v37[7], v61 + v37[7], v24);
  v25(v60 + v37[8], v61 + v37[8], v24);
  v25(v60 + v37[9], v61 + v37[9], v24);
  v62 = v6[24];
  v63 = a1 + v62;
  v64 = a2 + v62;
  v25(a1 + v62, a2 + v62, v24);
  v25(v63 + v33[5], v64 + v33[5], v24);
  v25(v63 + v33[6], v64 + v33[6], v24);
  v25(v63 + v33[7], v64 + v33[7], v24);
  v25(v63 + v33[8], v64 + v33[8], v24);
  v65 = v33[9];
  v66 = v63 + v65;
  v67 = v64 + v65;
  v25(v66, v67, v24);
  v25(v66 + v37[5], v67 + v37[5], v24);
  v25(v66 + v37[6], v67 + v37[6], v24);
  v25(v66 + v37[7], v67 + v37[7], v24);
  v25(v66 + v37[8], v67 + v37[8], v24);
  v25(v66 + v37[9], v67 + v37[9], v24);
  v68 = v6[25];
  v69 = a1 + v68;
  v70 = a2 + v68;
  *(_QWORD *)v69 = *(_QWORD *)v70;
  *(_BYTE *)(v69 + 8) = *(_BYTE *)(v70 + 8);
  *(_BYTE *)(a1 + v6[26]) = *(_BYTE *)(a2 + v6[26]);
  v182(a1 + v6[27], a2 + v6[27], v13);
  v182(a1 + v6[28], a2 + v6[28], v13);
  v71 = v6[29];
  v72 = (void *)(a1 + v71);
  v73 = (const void *)(a2 + v71);
  if (__swift_getEnumTagSinglePayload(a2 + v71, 1, v13))
  {
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    v182((uint64_t)v72, (uint64_t)v73, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v72, 0, 1, v13);
  }
  v75 = v6[30];
  v76 = (void *)(a1 + v75);
  v77 = (const void *)(a2 + v75);
  if (__swift_getEnumTagSinglePayload(a2 + v75, 1, v13))
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    v182((uint64_t)v76, (uint64_t)v77, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v13);
  }
  v79 = v187;
  v80 = v6[31];
  v81 = a1 + v80;
  v82 = a2 + v80;
  *(_QWORD *)v81 = *(_QWORD *)v82;
  *(_BYTE *)(v81 + 8) = *(_BYTE *)(v82 + 8);
  v25(a1 + v6[32], a2 + v6[32], v24);
  v83 = v6[33];
  v84 = a1 + v83;
  v85 = a2 + v83;
  *(_BYTE *)(a1 + v83) = *(_BYTE *)(a2 + v83);
  v86 = (int *)type metadata accessor for Wind();
  v87 = v86[5];
  v88 = v84 + v87;
  v89 = v85 + v87;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(v88, v89, v90);
  ((void (*)(uint64_t, uint64_t, uint64_t))v184)(v84 + v86[6], v85 + v86[6], v181);
  v91 = v86[7];
  v92 = (void *)(v84 + v91);
  v93 = (const void *)(v85 + v91);
  if (__swift_getEnumTagSinglePayload(v85 + v91, 1, v181))
  {
    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
  }
  else
  {
    ((void (*)(void *, const void *, uint64_t))v184)(v92, v93, v181);
    __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v181);
  }
  v95 = v6[34];
  v96 = a1 + v95;
  v97 = a2 + v95;
  ((void (*)(uint64_t, uint64_t, uint64_t))v186)(a1 + v95, a2 + v95, v187);
  v98 = (int *)type metadata accessor for WeatherMetadata();
  ((void (*)(uint64_t, uint64_t, uint64_t))v186)(v96 + v98[5], v97 + v98[5], v187);
  *(_QWORD *)(v96 + v98[6]) = *(_QWORD *)(v97 + v98[6]);
  *(_QWORD *)(v96 + v98[7]) = *(_QWORD *)(v97 + v98[7]);
  *(_QWORD *)(v96 + v98[8]) = *(_QWORD *)(v97 + v98[8]);
  v99 = a3[5];
  v100 = (_QWORD *)(a1 + v99);
  v101 = (_QWORD *)(a2 + v99);
  v102 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v101, 1, (uint64_t)v102))
  {
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
  }
  else
  {
    *v100 = *v101;
    v104 = v102[13];
    v105 = (char *)v100 + v104;
    v106 = (char *)v101 + v104;
    ((void (*)(char *, char *, uint64_t))v186)((char *)v100 + v104, (char *)v101 + v104, v187);
    ((void (*)(char *, char *, uint64_t))v186)(&v105[v98[5]], &v106[v98[5]], v187);
    *(_QWORD *)&v105[v98[6]] = *(_QWORD *)&v106[v98[6]];
    *(_QWORD *)&v105[v98[7]] = *(_QWORD *)&v106[v98[7]];
    v107 = v98[8];
    v108 = *(_QWORD *)&v106[v107];
    v79 = v187;
    *(_QWORD *)&v105[v107] = v108;
    *(_OWORD *)((char *)v100 + v102[14]) = *(_OWORD *)((char *)v101 + v102[14]);
    *(_QWORD *)((char *)v100 + v102[15]) = *(_QWORD *)((char *)v101 + v102[15]);
    *(_QWORD *)((char *)v100 + v102[16]) = *(_QWORD *)((char *)v101 + v102[16]);
    v109 = v102[17];
    v110 = (char *)v100 + v109;
    v111 = (char *)v101 + v109;
    v110[16] = v111[16];
    *(_OWORD *)v110 = *(_OWORD *)v111;
    __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, (uint64_t)v102);
  }
  v112 = a3[6];
  v113 = a1 + v112;
  v114 = a2 + v112;
  *(_QWORD *)(a1 + v112) = *(_QWORD *)(a2 + v112);
  v115 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  v116 = v115[13];
  v117 = v113 + v116;
  v118 = v114 + v116;
  ((void (*)(uint64_t, uint64_t, uint64_t))v186)(v113 + v116, v114 + v116, v79);
  ((void (*)(uint64_t, uint64_t, uint64_t))v186)(v117 + v98[5], v118 + v98[5], v79);
  *(_QWORD *)(v117 + v98[6]) = *(_QWORD *)(v118 + v98[6]);
  *(_QWORD *)(v117 + v98[7]) = *(_QWORD *)(v118 + v98[7]);
  *(_QWORD *)(v117 + v98[8]) = *(_QWORD *)(v118 + v98[8]);
  *(_OWORD *)(v113 + v115[14]) = *(_OWORD *)(v114 + v115[14]);
  *(_QWORD *)(v113 + v115[15]) = *(_QWORD *)(v114 + v115[15]);
  *(_QWORD *)(v113 + v115[16]) = *(_QWORD *)(v114 + v115[16]);
  v119 = v115[17];
  v120 = v113 + v119;
  v121 = v114 + v119;
  *(_OWORD *)v120 = *(_OWORD *)v121;
  *(_BYTE *)(v120 + 16) = *(_BYTE *)(v121 + 16);
  v122 = a3[7];
  v123 = a1 + v122;
  v124 = a2 + v122;
  *(_QWORD *)(a1 + v122) = *(_QWORD *)(a2 + v122);
  v125 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  v126 = v125[13];
  v127 = v123 + v126;
  v128 = v124 + v126;
  ((void (*)(uint64_t, uint64_t, uint64_t))v186)(v123 + v126, v124 + v126, v79);
  ((void (*)(uint64_t, uint64_t, uint64_t))v186)(v127 + v98[5], v128 + v98[5], v79);
  *(_QWORD *)(v127 + v98[6]) = *(_QWORD *)(v128 + v98[6]);
  *(_QWORD *)(v127 + v98[7]) = *(_QWORD *)(v128 + v98[7]);
  *(_QWORD *)(v127 + v98[8]) = *(_QWORD *)(v128 + v98[8]);
  *(_OWORD *)(v123 + v125[14]) = *(_OWORD *)(v124 + v125[14]);
  *(_QWORD *)(v123 + v125[15]) = *(_QWORD *)(v124 + v125[15]);
  *(_QWORD *)(v123 + v125[16]) = *(_QWORD *)(v124 + v125[16]);
  v129 = v125[17];
  v130 = v123 + v129;
  v131 = a3;
  v132 = v124 + v129;
  *(_OWORD *)v130 = *(_OWORD *)v132;
  v133 = a3[8];
  v134 = a3[9];
  v135 = *(_QWORD *)(a2 + v133);
  *(_BYTE *)(v130 + 16) = *(_BYTE *)(v132 + 16);
  *(_QWORD *)(a1 + v133) = v135;
  v136 = a1 + v134;
  *(_WORD *)v136 = *(_WORD *)(a2 + v134);
  *(_BYTE *)(v136 + 2) = *(_BYTE *)(a2 + v134 + 2);
  v137 = a3[10];
  v138 = (char *)(a1 + v137);
  v139 = (char *)(a2 + v137);
  v140 = (int *)type metadata accessor for AirQuality();
  if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, (uint64_t)v140))
  {
    v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
    memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v186)(v138, v139, v79);
    ((void (*)(char *, char *, uint64_t))v186)(&v138[v140[5]], &v139[v140[5]], v79);
    *(_OWORD *)&v138[v140[6]] = *(_OWORD *)&v139[v140[6]];
    memcpy(&v138[v140[7]], &v139[v140[7]], 0x78uLL);
    *(_QWORD *)&v138[v140[8]] = *(_QWORD *)&v139[v140[8]];
    memcpy(&v138[v140[9]], &v139[v140[9]], 0x58uLL);
    v138[v140[10]] = v139[v140[10]];
    v142 = v140[11];
    v143 = &v138[v142];
    v144 = &v139[v142];
    v145 = type metadata accessor for ProviderAttribution();
    if (__swift_getEnumTagSinglePayload((uint64_t)v144, 1, v145))
    {
      v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
      memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v143 = *(_OWORD *)v144;
      v147 = *(int *)(v145 + 20);
      v183 = &v143[v147];
      v148 = &v144[v147];
      v149 = sub_1A6121DF0();
      if (__swift_getEnumTagSinglePayload((uint64_t)v148, 1, v149))
      {
        v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
        memcpy(v183, v148, *(_QWORD *)(*(_QWORD *)(v150 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(v183, v148, v149);
        __swift_storeEnumTagSinglePayload((uint64_t)v183, 0, 1, v149);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v143, 0, 1, v145);
    }
    v151 = v140[12];
    v152 = &v138[v151];
    v153 = &v139[v151];
    v154 = sub_1A6121DF0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v152, v153, v154);
    *(_QWORD *)&v138[v140[13]] = *(_QWORD *)&v139[v140[13]];
    v155 = v140[14];
    v156 = &v138[v155];
    v157 = &v139[v155];
    v158 = type metadata accessor for AirPollutant();
    if (__swift_getEnumTagSinglePayload((uint64_t)v157, 1, v158))
    {
      v159 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
      memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
    }
    else
    {
      *v156 = *v157;
      v160 = *(int *)(v158 + 20);
      v185 = (uint64_t)v156;
      v161 = &v156[v160];
      v162 = &v157[v160];
      type metadata accessor for AirPollutantMeasurement();
      if (swift_getEnumCaseMultiPayload() == 1)
        v163 = &qword_1ED190B60;
      else
        v163 = &qword_1ED1922B8;
      v164 = __swift_instantiateConcreteTypeFromMangledName(v163);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 32))(v161, v162, v164);
      swift_storeEnumTagMultiPayload();
      *(_BYTE *)(v185 + *(int *)(v158 + 24)) = v157[*(int *)(v158 + 24)];
      __swift_storeEnumTagSinglePayload(v185, 0, 1, v158);
    }
    v138[v140[15]] = v139[v140[15]];
    v165 = v140[16];
    v166 = &v138[v165];
    v167 = &v139[v165];
    *(_OWORD *)v166 = *(_OWORD *)v167;
    *((_QWORD *)v166 + 2) = *((_QWORD *)v167 + 2);
    v168 = v140[17];
    v169 = &v138[v168];
    v170 = &v139[v168];
    v79 = v187;
    ((void (*)(char *, char *, uint64_t))v186)(&v138[v168], &v139[v168], v187);
    ((void (*)(char *, char *, uint64_t))v186)(&v169[v98[5]], &v170[v98[5]], v187);
    *(_QWORD *)&v169[v98[6]] = *(_QWORD *)&v170[v98[6]];
    *(_QWORD *)&v169[v98[7]] = *(_QWORD *)&v170[v98[7]];
    *(_QWORD *)&v169[v98[8]] = *(_QWORD *)&v170[v98[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, (uint64_t)v140);
    v131 = a3;
  }
  v171 = v131[11];
  v172 = (_QWORD *)(a1 + v171);
  v173 = (_QWORD *)(a2 + v171);
  v174 = type metadata accessor for WeatherChanges();
  if (__swift_getEnumTagSinglePayload((uint64_t)v173, 1, v174))
  {
    v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
    memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
  }
  else
  {
    *v172 = *v173;
    v176 = *(int *)(v174 + 20);
    v177 = v131;
    v178 = (char *)v172 + v176;
    v179 = (char *)v173 + v176;
    ((void (*)(char *, char *, uint64_t))v186)((char *)v172 + v176, v179, v79);
    ((void (*)(char *, char *, uint64_t))v186)(&v178[v98[5]], &v179[v98[5]], v79);
    *(_QWORD *)&v178[v98[6]] = *(_QWORD *)&v179[v98[6]];
    *(_QWORD *)&v178[v98[7]] = *(_QWORD *)&v179[v98[7]];
    *(_QWORD *)&v178[v98[8]] = *(_QWORD *)&v179[v98[8]];
    v131 = v177;
    __swift_storeEnumTagSinglePayload((uint64_t)v172, 0, 1, v174);
  }
  *(_QWORD *)(a1 + v131[12]) = *(_QWORD *)(a2 + v131[12]);
  return a1;
}

uint64_t assignWithTake for Weather(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  const void *v79;
  int EnumTagSinglePayload;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  const void *v84;
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  const void *v102;
  int v103;
  uint64_t v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  int *v113;
  int v114;
  uint64_t v115;
  char *v116;
  char *v117;
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _BYTE *v158;
  _BYTE *v159;
  int *v160;
  int v161;
  void (*v162)(char *, char *, uint64_t);
  uint64_t v163;
  _OWORD *v164;
  _OWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  _BYTE *v219;
  _BYTE *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  _BYTE *v224;
  _BYTE *v225;
  uint64_t *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  int v236;
  int v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  _BYTE *v243;
  _BYTE *v244;
  uint64_t v245;
  int v246;
  uint64_t v247;
  _BYTE *v248;
  _BYTE *v249;
  uint64_t *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  _QWORD *v262;
  _QWORD *v263;
  uint64_t v264;
  int v265;
  int v266;
  uint64_t v267;
  char *v268;
  char *v269;
  void (*v270)(char *, char *, uint64_t);
  uint64_t v271;
  uint64_t v273;
  char *v274;
  char *v275;
  uint64_t v276;
  _BYTE *v277;
  _BYTE *v278;
  uint64_t *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  void (*__dst)(uint64_t, uint64_t);
  char *__dsta;
  char *__dstb;
  _BYTE *__dstc;
  void (*v290)(uint64_t, uint64_t, uint64_t);
  void (*v291)(char *, char *, uint64_t);
  _BYTE *v292;
  _BYTE *v293;
  uint64_t v294;
  void (*v295)(uint64_t, uint64_t);

  v5 = sub_1A6121F58();
  v283 = *(_QWORD *)(v5 - 8);
  v294 = v5;
  v295 = *(void (**)(uint64_t, uint64_t))(v283 + 40);
  v295(a1, a2);
  v6 = (int *)type metadata accessor for CurrentWeather();
  *(_QWORD *)(a1 + v6[5]) = *(_QWORD *)(a2 + v6[5]);
  *(_QWORD *)(a1 + v6[6]) = *(_QWORD *)(a2 + v6[6]);
  *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
  *(_QWORD *)(a1 + v6[8]) = *(_QWORD *)(a2 + v6[8]);
  v7 = v6[9];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_BYTE *)(a1 + v6[10]) = *(_BYTE *)(a2 + v6[10]);
  v10 = v6[11];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = v6[12];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  v284 = *(_QWORD *)(v18 - 8);
  v290 = *(void (**)(uint64_t, uint64_t, uint64_t))(v284 + 40);
  v290(v16, v17, v18);
  *(_QWORD *)(a1 + v6[13]) = *(_QWORD *)(a2 + v6[13]);
  v19 = v6[14];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
  v282 = *(_QWORD *)(v22 - 8);
  v285 = v22;
  __dst = *(void (**)(uint64_t, uint64_t))(v282 + 40);
  __dst(v20, v21);
  v23 = v6[15];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  *(_BYTE *)(a1 + v6[16]) = *(_BYTE *)(a2 + v6[16]);
  v27 = v6[17];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40);
  v31(v28, v29, v30);
  v32 = (int *)type metadata accessor for PrecipitationAmount();
  v31(v28 + v32[5], v29 + v32[5], v30);
  v31(v28 + v32[6], v29 + v32[6], v30);
  v31(v28 + v32[7], v29 + v32[7], v30);
  v31(v28 + v32[8], v29 + v32[8], v30);
  v31(v28 + v32[9], v29 + v32[9], v30);
  v33 = v6[18];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v31(a1 + v33, a2 + v33, v30);
  v31(v34 + v32[5], v35 + v32[5], v30);
  v31(v34 + v32[6], v35 + v32[6], v30);
  v31(v34 + v32[7], v35 + v32[7], v30);
  v31(v34 + v32[8], v35 + v32[8], v30);
  v31(v34 + v32[9], v35 + v32[9], v30);
  v36 = v6[19];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v31(a1 + v36, a2 + v36, v30);
  v39 = (int *)type metadata accessor for PrecipitationAmountByType();
  v31(v37 + v39[5], v38 + v39[5], v30);
  v31(v37 + v39[6], v38 + v39[6], v30);
  v31(v37 + v39[7], v38 + v39[7], v30);
  v31(v37 + v39[8], v38 + v39[8], v30);
  v40 = v39[9];
  v41 = v37 + v40;
  v42 = v38 + v40;
  v31(v41, v42, v30);
  v43 = (int *)type metadata accessor for SnowfallAmount();
  v31(v41 + v43[5], v42 + v43[5], v30);
  v31(v41 + v43[6], v42 + v43[6], v30);
  v31(v41 + v43[7], v42 + v43[7], v30);
  v31(v41 + v43[8], v42 + v43[8], v30);
  v31(v41 + v43[9], v42 + v43[9], v30);
  v44 = v6[20];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v31(a1 + v44, a2 + v44, v30);
  v31(v45 + v39[5], v46 + v39[5], v30);
  v31(v45 + v39[6], v46 + v39[6], v30);
  v31(v45 + v39[7], v46 + v39[7], v30);
  v31(v45 + v39[8], v46 + v39[8], v30);
  v47 = v39[9];
  v48 = v45 + v47;
  v49 = v46 + v47;
  v31(v48, v49, v30);
  v31(v48 + v43[5], v49 + v43[5], v30);
  v31(v48 + v43[6], v49 + v43[6], v30);
  v31(v48 + v43[7], v49 + v43[7], v30);
  v31(v48 + v43[8], v49 + v43[8], v30);
  v31(v48 + v43[9], v49 + v43[9], v30);
  v50 = v6[21];
  v51 = a1 + v50;
  v52 = a2 + v50;
  v31(a1 + v50, a2 + v50, v30);
  v31(v51 + v39[5], v52 + v39[5], v30);
  v31(v51 + v39[6], v52 + v39[6], v30);
  v31(v51 + v39[7], v52 + v39[7], v30);
  v31(v51 + v39[8], v52 + v39[8], v30);
  v53 = v39[9];
  v54 = v51 + v53;
  v55 = v52 + v53;
  v31(v54, v55, v30);
  v31(v54 + v43[5], v55 + v43[5], v30);
  v31(v54 + v43[6], v55 + v43[6], v30);
  v31(v54 + v43[7], v55 + v43[7], v30);
  v31(v54 + v43[8], v55 + v43[8], v30);
  v31(v54 + v43[9], v55 + v43[9], v30);
  v56 = v6[22];
  v57 = a1 + v56;
  v58 = a2 + v56;
  v31(a1 + v56, a2 + v56, v30);
  v31(v57 + v39[5], v58 + v39[5], v30);
  v31(v57 + v39[6], v58 + v39[6], v30);
  v31(v57 + v39[7], v58 + v39[7], v30);
  v31(v57 + v39[8], v58 + v39[8], v30);
  v59 = v39[9];
  v60 = v57 + v59;
  v61 = v58 + v59;
  v31(v60, v61, v30);
  v31(v60 + v43[5], v61 + v43[5], v30);
  v31(v60 + v43[6], v61 + v43[6], v30);
  v31(v60 + v43[7], v61 + v43[7], v30);
  v31(v60 + v43[8], v61 + v43[8], v30);
  v31(v60 + v43[9], v61 + v43[9], v30);
  v62 = v6[23];
  v63 = a1 + v62;
  v64 = a2 + v62;
  v31(a1 + v62, a2 + v62, v30);
  v31(v63 + v39[5], v64 + v39[5], v30);
  v31(v63 + v39[6], v64 + v39[6], v30);
  v31(v63 + v39[7], v64 + v39[7], v30);
  v31(v63 + v39[8], v64 + v39[8], v30);
  v65 = v39[9];
  v66 = v63 + v65;
  v67 = v64 + v65;
  v31(v66, v67, v30);
  v31(v66 + v43[5], v67 + v43[5], v30);
  v31(v66 + v43[6], v67 + v43[6], v30);
  v31(v66 + v43[7], v67 + v43[7], v30);
  v31(v66 + v43[8], v67 + v43[8], v30);
  v31(v66 + v43[9], v67 + v43[9], v30);
  v68 = v6[24];
  v69 = a1 + v68;
  v70 = a2 + v68;
  v31(a1 + v68, a2 + v68, v30);
  v31(v69 + v39[5], v70 + v39[5], v30);
  v31(v69 + v39[6], v70 + v39[6], v30);
  v31(v69 + v39[7], v70 + v39[7], v30);
  v31(v69 + v39[8], v70 + v39[8], v30);
  v71 = v39[9];
  v72 = v69 + v71;
  v73 = v70 + v71;
  v31(v72, v73, v30);
  v31(v72 + v43[5], v73 + v43[5], v30);
  v31(v72 + v43[6], v73 + v43[6], v30);
  v31(v72 + v43[7], v73 + v43[7], v30);
  v31(v72 + v43[8], v73 + v43[8], v30);
  v31(v72 + v43[9], v73 + v43[9], v30);
  v74 = v6[25];
  v75 = a1 + v74;
  v76 = a2 + v74;
  *(_QWORD *)v75 = *(_QWORD *)v76;
  *(_BYTE *)(v75 + 8) = *(_BYTE *)(v76 + 8);
  *(_BYTE *)(a1 + v6[26]) = *(_BYTE *)(a2 + v6[26]);
  v290(a1 + v6[27], a2 + v6[27], v18);
  v290(a1 + v6[28], a2 + v6[28], v18);
  v77 = v6[29];
  v78 = (void *)(a1 + v77);
  v79 = (const void *)(a2 + v77);
  LODWORD(v73) = __swift_getEnumTagSinglePayload(a1 + v77, 1, v18);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v79, 1, v18);
  if ((_DWORD)v73)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(void *, const void *, uint64_t))(v284 + 32))(v78, v79, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
    (*(void (**)(void *, uint64_t))(v284 + 8))(v78, v18);
LABEL_6:
    v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_7;
  }
  v290((uint64_t)v78, (uint64_t)v79, v18);
LABEL_7:
  v82 = v6[30];
  v83 = (void *)(a1 + v82);
  v84 = (const void *)(a2 + v82);
  v85 = __swift_getEnumTagSinglePayload(a1 + v82, 1, v18);
  v86 = __swift_getEnumTagSinglePayload((uint64_t)v84, 1, v18);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(void *, const void *, uint64_t))(v284 + 32))(v83, v84, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v86)
  {
    (*(void (**)(void *, uint64_t))(v284 + 8))(v83, v18);
LABEL_12:
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192848);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_13;
  }
  v290((uint64_t)v83, (uint64_t)v84, v18);
LABEL_13:
  v88 = v294;
  v89 = v6[31];
  v90 = a1 + v89;
  v91 = a2 + v89;
  *(_QWORD *)v90 = *(_QWORD *)v91;
  *(_BYTE *)(v90 + 8) = *(_BYTE *)(v91 + 8);
  v31(a1 + v6[32], a2 + v6[32], v30);
  v92 = v6[33];
  v93 = a1 + v92;
  v94 = a2 + v92;
  *(_BYTE *)(a1 + v92) = *(_BYTE *)(a2 + v92);
  v95 = (int *)type metadata accessor for Wind();
  v96 = v95[5];
  v97 = v93 + v96;
  v98 = v94 + v96;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 40))(v97, v98, v99);
  ((void (*)(uint64_t, uint64_t, uint64_t))__dst)(v93 + v95[6], v94 + v95[6], v285);
  v100 = v95[7];
  v101 = (void *)(v93 + v100);
  v102 = (const void *)(v94 + v100);
  LODWORD(v97) = __swift_getEnumTagSinglePayload(v93 + v100, 1, v285);
  v103 = __swift_getEnumTagSinglePayload((uint64_t)v102, 1, v285);
  if ((_DWORD)v97)
  {
    if (!v103)
    {
      (*(void (**)(void *, const void *, uint64_t))(v282 + 32))(v101, v102, v285);
      __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v285);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v103)
  {
    (*(void (**)(void *, uint64_t))(v282 + 8))(v101, v285);
LABEL_18:
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    goto LABEL_19;
  }
  ((void (*)(void *, const void *, uint64_t))__dst)(v101, v102, v285);
LABEL_19:
  v105 = a3;
  v106 = v6[34];
  v107 = a1 + v106;
  v108 = a2 + v106;
  ((void (*)(uint64_t, uint64_t, uint64_t))v295)(a1 + v106, a2 + v106, v294);
  v109 = (int *)type metadata accessor for WeatherMetadata();
  ((void (*)(uint64_t, uint64_t, uint64_t))v295)(v107 + v109[5], v108 + v109[5], v294);
  *(_QWORD *)(v107 + v109[6]) = *(_QWORD *)(v108 + v109[6]);
  *(_QWORD *)(v107 + v109[7]) = *(_QWORD *)(v108 + v109[7]);
  *(_QWORD *)(v107 + v109[8]) = *(_QWORD *)(v108 + v109[8]);
  swift_release();
  v110 = a3[5];
  v111 = (char *)(a1 + v110);
  v112 = (char *)(a2 + v110);
  v113 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  LODWORD(v107) = __swift_getEnumTagSinglePayload((uint64_t)v111, 1, (uint64_t)v113);
  v114 = __swift_getEnumTagSinglePayload((uint64_t)v112, 1, (uint64_t)v113);
  if ((_DWORD)v107)
  {
    if (!v114)
    {
      *(_QWORD *)v111 = *(_QWORD *)v112;
      v115 = v113[13];
      v116 = &v111[v115];
      v117 = &v112[v115];
      v118 = *(void (**)(char *, char *, uint64_t))(v283 + 32);
      v118(&v111[v115], &v112[v115], v294);
      v118(&v116[v109[5]], &v117[v109[5]], v294);
      v88 = v294;
      *(_QWORD *)&v116[v109[6]] = *(_QWORD *)&v117[v109[6]];
      *(_QWORD *)&v116[v109[7]] = *(_QWORD *)&v117[v109[7]];
      *(_QWORD *)&v116[v109[8]] = *(_QWORD *)&v117[v109[8]];
      *(_OWORD *)&v111[v113[14]] = *(_OWORD *)&v112[v113[14]];
      *(_QWORD *)&v111[v113[15]] = *(_QWORD *)&v112[v113[15]];
      *(_QWORD *)&v111[v113[16]] = *(_QWORD *)&v112[v113[16]];
      v119 = v113[17];
      v120 = &v111[v119];
      v121 = &v112[v119];
      v120[16] = v121[16];
      *(_OWORD *)v120 = *(_OWORD *)v121;
      __swift_storeEnumTagSinglePayload((uint64_t)v111, 0, 1, (uint64_t)v113);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v114)
  {
    sub_1A5FAFD58((uint64_t)v111, &qword_1ED193AE0);
LABEL_24:
    v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
    goto LABEL_25;
  }
  *(_QWORD *)v111 = *(_QWORD *)v112;
  swift_bridgeObjectRelease();
  v169 = v113[13];
  v170 = &v111[v169];
  v171 = &v112[v169];
  ((void (*)(char *, char *, uint64_t))v295)(&v111[v169], &v112[v169], v294);
  ((void (*)(char *, char *, uint64_t))v295)(&v170[v109[5]], &v171[v109[5]], v294);
  v105 = a3;
  *(_QWORD *)&v170[v109[6]] = *(_QWORD *)&v171[v109[6]];
  *(_QWORD *)&v170[v109[7]] = *(_QWORD *)&v171[v109[7]];
  *(_QWORD *)&v170[v109[8]] = *(_QWORD *)&v171[v109[8]];
  swift_release();
  v172 = v113[14];
  v173 = &v111[v172];
  v174 = (uint64_t *)&v112[v172];
  v176 = *v174;
  v175 = v174[1];
  *(_QWORD *)v173 = v176;
  *((_QWORD *)v173 + 1) = v175;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v111[v113[15]] = *(_QWORD *)&v112[v113[15]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v111[v113[16]] = *(_QWORD *)&v112[v113[16]];
  swift_bridgeObjectRelease();
  v177 = v113[17];
  v178 = &v111[v177];
  v179 = &v112[v177];
  *(_OWORD *)v178 = *(_OWORD *)v179;
  v178[16] = v179[16];
LABEL_25:
  v123 = v105[6];
  v124 = a1 + v123;
  v125 = a2 + v123;
  *(_QWORD *)(a1 + v123) = *(_QWORD *)(a2 + v123);
  swift_bridgeObjectRelease();
  v126 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  v127 = v126[13];
  v128 = v124 + v127;
  v129 = v125 + v127;
  ((void (*)(uint64_t, uint64_t, uint64_t))v295)(v124 + v127, v125 + v127, v88);
  ((void (*)(uint64_t, uint64_t, uint64_t))v295)(v128 + v109[5], v129 + v109[5], v88);
  *(_QWORD *)(v128 + v109[6]) = *(_QWORD *)(v129 + v109[6]);
  *(_QWORD *)(v128 + v109[7]) = *(_QWORD *)(v129 + v109[7]);
  *(_QWORD *)(v128 + v109[8]) = *(_QWORD *)(v129 + v109[8]);
  swift_release();
  v130 = v126[14];
  v131 = (_QWORD *)(v124 + v130);
  v132 = (uint64_t *)(v125 + v130);
  v134 = *v132;
  v133 = v132[1];
  *v131 = v134;
  v131[1] = v133;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v124 + v126[15]) = *(_QWORD *)(v125 + v126[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v124 + v126[16]) = *(_QWORD *)(v125 + v126[16]);
  swift_bridgeObjectRelease();
  v135 = v126[17];
  v136 = v124 + v135;
  v137 = v125 + v135;
  *(_BYTE *)(v136 + 16) = *(_BYTE *)(v137 + 16);
  *(_OWORD *)v136 = *(_OWORD *)v137;
  v138 = a3[7];
  v139 = a1 + v138;
  v140 = a2 + v138;
  *(_QWORD *)(a1 + v138) = *(_QWORD *)(a2 + v138);
  swift_bridgeObjectRelease();
  v141 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  v142 = v141[13];
  v143 = v139 + v142;
  v144 = v140 + v142;
  ((void (*)(uint64_t, uint64_t, uint64_t))v295)(v139 + v142, v140 + v142, v88);
  ((void (*)(uint64_t, uint64_t, uint64_t))v295)(v143 + v109[5], v144 + v109[5], v88);
  v145 = a3;
  *(_QWORD *)(v143 + v109[6]) = *(_QWORD *)(v144 + v109[6]);
  *(_QWORD *)(v143 + v109[7]) = *(_QWORD *)(v144 + v109[7]);
  *(_QWORD *)(v143 + v109[8]) = *(_QWORD *)(v144 + v109[8]);
  swift_release();
  v146 = v141[14];
  v147 = (_QWORD *)(v139 + v146);
  v148 = (uint64_t *)(v140 + v146);
  v150 = *v148;
  v149 = v148[1];
  *v147 = v150;
  v147[1] = v149;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v139 + v141[15]) = *(_QWORD *)(v140 + v141[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v139 + v141[16]) = *(_QWORD *)(v140 + v141[16]);
  swift_bridgeObjectRelease();
  v151 = v141[17];
  v152 = v139 + v151;
  v153 = v140 + v151;
  *(_BYTE *)(v152 + 16) = *(_BYTE *)(v153 + 16);
  *(_OWORD *)v152 = *(_OWORD *)v153;
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v154 = a3[9];
  v155 = a3[10];
  v156 = a1 + v154;
  v157 = a2 + v154;
  *(_BYTE *)v156 = *(_BYTE *)v157;
  *(_WORD *)(v156 + 1) = *(_WORD *)(v157 + 1);
  v158 = (_BYTE *)(a1 + v155);
  v159 = (_BYTE *)(a2 + v155);
  v160 = (int *)type metadata accessor for AirQuality();
  LODWORD(v141) = __swift_getEnumTagSinglePayload((uint64_t)v158, 1, (uint64_t)v160);
  v161 = __swift_getEnumTagSinglePayload((uint64_t)v159, 1, (uint64_t)v160);
  if (!(_DWORD)v141)
  {
    if (v161)
    {
      sub_1A5FA1740((uint64_t)v158, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
      goto LABEL_31;
    }
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v295)(v158, v159, v88);
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v295)(&v158[v160[5]], &v159[v160[5]], v88);
    v180 = v160[6];
    v181 = &v158[v180];
    v182 = (uint64_t *)&v159[v180];
    v184 = *v182;
    v183 = v182[1];
    *v181 = v184;
    v181[1] = v183;
    swift_bridgeObjectRelease();
    v185 = v160[7];
    v186 = &v158[v185];
    v187 = &v159[v185];
    v188 = *(_QWORD *)&v159[v185 + 8];
    *(_QWORD *)v186 = *(_QWORD *)&v159[v185];
    *((_QWORD *)v186 + 1) = v188;
    swift_bridgeObjectRelease();
    v189 = *((_QWORD *)v187 + 3);
    *((_QWORD *)v186 + 2) = *((_QWORD *)v187 + 2);
    *((_QWORD *)v186 + 3) = v189;
    swift_bridgeObjectRelease();
    v190 = *((_QWORD *)v187 + 5);
    *((_QWORD *)v186 + 4) = *((_QWORD *)v187 + 4);
    *((_QWORD *)v186 + 5) = v190;
    swift_bridgeObjectRelease();
    v191 = *((_QWORD *)v187 + 7);
    *((_QWORD *)v186 + 6) = *((_QWORD *)v187 + 6);
    *((_QWORD *)v186 + 7) = v191;
    swift_bridgeObjectRelease();
    v192 = *((_QWORD *)v187 + 9);
    *((_QWORD *)v186 + 8) = *((_QWORD *)v187 + 8);
    *((_QWORD *)v186 + 9) = v192;
    swift_bridgeObjectRelease();
    v186[80] = v187[80];
    *(_OWORD *)(v186 + 88) = *(_OWORD *)(v187 + 88);
    *((_QWORD *)v186 + 13) = *((_QWORD *)v187 + 13);
    swift_bridgeObjectRelease();
    *((_QWORD *)v186 + 14) = *((_QWORD *)v187 + 14);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v158[v160[8]] = *(_QWORD *)&v159[v160[8]];
    v193 = v160[9];
    v194 = &v158[v193];
    v195 = &v159[v193];
    v196 = *(_QWORD *)&v159[v193 + 8];
    *(_QWORD *)v194 = *(_QWORD *)&v159[v193];
    *((_QWORD *)v194 + 1) = v196;
    swift_bridgeObjectRelease();
    *((_OWORD *)v194 + 1) = *((_OWORD *)v195 + 1);
    *((_QWORD *)v194 + 4) = *((_QWORD *)v195 + 4);
    swift_bridgeObjectRelease();
    v197 = *((_QWORD *)v195 + 6);
    *((_QWORD *)v194 + 5) = *((_QWORD *)v195 + 5);
    *((_QWORD *)v194 + 6) = v197;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v194 + 56) = *(_OWORD *)(v195 + 56);
    v198 = *((_QWORD *)v195 + 10);
    *((_QWORD *)v194 + 9) = *((_QWORD *)v195 + 9);
    *((_QWORD *)v194 + 10) = v198;
    swift_bridgeObjectRelease();
    v158[v160[10]] = v159[v160[10]];
    v199 = v160[11];
    v200 = &v158[v199];
    v201 = &v159[v199];
    v202 = type metadata accessor for ProviderAttribution();
    LODWORD(v195) = __swift_getEnumTagSinglePayload((uint64_t)v200, 1, v202);
    v203 = __swift_getEnumTagSinglePayload((uint64_t)v201, 1, v202);
    if ((_DWORD)v195)
    {
      if (!v203)
      {
        *(_OWORD *)v200 = *(_OWORD *)v201;
        v204 = *(int *)(v202 + 20);
        __dsta = &v200[v204];
        v205 = &v201[v204];
        v206 = sub_1A6121DF0();
        if (__swift_getEnumTagSinglePayload((uint64_t)v205, 1, v206))
        {
          v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
          memcpy(__dsta, v205, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(__dsta, v205, v206);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v206);
        }
        goto LABEL_59;
      }
    }
    else
    {
      if (!v203)
      {
        v234 = *((_QWORD *)v201 + 1);
        *(_QWORD *)v200 = *(_QWORD *)v201;
        *((_QWORD *)v200 + 1) = v234;
        swift_bridgeObjectRelease();
        v235 = *(int *)(v202 + 20);
        v200 += v235;
        v201 += v235;
        v202 = sub_1A6121DF0();
        v236 = __swift_getEnumTagSinglePayload((uint64_t)v200, 1, v202);
        v237 = __swift_getEnumTagSinglePayload((uint64_t)v201, 1, v202);
        if (v236)
        {
          if (!v237)
          {
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v200, v201, v202);
LABEL_59:
            __swift_storeEnumTagSinglePayload((uint64_t)v200, 0, 1, v202);
            goto LABEL_60;
          }
        }
        else
        {
          v281 = *(_QWORD *)(v202 - 8);
          if (!v237)
          {
            (*(void (**)(char *, char *, uint64_t))(v281 + 40))(v200, v201, v202);
LABEL_60:
            v238 = v160[12];
            v239 = &v158[v238];
            v240 = &v159[v238];
            v241 = sub_1A6121DF0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 40))(v239, v240, v241);
            *(_QWORD *)&v158[v160[13]] = *(_QWORD *)&v159[v160[13]];
            swift_bridgeObjectRelease();
            v242 = v160[14];
            v243 = &v158[v242];
            v244 = &v159[v242];
            v245 = type metadata accessor for AirPollutant();
            LODWORD(v239) = __swift_getEnumTagSinglePayload((uint64_t)v243, 1, v245);
            v246 = __swift_getEnumTagSinglePayload((uint64_t)v244, 1, v245);
            if ((_DWORD)v239)
            {
              if (!v246)
              {
                *v243 = *v244;
                v247 = *(int *)(v245 + 20);
                v248 = &v243[v247];
                v292 = v244;
                v249 = &v244[v247];
                type metadata accessor for AirPollutantMeasurement();
                if (swift_getEnumCaseMultiPayload() == 1)
                  v250 = &qword_1ED190B60;
                else
                  v250 = &qword_1ED1922B8;
                v251 = __swift_instantiateConcreteTypeFromMangledName(v250);
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v251 - 8) + 32))(v248, v249, v251);
                swift_storeEnumTagMultiPayload();
                v243[*(int *)(v245 + 24)] = v292[*(int *)(v245 + 24)];
                __swift_storeEnumTagSinglePayload((uint64_t)v243, 0, 1, v245);
                goto LABEL_69;
              }
            }
            else
            {
              if (!v246)
              {
                *v243 = *v244;
                if (a1 != a2)
                {
                  v276 = *(int *)(v245 + 20);
                  v277 = &v244[v276];
                  v293 = v244;
                  v278 = &v243[v276];
                  sub_1A5FA1740((uint64_t)&v243[v276], (uint64_t (*)(_QWORD))type metadata accessor for AirPollutantMeasurement);
                  type metadata accessor for AirPollutantMeasurement();
                  if (swift_getEnumCaseMultiPayload() == 1)
                    v279 = &qword_1ED190B60;
                  else
                    v279 = &qword_1ED1922B8;
                  v280 = __swift_instantiateConcreteTypeFromMangledName(v279);
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v280 - 8) + 32))(v278, v277, v280);
                  v244 = v293;
                  swift_storeEnumTagMultiPayload();
                }
                v243[*(int *)(v245 + 24)] = v244[*(int *)(v245 + 24)];
                goto LABEL_69;
              }
              sub_1A5FA1740((uint64_t)v243, (uint64_t (*)(_QWORD))type metadata accessor for AirPollutant);
            }
            v252 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
            memcpy(v243, v244, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
LABEL_69:
            v145 = a3;
            v88 = v294;
            v158[v160[15]] = v159[v160[15]];
            v253 = v160[16];
            v254 = &v158[v253];
            v255 = &v159[v253];
            *v254 = *v255;
            v257 = *((_QWORD *)v255 + 1);
            v256 = *((_QWORD *)v255 + 2);
            *((_QWORD *)v254 + 1) = v257;
            *((_QWORD *)v254 + 2) = v256;
            swift_bridgeObjectRelease();
            v258 = v160[17];
            v259 = &v158[v258];
            v260 = &v159[v258];
            ((void (*)(_BYTE *, _BYTE *, uint64_t))v295)(&v158[v258], &v159[v258], v294);
            ((void (*)(char *, char *, uint64_t))v295)(&v259[v109[5]], &v260[v109[5]], v294);
            *(_QWORD *)&v259[v109[6]] = *(_QWORD *)&v260[v109[6]];
            *(_QWORD *)&v259[v109[7]] = *(_QWORD *)&v260[v109[7]];
            *(_QWORD *)&v259[v109[8]] = *(_QWORD *)&v260[v109[8]];
            swift_release();
            goto LABEL_70;
          }
          (*(void (**)(char *, uint64_t))(v281 + 8))(v200, v202);
        }
        v212 = &qword_1ED1940B8;
LABEL_45:
        v213 = __swift_instantiateConcreteTypeFromMangledName(v212);
        memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
        goto LABEL_60;
      }
      sub_1A5FA1740((uint64_t)v200, (uint64_t (*)(_QWORD))type metadata accessor for ProviderAttribution);
    }
    v212 = &qword_1ED192330;
    goto LABEL_45;
  }
  if (v161)
  {
LABEL_31:
    v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
    memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
    goto LABEL_70;
  }
  v162 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v283 + 32);
  v162(v158, v159, v88);
  v162(&v158[v160[5]], &v159[v160[5]], v88);
  *(_OWORD *)&v158[v160[6]] = *(_OWORD *)&v159[v160[6]];
  memcpy(&v158[v160[7]], &v159[v160[7]], 0x78uLL);
  *(_QWORD *)&v158[v160[8]] = *(_QWORD *)&v159[v160[8]];
  memcpy(&v158[v160[9]], &v159[v160[9]], 0x58uLL);
  v158[v160[10]] = v159[v160[10]];
  v163 = v160[11];
  v164 = &v158[v163];
  v165 = &v159[v163];
  v166 = type metadata accessor for ProviderAttribution();
  v291 = v162;
  if (__swift_getEnumTagSinglePayload((uint64_t)v165, 1, v166))
  {
    v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192330);
    memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
  }
  else
  {
    *v164 = *v165;
    v208 = *(int *)(v166 + 20);
    __dstb = (char *)v164 + v208;
    v209 = (char *)v165 + v208;
    v210 = sub_1A6121DF0();
    if (__swift_getEnumTagSinglePayload((uint64_t)v209, 1, v210))
    {
      v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1940B8);
      memcpy(__dstb, v209, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 32))(__dstb, v209, v210);
      __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v210);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v164, 0, 1, v166);
  }
  v214 = v160[12];
  v215 = &v158[v214];
  v216 = &v159[v214];
  v217 = sub_1A6121DF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v217 - 8) + 32))(v215, v216, v217);
  *(_QWORD *)&v158[v160[13]] = *(_QWORD *)&v159[v160[13]];
  v218 = v160[14];
  v219 = &v158[v218];
  v220 = &v159[v218];
  v221 = type metadata accessor for AirPollutant();
  if (__swift_getEnumTagSinglePayload((uint64_t)v220, 1, v221))
  {
    v222 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1922D0);
    memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
  }
  else
  {
    *v219 = *v220;
    v223 = *(int *)(v221 + 20);
    v224 = &v219[v223];
    __dstc = v219;
    v225 = &v220[v223];
    type metadata accessor for AirPollutantMeasurement();
    if (swift_getEnumCaseMultiPayload() == 1)
      v226 = &qword_1ED190B60;
    else
      v226 = &qword_1ED1922B8;
    v227 = __swift_instantiateConcreteTypeFromMangledName(v226);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(v224, v225, v227);
    swift_storeEnumTagMultiPayload();
    __dstc[*(int *)(v221 + 24)] = v220[*(int *)(v221 + 24)];
    __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v221);
  }
  v145 = a3;
  v88 = v294;
  v158[v160[15]] = v159[v160[15]];
  v228 = v160[16];
  v229 = &v158[v228];
  v230 = &v159[v228];
  *(_OWORD *)v229 = *(_OWORD *)v230;
  *((_QWORD *)v229 + 2) = *((_QWORD *)v230 + 2);
  v231 = v160[17];
  v232 = &v158[v231];
  v233 = &v159[v231];
  v291(&v158[v231], &v159[v231], v294);
  v291(&v232[v109[5]], &v233[v109[5]], v294);
  *(_QWORD *)&v232[v109[6]] = *(_QWORD *)&v233[v109[6]];
  *(_QWORD *)&v232[v109[7]] = *(_QWORD *)&v233[v109[7]];
  *(_QWORD *)&v232[v109[8]] = *(_QWORD *)&v233[v109[8]];
  __swift_storeEnumTagSinglePayload((uint64_t)v158, 0, 1, (uint64_t)v160);
LABEL_70:
  v261 = v145[11];
  v262 = (_QWORD *)(a1 + v261);
  v263 = (_QWORD *)(a2 + v261);
  v264 = type metadata accessor for WeatherChanges();
  v265 = __swift_getEnumTagSinglePayload((uint64_t)v262, 1, v264);
  v266 = __swift_getEnumTagSinglePayload((uint64_t)v263, 1, v264);
  if (!v265)
  {
    if (!v266)
    {
      *v262 = *v263;
      swift_bridgeObjectRelease();
      v273 = *(int *)(v264 + 20);
      v274 = (char *)v262 + v273;
      v275 = (char *)v263 + v273;
      ((void (*)(char *, char *, uint64_t))v295)((char *)v262 + v273, v275, v88);
      ((void (*)(char *, char *, uint64_t))v295)(&v274[v109[5]], &v275[v109[5]], v88);
      *(_QWORD *)&v274[v109[6]] = *(_QWORD *)&v275[v109[6]];
      *(_QWORD *)&v274[v109[7]] = *(_QWORD *)&v275[v109[7]];
      *(_QWORD *)&v274[v109[8]] = *(_QWORD *)&v275[v109[8]];
      swift_release();
      goto LABEL_76;
    }
    sub_1A5FA1740((uint64_t)v262, (uint64_t (*)(_QWORD))type metadata accessor for WeatherChanges);
    goto LABEL_75;
  }
  if (v266)
  {
LABEL_75:
    v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
    memcpy(v262, v263, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
    goto LABEL_76;
  }
  *v262 = *v263;
  v267 = *(int *)(v264 + 20);
  v268 = (char *)v262 + v267;
  v269 = (char *)v263 + v267;
  v270 = *(void (**)(char *, char *, uint64_t))(v283 + 32);
  v270((char *)v262 + v267, v269, v88);
  v270(&v268[v109[5]], &v269[v109[5]], v88);
  *(_QWORD *)&v268[v109[6]] = *(_QWORD *)&v269[v109[6]];
  *(_QWORD *)&v268[v109[7]] = *(_QWORD *)&v269[v109[7]];
  *(_QWORD *)&v268[v109[8]] = *(_QWORD *)&v269[v109[8]];
  __swift_storeEnumTagSinglePayload((uint64_t)v262, 0, 1, v264);
LABEL_76:
  *(_QWORD *)(a1 + v145[12]) = *(_QWORD *)(a2 + v145[12]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Weather()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6084E98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v19;

  OUTLINED_FUNCTION_36_12();
  OUTLINED_FUNCTION_14_0();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  OUTLINED_FUNCTION_14_0();
  if (v9)
  {
    v7 = v10;
    v11 = a3[5];
LABEL_22:
    v8 = v4 + v11;
    return __swift_getEnumTagSinglePayload(v8, v3, v7);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  OUTLINED_FUNCTION_14_0();
  if (v12)
  {
    v7 = v13;
    v11 = a3[6];
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  OUTLINED_FUNCTION_14_0();
  if (v14)
  {
    v7 = v15;
    v11 = a3[7];
    goto LABEL_22;
  }
  if ((_DWORD)v3 != 2147483646)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
    OUTLINED_FUNCTION_14_0();
    if (v9)
    {
      v7 = v19;
      v11 = a3[10];
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
      v11 = a3[11];
    }
    goto LABEL_22;
  }
  v16 = *(_QWORD *)(v4 + a3[8]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  v17 = v16 - 1;
  if (v17 < 0)
    v17 = -1;
  return (v17 + 1);
}

uint64_t storeEnumTagSinglePayload for Weather()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1A6084FBC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_36_12();
  OUTLINED_FUNCTION_13();
  if (v11)
  {
    v9 = v8;
    v10 = v5;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
    OUTLINED_FUNCTION_13();
    if (v11)
    {
      v9 = v12;
      v13 = a4[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
      OUTLINED_FUNCTION_13();
      if (v14)
      {
        v9 = v15;
        v13 = a4[6];
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
        OUTLINED_FUNCTION_13();
        if (v16)
        {
          v9 = v17;
          v13 = a4[7];
        }
        else
        {
          if (a3 == 2147483646)
          {
            *(_QWORD *)(v5 + a4[8]) = v4;
            OUTLINED_FUNCTION_9();
            return;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
          OUTLINED_FUNCTION_13();
          if (v11)
          {
            v9 = v18;
            v13 = a4[10];
          }
          else
          {
            v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193FF0);
            v13 = a4[11];
          }
        }
      }
    }
    v10 = v5 + v13;
  }
  __swift_storeEnumTagSinglePayload(v10, v4, v4, v9);
}

void sub_1A60850BC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  type metadata accessor for CurrentWeather();
  if (v0 <= 0x3F)
  {
    sub_1A5FC0748();
    if (v1 <= 0x3F)
    {
      sub_1A5FC07A0();
      if (v2 <= 0x3F)
      {
        sub_1A5FC0870();
        if (v3 <= 0x3F)
        {
          sub_1A5FA87CC(319, &qword_1ED193510, (void (*)(uint64_t))type metadata accessor for AirQuality);
          if (v4 <= 0x3F)
          {
            sub_1A5FA87CC(319, &qword_1ED193FF8, (void (*)(uint64_t))type metadata accessor for WeatherChanges);
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for Weather.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Weather.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1A60852B8 + 4 * byte_1A613381E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1A60852EC + 4 * byte_1A6133819[v4]))();
}

uint64_t sub_1A60852EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60852F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A60852FCLL);
  return result;
}

uint64_t sub_1A6085308(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6085310);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1A6085314(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A608531C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Weather.CodingKeys()
{
  return &type metadata for Weather.CodingKeys;
}

unint64_t sub_1A608533C()
{
  unint64_t result;

  result = qword_1EE8157C8;
  if (!qword_1EE8157C8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61339C4, &type metadata for Weather.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8157C8);
  }
  return result;
}

unint64_t sub_1A608537C()
{
  unint64_t result;

  result = qword_1EE8157D0;
  if (!qword_1EE8157D0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6133934, &type metadata for Weather.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8157D0);
  }
  return result;
}

unint64_t sub_1A60853BC()
{
  unint64_t result;

  result = qword_1EE8157D8[0];
  if (!qword_1EE8157D8[0])
  {
    result = MEMORY[0x1A85BB36C](&unk_1A613395C, &type metadata for Weather.CodingKeys);
    atomic_store(result, qword_1EE8157D8);
  }
  return result;
}

void DailyWeatherStatistics.init(days:baselineStartDate:metadata:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  OUTLINED_FUNCTION_6_26();
}

uint64_t sub_1A608542C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v3 + *(int *)(a1 + 52);
  v6 = OUTLINED_FUNCTION_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, v2, v6);
  return sub_1A5FA7D50(v1, v3 + *(int *)(a1 + 56));
}

uint64_t static DailyWeatherStatistics.== infix(_:_:)()
{
  if ((sub_1A6123914() & 1) != 0)
    OUTLINED_FUNCTION_6_26();
  return 0;
}

uint64_t DailyWeatherStatistics.days.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DailyWeatherStatistics.days.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DailyWeatherStatistics.days.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t DailyWeatherStatistics.baselineStartDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 52);
  v5 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_30(a2, v4, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 16));
}

uint64_t DailyWeatherStatistics.baselineStartDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 52);
  v5 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_30(v4, a1, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 40));
}

uint64_t (*DailyWeatherStatistics.baselineStartDate.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t DailyWeatherStatistics.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A5FBFA40(v2 + *(int *)(a1 + 56), a2);
}

uint64_t DailyWeatherStatistics.metadata.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5FF2038(a1, v2 + *(int *)(a2 + 56));
}

uint64_t (*DailyWeatherStatistics.metadata.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t DailyWeatherStatistics.startIndex.getter()
{
  return sub_1A61238D8();
}

void DailyWeatherStatistics.endIndex.getter()
{
  JUMPOUT(0x1A85BAAB4);
}

uint64_t DailyWeatherStatistics.subscript.getter()
{
  return sub_1A6123920();
}

uint64_t sub_1A608563C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1937334628 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A614FBB0 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_1A6123CF8();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A6085774(char a1)
{
  if (!a1)
    return 1937334628;
  if (a1 == 1)
    return 0xD000000000000011;
  return 0x617461646174656DLL;
}

uint64_t sub_1A60857C8()
{
  char *v0;

  return sub_1A6085774(*v0);
}

uint64_t sub_1A60857D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A608563C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6085808(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A6133DE0, a1);
  return sub_1A6123DE8();
}

uint64_t sub_1A608583C(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A6133DE0, a1);
  return sub_1A6123DF4();
}

void DailyWeatherStatistics.encode(to:)()
{
  OUTLINED_FUNCTION_5_28();
}

void sub_1A60858B0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  MEMORY[0x1A85BB36C](&unk_1A6133DE0, a1);
  v4 = sub_1A6123CD4();
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1A6123DD0();
  *(_QWORD *)(v3 - 112) = *v2;
  *(_BYTE *)(v3 - 65) = 0;
  sub_1A6123908();
  *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 144);
  OUTLINED_FUNCTION_9_2();
}

void sub_1A608596C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 - 128);
  sub_1A6123CC8();
  if (!v4)
  {
    *(_BYTE *)(v3 - 112) = 1;
    sub_1A6121F58();
    sub_1A5FCAA84(&qword_1ED191698, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_0_32();
    *(_BYTE *)(v3 - 112) = 2;
    type metadata accessor for WeatherMetadata();
    sub_1A5FCAA84(&qword_1ED191718, (uint64_t (*)(uint64_t))type metadata accessor for WeatherMetadata, (uint64_t)&protocol conformance descriptor for WeatherMetadata);
    OUTLINED_FUNCTION_0_32();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  OUTLINED_FUNCTION_20();
}

void type metadata accessor for DailyWeatherStatistics.CodingKeys()
{
  JUMPOUT(0x1A85BB2E8);
}

void DailyWeatherStatistics.init(from:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for WeatherMetadata();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_11_0();
  v1 = sub_1A6121F58();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_5_28();
}

void sub_1A6085B00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1A85BB36C](&unk_1A6133DE0, a1);
  v6 = sub_1A6123C5C();
  *(_QWORD *)(v5 - 144) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 160) = v3;
  *(_QWORD *)(v5 - 152) = v1;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for DailyWeatherStatistics();
}

void sub_1A6085B70(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 - 200) = a1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v3 - 136) = v2;
  v5 = *(_QWORD *)(v3 - 128);
  sub_1A6123DC4();
  if (!v5)
  {
    *(_QWORD *)(v3 - 232) = v4;
    *(_QWORD *)(v3 - 128) = v1;
    sub_1A6123908();
    *(_BYTE *)(v3 - 65) = 0;
    *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 152);
    OUTLINED_FUNCTION_9_2();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  OUTLINED_FUNCTION_20();
}

void sub_1A6085DD0()
{
  DailyWeatherStatistics.init(from:)();
}

void sub_1A6085DF0()
{
  DailyWeatherStatistics.encode(to:)();
}

uint64_t sub_1A6085E04()
{
  return static DailyWeatherStatistics.== infix(_:_:)();
}

void sub_1A6085E14()
{
  JUMPOUT(0x1A85BB36CLL);
}

uint64_t sub_1A6085E24(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85BB36C](&protocol conformance descriptor for DailyWeatherStatistics<A>);
  return MEMORY[0x1A85BB36C](MEMORY[0x1E0DEDE40], a1, &v3);
}

void sub_1A6085E6C()
{
  JUMPOUT(0x1A85BB36CLL);
}

uint64_t sub_1A6085E7C(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85BB36C](&protocol conformance descriptor for DailyWeatherStatistics<A>);
  return MEMORY[0x1A85BB36C](MEMORY[0x1E0DEDE28], a1, &v3);
}

uint64_t sub_1A6085EC4()
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for DailyWeatherStatistics<A>);
  return sub_1A6123968();
}

_QWORD *sub_1A6085F14(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A6086204(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB508]);
}

uint64_t sub_1A6085F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for DailyWeatherStatistics<A>, a3);
  return sub_1A6123974();
}

uint64_t sub_1A6085F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for DailyWeatherStatistics<A>, a4);
  return sub_1A6123950();
}

uint64_t sub_1A6085FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for DailyWeatherStatistics<A>, a3);
  return sub_1A612398C();
}

void sub_1A608603C()
{
  JUMPOUT(0x1A85BB36CLL);
}

uint64_t sub_1A608604C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = DailyWeatherStatistics.startIndex.getter();
  *a1 = result;
  return result;
}

void sub_1A6086070()
{
  DailyWeatherStatistics.endIndex.getter();
}

uint64_t sub_1A6086084(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

void (*sub_1A6086094(_QWORD *a1, uint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1A60860F0(v6, *a2, a3);
  return sub_1A5F8A82C;
}

void (*sub_1A60860F0(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = malloc(*(_QWORD *)(v4 + 64));
  DailyWeatherStatistics.subscript.getter();
  return sub_1A5F8A854;
}

uint64_t sub_1A608615C(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for DailyWeatherStatistics<A>, a1);
  return sub_1A6123980();
}

uint64_t sub_1A60861A8()
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for DailyWeatherStatistics<A>);
  return sub_1A612395C();
}

_QWORD *sub_1A60861F8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A6086204(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB500]);
}

_QWORD *sub_1A6086204(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  v7 = MEMORY[0x1A85BB36C](&protocol conformance descriptor for DailyWeatherStatistics<A>);
  result = a4(&v9, a1, a2, v7, MEMORY[0x1E0DEB458]);
  *a1 = v9;
  return result;
}

uint64_t sub_1A6086268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *(_QWORD *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v2, a1);
  v6 = DailyWeatherStatistics.startIndex.getter();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, a1);
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for DailyWeatherStatistics<A>, a1);
  result = sub_1A6123B60();
  *(_QWORD *)(a2 + *(int *)(result + 36)) = v6;
  return result;
}

uint64_t sub_1A60862F4(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for DailyWeatherStatistics<A>, a1);
  return sub_1A61239A4();
}

uint64_t sub_1A6086328(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for DailyWeatherStatistics<A>, a1);
  return sub_1A61239D4();
}

uint64_t sub_1A608635C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6086368(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_6();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 52);
    }
    else
    {
      v9 = type metadata accessor for WeatherMetadata();
      v10 = *(int *)(a3 + 56);
    }
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_1A60863FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1A6086408(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_6();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 52);
    }
    else
    {
      v9 = type metadata accessor for WeatherMetadata();
      v10 = *(int *)(a4 + 56);
    }
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A6086498(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A60864E4 + 4 * byte_1A6133A45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A6086518 + 4 * byte_1A6133A40[v4]))();
}

uint64_t sub_1A6086518(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6086520(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6086528);
  return result;
}

uint64_t sub_1A6086534(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A608653CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A6086540(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6086548(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A6086554()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A6086564()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A6086574()
{
  JUMPOUT(0x1A85BB36CLL);
}

uint64_t WeatherAQIScaleCacheManager.__allocating_init(store:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_2();
  WeatherAQIScaleCacheManager.init(store:)(a1, a2);
  return v4;
}

uint64_t sub_1A60865D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A60865FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  int EnumTagSinglePayload;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192878);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0();
  v11 = v10 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192438);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_0();
  v15 = v14 - v13;
  sub_1A6122EE8();
  result = OUTLINED_FUNCTION_2_32();
  if (a1)
  {
    sub_1A6122EF4();
    OUTLINED_FUNCTION_2_32();
    sub_1A6122F24();
    OUTLINED_FUNCTION_2_32();
    sub_1A6122F18();
    v17 = sub_1A612329C();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v15, 1, v17);
    result = sub_1A6086F08(v15);
    if (EnumTagSinglePayload != 1)
    {
      sub_1A6122168();
      v20 = OUTLINED_FUNCTION_7_29();
      v19 = sub_1A6122F30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v11, a1, v19);
      __swift_storeEnumTagSinglePayload(v11, 0, 1, v19);
      OUTLINED_FUNCTION_3_28();
      sub_1A601C054(v11, a2, a3);
      *(_QWORD *)(v4 + 16) = v20;
      OUTLINED_FUNCTION_3_28();
      swift_bridgeObjectRelease();
      sub_1A6122174();
      sub_1A6086794(v20);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1A6086794(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  __int128 v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  int64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t *v50;
  int64_t v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = sub_1A6122F30();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v49 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1921F0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v41 - v9);
  if (!sub_1A5FC4454())
  {
    if (qword_1ED193BE8 != -1)
      goto LABEL_38;
    goto LABEL_34;
  }
  v50 = v10;
  v11 = *(_QWORD *)(a1 + 64);
  v43 = a1 + 64;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v47 = (unint64_t)(v12 + 63) >> 6;
  v42 = v47 - 1;
  swift_bridgeObjectRetain();
  v15 = 0;
  *(_QWORD *)&v16 = 136446210;
  v45 = v16;
  v44 = MEMORY[0x1E0DEE9B8] + 8;
  v46 = a1;
  v48 = v8;
  if (!v14)
    goto LABEL_7;
LABEL_5:
  v52 = v15;
  v53 = ((v14 - 1) & v14);
  v17 = __clz(__rbit64(v14)) | (v15 << 6);
  v18 = v50;
LABEL_6:
  v19 = *(_QWORD *)(a1 + 56);
  v20 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v17);
  v21 = v20[1];
  *v8 = *v20;
  v8[1] = v21;
  v22 = v19 + *(_QWORD *)(v3 + 72) * v17;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191058);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)v8 + *(int *)(v23 + 48), v22, v2);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v23);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1A6086F48((uint64_t)v8, (uint64_t)v18);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191058);
    if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v27) == 1)
    {
      swift_release();
      swift_release();
      return;
    }
    v28 = *v18;
    v29 = v18[1];
    v30 = (char *)v18 + *(int *)(v27 + 48);
    v31 = (uint64_t)v49;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v49, v30, v2);
    v32 = sub_1A603A19C(v28, v29, v31);
    v34 = v33;
    v36 = v35;
    sub_1A6123638();
    v54 = v32;
    v55 = v34;
    v56 = v36;
    sub_1A6123614();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v8 = v48;
    v15 = v52;
    v14 = (unint64_t)v53;
    if (v53)
      goto LABEL_5;
LABEL_7:
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v24 >= v47)
    {
      v52 = v15;
      v18 = v50;
    }
    else
    {
      v25 = *(_QWORD *)(v43 + 8 * v24);
      v18 = v50;
      if (v25)
        goto LABEL_10;
      v37 = v15 + 2;
      if (v24 + 1 >= v47)
      {
LABEL_31:
        v52 = v24;
      }
      else
      {
        v25 = *(_QWORD *)(v43 + 8 * v37);
        if (v25)
          goto LABEL_18;
        if (v24 + 2 >= v47)
        {
          v52 = v37;
        }
        else
        {
          v25 = *(_QWORD *)(v43 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
            goto LABEL_10;
          }
          v37 = v24 + 3;
          if (v24 + 3 < v47)
          {
            v25 = *(_QWORD *)(v43 + 8 * v37);
            if (!v25)
            {
              while (1)
              {
                v24 = v37 + 1;
                if (__OFADD__(v37, 1))
                  break;
                if (v24 >= v47)
                {
                  v24 = v42;
                  goto LABEL_31;
                }
                v25 = *(_QWORD *)(v43 + 8 * v24);
                ++v37;
                if (v25)
                  goto LABEL_10;
              }
              __break(1u);
              return;
            }
LABEL_18:
            v24 = v37;
LABEL_10:
            v52 = v24;
            v53 = ((v25 - 1) & v25);
            v17 = __clz(__rbit64(v25)) + (v24 << 6);
            goto LABEL_6;
          }
          v52 = v24 + 2;
        }
      }
    }
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191058);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v26);
    v53 = 0;
  }
  __break(1u);
LABEL_38:
  swift_once();
LABEL_34:
  v38 = sub_1A612356C();
  __swift_project_value_buffer(v38, (uint64_t)qword_1ED19DB18);
  v53 = sub_1A6123554();
  v39 = sub_1A6123A40();
  if (os_log_type_enabled(v53, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_1A5F87000, v53, v39, "no store AQI scale database is setup - aborting caching", v40, 2u);
    MEMORY[0x1A85BB42C](v40, -1, -1);
  }

}

uint64_t sub_1A6086E18()
{
  uint64_t v0;
  uint64_t v2;

  sub_1A6122168();
  v2 = OUTLINED_FUNCTION_7_29();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE815860);
  sub_1A612377C();
  *(_QWORD *)(v0 + 16) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1A6122174();
  sub_1A6086794(v2);
  return swift_bridgeObjectRelease();
}

uint64_t WeatherAQIScaleCacheManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t WeatherAQIScaleCacheManager.__deallocating_deinit()
{
  WeatherAQIScaleCacheManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for WeatherAQIScaleCacheManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WeatherAQIScaleCacheManager.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1A6086F08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192438);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A6086F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1921F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Percentiles.init(p10:p50:p90:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);

  v8 = sub_1A6121CF4();
  v15 = OUTLINED_FUNCTION_11_23(a4, a1, v9, v10, v11, v12, v13, v14, v27, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32));
  v19 = OUTLINED_FUNCTION_10_29(v15, v16, v17, v18);
  OUTLINED_FUNCTION_11_23(a4 + *(int *)(v19 + 28), a2, v20, v21, v22, v23, v24, v25, v28, v29);
  return v30(a4 + *(int *)(v19 + 32), a3, v8);
}

uint64_t type metadata accessor for Percentiles(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Percentiles);
}

uint64_t Percentiles.p10.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_9_1();
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t Percentiles.p10.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_9_1();
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t (*Percentiles.p10.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t Percentiles.p50.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_9_1();
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t Percentiles.p50.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_9_1();
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t (*Percentiles.p50.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t Percentiles.p90.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_9_1();
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t Percentiles.p90.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_9_1();
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t (*Percentiles.p90.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t static Percentiles.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_1A6121CDC();
  if ((v0 & 1) == 0)
    return 0;
  v4 = OUTLINED_FUNCTION_10_29(v0, v1, v2, v3);
  OUTLINED_FUNCTION_7_30(*(int *)(v4 + 28));
  if ((sub_1A6121CDC() & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_7_30(*(int *)(v4 + 32));
  return sub_1A6121CDC();
}

uint64_t sub_1A60871D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 3158384 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 3159408 && a2 == 0xE300000000000000;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 3160432 && a2 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1A6123CF8();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

unint64_t sub_1A60872DC(unsigned __int8 a1)
{
  return ((unint64_t)a1 << 10) + 3158384;
}

unint64_t sub_1A60872F4()
{
  unsigned __int8 *v0;

  return sub_1A60872DC(*v0);
}

uint64_t sub_1A6087300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A60871D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6087328(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A6134018, a1);
  return sub_1A6123DE8();
}

uint64_t sub_1A608735C(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A6134018, a1);
  return sub_1A6123DF4();
}

void Percentiles.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  char v13;
  char v14;
  char v15;

  v12[1] = a2;
  v5 = type metadata accessor for Percentiles.CodingKeys(255, *(_QWORD *)(a2 + 16), a3, a4);
  MEMORY[0x1A85BB36C](&unk_1A6134018, v5);
  v6 = sub_1A6123CD4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6123DD0();
  v15 = 0;
  v10 = sub_1A6121CF4();
  MEMORY[0x1A85BB36C](MEMORY[0x1E0CAE340], v10);
  v11 = v12[3];
  sub_1A6123CC8();
  if (!v11)
  {
    v14 = 1;
    OUTLINED_FUNCTION_5_29();
    v13 = 2;
    OUTLINED_FUNCTION_5_29();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  OUTLINED_FUNCTION_20();
}

uint64_t type metadata accessor for Percentiles.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Percentiles.CodingKeys);
}

void Percentiles.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(void);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  char v43;
  char v44;
  char v45;

  v32 = a3;
  v5 = sub_1A6121CF4();
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  MEMORY[0x1E0C80A78](v5);
  v33 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v29 - v8;
  MEMORY[0x1E0C80A78](v9);
  v39 = (char *)&v29 - v10;
  v13 = type metadata accessor for Percentiles.CodingKeys(255, a2, v11, v12);
  MEMORY[0x1A85BB36C](&unk_1A6134018, v13);
  OUTLINED_FUNCTION_8_25();
  v40 = sub_1A6123C5C();
  v34 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v15 = (char *)&v29 - v14;
  v38 = type metadata accessor for Percentiles(0, a2, v16, v17);
  v18 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v20 = (char *)&v29 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v41 = v15;
  OUTLINED_FUNCTION_8_25();
  v21 = (uint64_t)v42;
  sub_1A6123DC4();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v30 = v18;
    v31 = v20;
    v22 = v37;
    v42 = a1;
    v23 = v36;
    v45 = 0;
    MEMORY[0x1A85BB36C](MEMORY[0x1E0CAE358], v37);
    OUTLINED_FUNCTION_9_24();
    v24 = v39;
    v39 = *(char **)(v23 + 32);
    ((void (*)(char *, char *, uint64_t))v39)(v31, v24, v22);
    v44 = 1;
    OUTLINED_FUNCTION_9_24();
    OUTLINED_FUNCTION_8_25();
    v25 = (void (*)(void))v39;
    ((void (*)(void))v39)();
    v43 = 2;
    sub_1A6123C44();
    OUTLINED_FUNCTION_8_21();
    v26 = v38;
    v27 = v31;
    OUTLINED_FUNCTION_8_25();
    v25();
    v28 = v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v32, v27, v26);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v26);
  }
  OUTLINED_FUNCTION_20();
}

void sub_1A608783C(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  Percentiles.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

void sub_1A6087854(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Percentiles.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_1A6087868()
{
  return static Percentiles.== infix(_:_:)();
}

uint64_t sub_1A6087870()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A6121CF4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A60878E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6121CF4();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 28)), (uint64_t *)((char *)a2 + *(int *)(a3 + 28)), v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 32)), (uint64_t *)((char *)a2 + *(int *)(a3 + 32)), v7);
  }
  return a1;
}

uint64_t sub_1A6087994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_1A6121CF4();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  v6(a1 + *(int *)(a2 + 28), v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 32), v4);
}

uint64_t sub_1A6087A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A6121CF4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v6);
  v7(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v6);
  return a1;
}

uint64_t sub_1A6087A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A6121CF4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v6);
  v7(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v6);
  return a1;
}

uint64_t sub_1A6087B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A6121CF4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v6);
  v7(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v6);
  return a1;
}

uint64_t sub_1A6087BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1A6121CF4();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v6);
  v7(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v6);
  return a1;
}

uint64_t sub_1A6087C34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6087C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_9_1();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_1A6087C74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6087C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_9_1();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_1A6087CB8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A6087D04 + 4 * byte_1A6133E85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A6087D38 + 4 * byte_1A6133E80[v4]))();
}

uint64_t sub_1A6087D38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6087D40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6087D48);
  return result;
}

uint64_t sub_1A6087D54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6087D5CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A6087D60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6087D68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A6087D74()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A6087D84()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A6087D94()
{
  JUMPOUT(0x1A85BB36CLL);
}

WeatherKit::WeatherServiceHourlyRelativeRange __swiftcall WeatherServiceHourlyRelativeRange.init(start:end:relativeTo:)(Swift::Int start, Swift::Int end, WeatherKit::WeatherServiceHourlyRelativeRange::RelativeTo relativeTo)
{
  uint64_t v3;
  char v4;
  WeatherKit::WeatherServiceHourlyRelativeRange result;

  v4 = *(_BYTE *)relativeTo;
  *(_QWORD *)v3 = start;
  *(_QWORD *)(v3 + 8) = end;
  *(_BYTE *)(v3 + 16) = v4;
  result.end = end;
  result.start = start;
  result.relativeTo = relativeTo;
  return result;
}

WeatherKit::WeatherServiceHourlyRelativeRange::RelativeTo_optional __swiftcall WeatherServiceHourlyRelativeRange.RelativeTo.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  WeatherKit::WeatherServiceHourlyRelativeRange::RelativeTo_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A6123BB4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t WeatherServiceHourlyRelativeRange.RelativeTo.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 7827310;
  else
    return 7954788;
}

uint64_t sub_1A6087E38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A5FCF720(*a1, *a2);
}

unint64_t sub_1A6087E48()
{
  unint64_t result;

  result = qword_1EE8158E8;
  if (!qword_1EE8158E8)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherServiceHourlyRelativeRange.RelativeTo, &type metadata for WeatherServiceHourlyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE8158E8);
  }
  return result;
}

void sub_1A6087E84()
{
  sub_1A6105800();
}

uint64_t sub_1A6087E8C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A6002648(a1, *v1);
}

uint64_t sub_1A6087E94(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A6105A1C(a1, *v1);
}

WeatherKit::WeatherServiceHourlyRelativeRange::RelativeTo_optional sub_1A6087E9C(Swift::String *a1)
{
  return WeatherServiceHourlyRelativeRange.RelativeTo.init(rawValue:)(*a1);
}

uint64_t sub_1A6087EA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = WeatherServiceHourlyRelativeRange.RelativeTo.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE300000000000000;
  return result;
}

uint64_t sub_1A6087ED0()
{
  sub_1A6088054();
  return sub_1A61238B4();
}

uint64_t sub_1A6087F2C()
{
  sub_1A6088054();
  return sub_1A612389C();
}

ValueMetadata *type metadata accessor for WeatherServiceHourlyRelativeRange()
{
  return &type metadata for WeatherServiceHourlyRelativeRange;
}

uint64_t storeEnumTagSinglePayload for WeatherServiceHourlyRelativeRange.RelativeTo(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A6087FD4 + 4 * byte_1A6134075[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A6088008 + 4 * byte_1A6134070[v4]))();
}

uint64_t sub_1A6088008(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6088010(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6088018);
  return result;
}

uint64_t sub_1A6088024(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A608802CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A6088030(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6088038(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherServiceHourlyRelativeRange.RelativeTo()
{
  return &type metadata for WeatherServiceHourlyRelativeRange.RelativeTo;
}

unint64_t sub_1A6088054()
{
  unint64_t result;

  result = qword_1EE8158F0;
  if (!qword_1EE8158F0)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherServiceHourlyRelativeRange.RelativeTo, &type metadata for WeatherServiceHourlyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE8158F0);
  }
  return result;
}

uint64_t Swell.init(height:direction:period:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a3, a1, v8);
  v9 = OUTLINED_FUNCTION_1_36();
  v10 = a3 + *(int *)(v9 + 20);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  *(double *)(a3 + *(int *)(v9 + 24)) = a4;
  return result;
}

uint64_t type metadata accessor for Swell()
{
  uint64_t result;

  result = qword_1ED194040;
  if (!qword_1ED194040)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Swell.height.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t Swell.height.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t (*Swell.height.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t Swell.direction.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t Swell.direction.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_36();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*Swell.direction.modify())(double, double)
{
  OUTLINED_FUNCTION_1_36();
  return GEOLocationCoordinate2DMake;
}

double Swell.period.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_1_36() + 24));
}

uint64_t Swell.period.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_1_36();
  *(double *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

double (*Swell.period.modify())(double, double)
{
  OUTLINED_FUNCTION_1_36();
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1A60882B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x746867696568 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x646F69726570 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1A6123CF8();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1A60883FC(char a1)
{
  if (!a1)
    return 0x746867696568;
  if (a1 == 1)
    return 0x6F69746365726964;
  return 0x646F69726570;
}

uint64_t sub_1A6088450()
{
  char *v0;

  return sub_1A60883FC(*v0);
}

uint64_t sub_1A6088458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A60882B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A608847C()
{
  sub_1A6088664();
  return sub_1A6123DE8();
}

uint64_t sub_1A60884A4()
{
  sub_1A6088664();
  return sub_1A6123DF4();
}

uint64_t Swell.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8158F8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0();
  v5 = v4 - v3;
  OUTLINED_FUNCTION_7_31();
  sub_1A6123DD0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  sub_1A5FB202C(&qword_1ED191678, &qword_1ED192980, MEMORY[0x1E0CAE340]);
  OUTLINED_FUNCTION_4();
  if (!v0)
  {
    type metadata accessor for Swell();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
    sub_1A5FB202C(&qword_1ED191668, &qword_1ED192950, MEMORY[0x1E0CAE340]);
    OUTLINED_FUNCTION_4();
    sub_1A6123CA4();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
}

unint64_t sub_1A6088664()
{
  unint64_t result;

  result = qword_1EE815900;
  if (!qword_1EE815900)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6134310, &type metadata for Swell.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815900);
  }
  return result;
}

uint64_t Swell.init(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  v15 = *(_QWORD *)(v1 - 8);
  v16 = v1;
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_11_0();
  v14 = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_0();
  v17 = v5;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815908);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_0();
  v6 = type metadata accessor for Swell();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_0();
  v9 = v8 - v7;
  OUTLINED_FUNCTION_7_31();
  sub_1A6123DC4();
  if (v19)
    return OUTLINED_FUNCTION_17_4();
  sub_1A5FB202C(&qword_1EE812E58, &qword_1ED192980, MEMORY[0x1E0CAE358]);
  OUTLINED_FUNCTION_6_27();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v9, v17, v3);
  sub_1A5FB202C(&qword_1EE815910, &qword_1ED192950, MEMORY[0x1E0CAE358]);
  OUTLINED_FUNCTION_6_27();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v9 + *(int *)(v6 + 20), v14, v16);
  sub_1A6123C20();
  v11 = v10;
  OUTLINED_FUNCTION_2_33();
  *(_QWORD *)(v9 + *(int *)(v6 + 24)) = v11;
  sub_1A6088980(v9, a1);
  OUTLINED_FUNCTION_17_4();
  return sub_1A60889C4(v9);
}

uint64_t sub_1A6088980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Swell();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A60889C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Swell();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A6088A00@<X0>(uint64_t a1@<X8>)
{
  return Swell.init(from:)(a1);
}

uint64_t sub_1A6088A14()
{
  return Swell.encode(to:)();
}

BOOL static Swell.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5FAD368(0, (unint64_t *)&qword_1ED193C60);
  if ((OUTLINED_FUNCTION_45() & 1) != 0
    && (v4 = OUTLINED_FUNCTION_1_36(), sub_1A5FAD368(0, &qword_1ED193C50), (OUTLINED_FUNCTION_45() & 1) != 0))
  {
    return *(double *)(a1 + *(int *)(v4 + 24)) == *(double *)(a2 + *(int *)(v4 + 24));
  }
  else
  {
    return 0;
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Swell(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for Swell(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for Swell(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for Swell(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for Swell(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for Swell(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for Swell()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6088E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
    v8 = a1 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for Swell()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6088EF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192950);
    v10 = a1 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

void sub_1A6088F6C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A5FC6410(319, (unint64_t *)&qword_1ED192988, (unint64_t *)&qword_1ED193C60);
  if (v0 <= 0x3F)
  {
    sub_1A5FC6410(319, &qword_1ED192958, &qword_1ED193C50);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for Swell.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A6089078 + 4 * byte_1A61341AD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A60890AC + 4 * byte_1A61341A8[v4]))();
}

uint64_t sub_1A60890AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60890B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A60890BCLL);
  return result;
}

uint64_t sub_1A60890C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A60890D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A60890D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60890DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Swell.CodingKeys()
{
  return &type metadata for Swell.CodingKeys;
}

unint64_t sub_1A60890FC()
{
  unint64_t result;

  result = qword_1EE815918;
  if (!qword_1EE815918)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61342E8, &type metadata for Swell.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815918);
  }
  return result;
}

unint64_t sub_1A608913C()
{
  unint64_t result;

  result = qword_1EE815920;
  if (!qword_1EE815920)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6134258, &type metadata for Swell.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815920);
  }
  return result;
}

unint64_t sub_1A608917C()
{
  unint64_t result;

  result = qword_1EE815928;
  if (!qword_1EE815928)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6134280, &type metadata for Swell.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815928);
  }
  return result;
}

uint64_t DayPrecipitationStatistics.init(day:averagePrecipitationProbability:averagePrecipitationAmount:averageSnowfallAmount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a4 = a1;
  *(double *)(a4 + 8) = a5;
  v8 = OUTLINED_FUNCTION_1_37();
  v9 = a4 + *(int *)(v8 + 24);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v12(v9, a2, v10);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(a4 + *(int *)(v8 + 28), a3, v10);
}

uint64_t DayPrecipitationStatistics.day.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DayPrecipitationStatistics.day.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*DayPrecipitationStatistics.day.modify())()
{
  return GEOLocationCoordinate2DMake;
}

double DayPrecipitationStatistics.averagePrecipitationProbability.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void DayPrecipitationStatistics.averagePrecipitationProbability.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*DayPrecipitationStatistics.averagePrecipitationProbability.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t DayPrecipitationStatistics.averagePrecipitationAmount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_37();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t DayPrecipitationStatistics.averagePrecipitationAmount.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_37();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*DayPrecipitationStatistics.averagePrecipitationAmount.modify())(double, double)
{
  OUTLINED_FUNCTION_1_37();
  return GEOLocationCoordinate2DMake;
}

uint64_t DayPrecipitationStatistics.averageSnowfallAmount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_37();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

uint64_t DayPrecipitationStatistics.averageSnowfallAmount.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_1_37();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v0 = OUTLINED_FUNCTION_11();
  return OUTLINED_FUNCTION_30(v0, v1, v2, v3);
}

double (*DayPrecipitationStatistics.averageSnowfallAmount.modify())(double, double)
{
  OUTLINED_FUNCTION_1_37();
  return GEOLocationCoordinate2DMake;
}

uint64_t static DayPrecipitationStatistics.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)a1 == *(_QWORD *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && (OUTLINED_FUNCTION_1_37(), sub_1A5FAC190(), (sub_1A6121CDC() & 1) != 0))
  {
    return sub_1A6121CDC();
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1A6089464(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7954788 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001A6141B80 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001A6141BA0 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A6141BC0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A6123CF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A60895F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6089624 + 4 * byte_1A6134360[a1]))(7954788, 0xE300000000000000);
}

unint64_t sub_1A6089624()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1A6089660()
{
  return 0xD000000000000015;
}

uint64_t sub_1A608967C()
{
  unsigned __int8 *v0;

  return sub_1A60895F8(*v0);
}

uint64_t sub_1A6089684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6089464(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A60896A8()
{
  sub_1A608986C();
  return sub_1A6123DE8();
}

uint64_t sub_1A60896D0()
{
  sub_1A608986C();
  return sub_1A6123DF4();
}

void DayPrecipitationStatistics.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815930);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_0();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A608986C();
  sub_1A6123DD0();
  sub_1A6123CBC();
  if (!v1)
  {
    sub_1A6123CA4();
    type metadata accessor for DayPrecipitationStatistics();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
    sub_1A5FCBBFC(&qword_1ED191678, MEMORY[0x1E0CAE340]);
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_3_1();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A608986C()
{
  unint64_t result;

  result = qword_1EE815938;
  if (!qword_1EE815938)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61344E0, &type metadata for DayPrecipitationStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815938);
  }
  return result;
}

void DayPrecipitationStatistics.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v26 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815940);
  v7 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_0();
  v10 = v9 - v8;
  v11 = type metadata accessor for DayPrecipitationStatistics();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_0();
  v14 = (uint64_t *)(v13 - v12);
  v15 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1A608986C();
  v30 = v10;
  v16 = v32;
  sub_1A6123DC4();
  if (v16)
  {
    OUTLINED_FUNCTION_8_4();
  }
  else
  {
    v32 = v11;
    v17 = v7;
    v18 = v5;
    v20 = v27;
    v19 = v28;
    v36 = 0;
    v21 = v29;
    *v14 = sub_1A6123C38();
    v35 = 1;
    v22 = v30;
    sub_1A6123C20();
    v14[1] = v23;
    v34 = 2;
    v25[2] = sub_1A5FCBBFC(&qword_1EE812E58, MEMORY[0x1E0CAE358]);
    OUTLINED_FUNCTION_7_9();
    v24 = (char *)v14 + *(int *)(v32 + 24);
    v25[0] = *(_QWORD *)(v20 + 32);
    v25[1] = v24;
    ((void (*)(void))v25[0])();
    v33 = 3;
    OUTLINED_FUNCTION_7_9();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v21);
    ((void (*)(char *, char *, uint64_t))v25[0])((char *)v14 + *(int *)(v32 + 28), v18, v19);
    sub_1A6089B50((uint64_t)v14, v26);
    OUTLINED_FUNCTION_8_4();
    sub_1A6089B94((uint64_t)v14);
  }
  OUTLINED_FUNCTION_20();
}

uint64_t sub_1A6089B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DayPrecipitationStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6089B94(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DayPrecipitationStatistics();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A6089BD0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  DayPrecipitationStatistics.init(from:)(a1, a2);
}

void sub_1A6089BE4(_QWORD *a1)
{
  DayPrecipitationStatistics.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for DayPrecipitationStatistics()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6089C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 24), a2, v6);
}

uint64_t storeEnumTagSinglePayload for DayPrecipitationStatistics()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6089C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  return __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 24), a2, a2, v7);
}

uint64_t storeEnumTagSinglePayload for DayPrecipitationStatistics.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A6089CF4 + 4 * byte_1A6134369[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A6089D28 + 4 * byte_1A6134364[v4]))();
}

uint64_t sub_1A6089D28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6089D30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6089D38);
  return result;
}

uint64_t sub_1A6089D44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6089D4CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A6089D50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6089D58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DayPrecipitationStatistics.CodingKeys()
{
  return &type metadata for DayPrecipitationStatistics.CodingKeys;
}

unint64_t sub_1A6089D78()
{
  unint64_t result;

  result = qword_1EE815948;
  if (!qword_1EE815948)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A61344B8, &type metadata for DayPrecipitationStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815948);
  }
  return result;
}

unint64_t sub_1A6089DB8()
{
  unint64_t result;

  result = qword_1EE815950;
  if (!qword_1EE815950)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6134428, &type metadata for DayPrecipitationStatistics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815950);
  }
  return result;
}

unint64_t sub_1A6089DF8()
{
  unint64_t result;

  result = qword_1EE815958[0];
  if (!qword_1EE815958[0])
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6134450, &type metadata for DayPrecipitationStatistics.CodingKeys);
    atomic_store(result, qword_1EE815958);
  }
  return result;
}

void sub_1A6089E34(void *a1, uint64_t *a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  __int16 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  NSObject *v114;
  os_log_type_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  id v134;
  void *v135;
  char *v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  void *v146;
  _QWORD *v147;
  id v148;
  void *v149;
  void (*v150)(uint64_t, uint64_t);
  _QWORD v151[7];
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  void (*v162)(char *, uint64_t);
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  void (*v171)(uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int *v191;
  uint64_t v192;
  uint64_t v193;
  char v194;
  uint64_t v195;

  v168 = a5;
  v167 = a4;
  v160 = a1;
  v181 = *v5;
  v158 = sub_1A6123380();
  v157 = *(_QWORD *)(v158 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_129((uint64_t)v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929D8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193020);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193BE0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192708);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_11_0();
  v178 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192700);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_11_0();
  v177 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192940);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_11_0();
  v176 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_151();
  v175 = v23;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_53();
  v174 = v25;
  v183 = (_QWORD *)sub_1A6122618();
  v153 = *(v183 - 1);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v151 - v29;
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_129(v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193BB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_11_0();
  v35 = OUTLINED_FUNCTION_47_6(v34);
  v179 = *(_QWORD *)(v35 - 8);
  v180 = v35;
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_129(v36);
  v161 = v37;
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_53();
  v190 = v39;
  v40 = sub_1A6121F58();
  v185 = *(_QWORD *)(v40 - 8);
  v186 = v40;
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_129(v41);
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_53();
  v189 = v43;
  MEMORY[0x1E0C80A78](v44);
  OUTLINED_FUNCTION_53();
  v188 = v45;
  MEMORY[0x1E0C80A78](v46);
  v48 = (char *)v151 - v47;
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_53();
  v184 = v50;
  v164 = v51;
  MEMORY[0x1E0C80A78](v52);
  OUTLINED_FUNCTION_53();
  v187 = v53;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1929F0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v54);
  OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v55);
  v56 = OUTLINED_FUNCTION_42_6();
  v57 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v59 = (char *)v151 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v60);
  v62 = (char *)v151 - v61;
  v191 = (int *)OUTLINED_FUNCTION_63_6(*a2);
  v63 = v191[5];
  v169 = a3;
  v64 = (uint64_t)a3 + v63;
  sub_1A5FA25BC(v64, (uint64_t)v5, (uint64_t *)&unk_1ED1929F0);
  v65 = OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_26_2(v65, v66, v56);
  v152 = v30;
  if (v67)
  {
    sub_1A612209C();
    sub_1A5FAFD58((uint64_t)v5, (uint64_t *)&unk_1ED1929F0);
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v57 + 32))(v62, v5, v56);
  }
  sub_1A6121F28();
  v68 = v184;
  v165 = v62;
  sub_1A6121E38();
  v69 = v186;
  v70 = *(void (**)(char *, uint64_t))(v185 + 8);
  v70(v48, v186);
  sub_1A612209C();
  sub_1A6121E38();
  v162 = *(void (**)(char *, uint64_t))(v57 + 8);
  v162(v59, v56);
  v171 = (void (*)(uint64_t, uint64_t))v70;
  v70(v68, v69);
  sub_1A6121EEC();
  sub_1A6121FA0();
  v151[6] = v71;
  OUTLINED_FUNCTION_59_7(v64, (uint64_t *)&unk_1ED1929F0, (uint64_t)&v195);
  v72 = v169;
  v73 = v169[1];
  v151[5] = *v169;
  v74 = *(_WORD *)((char *)v169 + v191[6] + 8);
  v166 = v56;
  v151[4] = v73;
  if ((v74 & 0xFF00) == 0x300)
  {
    v75 = OUTLINED_FUNCTION_48_6();
    OUTLINED_FUNCTION_229(v172, 1, v76, v75);
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    v77 = v172;
    sub_1A612272C();
    v78 = OUTLINED_FUNCTION_48_6();
    OUTLINED_FUNCTION_229(v77, 0, v79, v78);
  }
  v80 = v183;
  v81 = v153;
  v82 = v152;
  v83 = *(_QWORD *)((char *)v72 + v191[7]);
  v193 = MEMORY[0x1E0DEE9D8];
  sub_1A5FAAB88();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C28);
  sub_1A5FAAB44();
  OUTLINED_FUNCTION_37_9();
  v84 = v184;
  v85 = v155;
  if ((v83 & 1) != 0)
  {
    v86 = v151[2];
    sub_1A612260C();
    v87 = v151[1];
    sub_1A60DA2C8();
    OUTLINED_FUNCTION_196(v86);
    v72 = v169;
    OUTLINED_FUNCTION_196(v87);
  }
  (*(void (**)(uint64_t, char *, _QWORD *))(v81 + 32))(v173, v82, v80);
  v88 = v191;
  sub_1A6121D24();
  OUTLINED_FUNCTION_125(v174, 1);
  v89 = v186;
  v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v185 + 16);
  v90((uint64_t)v84, v187, v186);
  v183 = v90;
  v90((uint64_t)v48, v188, v89);
  swift_bridgeObjectRetain();
  v91 = v175;
  sub_1A6121D0C();
  OUTLINED_FUNCTION_125(v91, 0);
  v92 = sub_1A612275C();
  v95 = OUTLINED_FUNCTION_69_3(v176, v93, v94, v92);
  v98 = OUTLINED_FUNCTION_68_5(v177, v96, v97, v95);
  __swift_storeEnumTagSinglePayload(v178, 1, 1, v98);
  sub_1A5FA25BC((uint64_t)v72 + v88[9], v85, &qword_1ED193020);
  v99 = type metadata accessor for WeatherNetworkActivity();
  OUTLINED_FUNCTION_26_2(v85, 1, v99);
  if (v67)
  {
    sub_1A5FAFD58(v85, &qword_1ED193020);
    v101 = 1;
    v100 = v156;
  }
  else
  {
    OUTLINED_FUNCTION_62_4(v85 + *(int *)(v99 + 28), &qword_1ED1929D8, (uint64_t)&v179);
    v100 = v156;
    sub_1A6123188();
    sub_1A5FA1740(v85, (uint64_t (*)(_QWORD))type metadata accessor for WeatherNetworkActivity);
    v101 = 0;
  }
  v102 = sub_1A6123194();
  OUTLINED_FUNCTION_229(v100, v101, v103, v102);
  sub_1A6121FAC();
  OUTLINED_FUNCTION_58_5();
  (*(void (**)(uint64_t))(v104 + 104))(v159);
  sub_1A61226F0();
  v193 = v154;
  v194 = 0;
  v105 = v160;
  v106 = sub_1A608AC40(v160, (uint64_t)&v193);
  v107 = v189;
  sub_1A6121F4C();
  v108 = (void (*)(uint64_t, uint64_t, uint64_t))v183;
  if (qword_1ED193BE8 != -1)
    swift_once();
  v109 = sub_1A612356C();
  __swift_project_value_buffer(v109, (uint64_t)qword_1ED19DB18);
  v110 = v170;
  v111 = v107;
  v112 = v186;
  v108(v170, v111, v186);
  v113 = v105;
  v114 = sub_1A6123554();
  v115 = sub_1A6123A4C();
  if (os_log_type_enabled(v114, v115))
  {
    v116 = OUTLINED_FUNCTION_26();
    v117 = OUTLINED_FUNCTION_26();
    v178 = v117;
    *(_DWORD *)v116 = 141558531;
    v192 = 1752392040;
    v193 = v117;
    sub_1A6123A88();
    *(_WORD *)(v116 + 12) = 2081;
    v192 = (uint64_t)v113;
    sub_1A5FAA124();
    v118 = v113;
    v191 = (int *)v106;
    v119 = sub_1A612380C();
    v192 = OUTLINED_FUNCTION_65_6(v119, v120);
    OUTLINED_FUNCTION_33_2();

    swift_bridgeObjectRelease();
    *(_WORD *)(v116 + 22) = 2082;
    v121 = v170;
    ((void (*)(char *, uint64_t, uint64_t))v183)(v184, v170, v112);
    v122 = sub_1A612380C();
    v192 = OUTLINED_FUNCTION_65_6(v122, v123);
    OUTLINED_FUNCTION_33_2();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_50_5(v121);
    OUTLINED_FUNCTION_253(&dword_1A5F87000, v114, v115, "About to fetch nano weather data; location=%{private,mask.hash}s, startTime=%{public}s",
      (uint8_t *)v116);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_8();
  }

  OUTLINED_FUNCTION_50_5(v110);
  v124 = v112;
  v125 = v184;
  MEMORY[0x1E0C80A78](v126);
  v127 = v182;
  v128 = v190;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C40);
  sub_1A612224C();
  swift_bridgeObjectRelease();
  v129 = v179;
  v130 = v180;
  v131 = v163;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v179 + 16))(v163, v128, v180);
  v132 = (*(unsigned __int8 *)(v129 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
  v133 = swift_allocObject();
  *(_QWORD *)(v133 + 16) = v113;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v129 + 32))(v133 + v132, v131, v130);
  v134 = v113;
  v135 = (void *)sub_1A61221E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C38);
  v191 = (int *)sub_1A6122204();
  swift_release();
  swift_release();

  ((void (*)(char *, uint64_t, uint64_t))v183)(v125, v189, v124);
  v136 = v125;
  v137 = v185;
  v138 = (*(unsigned __int8 *)(v185 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80);
  v139 = (v164 + v138 + 7) & 0xFFFFFFFFFFFFFFF8;
  v140 = (v139 + 15) & 0xFFFFFFFFFFFFFFF8;
  v141 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v137 + 32))(v141 + v138, v136, v124);
  *(_QWORD *)(v141 + v139) = v134;
  *(_QWORD *)(v141 + v140) = v127;
  v142 = (_QWORD *)(v141 + ((v140 + 15) & 0xFFFFFFFFFFFFFFF8));
  v143 = v167;
  v144 = v168;
  *v142 = v167;
  v142[1] = v144;
  v145 = v134;
  swift_retain();
  swift_retain();
  v146 = (void *)sub_1A61221E0();
  sub_1A6122210();
  swift_release();
  swift_release();

  v147 = (_QWORD *)swift_allocObject();
  v147[2] = v145;
  v147[3] = v143;
  v147[4] = v144;
  v148 = v145;
  swift_retain();
  v149 = (void *)sub_1A61221E0();
  sub_1A612221C();
  swift_release();
  swift_release();
  swift_release();

  v150 = v171;
  v171(v189, v124);
  v150(v188, v124);
  v150(v187, v124);
  v162(v165, v166);
  (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v190, v180);
  OUTLINED_FUNCTION_0_0();
}

char *sub_1A608AC40(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
  {
    if (qword_1ED193BE8 != -1)
      swift_once();
    v3 = sub_1A612356C();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED19DB18);
    v4 = a1;
    v5 = sub_1A6123554();
    v6 = sub_1A6123A4C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      v8 = swift_slowAlloc();
      *(_DWORD *)v7 = 141558275;
      v13 = v8;
      sub_1A6123A88();
      *(_WORD *)(v7 + 12) = 2081;
      sub_1A5FAA124();
      v9 = v4;
      v10 = sub_1A612380C();
      sub_1A5FBE7E0(v10, v11, &v13);
      sub_1A6123A88();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5F87000, v5, v6, "Data sets were empty, falling back to aggregate fetch; location=%{private,mask.hash}s",
        (uint8_t *)v7,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85BB42C](v8, -1, -1);
      MEMORY[0x1A85BB42C](v7, -1, -1);

    }
    else
    {

    }
    return (char *)&unk_1E4FE0778;
  }
  else
  {
    v13 = *(_QWORD *)a2;
    return sub_1A608E3AC((unint64_t *)&v13);
  }
}

uint64_t sub_1A608AE34(uint64_t a1, uint64_t a2, void *a3)
{
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 40));
  objc_msgSend(a3, sel_coordinate);
  return sub_1A61226C0();
}

void sub_1A608AEB8(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  int v64;
  _BOOL4 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(void);
  uint64_t (*v79)(void);
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  int EnumTagSinglePayload;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  NSObject *v130;
  os_log_type_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  unint64_t v136;
  id v137;
  NSObject *v138;
  os_log_type_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  unint64_t v144;
  _BYTE *v145;
  void (*v146)(uint64_t);
  uint64_t v147;
  uint64_t v148;
  _QWORD v149[2];
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  id v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;

  v8 = v7;
  v153 = a7;
  v154 = a6;
  v186 = a5;
  v187 = a4;
  v183 = a1;
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194B90);
  MEMORY[0x1E0C80A78](v151);
  v152 = (uint64_t)v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = type metadata accessor for AirQuality();
  MEMORY[0x1E0C80A78](v172);
  v158 = (uint64_t)v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  MEMORY[0x1E0C80A78](v179);
  v165 = (uint64_t)v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  MEMORY[0x1E0C80A78](v182);
  v166 = (uint64_t)v149 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  MEMORY[0x1E0C80A78](v184);
  v169 = (uint64_t)v149 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = type metadata accessor for CurrentWeather();
  MEMORY[0x1E0C80A78](v189);
  v174 = (uint64_t)v149 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for WatchWeather();
  MEMORY[0x1E0C80A78](v157);
  v162 = (uint64_t)v149 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A6122654();
  v163 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v149 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  MEMORY[0x1E0C80A78](v19);
  v177 = (uint64_t)v149 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v156 = (uint64_t)v149 - v22;
  MEMORY[0x1E0C80A78](v23);
  v168 = (uint64_t)v149 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
  MEMORY[0x1E0C80A78](v25);
  v175 = (uint64_t)v149 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v155 = (uint64_t)v149 - v28;
  MEMORY[0x1E0C80A78](v29);
  v170 = (uint64_t)v149 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
  MEMORY[0x1E0C80A78](v31);
  v181 = (char *)v149 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v161 = (uint64_t)v149 - v34;
  MEMORY[0x1E0C80A78](v35);
  v173 = (uint64_t)v149 - v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)v149 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v40);
  v160 = (uint64_t)v149 - v41;
  MEMORY[0x1E0C80A78](v42);
  v176 = (uint64_t)v149 - v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
  MEMORY[0x1E0C80A78](v44);
  v185 = (uint64_t)v149 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v46);
  v159 = (uint64_t)v149 - v47;
  MEMORY[0x1E0C80A78](v48);
  v178 = (uint64_t)v149 - v49;
  v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C38);
  MEMORY[0x1E0C80A78](v180);
  v167 = (char *)v149 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192878);
  MEMORY[0x1E0C80A78](v51);
  v188 = (uint64_t)v149 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1A6121F58();
  v54 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v56 = (char *)v149 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A6121F4C();
  sub_1A6121E5C();
  v58 = v57;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v53);
  if (qword_1ED193BE8 != -1)
    swift_once();
  v59 = sub_1A612356C();
  v60 = __swift_project_value_buffer(v59, (uint64_t)qword_1ED19DB18);
  v61 = v187;
  v164 = v60;
  v62 = sub_1A6123554();
  v63 = sub_1A6123A4C();
  v64 = v63;
  v65 = os_log_type_enabled(v62, v63);
  v187 = v61;
  if (v65)
  {
    v66 = swift_slowAlloc();
    LODWORD(v150) = v64;
    v67 = v66;
    v68 = swift_slowAlloc();
    v193 = v68;
    *(_DWORD *)v67 = 141558531;
    v191 = 1752392040;
    sub_1A6123A88();
    *(_WORD *)(v67 + 12) = 2081;
    v149[1] = v67 + 14;
    v191 = (uint64_t)v61;
    sub_1A5FAA124();
    v69 = v61;
    v70 = sub_1A612380C();
    v191 = sub_1A5FBE7E0(v70, v71, &v193);
    sub_1A6123A88();

    swift_bridgeObjectRelease();
    *(_WORD *)(v67 + 22) = 2050;
    v191 = v58;
    sub_1A6123A88();
    _os_log_impl(&dword_1A5F87000, v62, (os_log_type_t)v150, "Got response for fetch of nano weather data + corresponding AQI scale; location=%{private,mask.hash}s, duration=%{public}f",
      (uint8_t *)v67,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v68, -1, -1);
    MEMORY[0x1A85BB42C](v67, -1, -1);

  }
  else
  {

  }
  v72 = *(int *)(v180 + 48);
  v73 = (uint64_t)&v167[v72];
  v74 = *v183;
  sub_1A5FA25BC((uint64_t)v183 + v72, (uint64_t)&v167[v72], &qword_1ED192878);
  sub_1A5FA3C64(v73, v188, &qword_1ED192878);
  v75 = *(_QWORD *)(v74 + 16);
  if (!v75)
  {
    v137 = v187;
    v138 = sub_1A6123554();
    v139 = sub_1A6123A40();
    if (os_log_type_enabled(v138, v139))
    {
      v140 = swift_slowAlloc();
      v141 = swift_slowAlloc();
      v193 = v141;
      *(_DWORD *)v140 = 141558275;
      v191 = 1752392040;
      sub_1A6123A88();
      *(_WORD *)(v140 + 12) = 2081;
      v191 = (uint64_t)v137;
      sub_1A5FAA124();
      v142 = v137;
      v143 = sub_1A612380C();
      v191 = sub_1A5FBE7E0(v143, v144, &v193);
      sub_1A6123A88();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5F87000, v138, v139, "Unexpectedly empty response when fetching nano weather data; location=%{private,mask.hash}s",
        (uint8_t *)v140,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85BB42C](v141, -1, -1);
      MEMORY[0x1A85BB42C](v140, -1, -1);

    }
    else
    {

    }
    sub_1A5FCC4D4();
    swift_allocError();
    *v145 = 1;
    swift_willThrow();
    goto LABEL_49;
  }
  __swift_storeEnumTagSinglePayload(v178, 1, 1, v189);
  __swift_storeEnumTagSinglePayload(v176, 1, 1, v184);
  __swift_storeEnumTagSinglePayload(v173, 1, 1, v182);
  __swift_storeEnumTagSinglePayload(v170, 1, 1, v179);
  __swift_storeEnumTagSinglePayload(v168, 1, 1, v172);
  v76 = v74;
  v77 = v74 + ((*(unsigned __int8 *)(v163 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80));
  v183 = *(uint64_t **)(v163 + 72);
  v150 = v76;
  swift_bridgeObjectRetain();
  v167 = 0;
  v78 = MEMORY[0x1E0DC97E0];
  v163 = MEMORY[0x1E0DEE9B8] + 8;
  v180 = (uint64_t)v18;
  v171 = v39;
  do
  {
    sub_1A5F89964(v77, (uint64_t)v18, (uint64_t (*)(_QWORD))v78);
    sub_1A5F98828((uint64_t)v18, (uint64_t)v187, (uint64_t)&v193);
    if (v8)
    {
      swift_bridgeObjectRelease();
      sub_1A5FA1740((uint64_t)v18, (uint64_t (*)(_QWORD))MEMORY[0x1E0DC97E0]);
      swift_bridgeObjectRelease();
      goto LABEL_48;
    }
    v79 = v78;
    sub_1A5FA1740((uint64_t)v18, (uint64_t (*)(_QWORD))v78);
    sub_1A5FA25BC((uint64_t)&v193, (uint64_t)&v191, &qword_1ED194088);
    if (v192)
    {
      v80 = v185;
      v81 = v189;
      v82 = swift_dynamicCast();
      __swift_storeEnumTagSinglePayload(v80, v82 ^ 1u, 1, v81);
      if (__swift_getEnumTagSinglePayload(v80, 1, v81) != 1)
      {
        sub_1A5FAFD58((uint64_t)&v193, &qword_1ED194088);
        v83 = v178;
        sub_1A5FAFD58(v178, &qword_1ED192D38);
        v84 = v174;
        sub_1A5FA6658(v80, v174, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
        v85 = v84;
        v18 = (char *)v180;
        sub_1A5FA6658(v85, v83, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
        v86 = v83;
        v87 = v189;
LABEL_20:
        __swift_storeEnumTagSinglePayload(v86, 0, 1, v87);
        goto LABEL_38;
      }
    }
    else
    {
      sub_1A5FAFD58((uint64_t)&v191, &qword_1ED194088);
      v80 = v185;
      __swift_storeEnumTagSinglePayload(v185, 1, 1, v189);
    }
    sub_1A5FAFD58(v80, &qword_1ED192D38);
    sub_1A5FA25BC((uint64_t)&v193, (uint64_t)&v191, &qword_1ED194088);
    if (v192)
    {
      v88 = v184;
      v89 = swift_dynamicCast();
      __swift_storeEnumTagSinglePayload((uint64_t)v39, v89 ^ 1u, 1, v88);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v39, 1, v88);
      v91 = (uint64_t)v181;
      if (EnumTagSinglePayload != 1)
      {
        sub_1A5FAFD58((uint64_t)&v193, &qword_1ED194088);
        v92 = v176;
        sub_1A5FAFD58(v176, &qword_1ED192870);
        v93 = v169;
        sub_1A5FA3C64((uint64_t)v39, v169, &qword_1ED193AE0);
        v94 = v93;
        v18 = (char *)v180;
        sub_1A5FA3C64(v94, v92, &qword_1ED193AE0);
        v86 = v92;
        v87 = v184;
        goto LABEL_20;
      }
    }
    else
    {
      sub_1A5FAFD58((uint64_t)&v191, &qword_1ED194088);
      __swift_storeEnumTagSinglePayload((uint64_t)v39, 1, 1, v184);
      v91 = (uint64_t)v181;
    }
    sub_1A5FAFD58((uint64_t)v39, &qword_1ED192870);
    sub_1A5FA25BC((uint64_t)&v193, (uint64_t)&v191, &qword_1ED194088);
    if (v192)
    {
      v95 = v182;
      v96 = swift_dynamicCast();
      __swift_storeEnumTagSinglePayload(v91, v96 ^ 1u, 1, v95);
      if (__swift_getEnumTagSinglePayload(v91, 1, v95) != 1)
      {
        sub_1A5FAFD58((uint64_t)&v193, &qword_1ED194088);
        v97 = v173;
        sub_1A5FAFD58(v173, &qword_1ED193AC8);
        v98 = v166;
        sub_1A5FA3C64(v91, v166, (uint64_t *)&unk_1ED193AB8);
        v99 = v98;
        v18 = (char *)v180;
        sub_1A5FA3C64(v99, v97, (uint64_t *)&unk_1ED193AB8);
        v86 = v97;
        v87 = v182;
        goto LABEL_20;
      }
    }
    else
    {
      sub_1A5FAFD58((uint64_t)&v191, &qword_1ED194088);
      __swift_storeEnumTagSinglePayload(v91, 1, 1, v182);
    }
    sub_1A5FAFD58(v91, &qword_1ED193AC8);
    sub_1A5FA25BC((uint64_t)&v193, (uint64_t)&v191, &qword_1ED194088);
    if (v192)
    {
      v100 = v175;
      v101 = v179;
      v102 = swift_dynamicCast();
      __swift_storeEnumTagSinglePayload(v100, v102 ^ 1u, 1, v101);
      if (__swift_getEnumTagSinglePayload(v100, 1, v101) != 1)
      {
        sub_1A5FAFD58((uint64_t)&v193, &qword_1ED194088);
        v103 = v100;
        v104 = v170;
        sub_1A5FAFD58(v170, &qword_1ED193AA0);
        v105 = v103;
        v106 = v165;
        sub_1A5FA3C64(v105, v165, (uint64_t *)&unk_1ED193A90);
        sub_1A5FA3C64(v106, v104, (uint64_t *)&unk_1ED193A90);
        v107 = v104;
        v108 = v179;
        goto LABEL_33;
      }
    }
    else
    {
      sub_1A5FAFD58((uint64_t)&v191, &qword_1ED194088);
      v100 = v175;
      __swift_storeEnumTagSinglePayload(v175, 1, 1, v179);
    }
    sub_1A5FAFD58(v100, &qword_1ED193AA0);
    sub_1A5FA25BC((uint64_t)&v193, (uint64_t)&v191, &qword_1ED194088);
    if (v192)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192648);
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v167 = v190;
        v109 = &v193;
        v110 = &qword_1ED194088;
        goto LABEL_36;
      }
    }
    else
    {
      sub_1A5FAFD58((uint64_t)&v191, &qword_1ED194088);
    }
    v111 = v177;
    sub_1A5FA3C64((uint64_t)&v193, (uint64_t)&v191, &qword_1ED194088);
    if (!v192)
    {
      sub_1A5FAFD58((uint64_t)&v191, &qword_1ED194088);
      __swift_storeEnumTagSinglePayload(v111, 1, 1, v172);
LABEL_35:
      v109 = (uint64_t *)v111;
      v110 = &qword_1ED193508;
LABEL_36:
      sub_1A5FAFD58((uint64_t)v109, v110);
      goto LABEL_37;
    }
    v112 = v172;
    v113 = swift_dynamicCast();
    __swift_storeEnumTagSinglePayload(v177, v113 ^ 1u, 1, v112);
    v114 = v112;
    v111 = v177;
    if (__swift_getEnumTagSinglePayload(v177, 1, v114) == 1)
      goto LABEL_35;
    v115 = v111;
    v116 = v168;
    sub_1A5FAFD58(v168, &qword_1ED193508);
    v117 = v115;
    v118 = v158;
    sub_1A5FA6658(v117, v158, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
    v119 = v118;
    v18 = (char *)v180;
    sub_1A5FA6658(v119, v116, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
    v107 = v116;
    v108 = v172;
LABEL_33:
    __swift_storeEnumTagSinglePayload(v107, 0, 1, v108);
LABEL_37:
    v39 = v171;
LABEL_38:
    v78 = v79;
    v8 = 0;
    v77 += (uint64_t)v183;
    --v75;
  }
  while (v75);
  swift_bridgeObjectRelease();
  sub_1A5FA25BC(v178, v159, &qword_1ED192D38);
  sub_1A5FA25BC(v176, v160, &qword_1ED192870);
  sub_1A5FA25BC(v173, v161, &qword_1ED193AC8);
  v120 = v155;
  sub_1A5FA25BC(v170, v155, &qword_1ED193AA0);
  v121 = v156;
  sub_1A5FA25BC(v168, v156, &qword_1ED193508);
  v122 = v162;
  __swift_storeEnumTagSinglePayload(v162, 1, 1, v189);
  v123 = (int *)v157;
  v124 = v122 + *(int *)(v157 + 20);
  __swift_storeEnumTagSinglePayload(v124, 1, 1, v184);
  v125 = v122 + v123[6];
  __swift_storeEnumTagSinglePayload(v125, 1, 1, v182);
  v126 = v122 + v123[7];
  __swift_storeEnumTagSinglePayload(v126, 1, 1, v179);
  v127 = v122 + v123[8];
  __swift_storeEnumTagSinglePayload(v127, 1, 1, v172);
  v128 = v123[9];
  *(_QWORD *)(v122 + v128) = 0;
  sub_1A5FA2CA8(v159, v122, &qword_1ED192D38);
  sub_1A5FA2CA8(v160, v124, &qword_1ED192870);
  sub_1A5FA2CA8(v161, v125, &qword_1ED193AC8);
  sub_1A5FA2CA8(v120, v126, &qword_1ED193AA0);
  sub_1A5FA2CA8(v121, v127, &qword_1ED193508);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v122 + v128) = v167;
  v129 = v187;
  v130 = sub_1A6123554();
  v131 = sub_1A6123A4C();
  if (os_log_type_enabled(v130, v131))
  {
    v132 = swift_slowAlloc();
    v133 = swift_slowAlloc();
    v193 = v133;
    *(_DWORD *)v132 = 141558275;
    v191 = 1752392040;
    sub_1A6123A88();
    *(_WORD *)(v132 + 12) = 2081;
    v191 = (uint64_t)v129;
    sub_1A5FAA124();
    v134 = v129;
    v135 = sub_1A612380C();
    v191 = sub_1A5FBE7E0(v135, v136, &v193);
    sub_1A6123A88();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5F87000, v130, v131, "Successfully parsed nano weather data; location=%{private,mask.hash}s",
      (uint8_t *)v132,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v133, -1, -1);
    MEMORY[0x1A85BB42C](v132, -1, -1);

  }
  else
  {

  }
  v146 = v154;
  v147 = v152;
  v148 = v162;
  sub_1A5F89964(v162, v152, (uint64_t (*)(_QWORD))type metadata accessor for WatchWeather);
  swift_storeEnumTagMultiPayload();
  v146(v147);
  sub_1A5FAFD58(v147, &qword_1ED194B90);
  sub_1A5FA1740(v148, (uint64_t (*)(_QWORD))type metadata accessor for WatchWeather);
LABEL_48:
  sub_1A5FAFD58(v168, &qword_1ED193508);
  sub_1A5FAFD58(v170, &qword_1ED193AA0);
  sub_1A5FAFD58(v173, &qword_1ED193AC8);
  sub_1A5FAFD58(v176, &qword_1ED192870);
  sub_1A5FAFD58(v178, &qword_1ED192D38);
LABEL_49:
  sub_1A5FAFD58(v188, &qword_1ED192878);
}

void sub_1A608C3B4(void *a1, void *a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194B90);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD **)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED193BE8 != -1)
    swift_once();
  v11 = sub_1A612356C();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED19DB18);
  v12 = a1;
  v13 = a1;
  v14 = a1;
  v15 = a2;
  v16 = a1;
  v17 = v15;
  v18 = sub_1A6123554();
  v19 = sub_1A6123A40();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v35 = a4;
    v21 = v20;
    v33 = (_QWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v34 = v22;
    *(_DWORD *)v21 = 141558787;
    v37 = 1752392040;
    v38 = v22;
    sub_1A6123A88();
    *(_WORD *)(v21 + 12) = 2081;
    v37 = (uint64_t)v17;
    sub_1A5FAA124();
    v36 = a3;
    v23 = v17;
    v24 = sub_1A612380C();
    v37 = sub_1A5FBE7E0(v24, v25, &v38);
    sub_1A6123A88();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2082;
    swift_getErrorValue();
    v26 = sub_1A6123D28();
    v37 = sub_1A5FBE7E0(v26, v27, &v38);
    sub_1A6123A88();
    swift_bridgeObjectRelease();

    *(_WORD *)(v21 + 32) = 2112;
    v28 = a1;
    v29 = _swift_stdlib_bridgeErrorToNSError();
    v37 = v29;
    sub_1A6123A88();
    v30 = v33;
    *v33 = v29;
    a3 = v36;

    _os_log_impl(&dword_1A5F87000, v18, v19, "Encountered an error when fetching nano weather; location=%{private,mask.hash}s,  error=%{public}s %@",
      (uint8_t *)v21,
      0x2Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v30, -1, -1);
    v31 = v34;
    swift_arrayDestroy();
    MEMORY[0x1A85BB42C](v31, -1, -1);
    MEMORY[0x1A85BB42C](v21, -1, -1);
  }
  else
  {

  }
  *v10 = a1;
  swift_storeEnumTagMultiPayload();
  v32 = a1;
  a3(v10);
  sub_1A5FAFD58((uint64_t)v10, &qword_1ED194B90);
}

void sub_1A608C75C(void *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  int *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  id v94;
  uint64_t v95;
  void (*v96)(id, uint64_t);
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  __int16 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(id, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  NSObject *v139;
  os_log_type_t v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t (*v170)(void);
  uint64_t (*v171)();
  uint64_t v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t (*v182)(_QWORD);
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  int v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t (*v210)();
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  int v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  int *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  id v228;
  NSObject *v229;
  os_log_type_t v230;
  uint64_t v231;
  _QWORD *v232;
  id v233;
  id v234;
  NSObject *v235;
  os_log_type_t v236;
  uint64_t v237;
  id v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277[2];
  void *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t (*v281)();
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char v286[8];
  uint64_t v287;
  uint64_t v288;
  void (*v289)(id, uint64_t, uint64_t);
  uint64_t v290;
  void (*v291)(id, uint64_t);
  uint64_t v292;
  _QWORD v293[2];
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  _QWORD v299[2];
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  id v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char v310[8];
  char v311[8];
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  char v315[8];
  uint64_t v316;
  char v317[8];
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;

  v278 = a1;
  v266 = a4;
  v252 = type metadata accessor for WatchWeather();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_64(v8);
  v282 = type metadata accessor for AirQuality();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v10);
  v299[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v12);
  v300 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v14);
  v303 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_64(v16);
  v299[1] = type metadata accessor for CurrentWeather();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_64(v18);
  v256 = *(_QWORD *)(sub_1A6122654() - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_11_0();
  v301 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193508);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_129(v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AA0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_129(v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AC8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_129(v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192870);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_34_0();
  v307 = v35;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_129(v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192D38);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_34_0();
  v306 = v40;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_129(v42);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192878);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_64(v44);
  v276 = sub_1A6123380();
  v275 = *(_QWORD *)(v276 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v46);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929D8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v47);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193020);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193BE0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v51);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192708);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v53);
  OUTLINED_FUNCTION_11_0();
  v302 = v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192700);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v55);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192940);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v57);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_129(v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929B8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v59);
  OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v60);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_64(v61);
  v62 = sub_1A6122618();
  v272 = *(_QWORD *)(v62 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v63);
  OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v64);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v65);
  OUTLINED_FUNCTION_34_0();
  v67 = v66;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v68);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_129(v69);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193BB8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v70);
  v265 = OUTLINED_FUNCTION_47_6((uint64_t)&v250 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  v264 = *(_QWORD *)(v265 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v72);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_64(v73);
  v295 = sub_1A6121F58();
  v285 = *(_QWORD *)(v295 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v74);
  OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v75);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v76);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v77);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v78);
  OUTLINED_FUNCTION_34_0();
  v304 = v79;
  OUTLINED_FUNCTION_3_5();
  MEMORY[0x1E0C80A78](v80);
  OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_129(v81);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1929F0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v82);
  OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_10_0();
  MEMORY[0x1E0C80A78](v83);
  v84 = OUTLINED_FUNCTION_42_6();
  v85 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v87 = (char *)&v250 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = (int *)OUTLINED_FUNCTION_63_6(*a2);
  v89 = a3;
  v90 = (uint64_t)a3 + v88[5];
  sub_1A5FA25BC(v90, v4, (uint64_t *)&unk_1ED1929F0);
  v91 = OUTLINED_FUNCTION_70_3();
  OUTLINED_FUNCTION_26_2(v91, v92, v84);
  v263 = v84;
  v261 = v85;
  if (v93)
  {
    sub_1A612209C();
    sub_1A5FAFD58(v4, (uint64_t *)&unk_1ED1929F0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v87, v4, v84);
  }
  v94 = v304;
  sub_1A6121F28();
  sub_1A6121E38();
  OUTLINED_FUNCTION_58_5();
  v96 = *(void (**)(id, uint64_t))(v95 + 8);
  v96(v94, v295);
  sub_1A6121EEC();
  v271 = sub_1A6121FA0();
  v270 = v97;
  OUTLINED_FUNCTION_59_7(v90, (uint64_t *)&unk_1ED1929F0, (uint64_t)v315);
  v98 = v89;
  v99 = v89[1];
  v269 = *v89;
  v100 = *(_WORD *)((char *)v89 + v88[6] + 8);
  v262 = v87;
  v268 = v99;
  if ((v100 & 0xFF00) == 0x300)
  {
    v101 = OUTLINED_FUNCTION_48_6();
    OUTLINED_FUNCTION_229(v287, 1, v102, v101);
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    v103 = v287;
    sub_1A612272C();
    v104 = OUTLINED_FUNCTION_48_6();
    OUTLINED_FUNCTION_229(v103, 0, v105, v104);
  }
  v106 = v67;
  v107 = *(_QWORD *)((char *)v98 + v88[7]);
  v316 = MEMORY[0x1E0DEE9D8];
  sub_1A5FAAB88();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C28);
  sub_1A5FAAB44();
  OUTLINED_FUNCTION_37_9();
  v108 = v272;
  if ((v107 & 1) != 0)
  {
    v109 = v258;
    sub_1A612260C();
    v110 = v257;
    sub_1A60DA2C8();
    OUTLINED_FUNCTION_196(v109);
    OUTLINED_FUNCTION_196(v110);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 32))(v288, v106, v62);
  v111 = *(_QWORD *)((char *)v98 + v88[8]);
  v112 = sub_1A6121D24();
  v113 = OUTLINED_FUNCTION_11_24((uint64_t)v317);
  __swift_storeEnumTagSinglePayload(v113, v114, v115, v112);
  OUTLINED_FUNCTION_58_5();
  v117 = *(void (**)(id, uint64_t, uint64_t))(v116 + 16);
  v118 = (uint64_t)v304;
  OUTLINED_FUNCTION_67_5((uint64_t)v304, v298);
  OUTLINED_FUNCTION_67_5(v267, v297);
  v285 = v111;
  swift_bridgeObjectRetain();
  v119 = v290;
  sub_1A6121D0C();
  OUTLINED_FUNCTION_20_0(v119, 0);
  v120 = sub_1A612275C();
  v123 = OUTLINED_FUNCTION_69_3((uint64_t)v291, v121, v122, v120);
  v126 = OUTLINED_FUNCTION_68_5(v292, v124, v125, v123);
  __swift_storeEnumTagSinglePayload(v302, 1, 1, v126);
  OUTLINED_FUNCTION_52_5((uint64_t)v98 + v88[9], &qword_1ED193020, (uint64_t)v299);
  v127 = type metadata accessor for WeatherNetworkActivity();
  OUTLINED_FUNCTION_26_2(v118, 1, v127);
  if (v93)
  {
    sub_1A5FAFD58(v118, &qword_1ED193020);
    v129 = 1;
    v130 = v293[0];
    v128 = v274;
  }
  else
  {
    OUTLINED_FUNCTION_66_3(v118 + *(int *)(v127 + 28), &qword_1ED1929D8, (uint64_t)&v284);
    v128 = v274;
    sub_1A6123188();
    sub_1A5FA1740(v118, (uint64_t (*)(_QWORD))type metadata accessor for WeatherNetworkActivity);
    v129 = 0;
    v130 = v293[0];
  }
  v131 = sub_1A6123194();
  OUTLINED_FUNCTION_229(v128, v129, v132, v131);
  sub_1A6121FAC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v275 + 104))(v277[1], *MEMORY[0x1E0DCA8B0], v276);
  OUTLINED_FUNCTION_58_5();
  sub_1A61226F0();
  v316 = v273;
  v317[0] = 0;
  v133 = v278;
  v302 = (uint64_t)sub_1A608AC40(v278, (uint64_t)&v316);
  v134 = v284;
  sub_1A6121F4C();
  if (qword_1ED193BE8 != -1)
    swift_once();
  v135 = sub_1A612356C();
  v136 = __swift_project_value_buffer(v135, (uint64_t)qword_1ED19DB18);
  v137 = v277[0];
  OUTLINED_FUNCTION_67_5(v277[0], v134);
  v138 = v133;
  v292 = v136;
  v139 = sub_1A6123554();
  v140 = sub_1A6123A4C();
  if (os_log_type_enabled(v139, v140))
  {
    v141 = OUTLINED_FUNCTION_26();
    v289 = v117;
    v142 = v138;
    v143 = v141;
    v144 = v137;
    v145 = (_QWORD *)OUTLINED_FUNCTION_26();
    v290 = OUTLINED_FUNCTION_26();
    v316 = v290;
    *(_DWORD *)v143 = 141558531;
    OUTLINED_FUNCTION_35_15();
    sub_1A6123A88();
    *(_WORD *)(v143 + 12) = 2113;
    v291 = v96;
    v309 = (uint64_t)v142;
    v146 = v142;
    v147 = v295;
    sub_1A6123A88();
    *v145 = v142;

    *(_WORD *)(v143 + 22) = 2082;
    v289(v304, v144, v147);
    v148 = sub_1A612380C();
    v309 = OUTLINED_FUNCTION_53_6(v148, v149);
    sub_1A6123A88();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_7(v144);
    OUTLINED_FUNCTION_253(&dword_1A5F87000, v139, v140, "About to fetch cached weather data; location=%{private,mask.hash}@, startTime=%{public}s",
      (uint8_t *)v143);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_8();
  }

  OUTLINED_FUNCTION_39_7(v137);
  OUTLINED_FUNCTION_56_4();
  v150 = v301;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v305 + 16), *(_QWORD *)(v305 + 40));
  objc_msgSend(v138, sel_coordinate);
  v151 = sub_1A61226B4();
  swift_bridgeObjectRelease();
  if (v151)
  {
    v304 = v138;
    v152 = *(_QWORD *)(v151 + 16);
    if (v152)
    {
      v291 = v96;
      sub_1A6012F30(v151, (uint64_t)v304, v130, v260);
      v153 = OUTLINED_FUNCTION_11_24((uint64_t)&v319);
      __swift_storeEnumTagSinglePayload(v153, v154, v155, v137);
      v156 = OUTLINED_FUNCTION_11_24((uint64_t)&v318);
      __swift_storeEnumTagSinglePayload(v156, v157, v158, v303);
      v159 = OUTLINED_FUNCTION_11_24((uint64_t)v311);
      OUTLINED_FUNCTION_78_2(v159, v160, v161, (uint64_t)&v323);
      v162 = OUTLINED_FUNCTION_11_24((uint64_t)&v308);
      OUTLINED_FUNCTION_78_2(v162, v163, v164, (uint64_t)&v322);
      v165 = OUTLINED_FUNCTION_11_24((uint64_t)&v306);
      OUTLINED_FUNCTION_78_2(v165, v166, v167, (uint64_t)v310);
      v290 = 0;
      v168 = (*(unsigned __int8 *)(v256 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v256 + 80);
      v288 = v151;
      v169 = v151 + v168;
      v170 = MEMORY[0x1E0DC97E0];
      v302 = *(_QWORD *)(v256 + 72);
      v289 = (void (*)(id, uint64_t, uint64_t))(MEMORY[0x1E0DEE9B8] + 8);
      v171 = v281;
      while (1)
      {
        sub_1A5F89964(v169, v150, (uint64_t (*)(_QWORD))v170);
        sub_1A5F98828(v150, (uint64_t)v304, (uint64_t)&v316);
        sub_1A5FA1740(v150, (uint64_t (*)(_QWORD))v170);
        OUTLINED_FUNCTION_9_25();
        if (v312)
        {
          OUTLINED_FUNCTION_60_3();
          v172 = v306;
          v173 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_26_1(v172, v173 ^ 1u);
          v174 = OUTLINED_FUNCTION_70_3();
          OUTLINED_FUNCTION_26_2(v174, v175, v137);
          v176 = v307;
          if (!v93)
          {
            OUTLINED_FUNCTION_40_0((uint64_t)&v316);
            v177 = OUTLINED_FUNCTION_187((uint64_t)&v319);
            sub_1A5FAFD58(v177, &qword_1ED192D38);
            OUTLINED_FUNCTION_45_8();
            v171 = type metadata accessor for CurrentWeather;
            sub_1A5FA6658(v178, v179, (uint64_t (*)(_QWORD))type metadata accessor for CurrentWeather);
            v180 = OUTLINED_FUNCTION_23_17();
            sub_1A5FA6658(v180, v181, v182);
            v183 = OUTLINED_FUNCTION_76();
            v186 = v137;
            goto LABEL_26;
          }
        }
        else
        {
          OUTLINED_FUNCTION_14_27();
          OUTLINED_FUNCTION_26_1(v306, 1);
          v176 = v307;
        }
        sub_1A5FAFD58(v306, &qword_1ED192D38);
        OUTLINED_FUNCTION_9_25();
        if (v312)
        {
          OUTLINED_FUNCTION_60_3();
          v187 = v303;
          v188 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_20_0(v307, v188 ^ 1u);
          v189 = v187;
          v176 = v307;
          OUTLINED_FUNCTION_26_2(v307, 1, v189);
          if (!v93)
          {
            OUTLINED_FUNCTION_40_0((uint64_t)&v316);
            v150 = v176;
            v190 = OUTLINED_FUNCTION_187((uint64_t)&v318);
            sub_1A5FAFD58(v190, &qword_1ED192870);
            OUTLINED_FUNCTION_45_8();
            v171 = (uint64_t (*)())&qword_1ED193AE0;
            sub_1A5FA3C64(v191, v192, &qword_1ED193AE0);
            v193 = OUTLINED_FUNCTION_23_17();
            sub_1A5FA3C64(v193, v194, v195);
            v183 = OUTLINED_FUNCTION_76();
            v186 = v303;
            goto LABEL_26;
          }
        }
        else
        {
          OUTLINED_FUNCTION_14_27();
          OUTLINED_FUNCTION_29_14(v176);
        }
        sub_1A5FAFD58(v176, &qword_1ED192870);
        OUTLINED_FUNCTION_9_25();
        if (v312)
        {
          OUTLINED_FUNCTION_60_3();
          v176 = v300;
          v196 = OUTLINED_FUNCTION_15_1();
          OUTLINED_FUNCTION_20_0((uint64_t)v171, v196 ^ 1u);
          OUTLINED_FUNCTION_26_2((uint64_t)v171, 1, v176);
          if (!v93)
          {
            OUTLINED_FUNCTION_40_0((uint64_t)&v316);
            v197 = OUTLINED_FUNCTION_187((uint64_t)v311);
            sub_1A5FAFD58(v197, &qword_1ED193AC8);
            OUTLINED_FUNCTION_45_8();
            v171 = (uint64_t (*)())&unk_1ED193AB8;
            sub_1A5FA3C64(v198, v199, (uint64_t *)&unk_1ED193AB8);
            v200 = OUTLINED_FUNCTION_23_17();
            sub_1A5FA3C64(v200, v201, v202);
            v203 = OUTLINED_FUNCTION_76();
            OUTLINED_FUNCTION_78_2(v203, v204, v205, (uint64_t)&v323);
LABEL_39:
            OUTLINED_FUNCTION_56_4();
            goto LABEL_47;
          }
        }
        else
        {
          OUTLINED_FUNCTION_14_27();
          OUTLINED_FUNCTION_78_2((uint64_t)v171, 1, 1, (uint64_t)&v323);
        }
        v137 = (uint64_t)v170;
        sub_1A5FAFD58((uint64_t)v171, &qword_1ED193AC8);
        OUTLINED_FUNCTION_9_25();
        if (v312)
        {
          OUTLINED_FUNCTION_60_3();
          OUTLINED_FUNCTION_187((uint64_t)&v313);
          v206 = v299[0];
          v207 = OUTLINED_FUNCTION_15_1();
          __swift_storeEnumTagSinglePayload(v176, v207 ^ 1u, 1, v206);
          v208 = OUTLINED_FUNCTION_70_3();
          v171 = v281;
          OUTLINED_FUNCTION_26_2(v208, v209, v206);
          if (!v93)
          {
            OUTLINED_FUNCTION_40_0((uint64_t)&v316);
            v210 = v171;
            v211 = v280;
            sub_1A5FAFD58(v280, &qword_1ED193AA0);
            v212 = v176;
            v176 = v259;
            sub_1A5FA3C64(v212, v259, (uint64_t *)&unk_1ED193A90);
            sub_1A5FA3C64(v176, v211, (uint64_t *)&unk_1ED193A90);
            v213 = v211;
            v171 = v210;
            OUTLINED_FUNCTION_78_2(v213, 0, 1, (uint64_t)&v322);
            v170 = (uint64_t (*)(void))v137;
            goto LABEL_39;
          }
        }
        else
        {
          OUTLINED_FUNCTION_14_27();
          v214 = OUTLINED_FUNCTION_187((uint64_t)&v313);
          OUTLINED_FUNCTION_78_2(v214, 1, 1, (uint64_t)&v322);
        }
        sub_1A5FAFD58(v176, &qword_1ED193AA0);
        OUTLINED_FUNCTION_9_25();
        if (v312)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192648);
          v170 = (uint64_t (*)(void))v137;
          if ((OUTLINED_FUNCTION_15_1() & 1) != 0)
          {
            OUTLINED_FUNCTION_14_9();
            v290 = v308;
            OUTLINED_FUNCTION_40_0((uint64_t)&v316);
            goto LABEL_39;
          }
          v176 = v294;
        }
        else
        {
          OUTLINED_FUNCTION_14_27();
          v176 = v294;
          v170 = (uint64_t (*)(void))v137;
        }
        OUTLINED_FUNCTION_56_4();
        sub_1A5FA3C64((uint64_t)&v316, (uint64_t)&v309, &qword_1ED194088);
        if (!v312)
        {
          OUTLINED_FUNCTION_14_27();
          OUTLINED_FUNCTION_78_2(v176, 1, 1, (uint64_t)v310);
LABEL_46:
          sub_1A5FAFD58(v176, &qword_1ED193508);
          goto LABEL_47;
        }
        v215 = v282;
        v216 = OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_20_0(v294, v216 ^ 1u);
        v217 = v215;
        v176 = v294;
        OUTLINED_FUNCTION_26_2(v294, 1, v217);
        if (v93)
          goto LABEL_46;
        v218 = OUTLINED_FUNCTION_187((uint64_t)&v306);
        sub_1A5FAFD58(v218, &qword_1ED193508);
        v137 = v253;
        sub_1A5FA6658(v176, v253, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
        OUTLINED_FUNCTION_56_4();
        sub_1A5FA6658(v219, v176, (uint64_t (*)(_QWORD))type metadata accessor for AirQuality);
        v183 = OUTLINED_FUNCTION_76();
        v186 = v282;
LABEL_26:
        __swift_storeEnumTagSinglePayload(v183, v184, v185, v186);
LABEL_47:
        v169 += v302;
        if (!--v152)
        {
          OUTLINED_FUNCTION_14_9();
          OUTLINED_FUNCTION_59_7(v296, &qword_1ED192D38, (uint64_t)&v281);
          OUTLINED_FUNCTION_52_5(v293[1], &qword_1ED192870, (uint64_t)v277);
          v220 = v251;
          sub_1A5FA25BC(v283, v251, &qword_1ED193AC8);
          OUTLINED_FUNCTION_62_4(v280, &qword_1ED193AA0, (uint64_t)&v278);
          OUTLINED_FUNCTION_66_3(v279, &qword_1ED193508, (uint64_t)&v279);
          v221 = v255;
          OUTLINED_FUNCTION_26_1(v255, 1);
          v222 = (int *)v252;
          v223 = v221 + *(int *)(v252 + 20);
          OUTLINED_FUNCTION_29_14(v223);
          v224 = v221 + v222[6];
          OUTLINED_FUNCTION_78_2(v224, 1, 1, (uint64_t)&v323);
          v225 = v221 + v222[7];
          OUTLINED_FUNCTION_78_2(v225, 1, 1, (uint64_t)&v322);
          v226 = v221 + v222[8];
          OUTLINED_FUNCTION_78_2(v226, 1, 1, (uint64_t)v310);
          v227 = v222[9];
          *(_QWORD *)(v221 + v227) = 0;
          sub_1A5FA2CA8(v254, v221, &qword_1ED192D38);
          sub_1A5FA2CA8(0, v223, &qword_1ED192870);
          sub_1A5FA2CA8(v220, v224, &qword_1ED193AC8);
          sub_1A5FA2CA8(0, v225, &qword_1ED193AA0);
          sub_1A5FA2CA8(v176, v226, &qword_1ED193508);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v221 + v227) = v290;
          v228 = v304;
          v229 = OUTLINED_FUNCTION_38_11();
          v230 = sub_1A6123A4C();
          if (os_log_type_enabled(v229, v230))
          {
            v231 = OUTLINED_FUNCTION_26();
            v232 = (_QWORD *)OUTLINED_FUNCTION_26();
            *(_DWORD *)v231 = 141558275;
            v316 = 1752392040;
            sub_1A6123A88();
            *(_WORD *)(v231 + 12) = 2113;
            v316 = (uint64_t)v228;
            v233 = v228;
            sub_1A6123A88();
            *v232 = v228;

            OUTLINED_FUNCTION_55_3(&dword_1A5F87000, v229, v230, "Successfully created product tuple; location=%{private,mask.hash}@");
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193C80);
            OUTLINED_FUNCTION_49_0();
            OUTLINED_FUNCTION_8();
          }

          v245 = v293[0];
          v246 = v263;
          v247 = v262;
          v248 = v261;

          OUTLINED_FUNCTION_12_24(&qword_1ED193508, (uint64_t)&v306);
          OUTLINED_FUNCTION_12_24(&qword_1ED193AA0, (uint64_t)&v308);
          OUTLINED_FUNCTION_12_24(&qword_1ED193AC8, (uint64_t)v311);
          OUTLINED_FUNCTION_12_24(&qword_1ED192870, (uint64_t)&v318);
          OUTLINED_FUNCTION_12_24(&qword_1ED192D38, (uint64_t)&v319);
          OUTLINED_FUNCTION_12_24(&qword_1ED192878, (uint64_t)v286);
          OUTLINED_FUNCTION_40_7((uint64_t)&v314);
          OUTLINED_FUNCTION_25_18(v245, *(uint64_t (**)(uint64_t, _QWORD))(v264 + 8));
          OUTLINED_FUNCTION_40_7((uint64_t)&v320);
          OUTLINED_FUNCTION_40_7((uint64_t)&v321);
          (*(void (**)(char *, uint64_t))(v248 + 8))(v247, v246);
          sub_1A5FA6658(v255, v266, (uint64_t (*)(_QWORD))type metadata accessor for WatchWeather);
          v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194B90);
          swift_storeEnumTagMultiPayload();
          v241 = OUTLINED_FUNCTION_76();
          v244 = v249;
          goto LABEL_55;
        }
      }
    }
    swift_bridgeObjectRelease();
    v138 = v304;
  }
  v234 = v138;
  v235 = OUTLINED_FUNCTION_38_11();
  v236 = sub_1A6123A40();
  if (os_log_type_enabled(v235, v236))
  {
    v237 = OUTLINED_FUNCTION_26();
    v316 = OUTLINED_FUNCTION_26();
    *(_DWORD *)v237 = 141558275;
    OUTLINED_FUNCTION_35_15();
    sub_1A6123A88();
    *(_WORD *)(v237 + 12) = 2081;
    v309 = (uint64_t)v234;
    sub_1A5FAA124();
    v238 = v234;
    v239 = sub_1A612380C();
    v309 = OUTLINED_FUNCTION_53_6(v239, v240);
    OUTLINED_FUNCTION_33_2();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_55_3(&dword_1A5F87000, v235, v236, "Unexpectedly empty response when fetching nano weather data; location=%{private,mask.hash}s");
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_8();
  }

  OUTLINED_FUNCTION_39_7(v284);
  OUTLINED_FUNCTION_25_18(v130, *(uint64_t (**)(uint64_t, _QWORD))(v264 + 8));
  OUTLINED_FUNCTION_39_7(v297);
  OUTLINED_FUNCTION_39_7(v298);
  OUTLINED_FUNCTION_21_15();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194B90);
  v241 = OUTLINED_FUNCTION_11_24((uint64_t)v293);
LABEL_55:
  __swift_storeEnumTagSinglePayload(v241, v242, v243, v244);
  OUTLINED_FUNCTION_0_0();
}

char *sub_1A608E3AC(unint64_t *a1)
{
  unint64_t v1;
  char *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;

  v1 = *a1;
  if (*a1)
  {
    v2 = (char *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      while (1)
      {
        v3 = __clz(__rbit64(v1));
        if (v3 <= 0x3F)
          break;
LABEL_43:
        if (qword_1ED193BE8 != -1)
          swift_once();
        v17 = sub_1A612356C();
        __swift_project_value_buffer(v17, (uint64_t)qword_1ED19DB18);
        v18 = sub_1A6123554();
        v19 = sub_1A6123A40();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = swift_slowAlloc();
          v21 = swift_slowAlloc();
          v25 = v21;
          *(_DWORD *)v20 = 136446210;
          v22 = sub_1A61237F4();
          *(_QWORD *)(v20 + 4) = sub_1A5FBE7E0(v22, v23, &v25);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A5F87000, v18, v19, "Unknown default; availableDataSets=%{public}s",
            (uint8_t *)v20,
            0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A85BB42C](v21, -1, -1);
          MEMORY[0x1A85BB42C](v20, -1, -1);
        }

        if (!v1)
          return v2;
      }
      v4 = 1 << v3;
      v1 ^= 1 << v3;
      switch(1 << v3)
      {
        case 1:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v2 = sub_1A5FA23BC(0, *((_QWORD *)v2 + 2) + 1, 1, (uint64_t)v2);
          v6 = *((_QWORD *)v2 + 2);
          v5 = *((_QWORD *)v2 + 3);
          if (v6 >= v5 >> 1)
            v2 = sub_1A5FA23BC((char *)(v5 > 1), v6 + 1, 1, (uint64_t)v2);
          *((_QWORD *)v2 + 2) = v6 + 1;
          v2[v6 + 32] = 1;
          if (v1)
            continue;
          return v2;
        case 2:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v2 = sub_1A5FA23BC(0, *((_QWORD *)v2 + 2) + 1, 1, (uint64_t)v2);
          v10 = *((_QWORD *)v2 + 2);
          v9 = *((_QWORD *)v2 + 3);
          if (v10 >= v9 >> 1)
            v2 = sub_1A5FA23BC((char *)(v9 > 1), v10 + 1, 1, (uint64_t)v2);
          *((_QWORD *)v2 + 2) = v10 + 1;
          v2[v10 + 32] = 4;
          if (v1)
            continue;
          return v2;
        case 3:
        case 5:
        case 6:
        case 7:
          goto LABEL_43;
        case 4:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v2 = sub_1A5FA23BC(0, *((_QWORD *)v2 + 2) + 1, 1, (uint64_t)v2);
          v12 = *((_QWORD *)v2 + 2);
          v11 = *((_QWORD *)v2 + 3);
          if (v12 >= v11 >> 1)
            v2 = sub_1A5FA23BC((char *)(v11 > 1), v12 + 1, 1, (uint64_t)v2);
          *((_QWORD *)v2 + 2) = v12 + 1;
          v2[v12 + 32] = 3;
          if (v1)
            continue;
          return v2;
        case 8:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v2 = sub_1A5FA23BC(0, *((_QWORD *)v2 + 2) + 1, 1, (uint64_t)v2);
          v14 = *((_QWORD *)v2 + 2);
          v13 = *((_QWORD *)v2 + 3);
          if (v14 >= v13 >> 1)
            v2 = sub_1A5FA23BC((char *)(v13 > 1), v14 + 1, 1, (uint64_t)v2);
          *((_QWORD *)v2 + 2) = v14 + 1;
          v2[v14 + 32] = 2;
          if (v1)
            continue;
          return v2;
        default:
          if (v4 == 16)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v2 = sub_1A5FA23BC(0, *((_QWORD *)v2 + 2) + 1, 1, (uint64_t)v2);
            v16 = *((_QWORD *)v2 + 2);
            v15 = *((_QWORD *)v2 + 3);
            if (v16 >= v15 >> 1)
              v2 = sub_1A5FA23BC((char *)(v15 > 1), v16 + 1, 1, (uint64_t)v2);
            *((_QWORD *)v2 + 2) = v16 + 1;
            v2[v16 + 32] = 9;
            if (!v1)
              return v2;
          }
          else
          {
            if (v4 != 32)
              goto LABEL_43;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v2 = sub_1A5FA23BC(0, *((_QWORD *)v2 + 2) + 1, 1, (uint64_t)v2);
            v8 = *((_QWORD *)v2 + 2);
            v7 = *((_QWORD *)v2 + 3);
            if (v8 >= v7 >> 1)
              v2 = sub_1A5FA23BC((char *)(v7 > 1), v8 + 1, 1, (uint64_t)v2);
            *((_QWORD *)v2 + 2) = v8 + 1;
            v2[v8 + 32] = 0;
            if (!v1)
              return v2;
          }
          break;
      }
    }
  }
  return (char *)MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A608E840()
{
  uint64_t v0;

  return sub_1A608AE34(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1A608E85C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A6122708();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return OUTLINED_FUNCTION_18_3();
}

uint64_t sub_1A608E8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1A6121F58();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();
  swift_release();
  return OUTLINED_FUNCTION_18_3();
}

void sub_1A608E958(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_1A6121F58() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A608AEB8(a1, a2, v2 + v6, *(void **)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(uint64_t))(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1A608E9E8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A608EA14(void *a1)
{
  uint64_t v1;

  sub_1A608C3B4(a1, *(void **)(v1 + 16), *(void (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32));
}

void MonthlyWeatherStatistics.init(months:baselineStartDate:metadata:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  OUTLINED_FUNCTION_6_28();
}

uint64_t sub_1A608EA54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v3 + *(int *)(a1 + 52);
  v6 = OUTLINED_FUNCTION_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, v2, v6);
  return sub_1A5FA7D50(v1, v3 + *(int *)(a1 + 56));
}

uint64_t static MonthlyWeatherStatistics.== infix(_:_:)()
{
  if ((sub_1A6123914() & 1) != 0)
    OUTLINED_FUNCTION_6_28();
  return 0;
}

uint64_t MonthlyWeatherStatistics.months.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MonthlyWeatherStatistics.months.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*MonthlyWeatherStatistics.months.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t MonthlyWeatherStatistics.baselineStartDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 52);
  v5 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_30(a2, v4, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 16));
}

uint64_t MonthlyWeatherStatistics.baselineStartDate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 52);
  v5 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_30(v4, a1, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 40));
}

uint64_t (*MonthlyWeatherStatistics.baselineStartDate.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t MonthlyWeatherStatistics.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A5FBFA40(v2 + *(int *)(a1 + 56), a2);
}

uint64_t MonthlyWeatherStatistics.metadata.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5FF2038(a1, v2 + *(int *)(a2 + 56));
}

uint64_t (*MonthlyWeatherStatistics.metadata.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t MonthlyWeatherStatistics.startIndex.getter()
{
  return sub_1A61238D8();
}

void MonthlyWeatherStatistics.endIndex.getter()
{
  JUMPOUT(0x1A85BAAB4);
}

uint64_t MonthlyWeatherStatistics.subscript.getter()
{
  return sub_1A6123920();
}

uint64_t sub_1A608EC64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7368746E6F6DLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A614FBB0 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_1A6123CF8();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A608EDA4(char a1)
{
  if (!a1)
    return 0x7368746E6F6DLL;
  if (a1 == 1)
    return 0xD000000000000011;
  return 0x617461646174656DLL;
}

uint64_t sub_1A608EDFC()
{
  char *v0;

  return sub_1A608EDA4(*v0);
}

uint64_t sub_1A608EE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A608EC64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A608EE3C(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A61348E8, a1);
  return sub_1A6123DE8();
}

uint64_t sub_1A608EE70(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A61348E8, a1);
  return sub_1A6123DF4();
}

void MonthlyWeatherStatistics.encode(to:)()
{
  OUTLINED_FUNCTION_5_30();
}

void sub_1A608EEE4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  MEMORY[0x1A85BB36C](&unk_1A61348E8, a1);
  v4 = sub_1A6123CD4();
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1A6123DD0();
  *(_QWORD *)(v3 - 112) = *v2;
  *(_BYTE *)(v3 - 65) = 0;
  sub_1A6123908();
  *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 144);
  OUTLINED_FUNCTION_9_2();
}

void sub_1A608EFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 - 128);
  sub_1A6123CC8();
  if (!v4)
  {
    *(_BYTE *)(v3 - 112) = 1;
    sub_1A6121F58();
    sub_1A5FCAA84(&qword_1ED191698, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_0_32();
    *(_BYTE *)(v3 - 112) = 2;
    type metadata accessor for WeatherMetadata();
    sub_1A5FCAA84(&qword_1ED191718, (uint64_t (*)(uint64_t))type metadata accessor for WeatherMetadata, (uint64_t)&protocol conformance descriptor for WeatherMetadata);
    OUTLINED_FUNCTION_0_32();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  OUTLINED_FUNCTION_20();
}

void type metadata accessor for MonthlyWeatherStatistics.CodingKeys()
{
  JUMPOUT(0x1A85BB2E8);
}

void MonthlyWeatherStatistics.init(from:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for WeatherMetadata();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_11_0();
  v1 = sub_1A6121F58();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_5_30();
}

void sub_1A608F134(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1A85BB36C](&unk_1A61348E8, a1);
  v6 = sub_1A6123C5C();
  *(_QWORD *)(v5 - 144) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 160) = v3;
  *(_QWORD *)(v5 - 152) = v1;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for MonthlyWeatherStatistics();
}

void sub_1A608F1A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 - 200) = a1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  *(_QWORD *)(v3 - 136) = v2;
  v5 = *(_QWORD *)(v3 - 128);
  sub_1A6123DC4();
  if (!v5)
  {
    *(_QWORD *)(v3 - 232) = v4;
    *(_QWORD *)(v3 - 128) = v1;
    sub_1A6123908();
    *(_BYTE *)(v3 - 65) = 0;
    *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 152);
    OUTLINED_FUNCTION_9_2();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  OUTLINED_FUNCTION_20();
}

void sub_1A608F404()
{
  MonthlyWeatherStatistics.init(from:)();
}

void sub_1A608F424()
{
  MonthlyWeatherStatistics.encode(to:)();
}

uint64_t sub_1A608F438()
{
  return static MonthlyWeatherStatistics.== infix(_:_:)();
}

void sub_1A608F448()
{
  JUMPOUT(0x1A85BB36CLL);
}

uint64_t sub_1A608F458(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85BB36C](&protocol conformance descriptor for MonthlyWeatherStatistics<A>);
  return MEMORY[0x1A85BB36C](MEMORY[0x1E0DEDE40], a1, &v3);
}

void sub_1A608F4A0()
{
  JUMPOUT(0x1A85BB36CLL);
}

uint64_t sub_1A608F4B0(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85BB36C](&protocol conformance descriptor for MonthlyWeatherStatistics<A>);
  return MEMORY[0x1A85BB36C](MEMORY[0x1E0DEDE28], a1, &v3);
}

uint64_t sub_1A608F4F8()
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for MonthlyWeatherStatistics<A>);
  return sub_1A6123968();
}

_QWORD *sub_1A608F548(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A608F838(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB508]);
}

uint64_t sub_1A608F554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for MonthlyWeatherStatistics<A>, a3);
  return sub_1A6123974();
}

uint64_t sub_1A608F5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for MonthlyWeatherStatistics<A>, a4);
  return sub_1A6123950();
}

uint64_t sub_1A608F61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for MonthlyWeatherStatistics<A>, a3);
  return sub_1A612398C();
}

void sub_1A608F670()
{
  JUMPOUT(0x1A85BB36CLL);
}

uint64_t sub_1A608F680@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = MonthlyWeatherStatistics.startIndex.getter();
  *a1 = result;
  return result;
}

void sub_1A608F6A4()
{
  MonthlyWeatherStatistics.endIndex.getter();
}

uint64_t sub_1A608F6B8(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

void (*sub_1A608F6C8(_QWORD *a1, uint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1A608F724(v6, *a2, a3);
  return sub_1A5F8A82C;
}

void (*sub_1A608F724(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = malloc(*(_QWORD *)(v4 + 64));
  MonthlyWeatherStatistics.subscript.getter();
  return sub_1A5F8A854;
}

uint64_t sub_1A608F790(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for MonthlyWeatherStatistics<A>, a1);
  return sub_1A6123980();
}

uint64_t sub_1A608F7DC()
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for MonthlyWeatherStatistics<A>);
  return sub_1A612395C();
}

_QWORD *sub_1A608F82C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A608F838(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB500]);
}

_QWORD *sub_1A608F838(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  v7 = MEMORY[0x1A85BB36C](&protocol conformance descriptor for MonthlyWeatherStatistics<A>);
  result = a4(&v9, a1, a2, v7, MEMORY[0x1E0DEB458]);
  *a1 = v9;
  return result;
}

uint64_t sub_1A608F89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *(_QWORD *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v2, a1);
  v6 = MonthlyWeatherStatistics.startIndex.getter();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, a1);
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for MonthlyWeatherStatistics<A>, a1);
  result = sub_1A6123B60();
  *(_QWORD *)(a2 + *(int *)(result + 36)) = v6;
  return result;
}

uint64_t sub_1A608F928(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for MonthlyWeatherStatistics<A>, a1);
  return sub_1A61239A4();
}

uint64_t sub_1A608F95C(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for MonthlyWeatherStatistics<A>, a1);
  return sub_1A61239D4();
}

uint64_t sub_1A608F990()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A608F99C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_6();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == (_DWORD)a2)
    {
      v9 = v8;
      v10 = *(int *)(a3 + 52);
    }
    else
    {
      v9 = type metadata accessor for WeatherMetadata();
      v10 = *(int *)(a3 + 56);
    }
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + v10, a2, v9);
  }
}

uint64_t sub_1A608FA30()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1A608FA3C(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_6();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 52);
    }
    else
    {
      v9 = type metadata accessor for WeatherMetadata();
      v10 = *(int *)(a4 + 56);
    }
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1A608FACC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A608FB18 + 4 * byte_1A6134545[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A608FB4C + 4 * byte_1A6134540[v4]))();
}

uint64_t sub_1A608FB4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A608FB54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A608FB5CLL);
  return result;
}

uint64_t sub_1A608FB68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A608FB70);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A608FB74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A608FB7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A608FB88()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A608FB98()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A608FBA8()
{
  JUMPOUT(0x1A85BB36CLL);
}

uint64_t static Forecast<>.mock()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t *v27;
  uint64_t result;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v39 = a1;
  v1 = type metadata accessor for DayWeather();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_0();
  v5 = (char **)(v4 - v3);
  v6 = sub_1A6121F58();
  v40 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v38 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8159E0);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v17 = (unint64_t *)((char *)&v36 - v16);
  if (qword_1EE812C08 != -1)
    swift_once();
  v37 = v10;
  v18 = qword_1EE844F48;
  sub_1A60375E0();
  v42 = 0;
  v43 = 0;
  v41 = v19;
  OUTLINED_FUNCTION_6_29();
  OUTLINED_FUNCTION_5_31();
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8159E8);
  OUTLINED_FUNCTION_3_29(v20);
  if (v21)
  {
    v31 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v31 = MEMORY[0x1E0DEE9D8];
    do
    {
      v32 = *v17;
      OUTLINED_FUNCTION_2_34((uint64_t)v13, (uint64_t)v17 + *(int *)(v18 + 48));
      sub_1A608FF88(v13, v32, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = OUTLINED_FUNCTION_4_28(0, *(_QWORD *)(v31 + 16) + 1);
      v34 = *(_QWORD *)(v31 + 16);
      v33 = *(_QWORD *)(v31 + 24);
      v18 = v34 + 1;
      if (v34 >= v33 >> 1)
        v31 = OUTLINED_FUNCTION_4_28(v33 > 1, v34 + 1);
      *(_QWORD *)(v31 + 16) = v18;
      sub_1A6090BB0((uint64_t)v5, v31+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v34);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v6);
      OUTLINED_FUNCTION_6_29();
      OUTLINED_FUNCTION_5_31();
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8159E8);
      OUTLINED_FUNCTION_3_29(v35);
    }
    while (!v21);
  }
  swift_bridgeObjectRelease();
  if (qword_1EE812C10 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v6, (uint64_t)qword_1EE844F50);
  v23 = (uint64_t)v37;
  OUTLINED_FUNCTION_2_34((uint64_t)v37, v22);
  if (qword_1EE812C18 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v6, (uint64_t)qword_1EE844F68);
  v25 = v38;
  OUTLINED_FUNCTION_2_34(v38, v24);
  v26 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  v27 = v39;
  result = WeatherMetadata.init(date:expirationDate:latitude:longitude:)(v23, v25, (uint64_t)v39 + v26[13], 37.323, -122.0);
  *v27 = v31;
  v29 = (uint64_t *)((char *)v27 + v26[14]);
  *v29 = 0;
  v29[1] = 0;
  *(uint64_t *)((char *)v27 + v26[15]) = 0;
  *(uint64_t *)((char *)v27 + v26[16]) = 0;
  v30 = (char *)v27 + v26[17];
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 1;
  return result;
}

uint64_t sub_1A608FF40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8159E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A608FF88@<X0>(void *a1@<X0>, unint64_t a2@<X1>, char **a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t result;
  unint64_t v54;
  uint64_t v55;
  double v56;
  char v57;
  id v58;
  uint64_t v59;
  void *v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  _BYTE *v71;
  void *v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char **v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118;
  char v119;
  _BYTE v120[9];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192500);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DayPartForecast();
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v87 - v13;
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192960);
  MEMORY[0x1E0C80A78](v100);
  v105 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v104 = (char *)&v87 - v17;
  MEMORY[0x1E0C80A78](v18);
  v103 = (char *)&v87 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192970);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for Wind();
  MEMORY[0x1E0C80A78](v97);
  v101 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for MoonEvents();
  MEMORY[0x1E0C80A78](v96);
  v102 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for SunEvents();
  MEMORY[0x1E0C80A78](v25);
  v111 = (uint64_t)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for PrecipitationAmountByType();
  MEMORY[0x1E0C80A78](v27);
  v110 = (uint64_t)&v87 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192980);
  MEMORY[0x1E0C80A78](v29);
  v109 = (uint64_t)&v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v108 = (uint64_t)&v87 - v32;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  MEMORY[0x1E0C80A78](v33);
  v95 = (uint64_t)&v87 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v94 = (uint64_t)&v87 - v36;
  MEMORY[0x1E0C80A78](v37);
  v107 = (uint64_t)&v87 - v38;
  MEMORY[0x1E0C80A78](v39);
  v113 = (uint64_t)&v87 - v40;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED192880);
  MEMORY[0x1E0C80A78](v41);
  v106 = (uint64_t)&v87 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v43);
  v112 = (uint64_t)&v87 - v44;
  v45 = sub_1A6121F58();
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v115 = (uint64_t)&v87 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_1A61220A8();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v114 = (char *)&v87 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE812C38 == -1)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  swift_once();
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_20;
LABEL_3:
  if (*(_QWORD *)(qword_1EE844FA8 + 16) > a2)
  {
    v90 = v14;
    v91 = v11;
    v92 = v9;
    v93 = v8;
    v49 = *(unsigned __int8 *)(qword_1EE844FA8 + a2 + 32);
    type metadata accessor for WeatherConditionSymbolMapper();
    swift_initStaticObject();
    sub_1A612209C();
    v120[0] = v49;
    v8 = (char *)sub_1A612186C(v120, (uint64_t)a1, 37.323, -122.0);
    v9 = v50;
    LOBYTE(v11) = sub_1A5FAD72C(v49, 22);
    (*(void (**)(uint64_t, void *, uint64_t))(v46 + 16))(v115, a1, v45);
    v119 = v49;
    if (qword_1EE812C30 == -1)
      goto LABEL_5;
    goto LABEL_22;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  swift_once();
LABEL_5:
  if (*(_QWORD *)(qword_1EE844FA0 + 16) <= a2)
  {
    __break(1u);
  }
  else
  {
    v89 = a3;
    a1 = (void *)objc_opt_self();
    a3 = &off_1E4FF6000;
    v51 = objc_msgSend(a1, sel_fahrenheit);
    sub_1A5FAD368(0, qword_1ED1927C0);
    sub_1A6121CE8();
    v52 = v113;
    sub_1A6121F28();
    result = __swift_storeEnumTagSinglePayload(v52, 0, 1, v45);
    if (qword_1EE812C28 == -1)
      goto LABEL_7;
  }
  result = swift_once();
LABEL_7:
  if (*(_QWORD *)(qword_1EE844F98 + 16) <= a2)
  {
    __break(1u);
  }
  else
  {
    v54 = 0xEC0000006C6C6966;
    if (v9)
      v54 = v9;
    v88 = v54;
    v55 = 0x2E78616D2E6E7573;
    if (v9)
      v55 = (uint64_t)v8;
    v87 = v55;
    if ((v11 & 1) != 0)
      v56 = 0.3;
    else
      v56 = 0.0;
    if ((v11 & 1) != 0)
      v57 = 3;
    else
      v57 = 0;
    v58 = objc_msgSend(a1, a3[172], v87);
    sub_1A6121CE8();
    v59 = v107;
    sub_1A6121E50();
    __swift_storeEnumTagSinglePayload(v59, 0, 1, v45);
    v118 = v57;
    v60 = (void *)objc_opt_self();
    v61 = objc_msgSend(v60, sel_inches);
    sub_1A5FAD368(0, (unint64_t *)&qword_1ED193C60);
    sub_1A6121CE8();
    v62 = objc_msgSend(v60, sel_inches);
    sub_1A6121CE8();
    static PrecipitationAmountByType.mock()(v110);
    static SunEvents.mock()(v111);
    v63 = v94;
    __swift_storeEnumTagSinglePayload(v94, 1, 1, v45);
    v64 = v95;
    __swift_storeEnumTagSinglePayload(v95, 1, 1, v45);
    v65 = v96;
    v66 = v102;
    v67 = (uint64_t)&v102[*(int *)(v96 + 20)];
    __swift_storeEnumTagSinglePayload(v67, 1, 1, v45);
    v68 = (uint64_t)&v66[*(int *)(v65 + 24)];
    __swift_storeEnumTagSinglePayload(v68, 1, 1, v45);
    *v66 = 2;
    sub_1A5FA3E2C(v63, v67, &qword_1ED1929C8);
    sub_1A5FA3E2C(v64, v68, &qword_1ED1929C8);
    v116 = 5;
    v117 = 1;
    v69 = objc_msgSend((id)objc_opt_self(), sel_degrees);
    v70 = v97;
    v71 = v101;
    sub_1A5FAD368(0, &qword_1ED193C50);
    sub_1A6121CE8();
    v72 = (void *)objc_opt_self();
    v73 = objc_msgSend(v72, sel_kilometersPerHour);
    sub_1A5FAD368(0, (unint64_t *)&qword_1ED193C58);
    sub_1A6121CE8();
    v74 = objc_msgSend(v72, sel_kilometersPerHour);
    sub_1A6121CE8();
    v75 = v100;
    __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v100);
    v76 = (uint64_t)&v71[*(int *)(v70 + 28)];
    __swift_storeEnumTagSinglePayload(v76, 1, 1, v75);
    *v71 = 4;
    sub_1A5FA3E2C((uint64_t)v22, v76, &qword_1ED192970);
    v77 = objc_msgSend(v72, sel_kilometersPerHour);
    sub_1A6121CE8();
    __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v75);
    v78 = objc_msgSend(v72, sel_kilometersPerHour);
    v79 = (uint64_t)v103;
    sub_1A6121CE8();
    v80 = objc_msgSend(v72, sel_kilometersPerHour);
    v81 = (uint64_t)v104;
    sub_1A6121CE8();
    v82 = objc_msgSend(v72, sel_kilometersPerHour);
    v83 = (uint64_t)v105;
    sub_1A6121CE8();
    v84 = (uint64_t)v90;
    static DayPartForecast.mock()((uint64_t)v90);
    v85 = v91;
    static DayPartForecast.mock()(v91);
    v86 = (uint64_t)v93;
    __swift_storeEnumTagSinglePayload((uint64_t)v93, 1, 1, v92);
    DayWeather.init(date:condition:symbolName:highTemperature:highTemperatureTime:lowTemperature:lowTemperatureTime:humidity:humidityMax:humidityMin:maximumHumidity:minimumHumidity:precipitation:precipitationChance:rainfallAmount:snowfallAmount:precipitationAmountByType:sun:moon:uvIndex:visibilityMax:visibilityMin:maximumVisibility:minimumVisibility:wind:highWindSpeed:windGustSpeedMax:windSpeedAvg:windSpeedMax:daytimeForecast:overnightForecast:restOfDayForecast:)(v115, &v119, v87, v88, v112, v113, v106, v107, (uint64_t)v89, 0.2, 1.0, 0.1, 1.0, 0.1, v56, 1.0, 0.0, &v118, v108,
      v109,
      v110,
      v111,
      (uint64_t)v66,
      &v116,
      0x3FF0000000000000,
      0,
      (uint64_t)v71,
      (uint64_t)v22,
      v79,
      v81,
      v83,
      v84,
      v85,
      v86);
    return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v114, v99);
  }
  return result;
}

uint64_t static DayWeather.mock()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED190B80);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_0();
  v5 = v4 - v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_0();
  v9 = v8 - v7;
  static Forecast<>.mock()((uint64_t *)(v8 - v7));
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(*(_QWORD *)v9 + 16);
  v12 = type metadata accessor for DayWeather();
  v13 = v12;
  if (v11)
  {
    v14 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
    sub_1A6090BF4(v10 + ((v14 + 32) & ~v14), v5);
    v15 = 0;
  }
  else
  {
    v15 = 1;
  }
  __swift_storeEnumTagSinglePayload(v5, v15, 1, v13);
  sub_1A6090C38(v9);
  result = __swift_getEnumTagSinglePayload(v5, 1, v13);
  if ((_DWORD)result != 1)
    return sub_1A6090BB0(v5, a1);
  __break(1u);
  return result;
}

uint64_t sub_1A6090BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DayWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6090BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DayWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A6090C38(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t TideEvents.init(date:events:hours:closestWaterLocation:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v14;
  int *v15;
  double *v16;

  v14 = OUTLINED_FUNCTION_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a5, a1, v14);
  v15 = (int *)OUTLINED_FUNCTION_0_33();
  *(_QWORD *)(a5 + v15[5]) = a2;
  *(_QWORD *)(a5 + v15[6]) = a3;
  v16 = (double *)(a5 + v15[7]);
  *v16 = a6;
  v16[1] = a7;
  return sub_1A5FA7D50(a4, a5 + v15[8]);
}

uint64_t type metadata accessor for TideEvents()
{
  uint64_t result;

  result = qword_1ED192920;
  if (!qword_1ED192920)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TideEvents.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_30(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t TideEvents.date.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_30(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*TideEvents.date.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t TideEvents.events.getter()
{
  OUTLINED_FUNCTION_0_33();
  return swift_bridgeObjectRetain();
}

void TideEvents.events.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_33() + 20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_9();
}

double (*TideEvents.events.modify())(double, double)
{
  OUTLINED_FUNCTION_0_33();
  return GEOLocationCoordinate2DMake;
}

uint64_t TideEvents.hours.getter()
{
  OUTLINED_FUNCTION_0_33();
  return swift_bridgeObjectRetain();
}

void TideEvents.hours.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_0_33() + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_9();
}

double (*TideEvents.hours.modify())(double, double)
{
  OUTLINED_FUNCTION_0_33();
  return GEOLocationCoordinate2DMake;
}

double TideEvents.closestWaterLocation.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_0_33() + 28));
}

uint64_t TideEvents.closestWaterLocation.setter(double a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  double *v6;

  result = OUTLINED_FUNCTION_0_33();
  v6 = (double *)(v2 + *(int *)(result + 28));
  *v6 = a1;
  v6[1] = a2;
  return result;
}

double (*TideEvents.closestWaterLocation.modify())(double, double)
{
  OUTLINED_FUNCTION_0_33();
  return GEOLocationCoordinate2DMake;
}

uint64_t TideEvents.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_33() + 32);
  return sub_1A5FBFA40(v3, a1);
}

uint64_t TideEvents.metadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_0_33() + 32);
  return sub_1A5FF2038(a1, v3);
}

double (*TideEvents.metadata.modify())(double, double)
{
  OUTLINED_FUNCTION_0_33();
  return GEOLocationCoordinate2DMake;
}

char *initializeBufferWithCopyOfBuffer for TideEvents(char *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1A6121F58();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = a3[6];
    *(_QWORD *)&a1[a3[5]] = *(uint64_t *)((char *)a2 + a3[5]);
    *(_QWORD *)&a1[v9] = *(uint64_t *)((char *)a2 + v9);
    v10 = a3[8];
    *(_OWORD *)&a1[a3[7]] = *(_OWORD *)((char *)a2 + a3[7]);
    v11 = &a1[v10];
    v12 = (char *)a2 + v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(v11, v12, v7);
    v13 = (int *)type metadata accessor for WeatherMetadata();
    v8(&v11[v13[5]], &v12[v13[5]], v7);
    *(_QWORD *)&v11[v13[6]] = *(_QWORD *)&v12[v13[6]];
    *(_QWORD *)&v11[v13[7]] = *(_QWORD *)&v12[v13[7]];
    *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
  }
  swift_retain();
  return a1;
}

uint64_t destroy for TideEvents(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1A6121F58();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 32);
  v5(v6, v4);
  v7 = type metadata accessor for WeatherMetadata();
  v5(v6 + *(int *)(v7 + 20), v4);
  return swift_release();
}

uint64_t initializeWithCopy for TideEvents(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;

  v6 = sub_1A6121F58();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v10, v11, v6);
  v12 = (int *)type metadata accessor for WeatherMetadata();
  v7(v10 + v12[5], v11 + v12[5], v6);
  *(_QWORD *)(v10 + v12[6]) = *(_QWORD *)(v11 + v12[6]);
  *(_QWORD *)(v10 + v12[7]) = *(_QWORD *)(v11 + v12[7]);
  *(_QWORD *)(v10 + v12[8]) = *(_QWORD *)(v11 + v12[8]);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TideEvents(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;

  v6 = sub_1A6121F58();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v7(a1 + v11, v13, v6);
  v14 = (int *)type metadata accessor for WeatherMetadata();
  v7(v12 + v14[5], v13 + v14[5], v6);
  *(_QWORD *)(v12 + v14[6]) = *(_QWORD *)(v13 + v14[6]);
  *(_QWORD *)(v12 + v14[7]) = *(_QWORD *)(v13 + v14[7]);
  *(_QWORD *)(v12 + v14[8]) = *(_QWORD *)(v13 + v14[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for TideEvents(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;

  v6 = sub_1A6121F58();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v7(a1 + v9, v11, v6);
  v12 = (int *)type metadata accessor for WeatherMetadata();
  v7(v10 + v12[5], v11 + v12[5], v6);
  *(_QWORD *)(v10 + v12[6]) = *(_QWORD *)(v11 + v12[6]);
  *(_QWORD *)(v10 + v12[7]) = *(_QWORD *)(v11 + v12[7]);
  *(_QWORD *)(v10 + v12[8]) = *(_QWORD *)(v11 + v12[8]);
  return a1;
}

uint64_t assignWithTake for TideEvents(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;

  v6 = sub_1A6121F58();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  v11 = (int *)type metadata accessor for WeatherMetadata();
  v7(v9 + v11[5], v10 + v11[5], v6);
  *(_QWORD *)(v9 + v11[6]) = *(_QWORD *)(v10 + v11[6]);
  *(_QWORD *)(v9 + v11[7]) = *(_QWORD *)(v10 + v11[7]);
  *(_QWORD *)(v9 + v11[8]) = *(_QWORD *)(v10 + v11[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TideEvents()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A609150C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v7 = type metadata accessor for WeatherMetadata();
    v8 = a1 + *(int *)(a3 + 32);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TideEvents()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1A60915B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      OUTLINED_FUNCTION_9();
      return;
    }
    v9 = type metadata accessor for WeatherMetadata();
    v10 = a1 + *(int *)(a4 + 32);
  }
  __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t sub_1A609163C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1A6121F58();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for WeatherMetadata();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void MinuteSummary.init(date:expirationDate:precipitation:precipitationChance:apparentPrecipitationIntensity:)()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_19_18();
  v3 = v2;
  v5 = v4;
  v7 = *v6;
  v9 = *v8;
  v10 = *((_BYTE *)v8 + 8);
  OUTLINED_FUNCTION_1_38();
  v11 = OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_34(v11);
  OUTLINED_FUNCTION_13_25();
  *(_BYTE *)(v5 + v0[6]) = v7;
  *(_BYTE *)(v5 + v0[7]) = v7;
  *(_QWORD *)(v5 + v0[8]) = v3;
  *(_QWORD *)v1 = v9;
  *(_BYTE *)(v1 + 8) = v10;
  OUTLINED_FUNCTION_2_35();
}

uint64_t MinuteSummary.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_30(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t MinuteSummary.date.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_30(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*MinuteSummary.date.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t MinuteSummary.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_1_38() + 20);
  return sub_1A5FAF43C(v3, a1);
}

uint64_t MinuteSummary.expirationDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_1_38() + 20);
  return sub_1A5FBF9A0(a1, v3);
}

double (*MinuteSummary.expirationDate.modify())(double, double)
{
  OUTLINED_FUNCTION_1_38();
  return GEOLocationCoordinate2DMake;
}

void MinuteSummary.precipitation.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_1_38() + 24));
  OUTLINED_FUNCTION_51();
}

void MinuteSummary.precipitation.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_1_38() + 24)) = v2;
  OUTLINED_FUNCTION_51();
}

double (*MinuteSummary.precipitation.modify())(double, double)
{
  OUTLINED_FUNCTION_1_38();
  return GEOLocationCoordinate2DMake;
}

void MinuteSummary.precipitationKind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_1_38() + 28));
  OUTLINED_FUNCTION_51();
}

void MinuteSummary.precipitationKind.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_1_38() + 28)) = v2;
  OUTLINED_FUNCTION_51();
}

double (*MinuteSummary.precipitationKind.modify())(double, double)
{
  OUTLINED_FUNCTION_1_38();
  return GEOLocationCoordinate2DMake;
}

double MinuteSummary.precipitationChance.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_1_38() + 32));
}

uint64_t MinuteSummary.precipitationChance.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_1_38();
  *(double *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

double (*MinuteSummary.precipitationChance.modify())(double, double)
{
  OUTLINED_FUNCTION_1_38();
  return GEOLocationCoordinate2DMake;
}

void MinuteSummary.apparentPrecipitationIntensity.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v1 + *(int *)(OUTLINED_FUNCTION_1_38() + 36));
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = (_BYTE)v3;
  OUTLINED_FUNCTION_51();
}

void MinuteSummary.apparentPrecipitationIntensity.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = v1 + *(int *)(OUTLINED_FUNCTION_1_38() + 36);
  *(_QWORD *)v4 = v2;
  *(_BYTE *)(v4 + 8) = v3;
  OUTLINED_FUNCTION_9();
}

double (*MinuteSummary.apparentPrecipitationIntensity.modify())(double, double)
{
  OUTLINED_FUNCTION_1_38();
  return GEOLocationCoordinate2DMake;
}

void MinuteSummary.init(date:expirationDate:precipitation:precipitationKind:precipitationChance:apparentPrecipitationIntensity:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_18();
  OUTLINED_FUNCTION_1_38();
  v0 = OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_34(v0);
  OUTLINED_FUNCTION_13_25();
  OUTLINED_FUNCTION_8_26();
  OUTLINED_FUNCTION_2_35();
}

void MinuteSummary.init(date:expirationDate:precipitationKind:precipitationChance:apparentPrecipitationIntensity:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_18();
  OUTLINED_FUNCTION_1_38();
  v0 = OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_0_34(v0);
  OUTLINED_FUNCTION_13_25();
  OUTLINED_FUNCTION_8_26();
  OUTLINED_FUNCTION_2_35();
}

uint64_t sub_1A6091A98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6974617269707865 && a2 == 0xEE00657461446E6FLL;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7469706963657270 && a2 == 0xED00006E6F697461;
      if (v7 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x80000001A614FC10 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001A6141F70 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001A6141FB0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v8 = sub_1A6123CF8();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 5;
        else
          return 6;
      }
    }
  }
}

uint64_t sub_1A6091D30(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6091D5C + 4 * byte_1A61349A0[a1]))(1702125924, 0xE400000000000000);
}

uint64_t sub_1A6091D5C()
{
  return 0x6974617269707865;
}

uint64_t sub_1A6091D80()
{
  return 0x7469706963657270;
}

unint64_t sub_1A6091DA4()
{
  return 0xD000000000000011;
}

unint64_t sub_1A6091DC0()
{
  return 0xD000000000000013;
}

uint64_t sub_1A6091DF8()
{
  unsigned __int8 *v0;

  return sub_1A6091D30(*v0);
}

uint64_t sub_1A6091E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6091A98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6091E24()
{
  sub_1A6092384();
  return sub_1A6123DE8();
}

uint64_t sub_1A6091E4C()
{
  sub_1A6092384();
  return sub_1A6123DF4();
}

uint64_t static MinuteSummary.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  int *v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  double *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  double v41;
  uint64_t v44;
  int *v45;

  v5 = OUTLINED_FUNCTION_6();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_0();
  v9 = v8 - v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191C98);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_12();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  OUTLINED_FUNCTION_2();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v44 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v44 - v19;
  if ((sub_1A6121F1C() & 1) == 0)
    goto LABEL_21;
  v21 = OUTLINED_FUNCTION_1_38();
  v22 = a1;
  v23 = a2;
  v24 = v21;
  v25 = *(int *)(v21 + 20);
  v44 = v22;
  sub_1A5FAF43C(v22 + v25, (uint64_t)v20);
  v45 = (int *)v24;
  sub_1A5FAF43C(v23 + *(int *)(v24 + 20), (uint64_t)v18);
  v26 = v2 + *(int *)(v10 + 48);
  sub_1A5FAF43C((uint64_t)v20, v2);
  sub_1A5FAF43C((uint64_t)v18, v26);
  OUTLINED_FUNCTION_2_17(v2);
  if (v27)
  {
    OUTLINED_FUNCTION_14_1((uint64_t)v18);
    OUTLINED_FUNCTION_14_1((uint64_t)v20);
    OUTLINED_FUNCTION_2_17(v26);
    if (v27)
    {
      sub_1A5FA0C4C(v2, &qword_1ED1929C8);
      goto LABEL_12;
    }
LABEL_10:
    sub_1A5FA0C4C(v2, &qword_1ED191C98);
LABEL_21:
    v40 = 0;
    return v40 & 1;
  }
  sub_1A5FAF43C(v2, (uint64_t)v15);
  OUTLINED_FUNCTION_2_17(v26);
  if (v27)
  {
    sub_1A5FA0C4C((uint64_t)v18, &qword_1ED1929C8);
    sub_1A5FA0C4C((uint64_t)v20, &qword_1ED1929C8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    goto LABEL_10;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v9, v26, v5);
  sub_1A5FAF4F4(&qword_1ED191CA8, MEMORY[0x1E0CB08B8]);
  v28 = sub_1A61237B8();
  v29 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v29(v9, v5);
  OUTLINED_FUNCTION_14_1((uint64_t)v18);
  OUTLINED_FUNCTION_14_1((uint64_t)v20);
  v29((uint64_t)v15, v5);
  OUTLINED_FUNCTION_14_1(v2);
  if ((v28 & 1) == 0)
    goto LABEL_21;
LABEL_12:
  v30 = v23;
  v31 = v45;
  v32 = v44;
  sub_1A5FAD738(*(_BYTE *)(v44 + v45[6]));
  if ((v33 & 1) == 0)
    goto LABEL_21;
  sub_1A5FAD738(*(_BYTE *)(v32 + v31[7]));
  if ((v34 & 1) == 0 || *(double *)(v32 + v31[8]) != *(double *)(v30 + v31[8]))
    goto LABEL_21;
  v35 = v31[9];
  v36 = (double *)(v32 + v35);
  v37 = *(unsigned __int8 *)(v32 + v35 + 8);
  v38 = v30 + v35;
  v39 = *(unsigned __int8 *)(v38 + 8);
  if ((_DWORD)v37 != 3)
  {
    v41 = *(double *)v38;
    if ((_DWORD)v39 != 3 && *v36 == v41)
    {
      v40 = sub_1A5FCF238(v37, v39, v41);
      return v40 & 1;
    }
    goto LABEL_21;
  }
  v40 = (_DWORD)v39 == 3;
  return v40 & 1;
}

void MinuteSummary.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8159F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_12();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6092384();
  sub_1A6123DD0();
  sub_1A6121F58();
  sub_1A5FAF4F4(&qword_1ED191698, MEMORY[0x1E0CB0890]);
  OUTLINED_FUNCTION_15();
  sub_1A6123CC8();
  if (!v1)
  {
    type metadata accessor for MinuteSummary();
    OUTLINED_FUNCTION_15();
    sub_1A6123C80();
    sub_1A5FD25B0();
    OUTLINED_FUNCTION_6_30();
    OUTLINED_FUNCTION_6_30();
    sub_1A6123CA4();
    sub_1A5FD25EC();
    sub_1A6123C80();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A6092384()
{
  unint64_t result;

  result = qword_1EE8159F8;
  if (!qword_1EE8159F8)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6134B64, &type metadata for MinuteSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE8159F8);
  }
  return result;
}

void MinuteSummary.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_0();
  v17 = v4;
  v5 = sub_1A6121F58();
  v19 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_0();
  v18 = v6;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815A00);
  v7 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_0();
  v8 = (int *)type metadata accessor for MinuteSummary();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_0();
  v12 = v11 - v10;
  v21 = v11 - v10 + *(int *)(v13 + 20);
  __swift_storeEnumTagSinglePayload(v21, 1, 1, v5);
  v14 = v12 + v8[9];
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6092384();
  sub_1A6123DC4();
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1A5FA0C4C(v21, &qword_1ED1929C8);
  }
  else
  {
    sub_1A5FAF4F4(&qword_1EE812DF0, MEMORY[0x1E0CB08C0]);
    sub_1A6123C44();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v12, v18, v5);
    sub_1A6123BFC();
    sub_1A5FBF9A0(v17, v21);
    sub_1A5FD29B8();
    OUTLINED_FUNCTION_7_32();
    *(_BYTE *)(v12 + v8[6]) = 1;
    OUTLINED_FUNCTION_7_32();
    *(_BYTE *)(v12 + v8[7]) = 1;
    LOBYTE(v23) = 4;
    sub_1A6123C20();
    *(_QWORD *)(v12 + v8[8]) = v15;
    sub_1A5FD2A30();
    sub_1A6123BFC();
    OUTLINED_FUNCTION_3_30(v7);
    *(_QWORD *)v14 = v23;
    *(_BYTE *)(v14 + 8) = v24;
    sub_1A5FD1AB8(v12, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1A5FD1AFC(v12);
  }
  OUTLINED_FUNCTION_20();
}

void sub_1A6092754(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  MinuteSummary.init(from:)(a1, a2);
}

void sub_1A6092768(_QWORD *a1)
{
  MinuteSummary.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for MinuteSummary(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6121F58();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v9], 1, v7))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v7);
    }
    v14 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    a1[v14] = a2[v14];
    v15 = a3[9];
    *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
    v16 = &a1[v15];
    v17 = &a2[v15];
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
  }
  return a1;
}

uint64_t destroy for NextHourSummary(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t (*v7)(uint64_t, uint64_t);

  v4 = sub_1A6121F58();
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v7(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  result = __swift_getEnumTagSinglePayload(v5, 1, v4);
  if (!(_DWORD)result)
    return v7(v5, v4);
  return result;
}

char *initializeWithCopy for MinuteSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = sub_1A6121F58();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v12] = a2[v12];
  v13 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  return a1;
}

char *assignWithCopy for MinuteSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = sub_1A6121F58();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
LABEL_7:
  a1[a3[6]] = a2[a3[6]];
  a1[a3[7]] = a2[a3[7]];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  v15 = a3[9];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)v17;
  v16[8] = v17[8];
  *(_QWORD *)v16 = v18;
  return a1;
}

char *initializeWithTake for MinuteSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = sub_1A6121F58();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v8], 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v12] = a2[v12];
  v13 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  return a1;
}

char *assignWithTake for MinuteSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v6 = sub_1A6121F58();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)&a1[v9], 1, v6);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
LABEL_7:
  v15 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v15] = a2[v15];
  v16 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for MinuteSummary()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A6092DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v11;
  unsigned int v12;

  v6 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 36) + 8) <= 3u)
    v11 = 3;
  else
    v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36) + 8);
  v12 = v11 - 3;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 36) + 8) >= 3u)
    return v12;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MinuteSummary()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1A6092EB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = OUTLINED_FUNCTION_6();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
LABEL_5:
    __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
    return;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1929C8);
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v9 = v11;
    v10 = a1 + *(int *)(a4 + 20);
    goto LABEL_5;
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 36) + 8) = a2 + 3;
  OUTLINED_FUNCTION_9();
}

uint64_t storeEnumTagSinglePayload for MinuteSummary.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A6092F94 + 4 * byte_1A61349AB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A6092FC8 + 4 * byte_1A61349A6[v4]))();
}

uint64_t sub_1A6092FC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6092FD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6092FD8);
  return result;
}

uint64_t sub_1A6092FE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6092FECLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A6092FF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6092FF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MinuteSummary.CodingKeys()
{
  return &type metadata for MinuteSummary.CodingKeys;
}

unint64_t sub_1A6093018()
{
  unint64_t result;

  result = qword_1EE815A08;
  if (!qword_1EE815A08)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6134B3C, &type metadata for MinuteSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815A08);
  }
  return result;
}

unint64_t sub_1A6093058()
{
  unint64_t result;

  result = qword_1EE815A10;
  if (!qword_1EE815A10)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6134AAC, &type metadata for MinuteSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815A10);
  }
  return result;
}

unint64_t sub_1A6093098()
{
  unint64_t result;

  result = qword_1EE815A18;
  if (!qword_1EE815A18)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6134AD4, &type metadata for MinuteSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815A18);
  }
  return result;
}

uint64_t WeatherServiceLastFetched.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for WeatherServiceLastFetched();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_24();
  sub_1A6093178(v1, v2);
  v5 = OUTLINED_FUNCTION_6();
  v6 = 1;
  if (__swift_getEnumTagSinglePayload(v2, 1, v5) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, v2, v5);
    v6 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a1, v6, 1, v5);
}

uint64_t sub_1A6093178(uint64_t a1, uint64_t a2)
{
  uint64_t Fetched;

  Fetched = type metadata accessor for WeatherServiceLastFetched();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Fetched - 8) + 16))(a2, a1, Fetched);
  return a2;
}

uint64_t static WeatherServiceLastFetched.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v19;

  v5 = OUTLINED_FUNCTION_6();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_24();
  type metadata accessor for WeatherServiceLastFetched();
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815A20);
  OUTLINED_FUNCTION_2();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v12[*(int *)(v13 + 48)];
  sub_1A6093178(a1, (uint64_t)v12);
  sub_1A6093178(a2, v14);
  OUTLINED_FUNCTION_3_31((uint64_t)v12);
  if (!v16)
  {
    sub_1A6093178((uint64_t)v12, (uint64_t)v9);
    OUTLINED_FUNCTION_3_31(v14);
    if (!v16)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v14, v5);
      v15 = sub_1A6121F1C();
      v17 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v17(v2, v5);
      v17((uint64_t)v9, v5);
      sub_1A6093384((uint64_t)v12);
      return v15 & 1;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
LABEL_9:
    sub_1A6093344((uint64_t)v12);
    v15 = 0;
    return v15 & 1;
  }
  OUTLINED_FUNCTION_3_31(v14);
  if (!v16)
    goto LABEL_9;
  sub_1A6093384((uint64_t)v12);
  v15 = 1;
  return v15 & 1;
}

uint64_t sub_1A6093344(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815A20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A6093384(uint64_t a1)
{
  uint64_t Fetched;

  Fetched = type metadata accessor for WeatherServiceLastFetched();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(Fetched - 8) + 8))(a1, Fetched);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for WeatherServiceLastFetched(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6121F58();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for WeatherServiceLastFetched(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A6121F58();
  result = __swift_getEnumTagSinglePayload(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for WeatherServiceLastFetched(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A6121F58();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for WeatherServiceLastFetched(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;

  v6 = sub_1A6121F58();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for WeatherServiceLastFetched(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A6121F58();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for WeatherServiceLastFetched(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;

  v6 = sub_1A6121F58();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherServiceLastFetched()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A60937D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = OUTLINED_FUNCTION_6();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WeatherServiceLastFetched()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A609381C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = OUTLINED_FUNCTION_6();
  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1A6093860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A6121F58();
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v4);
}

void Forecast<>.summaries.getter()
{
  char *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;

  if (!*(_QWORD *)&v0[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0) + 64)])
  {
    if (qword_1ED193BE8 != -1)
      swift_once();
    v1 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_12_3(v1, (uint64_t)qword_1ED19DB18);
    v2 = OUTLINED_FUNCTION_10_3();
    if (OUTLINED_FUNCTION_21_16(v2))
    {
      *(_WORD *)OUTLINED_FUNCTION_10_8() = 0;
      OUTLINED_FUNCTION_11_25(&dword_1A5F87000, v3, v4, "Missing summaries for minute forecast.");
      OUTLINED_FUNCTION_19_19();
    }

  }
  OUTLINED_FUNCTION_304();
  OUTLINED_FUNCTION_9();
}

void Forecast<>.init(_:summary:conditions:summaries:metadata:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int *v4;

  OUTLINED_FUNCTION_31_11();
  *v3 = v2;
  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  OUTLINED_FUNCTION_5_32(v4);
  OUTLINED_FUNCTION_16_25(v0 + *(int *)(v1 + 68));
}

void Forecast.init(_:metadata:marineLocation:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  OUTLINED_FUNCTION_33_11();
}

void sub_1A60939DC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_18();
  *(_QWORD *)v3 = v0;
  *(_QWORD *)(v3 + 8) = v1;
  *(_BYTE *)(v3 + 16) = v2;
}

void Forecast<>.conditions.getter()
{
  char *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;

  if (!*(_QWORD *)&v0[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0) + 60)])
  {
    if (qword_1ED193BE8 != -1)
      swift_once();
    v1 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_12_3(v1, (uint64_t)qword_1ED19DB18);
    v2 = OUTLINED_FUNCTION_10_3();
    if (OUTLINED_FUNCTION_21_16(v2))
    {
      *(_WORD *)OUTLINED_FUNCTION_10_8() = 0;
      OUTLINED_FUNCTION_11_25(&dword_1A5F87000, v3, v4, "Missing conditions for minute forecast.");
      OUTLINED_FUNCTION_19_19();
    }

  }
  OUTLINED_FUNCTION_304();
  OUTLINED_FUNCTION_9();
}

uint64_t static Forecast.== infix(_:_:)()
{
  if ((sub_1A6123914() & 1) != 0)
    type metadata accessor for Forecast();
  return 0;
}

BOOL Forecast<>.isExpired.getter()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;

  v1 = sub_1A6121F58();
  v2 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_12();
  sub_1A6121F4C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0);
  OUTLINED_FUNCTION_49();
  sub_1A5FAF4C0(&qword_1ED191E98, v2);
  v4 = sub_1A61237AC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return (v4 & 1) == 0;
}

void Forecast.forecast.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_51();
}

uint64_t (*Forecast.forecast.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t Forecast.metadata.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5FF2038(a1, v2 + *(int *)(a2 + 52));
}

uint64_t (*Forecast.metadata.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t Forecast.minuteSummary.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 56));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t Forecast.minuteConditions.getter()
{
  return OUTLINED_FUNCTION_27_11();
}

uint64_t Forecast.minuteSummaries.getter()
{
  return OUTLINED_FUNCTION_27_11();
}

__n128 Forecast.marineLocation.getter@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  __n128 *v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = (__n128 *)(v2 + *(int *)(a1 + 68));
  v4 = v3[1].n128_u8[0];
  result = *v3;
  *a2 = *v3;
  a2[1].n128_u8[0] = v4;
  return result;
}

void Forecast.init(_:minuteSummary:minuteConditions:minuteSummaries:metadata:)()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_31_11();
  *v0 = v1;
  type metadata accessor for Forecast();
}

void sub_1A6093E14(int *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_32(a1);
  OUTLINED_FUNCTION_16_25(v1 + *(int *)(v2 + 68));
}

uint64_t sub_1A6093E40(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x7473616365726F66 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x75536574756E696DLL && a2 == 0xED00007972616D6DLL;
      if (v7 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000001A614FC30 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x75536574756E696DLL && a2 == 0xEF73656972616D6DLL;
        if (v8 || (sub_1A6123CF8() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x6F4C656E6972616DLL && a2 == 0xEE006E6F69746163)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v10 = sub_1A6123CF8();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 5;
          else
            return 6;
        }
      }
    }
  }
}

uint64_t sub_1A609410C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6094140 + 4 * byte_1A6134C20[a1]))(0x7473616365726F66, 0xE800000000000000);
}

uint64_t sub_1A6094140()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1A6094154()
{
  return 0x75536574756E696DLL;
}

uint64_t sub_1A60941A8()
{
  return 0x6F4C656E6972616DLL;
}

uint64_t sub_1A60941CC()
{
  unsigned __int8 *v0;

  return sub_1A609410C(*v0);
}

uint64_t sub_1A60941DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6093E40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A609420C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5FC6E94();
  *a1 = result;
  return result;
}

uint64_t sub_1A609423C(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A6135450, a1);
  return sub_1A6123DE8();
}

uint64_t sub_1A6094270(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&unk_1A6135450, a1);
  return sub_1A6123DF4();
}

void Forecast.encode(to:)()
{
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_53_7();
}

void sub_1A60942DC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  MEMORY[0x1A85BB36C](&unk_1A6135450, a1);
  v4 = sub_1A6123CD4();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_28_15(v2, v2[3]);
  sub_1A6123DD0();
  *(_QWORD *)(v3 - 112) = *v1;
  *(_BYTE *)(v3 - 65) = 0;
  sub_1A6123908();
  *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 144);
  OUTLINED_FUNCTION_9_2();
}

void sub_1A6094394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;

  v3 = *(_QWORD *)(v2 - 128);
  sub_1A6123CC8();
  if (!v3)
  {
    v4 = *(int **)(v2 - 168);
    *(_BYTE *)(v2 - 112) = 1;
    OUTLINED_FUNCTION_49();
    sub_1A5FAF4C0(&qword_1ED191718, (void (*)(uint64_t))type metadata accessor for WeatherMetadata);
    OUTLINED_FUNCTION_26_14();
    sub_1A6123CC8();
    *(_BYTE *)(v2 - 112) = 2;
    sub_1A6123C74();
    *(_QWORD *)(v2 - 112) = *(_QWORD *)(v0 + v4[15]);
    *(_BYTE *)(v2 - 65) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191508);
    sub_1A6095C14();
    OUTLINED_FUNCTION_13_26();
    *(_QWORD *)(v2 - 112) = *(_QWORD *)(v0 + v4[16]);
    *(_BYTE *)(v2 - 65) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1914F8);
    sub_1A6095C90();
    OUTLINED_FUNCTION_13_26();
    OUTLINED_FUNCTION_49_8((__n128 *)(v0 + v4[17]));
    *(_BYTE *)(v2 - 65) = 5;
    sub_1A6095D0C();
    sub_1A6123C80();
  }
  OUTLINED_FUNCTION_44_7(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_20();
}

void Forecast.init(from:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_53_7();
}

void sub_1A6094560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1A85BB36C](&unk_1A6135450, a1);
  v6 = sub_1A6123C5C();
  *(_QWORD *)(v5 - 160) = v6;
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 176) = v3;
  *(_QWORD *)(v5 - 168) = v2;
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v1;
  type metadata accessor for Forecast();
}

void sub_1A60945CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v10 - 152) = a1;
  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v10 - 144) = (char *)&a9 - v12;
  *(_QWORD *)(v10 - 136) = v9;
  OUTLINED_FUNCTION_28_15(v9, v9[3]);
  v13 = *(_QWORD *)(v10 - 128);
  sub_1A6123DC4();
  if (!v13)
  {
    *(_QWORD *)(v10 - 128) = v11;
    sub_1A6123908();
    *(_BYTE *)(v10 - 65) = 0;
    *(_QWORD *)(v10 - 120) = *(_QWORD *)(v10 - 168);
    OUTLINED_FUNCTION_9_2();
  }
  OUTLINED_FUNCTION_45_9();
  OUTLINED_FUNCTION_46_7();
  OUTLINED_FUNCTION_20();
}

void sub_1A60948FC()
{
  Forecast.init(from:)();
}

void sub_1A609491C()
{
  Forecast.encode(to:)();
}

uint64_t sub_1A6094930()
{
  return static Forecast.== infix(_:_:)();
}

_QWORD *sub_1A6094940(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5F89108(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB508]);
}

uint64_t sub_1A609494C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for Forecast<A>, a3);
  return sub_1A6123974();
}

uint64_t sub_1A60949B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for Forecast<A>, a4);
  return sub_1A6123950();
}

uint64_t sub_1A6094A14(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for Forecast<A>, a1);
  return sub_1A6123980();
}

uint64_t sub_1A6094A60()
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for Forecast<A>);
  return sub_1A612395C();
}

uint64_t sub_1A6094AB0(uint64_t a1)
{
  MEMORY[0x1A85BB36C](&protocol conformance descriptor for Forecast<A>, a1);
  return sub_1A61239A4();
}

uint64_t Forecast<>.summary.getter()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = &v0[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED193AE0) + 56)];
  if (*((_QWORD *)v1 + 1))
  {
    v2 = *(_QWORD *)v1;
  }
  else
  {
    if (qword_1ED193BE8 != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_12_3(v3, (uint64_t)qword_1ED19DB18);
    v4 = OUTLINED_FUNCTION_10_3();
    if (OUTLINED_FUNCTION_21_16(v4))
    {
      *(_WORD *)OUTLINED_FUNCTION_10_8() = 0;
      OUTLINED_FUNCTION_11_25(&dword_1A5F87000, v5, v6, "Missing summary for minute forecast.");
      OUTLINED_FUNCTION_19_19();
    }

    v2 = 0;
  }
  OUTLINED_FUNCTION_304();
  return v2;
}

void static Forecast.== infix(_:_:)()
{
  sub_1A5FC81B0();
}

void Forecast<>.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_13_1();
  v2 = v1;
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_25_0(v4, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815A58);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_12();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_28_15(v2, v2[3]);
  OUTLINED_FUNCTION_38_12();
  OUTLINED_FUNCTION_47_7(&qword_1EE815A68);
  OUTLINED_FUNCTION_10_30();
  if (!v0)
  {
    OUTLINED_FUNCTION_37_10();
    sub_1A5FAF4C0(&qword_1EE813300, (void (*)(uint64_t))type metadata accessor for WeatherMetadata);
    OUTLINED_FUNCTION_9_26();
    OUTLINED_FUNCTION_30_16();
    type metadata accessor for HourWeather();
    sub_1A5FAF4C0(&qword_1ED191F38, (void (*)(uint64_t))type metadata accessor for HourWeather);
    OUTLINED_FUNCTION_23_18();
    OUTLINED_FUNCTION_8_27();
    OUTLINED_FUNCTION_4_29();
    OUTLINED_FUNCTION_57_7(v7, v8, (uint64_t *)&unk_1ED193AB8);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  OUTLINED_FUNCTION_20();
}

{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_13_1();
  v2 = v1;
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_25_0(v4, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815A78);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_12();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_28_15(v2, v2[3]);
  OUTLINED_FUNCTION_38_12();
  OUTLINED_FUNCTION_47_7(&qword_1EE815A88);
  OUTLINED_FUNCTION_10_30();
  if (!v0)
  {
    OUTLINED_FUNCTION_37_10();
    sub_1A5FAF4C0(&qword_1EE813300, (void (*)(uint64_t))type metadata accessor for WeatherMetadata);
    OUTLINED_FUNCTION_9_26();
    OUTLINED_FUNCTION_30_16();
    type metadata accessor for DayWeather();
    sub_1A5FAF4C0(&qword_1ED191F20, (void (*)(uint64_t))type metadata accessor for DayWeather);
    OUTLINED_FUNCTION_23_18();
    OUTLINED_FUNCTION_8_27();
    OUTLINED_FUNCTION_4_29();
    OUTLINED_FUNCTION_57_7(v7, v8, (uint64_t *)&unk_1ED193A90);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  OUTLINED_FUNCTION_20();
}

{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  char v27;

  OUTLINED_FUNCTION_13_1();
  v25 = v0;
  v2 = v1;
  v19 = v3;
  v22 = OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_11_0();
  v24 = v5;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815A98);
  v21 = *(_QWORD *)(v23 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_12();
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194050);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_28_15(v2, v2[3]);
  sub_1A6095FC0(0, &qword_1EE815AA0, (uint64_t (*)(_QWORD))_s20HourMarineCodingKeysOMa);
  sub_1A6095E88(&qword_1EE815AA8, &qword_1EE815AA0, (uint64_t (*)(_QWORD))_s20HourMarineCodingKeysOMa);
  v10 = v25;
  sub_1A6123DC4();
  if (!v10)
  {
    v11 = (uint64_t *)v9;
    v12 = (int *)v20;
    LOBYTE(v26) = 1;
    sub_1A5FAF4C0(&qword_1EE813300, (void (*)(uint64_t))type metadata accessor for WeatherMetadata);
    sub_1A6123C44();
    sub_1A5FA7D50(v24, (uint64_t)v11 + v12[13]);
    type metadata accessor for HourMarineWeather();
    LOBYTE(v26) = 0;
    sub_1A5FAF4C0(&qword_1EE815AB0, (void (*)(uint64_t))type metadata accessor for HourMarineWeather);
    v13 = sub_1A6123BE4();
    v14 = MEMORY[0x1E0DEE9D8];
    if (v13)
      v14 = v13;
    *v11 = v14;
    sub_1A6095E40();
    sub_1A6123BD8();
    OUTLINED_FUNCTION_35_16();
    v15 = v27;
    v16 = (char *)v11 + v12[17];
    *(_OWORD *)v16 = v26;
    v16[16] = v15;
    v17 = (uint64_t *)((char *)v11 + v12[14]);
    *v17 = 0;
    v17[1] = 0;
    *(uint64_t *)((char *)v11 + v12[15]) = 0;
    *(uint64_t *)((char *)v11 + v12[16]) = 0;
    sub_1A5FAA1A8((uint64_t)v11, v19, &qword_1ED194050);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  OUTLINED_FUNCTION_20();
}

void Forecast<>.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_13_1();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815A70);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_28_15(v2, v2[3]);
  OUTLINED_FUNCTION_22_16();
  OUTLINED_FUNCTION_55_4(&qword_1EE815A68);
  OUTLINED_FUNCTION_18_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193AB8);
  OUTLINED_FUNCTION_49();
  sub_1A5FAF4C0(&qword_1ED191718, (void (*)(uint64_t))type metadata accessor for WeatherMetadata);
  OUTLINED_FUNCTION_14_28();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194B98);
    sub_1A6095EBC();
    OUTLINED_FUNCTION_7_33();
  }
  OUTLINED_FUNCTION_34_12();
  OUTLINED_FUNCTION_46_7();
  OUTLINED_FUNCTION_20();
}

{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_13_1();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815A90);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_28_15(v2, v2[3]);
  OUTLINED_FUNCTION_22_16();
  OUTLINED_FUNCTION_55_4(&qword_1EE815A88);
  OUTLINED_FUNCTION_18_17();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED193A90);
  OUTLINED_FUNCTION_49();
  sub_1A5FAF4C0(&qword_1ED191718, (void (*)(uint64_t))type metadata accessor for WeatherMetadata);
  OUTLINED_FUNCTION_14_28();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194BA8);
    sub_1A6095F44();
    OUTLINED_FUNCTION_7_33();
  }
  OUTLINED_FUNCTION_34_12();
  OUTLINED_FUNCTION_46_7();
  OUTLINED_FUNCTION_20();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  OUTLINED_FUNCTION_13_1();
  v2 = v0;
  v4 = v3;
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE815AB8) - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_28_15(v4, v4[3]);
  OUTLINED_FUNCTION_22_16();
  sub_1A6095E88(&qword_1EE815AA8, &qword_1EE815AA0, (uint64_t (*)(_QWORD))_s20HourMarineCodingKeysOMa);
  sub_1A6123DD0();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194050);
  OUTLINED_FUNCTION_49();
  sub_1A5FAF4C0(&qword_1ED191718, (void (*)(uint64_t))type metadata accessor for WeatherMetadata);
  OUTLINED_FUNCTION_26_14();
  sub_1A6123CC8();
  if (v1)
  {
    v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815AC0);
    sub_1A609600C();
    OUTLINED_FUNCTION_7_33();
    OUTLINED_FUNCTION_49_8((__n128 *)(v2 + *(int *)(v6 + 68)));
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815AD8);
    sub_1A6096088();
    OUTLINED_FUNCTION_7_33();
    v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  }
  OUTLINED_FUNCTION_44_7(v7);
  OUTLINED_FUNCTION_46_7();
  OUTLINED_FUNCTION_20();
}

uint64_t sub_1A6094E80()
{
  return sub_1A5FDD6F4();
}

uint64_t sub_1A6094E9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A5FCEF5C(*a1, *a2);
}

uint64_t sub_1A6094EA8()
{
  unsigned __int8 *v0;

  return sub_1A61093E4(*v0);
}

uint64_t sub_1A6094EB0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A6002198(a1, *v1);
}

uint64_t sub_1A6094EB8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1A6105EFC(a1, *v1);
}

uint64_t sub_1A6094EC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5FDD6F4();
  *a1 = result;
  return result;
}

uint64_t sub_1A6094EF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6094E80();
  *a1 = result;
  return result;
}

uint64_t sub_1A6094F18()
{
  sub_1A6095E88(&qword_1EE815A68, &qword_1EE815A60, (uint64_t (*)(_QWORD))_s14HourCodingKeysOMa);
  return sub_1A6123DE8();
}

uint64_t sub_1A6094F60()
{
  sub_1A6095E88(&qword_1EE815A68, &qword_1EE815A60, (uint64_t (*)(_QWORD))_s14HourCodingKeysOMa);
  return sub_1A6123DF4();
}

uint64_t sub_1A6095270()
{
  return sub_1A5FDD6F4();
}

uint64_t sub_1A609528C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x617461646174656DLL;
  else
    return 0x7473616365726F66;
}

void sub_1A60952BC()
{
  sub_1A610581C();
}

uint64_t sub_1A60952C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5FDD6F4();
  *a1 = result;
  return result;
}

void sub_1A60952F8(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_1A609528C(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_51();
}

uint64_t sub_1A609531C()
{
  char *v0;

  return sub_1A609528C(*v0);
}

uint64_t sub_1A6095324@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6095270();
  *a1 = result;
  return result;
}

uint64_t sub_1A6095348()
{
  sub_1A6095E88(&qword_1EE815A88, &qword_1EE815A80, (uint64_t (*)(_QWORD))_s13DayCodingKeysOMa);
  return sub_1A6123DE8();
}

uint64_t sub_1A6095390()
{
  sub_1A6095E88(&qword_1EE815A88, &qword_1EE815A80, (uint64_t (*)(_QWORD))_s13DayCodingKeysOMa);
  return sub_1A6123DF4();
}

double Forecast<>.closestWaterLocation.getter()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = (_BYTE *)(v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED194050) + 68));
  if ((v1[16] & 1) == 0)
    return *(double *)v1;
  if (qword_1ED193BE8 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_24_1();
  v3 = OUTLINED_FUNCTION_12_3(v2, (uint64_t)qword_1ED19DB18);
  v4 = sub_1A6123A4C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)OUTLINED_FUNCTION_10_8();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1A5F87000, v3, v4, "Missing closestWaterLocation in marine forecast.", v5, 2u);
    MEMORY[0x1A85BB42C](v5, -1, -1);
  }

  return 0.0;
}

uint64_t sub_1A60958F0()
{
  unint64_t v0;

  v0 = sub_1A6123BB4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1A609593C(char a1)
{
  if (!a1)
    return 0x7473616365726F66;
  if (a1 == 1)
    return 0x617461646174656DLL;
  return 0x6F4C656E6972616DLL;
}

void sub_1A60959A0(unsigned __int8 *a1, char *a2)
{
  sub_1A5FCEFD0(*a1, *a2);
}

void sub_1A60959AC()
{
  sub_1A6105838();
}

uint64_t sub_1A60959B4()
{
  return sub_1A60021E0();
}

void sub_1A60959BC()
{
  sub_1A6105E74();
}

uint64_t sub_1A60959C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A60958F0();
  *a1 = result;
  return result;
}

void sub_1A60959F0(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_1A609593C(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_51();
}

uint64_t sub_1A6095A14()
{
  char *v0;

  return sub_1A609593C(*v0);
}

uint64_t sub_1A6095A1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A6095938();
  *a1 = result;
  return result;
}

uint64_t sub_1A6095A40()
{
  sub_1A6095E88(&qword_1EE815AA8, &qword_1EE815AA0, (uint64_t (*)(_QWORD))_s20HourMarineCodingKeysOMa);
  return sub_1A6123DE8();
}

uint64_t sub_1A6095A88()
{
  sub_1A6095E88(&qword_1EE815AA8, &qword_1EE815AA0, (uint64_t (*)(_QWORD))_s20HourMarineCodingKeysOMa);
  return sub_1A6123DF4();
}

uint64_t sub_1A6095AD0(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    OUTLINED_FUNCTION_36_13();
    result = OUTLINED_FUNCTION_24_16();
    __break(1u);
  }
  else if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815CB0);
    result = sub_1A61238F0();
    *(_QWORD *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1A6095B4C(uint64_t a1)
{
  return sub_1A6095B64(a1, (void (*)(_QWORD))type metadata accessor for MinuteSummary);
}

uint64_t sub_1A6095B58(uint64_t a1)
{
  return sub_1A6095B64(a1, (void (*)(_QWORD))type metadata accessor for MinuteCondition);
}

uint64_t sub_1A6095B64(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t result;

  if (a1 < 0)
  {
    OUTLINED_FUNCTION_36_13();
    result = OUTLINED_FUNCTION_24_16();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      v4 = sub_1A61238F0();
      *(_QWORD *)(v4 + 16) = a1;
    }
    else
    {
      v4 = MEMORY[0x1E0DEE9D8];
    }
    a2(0);
    return v4;
  }
  return result;
}

void type metadata accessor for Forecast.CodingKeys()
{
  JUMPOUT(0x1A85BB2E8);
}

unint64_t sub_1A6095C14()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED191510;
  if (!qword_1ED191510)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED191508);
    sub_1A5FAF4C0(&qword_1ED191178, (void (*)(uint64_t))type metadata accessor for MinuteCondition);
    v3 = v2;
    result = MEMORY[0x1A85BB36C](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED191510);
  }
  return result;
}

unint64_t sub_1A6095C90()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED191500;
  if (!qword_1ED191500)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1914F8);
    sub_1A5FAF4C0(&qword_1ED191130, (void (*)(uint64_t))type metadata accessor for MinuteSummary);
    v3 = v2;
    result = MEMORY[0x1A85BB36C](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED191500);
  }
  return result;
}

unint64_t sub_1A6095D0C()
{
  unint64_t result;

  result = qword_1EE815A28;
  if (!qword_1EE815A28)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for Coordinate, &type metadata for Coordinate);
    atomic_store(result, (unint64_t *)&qword_1EE815A28);
  }
  return result;
}

unint64_t sub_1A6095D48()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EE815A30;
  if (!qword_1EE815A30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED191508);
    sub_1A5FAF4C0(&qword_1EE815A38, (void (*)(uint64_t))type metadata accessor for MinuteCondition);
    v3 = v2;
    result = MEMORY[0x1A85BB36C](MEMORY[0x1E0DEAF40], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EE815A30);
  }
  return result;
}

unint64_t sub_1A6095DC4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EE815A40;
  if (!qword_1EE815A40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1914F8);
    sub_1A5FAF4C0(&qword_1EE815A48, (void (*)(uint64_t))type metadata accessor for MinuteSummary);
    v3 = v2;
    result = MEMORY[0x1A85BB36C](MEMORY[0x1E0DEAF40], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EE815A40);
  }
  return result;
}

unint64_t sub_1A6095E40()
{
  unint64_t result;

  result = qword_1EE815A50;
  if (!qword_1EE815A50)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for Coordinate, &type metadata for Coordinate);
    atomic_store(result, (unint64_t *)&qword_1EE815A50);
  }
  return result;
}

uint64_t _s14HourCodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s14HourCodingKeysOMn);
}

void sub_1A6095E88(_QWORD *a1, unint64_t *a2, uint64_t (*a3)(_QWORD))
{
  if (!*a1)
  {
    sub_1A6095FC0(255, a2, a3);
    OUTLINED_FUNCTION_11_2();
  }
  OUTLINED_FUNCTION_51();
}

unint64_t sub_1A6095EBC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED194BA0;
  if (!qword_1ED194BA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED194B98);
    sub_1A5FAF4C0(&qword_1ED191F28, (void (*)(uint64_t))type metadata accessor for HourWeather);
    v3 = v2;
    result = MEMORY[0x1A85BB36C](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED194BA0);
  }
  return result;
}

uint64_t _s13DayCodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s13DayCodingKeysOMn);
}

unint64_t sub_1A6095F44()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED194BB0;
  if (!qword_1ED194BB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED194BA8);
    sub_1A5FAF4C0(&qword_1ED191F10, (void (*)(uint64_t))type metadata accessor for DayWeather);
    v3 = v2;
    result = MEMORY[0x1A85BB36C](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED194BB0);
  }
  return result;
}

void sub_1A6095FC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t _s20HourMarineCodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s20HourMarineCodingKeysOMn);
}

unint64_t sub_1A609600C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EE815AC8;
  if (!qword_1EE815AC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE815AC0);
    sub_1A5FAF4C0(&qword_1EE815AD0, (void (*)(uint64_t))type metadata accessor for HourMarineWeather);
    v3 = v2;
    result = MEMORY[0x1A85BB36C](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EE815AC8);
  }
  return result;
}

unint64_t sub_1A6096088()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE815AE0[0];
  if (!qword_1EE815AE0[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE815AD8);
    v2 = sub_1A6095D0C();
    result = MEMORY[0x1A85BB36C](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, qword_1EE815AE0);
  }
  return result;
}

uint64_t sub_1A60960EC(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85BB36C](&protocol conformance descriptor for Forecast<A>);
  return MEMORY[0x1A85BB36C](MEMORY[0x1E0DEDE40], a1, &v3);
}

uint64_t sub_1A6096134(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85BB36C](&protocol conformance descriptor for Forecast<A>);
  return MEMORY[0x1A85BB36C](MEMORY[0x1E0DEDE28], a1, &v3);
}

uint64_t *sub_1A609617C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  int *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[13];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A6121F58();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = (int *)type metadata accessor for WeatherMetadata();
    v12(&v9[v13[5]], &v10[v13[5]], v11);
    *(_QWORD *)&v9[v13[6]] = *(_QWORD *)&v10[v13[6]];
    *(_QWORD *)&v9[v13[7]] = *(_QWORD *)&v10[v13[7]];
    *(_QWORD *)&v9[v13[8]] = *(_QWORD *)&v10[v13[8]];
    v14 = a3[14];
    v15 = a3[15];
    v16 = (uint64_t *)((char *)v7 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *(uint64_t *)((char *)v7 + v15) = *(uint64_t *)((char *)a2 + v15);
    v19 = a3[17];
    *(uint64_t *)((char *)v7 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    v20 = (char *)v7 + v19;
    v21 = (char *)a2 + v19;
    *(_OWORD *)v20 = *(_OWORD *)v21;
    v20[16] = v21[16];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

_QWORD *sub_1A60962C4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[13];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6121F58();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = (int *)type metadata accessor for WeatherMetadata();
  v10(&v7[v11[5]], &v8[v11[5]], v9);
  *(_QWORD *)&v7[v11[6]] = *(_QWORD *)&v8[v11[6]];
  *(_QWORD *)&v7[v11[7]] = *(_QWORD *)&v8[v11[7]];
  *(_QWORD *)&v7[v11[8]] = *(_QWORD *)&v8[v11[8]];
  swift_retain();
  swift_release();
  v12 = a3[14];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[17];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_OWORD *)v17;
  v16[16] = v17[16];
  *(_OWORD *)v16 = v18;
  return a1;
}

_QWORD *sub_1A6096420(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  *a1 = *a2;
  v6 = a3[13];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6121F58();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = (int *)type metadata accessor for WeatherMetadata();
  v10(&v7[v11[5]], &v8[v11[5]], v9);
  *(_QWORD *)&v7[v11[6]] = *(_QWORD *)&v8[v11[6]];
  *(_QWORD *)&v7[v11[7]] = *(_QWORD *)&v8[v11[7]];
  *(_QWORD *)&v7[v11[8]] = *(_QWORD *)&v8[v11[8]];
  v12 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v13 = a3[17];
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  return a1;
}

_QWORD *sub_1A6096514(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[13];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A6121F58();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v11 = (int *)type metadata accessor for WeatherMetadata();
  v10(&v7[v11[5]], &v8[v11[5]], v9);
  *(_QWORD *)&v7[v11[6]] = *(_QWORD *)&v8[v11[6]];
  *(_QWORD *)&v7[v11[7]] = *(_QWORD *)&v8[v11[7]];
  *(_QWORD *)&v7[v11[8]] = *(_QWORD *)&v8[v11[8]];
  swift_release();
  v12 = a3[14];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  v17 = a3[17];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  return a1;
}

uint64_t sub_1A6096640(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_49();
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 52), a2, v8);
  }
}

_QWORD *sub_1A60966B0(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_49();
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + *(int *)(a4 + 52), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A6096718()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A6096720(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A609676C + 4 * byte_1A6134C2B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A60967A0 + 4 * byte_1A6134C26[v4]))();
}

uint64_t sub_1A60967A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60967A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A60967B0);
  return result;
}

uint64_t sub_1A60967BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A60967C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A60967C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60967D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60967E0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A609682C + 4 * byte_1A6134C35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A6096860 + 4 * byte_1A6134C30[v4]))();
}

uint64_t sub_1A6096860(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6096868(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A6096870);
  return result;
}

uint64_t sub_1A609687C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6096884);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A6096888(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6096890(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A609689C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A60968E8 + 4 * byte_1A6134C3F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A609691C + 4 * byte_1A6134C3A[v4]))();
}

uint64_t sub_1A609691C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6096924(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A609692CLL);
  return result;
}

uint64_t sub_1A6096938(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A6096940);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A6096944(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A609694C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A6096958()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A6096968()
{
  sub_1A6095E88(&qword_1EE815C68, &qword_1EE815A60, (uint64_t (*)(_QWORD))_s14HourCodingKeysOMa);
}

void sub_1A609699C()
{
  sub_1A6095E88(&qword_1EE815C70, &qword_1EE815A80, (uint64_t (*)(_QWORD))_s13DayCodingKeysOMa);
}

void sub_1A60969D0()
{
  sub_1A6095E88(&qword_1EE815C78, &qword_1EE815AA0, (uint64_t (*)(_QWORD))_s20HourMarineCodingKeysOMa);
}

void sub_1A6096A04()
{
  sub_1A6095E88(&qword_1EE815C80, &qword_1EE815AA0, (uint64_t (*)(_QWORD))_s20HourMarineCodingKeysOMa);
}

void sub_1A6096A38()
{
  sub_1A6095E88(&qword_1EE815C88, &qword_1EE815AA0, (uint64_t (*)(_QWORD))_s20HourMarineCodingKeysOMa);
}

void sub_1A6096A6C()
{
  sub_1A6095E88(&qword_1EE815C90, &qword_1EE815A80, (uint64_t (*)(_QWORD))_s13DayCodingKeysOMa);
}

void sub_1A6096AA0()
{
  sub_1A6095E88(&qword_1EE815C98, &qword_1EE815A80, (uint64_t (*)(_QWORD))_s13DayCodingKeysOMa);
}

void sub_1A6096AD4()
{
  sub_1A6095E88(&qword_1EE815CA0, &qword_1EE815A60, (uint64_t (*)(_QWORD))_s14HourCodingKeysOMa);
}

void sub_1A6096B08()
{
  sub_1A6095E88(&qword_1EE815CA8, &qword_1EE815A60, (uint64_t (*)(_QWORD))_s14HourCodingKeysOMa);
}

void sub_1A6096B3C()
{
  JUMPOUT(0x1A85BB36CLL);
}

void sub_1A6096B4C()
{
  JUMPOUT(0x1A85BB36CLL);
}

void Precipitation.description.getter()
{
  __asm { BR              X9 }
}

void sub_1A6096BA8()
{
  if (qword_1ED1925A0 != -1)
    swift_once();
  (id)qword_1ED19DB10;
  OUTLINED_FUNCTION_9_27();
  OUTLINED_FUNCTION_1();
  sub_1A6121DA8();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_4_1();
}

void Precipitation.standaloneDescription.getter()
{
  __asm { BR              X9 }
}

void sub_1A6096D84()
{
  id v0;

  if (qword_1ED1925A0 != -1)
    swift_once();
  v0 = (id)qword_1ED19DB10;
  OUTLINED_FUNCTION_6_31();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_1_39();
  sub_1A6121DA8();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_4_1();
}

void Precipitation.accessibilityDescription.getter()
{
  __asm { BR              X9 }
}

void sub_1A6096FD4()
{
  if (qword_1ED1925A0 != -1)
    swift_once();
  (id)qword_1ED19DB10;
  OUTLINED_FUNCTION_9_27();
  OUTLINED_FUNCTION_1();
  sub_1A6121DA8();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_4_1();
}

WeatherKit::Precipitation_optional __swiftcall Precipitation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  WeatherKit::Precipitation_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A6123BB4();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static Precipitation.allCases.getter()
{
  return &unk_1E4FE0958;
}

WeatherKit::Precipitation_optional sub_1A60971E0(Swift::String *a1)
{
  return Precipitation.init(rawValue:)(*a1);
}

void sub_1A60971EC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4FE0958;
}

void sub_1A6097200()
{
  sub_1A6105844();
}

void sub_1A6097208()
{
  sub_1A6105AAC();
}

uint64_t sub_1A6097210()
{
  sub_1A609763C();
  return sub_1A61238B4();
}

uint64_t sub_1A609726C()
{
  sub_1A609763C();
  return sub_1A612389C();
}

Swift::String_optional __swiftcall Precipitation.accessibilityDescription(with:)(Swift::Double with)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String_optional result;

  sub_1A6097370(*v1);
  v4 = v3;
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED191E60);
    v6 = swift_allocObject();
    v7 = MEMORY[0x1E0DEB070];
    *(_OWORD *)(v6 + 16) = xmmword_1A6124350;
    v8 = MEMORY[0x1E0DEB100];
    *(_QWORD *)(v6 + 56) = v7;
    *(_QWORD *)(v6 + 64) = v8;
    *(Swift::Double *)(v6 + 32) = with * 100.0;
    v4 = sub_1A61237E8();
    v10 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v11 = v4;
  v12 = v10;
  result.value._object = v12;
  result.value._countAndFlagsBits = v11;
  return result;
}

void sub_1A6097370(char a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1A60973A4()
{
  id v0;
  uint64_t v1;

  if (qword_1ED1925A0 != -1)
    swift_once();
  v0 = (id)qword_1ED19DB10;
  v1 = sub_1A6121DA8();

  return v1;
}

unint64_t sub_1A60975F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE815CB8;
  if (!qword_1EE815CB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE815CC0);
    result = MEMORY[0x1A85BB36C](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE815CB8);
  }
  return result;
}

unint64_t sub_1A609763C()
{
  unint64_t result;

  result = qword_1ED191140;
  if (!qword_1ED191140)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for Precipitation, &type metadata for Precipitation);
    atomic_store(result, (unint64_t *)&qword_1ED191140);
  }
  return result;
}

WeatherKit::WeatherQueryMarineHourlyRelativeRange __swiftcall WeatherQueryMarineHourlyRelativeRange.init(start:end:relativeTo:)(Swift::Int start, Swift::Int end, WeatherKit::WeatherQueryMarineHourlyRelativeRange::RelativeTo relativeTo)
{
  uint64_t v3;
  char v4;
  WeatherKit::WeatherQueryMarineHourlyRelativeRange result;

  v4 = *(_BYTE *)relativeTo;
  *(_QWORD *)v3 = start;
  *(_QWORD *)(v3 + 8) = end;
  *(_BYTE *)(v3 + 16) = v4;
  result.end = end;
  result.start = start;
  result.relativeTo = relativeTo;
  return result;
}

BOOL static WeatherQueryMarineHourlyRelativeRange.RelativeTo.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t WeatherQueryMarineHourlyRelativeRange.RelativeTo.hash(into:)()
{
  return sub_1A6123D70();
}

uint64_t WeatherQueryMarineHourlyRelativeRange.RelativeTo.hashValue.getter()
{
  sub_1A6123D64();
  sub_1A6123D70();
  return sub_1A6123D88();
}

unint64_t sub_1A609771C()
{
  unint64_t result;

  result = qword_1EE815CC8;
  if (!qword_1EE815CC8)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherQueryMarineHourlyRelativeRange.RelativeTo, &type metadata for WeatherQueryMarineHourlyRelativeRange.RelativeTo);
    atomic_store(result, (unint64_t *)&qword_1EE815CC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherQueryMarineHourlyRelativeRange()
{
  return &type metadata for WeatherQueryMarineHourlyRelativeRange;
}

uint64_t storeEnumTagSinglePayload for WeatherQueryMarineHourlyRelativeRange.RelativeTo(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A60977B4 + 4 * byte_1A6135655[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A60977E8 + 4 * byte_1A6135650[v4]))();
}

uint64_t sub_1A60977E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A60977F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A60977F8);
  return result;
}

uint64_t sub_1A6097804(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A609780CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A6097810(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A6097818(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WeatherQueryMarineHourlyRelativeRange.RelativeTo()
{
  return &type metadata for WeatherQueryMarineHourlyRelativeRange.RelativeTo;
}

int *WeatherChange.init(date:highTemperature:lowTemperature:dayPrecipitationAmount:nightPrecipitationAmount:)@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, unsigned __int8 a3@<W2>, unsigned __int8 a4@<W3>, unsigned __int8 a5@<W4>, uint64_t a6@<X8>)
{
  char v9;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int *result;
  char v18;
  char v19;
  char v20;

  v9 = a2;
  v12 = a5;
  v13 = a4;
  v14 = a3;
  v15 = a2;
  v16 = OUTLINED_FUNCTION_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a6, a1, v16);
  if (v15 == 3)
    v9 = 2;
  result = (int *)OUTLINED_FUNCTION_0_35();
  *(_BYTE *)(a6 + result[5]) = v9;
  if (v14 == 3)
    v18 = 2;
  else
    v18 = a3;
  *(_BYTE *)(a6 + result[6]) = v18;
  if (v13 == 3)
    v19 = 2;
  else
    v19 = a4;
  *(_BYTE *)(a6 + result[7]) = v19;
  if (v12 == 3)
    v20 = 2;
  else
    v20 = a5;
  *(_BYTE *)(a6 + result[8]) = v20;
  return result;
}

uint64_t sub_1A60978F8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v8;

  v3 = a1 == 0x6573616572636E69 && a2 == 0xE800000000000000;
  if (v3 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6573616572636564 && a2 == 0xE800000000000000;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x796461657473 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1A6123CF8();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1A6097A28(char a1)
{
  if (!a1)
    return 0x6573616572636E69;
  if (a1 == 1)
    return 0x6573616572636564;
  return 0x796461657473;
}

uint64_t sub_1A6097A74()
{
  char *v0;

  return sub_1A6097A28(*v0);
}

uint64_t sub_1A6097A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A60978F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6097AA0()
{
  sub_1A6098A38();
  return sub_1A6123DE8();
}

uint64_t sub_1A6097AC8()
{
  sub_1A6098A38();
  return sub_1A6123DF4();
}

uint64_t sub_1A6097AF0()
{
  sub_1A6098AB0();
  return sub_1A6123DE8();
}

uint64_t sub_1A6097B18()
{
  sub_1A6098AB0();
  return sub_1A6123DF4();
}

uint64_t sub_1A6097B40()
{
  sub_1A6098AEC();
  return sub_1A6123DE8();
}

uint64_t sub_1A6097B68()
{
  sub_1A6098AEC();
  return sub_1A6123DF4();
}

uint64_t sub_1A6097B90()
{
  sub_1A6098A74();
  return sub_1A6123DE8();
}

uint64_t sub_1A6097BB8()
{
  sub_1A6098A74();
  return sub_1A6123DF4();
}

uint64_t sub_1A6097BE4()
{
  unsigned __int8 *v0;

  return sub_1A609802C(*v0);
}

uint64_t WeatherChange.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_30(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t WeatherChange.date.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_6();
  return OUTLINED_FUNCTION_30(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*WeatherChange.date.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherChange.highTemperature.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_0_35() + 20));
}

void WeatherChange.highTemperature.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_35() + 20)) = a1;
  OUTLINED_FUNCTION_51();
}

double (*WeatherChange.highTemperature.modify())(double, double)
{
  OUTLINED_FUNCTION_0_35();
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherChange.lowTemperature.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_0_35() + 24));
}

void WeatherChange.lowTemperature.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_35() + 24)) = a1;
  OUTLINED_FUNCTION_51();
}

double (*WeatherChange.lowTemperature.modify())(double, double)
{
  OUTLINED_FUNCTION_0_35();
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherChange.dayPrecipitationAmount.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_0_35() + 28));
}

void WeatherChange.dayPrecipitationAmount.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_35() + 28)) = a1;
  OUTLINED_FUNCTION_51();
}

double (*WeatherChange.dayPrecipitationAmount.modify())(double, double)
{
  OUTLINED_FUNCTION_0_35();
  return GEOLocationCoordinate2DMake;
}

uint64_t WeatherChange.nightPrecipitationAmount.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_0_35() + 32));
}

void WeatherChange.nightPrecipitationAmount.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_0_35() + 32)) = a1;
  OUTLINED_FUNCTION_51();
}

double (*WeatherChange.nightPrecipitationAmount.modify())(double, double)
{
  OUTLINED_FUNCTION_0_35();
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1A6097DEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A6123CF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x706D655468676968 && a2 == 0xEF65727574617265;
    if (v6 || (sub_1A6123CF8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x65706D6554776F6CLL && a2 == 0xEE00657275746172;
      if (v7 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x80000001A61502B0 || (sub_1A6123CF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000018 && a2 == 0x80000001A61502D0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = sub_1A6123CF8();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

void _s10WeatherKit0A6ChangeV9DirectionO9hashValueSivg_0()
{
  sub_1A6123D64();
  sub_1A6123D70();
  sub_1A6123D88();
  OUTLINED_FUNCTION_16();
}

uint64_t sub_1A609806C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A6098098 + 4 * byte_1A6135710[a1]))(1702125924, 0xE400000000000000);
}

uint64_t sub_1A6098098()
{
  return 0x706D655468676968;
}

uint64_t sub_1A60980BC()
{
  return 0x65706D6554776F6CLL;
}

unint64_t sub_1A60980E0()
{
  return 0xD000000000000016;
}

unint64_t sub_1A60980FC()
{
  return 0xD000000000000018;
}

void sub_1A609811C()
{
  _s10WeatherKit0A6ChangeV9DirectionO9hashValueSivg_0();
}

void sub_1A6098134()
{
  sub_1A6123D64();
  sub_1A6123D70();
  sub_1A6123D88();
  OUTLINED_FUNCTION_16();
}

uint64_t sub_1A609816C()
{
  unsigned __int8 *v0;

  return sub_1A609806C(*v0);
}

uint64_t sub_1A6098174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A6097DEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A6098198()
{
  sub_1A6098444();
  return sub_1A6123DE8();
}

uint64_t sub_1A60981C0()
{
  sub_1A6098444();
  return sub_1A6123DF4();
}

BOOL static WeatherChange.== infix(_:_:)()
{
  char v0;

  if ((sub_1A6121F1C() & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_0_35();
  OUTLINED_FUNCTION_6_32();
  if (!v0)
    return 0;
  OUTLINED_FUNCTION_6_32();
  if (!v0)
    return 0;
  OUTLINED_FUNCTION_6_32();
  if (!v0)
    return 0;
  OUTLINED_FUNCTION_6_32();
  return v0 != 0;
}

BOOL static WeatherChange.Direction.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_1A6098260(char *a1, char *a2)
{
  return static WeatherChange.Direction.== infix(_:_:)(*a1, *a2);
}

uint64_t WeatherChange.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED194BB8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_12();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6098444();
  sub_1A6123DD0();
  sub_1A6121F58();
  sub_1A5FAF4F4(&qword_1ED191698, MEMORY[0x1E0CB0890]);
  sub_1A6123CC8();
  if (!v1)
  {
    type metadata accessor for WeatherChange();
    sub_1A6098480();
    OUTLINED_FUNCTION_1_40();
    OUTLINED_FUNCTION_1_40();
    OUTLINED_FUNCTION_1_40();
    OUTLINED_FUNCTION_1_40();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_1A6098444()
{
  unint64_t result;

  result = qword_1ED194BC0;
  if (!qword_1ED194BC0)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6135CD4, &type metadata for WeatherChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED194BC0);
  }
  return result;
}

unint64_t sub_1A6098480()
{
  unint64_t result;

  result = qword_1EE815CD0;
  if (!qword_1EE815CD0)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherChange.Direction, &type metadata for WeatherChange.Direction);
    atomic_store(result, (unint64_t *)&qword_1EE815CD0);
  }
  return result;
}

void WeatherChange.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v3 = sub_1A6121F58();
  v15 = *(_QWORD *)(v3 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_8(v5, v12);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815CD8);
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_0();
  v7 = (int *)type metadata accessor for WeatherChange();
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0();
  v11 = v10 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6098444();
  sub_1A6123DC4();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_1A5FAF4F4(&qword_1EE812DF0, MEMORY[0x1E0CB08C0]);
    sub_1A6123C44();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v11, v16, v3);
    sub_1A6098768();
    OUTLINED_FUNCTION_2_37();
    *(_BYTE *)(v11 + v7[5]) = v21;
    OUTLINED_FUNCTION_2_37();
    *(_BYTE *)(v11 + v7[6]) = v20;
    OUTLINED_FUNCTION_2_37();
    *(_BYTE *)(v11 + v7[7]) = v19;
    OUTLINED_FUNCTION_2_37();
    OUTLINED_FUNCTION_8_29(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *(_BYTE *)(v11 + v7[8]) = v18;
    sub_1A60987A4(v11, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1A60987E8(v11);
  }
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A6098768()
{
  unint64_t result;

  result = qword_1EE815CE0;
  if (!qword_1EE815CE0)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherChange.Direction, &type metadata for WeatherChange.Direction);
    atomic_store(result, (unint64_t *)&qword_1EE815CE0);
  }
  return result;
}

uint64_t sub_1A60987A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WeatherChange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A60987E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WeatherChange();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A6098824(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  WeatherChange.init(from:)(a1, a2);
}

uint64_t sub_1A6098838(_QWORD *a1)
{
  return WeatherChange.encode(to:)(a1);
}

void WeatherChange.Direction.encode(to:)(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815CE8);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_11_0();
  v21 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815CF0);
  v19 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_0();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815CF8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_0();
  v16 = v15 - v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815D00);
  v24 = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_54_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6098A38();
  sub_1A6123DD0();
  if (a2)
  {
    if (a2 == 1)
    {
      sub_1A6098AB0();
      OUTLINED_FUNCTION_3_33();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v11, v20);
    }
    else
    {
      OUTLINED_FUNCTION_16_26();
      OUTLINED_FUNCTION_3_33();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
  }
  else
  {
    sub_1A6098AEC();
    OUTLINED_FUNCTION_3_33();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
  }
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v2, v17);
  OUTLINED_FUNCTION_20();
}

unint64_t sub_1A6098A38()
{
  unint64_t result;

  result = qword_1EE815D08;
  if (!qword_1EE815D08)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6135C84, &type metadata for WeatherChange.Direction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815D08);
  }
  return result;
}

unint64_t sub_1A6098A74()
{
  unint64_t result;

  result = qword_1EE815D10;
  if (!qword_1EE815D10)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6135C34, &type metadata for WeatherChange.Direction.SteadyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815D10);
  }
  return result;
}

unint64_t sub_1A6098AB0()
{
  unint64_t result;

  result = qword_1EE815D18;
  if (!qword_1EE815D18)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6135BE4, &type metadata for WeatherChange.Direction.DecreaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815D18);
  }
  return result;
}

unint64_t sub_1A6098AEC()
{
  unint64_t result;

  result = qword_1EE815D20;
  if (!qword_1EE815D20)
  {
    result = MEMORY[0x1A85BB36C](&unk_1A6135B94, &type metadata for WeatherChange.Direction.IncreaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE815D20);
  }
  return result;
}

uint64_t WeatherChange.Direction.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815D28);
  v33 = *(_QWORD *)(v30 - 8);
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_8(v5, v25);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815D30);
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  OUTLINED_FUNCTION_41();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_11_0();
  v31 = v8;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815D38);
  v9 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_54_0();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE815D40);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_12();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A6098A38();
  sub_1A6123DC4();
  if (v34)
    goto LABEL_11;
  v26 = v1;
  v35 = (uint64_t)a1;
  v12 = sub_1A6123C50();
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13)
  {
LABEL_8:
    v19 = sub_1A6123B48();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE8134C8);
    *v21 = &type metadata for WeatherChange.Direction;
    sub_1A6123BCC();
    sub_1A6123B3C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v26, v10);
    a1 = (_QWORD *)v35;
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  v14 = v10;
  v10 = *(unsigned __int8 *)(v12 + 32);
  sub_1A5FF62F0(1, v13, v12, v12 + 32, 0, (2 * v13) | 1);
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  if (v16 != v18 >> 1)
  {
    v10 = v14;
    goto LABEL_8;
  }
  if ((_DWORD)v10)
  {
    if ((_DWORD)v10 == 1)
    {
      sub_1A6098AB0();
      OUTLINED_FUNCTION_11_27();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v31, v29);
    }
    else
    {
      OUTLINED_FUNCTION_16_26();
      OUTLINED_FUNCTION_11_27();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v30);
    }
  }
  else
  {
    sub_1A6098AEC();
    sub_1A6123BC0();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v27);
  }
  swift_unknownObjectRelease();
  v23 = OUTLINED_FUNCTION_19_20();
  v24(v23);
  __swift_destroy_boxed_opaque_existential_1(v35);
  return v10;
}

uint64_t sub_1A6098EBC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = WeatherChange.Direction.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1A6098EE4(_QWORD *a1)
{
  char *v1;

  WeatherChange.Direction.encode(to:)(a1, *v1);
}

unint64_t sub_1A6098F00()
{
  unint64_t result;

  result = qword_1EE815D48;
  if (!qword_1EE815D48)
  {
    result = MEMORY[0x1A85BB36C](&protocol conformance descriptor for WeatherChange.Direction, &type metadata for WeatherChange.Direction);
    atomic_store(result, (unint64_t *)&qword_1EE815D48);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for WeatherChange(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A6121F58();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
  }
  return a1;
}

uint64_t destroy for WeatherChange(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A6121F58();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for WeatherChange(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t assignWithCopy for WeatherChange(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for WeatherChange(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1A6121F58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

